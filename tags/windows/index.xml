<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Windows - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/windows/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/windows/index.xml" />
	<id>tag:text.Baldanders.info,2015-12-04:/</id>
	<updated>2015-12-04T23:14:34+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15</generator>

	
	<entry>
		<title>Windows 用バイナリ・エディタ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/binary-editor/" />
		<id>tag:text.Baldanders.info,2015-12-04:/remark/2015/binary-editor/</id>
		<published>2015-12-04T23:14:34+09:00</published>
		<updated>2015-12-05T17:12:51+09:00</updated>
		<summary>Windows で EBCDIC を扱えるバイナリ・エディタを紹介。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;長らく組込み開発から離れているせいもあるが，昨今めっきりバイナリデータを触る機会が減った。
データを dump out することはあっても&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:021791166dbffd1ec8731dec1d23ca3a:dump&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:021791166dbffd1ec8731dec1d23ca3a:dump&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，直に弄ることは少なくなった。
それでも，全くなくなったわけではなく，そうなった時にいつも「ええつと，バイナリ・エディタってどこにあるっけ？」と探しまわることになるのだ。&lt;/p&gt;

&lt;p&gt;特に最近は EBCDIC，それも PACKED DECIMAL を弄らないといけなくて，たまにモニタを殴りたくなる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://motoama.chu.jp/program/905&#34;&gt;EBICDICで符号付数値型がなんだって？ « motoama&amp;rsquo;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.simotime.com/datapk01.htm&#34;&gt;Packed-Decimal Format, Description and Discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そうでなくても（ASCII コードに慣れてる身としては） EBCDIC は直感的じゃないのに。&lt;/p&gt;

&lt;h2 id=&#34;windows-で使えるバイナリ-エディタ:021791166dbffd1ec8731dec1d23ca3a&#34;&gt;Windows で使えるバイナリ・エディタ&lt;/h2&gt;

&lt;p&gt;というわけで， Windows で使えるバイナリ・エディタ。
実は色々あるのだが， EBCDIC を扱えるとなると以下の3つが妥当だろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vector.co.jp/soft/win95/util/se079072.html&#34; title=&#34;Stirlingの詳細情報 : Vector ソフトを探す！&#34;&gt;Stirling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www002.upp.so-net.ne.jp/janus/xedit.html&#34; title=&#34;ROM化支援バイナリエディタ - xedit -&#34;&gt;xedit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.vector.co.jp/soft/win95/util/se079072.html&#34; title=&#34;Stirlingの詳細情報 : Vector ソフトを探す！&#34;&gt;Stirling&lt;/a&gt; はかなり古いアプリケーションで，最新版の 1.31 が出たのは1999年のようだ。
古いのがいけないわけではないが（実際，現在でも遜色ないほど高機能で職場で使ってる人もいる），流石に15年以上前のものを使うのはねぇ&amp;hellip;&lt;/p&gt;

&lt;p&gt;というわけで，残りの2つが個人的におすすめなのだが，今回は &lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt; を紹介する&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:021791166dbffd1ec8731dec1d23ca3a:xe&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:021791166dbffd1ec8731dec1d23ca3a:xe&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;binary-editor-bz:021791166dbffd1ec8731dec1d23ca3a&#34;&gt;Binary Editor Bz&lt;/h2&gt;

&lt;p&gt;知る人ぞ知るだが， &lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt; のオリジナルはあの &lt;a href=&#34;http://www.vcraft.jp/&#34;&gt;c.mos&lt;/a&gt; さんによるものである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:021791166dbffd1ec8731dec1d23ca3a:cmos&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:021791166dbffd1ec8731dec1d23ca3a:cmos&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
で，そのオリジナルのコードを &lt;a href=&#34;https://github.com/devil-tamachan&#34;&gt;devil.tamachan&lt;/a&gt; さんが改造したのが今回紹介する &lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt; である。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devil-tamachan.github.io/BZDoc/&#34;&gt;Binary Editor BZ&lt;/a&gt; : ヘルプページ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現時点での最新版は &lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz/releases/tag/v1.9.7.1&#34;&gt;1.9.7.1&lt;/a&gt;。
Portable 版の zip ファイルの中身を適当なフォルダにコピーして起動すればよい。
簡単！&lt;/p&gt;

&lt;p&gt;ただし，最新のバージョンは &lt;code&gt;EBCDIC.def&lt;/code&gt; ファイルがないため，そのままでは EBCDIC で表示できない。
&lt;code&gt;EBCDIC.def&lt;/code&gt; ファイルはググれば見つかると思うが，一応&lt;a href=&#34;http://text.baldanders.info/material/bz/EBCDIC.def&#34;&gt;ここ&lt;/a&gt;にも置いておく。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt; では ASCII や EBCDIC の他， Shift-JIS, JIS, EUC や Unicode 系の文字エンコードィングにも（一応）対応している。
その他の特徴としては&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;既定で書き込み禁止（間違って弄らないようにするため）&lt;/li&gt;
&lt;li&gt;構造体解析が可能&lt;/li&gt;
&lt;li&gt;データをビットマップで俯瞰できる&lt;/li&gt;
&lt;li&gt;オフセットジャンプ（カーソル位置の値分だけジャンプする）&lt;/li&gt;
&lt;li&gt;画面を2分割まで可能&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ってとこかな。
個人的にはこれで必要十分。
贅沢を言えば 10GB 程度のファイル&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:021791166dbffd1ec8731dec1d23ca3a:file&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:021791166dbffd1ec8731dec1d23ca3a:file&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; を読み込んでもへこたれないでほしいものだが，まぁそこは無理は言うまい&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:021791166dbffd1ec8731dec1d23ca3a:size&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:021791166dbffd1ec8731dec1d23ca3a:size&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:021791166dbffd1ec8731dec1d23ca3a:dump&#34;&gt;データを dump out するだけならいくらでも手段がある。懐かしいところだと UNIX 系の &lt;code&gt;od&lt;/code&gt; コマンドとかあるし（&lt;code&gt;-tx1z&lt;/code&gt; とかオプションを付けると幸せ），大抵のスクリプト言語なら手軽に dump out できる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:021791166dbffd1ec8731dec1d23ca3a:dump&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:021791166dbffd1ec8731dec1d23ca3a:xe&#34;&gt;&lt;a href=&#34;http://www002.upp.so-net.ne.jp/janus/xedit.html&#34; title=&#34;ROM化支援バイナリエディタ - xedit -&#34;&gt;xedit&lt;/a&gt; は組込み向けの開発に向いているが，今回は割愛する。ちなみに EBCDIC 対応でもカナや漢字をまともに扱えるものは存在しない。そもそもカナや漢字は汎用機ごとに方言がキツい（たとえ Shift-JIS でも旧 JIS だったりする）ので，汎用のツールはないと考えたほうがいい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:021791166dbffd1ec8731dec1d23ca3a:xe&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:021791166dbffd1ec8731dec1d23ca3a:cmos&#34;&gt;&lt;a href=&#34;http://www.vcraft.jp/&#34;&gt;c.mos&lt;/a&gt; さんといえば Vz Editor。私たちの世代から見れば神のようなお方である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:021791166dbffd1ec8731dec1d23ca3a:cmos&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:021791166dbffd1ec8731dec1d23ca3a:file&#34;&gt;そういうのがあるんだってば，どってんばってん。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:021791166dbffd1ec8731dec1d23ca3a:file&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:021791166dbffd1ec8731dec1d23ca3a:size&#34;&gt;&lt;a href=&#34;https://github.com/devil-tamachan/binaryeditorbz&#34; title=&#34;devil-tamachan/binaryeditorbz&#34;&gt;Bz&lt;/a&gt; は今のところ 4GB までしか扱えない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:021791166dbffd1ec8731dec1d23ca3a:size&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Security Advisory Gpg4win - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/security-advisory-gpg4win/" />
		<id>tag:text.Baldanders.info,2015-11-25:/remark/2015/security-advisory-gpg4win/</id>
		<published>2015-11-25T21:49:56+09:00</published>
		<updated>2015-11-25T21:49:56+09:00</updated>
		<summary>今回の Gpg4win のリリースはセキュリティ・アップデートを含み， Advisory も併せてリリースされている。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;Windows 用の &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を含む暗号ツール群 &lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; の 2.3.0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lists.wald.intevation.org/pipermail/gpg4win-announce/2015-November/000067.html&#34;&gt;Gpg4win-announce: Gpg4win 2.3.0 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回のリリースはセキュリティ・アップデートを含み， Advisory も併せてリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lists.wald.intevation.org/pipermail/gpg4win-announce/2015-November/000066.html&#34;&gt;[Gpg4win-announce] Security Advisory Ggp4win 2015-11-25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内容は以下のとおり。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The installer will load and execute other code if it is placed in the same directory as a DLL with the right name.  This &amp;ldquo;current directory attack&amp;rdquo; or &amp;ldquo;dll preloading attack&amp;rdquo; can be part of a remote exploitation for example if the Gpg4win installer is downloaded to a common Downloads directory and the attacker can previously place files there by tricking a user or other software to download files with a specific name to the same place. If the Gpg4win installer is then executed, the other code may run, while the user believes to run only the Gpg4win installer.&lt;/li&gt;
&lt;li&gt;There is a &amp;ldquo;local privilege escalation&amp;rdquo; during an installer run.  Installer runs can happen during a fresh, an update install or a deinstallation. With Windows Vista or later an administrator can log in as user and give higher privileges to a single process using the User Account Control mechanism (UAC). If the installer is started in this way, there is a time window where an attacker running with user privileges can insert code in a temporary directory of the installer that will be executed with the higher privileges bypassing the UAC.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;まぁ Windows ではありがちな脆弱性である。
GnuPG 自体に問題があるわけではなく，&lt;a href=&#34;http://sourceforge.net/p/nsis/bugs/1125/&#34; title=&#34;NSIS: Nullsoft Scriptable Install System / Bugs / #1125 Code execution / Privilege escalation problems with NSIS installers&#34;&gt;インストーラのバグ&lt;/a&gt;っぽい。&lt;/p&gt;

&lt;p&gt;世の中は&lt;a href=&#34;http://text.baldanders.info/remark/2015/use-the-signal-luke/&#34;&gt;10人にひとりもまともに OpenPGP 製品を使えない&lt;/a&gt;らしいのに &lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; を使ってる人がどの程度いるのかかなり怪しいのだが，まぁ一応。&lt;/p&gt;

&lt;p&gt;影響度はよく分からないが， DLL プリロード攻撃の脆弱性も権限昇格の脆弱性も割とヤバめなので，さっさとアップデートすることをおすすめする。
ひょっとして，これ他の Windows 向けオンラインソフトにも影響出るかなぁ。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>PuTTY 0.66 リリース（Security Fix） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/putty-0_66-released/" />
		<id>tag:text.Baldanders.info,2015-11-11:/remark/2015/putty-0_66-released/</id>
		<published>2015-11-11T20:28:23+09:00</published>
		<updated>2015-11-11T20:28:23+09:00</updated>
		<summary>0.65 以下の PuTTY を使っている人は必ず 0.66 にアップデートすること。日本語版もリリースされている。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;Windows 用の SSH（Secure SHell） クライアント &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; 0.66 がリリースされている。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Versions of PuTTY and pterm between 0.54 and 0.65 inclusive have a potentially memory-corrupting integer overflow in the handling of the ECH (erase characters) control sequence in the terminal emulator.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/wishlist/vuln-ech-overflow.html&#34;&gt;PuTTY vulnerability vuln-ech-overflow&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;以前のバージョンには ECH (ERASE CHARACTER) 制御シーケンスにおいてメモリ破壊を伴う整数オーバーフロー（memory-corrupting integer overflow）脆弱性があるそうな。
ECH については以下を参照のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;#ZgotmplZ&#34;&gt;Standerd ECMA-48: Control Functions for Coded Character Sets&lt;sup&gt;&lt;i class=&#34;fa fa-file-pdf-o&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linuxjm.osdn.jp/html/LDP_man-pages/man4/console_codes.4.html&#34;&gt;Man page of CONSOLE_CODES&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;0.65 以下の &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; を使っている人は &lt;strong&gt;必ず&lt;/strong&gt; 0.66 にアップデートすること。
なお，以下の日本語版も 0.66 がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hp.vector.co.jp/authors/VA024651/PuTTYkj.html&#34; title=&#34;hdk の自作ソフトの紹介 | PuTTYjp&#34;&gt;PuTTYjp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ice.hotmint.com/putty/&#34; title=&#34;iceiv+putty&#34;&gt;iceiv+putty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そういや，最近「整数オーバーフロー」な脆弱性報告をよく見かけるな。
Google のこいつとかもそうだっけ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jvndb.jvn.jp/ja/contents/2015/JVNDB-2015-005816.html&#34;&gt;JVNDB-2015-005816 Google Picasa における整数オーバーフローの脆弱性 - JVN iPedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;流行ってるのか？&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>gibo による .gitignore 生成（再掲載） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/gitignore-boilerplates/" />
		<id>tag:text.Baldanders.info,2015-11-07:/remark/2015/gitignore-boilerplates/</id>
		<published>2015-11-07T22:01:10+09:00</published>
		<updated>2015-11-25T10:58:29+09:00</updated>
		<summary>Git の repository を作る際に .gitignore をどうするかは悩みどころだが、 gibo というツールを使えば .gitignore の生成をかなり自動化できるらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;以前 &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/45a4619aafcacc161521&#34;&gt;Qiita で書いた&lt;/a&gt;が，復習を兼ねて再掲載する。&lt;/p&gt;

&lt;p&gt;Git の repository を作る際に &lt;code&gt;.gitignore&lt;/code&gt; をどうするかは悩みどころだが（つか、大概は他の repository からコピってくるのだが）、 &lt;code&gt;gibo&lt;/code&gt; というツールを使えば &lt;code&gt;.gitignore&lt;/code&gt; の生成をかなり自動化できるらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simonwhitaker/gibo&#34;&gt;simonwhitaker/gibo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;導入方法は &lt;code&gt;README.md&lt;/code&gt; に書かれているが，実体はスクリプトのみなので，面倒くさいならプラットフォームごとにスクリプト・ファイル（Windows なら &lt;code&gt;gibo.bat&lt;/code&gt;）を取ってきてパスの通っているフォルダに放り込めばよい。
処理自体は簡単で， &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; で公開されているテンプレートを取ってきて単純に連結しているだけである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;以下は Windows での操作手順。
まずは動作確認と初期化から。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -v
gibo 1.0.4 by Simon Whitaker &amp;lt;sw@netcetera.org&amp;gt;
https://github.com/simonwhitaker/gitignore-boilerplates

C:&amp;gt;gibo -u
Cloning https://github.com/github/gitignore.git to C:\Users\username\AppData\Roaming\.gitignore-boilerplates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;C:\Users\username\AppData\Roaming\.gitignore-boilerplates&lt;/code&gt; に &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; の内容がセットされる。&lt;/p&gt;

&lt;p&gt;使用するにはコマンドラインに言語名やフレームワーク名を並べればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse
### java

*.class

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


### eclipse

*.pydevproject
.metadata
.gradle
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# CDT-specific
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific
.buildpath

# sbteclipse plugin
.target

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出力は標準出力なので &lt;code&gt;.gitignore&lt;/code&gt; にリダイレクトしてあげればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;既に &lt;code&gt;.gitignore&lt;/code&gt; があるのなら追記で OK。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo windows &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;対応している言語等が知りたければ &lt;code&gt;-l&lt;/code&gt; オプションを付けて起動すると一覧が表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -l
=== Languages ===

Actionscript
Ada
Agda
Android
AppceleratorTitanium
AppEngine
ArchLinuxPackages
Autotools
C
C++
CakePHP
CFWheels
ChefCookbook
Clojure
CMake
CodeIgniter
CommonLisp
Composer
Concrete5
Coq
CraftCMS
CUDA
D
Dart
Delphi
DM
Drupal
Eagle
Elisp
Elixir
Elm
EPiServer
Erlang
ExpressionEngine
ExtJs
Fancy
Finale
ForceDotCom
Fortran
FuelPHP
Gcov
GitBook
Go
Gradle
Grails
GWT
Haskell
Idris
IGORPro
Java
Jboss
Jekyll
Joomla
KiCAD
Kohana
LabVIEW
Laravel
Leiningen
LemonStand
Lilypond
Lithium
Lua
Magento
Maven
Mercury
MetaProgrammingSystem
Nanoc
Nim
Node
Objective-C
OCaml
Opa
OpenCart
OracleForms
Packer
Perl
Phalcon
PlayFramework
Plone
Prestashop
Processing
Python
Qooxdoo
Qt
R
Rails
RhodesRhomobile
ROS
Ruby
Rust
Sass
Scala
SCons
Scrivener
Sdcc
SeamGen
SketchUp
Stella
SugarCRM
Swift
Symfony
SymphonyCMS
TeX
Textpattern
TurboGears2
Typo3
Umbraco
Unity
UnrealEngine
VisualStudio
VVVV
Waf
WordPress
Xojo
Yeoman
Yii
ZendFramework
Zephir

=== Global ===

Anjuta
Archives
BricxCC
Cloud9
CodeKit
CVS
DartEditor
Dreamweaver
Eclipse
EiffelStudio
Emacs
Ensime
Espresso
FlexBuilder
GPG
IPythonNotebook
JDeveloper
JetBrains
Kate
KDevelop4
Lazarus
LibreOffice
Linux
LyX
Matlab
Mercurial
MicrosoftOffice
ModelSim
Momentics
MonoDevelop
NetBeans
Ninja
NotepadPP
OSX
Otto
Redcar
Redis
SBT
SlickEdit
SublimeText
SVN
SynopsysVCS
Tags
TextMate
TortoiseGit
Vagrant
Vim
VirtualEnv
VisualStudioCode
WebMethods
Windows
Xcode
XilinxISE
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;追記:32a1cbcb62001915d1d530155d7e0ff8&#34;&gt;追記&lt;/h2&gt;

&lt;p&gt;Ruby/Gem にも同様のツールがあるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rubygems.org/gems/gemignore&#34; title=&#34;gemignore | RubyGems.org | your community gem host&#34;&gt;gemignore&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/nakaken0629/items/cd25b722d9eb15b4efcb&#34;&gt;gitignoreの雛形を用意する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;とはいえ自分で処理を書くのは微妙に面倒くさいからね。このツールを作った方には感謝である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS で Lua - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/nyagos-and-lua/" />
		<id>tag:text.Baldanders.info,2015-11-02:/remark/2015/nyagos-and-lua/</id>
		<published>2015-11-02T21:41:54+09:00</published>
		<updated>2015-11-15T18:20:49+09:00</updated>
		<summary>前回，ConEmu とともに NYAGOS を導入したけど，今回は NYAGOS のセッティングを中心に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;前回&lt;/a&gt;， &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; とともに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入したけど，今回は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; のセッティングを中心に。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の特徴のひとつに， &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のエンジンを内蔵し解釈できる点がある。
というか &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 自身が機能拡張を &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で実装していて，ユーザも hackable に &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をカスタマイズできる。&lt;/p&gt;

&lt;p&gt;また &lt;code&gt;nyagos.exe&lt;/code&gt; を &lt;code&gt;-f&lt;/code&gt; オプションを付けて起動すると &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のソースファイルをスクリプトとして実行できる。
たとえば以下のコード &lt;code&gt;hello.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;print &amp;quot;Hello World!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:&amp;gt;nyagos.exe -f hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;これだけだと大したことはないが， &lt;code&gt;nyagos.exe&lt;/code&gt; でスクリプトを実行した場合は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張が使える。
例えばカレント・フォルダを取得する &lt;code&gt;getwd.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;nyagos.write(nyagos.getwd()..&amp;quot;\n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\username&amp;gt;nyagos.exe -f getwd.lua
C:\Users\username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張については &lt;a href=&#34;https://github.com/zetamatta/nyagos/blob/master/Doc/nyagos_ja.md&#34;&gt;NYAGOS のドキュメント&lt;/a&gt;を参照するとよいだろう。
特筆すべきは &lt;code&gt;alias&lt;/code&gt; 機能で，単純なコマンドの置き換えだけでなく&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nyagos.alias.cmdname = function(args) ... end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のような形式で新しい内部コマンドを作成することもできる。&lt;/p&gt;

&lt;p&gt;ところで &lt;code&gt;nyagos.exe&lt;/code&gt; を普通に起動して &lt;code&gt;ls -oF&lt;/code&gt; コマンドでファイルの一覧を表示させてみると，拡張子 &lt;code&gt;.lua&lt;/code&gt; のファイルは実行可能ファイルになっていることが分かる。
ただ，実際に起動しようとすると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~&amp;gt; hello.lua
&#39;lua&#39; is not recognized as an internal or external command,
operable program or batch file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と怒られた。
どうやら &lt;code&gt;lua&lt;/code&gt; コマンドがねーよ，と言っているらしい（確かに &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の実行モジュールは入れてないのだが）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をインストールしたフォルダにある &lt;code&gt;nyagos.d\suffix.lua&lt;/code&gt; ファイルの末尾あたりを見ると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;suffix.pl=&amp;quot;perl&amp;quot;
if nyagos.which(&amp;quot;ipy&amp;quot;) then
  suffix.py=&amp;quot;ipy&amp;quot;
elseif nyagos.which(&amp;quot;py&amp;quot;) then
  suffix.py=&amp;quot;py&amp;quot;
else
  suffix.py=&amp;quot;python&amp;quot;
end
suffix.rb=&amp;quot;ruby&amp;quot;
suffix.lua=&amp;quot;lua&amp;quot;
suffix.awk={&amp;quot;awk&amp;quot;,&amp;quot;-f&amp;quot;}
suffix.js={&amp;quot;cscript&amp;quot;,&amp;quot;//nologo&amp;quot;}
suffix.vbs={&amp;quot;cscript&amp;quot;,&amp;quot;//nologo&amp;quot;}
suffix.ps1={&amp;quot;powershell&amp;quot;,&amp;quot;-file&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっていて，拡張子 &lt;code&gt;.lua&lt;/code&gt; のファイルが &lt;code&gt;lua&lt;/code&gt; コマンドに関連付けられているのが分かる。
ってことは，これを &lt;code&gt;nyagos.exe&lt;/code&gt; に書き換えればいいわけだ。
とはいえ &lt;code&gt;nyagos.d\suffix.lua&lt;/code&gt; ファイルを直接いじるわけにはいかないので（バージョンアップのたびに上書きされる）， &lt;code&gt;%HOME%&lt;/code&gt; または &lt;code&gt;%HOMEPATH%&lt;/code&gt; フォルダにある &lt;code&gt;.nyagos&lt;/code&gt; ファイルに以下の記述を追加する&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt; suffix.lua={&amp;quot;nyagos.exe&amp;quot;,&amp;quot;-f&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;nyagos.exe&lt;/code&gt; を起動し直して &lt;code&gt;hello.lua&lt;/code&gt; ファイルを実行してみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~&amp;gt; hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおっ，うまくいった。
これで &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; スクリプトを &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 上でバッチファイルのように扱うことができる。&lt;/p&gt;

&lt;p&gt;さぁて，これでいよいよもって &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の勉強をしないといけなくなった。
Pascal 系の構文は目が滑るんだよなぁ。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク:2947fb7ea07389eeb0d261554825324c&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;h3 id=&#34;nyagos-作者による解説:2947fb7ea07389eeb0d261554825324c&#34;&gt;NYAGOS 作者による解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/a49e3a40201511128508&#34;&gt;環境変数PATHが長すぎて、追加したパスが有効にならないぜ！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c4ad3cc55c5afa74da63&#34;&gt;nyagosスクリプト解説 - svn のサブコマンドを勝手に拡張する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/29a85695813926cafd2c&#34;&gt;nyagosスクリプト解説 - ezoe.lua「コマンドではない。」 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/cdff310f53faf3369e48&#34;&gt;nyagosスクリプト解説 - 逆クォートによるコマンド出力展開編(backquote.lua) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c08586c85fa73c182a7a&#34;&gt;nyagosスクリプト解説 - CMD.EXEで化けさせず、nyagosの中だけプロンプトをカラー化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/89a907f4bd46d1750c31&#34;&gt;nyagosスクリプト解説 - VisualStudio れんけー - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/1fe83f736b0254e02415&#34;&gt;git 付属のPerlやunzipとかを使いたいけどsort,find,lnとかは要らない - Qiita&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lua-の解説:2947fb7ea07389eeb0d261554825324c&#34;&gt;Lua の解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yohshiy.blog.fc2.com/blog-entry-291.html&#34;&gt;Lua の Windows へのインストールと使い方 | プログラマーズ雑記帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://densan-labs.net/tech/lua/index.html&#34;&gt;Luaプログラミング入門 | densan-labs.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ie.u-ryukyu.ac.jp/~e085739/lua.hajime.html&#34;&gt;高速スクリプト言語 Lua を始めよう — WTOPIA v1.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://handasse.blogspot.com/2010/02/lua.html&#34;&gt;良いもの。悪いもの。: Lua基礎文法最速マスター&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://noriko3.blog42.fc2.com/blog-entry-128.html&#34;&gt;紀子さん＠へぼぷろぐらまの日常 | Luaで日付時間操作。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://symfoware.blog68.fc2.com/blog-entry-454.html&#34;&gt;Luaでファイルの読み書きを行なう - Symfoware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://torus.jp/memo/x200907/lua-coroutine.rd.html&#34;&gt;Lua のコルーチンの使い方〜基本編〜 : torus solutions!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;その他:2947fb7ea07389eeb0d261554825324c&#34;&gt;その他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/daxanya1/items/7d4b51bba6c8f3a6016b&#34;&gt;NYAGOSとconemuでキーボード操作の拡張 - Qiita&lt;/a&gt; : &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt;+&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で動作を定義， &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; でキーバインドを変更する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/JugnautOnishi/items/7bec6008b6bdb1c1fb9a&#34;&gt;nyagosでbower searchを便利につかいたかった - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;code&gt;suffix&lt;/code&gt; ではなく &lt;code&gt;alias&lt;/code&gt; で &lt;code&gt;lua&lt;/code&gt; コマンドを定義する手もある。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;最近の &lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git for Windows&lt;/a&gt; は bash 関連のコマンドを &lt;code&gt;Git\usr\bin&lt;/code&gt; フォルダに集めている。 git コマンドだけが必要なら &lt;code&gt;Git\cmd&lt;/code&gt; フォルダにのみパスを通せばよい。 bash を使う場合は &lt;code&gt;Git\bin&lt;/code&gt; フォルダにある &lt;code&gt;bash.exe&lt;/code&gt; を起動するのが一番安全なようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>ようやく ConEmu と NYAGOS を導入した - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/conemu-and-nyagos/" />
		<id>tag:text.Baldanders.info,2015-10-30:/remark/2015/conemu-and-nyagos/</id>
		<published>2015-10-30T00:56:49+09:00</published>
		<updated>2015-11-11T21:35:59+09:00</updated>
		<summary>そんなわけで，えんやらやっと ConEmu を導入することにした。ついでに NYAGOS も入れなおすことに。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;いやぁ， &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; 使い出したらコマンドプロンプトがいくらあっても足りないのさ。
そんなわけで，えんやらやっと &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を導入することにした。
ついでに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; も入れなおすことに。&lt;/p&gt;

&lt;h2 id=&#34;nyagos-の導入:ab0c58b1d771644ad2a8c0ace1515d66&#34;&gt;NYAGOS の導入&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34;&gt;NYAOS.ORG - NYAGOS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34;&gt;zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyole&#34;&gt;zetamatta/nyole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前 &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入した時は&lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/9c11acf72fa38ef379f8&#34;&gt;どえら苦労した&lt;/a&gt;が&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases&#34;&gt;最近のバージョン&lt;/a&gt;は64ビット版のビルド済みのものがある。
ありがたくこのまま使わせて頂く。
&lt;a href=&#34;https://github.com/zetamatta/nyole&#34;&gt;nyole&lt;/a&gt; も同梱されているので無問題。&lt;/p&gt;

&lt;p&gt;zip ファイル内のファイル群をフォルダ構成ごと適当な場所に展開すればよい。
展開できたら動作確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\program\nyagos&amp;gt;nyagos.exe
Nihongo Yet Another GOing Shell 4.0.9_10-amd64 Powered by go1.5.1 &amp;amp; Lua 5.3
Copyright (c) 2014,2015 HAYAMA_Kaoru and NYAOS.ORG
C:/program/nyagos&amp;gt;ls
Doc/               lua53.dll          nyagos.lua*        specialfolders.js*
catalog.d/         makeicon.cmd*      nyole.dll
license.txt        nyagos.d/          readme.md
lnk.js*            nyagos.exe*        readme_ja.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ほい，おっけ。&lt;/p&gt;

&lt;h2 id=&#34;conemu-の導入:ab0c58b1d771644ad2a8c0ace1515d66&#34;&gt;ConEmu の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; は Windows 用のターミナルでタブごとに異なる shell を呼び出せるのが特徴。
コマンドプロンプトや上述の &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; はもちろん， &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash や &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; も呼び出せてしまう優れもの&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://conemu.github.io/&#34;&gt;ConEmu - Handy Windows Terminal&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kenpg.bitbucket.org/blog/201506/07.html&#34;&gt;Windows：コマンドプロンプト代替をConsole2からConEmuに変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.nitoyon.com/ja/blog/2014/03/07/fancy-git-bash/&#34;&gt;ConEmu 突っ込んだら Git for Windows の Git Bash がカッコよくなった - てっく煮ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/1000k/items/4a2f9419b19fdc9ed5f4&#34;&gt;ConEmu + nyagos で Windows ターミナル環境を作る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thecrumb.com/2013/03/04/configuring-conemu-and-putty/&#34;&gt;Configuring ConEmu and Putty | theCRUMB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kuroeveryday.blogspot.jp/2015/10/ConEmu-PuTTY.html&#34;&gt;ConEmu + PuTTYでSSHクライアントを快適に使う（Windows版） | Black Everyday Company&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以降，覚え書きで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; の設定を晒しておく。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22385157049/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/716/22385157049_4c7af6ef0a.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22385157049/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;フォントは既定のままで問題ない（もちろん好きなフォントに変えてもよい）。
ただし，日本語を使う場合は “Monospace” のチェックは必ず外すこと。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/21949162924/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5792/21949162924_ba2742c857.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21949162924/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;“Center console in ConEmu workspace” にチェックを入れて数ピクセル程度アキを入れるとウィンドウ境界付近の窮屈感が解消される。
おススメ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22583116011/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/591/22583116011_9e109f185e.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22583116011/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Windows Explorer の context menu 設定。
上段の “ConEmu Here” を登録（register）すると， context menu を開いたフォルダで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を起動してくれる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22583116021/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5630/22583116021_222c1acaee.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22583116021/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の状態。
“Auto save/restore opened tabs” を選択すると，タブの状態を保持してくれる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22575095305/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/644/22575095305_4d0c7752e6.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22575095305/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の環境設定。
コードページの設定（&lt;code&gt;chcp&lt;/code&gt; コマンド）もここでできるし alias の設定もできたりする。
ただし，環境設定は shell 呼び出し時にも個別にできるので，ここでは &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 全体の設定に限定すべきだろう。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22388493089/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/698/22388493089_73bb752b56.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22388493089/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Shell 呼び出しの設定例。
ここでは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash を呼んでいる。
起動時の calling sequence は以下のとおり。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set MSYSTEM=MSYS &amp;amp; C:\msys64\usr\bin\bash.exe --login -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前半で環境変数を設定し，後半で実際に bash を呼び出している。
やぁ，これで mintty を使わなくて済むよ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; の場合は以下のようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\PATH\TO\PuTTY\putty.exe -load &amp;quot;mysession&amp;quot; -new_console
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mysession&lt;/code&gt; には &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; であらかじめ作成したセッション名をセットする。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の場合は &lt;code&gt;nyagos.exe&lt;/code&gt; をフルパスで指定すれば OK。&lt;/p&gt;

&lt;p&gt;ところで設定ダイアログの左下に &lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; ボタンがあるのにお気づきだろうか。
&lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; アカウントのある人は是非。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;まぁこれは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; を試すきっかけになったので，結果的にはよかったのだが。  &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の記事はそのうちちゃんと書かないといけないなぁ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;&lt;del&gt;ただし &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; から &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; を呼び出す場合，サーバ側が UTF-8 だと文字化けするっぽい。ググると「&lt;code&gt;chcp 65001&lt;/code&gt; に設定しろ」みたいなことが書いてあるが， &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; に対しては効いてない感じ。&lt;/del&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;（11月11日追記） 上のを訂正。オリジナルの &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; じゃなくて，日本語に対応している &lt;a href=&#34;http://hp.vector.co.jp/authors/VA024651/PuTTYkj.html&#34; title=&#34;hdk の自作ソフトの紹介 | PuTTYjp&#34;&gt;PuTTYjp&lt;/a&gt; なら問題なく日本語で表示される。ブラボー！
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Windows 10 で PSK を共有する - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/wifi-sense/" />
		<id>tag:text.Baldanders.info,2015-09-26:/remark/2015/wifi-sense/</id>
		<published>2015-09-26T21:47:01+09:00</published>
		<updated>2015-09-26T21:47:01+09:00</updated>
		<summary>というわけで， Microsoft が Windows 10 で自信を持ってお送りする Wi-Fi Sense についていくつか記事を紹介する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/0923-diary/#wireless:8889a1e819041c97ba11b7859cc847e1&#34;&gt;この前&lt;/a&gt;，「WiFi シェア」を盛大に dis ったわけだが，「Windows 10のWi-fi Senseも仲間に入れてあげてください」とフィードバックを頂いた。
確かにそのとおりだ！&lt;/p&gt;

&lt;p&gt;というわけで， Microsoft が Windows 10 で自信を持ってお送りする &lt;q lang=&#34;en&#34;&gt;Wi-Fi Sense&lt;/q&gt; についていくつか記事を紹介する。
なお，私は仕事でも私用でも Windows 10 機は持ってない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9ebeef9717fd9939a5afc2d647ec8156:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9ebeef9717fd9939a5afc2d647ec8156:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; ので悪しからず。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gigazine.net/news/20150703-windows-10-wifi-sense/&#34;&gt;友人とWi-Fiパスワードの自動共有ができるWindows 10新機能「Wi-Fi Sense」 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.technet.com/b/jpsecurity/archive/2015/08/21/windows-10-wifi-sense.aspx&#34;&gt;Windows 10: Wi-Fi センサー (Wi-Fi Sense) とは? 正しく理解して使用してみよう - 日本のセキュリティチーム - Site Home - TechNet Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://r2.ag/counter-windows-10-wifi-sense/&#34;&gt;社内 Wi-Fi を Windows 10 の Wi-Fi 共有対象から外してパスワードを変更する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thenextweb.com/microsoft/2015/07/30/windows-10-steals-your-bandwidth-to-send-other-people-updates/&#34;&gt;Windows 10 uses your bandwidth to share updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;Windows 10 には Wi-Fi Sense という新機能があり、これは Wi-Fi スポットを自分の連絡先に自動的に共有できるものです。一度有効にすると、 Microsoft のサーバーに保存された Wi-Fi パスワードが連絡先に晒されてしまいます。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://r2.ag/counter-windows-10-wifi-sense/&#34;&gt;社内 Wi-Fi を Windows 10 の Wi-Fi 共有対象から外してパスワードを変更する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;MSのWifi Senseは貴方がWin10を使っていないくても誰かWin10ユーザにPWを教えてWifiを使わせるとそのユーザの連絡帳のユーザは全く知らない人でもあなたのwifiを利用可能になる。止めるにはSSID変更のみ RE &lt;a href=&#34;https://t.co/vZcHDhAqED&#34;&gt;https://t.co/vZcHDhAqED&lt;/a&gt;&lt;/p&gt;&amp;mdash; 高梨陣平 (@jingbay) &lt;a href=&#34;https://twitter.com/jingbay/status/628343560291622912&#34;&gt;2015, 8月 3&lt;/a&gt;&lt;/blockquote&gt;


&lt;/figure&gt;

&lt;p&gt;まぁ「WiFi シェア」が安全だというのなら &lt;q lang=&#34;en&#34;&gt;Wi-Fi Sense&lt;/q&gt; も同程度には安全（笑）だと思うので，そっちを使ったほうがいいと思うよ。
&lt;q lang=&#34;en&#34;&gt;Wi-Fi Sense&lt;/q&gt; を使うだけならお金取られないみたいだし。&lt;/p&gt;

&lt;p&gt;繰り返して言うが PSK 方式はユーザに対する認証ではない。
ユーザに対する認証が必要なら IEEE802.1X の認証システムが必要だが，家庭用の無線 LAN ルータでこれを備えているものはほぼ存在しない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9ebeef9717fd9939a5afc2d647ec8156:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9ebeef9717fd9939a5afc2d647ec8156:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
OS ベンダやアプリ・ベンダが PSK 共有を「安全」だなどと言いはるなら，ユーザ側は自衛のためにも，家族にも誰にも PSK を教えてはいけない。
1人1ルータ時代の到来ですな（笑）&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:9ebeef9717fd9939a5afc2d647ec8156:a&#34;&gt;古参の Windows ユーザある私が言うのもナニだが，現状で Windows 7 or 8.x に不満がないユーザは無理に Windows 10 にする必要はない。 XP や Vista のユーザなら多少はメリットは有るかもしれないが。 Windows 7 でも2020年まではサポートされるわけで，その間にゆっくり評価すればいいと思う。というか，5年後も Windows がメジャーであり続けるかどうかすら現時点ではわからない。パワーユーザ以外の多くのユーザがスマホやタブレットをメインに使うようになるなら， Windows に固執する必要は全くない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9ebeef9717fd9939a5afc2d647ec8156:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:9ebeef9717fd9939a5afc2d647ec8156:b&#34;&gt;法人向けにはいくつか製品があるが，当然高い。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9ebeef9717fd9939a5afc2d647ec8156:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
