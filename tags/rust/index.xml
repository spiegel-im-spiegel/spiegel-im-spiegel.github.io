<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of rust - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/rust/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/rust/index.xml" />
	<id>tag:text.Baldanders.info,2020-02-24:/tags</id>
	<updated>2020-02-24T21:58:44+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Rust 勉強会，面白かった！</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/02/hello-rust-world/" />
		<id>tag:text.Baldanders.info,2020-02-24:/remark/2020/02/hello-rust-world/</id>
		<published>2020-02-24T12:58:44+00:00</published>
		<updated>2020-02-24T12:59:16+00:00</updated>
		<summary>しばらくはマジで Rust の勉強をしようかなぁ，とか思ったり。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;以前から気になっていた &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; の勉強会を松江でやるというので参加してきた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://connpass.com/event/163790/&#34;&gt;east-shimane.rs #0 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;いやぁ，面白かった！
C/C++ のコードを &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; に置き換えようという動きがあるのは知っていたが，マジで「アリ」だわ，これ。
やはり時代は &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; か。&lt;/p&gt;
&lt;p&gt;実は今回，どうにかコンパイル環境のインストールまでは済ませたが事前学習が全くできなくて，初心者講座でイチから教えてもらうことにした。
以下に&lt;a href=&#34;https://connpass.com/event/163790/&#34; title=&#34;east-shimane.rs #0 - connpass&#34;&gt;勉強会&lt;/a&gt;の内容を一部紹介する。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; の最大の特徴は GC (Garbage Collection) をランタイム・モジュール内に持たないことだろう。
かといって C/C++ のように自前で明示的に alloc/free するわけでもない。&lt;/p&gt;
&lt;p&gt;どうするのかというと， &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; にはインスタンスに対して「所有権（ownership）」や「ライフタイム（lifetime）」といった概念があり，野放図にインスタンスを参照することを防いでいる。
また変数は基本的に不変（immutable）な値として宣言され，可変（mutable）にしたいのであれば可変であることを明示して宣言する必要がある。
これらの仕組みによってコンパイル時に alloc/free のタイミングを決められる（または決められない処理についてはコンパイル・エラーにできる）わけだ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; の実装にも見られるように「GC ＝ 遅い」とは言えなくなりつつあるのだが，ランタイム・モジュールに GC を組み込まなくていいというのはそれだけで設計の自由度が上がる。
それこそ，その言語で OS を組もうかと考えたくなるほどに。&lt;/p&gt;
&lt;p&gt;コンパイル（VM 用の JIT コンパイルや他言語へのトランス・コンパイルではなく，いわゆる AOT コンパイル）言語の評価ポイントは，個人的には以下の2つと思っている&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;その言語自身でコンパイラが書けるか&lt;/li&gt;
&lt;li&gt;その言語を使って OS が書けるか&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;たとえば &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; は1番目は満たすが2番目は難しい。
メモリ管理や並列処理等についてランタイム・モジュールに強く依存しているからだ。
&lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; は両方を満たす&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;他にも enum と match 式を組み合わせたエラー・ハンドリングとか興味深いものが色々あった。
しばらくはマジで &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; の勉強をしようかなぁ，とか思ったり。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;The Rust Programming Language&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.rust-jp.rs/book/second-edition/&#34;&gt;The Rust Programming Language&lt;/a&gt; : 日本語版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://doc.rust-jp.rs/rust-by-example-ja/&#34;&gt;Rust by Example&lt;/a&gt; : 日本語版&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.rust-lang.org/&#34;&gt;Rust Playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4048930702?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51YLqKD4N5L._SL160_.jpg&#34; width=&#34;124&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4048930702?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Rust 公式ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Steve Klabnik (著), Carol Nichols (著), 尾崎 亮太 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;KADOKAWA 2019-06-28 (Release 2019-06-28)&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4048930702 (ASIN), 9784048930703 (EAN), 4048930702 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;公式ドキュメント&lt;/a&gt;の日本語版。索引がちゃんとしているので，紙の本を買っておいて手元に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-02-24&#34;&gt;2020-02-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Rust 公式ガイド --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B07QVQ7RDG?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t&amp;#43;hDKJOvL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07QVQ7RDG?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;実践Rust入門　[言語仕様から開発手法まで]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;κeen (著), 河野 達也 (著), 小松 礼人 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2019-04-26 (Release 2019-04-26)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07QVQ7RDG (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;勉強会で薦められた本。「内容がすごく重い」とのこと。読んでないが，目次を見る限りは事例が豊富な感じ？&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-02-24&#34;&gt;2020-02-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 実践Rust入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;オブジェクト指向がどうとか関数型がどうとかいうのはジオングの脚のような些末な話である。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ただし &lt;a href=&#34;https://www.rust-lang.org/&#34; title=&#34;Rust Programming Language&#34;&gt;Rust&lt;/a&gt; はリンカについては GCC 等の外部のツールチェーンに依存しているようだ。なのでクロス・コンパイルは（&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; に比べると）少し面倒くさい。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry>
</feed>
