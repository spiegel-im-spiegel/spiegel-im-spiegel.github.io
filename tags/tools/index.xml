<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Tools - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/tools/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/tools/index.xml" />
	<id>tag:text.Baldanders.info,2018-03-31:/tags</id>
	<updated>2018-03-31T17:40:56+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.37.1</generator>

	
	<entry>
		<title>Mingw-w64 を導入する - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/mingw-w64/" />
		<id>tag:text.Baldanders.info,2018-03-31:/remark/2018/03/mingw-w64/</id>
		<published>2018-03-31T17:40:56+09:00</published>
		<updated>2018-03-31T17:40:56+09:00</updated>
		<summary>MinGW-w64 は Windows 用のバイナリを出力可能な GCC を含む開発環境を提供している。もちろん Windows 用のバイナリも存在する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://mingw-w64.org/&#34; title=&#34;Mingw-w64 - GCC for Windows 64 &amp;amp; 32 bits [mingw-w64]&#34;&gt;MinGW-w64&lt;/a&gt; は &lt;a href=&#34;http://www.mingw.org/&#34;&gt;MinGW (Minimalist GNU for Windows)&lt;/a&gt; の後継とも言えるプロジェクトで Windows 用のバイナリを出力可能な &lt;a href=&#34;https://gcc.gnu.org/&#34; title=&#34;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&#34;&gt;GCC&lt;/a&gt; を含む開発環境を提供している。
&lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; も &lt;a href=&#34;http://mingw-w64.org/&#34; title=&#34;Mingw-w64 - GCC for Windows 64 &amp;amp; 32 bits [mingw-w64]&#34;&gt;MinGW-w64&lt;/a&gt; の成果を取り込んでいるので馴染みのある人もいるだろう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mingw.org/&#34; title=&#34;MinGW | Minimalist GNU for Windows&#34;&gt;MinGW&lt;/a&gt; および &lt;a href=&#34;http://mingw-w64.org/&#34; title=&#34;Mingw-w64 - GCC for Windows 64 &amp;amp; 32 bits [mingw-w64]&#34;&gt;MinGW-w64&lt;/a&gt; はどちらかと言うと Linux 系のプラットフォームで Windows 向けのビルドを行うクロスコンパイラとしての側面が強いが，もちろん Windows 用のバイナリも存在する。
&lt;a href=&#34;http://mingw-w64.org/&#34; title=&#34;Mingw-w64 - GCC for Windows 64 &amp;amp; 32 bits [mingw-w64]&#34;&gt;MinGW-w64&lt;/a&gt; の Windows 用インストーラは以下で取得できる（SourceForge からのダウンロードなので取扱い注意）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mingw-w64.org/doku.php/download/mingw-builds&#34;&gt;Mingw-builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストーラを起動すると以下のウィザード画面になる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864025/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/868/40234864025_5e6b30727f.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/868/40234864025_5e6b30727f.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Installing Mingw-w64 (1)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864025/&#34;&gt;Installing Mingw-w64 (1)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;このまま &lt;code&gt;[Next &amp;gt;]&lt;/code&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/41129922281/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/898/41129922281_1cd3e899a2.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/898/41129922281_1cd3e899a2.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Installing Mingw-w64 (2)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/41129922281/&#34;&gt;Installing Mingw-w64 (2)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;この画面でインストールする &lt;a href=&#34;https://gcc.gnu.org/&#34; title=&#34;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&#34;&gt;GCC&lt;/a&gt; の種別を指定する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Version&lt;/em&gt; &lt;a href=&#34;https://gcc.gnu.org/&#34; title=&#34;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&#34;&gt;GCC&lt;/a&gt; のバージョン。特に理由がない限り最新版でいいだろう（2018-03-31 時点の最新は 7.3.0）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Architecture&lt;/em&gt; ターゲットシステムのアーキテクチャ。 &lt;code&gt;i686&lt;/code&gt; か &lt;code&gt;x86_64&lt;/code&gt; のいずれかを選択する。 &lt;code&gt;x86_64&lt;/code&gt; が64ビット版なのでご注意を&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Thread&lt;/em&gt; スレッドモデル。 &lt;code&gt;posix&lt;/code&gt; か &lt;code&gt;win32&lt;/code&gt; のいずれかを選択する。 &lt;code&gt;win32&lt;/code&gt; は Windows ネイティブで速いのだが C++ 11 以降の thread, mutex, future が使えなくなる。特に理由がないのであれば &lt;code&gt;posix&lt;/code&gt; でいいだろう&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Exeption&lt;/em&gt; 例外モデル。アーキテクチャによって以下を選択できる。

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i686&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dwarf&lt;/code&gt; &lt;a href=&#34;http://ja.wikipedia.org/wiki/DWARF&#34;&gt;DWARF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sjlj&lt;/code&gt; SetJump/LongJump&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;seh&lt;/code&gt; Structured Exception Handling （Windows ネイティブ。おすすめ）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sjlj&lt;/code&gt; SetJump/LongJump&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Build Version&lt;/em&gt; ビルドバージョン。特に理由がなければ最新版でいいだろう&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;種別を指定したら &lt;code&gt;[Next &amp;gt;]&lt;/code&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/27256804608/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/798/27256804608_3c74aed9e4.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/798/27256804608_3c74aed9e4.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Installing Mingw-w64 (3)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/27256804608/&#34;&gt;Installing Mingw-w64 (3)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;インストール先のフォルダを指定する。
既定のままではめっさ長い名前になるので変更したほうがいいかも？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Next &amp;gt;]&lt;/code&gt; でインストールを開始する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864195/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/885/40234864195_35a1d24993.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/885/40234864195_35a1d24993.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Installing Mingw-w64 (4)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864195/&#34;&gt;Installing Mingw-w64 (4)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;どうもネットから指定した種別のバイナリをダウンロードして展開しているようだ。
完了したら &lt;code&gt;[Next &amp;gt;]&lt;/code&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864325/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/894/40234864325_ea472a14df.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/894/40234864325_ea472a14df.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Installing Mingw-w64 (5)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40234864325/&#34;&gt;Installing Mingw-w64 (5)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;これで完了。
お疲れ様でした。&lt;/p&gt;

&lt;p&gt;試しに gcc を起動してみる。
こんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc.exe
COLLECT_LTO_WRAPPER=C:/Program\ Files/mingw-w64/x86_64-7.3.0-posix-seh-rt_v5-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/7.3.0/lto-wrapper.exe
Target: x86_64-w64-mingw32
Configured with: ../../../src/gcc-7.3.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/c/mingw730/x86_64-730-posix-seh-rt_v5-rev0/mingw64 --enable-shared --enable-static --disable-multilib --enable-languages=c,c++,fortran,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --enable-libstdcxx-filesystem-ts=yes --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/c/mingw730/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/c/mingw730/prerequisites/x86_64-w64-mingw32-static --with-mpc=/c/mingw730/prerequisites/x86_64-w64-mingw32-static --with-isl=/c/mingw730/prerequisites/x86_64-w64-mingw32-static --with-pkgversion=&amp;#39;x86_64-posix-seh-rev0, Built by MinGW-W64 project&amp;#39; --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS=&amp;#39;-O2 -pipe -fno-ident -I/c/mingw730/x86_64-730-posix-seh-rt_v5-rev0/mingw64/opt/include -I/c/mingw730/prerequisites/x86_64-zlib-static/include -I/c/mingw730/prerequisites/x86_64-w64-mingw32-static/include&amp;#39; CXXFLAGS=&amp;#39;-O2 -pipe -fno-ident -I/c/mingw730/x86_64-730-posix-seh-rt_v5-rev0/mingw64/opt/include -I/c/mingw730/prerequisites/x86_64-zlib-static/include -I/c/mingw730/prerequisites/x86_64-w64-mingw32-static/include&amp;#39; CPPFLAGS=&amp;#39; -I/c/mingw730/x86_64-730-posix-seh-rt_v5-rev0/mingw64/opt/include -I/c/mingw730/prerequisites/x86_64-zlib-static/include -I/c/mingw730/prerequisites/x86_64-w64-mingw32-static/include&amp;#39; LDFLAGS=&amp;#39;-pipe -fno-ident -L/c/mingw730/x86_64-730-posix-seh-rt_v5-rev0/mingw64/opt/lib -L/c/mingw730/prerequisites/x86_64-zlib-static/lib -L/c/mingw730/prerequisites/x86_64-w64-mingw32-static/lib &amp;#39;
Thread model: posix
gcc version 7.3.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストーラ自体は環境変数を変更しないのだがインストールしたフォルダに &lt;code&gt;mingw-w64.bat&lt;/code&gt; というのができていて，これを起動すると PATH を追加してコマンドプロンプトを起動する。
常用するのであれば自前で環境変数を変更すればよい。&lt;/p&gt;

&lt;p&gt;削除する際はコントロールパネルの「プログラムと機能」から可能だがメチャメチャ分かりにくい名前になっている。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40235231465/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/789/40235231465_d253312aa0.jpg&#34; srcset=&#34;https://farm1.staticflickr.com/789/40235231465_d253312aa0.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Uninstalling Mingw-w64&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40235231465/&#34;&gt;Uninstalling Mingw-w64&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;「プログラムと機能」の右上に検索窓があるのでそこで「mingw」と入力すれば上の画面のようになるので，これで該当プログラムを選択して削除すればいいだろう。&lt;/p&gt;

&lt;h2 id=&#34;みんな大好き-hello-world&#34;&gt;みんな大好き Hello World&lt;/h2&gt;

&lt;p&gt;では動作確認。
以下のコードを用意する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;stdio.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hello world&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これをコンパイルして実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcc hello.c

$ a.exe
hello world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320026926/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41W69WGATNL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320026926/baldandersinf-22/&#34;&gt;プログラミング言語C 第2版 ANSI規格準拠&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;B.W. カーニハン D.M. リッチー 石田 晴久 &lt;/dd&gt;&lt;dd&gt;共立出版 1989-06-15&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320027485/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4320027485.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラミング言語Cアンサー・ブック 第2版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4874084141/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4874084141.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C言語による最新アルゴリズム事典 (ソフトウェアテクノロジー)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774111422/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774111422.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C言語ポインタ完全制覇 (標準プログラマーズライブラリ)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797304952/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797304952.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;定本 Cプログラマのためのアルゴリズムとデータ構造 (SOFTBANK BOOKS)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4900900648/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4900900648.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C実践プログラミング 第3版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4781908535/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4781908535.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;工科系の数学 (5)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4781908896/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4781908896.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;工科系の数学〈6〉関数論&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4756136494/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4756136494.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラミング作法&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798030147/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798030147.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;苦しんで覚えるC言語&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798101036/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798101036.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Cの絵本―C言語が好きになる9つの扉&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;通称 “K&amp;amp;R”。その筋の人々には「バイブル」と呼ばれる名著（当時は）。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-02-19&#34;&gt;2017-02-19&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117364/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51ng4usMVYL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117364/baldandersinf-22/&#34;&gt;Effective Modern C++ ―C++11/14プログラムを進化させる42項目&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Scott Meyers 千住 治郎 &lt;/dd&gt;&lt;dd&gt;オライリージャパン 2015-09-18&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4048694243/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4048694243.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C++11/14 コア言語&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797375957/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797375957.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラミング言語C++第4版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621066099/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4621066099.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Effective C++ 第3版 (ADDISON-WESLEY PROFESSIONAL COMPUTI)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797384778/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797384778.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C++のエッセンス&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4048930516/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4048930516.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C++によるプログラミングの原則と実践&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797376686/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797376686.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C++テンプレートテクニック 第2版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4844338900/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4844338900.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Game Programming Patterns ソフトウェア開発の問題解決メニュー (impress top gear)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117569/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117569.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Effective Python ―Pythonプログラムを改良する59項目&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774174084/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774174084.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;改訂新版　C++ポケットリファレンス&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4862462928/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4862462928.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Computer Graphics Gems JP 2015 - コンピュータグラフィックス技術の最前線 -&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;C++ 再勉強中。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-09-22&#34;&gt;2016-09-22&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Enigmail 2.0 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/enigmail-2_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-27:/release/2018/03/enigmail-2_0-released/</id>
		<published>2018-03-27T21:13:01+09:00</published>
		<updated>2018-03-27T21:13:01+09:00</updated>
		<summary>って Autocrypt も p≡p もまだ調査してないよ！</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.mozilla.org/thunderbird/&#34; title=&#34;Thunderbird — Software made to make email easier. — Mozilla&#34;&gt;Thunderbird&lt;/a&gt; 用の &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; 暗号化アドオンである &lt;a href=&#34;https://addons.mozilla.org/ja/thunderbird/addon/enigmail/&#34; title=&#34;Enigmail :: Thunderbird 向けアドオン&#34;&gt;Enigmail&lt;/a&gt; が 2.0 になったようだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpg1&#34;&gt;&lt;a href=&#34;#fn:gpg1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;主な変更点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;メッセージの件名の保護：&lt;/em&gt; 件名を暗号データに含めることができるようになった。 PGP/MIME 暗号化でのみ有効&lt;/li&gt;
&lt;li&gt;&lt;em&gt;暗号化および署名ボタンの改良：&lt;/em&gt; S/MIME 暗号化と統合&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Autocrypt のサポート：&lt;/em&gt; 新しい鍵配布標準である &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.0.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; に対応した&lt;/li&gt;
&lt;li&gt;&lt;em&gt;p≡p (Pretty Easy Privacy) のサポート：&lt;/em&gt; &lt;a href=&#34;https://pep-project.org/&#34;&gt;p≡p&lt;/a&gt; Junior Mode をサポート。ただし現時点では &lt;a href=&#34;https://pep-project.org/&#34;&gt;p≡p&lt;/a&gt; を手動でインストールする必要がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;って &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.0.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; も &lt;a href=&#34;https://pep-project.org/&#34;&gt;p≡p&lt;/a&gt; もまだ調査してないよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://posteo.de/en/blog/new-easy-email-encryption-with-autocrypt-and-openpgp-header&#34;&gt;Email green, secure, simple and ad-free - posteo.de - New: Easy email encryption with Autocrypt and OpenPGP header&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのうち試そう。
鍵管理が楽になるのは嬉しい。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:gpg1&#34;&gt;実際の処理には &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; が必要。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpg1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.5 のリリースと環境変数の扱い - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_5_beta-released/" />
		<id>tag:text.Baldanders.info,2018-03-27:/release/2018/03/nyagos-4_2_5_beta-released/</id>
		<published>2018-03-27T19:47:59+09:00</published>
		<updated>2018-03-31T18:20:17+09:00</updated>
		<summary>このバージョンからバッチファイル実行時の環境変数の扱いが変わるようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（正式版がリリースされたので改題しました）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.5 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_beta&#34;&gt;Release 4.2.5_beta · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_beta2&#34;&gt;Release 4.2.5_beta2 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_0&#34;&gt;Release 4.2.5_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下に変更点をまとめて紹介する。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Read the value of environment variables and the current directory that a batchfile changed like CMD.EXE.&lt;/li&gt;
&lt;li&gt;And refactored a lot of source files&lt;/li&gt;
&lt;li&gt;Fix: #296 the batchfile could not be executed when the username contains multibyte-character.

&lt;ul&gt;
&lt;li&gt;Fix that the encoding of the temporary batchfile was UTF8.&lt;/li&gt;
&lt;li&gt;Fix that the end of the each line of the temporary batchfile was LF not CRLF.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fix: #297 running the batchfile includes exit without /b option, an error occurs&lt;/li&gt;
&lt;li&gt;Add Lua-flag: nyagos.option.usesource. When it is false, batchfiles can not change nyagos&amp;rsquo;s environment variables and directory.(default:true)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;CMD.EXE と同様に、バッチファイルが変更した環境変数・カレントディレクトリを読み取るようにした。&lt;/li&gt;
&lt;li&gt;ソースの幾つかを派手にリファクタリングした。&lt;/li&gt;
&lt;li&gt;#296 ユーザ名にマルチバイト文字が入っていると、バッチが正常動作しない不具合を修正

&lt;ul&gt;
&lt;li&gt;一時バッチファイルのエンコーディングが UTF8 になっていた&lt;/li&gt;
&lt;li&gt;一時バッチファイルの改行コードが CRLF ではなく LF になっていた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;#297 /b なしの exit をバッチファイルが実行した時、一時ファイルが無い旨のエラーがでていた&lt;/li&gt;
&lt;li&gt;luaフラグ nyagos.option.usesource を追加。false の時、バッチファイルは NYAGOS の環境変数を変更できなくなる(default:true)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_0&#34;&gt;Release 4.2.5&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで，このバージョンからバッチファイル（&lt;code&gt;*.bat&lt;/code&gt;, &lt;code&gt;*.cmd&lt;/code&gt;）実行時の環境変数の扱いが変わるようだ。
詳しくは以下を参照のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/efff93d92ac2150192fb&#34;&gt;NYAGOS 4.2.5βが、いかにしてバッチファイルでの環境変数の変更取り込みを可能としたか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;個人的にはバッチファイルで環境変数が汚れるのは好みではなかったので &lt;code&gt;source&lt;/code&gt; コマンドのみで環境変数を変えられるという仕様は結構気に入っていたのだが，まぁいいか。
問題ない。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【追記 2018-03-31】&lt;/strong&gt; &lt;code&gt;nyagos.option.usesource&lt;/code&gt; オプションを追加していただいた。
これを &lt;code&gt;false&lt;/code&gt; にすれば従来どおり &lt;code&gt;source&lt;/code&gt; コマンドのみで環境変数を変更できる。
ホームディレクトリの &lt;code&gt;.nyagos&lt;/code&gt; に追記しておけばいいだろう。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;付録-環境変数の汚染を防ぐには&#34;&gt;【付録】 環境変数の汚染を防ぐには&lt;/h2&gt;

&lt;p&gt;バッチファイルで環境変数を汚さないようにするには &lt;code&gt;setlocal ... endlocal&lt;/code&gt; で囲めばよい&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sl1&#34;&gt;&lt;a href=&#34;#fn:sl1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
しかも入れ子にできる。
たとえばフィボナッチ数を数え上げる処理はこんな感じ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:de1&#34;&gt;&lt;a href=&#34;#fn:de1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt; enabledelayedexpansion

&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%~&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 1 &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 1&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt; &amp;amp;&amp;amp; goto :end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 1&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 2 &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 2&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt; &amp;amp;&amp;amp; goto :end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 2&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/l&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;i &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b1! + !b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;!b2!&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;endlocal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%~1&lt;/span&gt;th Fibonacci number is &lt;span class=&#34;nv&#34;&gt;%fib%&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;endlocal&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;endlocal &amp;amp;&amp;amp; set /a fib = %b2%&lt;/code&gt; で &lt;code&gt;setlocal ... endlocal&lt;/code&gt; スコープの外に値を持ち出している点に注目。&lt;/p&gt;

&lt;p&gt;これを実行すると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;C:&amp;gt; fibonacci.cmd 10
1: 0
2: 1
3: 1
4: 2
5: 3
6: 5
7: 8
8: 13
9: 21
10: 34
10th Fibonacci number is 34

C:&amp;gt; set fib
環境変数 fib が定義されていません

C:&amp;gt; set b2
環境変数 b2 が定義されていません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/IIJIMAS/20101023/1287772847&#34;&gt;バッチファイルで、setlocal～endlocal内での変数の値を外部に引き継ぎたい！ - IIJIMASの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sawa_tsuka/items/67be34bab1fdf3fb87f9&#34;&gt;.bat（バッチファイル）のforコマンド解説。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sawa_tsuka/items/c7c477cacf8c97792e17&#34;&gt;バッチファイル界の魔境『遅延環境変数』に挑む（おまけもあるよ） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:sl1&#34;&gt;時々 &lt;code&gt;setlocal&lt;/code&gt; と &lt;code&gt;endlocal&lt;/code&gt; がペアになっていない記述を見かける（特に遅延環境変数の説明とか）。 &lt;code&gt;endlocal&lt;/code&gt; がなくても別にエラーになったりはしないしちゃんと動くのだが（バッチ終了時に全スコープが閉じられるので），プログラマならスコープは正しく書こうね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:de1&#34;&gt;コード内の &lt;code&gt;enabledelayedexpansion&lt;/code&gt; は遅延環境変数を有効にするオプション。 &lt;code&gt;!fib!&lt;/code&gt; などがこれに該当する。 &lt;code&gt;for&lt;/code&gt; 文や &lt;code&gt;if&lt;/code&gt; 文の &lt;code&gt;( ... )&lt;/code&gt; で囲まれた部分で環境変数を操作する場合に必要。遅延環境変数は &lt;code&gt;setlocal ... endlocal&lt;/code&gt; スコープ内でしか有効にできない点に注意。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:de1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.4_0 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_4_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-11:/release/2018/03/nyagos-4_2_4_0-released/</id>
		<published>2018-03-11T15:28:00+09:00</published>
		<updated>2018-03-27T13:50:56+09:00</updated>
		<summary>細かい機能の変更や修正がメイン。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.4_0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;細かい機能の変更や修正がメイン。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load &lt;code&gt;nyagos.d/*.ny&lt;/code&gt; as batchlike file&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; forbides overwriting existing file by redirect.&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; and &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; enable to overwrite the file already existing by redirect even if &lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;#270: Console input buffer has been cleaned up when prompt is drawn.&lt;/li&gt;
&lt;li&gt;#228: Completion supports $ENV[TAB]&amp;hellip; by native&lt;/li&gt;
&lt;li&gt;#275: Fix: history substitution like &lt;code&gt;!str:$&lt;/code&gt; , &lt;code&gt;!?str?:$&lt;/code&gt; did not work.&lt;/li&gt;
&lt;li&gt;The error &lt;code&gt;event not found&lt;/code&gt; is caused when the event pointed !y does note exists.&lt;/li&gt;
&lt;li&gt;#285: Not wait GUI-process not using pipeline terminating like CMD.EXE (Call them with ShellExecute() instead of CreateProcess() )&lt;/li&gt;
&lt;li&gt;(Replaced &lt;code&gt;bytes.Buffer&lt;/code&gt; to &lt;code&gt;strings.Builder&lt;/code&gt; and Go 1.10 is required to build)&lt;/li&gt;
&lt;li&gt;When more than one are to be executed with &lt;code&gt;open&lt;/code&gt; at once, display error: &lt;code&gt;open: ambiguous shellexecute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix that &lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; could not remove the alias.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; が &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; が &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; のコマンドファイルも読み込むようにした&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; でリダイレクトでのファイル上書きを禁止&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; もしくは &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; で、&lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt; の時も上書きできるようにした&lt;/li&gt;
&lt;li&gt;#270: プロンプト表示時にコンソール入力バッファをクリアするようにした&lt;/li&gt;
&lt;li&gt;#228: $ENV[TAB] という補完をネイティブでサポート&lt;/li&gt;
&lt;li&gt;#275: !str:$ や !str?:$ といったヒストリ置換が機能しない不具合を修正&lt;/li&gt;
&lt;li&gt;! で指定されるヒストリが存在しない時「event not found」エラーを出させるようにした&lt;/li&gt;
&lt;li&gt;#285: パイプラインを使っていない GUIプログラムは CMD.EXE 同様終了を待たないようにした (CreateProcess ではなく ShellExecute を使用する)&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;bytes.Buffer&lt;/code&gt; を &lt;code&gt;strings.Builder&lt;/code&gt; に置き換えた。Go 1.10 が必要になった)&lt;/li&gt;
&lt;li&gt;複数のファイルが「open」で一度に開こうとした時、&lt;code&gt;open: ambiguous shellexecute&lt;/code&gt; とエラーを表示するようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; で alias を削除できなかった動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; は今回のリリース・パッケージには含まれてなかったのだけど，次回以降で入ってくるってことかなぁ？ それとも自前のスクリプトは &lt;code&gt;*.lua&lt;/code&gt; じゃなくて &lt;code&gt;*.ny&lt;/code&gt; にしろってことなのだろうか。&lt;/p&gt;

&lt;p&gt;（&lt;strong&gt;追記：&lt;/strong&gt; &lt;code&gt;*.ny&lt;/code&gt; は単純にコマンドを列挙したバッチ処理を格納できるファイルだそうだ）&lt;/p&gt;

&lt;p&gt;アップデートは上書きコピーでOK。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ようやく ConEmu と NYAGOS を導入した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo v0.37.1 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/hugo-v0_37_1-released/" />
		<id>tag:text.Baldanders.info,2018-03-08:/release/2018/03/hugo-v0_37_1-released/</id>
		<published>2018-03-08T20:54:03+09:00</published>
		<updated>2018-03-08T20:54:03+09:00</updated>
		<summary>今回は v0.37 で発生した regression の修正。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.37.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.37.1&#34;&gt;Release v0.37.1 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は v0.37 で発生した regression の修正で&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Image content such as SVG cannot be scaled with the built-in image processing methods, but it should still be possible to use them as page resources. This was a regression in Hugo 0.37 and is now fixed.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.37.1&#34;&gt;Release v0.37.1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;とのことなので，該当する方はアップデートを。
私は自前で画像表示の shotcode を書いてるので無問題。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Windows でも Grep したい - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/grep/" />
		<id>tag:text.Baldanders.info,2018-03-07:/remark/2018/03/grep/</id>
		<published>2018-03-07T19:08:25+09:00</published>
		<updated>2018-03-08T17:06:23+09:00</updated>
		<summary>既に Go 言語製の grep を公開されてる方がいた。パスの再帰検索が地味にありがたい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;個人的に &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; Editor で不満だったのは &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; 機能（正しくは &lt;code&gt;project-find&lt;/code&gt;）がアレで微妙に使い勝手が悪いことだった。&lt;/p&gt;

&lt;p&gt;いや， &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; Editor の中で作業する分には不満はないんだよ。
でも本当は任意の場所にあるファイルを &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; して結果をテキストで吐いて欲しかったわけ。
この点では&lt;a href=&#34;http://hide.maruo.co.jp/software/hidemaru.html&#34; title=&#34;秀まるおのホームページ(サイトー企画)－秀丸エディタ&#34;&gt;秀丸&lt;/a&gt;の使い勝手がよかった&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:hm1&#34;&gt;&lt;a href=&#34;#fn:hm1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;UNIX 系プラットフォームには当然のようにある &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; だが Windows にはない。
&lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; のようなエミュレータを使う手もあるが，やっぱり Windows でも普通に &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; したいのである。
&lt;code&gt;findstr.exe&lt;/code&gt; じゃ役不足なんだってば！&lt;/p&gt;

&lt;p&gt;いっそ &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で自作するか？ いやいや，「車輪の再発明」は絶対ドツボにはまる。
などと葛藤していたのだが，なんと！ 既に &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;製の &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; を公開されてる方がいた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mattn.kaoriya.net/software/lang/go/20110819203649.htm&#34;&gt;Big Sky :: 日本語grepが出来るjvgrepというのを作った。&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/jvgrep&#34;&gt;mattn/jvgrep: grep for japanese vimmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;&lt;p&gt;“vimgrepの様に複数のエンコーディングに対応していて、検索パターンにマルチバイト文字を含んだ正規表現が使えて、windowsでもちゃんと動いて、ついでといっちゃあなんだが、&lt;code&gt;&amp;quot;**/*.txt&amp;quot;&lt;/code&gt;で再帰検索してくれる様なgrep無いかなぁと思ってたんですが、やっぱり無いので作りました。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://mattn.kaoriya.net/software/lang/go/20110819203649.htm&#34;&gt;日本語grepが出来るjvgrepというのを作った。&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ありがたや。&lt;/p&gt;

&lt;p&gt;最近のバージョンはバイナリを配布してないようなので，大人しく&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get -u -v github.com/mattn/jvgrep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でインストールする。
もう &lt;a href=&#34;https://github.com/mattn/go-iconv&#34; title=&#34;mattn/go-iconv: iconv binding for golang&#34;&gt;mattn/go-iconv&lt;/a&gt; は使ってないっぽいので &lt;code&gt;iconv.dll&lt;/code&gt; とかは不要なようだ。&lt;/p&gt;

&lt;p&gt;パスの再帰検索が地味にありがたい。&lt;/p&gt;

&lt;h2 id=&#34;jvgrep-を-nyagos-の-alias-に組み込む&#34;&gt;jvgrep を &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の Alias に組み込む&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; では既定の設定で &lt;a href=&#34;https://linuxjm.osdn.jp/html/GNU_grep/man1/grep.1.html&#34; title=&#34;Man page of GREP&#34;&gt;grep&lt;/a&gt; を &lt;code&gt;findstr.exe&lt;/code&gt; の alias として登録している。
これを &lt;code&gt;~/.nyagos&lt;/code&gt; ファイルで上書きする。
以下の記述を追加して再起動。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Lua&#34; data-lang=&#34;Lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;nyagos.alias&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;jvgrep.exe&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;試し打ち。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd C:\path\to\nyagos

$ grep grep **/*.lua
./nyagos.d/comspec.lua:16:nyagos.alias.grep = &amp;#34;findstr.exe&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/0412/18/news018.html&#34;&gt;Windowsのfindstrで正規表現を検索する：Tech TIPS - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:hm1&#34;&gt;他にも &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; Editor では巨大テキストを実質的に扱えないなど微妙だが大事なところで不満があるのだが，概ね使えてる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:hm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>バージョン間のコミット・ログを取得する - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/git-log/" />
		<id>tag:text.Baldanders.info,2018-03-06:/remark/2018/03/git-log/</id>
		<published>2018-03-06T18:58:09+09:00</published>
		<updated>2018-03-06T18:58:09+09:00</updated>
		<summary>今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; でリリース・ドキュメントを書くことを考える。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で書いたツールのバイナリ・リリース時は &lt;a href=&#34;https://goreleaser.com/&#34; title=&#34;GoReleaser | Deliver Go binaries as fast and easily as possible&#34;&gt;GoReleaser&lt;/a&gt; にお任せで全部やってくれるのだが，ソースコードやドキュメントのみのリリースの場合は自前でドキュメントを書く必要がある。
このとき &lt;code&gt;git log&lt;/code&gt; コマンドでコミット・ログを参照するのだが，滅多に使わないコマンドなので毎回 Google 先生のお世話になる。&lt;/p&gt;

&lt;p&gt;今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。&lt;/p&gt;

&lt;h2 id=&#34;コミット-ログの収集&#34;&gt;コミット・ログの収集&lt;/h2&gt;

&lt;p&gt;たとえば v0.6.0 と v0.7.0 の間のコミット・ログを markdown 形式で箇条書きにしたい場合はこうする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この出力から “&lt;code&gt;Merge&lt;/code&gt;” とか “&lt;code&gt;typo&lt;/code&gt;” とかいった単語を含む行を除きたければ grep と組み合わせればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお pretty format に使える &lt;code&gt;%s&lt;/code&gt; などのプレースホルダ等については以下が参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/pretty-formats&#34;&gt;Git - pretty-formats Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;コマンドを-nyagos-の-alias-として組み込む&#34;&gt;コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の Alias として組み込む&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; には &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で書いたコードを alias コマンドとして組み込めるという素敵な機能がある。
そこで，先ほどの &lt;code&gt;git log&lt;/code&gt; コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の alias として組み込んでみる。
具体的には &lt;code&gt;.nyagos&lt;/code&gt; に以下の記述を追加する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- git log&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.alias&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gitlog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--pretty=format:- %s %h&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.writerr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: gitlog [[&amp;lt;from&amp;gt;] &amp;lt;to&amp;gt;]&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;gitlog&lt;/code&gt; コマンドができた。
実際に動かしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gitlog v0.6.0 v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012

$ gitlog v0.6.0 v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/suin/items/e98cef1409b6525f9bb6&#34;&gt;git logでタグとタグの間のものだけ抽出する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://efcl.info/2014/07/20/git-tag-to-release-github/&#34;&gt;Git tagとGitHub ReleasesとCHANGELOG.mdの自動化について | Web Scratch&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git - Book&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection&#34;&gt;Git - Revision Selection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/git-commands/&#34;&gt;あまり使わないけど，たまに使おうとすると忘れてる Git コマンド集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>LibreOffice 6.0.2 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/libreoffice-6_0_2-released/" />
		<id>tag:text.Baldanders.info,2018-03-06:/release/2018/03/libreoffice-6_0_2-released/</id>
		<published>2018-03-06T18:57:41+09:00</published>
		<updated>2018-03-06T18:57:41+09:00</updated>
		<summary>詳しくは述べられていないが，何やらセキュリティ上の問題が修正されているらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;LibreOffice の 6.0.2 がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2018/03/01/libreoffice-6-0-2/&#34;&gt;The Document Foundation announces LibreOffice 6.0.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳しくは述べられていないが，何やらセキュリティ上の問題が修正されているらしい。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;All LibreOffice users are invited to update either to LibreOffice 6.0.2 or to LibreOffice 5.4.5 to solve potential security-related issues.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2018/03/01/libreoffice-6-0-2/&#34;&gt;The Document Foundation announces LibreOffice 6.0.2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで早めのアップデートがおススメ。
セキュリティ関連の情報は何か分かったらこの記事に追記する予定である。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109563.html&#34;&gt;無料のオフィスソフト「LibreOffice」v6.0.2公開　～潜在的なセキュリティ問題を解決するため更新が推奨 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.3_4 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_3_4-released/" />
		<id>tag:text.Baldanders.info,2018-03-06:/release/2018/03/nyagos-4_2_3_4-released/</id>
		<published>2018-03-06T18:57:17+09:00</published>
		<updated>2018-03-27T13:50:56+09:00</updated>
		<summary>今回は不具合の修正がメインのようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.3_4 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.3_4&#34;&gt;Release 4.2.3_4 (bug fixes) · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は不具合の修正がメインのようだ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -?&lt;/code&gt; for help instead of &lt;code&gt;ls -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Building with go build instead of make.cmd, print version as &lt;code&gt;snapshot-GOARCH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show an error when &lt;code&gt;type DIRECTORY&lt;/code&gt; is executed.&lt;/li&gt;
&lt;li&gt;Made error message simple on &lt;code&gt;del NOTEXISTFILE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix: #279 Substitution on Environment variable (%VAR:OLD=NEW%) did not ignore case&lt;/li&gt;
&lt;li&gt;Fix: #281 &lt;code&gt;cd \\server\folder ; open&lt;/code&gt; -&amp;gt;&lt;code&gt;C:\Windows\system32&lt;/code&gt; was open.&lt;/li&gt;
&lt;li&gt;Fix: #286 A tilde(~) after whitespace enclosed with double quotations was interpreted same as %USERPROFILE%&lt;/li&gt;
&lt;li&gt;#287 On the last entry of the history, do nothing for typing ARROW-DOWN&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -h&lt;/code&gt; のかわりに &lt;code&gt;ls -?&lt;/code&gt; をヘルプに用意した&lt;/li&gt;
&lt;li&gt;make.cmd のかわりに go build でビルドした時、バージョンを &lt;code&gt;snapshot-GOARCH&lt;/code&gt; と表示するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type DIRECTORY&lt;/code&gt; が実行された時にエラーにするようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;del 存在しないファイル&lt;/code&gt; を実行した時のエラーをシンプルにした.&lt;/li&gt;
&lt;li&gt;#279 環境変数置換(%VAR:OLD=NEW%)で、英大文字/小文字を区別していた不具合を修正&lt;/li&gt;
&lt;li&gt;#281 &lt;code&gt;cd \\server\folder ; open&lt;/code&gt; で &lt;code&gt;C:\Windows\system32&lt;/code&gt; 開く不具合を修正&lt;/li&gt;
&lt;li&gt;#286 Fix: 二重引用符内の空白に続く ~ が %USERPROFILE% と解釈されていた不具合を修正&lt;/li&gt;
&lt;li&gt;#287 ヒストリの最後のエントリの時、↓をタイプしても何もしないようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.3_4&#34;&gt;Release 4.2.3_4 (bug fixes)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;アップデートは上書きコピーでOK。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ようやく ConEmu と NYAGOS を導入した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Go 言語の依存性管理ツール Dep v0.4 がリリースされていた - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/dep-v4-released/" />
		<id>tag:text.Baldanders.info,2018-03-04:/release/2018/03/dep-v4-released/</id>
		<published>2018-03-04T14:18:16+09:00</published>
		<updated>2018-03-04T14:18:16+09:00</updated>
		<summary>2018年1月に dep の v0.4 がリリースされた。 v0.4 では Gopkg.toml に prune 項目が追加された。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;随分経っているが，忘れないように覚え書きとして残しておく。&lt;/p&gt;

&lt;p&gt;2018年1月に &lt;a href=&#34;https://golang.github.io/dep/&#34; title=&#34;dep · Dependency management for Go&#34;&gt;dep&lt;/a&gt; の v0.4 がリリースされた（2018-03-04 時点で v0.4.1）。
随分前の話だが，忘れないように覚え書きとして残しておく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/dep/releases/tag/v0.4.0&#34;&gt;Release v0.4.0 · golang/dep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/dep/releases/tag/v0.4.1&#34;&gt;Release v0.4.1 · golang/dep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;v0.4 では &lt;a href=&#34;https://golang.github.io/dep/docs/Gopkg.toml.html&#34; title=&#34;Gopkg.toml · dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; に &lt;code&gt;prune&lt;/code&gt; 項目が追加された。
&lt;code&gt;prune&lt;/code&gt; は &lt;code&gt;vendor/&lt;/code&gt; フォルダにパッケージを展開する際に除外するファイルを指定できる。
以下のように記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prune&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;unused&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tests&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;unused-packages&lt;/code&gt; は未使用パッケージを除外する。
&lt;code&gt;go-tests&lt;/code&gt; はテストコードを除外する。
他にも &lt;code&gt;non-go&lt;/code&gt; を指定すると &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;コード以外のファイルを除外してくれる。&lt;/p&gt;

&lt;p&gt;また，パッケージ単位でも&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prune&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;non&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;

  &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prune&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;project&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/project/name&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tests&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;non&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じに指定できるらしい。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://golang.github.io/dep/&#34; title=&#34;dep · Dependency management for Go&#34;&gt;dep&lt;/a&gt; を &lt;a href=&#34;https://travis-ci.org/&#34; title=&#34;Travis CI - Test and Deploy Your Code with Confidence&#34;&gt;Travis CI&lt;/a&gt; で使うには &lt;code&gt;.travis.yml&lt;/code&gt; で以下のように記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;env&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;DEP_VERSION=&lt;span class=&#34;s2&#34;&gt;&amp;#34;0.4.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;before_install&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Download the binary to bin folder in $GOPATH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-L&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;//github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;$GOPATH/bin/dep&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Make the binary executable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;chmod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;+x&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;$GOPATH/bin/dep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.github.io/dep/&#34; title=&#34;dep · Dependency management for Go&#34;&gt;dep&lt;/a&gt; のバージョンが上がった場合には &lt;code&gt;DEP_VERSION&lt;/code&gt; の値だけ変えればいける（はず）。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/golang/consider-switching-from-glide-to-dep/&#34;&gt;Glide から Dep への移行を検討する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
