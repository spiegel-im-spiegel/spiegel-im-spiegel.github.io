<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of tools - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/tools/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/tools/index.xml" />
	<id>tag:text.Baldanders.info,2020-11-18:/tags</id>
	<updated>2020-11-18T18:53:19+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>GnuPG 2.2.24 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/11/gnupg-2_2_24-is-released/" />
		<id>tag:text.Baldanders.info,2020-11-18:/release/2020/11/gnupg-2_2_24-is-released/</id>
		<published>2020-11-18T09:53:19+00:00</published>
		<updated>2020-11-18T09:54:01+00:00</updated>
		<summary>セキュリティ・アップデートはなし。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.24 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2020q4/000449.html&#34;&gt;[Announce] GnuPG 2.2.24 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;メンテナンス・リリース。
セキュリティ・アップデートはなし。
詳細はこちら。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Allow Unicode file names on Windows almost everywhere.  Note that it is still not possible to use Unicode strings on the command line.  This change also fixes a regression in 2.2.22 related to non-ascii file names.  [#5098]&lt;/li&gt;
&lt;li&gt;Fix localized time printing on Windows.  [#5073]&lt;/li&gt;
&lt;li&gt;gpg: New command &lt;code&gt;--quick-revoke-sig&lt;/code&gt;.  [#5093]&lt;/li&gt;
&lt;li&gt;gpg: Do not use weak digest algos if selected by recipient preference during sign+encrypt.  [4c181d51a6]&lt;/li&gt;
&lt;li&gt;gpg: Switch to AES256 for symmetric encryption in de-vs mode. [166e779634]&lt;/li&gt;
&lt;li&gt;gpg: Silence weak digest warnings with &lt;code&gt;--quiet&lt;/code&gt;.  [#4893]&lt;/li&gt;
&lt;li&gt;gpg: Print new status line CANCELED_BY_USER for a cancel during symmetric encryption.  [f05d1772c4]&lt;/li&gt;
&lt;li&gt;gpg: Fix the encrypt+sign hash algo preference selection for ECDSA.  This is in particular needed for keys created from existing smartcard based keys.  [aeed0b93ff]&lt;/li&gt;
&lt;li&gt;agent: Fix secret key import of GnuPG 2.3 generated Ed25519 keys. [#5114]&lt;/li&gt;
&lt;li&gt;agent: Keep some permissions of private-keys-v1.d.  [#2312]&lt;/li&gt;
&lt;li&gt;dirmngr: Align sks-keyservers.netCA.pem use between ntbtls and gnutls builds.  [e4f3b74c91]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix the pool keyserver case for a single host in the pool.  [72e04b03b1a7]&lt;/li&gt;
&lt;li&gt;scd: Fix the use case of verify_chv2 by CHECKPIN.  [61aea64b3c]&lt;/li&gt;
&lt;li&gt;scd: Various improvements to the ccid-driver.  [#4616,#5065]&lt;/li&gt;
&lt;li&gt;scd: Minor fixes for Yubikey [25bec16d0b]&lt;/li&gt;
&lt;li&gt;gpgconf: New option &lt;code&gt;--show-versions&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;w32: Install gpg-check-pattern and example profiles.  Install Windows subsystem variant of gpgconf (gpgconf-w32).&lt;/li&gt;
&lt;li&gt;i18n: Complete overhaul and completion of the Italian translation. Thanks to Denis Renzi.&lt;/li&gt;
&lt;li&gt;Require Libgcrypt 1.8 because 1.7 has long reached end-of-life.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Release-info: &lt;a href=&#34;https://dev.gnupg.org/T5052&#34;&gt;https://dev.gnupg.org/T5052&lt;/a&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2020q4/000449.html&#34;&gt;GnuPG 2.2.24 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>Go パッケージ／モジュールの依存関係可視化ツール Depm v0.3.0 をリリースした</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/11/depm-v0_3_0-is-released/" />
		<id>tag:text.Baldanders.info,2020-11-08:/release/2020/11/depm-v0_3_0-is-released/</id>
		<published>2020-11-08T08:14:01+00:00</published>
		<updated>2020-11-08T08:15:27+00:00</updated>
		<summary>これで個人的に欲しい機能は揃ったかな。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;気になる部分の修正といくつか機能追加を行った &lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm&#34; title=&#34;spiegel-im-spiegel/depm: Visualize depndency packages and modules&#34;&gt;spiegel-im-spiegel/depm&lt;/a&gt; の v0.3.0 をリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm/releases/tag/v0.3.0&#34;&gt;Release v0.3.0 · spiegel-im-spiegel/depm · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使い方については以下の記事を参照のこと。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/dependency-graph-for-golang-modules/&#34;&gt;Depm: Go 言語用モジュール依存関係可視化ツール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;気になる部分というのは，ツール内から &lt;code&gt;go list&lt;/code&gt; コマンドを呼び出している部分で，以下の問題に対応している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20201107-lookpath-by-golang&#34;&gt;Go でサブプロセスを起動する際は LookPath に気をつけろ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これで個人的に欲しい機能は揃ったので少しペースを落とすか。
つか，ほとんどテストを書いてないんだよなぁ&amp;hellip;&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>Depm: Go 言語用モジュール依存関係可視化ツール</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/dependency-graph-for-golang-modules/" />
		<id>tag:text.Baldanders.info,2020-11-08:/release/dependency-graph-for-golang-modules/</id>
		<published>2020-11-08T07:55:50+00:00</published>
		<updated>2020-11-08T08:15:27+00:00</updated>
		<summary> Go言語のパッケージまたはモジュール間の依存関係を可視化するコマンドラインツール</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm&#34; title=&#34;spiegel-im-spiegel/depm: Visualize depndency packages and modules&#34;&gt;spiegel-im-spiegel/depm&lt;/a&gt; は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt;言語のパッケージまたはモジュール間の依存関係を可視化するコマンドラインツールである。
以下のように依存関係を図にすることも可能である。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output3.png&#34;&gt;&lt;img src=&#34;./output3.png&#34; srcset=&#34;./output3.png 2534w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;以降で &lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm&#34; title=&#34;spiegel-im-spiegel/depm: Visualize depndency packages and modules&#34;&gt;spiegel-im-spiegel/depm&lt;/a&gt; について簡単に紹介する。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm/actions&#34;&gt;&lt;img src=&#34;https://github.com/spiegel-im-spiegel/depm/workflows/vulns/badge.svg&#34; alt=&#34;check vulns&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm/actions&#34;&gt;&lt;img src=&#34;https://github.com/spiegel-im-spiegel/depm/workflows/lint/badge.svg&#34; alt=&#34;lint status&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://raw.githubusercontent.com/spiegel-im-spiegel/depm/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;
&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/spiegel-im-spiegel/depm.svg&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;簡単な使い方&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;-h&lt;/code&gt; オプションで簡単な使い方が表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm -h
Visualize depndency packages and modules.

Usage:
  depm [flags]
  depm [command]

Available Commands:
  help        Help about any command
  list        list modules
  module      analyze depndency modules
  package     analyze depndency packages
  version     print the version number

Flags:
      --cgo-enabled string   set CGO_ENABLED environment variable
      --debug                for debug
      --goarch string        set GOARCH environment variable
      --goos string          set GOOS environment variable
  -h, --help                 help for depm

Use &amp;#34;depm [command] --help&amp;#34; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;では，コマンドごとに見ていく。&lt;/p&gt;
&lt;h3&gt;パッケージ間の依存関係を調べる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;depm package&lt;/code&gt; コマンドはパッケージ単位で依存関係を調べて結果を出力する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package -h
analyze depndency packages.

Usage:
  depm package [flags] [package import path]

Aliases:
  package, pkg, p

Flags:
      --dot                 output by DOT language
      --dot-config string   config file for DOT language
  -h, --help                help for package
  -i, --include-internal    include internal packages
  -s, --include-standard    include standard Go library

Global Flags:
      --cgo-enabled string   set CGO_ENABLED environment variable
      --debug                for debug
      --goarch string        set GOARCH environment variable
      --goos string          set GOOS environment variable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;github.com/spiegel-im-spiegel/depm&lt;/code&gt; パッケージを調べる場合は以下のコマンドラインとなる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package github.com/spiegel-im-spiegel/depm | jq .
[
  {
    &amp;#34;Package&amp;#34;: {
      &amp;#34;ImportPath&amp;#34;: &amp;#34;github.com/spf13/cobra&amp;#34;,
      &amp;#34;Module&amp;#34;: {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/cobra&amp;#34;,
        &amp;#34;Version&amp;#34;: &amp;#34;v1.1.1&amp;#34;
      }
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;ImportPath&amp;#34;: &amp;#34;github.com/spf13/pflag&amp;#34;,
        &amp;#34;Module&amp;#34;: {
          &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/pflag&amp;#34;,
          &amp;#34;Version&amp;#34;: &amp;#34;v1.0.5&amp;#34;
        }
      }
    ]
  },
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出力は JSON 形式なので &lt;a href=&#34;https://stedolan.github.io/jq/&#34; title=&#34;jq&#34;&gt;jq&lt;/a&gt; コマンド等で加工可能である。
JSON 出力の構造は以下の構造体 &lt;code&gt;nodeJSON&lt;/code&gt; の配列で表される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nodeJSON&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Package&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;packageJSON&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Deps&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;packageJSON&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;packageJSON&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;ImportPath&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Internal&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;        &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;CGO&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;        &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Unsafe&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;        &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;moduleJSON&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;moduleJSON&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Path&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Version&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CGO に依存するパッケージは &lt;code&gt;CGO&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; になる。
同様に &lt;a href=&#34;https://golang.org/pkg/unsafe/&#34; title=&#34;unsafe - The Go Programming Language&#34;&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;/a&gt; を使っているパッケージでも &lt;code&gt;Unsafe&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; になる。
また &lt;code&gt;-i&lt;/code&gt; オプションを付けてコマンドを起動すると internal パッケージも結果に含まれるが，この場合は &lt;code&gt;Internal&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; になる。&lt;/p&gt;
&lt;p&gt;たとえば有名な &lt;a href=&#34;https://github.com/mattn/go-sqlite3&#34; title=&#34;mattn/go-sqlite3: sqlite3 driver for go using database/sql&#34;&gt;&lt;code&gt;github.com/mattn/go-sqlite3&lt;/code&gt;&lt;/a&gt; パッケージなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package &amp;#34;github.com/mattn/go-sqlite3&amp;#34; | jq .
[
  {
    &amp;#34;Package&amp;#34;: {
      &amp;#34;ImportPath&amp;#34;: &amp;#34;github.com/mattn/go-sqlite3&amp;#34;,
      &amp;#34;CGO&amp;#34;: true,
      &amp;#34;Unsafe&amp;#34;: true,
      &amp;#34;Module&amp;#34;: {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/mattn/go-sqlite3&amp;#34;,
        &amp;#34;Version&amp;#34;: &amp;#34;v1.14.4&amp;#34;
      }
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のようになる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--dot&lt;/code&gt; オプションで &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT&lt;/a&gt; 言語形式の出力にもできるため &lt;a href=&#34;http://www.graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; の dot コマンドを使って図に変換することができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package --dot github.com/spiegel-im-spiegel/depm | dot -Tpng -o output1.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実行結果はこんな感じ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output1.png&#34;&gt;&lt;img src=&#34;./output1.png&#34; srcset=&#34;./output1.png 4578w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output1.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output1.png&#34;&gt;output1.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;図の node と edge の属性については &lt;a href=&#34;http://www.graphviz.org/doc/info/attrs.html&#34;&gt;DOT 言語の仕様&lt;/a&gt;に従って簡単な装飾ができる。
TOML 形式で&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fontname&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Inconsolata&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;edge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のような設定ファイルを作って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package --dot --dot-config sample.toml &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34; | dot -Tpng -o output2.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output2.png&#34;&gt;&lt;img src=&#34;./output2.png&#34; srcset=&#34;./output2.png 4259w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output2.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output2.png&#34;&gt;output2.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;のようにできる。&lt;/p&gt;
&lt;p&gt;パッケージのインポート・パスを省略すると，カレント・ディレクトリのパッケージを捜査する（&lt;code&gt;go list&lt;/code&gt; コマンドで &lt;code&gt;all&lt;/code&gt; を指定したときと同じ動作）。&lt;/p&gt;
&lt;h3&gt;モジュール間の依存関係を調べる&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;depm module&lt;/code&gt; コマンドはモジュール単位で依存関係を調べて結果を出力する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm module -h
analyze depndency modules.

Usage:
  depm module [flags] [package import path]

Aliases:
  module, mod, m

Flags:
  -u, --check-update        check updating module
      --dot                 output by DOT language
      --dot-config string   config file for DOT language
  -h, --help                help for module
  -i, --include-internal    include internal packages

Global Flags:
      --cgo-enabled string   set CGO_ENABLED environment variable
      --debug                for debug
      --goarch string        set GOARCH environment variable
      --goos string          set GOOS environment variable

$ depm module &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34; | jq .
[
  {
    &amp;#34;Module&amp;#34;: {
      &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/cobra@v1.1.1&amp;#34;,
      &amp;#34;Packages&amp;#34;: [
        &amp;#34;github.com/spf13/cobra&amp;#34;
      ]
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/pflag@v1.0.5&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/spf13/pflag&amp;#34;
        ]
      }
    ]
  },
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出力は同じく JSON 形式で，以下の構造体 &lt;code&gt;nodeJSON&lt;/code&gt; の配列で表される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;nodeJSON&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;moduleJSON&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Deps&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;moduleJSON&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;moduleJSON&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Path&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Replace&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Latest&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Main&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;CGO&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Unsafe&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;     &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CGO や &lt;a href=&#34;https://golang.org/pkg/unsafe/&#34; title=&#34;unsafe - The Go Programming Language&#34;&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;/a&gt; パッケージに関するフラグは &lt;code&gt;depm package&lt;/code&gt; コマンドのときと同様である。
&lt;code&gt;-u&lt;/code&gt; オプションを付けると，新しいバージョンのモジュールがある場合に &lt;code&gt;Latest&lt;/code&gt; に情報がセットされる。&lt;/p&gt;
&lt;p&gt;depm package&lt;code&gt;コマンドのときと同じく&lt;/code&gt;-dot` オプションで &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT&lt;/a&gt; 言語形式の出力にできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm module --dot --dot-config sample.toml &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34; | dot -Tpng -o output3.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output3.png&#34;&gt;&lt;img src=&#34;./output3.png&#34; srcset=&#34;./output3.png 2534w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output3.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output3.png&#34;&gt;output3.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;パッケージのインポート・パスを省略すると，カレント・ディレクトリのパッケージを捜査する。
&lt;code&gt;go list -m&lt;/code&gt; コマンドで &lt;code&gt;all&lt;/code&gt; を指定したときと同じ動作だが，実際にはリンクしない形式的な依存モジュールは出力されない。
基本的にコード内の &lt;code&gt;import&lt;/code&gt; に基づく依存関係のみ表示される。&lt;/p&gt;
&lt;h3&gt;モジュールの列挙&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;depm list&lt;/code&gt; コマンドは &lt;code&gt;go list -m&lt;/code&gt; コマンドと同じ形式でモジュールの列挙を行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm list -h
list modules, compatible &amp;#39;go list -m&amp;#39; command

Usage:
  depm list [flags] [package import path]

Aliases:
  list, lst, l

Flags:
  -u, --check-update   check updating module
  -h, --help           help for list
  -j, --json           output by JSON format

Global Flags:
      --cgo-enabled string   set CGO_ENABLED environment variable
      --debug                for debug
      --goarch string        set GOARCH environment variable
      --goos string          set GOOS environment variable

$ depm list &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34;
github.com/BurntSushi/toml v0.3.1
github.com/emicklei/dot v0.15.0
github.com/spf13/cobra v1.1.1
github.com/spf13/pflag v1.0.5
github.com/spiegel-im-spiegel/depm v0.3.0
github.com/spiegel-im-spiegel/errs v1.0.2
github.com/spiegel-im-spiegel/gocli v0.10.3
golang.org/x/mod v0.3.0
golang.org/x/net v0.0.0-20201021035429-f5854403a974
golang.org/x/tools v0.0.0-20201105220310-78b158585360
golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;go list -m&lt;/code&gt; コマンドでは実際にはリンクしない形式上の依存モジュールまで表示してしまうが， &lt;code&gt;depm list&lt;/code&gt; コマンドは基本的にコード内の &lt;code&gt;import&lt;/code&gt; に基づく依存関係のみ表示されるため，最小限のリストに抑えられる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-u&lt;/code&gt; オプションを付けると &lt;code&gt;go list -m -u&lt;/code&gt; と同等の出力にできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm list -u &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34;
github.com/BurntSushi/toml v0.3.1
github.com/emicklei/dot v0.15.0
github.com/spf13/cobra v1.1.1
github.com/spf13/pflag v1.0.5
github.com/spiegel-im-spiegel/depm v0.3.0
github.com/spiegel-im-spiegel/errs v1.0.2
github.com/spiegel-im-spiegel/gocli v0.10.3
golang.org/x/mod v0.3.0
&lt;span class=&#34;hl&#34;&gt;golang.org/x/net v0.0.0-20201021035429-f5854403a974 [v0.0.0-20201031054903-ff519b6c9102]
&lt;/span&gt;golang.org/x/tools v0.0.0-20201105220310-78b158585360
golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-j&lt;/code&gt; オプションを付けると &lt;code&gt;go list -m -json&lt;/code&gt; と同等の JSON 出力にできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm list -j &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34;
{
	&amp;#34;Path&amp;#34;: &amp;#34;github.com/BurntSushi/toml&amp;#34;,
	&amp;#34;Version&amp;#34;: &amp;#34;v0.3.1&amp;#34;,
	&amp;#34;Time&amp;#34;: &amp;#34;2018-08-15T10:47:33Z&amp;#34;,
	&amp;#34;Indirect&amp;#34;: true,
	&amp;#34;Dir&amp;#34;: &amp;#34;/home/spiegel/go/pkg/mod/github.com/!burnt!sushi/toml@v0.3.1&amp;#34;,
	&amp;#34;GoMod&amp;#34;: &amp;#34;/home/spiegel/go/pkg/mod/cache/download/github.com/!burnt!sushi/toml/@v/v0.3.1.mod&amp;#34;
}
{
	&amp;#34;Path&amp;#34;: &amp;#34;github.com/emicklei/dot&amp;#34;,
	&amp;#34;Version&amp;#34;: &amp;#34;v0.15.0&amp;#34;,
	&amp;#34;Time&amp;#34;: &amp;#34;2020-10-30T08:43:19Z&amp;#34;,
	&amp;#34;Indirect&amp;#34;: true,
	&amp;#34;Dir&amp;#34;: &amp;#34;/home/spiegel/go/pkg/mod/github.com/emicklei/dot@v0.15.0&amp;#34;,
	&amp;#34;GoMod&amp;#34;: &amp;#34;/home/spiegel/go/pkg/mod/cache/download/github.com/emicklei/dot/@v/v0.15.0.mod&amp;#34;,
	&amp;#34;GoVersion&amp;#34;: &amp;#34;1.13&amp;#34;
}
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;go list -m&lt;/code&gt; コマンドに比べると遅くなりがちなのが欠点だが，他のツールと組み合わせることを考えると使い勝手はさほど悪くないと思う。&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>Git for Windows 2.29.2 (2) のリリース【セキュリテイ・アップデート】</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/11/git-for-windows-2_29_2-2-is-released/" />
		<id>tag:text.Baldanders.info,2020-11-06:/release/2020/11/git-for-windows-2_29_2-2-is-released/</id>
		<published>2020-11-06T11:14:33+00:00</published>
		<updated>2020-11-14T03:24:49+00:00</updated>
		<summary>これ Windows ユーザには結構ヤバい気がする。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Windows 版 Git である &lt;a href=&#34;https://gitforwindows.org/&#34; title=&#34;Git for Windows&#34;&gt;Git for Windows&lt;/a&gt; の 2.29.2 (2) がリリースされたのだが，同梱されている &lt;a href=&#34;https://git-lfs.github.com/&#34; title=&#34;Git Large File Storage | Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.&#34;&gt;Git LFS&lt;/a&gt; について脆弱性の改修が行われている。&lt;/p&gt;
&lt;p&gt;実は全く知らなかったのだが， &lt;a href=&#34;https://git-lfs.github.com/&#34; title=&#34;Git Large File Storage | Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.&#34;&gt;Git LFS&lt;/a&gt; って &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; で書かれてるんだねぇ。
もの知らずでゴメン &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;&amp;#x1f647;&lt;/abbr&gt;&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.&lt;/p&gt;
&lt;p&gt;This occurs because on Windows, Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-lfs/git-lfs/security/advisories/GHSA-4g4p-42wc-9f3m&#34;&gt;Git LFS can execute a Git binary from the current directory · Advisory · git-lfs/git-lfs · GitHub&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;あー，なるほど。&lt;/p&gt;
&lt;p&gt;カレント・ディレクトリにある実行モジュール（バッチを含む）を起動するのに，カレントであることを明示する &lt;code&gt;.\&lt;/code&gt; を省略できたり，拡張子を省略しても動いちゃうとか，イマドキではないわな。&lt;/p&gt;
&lt;p&gt;で，&lt;a href=&#34;https://git-lfs.github.com/&#34; title=&#34;Git Large File Storage | Git Large File Storage (LFS) replaces large files such as audio samples, videos, datasets, and graphics with text pointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.&#34;&gt;Git LFS&lt;/a&gt; がどうやって解決しているかというと，環境変数 PATH から該当のファイルを探して，フルパスで &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; の &lt;a href=&#34;https://golang.org/pkg/os/exec/&#34; title=&#34;exec - The Go Programming Language&#34;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Cmd&lt;/code&gt; インスタンスに渡ししているようだ。&lt;/p&gt;
&lt;p&gt;って，内部でコマンドを実行する場合には必ずこれをせんといかんということか。
これパクれないかなぁ。
&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; とかどうやってるんだろ。&lt;/p&gt;
&lt;p&gt;真面目に調べてみるか&amp;hellip;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-27955&#34;&gt;CVE-2020-27955&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;深刻度: 緊急 (Score: 9.8)&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;アップデートは&lt;/h2&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>Go パッケージ／モジュールの依存関係可視化ツールを作ってみた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/11/depm-v0_1_0-is-released/" />
		<id>tag:text.Baldanders.info,2020-11-01:/release/2020/11/depm-v0_1_0-is-released/</id>
		<published>2020-11-01T11:47:14+00:00</published>
		<updated>2020-11-01T11:51:13+00:00</updated>
		<summary>以前自作したツールがイマイチで，他の方が作ったツールも微妙だったので，最初から作り直してみた。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;ついカッとなってやった。
反省はしない。&lt;/p&gt;
&lt;p&gt;この手のツールって誰もが一度は書いてみたくなると思うけど，以前&lt;a href=&#34;https://text.baldanders.info/release/2019/05/ggm/&#34; title=&#34;Go モジュールの依存関係を可視化するツールを作った&#34;&gt;自作したツール&lt;/a&gt;がイマイチで，他の方が作ったツールも微妙だったので，最初から作り直してみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/depm&#34;&gt;spiegel-im-spiegel/depm: Visualize depndency packages and modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/05/ggm/&#34; title=&#34;Go モジュールの依存関係を可視化するツールを作った&#34;&gt;前のツール&lt;/a&gt; では &lt;code&gt;go mod graph&lt;/code&gt; コマンドの出力をパイプで繋いで処理してたけど，今回はツール内で &lt;code&gt;go list&lt;/code&gt; コマンドを呼び出している。
したがって &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラがインストール済みであることが前提条件となる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-h&lt;/code&gt; オプションで簡単なヘルプを表示する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm -h
Visualize depndency packages and modules.

Usage:
  depm [flags]
  depm [command]

Available Commands:
  help        Help about any command
  module      analyze depndency modules
  package     analyze depndency packages
  version     print the version number

Flags:
      --cgo-enabled string   set CGO_ENABLED environment variable
      --debug                for debug
      --dot                  output by DOT language
      --dot-config string    config file for DOT language
      --goarch string        set GOARCH environment variable
      --goos string          set GOOS environment variable
  -h, --help                 help for depm

Use &amp;#34;depm [command] --help&amp;#34; for more information about a command.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;depm module&lt;/code&gt; コマンドならこんな感じに使える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm module github.com/spiegel-im-spiegel/depm | jq .
[
  {
    &amp;#34;Module&amp;#34;: {
      &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/cobra@v1.1.1&amp;#34;,
      &amp;#34;Packages&amp;#34;: [
        &amp;#34;github.com/spf13/cobra&amp;#34;
      ]
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/pflag@v1.0.5&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/spf13/pflag&amp;#34;
        ]
      }
    ]
  },
  {
    &amp;#34;Module&amp;#34;: {
      &amp;#34;Path&amp;#34;: &amp;#34;github.com/spiegel-im-spiegel/depm@v0.1.0&amp;#34;,
      &amp;#34;Packages&amp;#34;: [
        &amp;#34;github.com/spiegel-im-spiegel/depm&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/dependency&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/dependency/modjson&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/dependency/pkgjson&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/dotenc&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/ecode&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/facade&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/golist&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/modules&amp;#34;,
        &amp;#34;github.com/spiegel-im-spiegel/depm/packages&amp;#34;
      ]
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spiegel-im-spiegel/gocli@v0.10.3&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/spiegel-im-spiegel/gocli/exitcode&amp;#34;,
          &amp;#34;github.com/spiegel-im-spiegel/gocli/rwi&amp;#34;
        ]
      },
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spf13/cobra@v1.1.1&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/spf13/cobra&amp;#34;
        ]
      },
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/spiegel-im-spiegel/errs@v1.0.2&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/spiegel-im-spiegel/errs&amp;#34;
        ]
      },
      {
        &amp;#34;Path&amp;#34;: &amp;#34;golang.org/x/tools@v0.0.0-20201031021630-582c62ec74d0&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;golang.org/x/tools/go/ast/astutil&amp;#34;,
          &amp;#34;golang.org/x/tools/imports&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/event&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/event/core&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/event/keys&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/event/label&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/fastwalk&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/gocommand&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/gopathwalk&amp;#34;,
          &amp;#34;golang.org/x/tools/internal/imports&amp;#34;
        ]
      },
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/BurntSushi/toml@v0.3.1&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/BurntSushi/toml&amp;#34;
        ]
      },
      {
        &amp;#34;Path&amp;#34;: &amp;#34;github.com/emicklei/dot@v0.15.0&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;github.com/emicklei/dot&amp;#34;
        ]
      }
    ]
  },
  {
    &amp;#34;Module&amp;#34;: {
      &amp;#34;Path&amp;#34;: &amp;#34;golang.org/x/mod@v0.3.0&amp;#34;,
      &amp;#34;Packages&amp;#34;: [
        &amp;#34;golang.org/x/mod/module&amp;#34;,
        &amp;#34;golang.org/x/mod/semver&amp;#34;
      ]
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;Path&amp;#34;: &amp;#34;golang.org/x/xerrors@v0.0.0-20200804184101-5ec99f83aff1&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;golang.org/x/xerrors&amp;#34;,
          &amp;#34;golang.org/x/xerrors/internal&amp;#34;
        ]
      }
    ]
  },
  {
    &amp;#34;Module&amp;#34;: {
      &amp;#34;Path&amp;#34;: &amp;#34;golang.org/x/tools@v0.0.0-20201031021630-582c62ec74d0&amp;#34;,
      &amp;#34;Packages&amp;#34;: [
        &amp;#34;golang.org/x/tools/go/ast/astutil&amp;#34;,
        &amp;#34;golang.org/x/tools/imports&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/event&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/event/core&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/event/keys&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/event/label&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/fastwalk&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/gocommand&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/gopathwalk&amp;#34;,
        &amp;#34;golang.org/x/tools/internal/imports&amp;#34;
      ]
    },
    &amp;#34;Deps&amp;#34;: [
      {
        &amp;#34;Path&amp;#34;: &amp;#34;golang.org/x/mod@v0.3.0&amp;#34;,
        &amp;#34;Packages&amp;#34;: [
          &amp;#34;golang.org/x/mod/module&amp;#34;,
          &amp;#34;golang.org/x/mod/semver&amp;#34;
        ]
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出力は JSON 形式で。
パッケージ（モジュール）パスを省略するとカレント・ディレクトリを調べる&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--dot&lt;/code&gt; オプションを付けると &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT&lt;/a&gt; 言語形式で出力するので，そのまま &lt;code&gt;dot&lt;/code&gt; コマンドに渡して関連図を作成できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm module --dot github.com/spiegel-im-spiegel/depm | dot -Tpng -o output.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出力はこんな感じ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output.png&#34;&gt;&lt;img src=&#34;./output.png&#34; srcset=&#34;./output.png 2818w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output.png&#34;&gt;output.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;TOML 形式で以下のような設定ファイルを作れば（&lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT&lt;/a&gt; 言語の仕様にしたがって）見た目を多少変えることができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fontname&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Inconsolata&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;edge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm module --dot --dot-config dot-config.toml github.com/spiegel-im-spiegel/depm | dot -Tpng -o output2.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とかすれば&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output2.png&#34;&gt;&lt;img src=&#34;./output2.png&#34; srcset=&#34;./output2.png 2818w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output2.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output2.png&#34;&gt;output2.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;のような見た目にできる。
あと &lt;code&gt;-c&lt;/code&gt; オプションでモジュールの最新バージョンの取得もできたりする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;depm package&lt;/code&gt; コマンドにするとモジュール単位ではなくパッケージ単位で依存関係を整理する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ depm package github.com/spiegel-im-spiegel/depm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結構スゴい出力になるので，結果は割愛する（笑）
&lt;code&gt;depm package&lt;/code&gt; コマンドに &lt;code&gt;-s&lt;/code&gt; や &lt;code&gt;-i&lt;/code&gt; オプションを付けると &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; の標準ライブラリや internal パッケージも対象になるので，本当にワケワカラン出力になる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./output3.png&#34;&gt;&lt;img src=&#34;./output3.png&#34; srcset=&#34;./output3.png 9282w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;output3.png&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./output3.png&#34;&gt;output3.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;勢いで書いてろくにテストもしないでリリースしたが，あとはノンビリ手を入れていこう。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;パッケージ（モジュール）パスを省略した場合は，ツール内部で &lt;code&gt;go list&lt;/code&gt; コマンドに &lt;code&gt;all&lt;/code&gt; を渡している。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>スクリーン・キャプチャのキホン</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/10/screen-captors/" />
		<id>tag:text.Baldanders.info,2020-10-29:/remark/2020/10/screen-captors/</id>
		<published>2020-10-29T11:56:22+00:00</published>
		<updated>2020-10-30T10:57:03+00:00</updated>
		<summary>それ，知らんかっとってんちんとんしゃん</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;最初にものっそい言い訳してしまうと，普段スクリーン・キャプチャ機能なんか使わんのですよ，私は。
それでも &lt;code&gt;[Print Screen]&lt;/code&gt; キーを押せば画面が撮れることを覚えていただけでも褒めて欲しい（笑）&lt;/p&gt;
&lt;p&gt;で，今までは &lt;code&gt;[Print Screen]&lt;/code&gt; キーでスクリーン全体を撮るか &lt;code&gt;[Alt] + [Print Screen]&lt;/code&gt; でアクティブなウィンドウ領域を撮るかくらいしか知らなかったのだが， Windows 10 では &lt;code&gt;[&lt;/code&gt;&lt;span&gt;&lt;i class=&#34;fab fa-windows&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;code&gt;] + [Shift] + [s]&lt;/code&gt; で任意の矩形領域が撮れると教えてもらって驚愕した。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[&lt;/code&gt;&lt;span&gt;&lt;i class=&#34;fab fa-windows&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;code&gt;] + [Shift] + [s]&lt;/code&gt; 押下で画面上部に以下のようなコントロールが表示される。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./screen-captors.png&#34;&gt;&lt;img src=&#34;./screen-captors.png&#34; srcset=&#34;./screen-captors.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;左端のアイコンを選択しているこの状態が任意の矩形領域を切り取れるモードだ。&lt;/p&gt;
&lt;p&gt;更にこの機能を &lt;code&gt;[Print Screen]&lt;/code&gt; キーに割り当てることができるようだ。
詳しい手順は以下の記事を参考にどうぞ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hamachan.info/win10-win-winss/&#34;&gt;［Windows］+［Shift］+［S］で画面領域切り取り（PrintScreenに割り当ても可） | Windows 10 | 初心者のためのOffice講座&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更に更に，セルフタイマー付きスクリーン・キャプチャ機能や切り取った画像を加工できる “Snipping Tool” が Windows 標準のアクセサリとして搭載されていた。
それ，知らんかっとってんちんとんしゃん。&lt;/p&gt;
&lt;p&gt;今までペイントツールでちまちまとトリミングしてた私の苦労は何だったのか &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ところで &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でも簡単に矩形領域を撮れないの？ と軽くググってみたが， &lt;code&gt;[Shift] + [Print Screen]&lt;/code&gt; 押下で矩形領域を切り取れるようだ。
Windows より簡単だったよ。&lt;/p&gt;
&lt;p&gt;今まで Shotwell Viewer でちまちまとトリミングしてた私の苦労は何だったのか &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の場合，スクリーン・キャプチャ機能の実体は &lt;code&gt;gnome-screenshot&lt;/code&gt; コマンドで，これはコマンドラインからも起動できる。
たとえば，5秒間の遅延後にアクティブなウィンドウを撮りたければ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gnome-screenshot --window --delay=5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすればいいようだ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/office/copy-the-window-or-screen-contents-98c41969-51e5-45e1-be36-fb9381b32bb7&#34;&gt;Copy the window or screen contents - Office Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/ja-jp/windows/snipping-tool-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3-%E3%82%B7%E3%83%A7%E3%83%83%E3%83%88%E3%82%92%E3%82%AD%E3%83%A3%E3%83%97%E3%83%81%E3%83%A3%E3%81%99%E3%82%8B-00246869-1843-655f-f220-97299b865f6b&#34;&gt;Snipping Tool を使ってスクリーン ショットをキャプチャする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yas-nyan/items/80f2db8c4bdf4c8e87b8&#34;&gt;Ubuntuで端末からスクリーンショットを撮る方法まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/junki555/articles/982b5f3f124da1fb5548&#34;&gt;2020年10月現在スクリーンキャプチャおすすめツール(Windows/Mac)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.techsmith.com/screen-capture.html&#34;&gt;Snagit = The Best Screen Capture Software (Free Trial) | TechSmith&lt;/a&gt; : 有料だがかなり「使える！」らしい&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4257904623?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51EJVRC0iML._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4257904623?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ちまりまわるつ (Izumi Takemoto dashinaoshi)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;竹本 泉 (著)&lt;/dd&gt;
    &lt;dd&gt;朝日ソノラマ 2002-12-01&lt;/dd&gt;
    &lt;dd&gt;コミック&lt;/dd&gt;
    &lt;dd&gt;4257904623 (ASIN), 9784257904625 (EAN), 4257904623 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;竹本泉さんの魔法（ちまちまじっく）世界線の原点とも言える作品。ただしリニューアル版。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ちまりまわるつ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B004JSTW5S?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51nAq5nBXKL._SL160_.jpg&#34; width=&#34;106&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B004JSTW5S?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;カードキャプターさくら 1期&amp;#43;2期&amp;#43;3期 コンプリート DVD-BOX [Import]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;IDP&lt;/dd&gt;
    &lt;dd&gt;DVD&lt;/dd&gt;
    &lt;dd&gt;B004JSTW5S (ASIN), 3760000568838 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;3期分合わせて4千円弱とか太っ腹！ まぁ私は &lt;a href=&#34;https://www.happyon.jp/cardcaptor-sakura&#34;&gt;Hulu で観る&lt;/a&gt;けどね。たまに観たくなるのよ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-05-05&#34;&gt;2019-05-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- カードキャプターさくら 1期+2期+3期 コンプリート DVD-BOX --&gt;
</content>
	</entry><entry>
		<title>Git v2.29 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/10/git-2_29-is-released/" />
		<id>tag:text.Baldanders.info,2020-10-25:/release/2020/10/git-2_29-is-released/</id>
		<published>2020-10-25T09:09:33+00:00</published>
		<updated>2020-11-02T23:24:36+00:00</updated>
		<summary>SHA-2 コミット・ハッシュの実験的サポート / Windows 版 Git Credential Manager のアップグレード</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先日 &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; v.2.29 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lore.kernel.org/git/xmqqy2k2t77l.fsf@gitster.c.googlers.com/&#34;&gt;[ANNOUNCE] Git v2.29.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SHA-2 コミット・ハッシュの実験的サポート&lt;/h2&gt;
&lt;p&gt;v2.29 ではコミット・ハッシュに関する重大な仕様変更がある。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Git 2.29 includes experimental support for writing your repository’s objects using a SHA-256 hash of their contents, instead of using SHA-1&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.blog/2020-10-19-git-2-29-released/&#34;&gt;Highlights from Git 2.29 - The GitHub Blog&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;といっても今回は実験的なサポート（experimental support）で，試すのであれば以下のような感じでできるらしい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git init --object-format=sha256 sample-repo
Initialized empty Git repository in /home/username/sample-repo/.git/

$ cd sample-repo
$ echo &amp;#39;Hello, SHA-256!&amp;#39; &amp;gt;README.md
$ git add README.md
$ git commit -m &amp;#34;README.md: initial commit&amp;#34;
[main (root-commit) 6d45449] README.md: initial commit
 1 file changed, 1 insertion(+)
 create mode 100644 README.md

 $ git rev-parse HEAD
 6d45449028a8e76500adbfe7330e779d5dc4a3a14fca58ff08ec354c58727b2c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然ながら SHA-1 ベースのコミット・ハッシュと SHA-2 (SHA256) ベースのコミット・ハッシュとの間には互換性がない。
当面は2系統のリポジトリを使い分けて運用することになりそうだ。
ただし，将来的には両者を相互運用できるようにするらしい。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;In future releases, Git will support interoperating between repositories with different object formats by computing both a SHA-1 and SHA-256 hash of each object it writes, and storing a translation table between them. This will eventually allow repositories that store their objects using SHA-256 to interact with (sufficiently up-to-date) SHA-1 clients, and vice-versa. It will also allow converted SHA-256 repositories to have their references to older SHA-1 commits still function as normal (e.g., if I write a commit whose message references an earlier commit by its SHA-1 name, then Git will still be able to follow that reference even after the repository is converted to use SHA-256 by consulting the translation table)&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.blog/2020-10-19-git-2-29-released/&#34;&gt;Highlights from Git 2.29 - The GitHub Blog&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ここまで到達すれば SHA-2 ベースへ本格的に切り替えていってもいいかも知れない。&lt;/p&gt;
&lt;h2&gt;Windows 版 Git Credential Manager のアップグレード&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; では，もうひとつ重大な変更がある。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;This version upgrades existing users of &lt;a href=&#34;https://github.com/microsoft/Git-Credential-Manager-for-Windows/&#34;&gt;Git Credential Manager for Windows&lt;/a&gt; (which was just deprecated) to &lt;a href=&#34;https://github.com/microsoft/Git-Credential-Manager-Core&#34;&gt;Git Credential Manager Core&lt;/a&gt; (“GCM Core”, which is the designated successor of the former). This is necessary because &lt;a href=&#34;https://github.blog/changelog/2019-08-08-password-based-http-basic-authentication-deprecation-and-removal/&#34;&gt;GitHub deprecated password-based authentication&lt;/a&gt; and intends to remove support for it soon, and GCM Core is prepared for this change.&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.29.0.windows.1&#34;&gt;Release Git for Windows 2.29.0 · git-for-windows/git&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;GitHub リポジトリに HTTPS でアクセスしている場合は注意が必要かも知れない（&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; を使ってないので，どの程度影響するか分かってない。ゴメンペコン &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ゴメン&#34;&gt;🙇&lt;/abbr&gt;）。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/git/xmqq4kmlj9q9.fsf@gitster.c.googlers.com/&#34;&gt;[ANNOUNCE] Git v2.29.1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lore.kernel.org/git/xmqqlffo4qjw.fsf@gitster.c.googlers.com/&#34;&gt;[ANNOUNCE] Git v2.29.2 - Junio C Hamano&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.blog/2020-10-19-git-2-29-released/&#34;&gt;Highlights from Git 2.29 - The GitHub Blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.29.0.windows.1&#34;&gt;Release Git for Windows 2.29.0 · git-for-windows/git · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.29.1.windows.1&#34;&gt;Release Git for Windows 2.29.1 · git-for-windows/git · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.29.2.windows.1&#34;&gt;Release Git for Windows 2.29.2 · git-for-windows/git · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1284871.html&#34;&gt;「Git for Windows 2.29.0」が公開 ～セットアップ時にデフォルトブランチ名を設定可能 - 窓の杜&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-git-from-ppa/&#34;&gt;PPA から Git をインストールする&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20201025-sayonara-sha1&#34;&gt;さようなら SHA-1&lt;/a&gt; : SHA-1 の危殆化について Zenn でまとめ記事を書いてみた&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>テンキーなんて飾りです，偉い人には分からんのです</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/10/no-need-numeric-keypad/" />
		<id>tag:text.Baldanders.info,2020-10-25:/remark/2020/10/no-need-numeric-keypad/</id>
		<published>2020-10-25T07:16:12+00:00</published>
		<updated>2020-10-25T07:25:42+00:00</updated>
		<summary>テンキーがないだけで机上が随分広くなった気がする。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;おかげさまで新しい会社に拾っていただきまして先日から仕事をはじめているのだが「キーボードは使い勝手がいいものを自前で用意していいよ」と許可してもらったので，この機会にキーボードを買うことにした。&lt;/p&gt;
&lt;p&gt;私は文房具全般にあまりこだわりがないのだが，パソコンのキーボードに関しては2つだけある。
すなわち&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;流行りの薄型キーボードは NG (指が痛くなる)&lt;/li&gt;
&lt;li&gt;テンキー使わんし要らね（ただしノートPC風のキー配列は論外）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;だ。
ちなみに押打時の感触とかにこだわりはない。&lt;/p&gt;
&lt;p&gt;そんで，いろいろ調べた結果&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B07NDLJ6Q9?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41OKiHUhUqL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07NDLJ6Q9?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;エレコム キーボード 有線 メンブレン コンパクトキーボード ブラック TK-FCM103XBK&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;エレコム (Release 2019-02-28)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B07NDLJ6Q9 (ASIN), 4549550107761 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;いわゆる「テンキーレス」なキーボードが欲しかったので。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-10-25&#34;&gt;2020-10-25&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- コンパクトキーボード --&gt;
&lt;p&gt;にした。
税込981円。
マイナポイントで買ったと思えば無料も同然（笑）&lt;/p&gt;
&lt;p&gt;いや，1万円以上出せばゲーミング・キーボードとかでよさげなのはあるよ。
でもマウスやキーボードなんて消耗品にお金かけたくないじゃん。&lt;/p&gt;
&lt;p&gt;テンキーがないだけで机上が随分広くなった気がする。
やっぱテンキーなんて飾りだよ。
偉い人には分からんのです。&lt;/p&gt;
&lt;p&gt;実際に職場で使ってみたらかなりいい感じだったので，自宅 PC 用にも追加で買ってしまった。
（多分）5年以上使っててキートップの刻印も剥げちゃってるしね。
まぁ刻印が見えなくて困ることはないんだけど &lt;abbr class=&#34;emoji-chars&#34; title=&#34;:smile:&#34;&gt;😄&lt;/abbr&gt;&lt;/p&gt;
</content>
	</entry><entry>
		<title>GNKF: NKF ぽいなにか の v0.2.0 をリリースした</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/10/gnkf-v0_2_0-is-released/" />
		<id>tag:text.Baldanders.info,2020-10-14:/release/2020/10/gnkf-v0_2_0-is-released/</id>
		<published>2020-10-14T06:13:41+00:00</published>
		<updated>2020-10-14T06:29:19+00:00</updated>
		<summary>このバージョンで BASE64 符号化の機能を追加した。これで base64 や openssl コマンドがない環境でも大丈夫。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;文字列処理の習作 &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf&#34; title=&#34;spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang&#34;&gt;gnkf&lt;/a&gt; の v0.2.0 をリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf/releases/tag/v0.2.0&#34;&gt;Release v0.2.0 · spiegel-im-spiegel/gnkf · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このバージョンで BASE64 符号化の機能を追加した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gnkf base64 -h
Encode/Decode BASE64.

Usage:
  gnkf base64 [flags]

Aliases:
  base64, b64

Flags:
  -d, --decode          decode BASE64 string
  -f, --file string     path of input text file
  -u, --for-url         encoding/decoding defined in RFC 4648
  -h, --help            help for base64
  -p, --no-padding      no padding
  -o, --output string   path of output file

Global Flags:
      --debug   for debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;オリジナルの nkf はコマンドとオプションがごちゃごちゃしてて分かりにくいので &lt;code&gt;base64&lt;/code&gt; や &lt;code&gt;openssl base64&lt;/code&gt; のコマンドの形式に合わせることにした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ echo Hello World | gnkf base64
SGVsbG8gV29ybGQK

$ echo SGVsbG8gV29ybGQK | gnkf base64 -d
Hello World
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで &lt;code&gt;base64&lt;/code&gt; や &lt;code&gt;openssl&lt;/code&gt; コマンドがない環境でも大丈夫（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/gnkf/&#34;&gt;GNKF: Network Kanji Filter by Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>Go 製のツールとパッケージをまとめてアップデートした</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/10/released-tools-and-packages-by-golang/" />
		<id>tag:text.Baldanders.info,2020-10-02:/release/2020/10/released-tools-and-packages-by-golang/</id>
		<published>2020-10-02T07:40:54+00:00</published>
		<updated>2020-10-02T07:43:41+00:00</updated>
		<summary>Update gpgpdump, books-data, gnkf, pa-api, aozora-api, openbd-api, gocli, and errs packages</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; リポジトリにある &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;製のツールやパッケージについて &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; Actions で CI (Continuous Integration) を回す目処が立ったので，設定を変更しリリースし直すことにした。
今回リリースしたツール・パッケージのうち主なものは以下の通り。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump/releases/tag/v0.9.1&#34;&gt;Release v0.9.1 · spiegel-im-spiegel/gpgpdump · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/books-data/releases/tag/v0.5.8&#34;&gt;Release v0.5.8 · spiegel-im-spiegel/books-data · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf/releases/tag/v0.1.3&#34;&gt;Release v0.1.3 · spiegel-im-spiegel/gnkf · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/pa-api/releases/tag/v0.7.2&#34;&gt;Release v0.7.2 · spiegel-im-spiegel/pa-api · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/aozora-api/releases/tag/v0.2.6&#34;&gt;Release v0.2.6 · spiegel-im-spiegel/aozora-api · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/openbd-api/releases/tag/v0.2.6&#34;&gt;Release v0.2.6 · spiegel-im-spiegel/openbd-api · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli/releases/tag/v0.10.3&#34;&gt;Release v0.10.3 · spiegel-im-spiegel/gocli · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/errs/releases/tag/v1.0.2&#34;&gt;Release v1.0.2 · spiegel-im-spiegel/errs · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;若干 lint に叱られたり軽微なバグを指摘されたりしたものもあるが，機能上の追加・変更はない。&lt;/p&gt;
&lt;p&gt;それじゃあ，次のステージに行きましょう♪&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/gpgpdump/&#34;&gt;OpenPGP パケットを可視化する gpgpdump&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/books-data/&#34;&gt;書籍データ取得ツール books-data&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/gnkf/&#34;&gt;GNKF: Network Kanji Filter by Golang&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/pa-api-v5/&#34;&gt;Go 言語用 PA-API v5 クライアント・パッケージ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/aozora-api-package-for-golang/&#34;&gt;Go 言語用青空文庫 API クライアント・パッケージ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/openbd-api-package-for-golang/&#34;&gt;Go 言語用 openBD クライアント・パッケージ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/gocli-package-for-golang/&#34;&gt;Go 言語用 CLI プログラミング支援パッケージ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/errs-package-for-golang/&#34;&gt;Go 言語用エラーハンドリング・パッケージ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/using-golangci-lint-action/&#34;&gt;golangci-lint を GitHub Actions で使う&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/check-for-vulns-in-golang-dependencies/&#34;&gt;Go 依存パッケージの脆弱性検査&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/cross-compiling-in-github-actions-with-goreleaser/&#34;&gt;GitHub Actions でクロス・コンパイル（GoReleaser 編）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/10/github-code-scanning-with-golang/&#34;&gt;Go のコードでも GitHub Code Scanning が使えるらしい&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZ8UA8O?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/516hKjO3t-L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZ8UA8O?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;射手座☆午後九時Don&amp;#39;t be late&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シェリル・ノーム starring May&amp;#39;n (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;FlyingDog 2008-05-08 (Release 2017-01-16)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B01MZ8UA8O (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;移動中に聴くとノリノリになれる（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-10-02&#34;&gt;2020-10-02&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 射手座☆午後九時 Don&#39;t be late --&gt;
</content>
	</entry>
</feed>
