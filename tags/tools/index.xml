<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Tools - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/tools/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/tools/index.xml" />
	<id>tag:text.Baldanders.info,2018-12-27:/tags</id>
	<updated>2018-12-27T19:55:14+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.52</generator>

	
	<entry>
		<title>真面目に PlantUML : PlantUML のインストール - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/12/plantuml-1/" />
		<id>tag:text.Baldanders.info,2018-12-27:/remark/2018/12/plantuml-1/</id>
		<published>2018-12-27T19:55:14+09:00</published>
		<updated>2018-12-27T19:55:14+09:00</updated>
		<summary> せっかく時間ができたのだから PlantUML についてちゃんと調べてみることにした。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;1年ほど前に &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタを使って &lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; を使って UML で遊んだのだが， &lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; 自体は「とりあえず動かしてみた」というレベルできちんと調べていなかった。
せっかく時間ができたのだから，この機会にちゃんと調べてみることにした。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/12/plantuml-1/&#34;&gt;PlantUML のインストール&lt;/a&gt; ← イマココ&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;plantuml-のインストール&#34;&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; のインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; は UML (Unified Modeling Language; 統一モデリング言語) を記述するための DSL (Domain-Specific Language; ドメイン特化言語) と考えてよい。
UML の構文（に相当するもの）は図形で表されるが，それをテキストで記述できるようにしたのが &lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; である。
&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; では UML 2.0 のうち以下の図（Diagrams）を作成できるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;構造図（Structural Diagrams）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/class-diagram&#34;&gt;クラス図（Class Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/component-diagram&#34;&gt;コンポーネント図（Component Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/object-diagram&#34;&gt;オブジェクト図（Object Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/deployment-diagram&#34;&gt;配置図（Deployment Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;振る舞い図（Behavioral Diagrams）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/sequence-diagram&#34;&gt;シーケンス図（Sequence Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/use-case-diagram&#34;&gt;ユースケース図（Use Case Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/activity-diagram-beta&#34;&gt;アクティビティ図（Activity Diagram）&lt;/a&gt; ※ベータ版&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/state-diagram&#34;&gt;状態遷移図（State Machine Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/timing-diagram&#34;&gt;タイミング図（Timing Diagram）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; の実行モジュールは Java の jar ファイルで提供されているため，あらかじめ Java の実行環境を用意する必要がある（最新の &lt;a href=&#34;http://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt; で問題ない）。
また&lt;a href=&#34;http://plantuml.com/sequence-diagram&#34;&gt;シーケンス図&lt;/a&gt;と&lt;a href=&#34;http://plantuml.com/activity-diagram-beta&#34;&gt;アクティビティ図&lt;/a&gt;以外は &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT 言語&lt;/a&gt;にトランス・コンパイルされるため &lt;a href=&#34;http://graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; もインストールする必要がある。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; の実行モジュールは&lt;a href=&#34;http://plantuml.com/download&#34;&gt;ダウンロードページ&lt;/a&gt;から最新の &lt;code&gt;plantuml.jar&lt;/code&gt; ファイルをダウンロードすれば大丈夫。
&lt;a href=&#34;http://graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; も&lt;a href=&#34;http://graphviz.org/download/&#34;&gt;ダウンロードページ&lt;/a&gt;等から取得できる。
たとえば Windows であれば “Stable 2.38 Windows install packages” をダウンロードしてインストールすればよい。&lt;/p&gt;

&lt;p&gt;用意ができたら &lt;code&gt;plantuml.jar&lt;/code&gt; ファイルのあるフォルダで以下のコマンドを入力し動作確認する（以下は Windows 7 環境下での例）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar plantuml.jar -version
PlantUML version 1.2018.14 (Sat Dec 22 01:33:16 JST 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.1+13
Operating System: Windows 7
OS Version: 6.1
Default Encoding: MS932
Language: ja
Country: JP
Machine: ********
PLANTUML_LIMIT_SIZE: 4096
Processors: 4
Max Memory: 2,065,694,720
Total Memory: 130,023,424
Free Memory: 123,436,232
Used Memory: 6,587,192
Thread Active Count: 1

The environment variable GRAPHVIZ_DOT has not been set
Dot executable is C:\path\to\dot.exe
Dot version: dot - graphviz version 2.38.0 (20140413.2041)
Installation seems OK. File generation OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;GRAPHVIZ_DOT&lt;/code&gt; 環境変数がないよ，と言っているが &lt;a href=&#34;http://graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; の dot コマンドにパスが通っていれば無問題。
念のため dot コマンドとの連携を確認しておこう。
以下のコマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar plantuml.jar -testdot
The environment variable GRAPHVIZ_DOT has not been set
Dot executable is C:\path\to\dot.exe
Dot version: dot - graphviz version 2.38.0 (20140413.2041)
Installation seems OK. File generation OK&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;コマンドライン-オプション&#34;&gt;コマンドライン・オプション&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; のコマンドライン・オプションは以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar plantuml.jar -h
Usage: java -jar plantuml.jar [options] -gui
        (to execute the GUI)
        or java -jar plantuml.jar [options] [file/dir] [file/dir] [file/dir]
        (to process files or directories)

You can use the following wildcards in files/dirs:
        *       means any characters but &amp;#39;\&amp;#39;
        ?       one and only one character but &amp;#39;\&amp;#39;
        **      means any characters (used to recurse through directories)

where options include:

        -gui                To run the graphical user interface
        -tpng               To generate images using PNG format (default)
        -tsvg               To generate images using SVG format
        -teps               To generate images using EPS format
        -tpdf               To generate images using PDF format
        -tvdx               To generate images using VDX format
        -txmi               To generate XMI file for class diagram
        -tscxml             To generate SCXML file for state diagram
        -thtml              To generate HTML file for class diagram
        -ttxt               To generate images with ASCII art
        -tutxt              To generate images with ASCII art using Unicode characters
        -tlatex             To generate images using LaTeX/Tikz format
        -tlatex:nopreamble  To generate images using LaTeX/Tikz format without preamble
        -o[utput] &amp;#34;dir&amp;#34;     To generate images in the specified directory
        -DVAR1=value        To set a preprocessing variable as if &amp;#39;!define VAR1 value&amp;#39; were used
        -Sparam1=value      To set a skin parameter as if &amp;#39;skinparam param1 value&amp;#39; were used
        -r[ecurse]          recurse through directories
        -I\path\to\file     To include file as if &amp;#39;!include file&amp;#39; were used
        -I\path\to\*.puml   To include files with pattern
        -charset xxx        To use a specific charset (default is windows-31j)
        -e[x]clude pattern  To exclude files that match the provided pattern
        -metadata           To retrieve PlantUML sources from PNG images
        -nometadata         To NOT export metadata in PNG/SVG generated files
        -checkmetadata      Skip PNG files that don&amp;#39;t need to be regenerated
        -version            To display information about PlantUML and Java versions
        -checkversion       To check if a newer version is available for download
        -v[erbose]          To have log information
        -quiet              To NOT print error message into the console
        -debugsvek          To generate intermediate svek files
        -h[elp]             To display this help message
        -testdot            To test the installation of graphviz
        -graphvizdot &amp;#34;exe&amp;#34;  To specify dot executable
        -p[ipe]             To use stdin for PlantUML source and stdout for PNG/SVG/EPS generation
        -encodesprite 4|8|16[z] &amp;#34;file&amp;#34;      To encode a sprite at gray level (z for compression) from an image
        -computeurl|-encodeurl      To compute the encoded URL of a PlantUML source file
        -decodeurl          To retrieve the PlantUML source from an encoded URL
        -syntax             To report any syntax error from standard input without generating images
        -language           To print the list of PlantUML keywords
        -checkonly          To check the syntax of files without generating images
        -failfast           To stop processing as soon as a syntax error in diagram occurs
        -failfast2          To do a first syntax check before processing files, to fail even faster
        -pattern            To print the list of Regular Expression used by PlantUML
        -duration           To print the duration of complete diagrams processing
        -nbthread N         To use (N) threads for processing
        -nbthread auto      To use 4 threads for processing
        -timeout N          Processing timeout in (N) seconds. Defaults to 15 minutes (900 seconds).
        -author[s]          To print information about PlantUML authors
        -overwrite          To allow to overwrite read only files
        -printfonts         To print fonts available on your system
        -enablestats        To enable statistics computation
        -disablestats       To disable statistics computation (default)
        -htmlstats          To output general statistics in file plantuml-stats.html
        -xmlstats           To output general statistics in file plantuml-stats.xml
        -realtimestats      To generate statistics on the fly rather than at the end
        -loopstats          To continuously print statistics about usage
        -splash             To display a splash screen with some progress bar
        -progress           To display a textual progress bar in console
        -pipeimageindex N   To generate the Nth image with pipe option
        -stdlib             To print standart library info
        -extractstdlib      To extract PlantUML Standard Library into stdlib folder
        -filename &amp;#34;example.puml&amp;#34;    To override %filename% variable
        -preproc            To output preprocessor text of diagrams
        -cypher             To cypher texts of diagrams so that you can share them

If needed, you can setup the environment variable GRAPHVIZ_DOT.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;かなりの数のオプションがあるが，よく使うのは以下のものだろうか。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-tpng&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PNG 形式で出力（既定値）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-tsvg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SVG 形式で出力&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-teps&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;EPS 形式で出力&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-tpdf&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF 形式で出力&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-tlatex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LaTeX/Tikz 形式で出力&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-tlatex:nopreamble&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;LaTeX/Tikz 形式で出力（プリアンブルなし）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-o[utput] &amp;quot;dir&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;指定したフォルダに出力&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-charset xxx&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文字エンコーディングの指定&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-nometadata&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PNG/SVG 出力にメタデータを含めない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-p[ipe]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;入出力をパイプで行う&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;みんな大好き-hello-world&#34;&gt;みんな大好き Hello World&lt;/h2&gt;

&lt;p&gt;では簡単なコードを処理してみよう。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hello.puml&lt;/code&gt; という名前のファイルを用意して以下のように入力する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;@startuml

Alice-&amp;gt;Bob : hello
Alice&amp;lt;-Bob : はろー

@enduml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; ではドキュメントの中にコードを埋め込むことを想定して &lt;code&gt;@startuml ... enduml&lt;/code&gt; 内の記述のみが処理の対象となる。&lt;/p&gt;

&lt;p&gt;ではこのファイルを処理してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar plantuml.jar -charset UTF-8 hello.puml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;hello.puml&lt;/code&gt; と同じフォルダに &lt;code&gt;hello.png&lt;/code&gt; ファイルが出力される。
&lt;code&gt;hello.png&lt;/code&gt; ファイルの内容は以下の通り。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello.puml&#34;&gt;&lt;img src=&#34;./hello.png&#34; srcset=&#34;./hello.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;って，ちっちゃ！
じゃあ，解像度を調節してもう少し大きくしてみよう。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;@startuml

&lt;span class=&#34;hl&#34;&gt;skinparam dpi 300
&lt;/span&gt;
Alice-&amp;gt;Bob : hello
Alice&amp;lt;-Bob : はろー

@enduml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これを処理するとこうなる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello2.puml&#34;&gt;&lt;img src=&#34;./hello2.png&#34; srcset=&#34;./hello2.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;おおっ。
おっきくなった。&lt;/p&gt;

&lt;h2 id=&#34;見た目の調整&#34;&gt;見た目の調整&lt;/h2&gt;

&lt;p&gt;上の例で示したように &lt;a href=&#34;http://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; では &lt;code&gt;skinparam&lt;/code&gt; コマンドを使って見た目の調整ができる。
では，もう少し調整を入れて UML っぽい図にしてみる。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;@startuml

&lt;span class=&#34;hl&#34;&gt;skinparam shadowing false
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam backgroundColor transparent
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam dpi 300
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam arrow {
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontColor Black
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontName Noto Serif JP
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontSize 10
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontStyle plain
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  Color Black
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  Thickness 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;}
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam participant {
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontColor Black
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontName Noto Sans
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontSize 14
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  FontStyle plain
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  BackgroundColor WhiteSmoke
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  BorderColor Black
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  BorderThickness 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  Padding 20
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;}
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam sequence {
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  LifeLineBackgroundColor transparent
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  LifeLineBorderColor Black
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  LifeLineBorderThickness 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  MessageAlignment center
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;}
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;hide footbox
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;skinparam BoxPadding 10
&lt;/span&gt;
Alice-&amp;gt;Bob : hello
Alice&amp;lt;-Bob : はろー

@enduml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;フォントの変更と線の色と太さを調節してみた。
またライフラインの間隔も調整している。
以上を処理するとこんな図になる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello3.puml&#34;&gt;&lt;img src=&#34;./hello3.png&#34; srcset=&#34;./hello3.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;h2 id=&#34;見た目の指定を別ファイルに分離する&#34;&gt;見た目の指定を別ファイルに分離する&lt;/h2&gt;

&lt;p&gt;見た目の指定は別ファイルにして再利用したいところである。
そこで &lt;code&gt;hello.iuml&lt;/code&gt; ファイルを作成して &lt;code&gt;skinparam&lt;/code&gt; コマンドの内容をまるっと移動してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;skinparam shadowing false
skinparam backgroundColor transparent
skinparam dpi 300

skinparam arrow {
  FontColor Black
  FontName Noto Serif JP
  FontSize 10
  FontStyle plain
  Color Black
  Thickness 1
}
skinparam participant {
  FontColor Black
  FontName Noto Sans
  FontSize 14
  FontStyle plain
  BackgroundColor WhiteSmoke
  BorderColor Black
  BorderThickness 1
  Padding 20
}
skinparam sequence {
  LifeLineBackgroundColor transparent
  LifeLineBorderColor Black
  LifeLineBorderThickness 1
  MessageAlignment center
}
hide footbox
skinparam BoxPadding 10&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このファイルをインクルードする形でコードを修正する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;@startuml

&lt;span class=&#34;hl&#34;&gt;!include hello.iuml
&lt;/span&gt;
Alice-&amp;gt;Bob : hello
Alice&amp;lt;-Bob : はろー

@enduml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これを処理すると&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello4.puml&#34;&gt;&lt;img src=&#34;./hello4.png&#34; srcset=&#34;./hello4.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;先程と全く同じ結果が得られる。&lt;/p&gt;

&lt;p&gt;また最初の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-puml&#34; data-lang=&#34;puml&#34;&gt;@startuml

Alice-&amp;gt;Bob : hello
Alice&amp;lt;-Bob : はろー

@enduml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;に対して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ java -jar plantuml.jar -charset UTF-8 -config hello.iuml hello.puml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と &lt;code&gt;-config&lt;/code&gt; オプションで &lt;code&gt;hello.iuml&lt;/code&gt; ファイルを指定しても同じ結果が得られる。
これで再利用しやすくなっただろう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itsenka.com/contents/development/uml/&#34;&gt;UML入門 - IT専科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plantuml.com/skinparam&#34;&gt;Changing colors and fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yohshiy.blog.fc2.com/blog-entry-152.html&#34;&gt;PlantUML の使い方 | プログラマーズ雑記帳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Trello で引っ越し - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/12/move-with-trello/" />
		<id>tag:text.Baldanders.info,2018-12-24:/remark/2018/12/move-with-trello/</id>
		<published>2018-12-24T19:06:08+09:00</published>
		<updated>2018-12-24T19:06:08+09:00</updated>
		<summary>必要なタスクが多く私の貧弱な脳みそでは管理しきれなくなったため Trello を試すことにした。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/12/i-am-a-sunday-programmer/&#34; title=&#34;どうも，日曜プログラマの Spiegel です&#34;&gt;前回の話&lt;/a&gt;の通り実家に引っ越すことになったのだが，今まで過ごしてきた環境を整理するのに必要なタスクが多く私の貧弱な脳みそでは管理しきれなくなったため &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; を試すことにした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; はタスクを付箋紙のように貼り付けて運用するタスク管理サービスで，最小構成であれば無料で利用できる。
今回 &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; を選択した理由は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;操作がシンプルで，いわゆる「かんばん方式」と相性がいい&lt;/li&gt;
&lt;li&gt;スマートフォンなどの携帯端末で運用でき，しかも直感的で比較的分かりやすい&lt;/li&gt;
&lt;li&gt;日本語でおｋ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; ではプロジェクトを「ボード」と呼び，ボードの中に複数の「リスト」を作成できる。
更に「リスト」の中に複数の「カード」を作成することができる。
この「カード」が付箋紙の役割となる。
「リスト」と「カード」はいくらでも追加できるようだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/xky48zyL9iA&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xky48zyL9iA&#34;&gt;Getting Started With Trello (Demo) - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;引っ越し-ボードの作成&#34;&gt;「引っ越し」ボードの作成&lt;/h2&gt;

&lt;p&gt;まずは「引っ越し」ボードを新規に作成し，その中に以下のリストを作成する。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;リスト名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;掲示&lt;/td&gt;
&lt;td&gt;タスク以外の情報を置いておく&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;課題&lt;/td&gt;
&lt;td&gt;「引っ越し」に関するタスクを置いておく&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;着手中&lt;/td&gt;
&lt;td&gt;「引っ越し」に関するタスクのうち着手中のものを置いておく&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;確認待ち&lt;/td&gt;
&lt;td&gt;着手中のタスクの中で待ち状態（自身ではアクションを起こせない）のものを置いておく&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完了&lt;/td&gt;
&lt;td&gt;完了したタスクを置いておく&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;必要となるタスクを列挙する&#34;&gt;必要となるタスクを列挙する&lt;/h2&gt;

&lt;p&gt;次に「引っ越し」に必要なタスクをカードとして「課題」リストに列挙する。
このときはタスク間の関係とか優先順位とかはとりあえず横において，ひたすら列挙することに専念する。&lt;/p&gt;

&lt;h2 id=&#34;タスクを整理し優先順位を付ける&#34;&gt;タスクを整理し優先順位を付ける&lt;/h2&gt;

&lt;p&gt;列挙したタスクを整理する。
このとき，以下のことに注意する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タスク以外のカードを除外する

&lt;ul&gt;
&lt;li&gt;情報（引越し業者の連絡先など）のみのカードは「掲示」リストに移動する&lt;/li&gt;
&lt;li&gt;ルーチンワーク（毎週のゴミ出しなど）はタスクに含めず情報として「掲示」リストに移動する&lt;/li&gt;
&lt;li&gt;イベントやマイルストーンは除外する（後述） ただしイベントやマイルストーンの前準備としてのタスクについては別途カードを起こして整理する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;タスク間の関連が強いものについてはひとつのカードにまとめ，サブタスクをチェックリストとして列挙する&lt;/li&gt;
&lt;li&gt;カードに「期限」を設定する（とりあえず大雑把な期限でよい）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;タスクの優先順位の付け方はプロジェクトによって色々あると思うが「引っ越し」の場合は明らかに「期限」が優先順位のキーになる筈である。
そこで「掲示」リストの各カードを「期限」の昇順でソートする。&lt;/p&gt;

&lt;h3 id=&#34;スケジュール-サービスとの連携&#34;&gt;スケジュール・サービスとの連携&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; には “Power-Up” と呼ばれる拡張機能があって，これはボードメニューから設定できる。
無料ユーザもひつだけ “Power-Up” を追加できるのだが，ここで Calendar 機能を追加することを強くオススメする。&lt;/p&gt;

&lt;p&gt;Calendar 機能では期限を設定したカードを対象にカレンダー表示ができるのだが， iCal 形式でエクスポートできる。
これを Google Calendar や他のカレンダー・サービス（またはアプリ）にインポートすることでスケジュール管理ができるようになる。&lt;/p&gt;

&lt;p&gt;前節で「イベントやマイルストーンは除外する」と書いたが，ルーチンワークやイベント・マイルストーンはカレンダー・サービス（またはアプリ）で管理すればタスクとスケジュールとの連携が可能になる。
これでプロジェクト全体の見通しがとても良くなるので是非お試しあれ！&lt;/p&gt;

&lt;h2 id=&#34;タスクに着手する&#34;&gt;タスクに着手する&lt;/h2&gt;

&lt;p&gt;「課題」リストのカードのうち着手可能なタスクから「着手中」リストに移動する。
このときタスクの担当者を「メンバー」としてセットする。
こうしておけば担当したタスクについて &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; のホームページに「次にやる」カードが表示される。
逆に「完了」リストに移動したカードからは「メンバー」を削除すること。&lt;/p&gt;

&lt;p&gt;（引越し業者など）相手からのアクションを待っているタスクについてはカードを「確認待ち」リストに移動する。
このとき確認の問い合わせ担当を「メンバー」としてセットし，確認のデッドラインを「期限」にセットする。
カードを「確認待ち」リストから「着手中」リストに戻す際に「メンバー」をタスク実行者に「期限」を完了予定日時に設定し直す（実はこのタイミングでスケジュールの確認・見直しができる）。&lt;/p&gt;

&lt;p&gt;「確認待ち」リストは定期的に見直すことで（ルーチンワークとしてスケジュール管理する）見落としをなくす。&lt;/p&gt;

&lt;p&gt;あるタスクを遂行中に副次的に別のタスクが発生した場合は遠慮なくカードを追加する。
このとき，いったん「課題」リストにカードを起こして全体を見ながら整理するクセをつけるとよい。
「全体最適化」というやつである。&lt;/p&gt;

&lt;p&gt;カードのコメント機能はメンバー間のやり取りのみに利用する。
情報を追加する場合は「詳細説明」に追記する。&lt;/p&gt;

&lt;p&gt;何らかの理由で期限までにタスクの遂行が難しいと分かったら遠慮なくリスケジュールする。
タスク管理ではタスクの完遂が&lt;a href=&#34;https://dic.pixiv.net/a/%E9%A2%A8%E8%A6%8B%E3%81%BF%E3%81%9A%E3%81%BB&#34;&gt;最優先事項&lt;/a&gt;であり，タスク管理とスケジュール管理が競合するのであればタスクの遂行を優先すべきである。
&lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; では「期限」をキーに簡単にソートし直せるためリスケジュールも比較的簡単にできる（もちろん，そのための人間側の調整は大変だけど）。&lt;/p&gt;

&lt;h2 id=&#34;gtd-は失敗したけど-trello-なら大丈夫&#34;&gt;GTD は失敗したけど &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; なら大丈夫&lt;/h2&gt;

&lt;p&gt;実は一度 GTD (Getting Things Done) 手法によるタスク管理をやったことがあるのだが3ヶ月ほどで挫折してしまった。
挫折した理由は分かっていて，何らかのイレギュラー（病気とか）が起こった場合に，それを修復しようとして無理をしてしまい，そこから管理が破綻していくのである。&lt;/p&gt;

&lt;p&gt;じゃあ何故 &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; で大きな破綻もなく上手く行ったかというと，実は &lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; はスケジュール管理が得意ではなく，自然にタスク完遂を優先に運用できるからだと気がついた。&lt;/p&gt;

&lt;p&gt;GTD はどちらかというとワークフローのための管理手法であり，タスクとスケジュールの分離が難しく，しかもスケジュール完遂が優先されがちである。
多分この辺が私の性格に合ってないんじゃないかと思う。&lt;/p&gt;

&lt;p&gt;本来こういったタスク管理はチームで運用してこそ威力を発揮すると思うが（リーン開発とかアジャイルとかスクラムとか），今回のような機会を通してその片鱗を経験しておくのは悪くないんじゃないかな。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/ynunokawa/n/nd9df585d2399&#34;&gt;Trello で施策の優先度決めを超高速でやる｜ヌノカワ ユウスケ / SmartDrive｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/hirokishirai/items/77b59a13ddb8b7d782c1&#34;&gt;trelloで使えるMarkDown構文 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/matsuoshi/items/293608fbacf5d9d09d0d&#34;&gt;Trello の各カードに期限日を設定して、Google Calendar に同期させる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stmn.co.jp/tech/1227&#34;&gt;Integromat による Trello・GitHub 連携 – 株式会社スタメン | stmn, inc.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://euphoniumize-45th.hatenablog.com/entry/2017/12/04/230113&#34;&gt;タスク管理ツールはTrello一択 - 木牛流馬が動かない&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.lifehacker.jp/2017/01/170117_trellotrello.html&#34;&gt;タスク管理ツール｢Trello｣の使い方をTrello社の社員たちに聞いてみた | ライフハッカー［日本版］&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://mba.globis.ac.jp/about_mba/glossary/detail-11756.html&#34;&gt;かんばん方式とは・意味｜MBAのグロービス経営大学院&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/kitfactory/items/37b42c0716e1ff1efb28&#34;&gt;「アジャイルは死んだ」以降に残るものは何か -リーンソフトウェア開発を再評価し、自工程完結で全体観点で改善する - - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01IGW5IIW/baldandersinf-22&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gC8Tmq1kL._SL160_.jpg&#34; width=&#34;113&#34; height=&#34;160&#34; alt=&#34;リーン開発の現場 カンバンによる大規模プロジェクトの運営&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01IGW5IIW/baldandersinf-22&#34;&gt;リーン開発の現場 カンバンによる大規模プロジェクトの運営&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ＨｅｎｒｉｋＫｎｉｂｅｒｇ, 角谷信太郎&lt;/dd&gt;
    &lt;dd&gt;オーム社&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;私はこれで勉強しました。もう一回読み直すかな。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018.12.24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; &gt;Amakuri&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>2018年お気に入り ATOM パッケージ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/12/favorite-atom-packages-2018/" />
		<id>tag:text.Baldanders.info,2018-12-17:/remark/2018/12/favorite-atom-packages-2018/</id>
		<published>2018-12-17T22:45:24+09:00</published>
		<updated>2018-12-18T08:08:33+09:00</updated>
		<summary>年末なので ATOM エディタの整理を。 </summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;年末なので &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタの整理を。
といっても最近はあまりいじるところがないけど。&lt;/p&gt;

&lt;h2 id=&#34;gocode-を巡るあれこれ&#34;&gt;gocode を巡るあれこれ&lt;/h2&gt;

&lt;p&gt;本当のことを言うと &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;用の支援パッケージを LSP (Language Server Protocol) ベースにしたいんだけど，最近流行りの &lt;a href=&#34;https://godoc.org/golang.org/x/tools/cmd/golsp&#34; title=&#34;golsp - GoDoc&#34;&gt;golsp&lt;/a&gt; や &lt;a href=&#34;https://github.com/saibing/bingo&#34; title=&#34;saibing/bingo: Bingo is a Go language server that speaks Language Server Protocol.&#34;&gt;bingo&lt;/a&gt; を扱えるパッケージはなさそう。&lt;/p&gt;

&lt;p&gt;以前からある &lt;a href=&#34;https://github.com/sourcegraph/go-langserver&#34; title=&#34;sourcegraph/go-langserver: Go language server to add Go support to editors and other tools that use the Language Server Protocol (LSP)&#34;&gt;go-langserver&lt;/a&gt; はバックエンドに gocode を利用しているのだが（今は違う？），本家の &lt;a href=&#34;https://github.com/nsf/gocode&#34; title=&#34;nsf/gocode: An autocompletion daemon for the Go programming language&#34;&gt;nsf/gocode&lt;/a&gt; が &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.10 以降で組み込まれたビルドキャッシュ機能に追従できず fork が乱立して混沌としている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gc1&#34;&gt;&lt;a href=&#34;#fn:gc1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;結局 &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; で &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;用の支援パッケージを利用するなら &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; 一択で&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; をインストール，またはインストール済みであることを確認する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; をインストールする。この際，サブパッケージおよび各種支援ツールが自動インストールされるのを確認する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stamblerre/gocode&#34; title=&#34;stamblerre/gocode: An autocompletion daemon for the Go programming language&#34;&gt;stamblerre/gocode&lt;/a&gt; を &lt;code&gt;go get&lt;/code&gt; コマンドで上書きインストールする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gp1&#34;&gt;&lt;a href=&#34;#fn:gp1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という手順になるだろう。
&lt;a href=&#34;https://godoc.org/golang.org/x/tools/cmd/golsp&#34; title=&#34;golsp - GoDoc&#34;&gt;golsp&lt;/a&gt; や &lt;a href=&#34;https://github.com/saibing/bingo&#34; title=&#34;saibing/bingo: Bingo is a Go language server that speaks Language Server Protocol.&#34;&gt;bingo&lt;/a&gt; が使えれば将来的に楽なんだけどねぇ。&lt;/p&gt;

&lt;p&gt;それ以前に 1.12 で&lt;a href=&#34;http://text.baldanders.info/golang/go-module-aware-mode/&#34; title=&#34;モジュール対応モードへの移行を検討する&#34;&gt;モジュール対応モード&lt;/a&gt;に本格的に移行した場合に &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; が追従できるかどうかなんだけど。
最悪の場合は &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;Visual Studio Code&lt;/a&gt; に乗り換えるか（vim は若い頃のデスマーチなトラウマがフラッシュバックするので使いたくない）。&lt;/p&gt;

&lt;h2 id=&#34;atom-ide-ui-と連携する-document-outline&#34;&gt;&lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; と連携する &lt;a href=&#34;https://atom.io/packages/document-outline&#34;&gt;document-outline&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;今まで markdown テキストのアウトライン表示は &lt;a href=&#34;https://atom.io/packages/nav-panel-plus&#34;&gt;nav-panel-plus&lt;/a&gt; を使ってたんだけど &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; に対応していないのが欠点だった。
で，色々探してみたら &lt;a href=&#34;https://atom.io/packages/document-outline&#34;&gt;document-outline&lt;/a&gt; が良さげである。
&lt;a href=&#34;https://atom.io/packages/document-outline&#34;&gt;document-outline&lt;/a&gt; の設定で “show by default” 項目を無効にしておけば &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; のアウトライン表示のタブだけが表示される。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/packages/document-outline&#34;&gt;document-outline&lt;/a&gt; は以下の構造化テキストに対応している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Markdown (Commonmark)&lt;/li&gt;
&lt;li&gt;LaTeX&lt;/li&gt;
&lt;li&gt;ReStructuredText&lt;/li&gt;
&lt;li&gt;AsciiDoc&lt;/li&gt;
&lt;li&gt;Knitr&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;らしいんだけど LaTeX ファイルのアウトラインが上手く表示されないんだよなぁ。
うーむ。&lt;/p&gt;

&lt;p&gt;他にも &lt;a href=&#34;https://atom.io/packages/ide-html&#34;&gt;ide-html&lt;/a&gt; で HTML を，&lt;a href=&#34;https://atom.io/packages/ide-css&#34;&gt;ide-css&lt;/a&gt; で CSS を，&lt;a href=&#34;https://atom.io/packages/ide-yaml&#34;&gt;ide-yaml&lt;/a&gt; で YAML を，&lt;a href=&#34;https://atom.io/packages/ide-json&#34;&gt;ide-json&lt;/a&gt; で JSON を扱える。
これでメジャーな構造化テキストは大体扱えるかな&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:om1&#34;&gt;&lt;a href=&#34;#fn:om1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/12/favorite-atom-packages-2017/&#34;&gt;年末なので ATOM Editor を掃除しましょう（もしくは2017年お気に入り ATOM パッケージ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/12/plantuml-with-atom/&#34;&gt;ATOM エディタを使った作図（PlantUML 編）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:gc1&#34;&gt;gocode を巡るゴタゴタについては「&lt;a href=&#34;https://mattn.kaoriya.net/software/lang/go/20181217000056.htm&#34;&gt;gocode やめます(そして Language Server へ)&lt;/a&gt;」が参考になる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gp1&#34;&gt;&lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; では &lt;a href=&#34;https://github.com/mdempsky/gocode&#34; title=&#34;mdempsky/gocode: An autocompletion daemon for the Go programming language&#34;&gt;mdempsky/gocode&lt;/a&gt; が自動インストールされるが， &lt;a href=&#34;https://github.com/mdempsky/gocode&#34; title=&#34;mdempsky/gocode: An autocompletion daemon for the Go programming language&#34;&gt;mdempsky/gocode&lt;/a&gt; は&lt;a href=&#34;http://text.baldanders.info/golang/go-module-aware-mode/&#34; title=&#34;モジュール対応モードへの移行を検討する&#34;&gt;モジュール対応モード&lt;/a&gt;に対応していないらしいので &lt;a href=&#34;https://github.com/stamblerre/gocode&#34; title=&#34;stamblerre/gocode: An autocompletion daemon for the Go programming language&#34;&gt;stamblerre/gocode&lt;/a&gt; を手動でインストールする必要がある。実は &lt;a href=&#34;https://atom.io/packages/ide-go&#34;&gt;ide-go&lt;/a&gt; で &lt;a href=&#34;https://github.com/sourcegraph/go-langserver&#34; title=&#34;sourcegraph/go-langserver: Go language server to add Go support to editors and other tools that use the Language Server Protocol (LSP)&#34;&gt;go-langserver&lt;/a&gt; を駆動させていたのだが &lt;a href=&#34;https://atom.io/packages/ide-go&#34;&gt;ide-go&lt;/a&gt; 自体が &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; を要求するので意味がなかったっぽい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:om1&#34;&gt;私は使わないが &lt;a href=&#34;https://atom.io/packages/org-mode&#34;&gt;org-mode&lt;/a&gt; パッケージもあるらしい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:om1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.12 のリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/12/gnupg-2_2_12-released/" />
		<id>tag:text.Baldanders.info,2018-12-15:/release/2018/12/gnupg-2_2_12-released/</id>
		<published>2018-12-15T18:01:01+09:00</published>
		<updated>2018-12-15T18:01:01+09:00</updated>
		<summary>今回もセキュリティ・アップデートはなし。機能追加がいくつか。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.12 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q4/000433.html&#34;&gt;[Announce] GnuPG 2.2.12 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回もセキュリティ・アップデートはなし。
主な機能追加・修正点は以下の通り。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;tools: New commands &lt;code&gt;--install-key&lt;/code&gt; and &lt;code&gt;--remove-key&lt;/code&gt; for gpg-wks-client.  This allows to prepare a Web Key Directory on a local file system for later upload to a web server.&lt;/li&gt;
&lt;li&gt;gpg: New &lt;code&gt;--list-option&lt;/code&gt; &amp;quot;show-only-fpr-mbox&amp;quot;.  This makes the use of the new gpg-wks-client &lt;code&gt;--install-key&lt;/code&gt; command easier on Windows.&lt;/li&gt;
&lt;li&gt;gpg: Improve processing speed when &lt;code&gt;--skip-verify&lt;/code&gt; is used.&lt;/li&gt;
&lt;li&gt;gpg: Fix a bug where a LF was accidentally written to the console.&lt;/li&gt;
&lt;li&gt;gpg: --card-status now shwos whether a card has the new KDF feature enabled.&lt;/li&gt;
&lt;li&gt;agent: New runtime option &lt;code&gt;--s2k-calibration=MSEC&lt;/code&gt;.  New configure option &lt;code&gt;--with-agent-s2k-calibration=MSEC&lt;/code&gt;. [&lt;a href=&#34;https://dev.gnupg.org/T3399&#34;&gt;https://dev.gnupg.org/T3399&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;dirmngr: Try another keyserver from the pool on receiving a 502, 503, or 504 error.  [&lt;a href=&#34;https://dev.gnupg.org/T4175&#34;&gt;https://dev.gnupg.org/T4175&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;dirmngr: Avoid possible CSRF attacks via http redirects.  A HTTP query will not anymore follow a 3xx redirect unless the Location header gives the same host.  If the host is different only the host and port is taken from the Location header and the original path and query parts are kept.&lt;/li&gt;
&lt;li&gt;dirmngr: New command FLUSHCRL to flush all CRLS from disk and memory.  [&lt;a href=&#34;https://dev.gnupg.org/T3967&#34;&gt;https://dev.gnupg.org/T3967&lt;/a&gt;]&lt;/li&gt;
&lt;li&gt;New simplified Chinese translation (zh_CN).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q4/000433.html&#34;&gt;GnuPG 2.2.12 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.12
libgcrypt 1.8.4
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; height=&#34;160&#34; alt=&#34;暗号技術入門 第3版　秘密の国のアリス&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018.12.15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; &gt;Amakuri&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.11 がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/11/gnupg-2_2_11-released/" />
		<id>tag:text.Baldanders.info,2018-11-11:/release/2018/11/gnupg-2_2_11-released/</id>
		<published>2018-11-11T22:48:47+09:00</published>
		<updated>2018-11-11T22:48:47+09:00</updated>
		<summary>おおう。 2.2.10 リリース時のアナウンスを忘れてたよ。今回もセキュリティ・アップデートはなし。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;おおう。
2.2.10 リリース時のアナウンスを忘れてたよ（手元のはちゃんと 2.2.10 にアップデートしてたのに）。&lt;/p&gt;

&lt;p&gt;というわけで，2.2.10 すっ飛ばして &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.11 リリースのお知らせです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q4/000432.html&#34;&gt;[Announce] GnuPG 2.2.11 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回もセキュリティ・アップデートはなし。
主な修正点は以下の通り（2.2.10 と併せて載せておきます）。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;gpg: Refresh expired keys originating from the WKD.  [#2917]&lt;/li&gt;
&lt;li&gt;gpg: Use a 256 KiB limit for a WKD imported key.&lt;/li&gt;
&lt;li&gt;gpg: New option &lt;code&gt;--known-notation&lt;/code&gt;.  [#4060]&lt;/li&gt;
&lt;li&gt;scd: Add support for the Trustica Cryptoucan reader.&lt;/li&gt;
&lt;li&gt;agent: Speed up starting during on-demand launching.  [#3490]&lt;/li&gt;
&lt;li&gt;dirmngr: Validate SRV records in WKD queries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q3/000428.html&#34;&gt;GnuPG 2.2.10 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;gpgsm: Fix CRL loading when intermediate certicates are not yet trusted.&lt;/li&gt;
&lt;li&gt;gpgsm: Fix an error message about the digest algo.  [#4219]&lt;/li&gt;
&lt;li&gt;gpg: Fix a wrong warning due to new sign usage check introduced with 2.2.9.  [#4014]&lt;/li&gt;
&lt;li&gt;gpg: Print the &amp;quot;data source&amp;quot; even for an unsuccessful keyserver query.&lt;/li&gt;
&lt;li&gt;gpg: Do not store the TOFU trust model in the trustdb.  This allows to enable or disable a TOFO model without triggering a trustdb rebuild.  [#4134]&lt;/li&gt;
&lt;li&gt;scd: Fix cases of &amp;quot;Bad PIN&amp;quot; after using &amp;quot;forcesig&amp;quot;.  [#4177]&lt;/li&gt;
&lt;li&gt;agent: Fix possible hang in the ssh handler.  [#4221]&lt;/li&gt;
&lt;li&gt;dirmngr: Tack the unmodified mail address to a WKD request.  See commit &lt;code&gt;a2bd4a64e5b057f291a60a9499f881dd47745e2f&lt;/code&gt; for details.&lt;/li&gt;
&lt;li&gt;dirmngr: Tweak diagnostic about missing LDAP server file.&lt;/li&gt;
&lt;li&gt;dirmngr: In verbose mode print the OCSP responder id.&lt;/li&gt;
&lt;li&gt;dirmngr: Fix parsing of the LDAP port.  [#4230]&lt;/li&gt;
&lt;li&gt;wks: Add option &lt;code&gt;--directory&lt;/code&gt;/&lt;code&gt;-C&lt;/code&gt; to the server.  Always build the server on Unix systems.&lt;/li&gt;
&lt;li&gt;wks: Add option &lt;code&gt;--with-colons&lt;/code&gt; to the client.  Support sites which use the policy file instead of the submission-address file.&lt;/li&gt;
&lt;li&gt;Fix EBADF when gpg et al. are called by broken CGI scripts.&lt;/li&gt;
&lt;li&gt;Fix some minor memory leaks and bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q4/000432.html&#34;&gt;GnuPG 2.2.11 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.11
libgcrypt 1.8.4
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://gnupg.org/software/libgcrypt/&#34;&gt;Libgcrypt&lt;/a&gt; のバージョンが 1.8.4 に上がっているのでご注意を。
こちらもセキュリティ・アップデートはなし。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q4/000431.html&#34;&gt;[Announce] Libgcrypt 1.8.4 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>【セキュリティ・アップデート】 Git 2.x 最新版がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/10/git-2_x-are-released/" />
		<id>tag:text.Baldanders.info,2018-10-10:/release/2018/10/git-2_x-are-released/</id>
		<published>2018-10-10T16:49:56+09:00</published>
		<updated>2018-10-10T16:49:56+09:00</updated>
		<summary>サブモジュールに関する脆弱性で，再帰的な git clone において任意のコードが実行される可能性がある。深刻度高めなのでご注意を。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 2.x の各マイナーバージョンに脆弱性が見つかったため修正版がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marc.info/?l=git&amp;amp;m=153875888916397&amp;amp;w=2&#34;&gt;&#39;[Announce] Git 2.14.5, 2.15.3, 2.16.5, 2.17.2, 2.18.1, and 2.19.1&#39; - MARC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/devops/2018/10/05/remediating-the-october-2018-git-security-vulnerability/&#34;&gt;Remediating the October 2018 Git Security Vulnerability – Microsoft DevOps Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-17456&#34;&gt;NVD - CVE-2018-17456&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;サブモジュールに関する脆弱性で，再帰的な &lt;code&gt;git clone&lt;/code&gt; において任意のコードが実行される可能性がある。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;When running &#34;git clone --recurse-submodules&#34;, Git parses the supplied .gitmodules file for a URL field and blindly passes it as an argument to a &#34;git clone&#34; subprocess.  If the URL field is set to a string that begins with a dash, this &#34;git clone&#34; subprocess interprets the URL as an option.  This can lead to executing an arbitrary script shipped in the superproject as the user who ran &#34;git clone&#34;.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://marc.info/?l=git&amp;amp;m=153875888916397&amp;amp;w=2&#34;&gt;[Announce] Git 2.14.5, 2.15.3, 2.16.5, 2.17.2, 2.18.1, and 2.19.1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;サブモジュールの脆弱性は前にもなかったっけ。
まぁ，この手の脆弱性はありがちではある。
TeX とか Go 言語の cgo とかでも似たようなことがあったよなぁ。&lt;/p&gt;

&lt;p&gt;深刻度高めみたいなのでご注意を。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2018-17456&#34;&gt;CVE-2018-17456 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;深刻度: 重要 (8.8)&lt;/strong&gt; : &lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;各マイナーバージョンの最新版がリリースされているので更新すること。&lt;/p&gt;

&lt;p&gt;なお &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; には影響がないとのこと。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Git for Windows is uniquely not vulnerable to this security issue: this vulnerability requires writing a file to disk, and that filename must be particularly formatted and include a colon. Since colons are not permitted characters on Windows filesystems, Git for Windows will refuse to write the file.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/devops/2018/10/05/remediating-the-october-2018-git-security-vulnerability/&#34;&gt;Remediating the October 2018 Git Security Vulnerability&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;このせいなのか &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; にアナウンスがなくて気が付かなかったんだよねぇ（笑）&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1146/869/index.html&#34;&gt;バージョン管理システム「Git」に任意コード実行の脆弱性、修正版が公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.9 がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/08/gnupg-2_2_9-released/" />
		<id>tag:text.Baldanders.info,2018-08-18:/release/2018/08/gnupg-2_2_9-released/</id>
		<published>2018-08-18T15:43:11+09:00</published>
		<updated>2018-08-18T15:43:11+09:00</updated>
		<summary>今回はセキュリティ・アップデートはなし。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;1ヶ月以上前の話で恐縮だが &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.9 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q3/000427.html&#34;&gt;[Announce] GnuPG 2.2.9 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はセキュリティ・アップデートはなし。
主な修正点は以下の通り。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;dirmngr: Fix recursive resolver mode and other bugs in the libdns code.  [#3374,#3803,#3610]&lt;/li&gt;
&lt;li&gt;dirmngr: When using libgpg-error 1.32 or later a GnuPG build with NTBTLS support (e.g. the standard Windows installer) does not anymore block for dozens of seconds before returning data.  If you still have problems on Windows, please consider to use one of the options &lt;code&gt;disable-ipv4&lt;/code&gt; or &lt;code&gt;disable-ipv6&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;gpg: Fix bug in &lt;code&gt;--show-keys&lt;/code&gt; which actually imported revocation certificates.  [#4017]&lt;/li&gt;
&lt;li&gt;gpg: Ignore too long user-ID and comment packets.  [#4022]&lt;/li&gt;
&lt;li&gt;gpg: Fix crash due to bad German translation.  Improved printf format compile time check.&lt;/li&gt;
&lt;li&gt;gpg: Handle missing &lt;code&gt;ISSUER&lt;/code&gt; sub packet gracefully in the presence of the new &lt;code&gt;ISSUER_FPR&lt;/code&gt;.  [#4046]&lt;/li&gt;
&lt;li&gt;gpg: Allow decryption using several passphrases in most cases. [#3795,#4050]&lt;/li&gt;
&lt;li&gt;gpg: Command &lt;code&gt;--show-keys&lt;/code&gt; now enables the list options &lt;code&gt;show-unusable-uids&lt;/code&gt;, &lt;code&gt;show-unusable-subkeys&lt;/code&gt;, &lt;code&gt;show-notations&lt;/code&gt; and &lt;code&gt;show-policy-urls&lt;/code&gt; by default.&lt;/li&gt;
&lt;li&gt;gpg: Command &lt;code&gt;--show-keys&lt;/code&gt; now prints revocation certificates. [#4018]&lt;/li&gt;
&lt;li&gt;gpg: Add revocation reason to the &amp;quot;rev&amp;quot; and &amp;quot;rvs&amp;quot; records of the option &lt;code&gt;--with-colons&lt;/code&gt;.  [#1173]&lt;/li&gt;
&lt;li&gt;gpg: Export option &lt;code&gt;export-clean&lt;/code&gt; does now remove certain expired subkeys; &lt;code&gt;export-minimal&lt;/code&gt; removes all expired subkeys.  [#3622]&lt;/li&gt;
&lt;li&gt;gpg: New &amp;quot;usage&amp;quot; property for the &lt;code&gt;drop-subkey&lt;/code&gt; filters.  [#4019]&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q3/000427.html&#34;&gt;GnuPG 2.2.9 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.9
libgcrypt 1.8.3
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo v0.42 がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/06/hugo-v0_42-is-released/" />
		<id>tag:text.Baldanders.info,2018-06-24:/release/2018/06/hugo-v0_42-is-released/</id>
		<published>2018-06-24T18:50:58+09:00</published>
		<updated>2018-06-24T18:50:58+09:00</updated>
		<summary>テーマをコンポーネント化できるようになったらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.42 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42&#34;&gt;Release v0.42 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Hugo 0.42 adds Theme Components. This is a really powerful new way of building your Hugo sites with reusable components. This is both Theme Composition and Theme Inheritance.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42&#34;&gt;Release v0.42&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで，テーマをコンポーネント化できるようになったらしい。
こんな感じに複数のテーマを指定できる（従来の単一指定でも問題ないようだ）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;my-shortcodes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;base-theme&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hyde&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;確かに shortcodes だけを集めたテーマとか作ったら面白いかな？&lt;/p&gt;

&lt;p&gt;詳しくは以下のドキュメントを参考のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/themes/theme-components/&#34;&gt;Theme Components | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;追記-2018-06-24-hugo-v0-42-がリリース&#34;&gt;【追記 2018-06-24】 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.42 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42.1&#34;&gt;Release v0.42.1 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合修正版。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Reset the global pages cache on server rebuilds 128f14ef @bep #4845&lt;/li&gt;
&lt;li&gt;Do not fail server build when /static is missing 34ee27a7 @bep #4846&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42.1&#34;&gt;Release v0.42.1 · gohugoio/hugo&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;だそうな。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Git for Windows 2.18.0 がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/06/git-for-windows-2_18_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-06-24:/release/2018/06/git-for-windows-2_18_0-is-released/</id>
		<published>2018-06-24T18:32:12+09:00</published>
		<updated>2018-06-24T18:32:12+09:00</updated>
		<summary>Git および Git Credential Manager のアップデート，他。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 2.17.1 がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.18.0.windows.1&#34;&gt;Release Git for Windows 2.18.0 · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git/git/blob/v2.18.0/Documentation/RelNotes/2.18.0.txt&#34;&gt;Git v2.18.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.16.2&#34;&gt;Git Credential Manager v1.16.2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.18.0.windows.1&#34;&gt;Release Git for Windows 2.18.0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;他にもいくつか不具合の修正がある。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.8 および Libgcrypt 1.8.3 がリリース（セキュリティ・アップデート） - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/06/gnupg-2_2_8-and-libgcrypt-1_8_3-are-released/" />
		<id>tag:text.Baldanders.info,2018-06-24:/release/2018/06/gnupg-2_2_8-and-libgcrypt-1_8_3-are-released/</id>
		<published>2018-06-24T18:16:57+09:00</published>
		<updated>2018-06-24T18:16:57+09:00</updated>
		<summary>今回はキュリティ・アップデートを含む。深刻度が高いので早めのアップデートを推奨する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.8 および Libgcrypt 1.8.3 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000425.html&#34;&gt;[Announce] [security fix] GnuPG 2.2.8 released (CVE-2018-12020)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000426.html&#34;&gt;[Announce] Libgcrypt 1.8.3 and 1.7.10 to fix CVE-2018-0495&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はキュリティ・アップデートを含む。&lt;/p&gt;

&lt;h2 id=&#34;cve-2018-12020&#34;&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-12020&#34; title=&#34;NVD - CVE-2018-12020&#34;&gt;CVE-2018-12020&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;脆弱性の概要&#34;&gt;脆弱性の概要&lt;/h3&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;mainproc.c in GnuPG before 2.2.8 mishandles the original filename during decryption and verification actions, which allows remote attackers to spoof the output that GnuPG sends on file descriptor 2 to other programs that use the &#34;--status-fd 2&#34; option. For example, the OpenPGP data might represent an original filename that contains line feed characters in conjunction with GOODSIG or VALIDSIG status codes.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-12020&#34;&gt;NVD - CVE-2018-12020&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;The OpenPGP protocol allows to include the file name of the original
input file into a signed or encrypted message.  During decryption and
verification the GPG tool can display a notice with that file name.  The
displayed file name is not sanitized and as such may include line feeds
or other control characters.  This can be used inject terminal control
sequences into the out and, worse, to fake the so-called status
messages.  These status messages are parsed by programs to get
information from gpg about the validity of a signature and an other
parameters.  Status messages are created with the option &#34;--status-fd N&#34;
where N is a file descriptor.  Now if N is 2 the status messages and the
regular diagnostic messages share the stderr output channel.  By using a
made up file name in the message it is possible to fake status messages.
Using this technique it is for example possible to fake the verification
status of a signed mail.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000425.html&#34;&gt;GnuPG 2.2.8 released (CVE-2018-12020)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;想定される影響&#34;&gt;想定される影響&lt;/h3&gt;

&lt;p&gt;GPGME ライブラリを使用しない全てのメールクライアント等のアプリケーションに影響を及ぼす。
&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2018-12020&#34;&gt;Red Hat のレポート&lt;/a&gt;ではこの件（&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-12020&#34; title=&#34;NVD - CVE-2018-12020&#34;&gt;CVE-2018-12020&lt;/a&gt;）の深刻度を「重要（7.5）」レベルと見積っている。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;対策&#34;&gt;対策&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.8 にアップデートする。
深刻度が高いので早めのアップデートを推奨する。&lt;/p&gt;

&lt;p&gt;アップデートが間に合わない場合は，アプリケーションに応じて，以下の対策を行うこと。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;If your application uses GPGME your application is safe.  Fortunately most modern mail readers use GPGME, including GpgOL and KMail.  Mutt users should make sure to use &#34;set crypt_use_gpgme&#34;.&lt;br&gt;
If you are parsing GnuPG status output and you use a dedicated file descriptor with --status-fd you are safe.  A dedicated file descriptor is one that is not shared with the log output.  The log output defaults to stderr (2) but may be a different if the option --logger-fd is used.&lt;br&gt;
If you are not using --verbose you are safe.  But take care: --verbose might be specified in the config file.  As a short term mitigation or if you can&#39;t immediately upgrade to the latest versions, you can add --no-verbose to the invocation of gpg.&lt;br&gt;
Another short term mitigation is to redirect the log output to a different file: For example &#34;--log-file /dev/null&#34;.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000425.html&#34;&gt;GnuPG 2.2.8 released (CVE-2018-12020)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;verbose&lt;/code&gt; オプションを外すのが手っ取り早いかな。&lt;/p&gt;

&lt;h2 id=&#34;cve-2018-0495&#34;&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-0495&#34; title=&#34;NVD - CVE-2018-0495&#34;&gt;CVE-2018-0495&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;脆弱性の概要-1&#34;&gt;脆弱性の概要&lt;/h3&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Libgcrypt before 1.7.10 and 1.8.x before 1.8.3 allows a memory-cache side-channel attack on ECDSA signatures that can be mitigated through the use of blinding during the signing process in the `_gcry_ecc_ecdsa_sign` function in cipher/ecc-ecdsa.c, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-0495&#34;&gt;NVD - CVE-2018-0495&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;想定される影響-1&#34;&gt;想定される影響&lt;/h3&gt;

&lt;p&gt;GPGME ライブラリを使用しない全てのメールクライアント等のアプリケーションに影響を及ぼす。
&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2018-0495&#34;&gt;Red Hat のレポート&lt;/a&gt;ではこの件（&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-0495&#34; title=&#34;NVD - CVE-2018-0495&#34;&gt;CVE-2018-0495&lt;/a&gt;）の深刻度を「警告（5.1）」レベルと見積っている。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ローカル&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;対策-1&#34;&gt;対策&lt;/h3&gt;

&lt;p&gt;Libgcrypt 1.8.3 または 1.7.10 にアップデートする。&lt;/p&gt;

&lt;p&gt;一般的に side channel 攻撃はそれほど高い深刻度にはならない。
計画的なアップデートを。&lt;/p&gt;

&lt;h2 id=&#34;gnupg-アップデート後の状態&#34;&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; アップデート後の状態&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.8
libgcrypt 1.8.3
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;gpg4win-も-3-1-2-にアップデート&#34;&gt;&lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; も 3.1.2 にアップデート&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lists.wald.intevation.org/pipermail/gpg4win-announce/2018-June/000079.html&#34;&gt;[Gpg4win-announce] Gpg4win 3.1.2 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.gpg4win.org/README-3.1.2.en.txt&#34;&gt;English README file for Gpg4win&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; 3.1.2 の構成は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GnuPG:          2.2.8&lt;/li&gt;
&lt;li&gt;Kleopatra:      3.1.2&lt;/li&gt;
&lt;li&gt;GPA:            0.9.10&lt;/li&gt;
&lt;li&gt;GpgOL:          2.2.0&lt;/li&gt;
&lt;li&gt;GpgEX:          1.0.6&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
