<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Tools - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/tools/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/tools/index.xml" />
	<id>tag:text.Baldanders.info,2017-10-10:/tags</id>
	<updated>2017-10-10T18:02:56+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.30.2</generator>

	
	<entry>
		<title>Glide から Dep への移行を検討する - golang</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/golang/consider-switching-from-glide-to-dep/" />
		<id>tag:text.Baldanders.info,2017-10-10:/golang/consider-switching-from-glide-to-dep/</id>
		<published>2017-10-10T18:02:56+09:00</published>
		<updated>2017-10-31T14:31:04+09:00</updated>
		<summary>つまり「依存関係（Vendoring）管理ツールとしては dep を推奨するけど移行できない人のために当面はサポートを続けるよ（でも将来は分からん）」という解釈でいいのだろうか。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="http://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（この記事は &lt;a href=&#34;https://qiita.com/spiegel-im-spiegel/items/e931ad1a7565d02d179e&#34;&gt;Qiita とのマルチポスト&lt;/a&gt;です。
まぁ，向こうは草稿版だけど）&lt;/p&gt;

&lt;p&gt;久しぶりに &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; を使おうと最新版（&lt;a href=&#34;https://github.com/Masterminds/glide/releases/tag/v0.13.0&#34; title=&#34;Release 0.13.0 · Masterminds/glide&#34;&gt;0.13.0&lt;/a&gt;）を見に行ったら “&lt;strong&gt;Consider switching to &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt;&lt;/strong&gt;” とか書いてあるじゃない。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Glide is used by a great number of projects and will continue to get support for some time.
But, the near future is likely in dep.
dep can handle importing Glide config files.
Please consider trying dep on your project or converting to dep.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/Masterminds/glide/releases/tag/v0.13.0&#34;&gt;Release 0.13.0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まじすか。&lt;/p&gt;

&lt;p&gt;つまり「依存関係（Vendoring）管理ツールとしては &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; を推奨するけど移行できない人のために当面はサポートを続けるよ（でも将来は分からん）」という解釈でいいのだろうか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;開発プロジェクトの公式ツールで，2017年の始めくらいに日本でも話題になったような気がするが，私は &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; で完全に満足していたのでスルーしていた。
こんなことになるなんて。
ならもう &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; に移行するしかないぢゃん。&lt;/p&gt;

&lt;p&gt;とはいえ，いきなり本番環境に投入するのは怖いので，なにか適当なテストケースはないか，と自分のリポジトリを漁ってたら丁度いいのがあったよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34;&gt;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これって&lt;a href=&#34;http://text.baldanders.info/golang/estimate-of-pi/&#34;&gt;モンテカルロ法で遊んでた&lt;/a&gt;ときに作ったものだ。
最悪ぶっ壊れてもいいので，これ使って試してみるか。&lt;/p&gt;

&lt;h2 id=&#34;dep-の取得&#34;&gt;&lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; の取得&lt;/h2&gt;

&lt;p&gt;まず &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; の取得から始めないとだが，リポジトリ自体は &lt;code&gt;go get&lt;/code&gt; コマンドで取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get -v github.com/golang/dep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これをこのままインストールしてもいいのだが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go install -v github.com/golang/dep/cmd/dep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/dep/releases&#34; title=&#34;Releases · golang/dep&#34;&gt;リリースページ&lt;/a&gt;にビルド済みのモジュールが置かれているので，ありがたくこれを使わせてもらおう。&lt;/p&gt;

&lt;p&gt;最新版（現時点で &lt;a href=&#34;https://github.com/golang/dep/releases/tag/v0.3.2&#34; title=&#34;Release v0.3.2 · golang/dep&#34;&gt;v0.3.2&lt;/a&gt;）には Windows 用のモジュール &lt;code&gt;dep-windows-amd64&lt;/code&gt; もある。
Windows ユーザは何のファイルかと思うかもしれないが，実はこれ実行ファイルなので， &lt;code&gt;dep.exe&lt;/code&gt; にリネームしてそのまま使える。&lt;/p&gt;

&lt;p&gt;万が一があっては困るのでモジュールの SHA256 ハッシュ値を確認しておく（こういうのこそ OpenPGP を使ってくれないものか）。
Windows ユーザで Windows 8.1 以降であれば PowerShell（4.0 以上）で &lt;a href=&#34;http://technet.microsoft.com/en-us/library/dn520872.aspx&#34;&gt;&lt;code&gt;Get-FileHash&lt;/code&gt;&lt;/a&gt; コマンドレットが使える&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ps1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ps1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-FileHash&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dep-windows-amd64&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Algorithm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SHA256&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Format-List&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;Algorithm&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SHA256&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Hash&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Downloads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dep-windows-amd64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを &lt;code&gt;dep-windows-amd64.sha256&lt;/code&gt; に記載されている値と比較する。
改竄されてなければ同じ値になるはずである。
目視は辛いのでテキストエディタ等の検索機能を使えばいいだろう。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【2017-10-31 追記】&lt;/strong&gt; だんだん面倒になってきたので&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hash&#34; title=&#34;spiegel-im-spiegel/hash: Calculating Hash Value&#34;&gt;ハッシュ値を計算するツール&lt;/a&gt;を作った。
詳しくは「&lt;a href=&#34;http://text.baldanders.info/golang/calculating-hash-value/&#34;&gt;Hash 値を計算するパッケージを作ってみた&lt;/a&gt;」を参照のこと。&lt;/p&gt;
&lt;/div&gt;

&lt;!--
Windows ユーザには（`sha256sum` といった）標準ツールがないのが痛いのだが， [7-Zip] があるなら，これを使ってハッシュ値を確認できる。

```text
$ 7z.exe h -scrcSHA256 dep-windows-amd64

7-Zip [64] 16.04 : Copyright (c) 1999-2016 Igor Pavlov : 2016-10-04

Scanning
1 file, 7696896 bytes (7517 KiB)

SHA256                                                                    Size  Name
---------------------------------------------------------------- -------------  ------------
D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A       7696896  dep-windows-amd64
---------------------------------------------------------------- -------------  ------------
D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A       7696896

Size: 7696896

SHA256 for data:              D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A

Everything is Ok
```

これを `dep-windows-amd64.sha256` に記載されている値と比較する。
改竄されてなければ同じ値になるはずである。
目視は辛いのでテキストエディタ等の検索機能を使えばいいだろう。

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を使っている人なら &lt;code&gt;.nyagos&lt;/code&gt; ファイルに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sha1sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%COMSPEC% /c &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;%PROGRAMFILES%/7-Zip/7z.exe&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; h -scrcSHA1 $*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sha256sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%COMSPEC% /c &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;%PROGRAMFILES%/7-Zip/7z.exe&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; h -scrcSHA256 $*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか記述しておけば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sha256sum dep-windows-amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で同じ結果が得られる。
改竄の有無を確認するためにファイルのハッシュ値を調べることはよくあるので準備しておくとよい。&lt;/p&gt;
&lt;/div&gt;
--&gt;

&lt;p&gt;実行モジュールの動作確認もしておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep
dep is a tool for managing dependencies for Go projects

Usage: dep &amp;lt;command&amp;gt;

Commands:

  init     Initialize a new project with manifest and lock files
  status   Report the status of the project&amp;#39;s dependencies
  ensure   Ensure a dependency is safely vendored in the project
  prune    Prune the vendor tree of unused packages
  version  Show the dep version information

Examples:
  dep init                               set up a new project
  dep ensure                             install the project&amp;#39;s dependencies
  dep ensure -update                     update the locked versions of all dependencies
  dep ensure -add github.com/pkg/errors  add a dependency to the project

Use &amp;#34;dep help [command]&amp;#34; for more information about a command.

$ dep version
dep:
 version     : v0.3.1
 build date  : 2017-09-19
 git hash    : 83789e2
 go version  : go1.9
 go compiler : gc
 platform    : windows/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;glide-から-dep-への移行&#34;&gt;&lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; から &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; への移行&lt;/h2&gt;

&lt;p&gt;お試し用の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34; title=&#34;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&#34;&gt;spiegel-im-spiegel/pi&lt;/a&gt; をビルド可能な適当な場所に置く。&lt;/p&gt;

&lt;p&gt;このパッケージの &lt;code&gt;glide.yaml&lt;/code&gt; はこんな感じになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/pi&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;import&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/gocli&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/cobra&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/pkg/errors&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/seehuhn/mt&lt;span class=&#34;m&#34;&gt;19937&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/gorand&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/uint&lt;span class=&#34;m&#34;&gt;128&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また &lt;code&gt;glide.lock&lt;/code&gt; はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;hash&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;d570123d6231810c51dd17e415673df221fb2dec7ef6ab45cd34093002a87cbb&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;updated&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ld&#34;&gt;2016-11-16T17:28:38.2997832&lt;/span&gt;+&lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;imports&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/gorand&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;189780b8053a44a111339a4248394fd844c1da&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;subpackages&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lcg&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/uint&lt;span class=&#34;m&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5745f1bf80414e0ad2670e85d6aece8c58031def&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/inconshreveable/mousetrap&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;76626ae9c91c4f2a10f34cad8ce83ea42c93bb&lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/pkg/errors&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;248dadf4e9068a0b3e79f02ed0a610d935de&lt;span class=&#34;m&#34;&gt;5302&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/seehuhn/mt&lt;span class=&#34;m&#34;&gt;19937&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;98c0ea580d2f3c5a171acf4d4f15321b72209d&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/cobra&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;6b74a60562f5c1c920299b8f02d153e16f4897fc&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/pflag&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5ccb023bc27df288a957c5e994cd44fd&lt;span class=&#34;m&#34;&gt;19619465&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/gocli&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5929f04fb8e4a19ac29fdf658866f9441f339cd&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;testImports&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この状態で &lt;code&gt;dep init&lt;/code&gt; コマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep init
Importing configuration from glide. These are only initial constraints, and are further refined during the solve process.
Detected glide configuration files...
Converting from glide.yaml and glide.lock...
  Using * as initial constraint for imported dep github.com/spiegel-im-spiegel/gocli
  Trying v0.3.0 (5929f04) as initial lock for imported dep github.com/spiegel-im-spiegel/gocli
  Using * as initial constraint for imported dep github.com/spf13/cobra
  Trying * (6b74a60) as initial lock for imported dep github.com/spf13/cobra
  Using * as initial constraint for imported dep github.com/pkg/errors
  Trying * (248dadf) as initial lock for imported dep github.com/pkg/errors
  Using * as initial constraint for imported dep github.com/seehuhn/mt19937
  Trying master (98c0ea5) as initial lock for imported dep github.com/seehuhn/mt19937
  Using * as initial constraint for imported dep github.com/davidminor/gorand
  Trying * (189780b) as initial lock for imported dep github.com/davidminor/gorand
  Using * as initial constraint for imported dep github.com/davidminor/uint128
  Trying master (5745f1b) as initial lock for imported dep github.com/davidminor/uint128
  Using * as initial constraint for imported dep github.com/inconshreveable/mousetrap
  Trying v1.0 (76626ae) as initial lock for imported dep github.com/inconshreveable/mousetrap
  Using * as initial constraint for imported dep github.com/spf13/pflag
  Trying * (5ccb023) as initial lock for imported dep github.com/spf13/pflag&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実は &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Command line interface&#34;&gt;spiegel-im-spiegel/gocli&lt;/a&gt; パッケージの最新版は v0.4.0 だが， &lt;code&gt;glide.lock&lt;/code&gt; の内容を読み取って，ちゃんと v0.3.0 のものを取ってきているようだ。
偉いぞ！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dep init&lt;/code&gt; コマンドにより &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; および &lt;code&gt;Gopkg.lock&lt;/code&gt; の2つのファイルと &lt;code&gt;vendor/&lt;/code&gt; フォルダが作成される。
このうち &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; の内容は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/gorand&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/pkg/errors&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/seehuhn/mt19937&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そして &lt;code&gt;Gopkg.lock&lt;/code&gt; の内容は以下の通りだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/gorand&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;lcg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;189780b8053a44a111339a4248394fd844c1da40&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/uint128&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5745f1bf80414e0ad2670e85d6aece8c58031def&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/inconshreveable/mousetrap&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;76626ae9c91c4f2a10f34cad8ce83ea42c93bb75&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;v1.0&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/pkg/errors&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;248dadf4e9068a0b3e79f02ed0a610d935de5302&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/seehuhn/mt19937&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;98c0ea580d2f3c5a171acf4d4f15321b72209d08&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;6b74a60562f5c1c920299b8f02d153e16f4897fc&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/pflag&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5ccb023bc27df288a957c5e994cd44fd19619465&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5929f04fb8e4a19ac29fdf658866f9441f339cd9&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;v0.3.0&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;solve&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;analyzer&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dep&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;analyzer&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;inputs&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;digest&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;4a7cc1799d386351173ccdf8266d22ebe2971ce7ba417395a0b63ca267ea9267&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;solver&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gps-cdcl&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;solver&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;glide.lock&lt;/code&gt; と &lt;code&gt;Gopkg.lock&lt;/code&gt; の内容がきちんとマッチしているのが分かると思う。
念のため &lt;code&gt;dep status&lt;/code&gt; も見ておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status
PROJECT                               CONSTRAINT  VERSION        REVISION  LATEST   PKGS USED
github.com/davidminor/gorand          *                          189780b            1
github.com/davidminor/uint128         *           branch master  5745f1b   5745f1b  1
github.com/inconshreveable/mousetrap  *           v1.0           76626ae   76626ae  1
github.com/pkg/errors                 *                          248dadf            1
github.com/seehuhn/mt19937            *           branch master  98c0ea5   98c0ea5  1
github.com/spf13/cobra                *                          6b74a60            1
github.com/spf13/pflag                *                          5ccb023            1
github.com/spiegel-im-spiegel/gocli   *           v0.3.0         5929f04   ce636bb  1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ビルドもちゃんと通る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go build -v .
github.com/spiegel-im-spiegel/pi/vendor/github.com/spiegel-im-spiegel/gocli
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/pflag
github.com/spiegel-im-spiegel/pi/vendor/github.com/inconshreveable/mousetrap
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/uint128
github.com/spiegel-im-spiegel/pi/vendor/github.com/seehuhn/mt19937
github.com/spiegel-im-spiegel/pi/vendor/github.com/pkg/errors
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/lcg
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/qq
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで， &lt;code&gt;glide.yaml&lt;/code&gt; と &lt;code&gt;glide.lock&lt;/code&gt; が正しい状態で残っていれば問題なく &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; に移行できそうだ。&lt;/p&gt;

&lt;h2 id=&#34;依存関係の管理&#34;&gt;依存関係の管理&lt;/h2&gt;

&lt;p&gt;ところで，この状態で &lt;code&gt;dep ensure&lt;/code&gt; コマンドを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Gopkg.lock was already in sync with imports and Gopkg.toml
(1/8) Wrote github.com/seehuhn/mt19937@master
(2/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(3/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(4/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(5/8) Wrote github.com/davidminor/uint128@master
(6/8) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(7/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じで &lt;code&gt;Gopkg.lock&lt;/code&gt; ファイルも特に更新されないが，いったん &lt;code&gt;vendor/&lt;/code&gt; フォルダを削除して（またはリネームして）同じことをすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Root project is &amp;#34;github.com/spiegel-im-spiegel/pi&amp;#34;
 19 transitively valid internal packages
 12 external packages imported from 10 projects

...

(1/22) Wrote github.com/mitchellh/mapstructure@master
(2/22) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(3/22) Wrote gopkg.in/yaml.v2@v2
(4/22) Wrote github.com/davidminor/uint128@master
(5/22) Wrote github.com/fsnotify/fsnotify@v1.4.2
(6/22) Wrote github.com/magiconair/properties@v1.7.3
(7/22) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/22) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(9/22) Wrote github.com/seehuhn/mt19937@master
(10/22) Wrote github.com/pelletier/go-toml@v1.0.1
(11/22) Wrote github.com/spf13/afero@master
(12/22) Wrote github.com/cpuguy83/go-md2man@v1.0.7
(13/22) Wrote github.com/spf13/cast@v1.1.0
(14/22) Wrote github.com/hashicorp/hcl@master
(15/22) Wrote github.com/spf13/jwalterweatherman@master
(16/22) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(17/22) Wrote github.com/spf13/viper@v1.0.0
(18/22) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(19/22) Wrote github.com/russross/blackfriday@v1.5
(20/22) Wrote golang.org/x/sys@master
(21/22) Wrote github.com/inconshreveable/mousetrap@v1.0
(22/22) Wrote golang.org/x/text@master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（途中の表示を省いている。ご容赦）&lt;/p&gt;

&lt;p&gt;と「え？ それ要らんやろ」ってなパッケージまで読み込んでくる。
うーん。
どうやら使わないサブパッケージまで依存関係を追跡してるみたい。&lt;/p&gt;

&lt;p&gt;そこで &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; に以下の記述を加えて余計なパッケージを読み込ませないようにした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ignored&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/cpuguy83/go-md2man/md2man&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/russross/blackfriday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra/doc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra/cobra/cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/viper&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ついでに &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; で &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Command line interface&#34;&gt;spiegel-im-spiegel/gocli&lt;/a&gt; パッケージのバージョンを明記する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでもう一度 &lt;code&gt;dep ensure&lt;/code&gt; コマンドを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Root project is &amp;#34;github.com/spiegel-im-spiegel/pi&amp;#34;
 19 transitively valid internal packages
 8 external packages imported from 8 projects

...

(1/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(2/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(3/8) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(4/8) Wrote github.com/seehuhn/mt19937@master
(5/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(6/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(7/8) Wrote github.com/davidminor/uint128@master
(8/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり &lt;code&gt;dep status&lt;/code&gt; コマンドの実行結果も&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status
PROJECT                               CONSTRAINT  VERSION        REVISION  LATEST   PKGS USED
github.com/davidminor/gorand          *                          189780b            1
github.com/davidminor/uint128         *           branch master  5745f1b   5745f1b  1
github.com/inconshreveable/mousetrap  *           v1.0           76626ae   76626ae  1
github.com/pkg/errors                 *                          248dadf            1
github.com/seehuhn/mt19937            *           branch master  98c0ea5   98c0ea5  1
github.com/spf13/cobra                *                          6b74a60            1
github.com/spf13/pflag                *                          5ccb023            1
github.com/spiegel-im-spiegel/gocli   ^0.3.0      v0.3.0         5929f04   5929f04  1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と元に戻った。
不要なサブパッケージを排除するのはちょっと面倒くさそうである。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; のバージョン指定は “&lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt;” に従っている。
具体的には “&lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt;” の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;実装である &lt;a href=&#34;https://github.com/Masterminds/semver&#34; title=&#34;Masterminds/semver: Work with Semantic Versions in Go&#34;&gt;Masterminds/semver&lt;/a&gt; パッケージを参照するとよい。&lt;/p&gt;

&lt;h2 id=&#34;依存関係の視覚化&#34;&gt;依存関係の視覚化&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;dep status&lt;/code&gt; コマンドには結果を DOT 言語で吐き出すオプションがあるようだ。
&lt;a href=&#34;http://www.graphviz.org/&#34; title=&#34;Graphviz | Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; があれば，この出力結果を画像データに変換できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status -dot | dot -Tpng -o pi-dependency.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;結果はこんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;http://text.baldanders.info/images/pi-dependency.png&#34;&gt;&lt;img src=&#34;http://text.baldanders.info/images/pi-dependency.png&#34; srcset=&#34;http://text.baldanders.info/images/pi-dependency.png 1428w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;pi-dependency.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://text.baldanders.info/images/pi-dependency.png&#34;&gt;pi-dependency.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ブラボー！&lt;/p&gt;

&lt;h2 id=&#34;リポジトリへのパスを直接指定する&#34;&gt;リポジトリへのパスを直接指定する&lt;/h2&gt;

&lt;p&gt;GitHub みたいな有名 SaaS に置いてあるパッケージなら &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか書けば適切に処理してくれるけど，有名でない SaaS ディレクトリや職場 LAN のリポジトリ上のパッケージではこうはいかないこともある。
こういう場合には，以下に示す通り，直接リポジトリへの（プロトコルを含めた）パスを指定する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;git@github.com:spiegel-im-spiegel/gocli.git&amp;#34;&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;dep ensure&lt;/code&gt; すれば&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v

...

&lt;span class=&#34;hl&#34;&gt;(1/8) Wrote github.com/spiegel-im-spiegel/gocli (from git@github.com:spiegel-im-spiegel/gocli.git)@v0.3.0
&lt;/span&gt;(2/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(3/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(4/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(5/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(6/8) Wrote github.com/davidminor/uint128@master
(7/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/8) Wrote github.com/seehuhn/mt19937@master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;といった感じになる。
ちゃんと指定したリポジトリからパッケージを取得してきているのが分かるだろう。&lt;/p&gt;

&lt;h2 id=&#34;go-1-9-から-glide-novendor-は必要なくなった&#34;&gt;Go 1.9 から glide novendor は必要なくなった&lt;/h2&gt;

&lt;p&gt;Vendoring で一番あつかいに困るのがテストで，たとえば安直に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go test -v ./...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とかやると &lt;code&gt;vendor/&lt;/code&gt; フォルダ以下のパッケージまでテスト・シーケンスが走ってしまうのが困りものであった。
このため &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; にはこれを回避する &lt;code&gt;glide novendor&lt;/code&gt; コマンドがあって&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go test -v $(glide novendor)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすることで &lt;code&gt;vendor/&lt;/code&gt; フォルダへのテストを回避できるようになっていたのだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tst1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tst1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ところがところがである！！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt; 1.9 からは &lt;code&gt;./...&lt;/code&gt; の扱いが変更になり&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;“By popular request, &lt;code&gt;./...&lt;/code&gt; no longer matches packages in &lt;code&gt;vendor&lt;/code&gt; directories in tools accepting package names, such as &lt;code&gt;go test&lt;/code&gt;.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/go1.9#vendor-dotdotdot&#34;&gt;Go 1.9 Release Notes&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということで &lt;code&gt;./...&lt;/code&gt; に &lt;code&gt;vendor/&lt;/code&gt; フォルダ以下が含まれないことになったのだ。
たとえば &lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34; title=&#34;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&#34;&gt;spiegel-im-spiegel/pi&lt;/a&gt; パッケージの場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go list ./...
github.com/spiegel-im-spiegel/pi
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/qq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となる。
逆に &lt;code&gt;vendor/&lt;/code&gt; フォルダも含めたいなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go list ./... ./vendor/...
github.com/spiegel-im-spiegel/pi
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/qq
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/lcg
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/pcg
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/uint128
github.com/spiegel-im-spiegel/pi/vendor/github.com/inconshreveable/mousetrap
github.com/spiegel-im-spiegel/pi/vendor/github.com/pkg/errors
github.com/spiegel-im-spiegel/pi/vendor/github.com/seehuhn/mt19937
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/cobra
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/cobra/cmd
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/doc
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/pflag
github.com/spiegel-im-spiegel/pi/vendor/github.com/spiegel-im-spiegel/gocli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればよい。
こっちのほうが遥かに扱いやすいよね。&lt;/p&gt;

&lt;p&gt;これでまたひとつ &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; が「要らない子」になる理由が増えてしまったのだった。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.classmethod.jp/go/dep/&#34;&gt;Goオフィシャルチーム作成の依存関係管理ツール dep を試してみた ｜ Developers.IO&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://mattn.kaoriya.net/software/lang/go/20170125023240.htm&#34;&gt;Big Sky :: golang オフィシャル謹製のパッケージ依存解決ツール「dep」&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/golang/gopath-pollution/&#34;&gt;GOPATH 汚染問題&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/golang/package-visualization-tool/&#34;&gt;パッケージの依存状況の視覚化&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ps1&#34;&gt;Windows 7 の場合は “&lt;a href=&#34;https://www.microsoft.com/ja-jp/download/details.aspx?id=40855&#34;&gt;Windows Management Framework 4.0&lt;/a&gt;” をインストールすることで PowerShell 4.0 にアップグレードできる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ps1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tst1&#34;&gt;&lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; を使わない場合は &lt;code&gt;go test -v $(go list ./... | grep -v /vendor/)&lt;/code&gt; とかする。どのみち Windows のコマンドプロンプトでは無理だけど（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tst1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2 に対応した Gpg4win 3.0.0 がリリース - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/09/gpg4win-3_0_0-released/" />
		<id>tag:text.Baldanders.info,2017-09-22:/remark/2017/09/gpg4win-3_0_0-released/</id>
		<published>2017-09-22T23:13:02+09:00</published>
		<updated>2017-09-22T23:13:02+09:00</updated>
		<summary>Gpg4win (GNU Privacy Guard for Windows) は GnuPG を含む Windows 用のパッケージ群である。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2 に対応した &lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; 3.0.0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lists.wald.intevation.org/pipermail/gpg4win-announce/2017-September/000073.html&#34;&gt;[Gpg4win-announce] Gpg4win 3.0.0 released&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://files.gpg4win.org/README-3.0.0.en.txt&#34;&gt;README&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gpg4win.org/version3.html&#34;&gt;Gpg4win - Whats new - Version 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; は &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を含む Windows 用のパッケージ群で，以下の製品で構成されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://openpgp.org/software/kleopatra/&#34; title=&#34;Kleopatra - OpenPGP&#34;&gt;Kleopatra&lt;/a&gt; 3.0.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gnupg.org/software/gpa/&#34; title=&#34;GPA - The Gnu Privacy Assistant&#34;&gt;GPA&lt;/a&gt; 0.9.9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gnupg.org/GpgOL&#34; title=&#34;GpgOL - GnuPG wiki&#34;&gt;GpgOL&lt;/a&gt; 2.0.1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gpg/gpgex&#34; title=&#34;gpg/gpgex: GnupG extension for the Windows Explorer&#34;&gt;GpgEX&lt;/a&gt; 1.0.5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これまで &lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; は &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.0.x をベースに製品を提供してきたが，ようやく最新版においついた感じだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://openpgp.org/software/kleopatra/&#34; title=&#34;Kleopatra - OpenPGP&#34;&gt;Kleopatra&lt;/a&gt; は &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の GUI ラッパーで OpenPGP 鍵および X.509 電子証明書の管理を行う。
&lt;a href=&#34;https://www.kde.org/applications/internet/kmail/&#34; title=&#34;KDE - KMail - Mail Client&#34;&gt;KMail&lt;/a&gt; と連動してメールの暗号化や復号を行うこともできるが Windows 用の &lt;a href=&#34;https://www.kde.org/applications/internet/kmail/&#34; title=&#34;KDE - KMail - Mail Client&#34;&gt;KMail&lt;/a&gt; は同梱されていない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/software/gpa/&#34; title=&#34;GPA - The Gnu Privacy Assistant&#34;&gt;GPA&lt;/a&gt; も同じく GUI ラッパーで，暗号化や復号を行うことができる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.gnupg.org/GpgOL&#34; title=&#34;GpgOL - GnuPG wiki&#34;&gt;GpgOL&lt;/a&gt; は Microsoft Outlook 用の拡張機能で，Outlook 上で OpenPGP/MIME および S/MIME フォーマットによるメールの暗号化や復号を行うことができる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gpg/gpgex&#34; title=&#34;gpg/gpgex: GnupG extension for the Windows Explorer&#34;&gt;GpgEX&lt;/a&gt; は Windows Explorer の拡張機能で， Explorer 上からファイルの暗号化や復号を行うことができる。
個人的に &lt;a href=&#34;https://github.com/gpg/gpgex&#34; title=&#34;gpg/gpgex: GnupG extension for the Windows Explorer&#34;&gt;GpgEX&lt;/a&gt; はかなり使い勝手がいいのでお勧めである。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://www.gpg4win.org/&#34; title=&#34;Gpg4win - Secure email and file encryption with GnuPG for Windows&#34;&gt;Gpg4win&lt;/a&gt; 以外で Windows 用で動作する製品は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;メールの暗号化や復号については &lt;a href=&#34;https://www.mozilla.org/thunderbird/&#34;&gt;Thunderbird&lt;/a&gt;＋&lt;a href=&#34;https://addons.mozilla.org/thunderbird/addon/enigmail/&#34;&gt;Enigmail&lt;/a&gt; でも行うことができる&lt;/li&gt;
&lt;li&gt;Gmail や Outlook.com といった Web メール用に &lt;a href=&#34;https://www.mailvelope.com/&#34;&gt;Mailvelope&lt;/a&gt; という製品がある。こちらは &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; ではなく &lt;a href=&#34;https://openpgpjs.org/&#34; title=&#34;OpenPGP.js | OpenPGP JavaScript Implementation&#34;&gt;OpenPGP.js&lt;/a&gt; を使っている。 Chrome や Firefox の拡張機能として機能し，メールの暗号化や復号を行う。 Google も Chrome 拡張として &lt;a href=&#34;https://github.com/e2email-org/e2email&#34; title=&#34;e2email-org/e2email: E2EMail is a simple Chrome application - a Gmail client that exchanges OpenPGP mail.&#34;&gt;E2EMail&lt;/a&gt; を公開しているが &lt;a href=&#34;https://www.mailvelope.com/&#34;&gt;Mailvelope&lt;/a&gt; のほうが先んじている印象だ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git for Windows&lt;/a&gt; は commit への電子署名に内部で &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を呼び出す（「&lt;a href=&#34;http://text.baldanders.info/remark/2016/04/git-commit-with-openpgp-signature/&#34;&gt;Git Commit で OpenPGP 署名を行う&lt;/a&gt;」を参照）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とまぁ，地味ながら Windows でも &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; は活躍してますよ，ということで。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35097359/&#34;&gt;グーグルのメール暗号化Chromeアプリケーション「E2EMail」がオープンソースに - ZDNet Japan&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-1/&#34;&gt;GnuPG Modern Version for Windows ― インストール編&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-2/&#34;&gt;GnuPG Modern Version for Windows ― gpg-agent について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>そうだ，シーケンス図を描こう！ （一応クラス図も描けるよ） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/09/sequence-diagram/" />
		<id>tag:text.Baldanders.info,2017-09-21:/remark/2017/09/sequence-diagram/</id>
		<published>2017-09-21T16:54:32+09:00</published>
		<updated>2017-09-21T20:41:52+09:00</updated>
		<summary>久しぶりに本ブログをいじくって mermaid でシーケンス図を描けるようにしてみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;久しぶりに&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;をいじくって &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; でシーケンス図を描けるようにしてみる。&lt;/p&gt;

&lt;h2 id=&#34;シーケンス図とは&#34;&gt;シーケンス図とは&lt;/h2&gt;

&lt;p&gt;一応説明しておくと，シーケンス図というのは複数の「もの」の間でのやり取りを時系列で表現したものである。
「もの」は相互作用するものなら何でもよく，以下のような会話も表現できる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
sequenceDiagram
    カバ-&gt;&gt;+カバン: あなた，泳げまして？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;+カバン: 空は飛べるんですの？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;+カバン: じゃあ，足が速いとか？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;カバン: あなた，何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&gt;&gt;カバン: ううっ
    end
&lt;/div&gt;
&lt;figcaption&gt;カバとカバン&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;縦のラインを「ライフライン&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ll&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ll&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;」と呼び（上から下に時間が流れる），横向きの矢印を「メッセージ」と呼ぶ。
“loop” で囲まれている部分は「複合フラグメント」と呼ばれるもので，シーケンス内の処理のかたまりを指す。
“loop” は文字通り繰り返し処理のこと。
カバンはカバに「何もできない」と言われて悶々としてしまったわけですね（笑）&lt;/p&gt;

&lt;p&gt;シーケンス図はオブジェクト指向設計ではとても重宝されている。
クラス間の相互作用を記述するだけじゃなくて，要件定義で「登場人物（人間とは限らない）」の関係を記述するのにも使われる（もちろん UML で使われる図はシーケンス図だけじゃないけどね）。&lt;/p&gt;

&lt;p&gt;ただ，これを手描きで作図するのは結構面倒くさい（図を描きながら試行錯誤するし）。
企業向けなら &lt;a href=&#34;http://astah.change-vision.com/&#34; title=&#34;astah システム設計、ソフトウェア開発支援ツール | Astah&#34;&gt;Astah*&lt;/a&gt; のような開発支援ツールを使う手もあるけれど，個人では手にあまるものだし，どうせ描くならテキスト入力でサクッとやりたいよね。&lt;/p&gt;

&lt;h2 id=&#34;mermaid-記法と-mermaid-js&#34;&gt;Mermaid 記法と  mermaid.js&lt;/h2&gt;

&lt;p&gt;そうした需要に応えてくれるのが &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; である。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/knsv/mermaid&#34;&gt;knsv/mermaid: Generation of diagram and flowchart from text in a similar manner as markdown&lt;/a&gt; ： こちらのドキュメントのほうが詳しい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえば，先程の「カバとカバン」のやり取りは  &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法で以下のように表せる。
直感的で分かりやすいでしょ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sd1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:sd1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた、泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ、足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた、何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この記述をもとに Web ページ上で描画を行うには mermaid.js を使う。&lt;/p&gt;

&lt;h3 id=&#34;mermaid-js-の設定&#34;&gt;mermaid.js の設定&lt;/h3&gt;

&lt;p&gt;まず mermaid.js のセットアップは以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://unpkg.com/mermaid/dist/mermaid.min.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;mermaid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;initialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;startOnLoad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;neutral&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この記述を HTML の末尾（&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; タグの直前）に記述する。&lt;/p&gt;

&lt;p&gt;mermaid.js は &lt;a href=&#34;https://unpkg.com/mermaid/&#34;&gt;CDN (Content Delivery Network) が用意されている&lt;/a&gt;ので利用することをお勧めする。
バージョンを指定する場合は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unpkg.com/mermaid@7.1.0/dist/mermaid.min.js&#34;&gt;https://unpkg.com/mermaid@7.1.0/dist/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のように記述する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mermaid.initialize()&lt;/code&gt; 関数は初期化と描画を行う。
ページロード時に描画を行う場合は &lt;code&gt;startOnLoad&lt;/code&gt; を true にする。
また &lt;code&gt;theme&lt;/code&gt; は今（v7.1.0）のところ以下の4つが用意されている。
お好みでどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;neutral&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さらに mermaid.js に記述部分を認識させるために &lt;code&gt;&amp;lt;div class=&amp;quot;mermaid&amp;quot;&amp;gt; ... &amp;lt;/div&amp;gt;&lt;/code&gt; で囲む。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;mermaid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた、泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ、足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた、何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで最初に挙げたシーケンス図を描画してくれる。&lt;/p&gt;

&lt;h3 id=&#34;hugo-用の-shortcode&#34;&gt;Hugo 用の shortcode&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo | A Fast and Flexible Website Generator&#34;&gt;Hugo&lt;/a&gt; 用に &lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env/blob/master/layouts/shortcodes/fig-mermaid.html&#34;&gt;shortcode を作ってみた&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;figure&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;margin:0 auto;text-align:center;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;mermaid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner }}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
{{ if .Get &amp;#34;title&amp;#34;}}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;figcaption&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ with .Get &amp;#34;link&amp;#34;}}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{.}}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}{{ .Get &amp;#34;title&amp;#34; }}{{ with .Get &amp;#34;link&amp;#34;}}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;figcaption&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;figure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この shortcode を使うなら以下のように記述すればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; fig-mermaid title=&amp;#34;カバとカバン&amp;#34; &amp;gt;}}
sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた，泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ，足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた，何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end
{{&amp;lt; /fig-mermaid &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo | A Fast and Flexible Website Generator&#34;&gt;Hugo&lt;/a&gt; を使っておられる方は参考にどうぞ。&lt;/p&gt;

&lt;h2 id=&#34;複雑な関係を分かりやすくする&#34;&gt;複雑な関係を分かりやすくする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;にシーケンス図を組み込もうと思ったのは徳島県のチケット売買詐欺事件のシーケンスが分かりにくかったからだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20170910/1505065248&#34;&gt;徳島県警察の誤認逮捕事件についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で，リンク先の図を元にしてシーケンス図を起こしてみたのがこれ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
sequenceDiagram
    participant A as 愛知県女性A
    participant Tw as Twitter
    participant B as 京都女子中学生B
    participant C as 徳島県女子高生C
    participant D as 和歌山県女性D
    participant Tk as チケット売買サイト
    participant E as 関東女性E
    A-&gt;&gt;Tw: チケット売ります
    C-&gt;&gt;Tw: 購入希望
    D-&gt;&gt;Tw: 購入希望
    B-&gt;&gt;+Tw: 
    Tw--&gt;&gt;-B: A,B,Cのやり取りを発見
    B-&gt;&gt;+A: 売買交渉：8万円で購入希望
    B-&gt;&gt;+C: Aとして売買交渉：Aの口座に4万円送金指示
    B-&gt;&gt;+D: Aとして売買交渉：Aの口座に4万円送金指示
    B-&gt;&gt;+Tk: A名義でチケット出品
    C--&gt;&gt;-A: 4万円振込
    D--&gt;&gt;-A: 4万円振込
    E-&gt;&gt;Tk: 6万5千円で落札，送金
    B-&gt;&gt;A: 送付先をEの住所へ指示
    A--&gt;&gt;-E: チケット送付
    Tk--&gt;&gt;-B: 約6万円入金
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20170910/1505065248&#34;&gt;「[徳島県警察の誤認逮捕事件についてまとめてみた」より&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法ではこんな感じになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sequenceDiagram
    participant A as 愛知県女性A
    participant Tw as Twitter
    participant B as 京都女子中学生B
    participant C as 徳島県女子高生C
    participant D as 和歌山県女性D
    participant Tk as チケット売買サイト
    participant E as 関東女性E
    A-&amp;gt;&amp;gt;Tw: チケット売ります
    C-&amp;gt;&amp;gt;Tw: 購入希望
    D-&amp;gt;&amp;gt;Tw: 購入希望
    B-&amp;gt;&amp;gt;+Tw: 
    Tw--&amp;gt;&amp;gt;-B: A,B,Cのやり取りを発見
    B-&amp;gt;&amp;gt;+A: 売買交渉：8万円で購入希望
    B-&amp;gt;&amp;gt;+C: Aとして売買交渉：Aの口座に4万円送金指示
    B-&amp;gt;&amp;gt;+D: Aとして売買交渉：Aの口座に4万円送金指示
    B-&amp;gt;&amp;gt;+Tk: A名義でチケット出品
    C--&amp;gt;&amp;gt;-A: 4万円振込
    D--&amp;gt;&amp;gt;-A: 4万円振込
    E-&amp;gt;&amp;gt;Tk: 6万5千円で落札，送金
    B-&amp;gt;&amp;gt;A: 送付先をEの住所へ指示
    A--&amp;gt;&amp;gt;-E: チケット送付
    Tk--&amp;gt;&amp;gt;-B: 約6万円入金&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかし，改めて見るとホンマ凄いよねぇ。
これを本当に一人で考えて実行したのならちょとした天才かもしれん。&lt;/p&gt;

&lt;h2 id=&#34;シーケンス図以外の図も描けるよ&#34;&gt;シーケンス図以外の図も描けるよ&lt;/h2&gt;

&lt;p&gt;さて，今（v7.1.0）のところ  &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法および mermaid.js は以下の図をサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;フローチャート&lt;/li&gt;
&lt;li&gt;シーケンス図&lt;/li&gt;
&lt;li&gt;ガント図&lt;/li&gt;
&lt;li&gt;クラス図（experimental）&lt;/li&gt;
&lt;li&gt;Git グラフ（experimental）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえば，クラス図は以下のように記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;classDiagram
    friends&amp;lt;|--serval
    friends&amp;lt;|--raccoon
    friends&amp;lt;|--fennec
    serval : +Waai()
    raccoon : +Omakase-nanoda()
    fennec : +Haiyo()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを mermaid.js で描画すると以下のようになる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
classDiagram
    friends&lt;|--serval
    friends&lt;|--raccoon
    friends&lt;|--fennec
    serval : +Waai()
    raccoon : +Omakase-nanoda()
    fennec : +Haiyo()
&lt;/div&gt;
&lt;figcaption&gt;フレンズ&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;んー。
クラス図を描くなら多重度は必須なんだがなぁ（たとえば多対多の関係は実装できないため「設計が間違っている」と断言できる）。
これに関しては「これからに期待」といったところか。&lt;/p&gt;

&lt;h2 id=&#34;考えながら描く&#34;&gt;考えながら描く&lt;/h2&gt;

&lt;p&gt;クラス図やシーケンス図といったものは試行錯誤しながら描いていくものなので，切ったり貼ったりあるいは結合を変えたりといったことが簡単にできないと意味がない。
したがって，とにかく記述が簡単で見た目が直感的であるというのが大事になってくるわけだ，多少は機能を落としてでも。&lt;/p&gt;

&lt;p&gt;そういう意味で &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; はバランスのいい製品と言える。
まぁ，&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;では頻繁に使うものではないかもしれないが，使える道具はあるに越したことはないだろう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itsenka.com/contents/development/uml/sequence.html&#34;&gt;シーケンス図(Sequence Diagram) - UML入門 - IT専科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itsenka.com/contents/development/uml/class.html&#34;&gt;クラス図(Class Diagram) - UML入門 - IT専科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/rana_kualu/items/da394fd33ce019bf0ba7&#34;&gt;簡単にガントチャートとかクラス図とか書けるやつ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ririli/items/64320ed2918b1982f89d&#34;&gt;ちょっとしたシーケンス図を書くのにatom-mermaidが便利すぎる話 - Qiita&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.tonyballantyne.com/graphs.html&#34;&gt;Drawing Graphs using Dot and Graphviz&lt;/a&gt; : 図にこだわるのであれば &lt;a href=&#34;http://www.graphviz.org/&#34; title=&#34;Graphviz | Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; の DOT 言語を使う手もある&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/rubytomato@github/items/51779135bc4b77c8c20d&#34;&gt;Graphvizとdot言語でグラフを描く方法のまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/04/hackmd/&#34;&gt;エディタ以上ワープロ未満の HackMD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ll&#34;&gt;UML 的にはライフラインは破線じゃないといけないのだけど，どういうわけか &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; では実線になっている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ll&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sd1&#34;&gt;複合フラグメントは loop 以外には alt, opt, par のみサポートされているようだ。個人的には ref と  critical （par があるなら critical は必要）くらいは入れて欲しいところであるが&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.1 がリリース - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/09/gnupg-2_2_1-released/" />
		<id>tag:text.Baldanders.info,2017-09-20:/remark/2017/09/gnupg-2_2_1-released/</id>
		<published>2017-09-20T10:46:45+09:00</published>
		<updated>2017-09-20T10:46:45+09:00</updated>
		<summary>今回はセキュリティ・アップデートはなし。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000415.html&#34;&gt;[Announce] GnuPG 2.2.1 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はセキュリティ・アップデートはなし。
主な修正点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpg: Fix formatting of the user id in batch mode key generation if only &amp;ldquo;name-email&amp;rdquo; is given.&lt;/li&gt;
&lt;li&gt;gpgv: Fix annoying &amp;ldquo;not suitable for&amp;rdquo; warnings.&lt;/li&gt;
&lt;li&gt;wks: Convey only the newest user id to the provider.  This is the case if different names are used with the same addr-spec.&lt;/li&gt;
&lt;li&gt;wks: Create a complying user id for provider policy mailbox-only.&lt;/li&gt;
&lt;li&gt;wks: Add workaround for &lt;a href=&#34;https://posteo.de/&#34; title=&#34;Email green, secure, simple and ad-free - posteo.de -&#34;&gt;posteo.de&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;scd: Fix the use of large ECC keys with an OpenPGP card.&lt;/li&gt;
&lt;li&gt;dirmngr: Use system provided root certificates if no specific HKP certificates are configured.  If build with GNUTLS, this was already the case.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.1
libgcrypt 1.8.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.0 がリリース（脆弱性の修正あり） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/09/gnupg-2_2_0-released/" />
		<id>tag:text.Baldanders.info,2017-09-14:/remark/2017/09/gnupg-2_2_0-released/</id>
		<published>2017-09-14T04:11:20+09:00</published>
		<updated>2017-09-14T04:11:20+09:00</updated>
		<summary>バージョン 2.2 は stable 版 2.0.x の置き換えになるようだ。なお 2.0.x は今年いっぱいでサポートを終了する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;個人的に色々あって更新が滞ってます。
ゴメン，ペコン。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000413.html&#34;&gt;[Announce] GnuPG 2.2.0 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;バージョン 2.2 は stable 版 2.0.x の置き換えになるようだ。
なお 2.0.x は今年いっぱいでサポートを終了する。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This release marks the start of a new long term support series to replace the 2.0.x series which will reach end-of-life on 2017-12-31.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000413.html&#34;&gt;GnuPG 2.2.0 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;今までのように modarn 版と stable 版に分けて開発を進めるのかどうかについては記述がないので分からない。
2.1.23 からの変更点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpg: Reverted change done in 2.1.23 so that &lt;code&gt;--no-auto-key-retrieve&lt;/code&gt; is again the default.&lt;/li&gt;
&lt;li&gt;Fixed a few minor bugs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ところで GnuPG が内部で使っている Libgcrypt に脆弱性が発見されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000414.html&#34;&gt;[Announce] Libgcrypt 1.8.1 and 1.7.9 to fix CVE-2017-0379&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/806&#34;&gt;May the Fourth Be With You: A Microarchitectural Side Channel Attack on Several Real-World Applications of Curve25519&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（スター・ウォーズかよ！）&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;We demonstrate the effect of this vulnerability on three software applications---encrypted git, email and messaging---that use Libgcrypt. In each case, we show how to craft malicious OpenPGP files that use the Curve25519 point of order 4 as a chosen ciphertext to the ECDH encryption scheme. We find that the resulting interactions of the point at infinity, order-2, and order-4 elements in the Montgomery ladder scalar-by-point multiplication routine create side channel leakage that allows us to recover the private key in as few as 11 attempts to access such malicious files.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/806&#34;&gt;A Microarchitectural Side Channel Attack on Several Real-World Applications of Curve25519&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;たとえば暗号化メールを使った攻撃では&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;For an attack on encrypted email we use the Thunderbird plugin Enigmail. As Genkin et al. observe, Enigmail automatically decrypts incoming emails by passing them to GnuPG, which uses Libgcrypt as its cryptographic engine. To attack Enigmail, we inject an element of order 4 into Libgcrypt we send the victim a PGP/MIME-encoded e-mail, with the element of order-4 as the ciphertext.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/806&#34;&gt;A Microarchitectural Side Channel Attack on Several Real-World Applications of Curve25519&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;といったシナリオが挙げられている。&lt;/p&gt;

&lt;p&gt;この問題を軽減（mitigate）したバージョン 1.8.1 および 1.7.9 がリリースされている。
なお Windows 用の GnuPG 2.2.0 バイナリには Libgcrypt 1.8.1 が同梱されている。&lt;/p&gt;

&lt;p&gt;影響度は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2017-0379&#34;&gt;NVD - CVE-2017-0379&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CVSSv3 基本評価値 7.5 (&lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;必要な特権レベル（PR）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ユーザ関与レベル（UI）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;スコープ（S）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;変更なし（U）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;一般にサイドチャネル攻撃はあまり影響度が高くないが &lt;a href=&#34;https://nvd.nist.gov/&#34; title=&#34;National Vulnerability Database&#34;&gt;NVD&lt;/a&gt; はかなり高めに見積もっているようである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rh1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:rh1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;p&gt;インストールが上手くいけば以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.0
libgcrypt 1.8.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:rh1&#34;&gt;一方， &lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-0379&#34;&gt;Red Hat の評価&lt;/a&gt;は &lt;code&gt;CVSS:3.0/AV:L/AC:H/PR:L/UI:R/S:U/C:H/I:N/A:N&lt;/code&gt; で基本評価値 4.4 になっている。ただし&lt;a href=&#34;https://eprint.iacr.org/2017/806&#34; title=&#34;May the Fourth Be With You: A Microarchitectural Side Channel Attack on Several Real-World Applications of Curve25519&#34;&gt;論文&lt;/a&gt;を読むと攻撃シナリオとして Enigmail, Git-crypt, Pidgin-OpenPGP を使った方法が挙げられているので， &lt;a href=&#34;https://nvd.nist.gov/&#34; title=&#34;National Vulnerability Database&#34;&gt;NVD&lt;/a&gt; の評価のほうが近いかも。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rh1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>SCM ツールの脆弱性 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/08/vulnerabilities-in-scm-tools/" />
		<id>tag:text.Baldanders.info,2017-08-19:/remark/2017/08/vulnerabilities-in-scm-tools/</id>
		<published>2017-08-19T21:02:07+09:00</published>
		<updated>2017-08-19T21:02:07+09:00</updated>
		<summary>改修されたバージョンが公開されている。更新作業は計画的に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;がっつり見落としてました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.recurity-labs.com/2017-08-10/scm-vulns&#34;&gt;Compromise On Checkout - Vulnerabilities in SCM Tools · The Recurity Lablog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1466490.html&#34;&gt;[ANNOUNCE] Git v2.14.1, v2.13.5, and others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/2017/08/10/gitlab-9-dot-4-dot-4-released/&#34;&gt;GitLab 9.4.4, 9.3.10, 9.2.10, 9.1.10, 9.0.13, and 8.17.8 Critical Security Release | GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mercurial-scm.org/wiki/WhatsNew#Mercurial_4.3_.2F_4.3.1_.282017-08-10.29&#34;&gt;Mercurial 4.3 / 4.3.1 (2017-08-10)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://subversion.apache.org/security/CVE-2017-9800-advisory.txt&#34;&gt;Arbitrary code execution on clients through malicious svn+ssh URLs in svn:externals and svn:sync-from-url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://forest.watch.impress.co.jp/docs/news/1075909.html&#34;&gt;「Git」「Mercurial」「Subversion」などにコマンドインジェクションの脆弱性 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;脆弱性の内容&#34;&gt;脆弱性の内容&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;同社のブログ記事によると、「Git LFS」の旧バージョンにはURLの解釈処理に問題があり、たとえば“ssh://-oProxyCommand=some-command”というURLの場合、ホスト名を“-o ProxyCommand=some-command”と解釈してしまうため、“some-command”が実行されてしまう。同様の問題は、「Git」「Mercurial」「Subversion」にも存在する。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://forest.watch.impress.co.jp/docs/news/1075909.html&#34;&gt;「Git」「Mercurial」「Subversion」などにコマンドインジェクションの脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;影響度-cvss&#34;&gt;影響度（CVSS）&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-9800&#34;&gt;CVE-2017-9800 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-1000116&#34;&gt;CVE-2017-1000116 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-1000117&#34;&gt;CVE-2017-1000117 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CVSSv3 基本評価値 6.3 (&lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;必要な特権レベル（PR）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ユーザ関与レベル（UI）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;要（R）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;スコープ（S）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;変更なし（U）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;影響を受ける製品&#34;&gt;影響を受ける製品&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Git v2.7.6, v2.8.6, v2.9.5, v2.10.4, v2.11.3, v2.12.4, and v2.13.5&lt;/li&gt;
&lt;li&gt;Mercurial 4.3 以前&lt;/li&gt;
&lt;li&gt;Subversion

&lt;ul&gt;
&lt;li&gt;1.0.0 through 1.8.18&lt;/li&gt;
&lt;li&gt;1.9.0 through 1.9.6&lt;/li&gt;
&lt;li&gt;1.10.0-alpha3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GitLab （&lt;a href=&#34;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12426&#34;&gt;CVE-2017-12426&lt;/a&gt; を含む）

&lt;ul&gt;
&lt;li&gt;7.9.0 through 8.17.7&lt;/li&gt;
&lt;li&gt;9.0.0 through 9.0.12&lt;/li&gt;
&lt;li&gt;9.1.0 through 9.1.9&lt;/li&gt;
&lt;li&gt;9.2.0 through 9.2.9&lt;/li&gt;
&lt;li&gt;9.3.0 through 9.3.9&lt;/li&gt;
&lt;li&gt;9.4.0 through 9.4.3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対策-回避策&#34;&gt;対策・回避策&lt;/h2&gt;

&lt;p&gt;改修されたバージョンが公開されている。
更新作業は計画的に。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git v2.14.1&lt;/li&gt;
&lt;li&gt;Mercurial 4.3.1&lt;/li&gt;
&lt;li&gt;Subversion 1.8.19 and 1.9.7&lt;/li&gt;
&lt;li&gt;GitLab 8.17.8, 9.0.13, 9.1.10, 9.2.10, 9.3.10, and 9.4.4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/bells17/items/b8a21b1ef8d9ec36a151&#34;&gt;CVE-2017-1000117 対策のメモ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.1.23 がリリース - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/08/gnupg-2_1_23-released/" />
		<id>tag:text.Baldanders.info,2017-08-10:/remark/2017/08/gnupg-2_1_23-released/</id>
		<published>2017-08-10T10:43:43+09:00</published>
		<updated>2017-08-10T10:43:43+09:00</updated>
		<summary>今回の目玉はやっぱり --enable-gpg-is-gpg2 オプションかな。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;GnuPG 2.1.23 がリリースされた。
セキュリティ・アップデートはなし。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000412.html&#34;&gt;[Announce] GnuPG 2.1.23 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;修正および変更点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpg: &amp;ldquo;gpg&amp;rdquo; is now installed as &amp;ldquo;gpg&amp;rdquo; and not anymore as &amp;ldquo;gpg2&amp;rdquo;.  If needed, the new configure option &lt;code&gt;--enable-gpg-is-gpg2&lt;/code&gt; can be used to revert this.&lt;/li&gt;
&lt;li&gt;gpg: Options &lt;code&gt;--auto-key-retrieve&lt;/code&gt; and &lt;code&gt;--auto-key-locate&lt;/code&gt; &amp;ldquo;local,wkd&amp;rdquo; are now used by default.  Note: this enables keyserver and Web Key Directory operators to notice when a signature from a locally non-available key is being verified for the first time or when you intend to encrypt to a mail address without having the key locally.  This new behaviour will eventually make key discovery much easier and mostly automatic.  Disable this by adding &lt;code&gt;no-auto-key-retrieve&lt;/code&gt; &lt;code&gt;auto-key-locate&lt;/code&gt; local to your gpg.conf.&lt;/li&gt;
&lt;li&gt;agent: Option &lt;code&gt;--no-grab&lt;/code&gt; is now the default.  The new option &lt;code&gt;--grab&lt;/code&gt; allows to revert this.&lt;/li&gt;
&lt;li&gt;gpg: New import option &amp;ldquo;show-only&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;gpg: New option &lt;code&gt;--disable-dirmngr&lt;/code&gt; to entirely disable network access for gpg.&lt;/li&gt;
&lt;li&gt;gpg,gpgsm: Tweaked DE-VS compliance behaviour.&lt;/li&gt;
&lt;li&gt;New configure flag &lt;code&gt;--enable-all-tests&lt;/code&gt; to run more extensive tests during &amp;ldquo;make check&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;gpgsm: The keygrip is now always printed in colon mode as documented in the man page.&lt;/li&gt;
&lt;li&gt;Fixed connection timeout problem under Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回の目玉はやっぱり &lt;code&gt;--enable-gpg-is-gpg2&lt;/code&gt; オプションかな。
でもこのオプションの有無で違いが分からないんだよなぁ。
私の環境は classic 版からの以降なので，そのせいかな？&lt;/p&gt;

&lt;p&gt;インストールが上手くいけば以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.1.23
libgcrypt 1.8.0
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.1.22 リリースと寄付の募集 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/07/gnupg-2_1_22-released/" />
		<id>tag:text.Baldanders.info,2017-07-31:/remark/2017/07/gnupg-2_1_22-released/</id>
		<published>2017-07-31T20:41:53+09:00</published>
		<updated>2017-07-31T20:41:53+09:00</updated>
		<summary>溜まりに溜まってた更新情報をまとめて挙げておく。脆弱性の習性あり。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;溜まりに溜まってた更新情報をまとめて挙げておく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000405.html&#34;&gt;[Announce] GnuPG 2.1.21 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000406.html&#34;&gt;[Announce] Libgcrypt 1.7.7 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000408.html&#34;&gt;[Announce] Libgcrypt 1.7.8 released to fix CVE-2017-7526&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/627&#34;&gt;Sliding right into disaster: Left-to-right sliding windows leak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000409.html&#34;&gt;[Announce] Scute 1.5.0 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000410.html&#34;&gt;[Announce] Libgcrypt 1.8.0 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q3/000411.html&#34;&gt;[Announce] GnuPG 2.1.22 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.1.21 リリース時にアナウンスされた注意事項は以下の通り。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This release fixes a keyring corruption bug introduced with last release.  Users of 2.1.20, who are using the old &#34;pubring.gpg&#34; file to store their public keys, are asked to update to this new release.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000405.html&#34;&gt;GnuPG 2.1.21 released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;また Libgcrypt 1.7.8 で “Sliding right into disaster&amp;rdquo; 脆弱性を軽減する修正が行われている。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Note that this side-channel attack requires that the attacker can run arbitrary software on the hardware where the private RSA key is used.  Allowing execute access to a box with private keys should be considered as a game over condition, anyway.  Thus in practice there are easier ways to access the private keys than to mount this side-channel attack.  However, on boxes with virtual machines this attack may be used by one VM to steal private keys from another VM.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000408.html&#34;&gt;Libgcrypt 1.7.8 released to fix CVE-2017-7526&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;It is well known that constant-time implementations of modular exponentiation cannot use sliding windows. However, software libraries such as Libgcrypt, used by GnuPG, continue to use sliding windows. It is widely believed that, even if the complete pattern of squarings and multiplications is observed through a side-channel attack, the number of exponent bits leaked is not sufficient to carry out a full key-recovery attack against RSA. Specifically, 4-bit sliding windows leak only 40% of the bits, and 5-bit sliding windows leak only 33% of the bits.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/627&#34;&gt;Sliding right into disaster: Left-to-right sliding windows leak&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;影響度は以下の通り。&lt;/p&gt;

&lt;p&gt;“&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-7526&#34;&gt;CVE-2017-7526 - Red Hat Customer Portal&lt;/a&gt;&amp;rdquo; より&lt;/p&gt;

&lt;p&gt;CVSSv3 基本評価値 6.1 (&lt;code&gt;CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:N/A:N&lt;/code&gt;)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;必要な特権レベル（PR）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ユーザ関与レベル（UI）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;要（R）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;スコープ（S）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;変更あり（C）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://eprint.iacr.org/2017/627&#34; title=&#34;Sliding right into disaster: Left-to-right sliding windows leak&#34;&gt;論文&lt;/a&gt;では 1024 bits RSA 鍵の解読を行っている。
今時 1024 bits RSA 鍵で運用している人はいないと思うが，もしまだの方がいたらこの機会に 2048 bits 以上にアップデートすることをお勧めする。
もしくは（可能であれば）楕円暗号に切り替えるか。&lt;/p&gt;

&lt;p&gt;その他の修正等については各記事を参照のこと。
最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.1.22
libgcrypt 1.8.0
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;余談だが &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では寄付を募っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gnupg.org/donate/&#34;&gt;GnuPG - Donate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q2/000407.html&#34;&gt;[Announce] GnuPG Funding Campaign Launched&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/wNHhkntqklg&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=wNHhkntqklg&#34;&gt;GnuPG Fundraising Rally - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;目標は15,000ユーロ/月。
この記事を書いている時点で目標の3分の1程度のペースか。
興味のある方は是非。&lt;/p&gt;

&lt;p&gt;私も寄付したいけど，今は財政状況ががが。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>さよなら iPod - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/07/sayonara-ipod/" />
		<id>tag:text.Baldanders.info,2017-07-30:/remark/2017/07/sayonara-ipod/</id>
		<published>2017-07-30T14:59:36+09:00</published>
		<updated>2017-07-30T14:59:36+09:00</updated>
		<summary>「さよなら iPod」がそのまま「さよなら Apple」にならなきゃいいけど。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（これは Facebook のタイムラインに書いた記事を加筆修正したものです）&lt;/p&gt;

&lt;p&gt;iPod は縁がなかったなぁ。
他人が持ってるのを見て「いいなぁ」と思ったことはあるけど，そもそも移動中に音楽を聴く習慣がついたのはここ3年くらいだし。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2017/07/28/say-goodbye-to-ipod/&#34;&gt;iPodは「音楽」に何をもたらしたか──その功績を、販売終了を機に振り返る｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今世紀に入って音楽がどのように変わったかについては言うまでもないだろう。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;iPodの人気に火が付いたのは、ちょうどナップスターの熱狂のあとだった。違法コピーのスリルが、アップルのガジェットや大容量のHDDと組み合わさって、突如として音楽が「解放された」のである。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://wired.jp/2017/07/28/say-goodbye-to-ipod/&#34;&gt;iPodは「音楽」に何をもたらしたか──その功績を、販売終了を機に振り返る&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まぁ続きが気になる方は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34; title=&#34;Amazon | デジタル音楽の行方 | David Kusek, Gerd Leonhard, yomoyomo, 津田 大介 | 音楽一般 通販&#34;&gt;デジタル音楽の行方&lt;/a&gt;』辺りを読むといいだろう。
音楽に限らず世の中は「消費は美徳」な時代から「体験を共有する」時代&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:age&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:age&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; へと変わっており，そういう意味で当時の iPod は「&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B009S7CDP6/baldandersinf-22/&#34; title=&#34;ソーシャルシフト　これからの企業にとって一番大切なこと | 斉藤 徹 | 実践経営・リーダーシップ | Kindleストア | Amazon&#34;&gt;ソーシャルシフト&lt;/a&gt;」する時代の先駆けだったと言えるかもしれない。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;ステファンズ氏は言う。「何を買い、どこでお金を落とし、どのように消費するのか。消費者は、以前よりも厳しい目で判断している」&lt;br&gt;
特筆すべきは、消費者が「モノ」よりも「体験」を購入している点だ。&lt;br&gt;
この傾向は特にアパレル小売業者に打撃を与えており、その背景にはソーシャルメディアの台頭があると同氏は指摘する。&lt;br&gt;
「『モノ』よりも『体験』の方が、ソーシャルメディア上で話題になりやすい」&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.businessinsider.jp/post-100448&#34;&gt;アマゾンではなかった…… アメリカの小売業を低迷させた2つの元凶&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;一方，個人的に当時の iPod が驚愕だったのはタッチセンサを「あんなもの」に組み込んだことにあった。&lt;/p&gt;

&lt;p&gt;もちろんタッチデバイス自体はそれ以前からあったけど，どちらかというとペンタブレットのような高機能または高付加価値に重きを置いていて，単機能デバイスにわざわざタッチセンサを使うという発想がなかった。
だって物理ボタンのほうが安上がりでしょ。
大量生産品は1円のコスト減にしのぎを削っているのにあり得ないぢゃん（笑）&lt;/p&gt;

&lt;p&gt;当時 iPod に刺激を受けたタッチデバイスの試作品開発に関わったことを思い出す。
タッチセンサへの置き換えは単純に物理ボタンのエミュレーションというだけではなく様々な指の動き「アクション」とか「ジェスチャ」とか呼ばれているものに機能を割り当てることができるというもので，つまりは「HMI (Human Machine Interface) の拡張・解放」にあったわけだ。&lt;/p&gt;

&lt;p&gt;その究極が，今は当たり前になっている，全面タッチパネルの携帯端末だ。
最初に挙げた記事では現在の iPod を「簡易版のiPhone」と評しているが，私に言わせれば iPhone は，「賢い電話」なんかじゃなく，「電話機能付きの iPod」であり，電話をアプリケーションのひとつに落とし込んでいる点が秀逸だったのである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sp&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:sp&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ユーザの音楽への関わり方も含めて， iPod は時代の変化にきちんと適応しているのだ。
少なくともこれまでは。&lt;/p&gt;

&lt;p&gt;今の Apple に当時の勢いはない。
クラウドや AI については他社の後塵を拝すかたちになってるし， HMI についても Amazon の DASH ボタンや Echo&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:e1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:e1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; に比べれば停滞感は否めない。&lt;/p&gt;

&lt;p&gt;Echo については AI というバズワードばかり先行しているが，音声を HMI として高い精度で実装できているのが画期的なのだ。
これは中核技術である Alexa が自動車のダッシュボードの HMI として採用されつつある点から見ても分かるだろう。
高い精度は要求されず，見かけ上「賢い人工無脳」に過ぎない Apple の Siri や Google の Allo などとは一線を画すわけだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ai1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ai1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;正直に言って，5年後10年後に Amazon や Google というか Alphabet は生き残ってそうだけど Apple が生き残ってる未来が見えない。
「さよなら iPod」がそのまま「さよなら Apple」にならなきゃいいけど&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:x&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:x&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
まぁ，たとえそうなっても私は困らないが（笑）&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2015/06/32173/&#34;&gt;『デジタル音楽の行方』から10年経って - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.businessinsider.jp/post-100448&#34;&gt;アマゾンではなかった…… アメリカの小売業を低迷させた2つの元凶 | BUSINESS INSIDER JAPAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/01/05/20170104fords-going-to-put-alexa-in-cars-starting-later-this-year/&#34;&gt;Fordは今年の後半から、車にAlexaの搭載を計画 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35094891/&#34;&gt;進むアマゾン「Alexa」の自動車対応&amp;ndash;車載アプリ基盤「INRIX OpenCar」に搭載 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/07/28/20170727it-looks-like-amazon-would-be-losing-a-lot-of-money-if-not-for-aws/&#34;&gt;もしAWSがなかったら、Amazonは大赤字 | TechCrunch Japan&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:amzn&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:amzn&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/17/googlecloud_tpuaigoogle_io_2017.html&#34;&gt;［速報］Google、機械学習に最適化した「Cloud TPU」発表。「われわれれはいま、AIファーストデータセンターの構築に取りかかっている」。Google I/O 2017 － Publickey&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1705/19/news034.html&#34;&gt;Google I/O 17で「Cloud TPU」を発表：グーグルの機械学習／AIへの取り組みを支える「AIファーストデータセンター」とは - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51HINm31mtL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34;&gt;デジタル音楽の行方&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;David Kusek Gerd Leonhard yomoyomo &lt;/dd&gt;&lt;dd&gt;翔泳社 2005-12-06&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4787272217/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4787272217.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽は死なない!―音楽業界の裏側&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/402331157X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/402331157X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;誰がJ-POPを救えるか?  マスコミが語れない業界盛衰記&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791766903/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791766903.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ソーシャル化する音楽 「聴取」から「遊び」へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4787272527/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4787272527.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽業界で起こっていること&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492762183/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4492762183.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽産業 再成長のための組織戦略&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4326698616/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4326698616.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;拡散する音楽文化をどうとらえるか (双書音楽文化の現在)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845626705/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845626705.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;新時代ミュージックビジネス最終講義 新しい地図を手に、音楽とテクノロジーの蜜月時代を生きる!&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798036471/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798036471.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;図解入門業界研究最新音楽業界の動向とカラクリがよ~くわかる本[第3版] (How‐nual Industry Trend Guide Book)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845620243/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845620243.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;次世代ミュージシャンのためのセルフマネージメント・バイブル 自分を作る・売る・守る!&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845619261/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845619261.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;よくわかる音楽著作権ビジネス 基礎編 4th Edition&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;読んでない。絶賛絶版中？ もはや読む価値があるのかどうかさえ不明。「デジタル」とタイトルに冠されているにも関わらず Kindle 化さえされてないことに出版側のやる気を感じる（笑）&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-07-30&#34;&gt;2017-07-30&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:age&#34;&gt;故にコレクション魂を炸裂させ孤高の道を進むが共有する相手のいない「真のキモオタ」には辛い時代である（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:age&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sp&#34;&gt;電話をメインに使う人はガラケー・オンリーかスマホとガラケーの2台持ちが普通だったりするしね。そういえば機械音痴でスマホが使えない友人にスマホでの電話のかけ方を教えたら，電話アプリを起動しないと電話をかけられないことに驚愕していた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sp&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:e1&#34;&gt;Echo は&lt;a href=&#34;http://www.newsweekjapan.jp/yukawa/2017/01/amazon-echo.php&#34; title=&#34;日本でもAmazon Echo年内発売？既に業界は戦々恐々 | 湯川鶴章 | コラム＆ブログ | ニューズウィーク日本版 オフィシャルサイト&#34;&gt;日本では年内発売との噂&lt;/a&gt;があったのだがどうなったのだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:e1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ai1&#34;&gt;もちろん Google というか Alphabet 傘下の AI 技術開発の真価は Allo ではない。 Alphabet 傘下の各グループは明らかに5年10年先を見据えて開発を行っていて，現在の（広告中心の）収益構造を変えることを目論んでいる筈である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ai1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:x&#34;&gt;自慢じゃないが私の予言はよく外れるので真に受けないように（若い頃は20世紀内に Mac は滅びると思っていた）。冗談にクレームは受け付けません（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:x&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:amzn&#34;&gt;まぁ，今時 Amazon のことをネット書店とかEコマースサイトだとか思ってる人はいないだろう。ただ「クラウド」や「仮想化」だけで稼げる季節はとうの昔に過ぎていて，その上に何を乗せるかが重要になっている。例えば Alphabet は AI 基盤をクラウド化することで次代の収益の柱を狙っているように見える。しかし Amazon にはそういったものが見えづらい。ただ Google が「すべての情報をグラフ化する」のなら Amazon は「全てのモノと情報の流通を押さえる」ことにあるように見える。つまり社是が違うということなのだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:amzn&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>ATOM 1.18 stable リリースで公式に Git 機能に対応 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/06/atom-1_18/" />
		<id>tag:text.Baldanders.info,2017-06-21:/remark/2017/06/atom-1_18/</id>
		<published>2017-06-21T12:59:52+09:00</published>
		<updated>2017-06-21T12:59:52+09:00</updated>
		<summary>よーやくですよ！</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;先週 &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 1.18 の stable 版がリリースされたが，公式に &lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;git&lt;/a&gt; 機能が組み込まれたようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.atom.io/2017/06/13/atom-1-18.html&#34;&gt;Atom 1.18 | Atom Blog&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://githubengineering.com/integrating-git-in-atom/&#34;&gt;Integrating Git in Atom | GitHub Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.atom.io/2017/05/16/git-and-github-integration-comes-to-atom.html&#34;&gt;Git and GitHub Integration comes to Atom | Atom Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://forest.watch.impress.co.jp/docs/news/1065638.html&#34;&gt;「Git」と“GitHub”を統合した「Atom」v1.18が正式版に ～GitHub製の無償エディター - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;もともと core package として &lt;a href=&#34;https://atom.io/packages/git-diff&#34;&gt;git-diff&lt;/a&gt; は組み込まれていたのだが，実際のリポジトリ操作には &lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; 等の外部パッケージを使わざるを得なかった。
これが &lt;a href=&#34;https://atom.io/packages/github&#34;&gt;github&lt;/a&gt; として core package に組み込まれ，リポジトリ操作が GUI で提供されることになったわけだ。
よーやくですよ！&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;http://blog.atom.io/2017/06/13/atom-1-18.html&#34;&gt;&lt;img src=&#34;http://blog.atom.io/img/posts/github-package-git.png&#34; srcset=&#34;http://blog.atom.io/img/posts/github-package-git.png 1560w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Atom 1.18&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://blog.atom.io/2017/06/13/atom-1-18.html&#34;&gt;Atom 1.18&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Stage や commit/amend や fetch/pull/push といった基本操作はもちろん，hunk&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:h&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:h&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; を選択して stage すること（&lt;code&gt;git add -p&lt;/code&gt; 相当）も GUI で可能なようだ。
よしよし。
ただし stash や cherry-pick といった細かい操作はできなさそうっぽい？&lt;/p&gt;

&lt;p&gt;ただ，良くも悪くも GUI なので「マウスやトラックパッドなんて飾りです。偉い人には&amp;hellip;」な方々には従来通り &lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; のほうがお勧めである。
余談だが，私は command palette を F1 キーに割り当てているが（秀丸を使っていた頃の名残）， &lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; 専用のメニューは shift-F1 キーに割り当てている。
こんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cson&#34; data-lang=&#34;cson&#34;&gt;&amp;#39;.platform-win32&amp;#39;:
  &amp;#39;shift-f1&amp;#39;: &amp;#39;git-plus:menu&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;もうひとつの機能である &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; との連携（今のところ pull request の表示のみ？）であるが，これを使うためには access token を取得して &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; に登録する必要がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kz800/items/497ec70bff3e555dacd0&#34;&gt;GitHub「Personal access tokens」の設定方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;では，たのしくお仕事しましょう！&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/atom-editor/&#34;&gt;ATOM Editor に関するメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/git-commands/&#34;&gt;あまり使わないけど，たまに使おうとすると忘れてる Git コマンド集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:h&#34;&gt;変更箇所のひとかたまりを &lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;git&lt;/a&gt; では hunk と呼ぶ。 Hunk の概念は cherry-pick 時にも出てくるので覚えておくとお得。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:h&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
