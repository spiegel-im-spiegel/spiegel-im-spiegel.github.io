<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/java/index.xml" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/java/index.xml/index.xml" />
	<id>tag:text.Baldanders.info,0001-01-01:/</id>
	<updated>0001-01-01T00:00:00+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.17</generator>

	
	<entry>
		<title>週末スペシャル： Barack Obama 米国大統領の来広 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/28-stories/" />
		<id>tag:text.Baldanders.info,2016-05-28:/remark/2016/05/28-stories/</id>
		<published>2016-05-28T22:59:50+09:00</published>
		<updated>2016-06-18T15:00:40+09:00</updated>
		<summary>Barack Obama 米国大統領の来広 / Google vs Oracle の訴訟の行方 2 / Windows 7 用の Rollup が出た / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今参加してるプロジェクトが「徒労感」半端ない。
はずれクジ引いちゃったかなぁ。
週末はぐったりして寝てるだけのことも多い。
倒れないうちに手を打ったほうがいいか？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#hrsm&#34;&gt;Barack Obama 米国大統領の来広&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api&#34;&gt;Google vs Oracle の訴訟の行方 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rlup&#34;&gt;Windows 7 用の Rollup が出た&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;hrsm&#34;&gt;Barack Obama 米国大統領の来広&lt;/h2&gt;

&lt;p&gt;いやぁ，昨日は大変だったみたいですな（以下の動画の26分頃から）。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;281&#34; src=&#34;https://www.youtube-nocookie.com/embed/QHIPZhrma6I&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QHIPZhrma6I&#34;&gt;President Obama Participates in a Wreath Laying Ceremony - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.whitehouse.gov/the-press-office/2016/05/27/remarks-president-obama-and-prime-minister-abe-japan-hiroshima-peace&#34;&gt;Remarks by President Obama and Prime Minister Abe of Japan at Hiroshima Peace Memorial | whitehouse.gov&lt;/a&gt; （&lt;a href=&#34;http://japanese.japan.usembassy.gov/j/p/tpj-20160527-02.html&#34;&gt;日本語訳&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kantei.go.jp/jp/97_abe/statement/2016/0527hiroshima.html&#34;&gt;平成28年5月27日 広島訪問　日米両首脳によるステートメント | 平成28年 | 総理の演説・記者会見など | 記者会見 | 首相官邸ホームページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;私は職場が郊外なので（ただし通勤するために市街地を経由しなければならない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）通勤時間をずらして回避できたが，市街地はほぼマヒ状態だったようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pref.hiroshima.lg.jp/site/police19/gyouji-kisei.html&#34;&gt;【お願い】オバマ米国大統領広島訪問に伴う交通規制について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.netandfield.com/shar/2016/05/post-2540.html&#34;&gt;いやあ、昨日はひどい目にあった(^^; - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;オバマ大統領は「メッセージだけの大統領」と揶揄されることもあるが，本当の変化は100年単位でゆるゆると進むものである。
今回の来広が，2009年のプラハ演説と同じく，100年先の変化へのトリガーとなれば今はそれで充分だと思う（まぁ次の大統領が誰になるかでちゃぶ台がひっくり返される可能性もあるわけだが）。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これはまさに、核保有国と非保有国の格差を永続化させる従来の核不拡散体制の理念を再度打ち出したものである。違いがどこにあるかといえば、この格差を維持することが困難であることが明白となり、新たに核保有を行なおうとする国を抑制する新たな体制を構築する必要が出てきたことである。そのために、まず保有国側が核軍縮の努力を示すことによって倫理的優位性を確保する必要が認識された。オバマのプラハ演説は倫理的優位性の確保と、軍事的優位性の確保を両方得ようとする戦略的な言説である。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.fsight.jp/5104&#34;&gt;「核兵器なき世界」の本当の意味と「日本の役割」：池内恵 | 中東―危機の震源を読む&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://president.jp/articles/-/18253&#34;&gt;「オバマ広島訪問」はなぜ感動を呼んだのか：PRESIDENT Online - プレジデント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;api&#34;&gt;Google vs Oracle の訴訟の行方 2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://arstechnica.com/tech-policy/2016/05/google-wins-trial-against-oracle-as-jury-finds-android-is-fair-use/&#34;&gt;Google beats Oracle—Android makes “fair use” of Java APIs | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/business/35083291/&#34;&gt;グーグル、Java API使用が「フェアユース」と認められる&amp;ndash;対オラクル訴訟 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/news/16/052701526/?rt=nocnt&#34;&gt;ニュース - Java著作権訴訟でGoogleが勝訴、「フェアユース」が認められる：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/31/20160527copyright-questions-remain-after-googles-fair-use-victory/&#34;&gt;Googleの「公正使用」勝訴後も残る著作権に関する疑問 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35083475/&#34;&gt;グーグルがJava API訴訟でオラクルに勝利&amp;ndash;開発者にとって朗報か - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arstechnica.com/tech-policy/2016/06/googles-fair-use-victory-is-good-for-open-source/&#34;&gt;Google’s fair use victory is good for open source | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000861.shtml&#34;&gt;Google vs Oracle の訴訟の行方&lt;/a&gt;」でも書いたが， Java API の著作権を巡る争いは「著作権の有無」から著作権を認めた上で Java API の（使用ではなく）利用が fair use にあたるかどうかに争点が移った。&lt;/p&gt;

&lt;p&gt;米国で fair use が成立するためには以下の観点において「公正」であることが認められなければならない。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;利用の目的や本質&lt;/li&gt;
&lt;li&gt;原作品の本質&lt;/li&gt;
&lt;li&gt;抜粋の量や実質性&lt;/li&gt;
&lt;li&gt;原作品の価値への影響&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;連邦地方裁判所の陪審は fair use であると評したようだが，恐らくこれから本格的な議論になるだろう。
しかし私たちエンジニアの側はあらゆる可能性を考えて備えておかなければならない。&lt;/p&gt;

&lt;p&gt;たとえば &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;は内部パッケージを含めて MIT ライセンスで提供されている。
API がこのようなことになることで，標準ライブラリやフレームワーク等の扱いが明確でない多くの言語は FLOSS にせざるを得なくなっていくだろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
そういう意味で，私企業がコントロールを手放さない Java は高リスクな「終わってる言語」と言える。
日本人は何故か Java が大好きだが，新たにこれから何かを作るのであれば Java は忌避すべきある。&lt;/p&gt;

&lt;h2 id=&#34;rlup&#34;&gt;Windows 7 用の Rollup が出た&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/kb/3156417&#34;&gt;May 2016 update rollup for Windows 7 SP1 and Windows Server 2008 R2 SP1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Update で KB3156417 を導入すればよい。
これを当てることによってこれまで非表示にしていた更新が元に戻るといったことはないようである。
あとは Windows 10 のアップグレード強制さえなくなればなぁ。
早く無料キャンペーン終わってくれ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/windows-10-upgrade-problem/&#34;&gt;また Windows 10 にヤラレタ（KB3112343 の恐怖）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1605/26/news029.html&#34;&gt;Tech TIPS：終わらないWindows 7のWindows Updateの問題を解決する - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://googleblog.blogspot.jp/2016/05/introducing-spaces-tool-for-small-group.html&#34;&gt;Official Google Blog: Introducing Spaces, a tool for small group sharing&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/17/20160516google-tries-its-hand-at-social-again-with-launch-of-group-chat-app-spaces/&#34;&gt;Google、ソーシャル・サービスに再挑戦―グループチャット・アプリのSpacesをリリース | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jacksuzuki/items/b2fa6b44962e73a53d08&#34;&gt;ロシアの天才ハッカーによる【新人エンジニアサバイバルガイド】 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ieee0824/items/13435fc6de5f22cdb2f4&#34;&gt;コマンドラインからググれてもいいと思ったので作った - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tsaka1.blogspot.jp/2016/05/blog-post.html&#34;&gt;tsaka1&amp;rsquo;s blog: ノイマンの自然数(非負整数)生成プログラムについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2016/04/52669/&#34;&gt;電子書籍の未来を握るのはインディー系 - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2016/05/24/beyond-cool-japan-06/&#34;&gt;英米のEブックを支えている読者は誰？ « マガジン航[kɔː]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/shuho_sato/n/n736593947e6c&#34;&gt;電子書籍は漫画家の希望となるか？｜佐藤秀峰｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://p2ptk.org/copyright/350&#34;&gt;「フェアユースでも使用料を払え」というソニーミュージックの横暴と、それを許すYouTubeのコンテンツID – P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://efcl.info/2015/09/10/introduce-textlint/&#34;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35083036/&#34;&gt;スノーデン氏、グーグルの新メッセージアプリ「Allo」を「危険」と批判 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.us-cert.gov/ncas/alerts/TA16-144A&#34;&gt;WPAD Name Collision Vulnerability | US-CERT&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/ta/JVNTA91048063/&#34;&gt;JVNTA#91048063: WPAD と名前衝突の問題&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1605/25/news073.html&#34;&gt;LinkedInからの流出情報、自分の被害の有無を確認可能に - ITmedia エンタープライズ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;Have I been pwned? Check if your email has been compromised in a data breach&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.airspacemag.com/space/new-seti-search-180959126/?is_pocket=1&#34;&gt;SETI Gets an Upgrade | Space | Air &amp;amp; Space Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106037866/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51QsC2WBr5L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106037866/baldandersinf-22/&#34;&gt;【中東大混迷を解く】 サイクス=ピコ協定 百年の呪縛 (新潮選書)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;池内 恵 &lt;/dd&gt;&lt;dd&gt;新潮社 2016-05-27&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4120048349/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4120048349.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補新版 イスラーム世界の論じ方&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4484162164/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4484162164.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アステイオン84 【特集】帝国の崩壊と呪縛&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4591149641/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4591149641.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;(089)コーランの読み方: イスラーム思想の謎に迫る (ポプラ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4480016376/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4480016376.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;イスラームの論理 (筑摩選書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4584125007/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4584125007.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;イスラム国「世界同時テロ」 (ベスト新書)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;これから読む。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-28&#34;&gt;2016-05-28&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;以前から思ってるけど，これって広島市の都市設計における最大の欠点だよね。広島市の都市設計は前時代的で郊外の道路は基本的に市街地（広島市民の間では「旧市内」と呼ばれている）から放射状に敷設されている。したがって郊外から郊外へ移動するためには一度市街地を通らなければならない。これはバス路線や電車も同じ。自動車道については市街地を迂回するための高速道路やバイパスが造られたが（広島は地理的に関西・九州間の通り道にあるため，大昔は長距離トラックが市街地を猛スピードで走っていた），公共交通機関については全く改善されないため朝晩の通勤時には（たかだか100万人ほどしかいない）地方都市とは思えないほどの混雑になる（褒めてないよ）。海外では広島市は「コンパクト・シティ」として評価されていると聞くが，それは市街地の中だけの話である。地元 J1 チームのサンフレッチェが市街地ど真ん中にある市民球場跡地への移転にこだわるのはちゃんと理由があるのだ。アストラムラインを環状線にする案も提案されたが，アストラムラインの経営状態は単年でかろうじて黒字で初期の建設費も返せない状況。このままサンフレッチェがいなくなって施設が老朽化したらどうするつもりだろうね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;そういう意味で Microsoft が &lt;a href=&#34;http://jp.techcrunch.com/2015/04/30/20150429microsoft-launches-its-net-distribution-for-linux-and-mac/&#34;&gt;.NET Core をオープンソースにした&lt;/a&gt;のは慧眼だよね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Apache Commons Collections ライブラリの非直列化処理に脆弱性 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/vulnerability-acc-library/" />
		<id>tag:text.Baldanders.info,2015-11-18:/remark/2015/vulnerability-acc-library/</id>
		<published>2015-11-18T20:29:21+09:00</published>
		<updated>2015-12-05T17:12:17+09:00</updated>
		<summary>なお，今回のケースは Java 以外にも広がるかもしれないので，類似情報に注意しておいた方がいいだろう。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;1週間以上前の話で，なんだか今更なんだけど，全く仕事に絡んでないこともないので，覚え書きの形で残しておく。
なお，今回のケースは Java 以外にも広がるかもしれないので，類似情報に注意しておいた方がいいだろう。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性の内容&#34;&gt;脆弱性の内容&lt;/h2&gt;

&lt;p&gt;発端はこれ。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;2015年1月に開催された AppSec California 2015 において、&lt;a href=&#34;http://frohoff.github.io/appseccali-marshalling-pickles/&#34;&gt;Gabriel Lawrence 氏と Chris Frohoff 氏&lt;/a&gt;は、信頼できないデータをデシリアライズしてしまう脆弱性について講演し、任意のコードを実行可能であることを示しました。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/a8ysJs2aqxHie8&#34; width=&#34;510&#34; height=&#34;420&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://www.slideshare.net/frohoff1/appseccali-2015-marshalling-pickles&#34;&gt;AppSecCali 2015 - Marshalling Pickles&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;この際に &lt;a href=&#34;https://github.com/frohoff/ysoserial&#34; title=&#34;frohoff/ysoserial&#34;&gt;PoC&lt;/a&gt;（Proof-of-Concept; 概念実証コード）も公開されている。&lt;/p&gt;

&lt;p&gt;更に両氏は今月になって，この &lt;a href=&#34;https://github.com/frohoff/ysoserial&#34; title=&#34;frohoff/ysoserial&#34;&gt;PoC&lt;/a&gt; を使って Apache Commons Collections ライブラリを使用するいくつかのミドルウェアおよび Groovy, Spring が攻略可能であることを示した。&lt;/p&gt;

&lt;h2 id=&#34;影響を受ける製品&#34;&gt;影響を受ける製品&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Apache Commons Collections ライブラリのバージョン 3.2.1 および 4.0&lt;/li&gt;
&lt;li&gt;Groovy や Spring の一部バージョン&lt;/li&gt;
&lt;li&gt;上記ライブラリまたはフレームワークが classpath に読み込まれている状態で，シリアル化された Java オブジェクトを外部から受け付けている環境

&lt;ul&gt;
&lt;li&gt;WebLogic, WebSphere, JBoss, Jenkins, OpenNMS 等のミドルウェア製品&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;Weblogic や WebSphere に対して可能だと言われているのは、アプリケーションサーバを起動または停止するために通常、組織内で使用する管理ポートへの攻撃です。これらのアプリケーションサーバ上で稼働するすべての Webアプリケーションに影響があるわけではありません。受け付ける入力にシリアル化された Javaオブジェクトを含まない、つまり入力がユーザーのマウス操作やキー入力、文字データや画像のみであるような Webアプリケーションであれば影響を受けません。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://blog.trendmicro.co.jp/archives/12577&#34;&gt;主要Javaアプリケーションサーバに影響するJavaライブラリの脆弱性を正しく理解する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;さらに&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Java 以外にも Python, Ruby などで書かれたアプリケーションやライブラリにも同様の脆弱性がある可能性が指摘されている

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/charliesome/charlie.bz/blob/master/posts/rails-3.2.10-remote-code-execution.md&#34; title=&#34;charlie.bz/rails-3.2.10-remote-code-execution.md at master · charliesome/charlie.bz&#34;&gt;Rails 3.2.10 Remote Code Execution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;影響度-cvss&#34;&gt;影響度（CVSS）&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CVSSv2 基本評価値 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低 (L)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃前の認証要否（Au）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;対策-回避策&#34;&gt;対策・回避策&lt;/h2&gt;

&lt;p&gt;回避策としては以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;外部入力に認証をかける（今回の &lt;a href=&#34;https://github.com/frohoff/ysoserial&#34; title=&#34;frohoff/ysoserial&#34;&gt;PoC&lt;/a&gt; には認証をバイパスする機能はない）&lt;/li&gt;
&lt;li&gt;外部入力にシリアル化された Java オブジェクトを受け付けない，または受け付けるオブジェクトを限定する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/frohoff/ysoserial&#34; title=&#34;frohoff/ysoserial&#34;&gt;PoC&lt;/a&gt; 対象のクラス（ACC ライブラリであれば &lt;code&gt;InvokerTransformer&lt;/code&gt; クラス）を使用しない。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さらに根本的な対策としてアプリケーションの設計の見直しが推奨されている。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;However, to be clear: this is not the only known and especially not unknown useable gadget. So replacing your installations with a hardened version of Apache Commons Collections will not make your application resist this vulnerability.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread&#34;&gt;Apache Commons statement to widespread Java object de-serialisation vulnerability&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;Apache Commons Collections ライブラリの対策版リリースの準備が進められています。しかし、現状提案されているパッチはシリアライズ機能をデフォルトで無効にするだけのものです。当該ライブラリのシリアライズ機能が必要な場合には、この機能を有効にするコードを追加するとともに、安全にデシリアライズするようアプリケーションの設計を見直す必要があります。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;この PoC が公開された「&lt;a href=&#34;http://frohoff.github.io/appseccali-marshalling-pickles/&#34;&gt;Marshalling Pickles&lt;/a&gt;」の発表には「オブジェクトのデシリアル化処理はいかにしてあなたの一日を台無しにするか」という副題がついており、Java に限らずシリアル化されたオブジェクトを受け取り、デシリアル化処理を行う場合の危険性について広く述べられています。&lt;br&gt;
なかでも強く「脆弱性は非安全なデシリアル化処理にあるのであり、PoC があることが脆弱なのではない」と述べられています。デシリアル化処理には脆弱性ができやすいため、これを安全に行うための方法として、デシリアル化するクラスをホワイトリストでフィルターする（resolveClass のオーバーライド）、単なる暗号化ではない適切な認証方法を利用することなどが紹介されています。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://blog.trendmicro.co.jp/archives/12577&#34;&gt;主要Javaアプリケーションサーバに影響するJavaライブラリの脆弱性を正しく理解する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;ベンダの対応&#34;&gt;ベンダの対応&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;WebLogic : 最新版は対策済み（&lt;a href=&#34;https://support.oracle.com/rs?type=doc&amp;amp;id=2076338.1&#34;&gt;回避策&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;WebSphere : 最新版は対策済み&lt;/li&gt;
&lt;li&gt;JBoss : 最新版は対策済み（一部パッチ準備中），危険なクラスを削除&lt;/li&gt;
&lt;li&gt;Jenkins : 最新版は対策済み&lt;/li&gt;
&lt;li&gt;OpenNMS : Port 1099 の遮断で回避&lt;/li&gt;
&lt;li&gt;Groovy : 最新版は対策済み&lt;/li&gt;
&lt;li&gt;Spring : 最新版は対策済み&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;JVNVU#94276522: Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kb.cert.org/vuls/id/576313&#34;&gt;Vulnerability Note VU#576313 - Apache Commons Collections Java library insecurely deserializes data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://frohoff.github.io/appseccali-marshalling-pickles/&#34;&gt;AppSecCali 2015: Marshalling Pickles by frohoff&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/frohoff/ysoserial&#34;&gt;frohoff/ysoserial&lt;/a&gt; : 概念実証コード&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/&#34;&gt;What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread&#34;&gt;Apache Commons statement to widespread Java object de-serialisation vulnerability : The Apache Software Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.trendmicro.co.jp/archives/12577&#34;&gt;主要Javaアプリケーションサーバに影響するJavaライブラリの脆弱性を正しく理解する | トレンドマイクロ セキュリティブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1511/10/news053.html&#34;&gt;Javaライブラリに脆弱性、主要ミドルウェア全てに影響 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35073223/&#34;&gt;Javaライブラリにリモートコード実行の脆弱性&amp;ndash;JBoss、WebSphere、WebLogicなどに影響 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20151110/1447175137&#34;&gt;Apache Commonsのcollectionsの脆弱性に関連するリンク集をまとめてみた。 - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takahashikzn.root42.jp/entry/2015/11/10/155319&#34;&gt;commons-collectionsのInvokerTransformer脆弱性について - R42日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takahashikzn.root42.jp/entry/2015/11/12/031449&#34;&gt;SpringとGroovyにも直列化オブジェクト脆弱性 - R42日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvndb.jvn.jp/ja/contents/2015/JVNDB-2015-005968.html&#34;&gt;JVNDB-2015-005968 Oracle WebLogic Server の WLS Security コンポーネントにおける任意のコマンドを実行される脆弱性 - JVN iPedia - 脆弱性対策情報データベース&lt;/a&gt; : 対策版リリース&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www-01.ibm.com/support/docview.wss?uid=swg21972121&#34;&gt;IBM (参考) Apache Commons の脆弱性が Lotus Widget Factory に与える影響について (CVE-2015-7450) - Japan&lt;/a&gt; : この記事では，影響度を CVSSv3 基本評価値で 9.8 (&lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H&lt;/code&gt;) と評価している。 CVSSv3 では基本評価値 9.0 以上で「緊急」レベルとみなせる&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;&lt;a href=&#34;https://github.com/frohoff/ysoserial&#34; title=&#34;frohoff/ysoserial&#34;&gt;PoC&lt;/a&gt; による攻撃に限るなら認証をバイパスできないため，外部入力に認証をかけている場合は評価値は7未満になる。今回のようなケースは CVSSv2 では評価が難しいかも。 &lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000864.shtml&#34;&gt;CVSSv3&lt;/a&gt; で評価し直した方がいいかな。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
