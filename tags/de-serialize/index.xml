<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>De Serialize - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/de-serialize/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/de-serialize/index.xml" />
	<id>tag:text.Baldanders.info,2015-11-18:/</id>
	<updated>2015-11-18T20:29:21+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15-DEV</generator>

	
	<entry>
		<title>Apache Commons Collections ライブラリの非直列化処理に脆弱性 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/vulnerability-acc-library/" />
		<id>tag:text.Baldanders.info,2015-11-18:/remark/2015/vulnerability-acc-library/</id>
		<published>2015-11-18T20:29:21+09:00</published>
		<updated>2015-11-18T20:29:21+09:00</updated>
		<summary>なお，今回のケースは Java 以外にも広がるかもしれないので，類似情報に注意しておいた方がいいだろう。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;1週間以上前の話で，なんだか今更なんだけど，全く仕事に絡んでないこともないので，覚え書きの形で残しておく。
なお，今回のケースは Java 以外にも広がるかもしれないので，類似情報に注意しておいた方がいいだろう。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性の内容:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;脆弱性の内容&lt;/h2&gt;

&lt;p&gt;発端はこれ。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;2015年1月に開催された AppSec California 2015 において、&lt;a href=&#34;http://frohoff.github.io/appseccali-marshalling-pickles/&#34;&gt;Gabriel Lawrence 氏と Chris Frohoff 氏&lt;/a&gt;は、信頼できないデータをデシリアライズしてしまう脆弱性について講演し、任意のコードを実行可能であることを示しました。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;更に両氏は今月になって，この脆弱性が Apache Commons Collections ライブラリに存在し，非直列化（de-serialize）に &lt;code&gt;InvokerTransformer&lt;/code&gt; クラスを使用している場合，任意のコードを実行される可能性があることを指摘した。&lt;/p&gt;

&lt;h2 id=&#34;影響を受ける製品:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;影響を受ける製品&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Apache Commons Collections ライブラリのバージョン 3.2.1 および 4.0 が影響を受ける&lt;/li&gt;
&lt;li&gt;ACC ライブラリを利用する WebLogic, WebSphere, JBoss, Jenkins, OpenNMS 等の製品が影響を受ける&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さらに&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Groovy や Spring の一部バージョンにも同様の脆弱性がある&lt;/li&gt;
&lt;li&gt;Java 以外にも Python, Ruby などで書かれたアプリケーションやライブラリにも同様の脆弱性がある可能性が指摘されている&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;影響度-cvss:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;影響度（CVSS）&lt;/h3&gt;

&lt;p&gt;CVSS 基本評価値 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低 (L)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃前の認証要否（Au）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;figcaption&gt;CVSSv2 基本評価値&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/cvss/cvss2.html&#34;&gt;デモページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;対策-回避策:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;対策・回避策&lt;/h2&gt;

&lt;p&gt;この脆弱性の完全な対策は存在しない。
&lt;code&gt;InvokerTransformer&lt;/code&gt; クラスを無効にするだけでは完全な対策とは言えない。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;However, to be clear: this is not the only known and especially not unknown useable gadget. So replacing your installations with a hardened version of Apache Commons Collections will not make your application resist this vulnerability.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread&#34;&gt;Apache Commons statement to widespread Java object de-serialisation vulnerability&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;回避策としては以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ファイアウォールやファイルシステムのアクセス制御を活用する&lt;/li&gt;
&lt;li&gt;アプリケーションの設計を見直す&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;Apache Commons Collections ライブラリの対策版リリースの準備が進められています。しかし、現状提案されているパッチはシリアライズ機能をデフォルトで無効にするだけのものです。当該ライブラリのシリアライズ機能が必要な場合には、この機能を有効にするコードを追加するとともに、安全にデシリアライズするようアプリケーションの設計を見直す必要があります。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;ベンダの対応:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;ベンダの対応&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;WebLogic : &lt;a href=&#34;https://support.oracle.com/rs?type=doc&amp;amp;id=2076338.1&#34;&gt;回避策&lt;/a&gt;あり（パッチ準備中）&lt;/li&gt;
&lt;li&gt;WebSphere : 最新版あり&lt;/li&gt;
&lt;li&gt;JBoss : 最新版あり（一部パッチ準備中），危険なクラスを削除&lt;/li&gt;
&lt;li&gt;Jenkins : 最新版あり&lt;/li&gt;
&lt;li&gt;OpenNMS : Port 1099 の遮断で回避&lt;/li&gt;
&lt;li&gt;Groovy : 最新版あり&lt;/li&gt;
&lt;li&gt;Spring : 最新版あり&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考:e0d462dbf0f8886e9d21f1b50f59a707&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94276522/&#34;&gt;JVNVU#94276522: Apache Commons Collections ライブラリのデシリアライズ処理に脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kb.cert.org/vuls/id/576313&#34;&gt;Vulnerability Note VU#576313 - Apache Commons Collections Java library insecurely deserializes data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://frohoff.github.io/appseccali-marshalling-pickles/&#34;&gt;AppSecCali 2015: Marshalling Pickles by frohoff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/&#34;&gt;What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread&#34;&gt;Apache Commons statement to widespread Java object de-serialisation vulnerability : The Apache Software Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.trendmicro.co.jp/archives/12577&#34;&gt;主要Javaアプリケーションサーバに影響するJavaライブラリの脆弱性を正しく理解する | トレンドマイクロ セキュリティブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1511/10/news053.html&#34;&gt;Javaライブラリに脆弱性、主要ミドルウェア全てに影響 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35073223/&#34;&gt;Javaライブラリにリモートコード実行の脆弱性&amp;ndash;JBoss、WebSphere、WebLogicなどに影響 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20151110/1447175137&#34;&gt;Apache Commonsのcollectionsの脆弱性に関連するリンク集をまとめてみた。 - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takahashikzn.root42.jp/entry/2015/11/10/155319&#34;&gt;commons-collectionsのInvokerTransformer脆弱性について - R42日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takahashikzn.root42.jp/entry/2015/11/12/031449&#34;&gt;SpringとGroovyにも直列化オブジェクト脆弱性 - R42日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
