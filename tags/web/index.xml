<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of Web - text[.]Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/web/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/web/index.xml" />
	<id>tag:text[.]Baldanders.info,2025-04-19:/tags</id>
	<updated>2025-04-19T18:32:55+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Kagi Assistant が全ユーザに解放</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2025/04/kagi-assistant-for-all-users/" />
		<id>tag:text[.]Baldanders.info,2025-04-19:/remark/2025/04/kagi-assistant-for-all-users/</id>
		<published>2025-04-19T09:32:55+00:00</published>
		<updated>2025-04-19T09:46:16+00:00</updated>
		<summary>この方法のいいところは検索結果と LLM による出力が明確に分離されている点だろう。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;有料の検索サービス &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search&#34;&gt;Kagi Search&lt;/a&gt; は検索以外にいくつかのサービスを提供しているが，そのうちのひとつである &lt;a href=&#34;https://kagi.com/assistant&#34; target=&#34;_blank&#34; title=&#34;The Assistant&#34;&gt;Assistant&lt;/a&gt; 機能が全ユーザに解放された。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.kagi.com/assistant-for-all&#34; target=&#34;_blank&#34;&gt;Kagi Assistant is now available to all users! | Kagi Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2025年4月現在， &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search&#34;&gt;Kagi Search&lt;/a&gt; の料金体系は以下のようになっているが&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://kagi.com/pricing&#34;&gt;&lt;img src=&#34;./plans.png&#34; srcset=&#34;./plans.png 1565w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Kagi Search Pricing and Plans&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://kagi.com/pricing&#34;&gt;Kagi Search Pricing and Plans&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;以前は Ultimate プランでしか &lt;a href=&#34;https://kagi.com/assistant&#34; target=&#34;_blank&#34; title=&#34;The Assistant&#34;&gt;Assistant&lt;/a&gt; 機能が使えなかった。
これを全ユーザで使えるようにしたということらしい。&lt;/p&gt;
&lt;p&gt;さっそく試してみた。
こんな感じ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./the-assistant.png&#34;&gt;&lt;img src=&#34;./the-assistant.png&#34; srcset=&#34;./the-assistant.png 1281w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;The Assistant&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./the-assistant.png&#34;&gt;The Assistant&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ただし Ultimate プランとそれ以外とで一応の差別化はされているみたいで Ultimate プラン以外では使えるモデルに制限があるようだ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./model-selection.png&#34;&gt;&lt;img src=&#34;./model-selection.png&#34; srcset=&#34;./model-selection.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;モデルの選択&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./model-selection.png&#34;&gt;モデルの選択&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Ultimate プランなら &lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; の Grok も使えるらしい。
モデルの&lt;a href=&#34;https://help.kagi.com/kagi/ai/llm-benchmark.html&#34; target=&#34;_blank&#34; title=&#34;Kagi LLM Benchmarking Project | Kagi&amp;#39;s Docs&#34;&gt;ベンチマーク&lt;/a&gt;もあるので参考になるだろう。
まぁ，今のところアップグレードは必要ないか。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kagi.com/assistant&#34; target=&#34;_blank&#34; title=&#34;The Assistant&#34;&gt;Kagi Assistant&lt;/a&gt; ではカスタムアシスタントを複数作成できる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./custom-assistant.png&#34;&gt;&lt;img src=&#34;./custom-assistant.png&#34; srcset=&#34;./custom-assistant.png 1281w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;カスタムアシスタントの作成&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./custom-assistant.png&#34;&gt;カスタムアシスタントの作成&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これを使って &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search&#34;&gt;Kagi Search&lt;/a&gt; のレンズ機能（検索対象の絞り込みをカスタマイズできる）や検索結果のパーソナライズ（検索結果の優先順位付けをユーザが設定できる）をアシスタントに反映させることが出来る。&lt;/p&gt;
&lt;p&gt;Bang 機能は検索する際に特定のサービスを指定する機能で，例えば検索クエリの先頭に &lt;code&gt;!w&lt;/code&gt; を付加すると Wikipedia を検索することができる。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39; cite=&#34;https://help.kagi.com/kagi/features/bangs.html&#34;&gt;
&lt;a href=&#34;https://help.kagi.com/kagi/features/bangs.html&#34;&gt;&lt;img src=&#34;./bang.Bm6fkjvX.gif&#34; srcset=&#34;./bang.Bm6fkjvX.gif 800w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Bangs | Kagi&amp;#39;s Docs&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://help.kagi.com/kagi/features/bangs.html&#34;&gt;Bangs | Kagi&amp;#39;s Docs&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これを &lt;a href=&#34;https://kagi.com/assistant&#34; target=&#34;_blank&#34; title=&#34;The Assistant&#34;&gt;Assistant&lt;/a&gt; と関連付けることが出来る。
たとえば先ほどの図のように Bang 名を &lt;code&gt;!foo&lt;/code&gt; に設定して以下のように検索窓で問い合わせてみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./query.png&#34;&gt;&lt;img src=&#34;./query.png&#34; srcset=&#34;./query.png 1281w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Kagi Search with Custom Assistant&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./query.png&#34;&gt;Kagi Search with Custom Assistant&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;すると，以下のように &lt;a href=&#34;https://kagi.com/assistant&#34; target=&#34;_blank&#34; title=&#34;The Assistant&#34;&gt;Assistant&lt;/a&gt; のほうで応答してくれる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./response.png&#34;&gt;&lt;img src=&#34;./response.png&#34; srcset=&#34;./response.png 1281w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Custom Assistant&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./response.png&#34;&gt;Custom Assistant&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この方法のいいところは検索結果と LLM による出力が明確に分離されている点だろう。
ぶっちゃけ Bing や Google Search は LLM が前面に出過ぎていて既に検索サービスじゃなくなってる。
まぁ，検索結果が使いものにならないくらい精度が悪いからだろうけど。&lt;/p&gt;
&lt;p&gt;ローカルにあるファイルを読み込ませて問い合わせることも出来る。
たとえば以下の写真を読み込ませて&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54461519855/&#34;&gt;&lt;img src=&#34;./54461519855_3ee2153756_e.jpg&#34; srcset=&#34;./54461519855_3ee2153756_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のお花見（カンザン） | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54461519855/&#34;&gt;今日のお花見（カンザン） | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;何の花か問い合わせてみると&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./response-2.png&#34;&gt;&lt;img src=&#34;./response-2.png&#34; srcset=&#34;./response-2.png 710w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;花の名は。&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./response-2.png&#34;&gt;花の名は。&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;などと大雑把な答えが返ってきた。
いや，八重桜で間違ってないけどさ（笑） この辺はまだ Google Lens には勝てないか。&lt;/p&gt;
&lt;p&gt;なお画像をジブリ風に変換するとかは出来ないらしい。
試してみたが以下のように諭された。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./response-3.png&#34;&gt;&lt;img src=&#34;./response-3.png&#34; srcset=&#34;./response-3.png 710w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;漫画風に変換して&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./response-3.png&#34;&gt;漫画風に変換して&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まじすんません &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;🙇&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;もともと &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search&#34;&gt;Kagi Search&lt;/a&gt; の検索機能は（Bing や Google Search に比べて）とても優秀なのだが，周辺サービスも充実してきた。
&lt;a href=&#34;https://translate.kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Translate&#34;&gt;翻訳&lt;/a&gt;機能（これも LLM を使った翻訳）も徐々に良くなってる印象（まだ Google 翻訳との併用が必要だけど）。&lt;/p&gt;
&lt;p&gt;私は AGI の到来など（近い将来では）全く信用してないが LLM を中心とした技術は便利であることに間違いはないので（懐と相談しつつ）無理のない範囲で利用していくとしよう。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4535&#34; target=&#34;_blank&#34;&gt;なぜGoogleは“あなたの不満”を無視できるのか » p2ptk[.]org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.lifehacker.jp/article/2505-the-best-hidden-features-in-kagi-the-paid-alternative-to-google-search/&#34; target=&#34;_blank&#34;&gt;検索ツール「Kagi」に課金して世界が変わった10のこと | ライフハッカー・ジャパン&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/06/kagi-search/&#34; target=&#34;_blank&#34;&gt;Kagi Search を試してみる 〜 検索サービスも有料の時代？&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2025/03/who-pays-for-web-costs/&#34; target=&#34;_blank&#34;&gt;Web のコストは誰が支払うのか&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/UoPW-_IH6pE&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UoPW-_IH6pE&#34;&gt;22年連続日本一の庭園を訪れ溢れる狂気に歓喜するらでん [ホロライブ/ReGLOSS/儒烏風亭らでん] - YouTube&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
	</entry><entry>
		<title>Web のコストは誰が支払うのか</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2025/03/who-pays-for-web-costs/" />
		<id>tag:text[.]Baldanders.info,2025-03-11:/remark/2025/03/who-pays-for-web-costs/</id>
		<published>2025-03-11T05:39:34+00:00</published>
		<updated>2025-03-11T23:04:14+00:00</updated>
		<summary>改めて思うのだが Web 2.0 最大の罪はそのコストを安易に他者へ「転嫁」してしまったことだろう。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今月（2025-03）に入り Chrome 系のブラウザ拡張機能について Manifest-V2 廃止に基づく粛清がいよいよ始まるようだ？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theverge.com/news/622953/google-chrome-extensions-ublock-origin-disabled-manifest-v3&#34; target=&#34;_blank&#34;&gt;Google’s Chrome extension cull hits more uBlock Origin users | The Verge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.extremetech.com/computing/google-chrome-disables-ublock-origin-and-other-extensions&#34; target=&#34;_blank&#34;&gt;Google Chrome Disables uBlock Origin and Other Extensions | Extremetech&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実際には Manifest-V2 の廃止までにはまだ猶予があり，どうやら Google 側が姑息な排除をしようとしているんじゃないかという話もある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20250307-ublock-origin-is-gone/&#34; target=&#34;_blank&#34;&gt;Googleが「uBlock Originのサポートは終了しました」とウソをついているとネットが騒然、広告ブロッカーを使い続ける方法はコレ - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本当のところは分からないが（Chrome 使ってないので），今回の V2 から V3 への移行で（利用者から見て）最もインパクトがある拡張機能のひとつが &lt;a href=&#34;https://ublockorigin.com/&#34; target=&#34;_blank&#34; title=&#34;uBlock Origin - Free, open-source ad content blocker.&#34;&gt;uBlock Origin&lt;/a&gt; だろう。
&lt;a href=&#34;https://ublockorigin.com/&#34; target=&#34;_blank&#34; title=&#34;uBlock Origin - Free, open-source ad content blocker.&#34;&gt;uBlock Origin&lt;/a&gt; は Manifest-V2 の &lt;code&gt;webRequest&lt;/code&gt; API 仕様に大きく依存していて，新しい Manifest-V3 の API では機能が制限されるらしい。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://ublockorigin.com/&#34;&gt;uBlock Origin relies heavily on the &lt;code&gt;webRequest&lt;/code&gt; API to block unwanted content before it loads. Under MV3, the &lt;code&gt;webRequest&lt;/code&gt; API is limited, and extensions are encouraged to use the new &lt;code&gt;declarativeNetRequest&lt;/code&gt; API instead. This new API allows for predefined rules but lacks some of the dynamic capabilities that uBlock Origin utilizes for advanced content blocking.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://ublockorigin.com/&#34;&gt;uBlock Origin - Free, open-source ad content blocker.&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Manifest-V3 でこの制限をうまく回避するる方法はないようで，以下の代替案が提案されている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://ublockorigin.com/&#34;&gt;&lt;ol&gt;
&lt;li&gt;Continue Using uBlock Origin on Firefox&lt;/li&gt;
&lt;li&gt;Use uBlock Origin Lite&lt;/li&gt;
&lt;li&gt;Switch to Browsers Committed to MV2 Support&lt;/li&gt;
&lt;li&gt;Explore Other Content Blocking Methods&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://ublockorigin.com/&#34;&gt;uBlock Origin - Free, open-source ad content blocker.&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://chromewebstore.google.com/detail/ublock-origin-lite/ddkjiahejlhfcafbddmgiahcphecmpfh&#34; target=&#34;_blank&#34;&gt;uBlock Origin Lite&lt;/a&gt; であれば Manifest-V3 ベースらしいので Chrome ユーザは取り敢えずこちらに移行する手はある。&lt;/p&gt;
&lt;p&gt;一方 Firefox は Manifest-V2 と Manifest-V3 の両方をサポートすると明言しているので，いっそ Firefox に乗り換える手もある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mozilla.org/en/products/firefox/firefox-manifest-v3-adblockers/&#34; target=&#34;_blank&#34;&gt;Mozilla’s approach to Manifest V3: What’s different and why it matters for extension users | The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ブラウザを乗り換えていいのであれば，もうひとつ &lt;a href=&#34;https://kagi.com/orion/&#34; target=&#34;_blank&#34; title=&#34;Orion Browser by Kagi&#34;&gt;Orion&lt;/a&gt; ブラウザに乗り換える手もある。
有料検索サービスの Kagi が提供している &lt;a href=&#34;https://kagi.com/orion/&#34; target=&#34;_blank&#34; title=&#34;Orion Browser by Kagi&#34;&gt;Orion&lt;/a&gt; ブラウザは広告ブロッキング機能を既定で備えていて，他にもプライバシー保護の観点から他のブラウザより有利であると主張している。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34; cite=&#34;https://kagi.com/orion/&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Privacy comparison&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Orion&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Safari&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Firefox&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Brave&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Chrome&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Zero telemetry by default&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Blocking 1st party ads by default&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Blocking 1st party trackers by default&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Blocking 3rd party ads by default&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Blocking 3rd party trackers by default&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;チェック&#34;&gt;✅&lt;/abbr&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;バツ&#34;&gt;❎&lt;/abbr&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://kagi.com/orion/&#34;&gt;Orion Browser by Kagi&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;残念ながら &lt;a href=&#34;https://kagi.com/orion/&#34; target=&#34;_blank&#34; title=&#34;Orion Browser by Kagi&#34;&gt;Orion&lt;/a&gt; ブラウザは WebKit ベースのため，今のところ macOS および iOS/iPadOS しか対応していない。
しかし，昨今の情勢を見て Linux 版の開発に着手したようだ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://kagi.com/changelog#6479&#34;&gt;&lt;p&gt;We&amp;rsquo;re thrilled to announce that development of Orion Browser for Linux has officially started! Our team is working hard to bring the same speed, privacy, and innovation that Mac users love to the Linux platform.&lt;/p&gt;
&lt;p&gt;This is an ambitious project that we expect will take approximately one year to complete. Our target is to achieve feature parity with the current macOS version by March 2026.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://kagi.com/changelog#6479&#34;&gt;March 6th, 2025 - Orion Embarks on Linux Journey &amp;amp; Kagi Doggo Art Celebration&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;手元にある &lt;a href=&#34;https://text.baldanders.info/remark/2024/05/get-a-used-pc-from-workplace/&#34; target=&#34;_blank&#34; title=&#34;勤務先からの払い下げ PC&#34;&gt;MacBook Air&lt;/a&gt; には既に導入しているが，今のところ不都合はない。
まぁ macOS のアプリケーションはあまり使わず &lt;a href=&#34;https://text.baldanders.info/remark/2025/01/kubuntu-on-macbook-air-m1/&#34; target=&#34;_blank&#34; title=&#34;MacBook Air M1 に Kubuntu を入れる&#34;&gt;Linux 環境&lt;/a&gt;での作業が殆どなのだが。
私は Linux 版を待ってます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kagi.com/orion/&#34; target=&#34;_blank&#34; title=&#34;Orion Browser by Kagi&#34;&gt;Orion&lt;/a&gt; ブラウザには &lt;a href=&#34;https://kagi.com/orion/orionplus.html&#34; target=&#34;_blank&#34; title=&#34;Support Orion&#34;&gt;Orion+&lt;/a&gt; ってのがあるそうで，一括で150USD払うか月5USD（年50USD）のサブスクリプションに加入することで RC 版の利用が可能になる他，フィードバックにも優先的に対応してもらえるらしい。
Kagi は有料検索サービスとこの &lt;a href=&#34;https://kagi.com/orion/orionplus.html&#34; target=&#34;_blank&#34; title=&#34;Support Orion&#34;&gt;Orion+&lt;/a&gt; の収益で開発・運用を行っているようだ。&lt;/p&gt;
&lt;p&gt;その &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search&#34;&gt;Kagi の検索サービス&lt;/a&gt;だが，現在は Professional プランを月ごとの支払いで運用している。
もうガッツリ使ってるよ。
検索周りの UX が&lt;a href=&#34;https://text.baldanders.info/remark/2024/06/kagi-search/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search を試してみる 〜 検索サービスも有料の時代？&#34;&gt;優秀&lt;/a&gt;なのは言うまでもないが AI 絡みの機能（Translate, FastGPT&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, Universal Summarizer）も便利に使っている。
なので，年単位の契約に切り替えてもいいかなぁ，と考え中ではある。
もしくは Assistant が使える Ultimate プランにするか。
いやでも私の場合 AI アシスタントは GitHub Copilot で足りてるからなぁ。&lt;/p&gt;
&lt;p&gt;Kagi の中の人が Bluesky で&lt;a href=&#34;https://bsky.app/profile/kagi.com/post/3lk2gdsm4es2v&#34; target=&#34;_blank&#34; title=&#34;Kagi HQ: \&amp;#34;There are only two business models on the web: either you pay for your browser, or someone else does. ...\&amp;#34; — Bluesky&#34;&gt;書いていた&lt;/a&gt;が，ネット上で享受しているサービスなりプラットフォームなりのコストは誰が支払っているのか，って話だ。&lt;/p&gt;
&lt;p&gt;改めて思うのだが Web 2.0 最大の罪はそのコストを安易に（本来の利用者ではない）他者へ「転嫁」してしまったことだろう。&lt;/p&gt;
&lt;p&gt;そして今になって私達は「&lt;a href=&#34;https://en.wikipedia.org/wiki/Enshittification&#34; target=&#34;_blank&#34; title=&#34;Enshittification - Wikipedia&#34;&gt;&lt;ruby&gt;&lt;rb&gt;メタクソ化&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;enshittification&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;&lt;/a&gt;」という形で（文字通りの）ツケを支払っているわけだ。
広告モデルで実際にコストを支払ってるのは広告主なんだから，サービス側プラットフォーム側が広告主の利益を最大化するよう調整するのは当然と言える。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4515&#34; target=&#34;_blank&#34;&gt;かくしてGoogleはスパマーに敗北した » p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4541&#34; target=&#34;_blank&#34;&gt;Google検索を殺した男――Googleはいつ、どこでメタクソ化に舵を切ったのか » p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;だからといって「それ」を許容できるかと問われたら否と答えるけど。&lt;/p&gt;
&lt;p&gt;特に Web 上の広告はもはや好悪の問題ではなくセキュリティやプライバシーのリスクの問題になっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/2668&#34; target=&#34;_blank&#34;&gt;広告ブロッカーは「嫌ならどうする？」の表明である » p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/12/ad-blocker/&#34; target=&#34;_blank&#34;&gt;米国 FBI は広告ブロッカーを推奨している？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://internet.watch.impress.co.jp/docs/column/dlis/1592999.html&#34; target=&#34;_blank&#34;&gt;「Google広告からの誘導が6割」との分析結果。より巧妙化し、高齢者を狙う「サポート詐欺」に注意！【被害事例に学ぶ、高齢者のためのデジタルリテラシー】 - INTERNET Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;たとえば &lt;a href=&#34;https://www.publickey1.jp/&#34; target=&#34;_blank&#34; title=&#34;Publickey － Enterprise IT × Cloud Computing × Web Technology / Blog&#34;&gt;Publickey&lt;/a&gt; のように，&lt;a href=&#34;https://www.publickey1.jp/blog/25/2025publickey.html&#34; target=&#34;_blank&#34; title=&#34;年頭のご挨拶：2025年のPublickeyも、読者が安心して記事を読めるように適切な広告だけを掲載します － Publickey&#34;&gt;ポリシーを持って広告を管理&lt;/a&gt;しているサイトは少なく，大抵は Google 等の広告サービスが提供しているものを垂れ流してるだけの脆弱なサイトに見える。
まぁ，一番ダークなのは間違いなく Google 検索サービスのページだけど（笑）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ublockorigin.com/&#34; target=&#34;_blank&#34; title=&#34;uBlock Origin - Free, open-source ad content blocker.&#34;&gt;uBlock Origin&lt;/a&gt; などのツールは単に広告をブロックするツールというだけではなく，そのサイトの広告を許容できるか否かの決定権を，見ているユーザ側に取り返すという大切な手段である。
その上で私達は（広告モデルを含む）他者にコストを転嫁する仕組みから距離を置く必要があると思う。
タダならば何でもいいという世の中じゃなくなったってことかねぇ。&lt;/p&gt;
&lt;p&gt;そのビジネスモデルで本当に利用者は幸せになれるのか。
よくよく考えてリソース（お金とは限らない）を投入しないといけないし，私のようなビンボー人は幾つかサービスを諦めることも視野に入れないといけないかもしれない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.omgubuntu.co.uk/2025/03/kag-orion-web-browser-coming-to-linux&#34; target=&#34;_blank&#34;&gt;Kagi is Bringing the Orion Web Browser to Linux - OMG! Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/5320&#34; target=&#34;_blank&#34;&gt;アドテクによるターゲティングは「存亡に関わる脅威」である » p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/5369&#34; target=&#34;_blank&#34;&gt;大いなる力には何の責任も伴わなかった » p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forbesjapan.com/articles/detail/77318&#34; target=&#34;_blank&#34;&gt;Chromeの変更にともない、グーグルが「すべてのデバイスを追跡」開始 | Forbes JAPAN 公式サイト（フォーブス ジャパン）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kagi.com/teams&#34; target=&#34;_blank&#34;&gt;Kagi for Teams - Bring Kagi to work for your team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41LvknHYLwL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二（監修） (著), 山根 信二 (翻訳), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-15 (Release 2023-07-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0C9Z7KGRN (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版が出ている。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-11-21&#34;&gt;2023-11-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 Kindle 版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CK19L1HC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41iX72RfUuL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0CK19L1HC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ハッキング思考　強者はいかにしてルールを歪めるのか、それを正すにはどうしたらいいのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 高橋 聡 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2023-10-12 (Release 2023-10-12)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0CK19L1HC (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版が出てた！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-11-21&#34;&gt;2023-11-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ハッキング思考 Kindle 版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/430924744X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51KtN0YwWcL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/430924744X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;スパム[spam]:インターネットのダークサイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;フィン・ブラントン (著), 生貝直人 (監修), 成原慧 (監修), 松浦俊輔 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;河出書房新社 2015-12-25&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;430924744X (ASIN), 9784309247441 (EAN), 430924744X (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;とりあえず読みづらい。修飾語が多すぎるよ。ギリシア神話かっての。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-12-10&#34;&gt;2016-12-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- スパム --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;FastGPT は本当に簡易的な機能のみの提供で，単一の応答しか出来ないし LLM モデルの選択もできない。連続的な「会話」や LLM モデルの切り替え機能が欲しいのであれば Ultimate プラン（月25USD）に加入した上で Assistant 機能を利用する必要がある。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>2024年のインプット／アウトプット</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/12/input-output-2/" />
		<id>tag:text[.]Baldanders.info,2024-12-29:/remark/2024/12/input-output-2/</id>
		<published>2024-12-29T13:21:17+00:00</published>
		<updated>2024-12-29T13:21:24+00:00</updated>
		<summary>メチャメチャ偏ってる自覚はある。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/12/input-output/&#34; target=&#34;_blank&#34; title=&#34;書きたくないときには書かなくていい&#34;&gt;前回&lt;/a&gt;の続き。&lt;/p&gt;
&lt;p&gt;Mastodon ではちょろんと書いたのだが，今年の私のインプットとアウトプットを整理してみる。&lt;/p&gt;
&lt;h2&gt;2024年のアウトプット&lt;/h2&gt;
&lt;h3&gt;ブログ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/&#34; target=&#34;_blank&#34; title=&#34;text.Baldanders.info&#34;&gt;text.Baldanders.info&lt;/a&gt; : ここ。本家ブログ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel&#34; target=&#34;_blank&#34; title=&#34;Spiegelさんの記事一覧 | Zenn&#34;&gt;Zenn&lt;/a&gt; : 今年は1件しか書かなかった。読み専？&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/spiegel-im-spiegel&#34; target=&#34;_blank&#34; title=&#34;spiegel-im-spiegel - Qiita&#34;&gt;Qiita&lt;/a&gt; : 絶賛放置中。読み専&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/12/input-output/&#34; target=&#34;_blank&#34; title=&#34;書きたくないときには書かなくていい&#34;&gt;前回&lt;/a&gt;も書いたが，今年は技術系の記事をほとんど書いてないので Zenn の記事も&lt;a href=&#34;https://zenn.dev/spiegel/articles/20240309-golang-math-rand-v2&#34; target=&#34;_blank&#34; title=&#34;Go 1.22 の math/rand/v2 を使ってみる&#34;&gt;1件&lt;/a&gt;のみ。
その代わり，本家ブログでは自転車やお散歩カメラの記事が頻出している。
やっぱジャンルを絞っちゃうと先細りしちゃうんだよなぁ。&lt;/p&gt;
&lt;h3&gt;SNS，マイクロブログ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@spiegel&#34; target=&#34;_blank&#34; title=&#34;Spiegel＠がんばらない (@spiegel@goark.fedicity.net) - Goark&#34;&gt;Mastodon&lt;/a&gt; : メインの活動場所&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/&#34; target=&#34;_blank&#34; title=&#34;Yasuhiro ARAKAWA | Flickr&#34;&gt;Flickr&lt;/a&gt; : 写真公開場所&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/baldanders.info&#34; target=&#34;_blank&#34; title=&#34;Spiegel＠旧Twitter難民 (@baldanders.info) — Bluesky&#34;&gt;Bluesky&lt;/a&gt; : &lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; からの避難先&lt;/li&gt;
&lt;li&gt;Facebook : 主に広島時代の友人への生存報告用に利用&lt;/li&gt;
&lt;li&gt;mixi2 : &lt;a href=&#34;https://text.baldanders.info/remark/2024/12/plant-your-flag-mark-your-mixi2-territory/&#34; target=&#34;_blank&#34; title=&#34;mixi2 に旗を立てろ！&#34;&gt;旗は立てた&lt;/a&gt;。どう利用していいか分からない感じ&lt;/li&gt;
&lt;li&gt;&lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; : 2023年から無期限休眠中。たまに生存報告&lt;/li&gt;
&lt;li&gt;Nostr : &lt;a href=&#34;https://text.baldanders.info/remark/2023/02/plant-your-flag-mark-your-nostr-territory/&#34; target=&#34;_blank&#34; title=&#34;Nostr に旗を立てろ！&#34;&gt;旗は立てた&lt;/a&gt;が絶賛放置中&lt;/li&gt;
&lt;li&gt;Instagram : 2020年に&lt;a href=&#34;https://text.baldanders.info/remark/2020/08/divorce-from-instagram/&#34; target=&#34;_blank&#34; title=&#34;Instagram から足を洗う方法&#34;&gt;足を洗った&lt;/a&gt;。 Threads のアカウントも持ってない&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SNS やマイクロブログで書いた内容は基本的に「書き捨て」なので，サービスまたはアカウントがなくなったら消滅する。
ただし写真はオリジナルを&lt;a href=&#34;https://text.baldanders.info/remark/2021/10/nas/&#34; target=&#34;_blank&#34; title=&#34;秋 NAS は俺に喰わせろ！&#34;&gt;自宅 NAS&lt;/a&gt; にバックアップしてるので無問題。&lt;/p&gt;
&lt;h3&gt;GitHub&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel&#34; target=&#34;_blank&#34; title=&#34;spiegel-im-spiegel (Spiegel)&#34;&gt;メインアカウント&lt;/a&gt; : 雑多な物置。主に&lt;a href=&#34;https://text.baldanders.info/&#34; target=&#34;_blank&#34; title=&#34;text.Baldanders.info&#34;&gt;ここ&lt;/a&gt;の管理に使っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goark&#34; target=&#34;_blank&#34; title=&#34;Playing with Go Language&#34;&gt;Playing with Go Language&lt;/a&gt; : 自作ツール，パッケージ管理リポジトリ&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;2024年のインプット&lt;/h2&gt;
&lt;h3&gt;SNS，マイクロブログ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Mastodon
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@spiegel&#34; target=&#34;_blank&#34; title=&#34;Spiegel＠がんばらない (@spiegel@goark.fedicity.net) - Goark&#34;&gt;メインアカウント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@goark&#34; target=&#34;_blank&#34; title=&#34;Goark (@goark@goark.fedicity.net) - Goark&#34;&gt;osanpo&lt;/a&gt; : よく見るサイト・ブログの監視用ボット。 Feed reader として使っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@goark&#34; target=&#34;_blank&#34; title=&#34;Goark (@goark@goark.fedicity.net) - Goark&#34;&gt;goark&lt;/a&gt; : 自作パッケージやよく利用する Go パッケージを監視して更新したらアナウンスするボット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bluesky
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/baldanders.info&#34; target=&#34;_blank&#34; title=&#34;Spiegel＠旧Twitter難民 (@baldanders.info) — Bluesky&#34;&gt;メインアカウント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/osanpo.bsky.social&#34; target=&#34;_blank&#34; title=&#34;Spiegel&amp;#39;s crawler (@osanpo.bsky.social) — Bluesky&#34;&gt;osanpo&lt;/a&gt; : よく見るサイト・ブログの監視用ボット。 Feed reader として使っている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/goark.bsky.social&#34; target=&#34;_blank&#34; title=&#34;Goark (@goark.bsky.social) — Bluesky&#34;&gt;goark&lt;/a&gt; : 自作パッケージやよく利用する Go パッケージを監視して更新したらアナウンスするボット&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/apodunofficial.bsky.social&#34; target=&#34;_blank&#34; title=&#34;Astronomy Picture of the Day (unofficial bot) (@apodunofficial.bsky.social) — Bluesky&#34;&gt;APOD unofficial&lt;/a&gt; : NASA APOD (Astronomy Picture of the Day) 非公式ボット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;メインの活動場所である Mastodon や Bluesky には Go 関連の日本語圏有名人は少ない感じ？ なので Go 関連の情報が入りにくくなっている。
この辺は何とかしたいが，今さら &lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; に戻る気はないしなぁ&amp;hellip;&lt;/p&gt;
&lt;p&gt;APOD 非公式ボットを&lt;a href=&#34;https://text.baldanders.info/remark/2023/07/crawler/&#34; target=&#34;_blank&#34; title=&#34;Mastodon と Bluesky でボット運用はじめました&#34;&gt;始めた&lt;/a&gt;ときは他に見当たらなかったが，最近は色んなアカウントがあって見るのが楽しい。&lt;/p&gt;
&lt;h3&gt;YouTube&lt;/h3&gt;
&lt;p&gt;言い訳しておくと，私は今でも情報収集用のメディアとして映像（動画）や音声（ラジオ）は適切ではないと思っている。
「それブログで纏めてくれ」って感じである。&lt;/p&gt;
&lt;p&gt;ただしエンターテインメントと組み合わせれば観てて楽しいし，これはこれでアリなんじゃないかと思うようになった。
なので最近は今まで関心が薄かったジャンルの学術系 VTuber や自転車関連の配信をよく観る。&lt;/p&gt;
&lt;h3&gt;その他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Feedly : 絶賛放置中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feed reader は使わなくなった。
その代わり Mastodon や Bluesky のボットアカウントを使ってる。&lt;/p&gt;
&lt;p&gt;Feedly などの feed reader はちょっと見ない間に未読が溜まりまくって収集がつかなくなるのよ。
この点，タイムライン表示なら見なかったら流れ去って「なかった」ことになるので心理的安全性が高い（笑）&lt;/p&gt;
&lt;h2&gt;総評&lt;/h2&gt;
&lt;p&gt;Bluesky は企業・組織の公式アカウントが増えて情報が探しやすくなった。&lt;/p&gt;
&lt;p&gt;それにしても，タイムライン方式は検索性が悪いと思う（できないわけではない。 Mastodon は困難だけど）。
それをカバーするためにサービスプロバイダが提示する「おすすめ」順ソートがあるんだろうけど。
でも「おすすめ」順ソートは「コレジャナイ」感が強いんだよなぁ。&lt;/p&gt;
&lt;p&gt;2010年代の SNS やマイクロブログサービスはユーザを囲い込み活動を閉じ込めることに躍起になっていた。
これは今でも Facebook や &lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; (旧 Twitter) などの老舗タイムライン・サービスで行われている。&lt;/p&gt;
&lt;p&gt;でも本来タイムライン・サービスは「土管」に徹するべきで，そこから他サイトのコンテンツに飛ばす動線を確保するほうが理に適ってると思う。&lt;/p&gt;
&lt;p&gt;この点で Bluesky は（今のところは）有望なんだよな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20241115-3065421/&#34; target=&#34;_blank&#34;&gt;Bluesky、1日で100万人以上増加、エンゲージメントはXの10倍以上という調査報告も | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まぁ，サービス単体で収益を出そうとすると土管ではいられないんだろうけど。
Bluesky がいつその立場に立たせられるかだよね。&lt;/p&gt;
&lt;p&gt;コミュニケーションはメッセージング・サービスか Discord のようなコミュニケーション・サービスを使うべきだと思う。
はっ。
もしかして mixi2 はコミュニケーション・サービスとして考えるなら有望なのでは？&lt;/p&gt;
&lt;p&gt;ここ2,3年はニュースソースを絞ってることもあってメチャメチャ偏ってる自覚はある。
ゼロ年代までで言うところのネットサーフィンにあまり時間が割けなくなっている。
これは今後の課題だな。&lt;/p&gt;
&lt;p&gt;というわけで，これでこっぽし。&lt;/p&gt;
</content>
	</entry><entry>
		<title>Kagi Search を試してみる 〜 検索サービスも有料の時代？</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/06/kagi-search/" />
		<id>tag:text[.]Baldanders.info,2024-06-07:/remark/2024/06/kagi-search/</id>
		<published>2024-06-07T12:26:58+00:00</published>
		<updated>2025-02-01T10:26:18+00:00</updated>
		<summary>日本は現在，自国通貨の価値が相対的に低いので国外の有料サービスは微妙に勧め辛いのがネックではあるが，興味が湧いたのなら選択肢のひとつとしてどうぞ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;Kagi Search とは&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; なる検索サービスがあるらしい。
知ったきっかけはSF作家 Cory Doctorow の以下の記事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pluralistic.net/2024/04/04/teach-me-how-to-shruggie/&#34; target=&#34;_blank&#34;&gt;Pluralistic: Too big to care (04 Apr 2024) – Pluralistic: Daily links from Cory Doctorow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4535&#34; target=&#34;_blank&#34;&gt;なぜGoogleは“あなたの不満”を無視できるのか | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事で &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; は以下のように評価されている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4535&#34;&gt;&lt;p&gt;私も試してみた。魔法だった。&lt;/p&gt;
&lt;p&gt;いや、マジで。Googleではもう見つからなくなったものは？ 全部検索結果の最上位に出てくる。Googleで検索したらスパムがページ単位で出てくるような検索ワードなら？ クッソキレイな検索結果じゃないか。Kagiは何度でも、適切な検索結果を吐き出した。&lt;/p&gt;
&lt;p&gt;ちょっと触っただけでも感動モノだった。さらにKagiのレンズや高度な機能を使うと、検索体験は「魔法」から「魔術」のレベルに上がった。&lt;/p&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;すぐにファミリープランに加入した。1ヶ月使ってみた。Google検索は基本的に使わなくなった。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4535&#34;&gt;なぜGoogleは“あなたの不満”を無視できるのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;大絶賛ぢゃん（笑）&lt;/p&gt;
&lt;p&gt;日本語圏で &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; に関する記事がないかな，と探してみた。
この辺かな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://efcl.info/2024/03/15/kagi-search/&#34; target=&#34;_blank&#34;&gt;Kagi Searchをメインの検索エンジンとして使っている | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事によると，利点としては&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://efcl.info/2024/03/15/kagi-search/&#34;&gt;&lt;ul&gt;
&lt;li&gt;Googleより良いと感じる検索結果が出しやすい(人による)
&lt;ul&gt;
&lt;li&gt;日本語の検索結果はそこまで変わらない感じもする(後述する漢字だけ検索した時の問題はまだある)&lt;/li&gt;
&lt;li&gt;英語で検索した時に英語のリソースにマッチさせやすいので良い結果と感じることが多い&lt;/li&gt;
&lt;li&gt;また、ビルトインでBlockや検索結果の優先度を変更する機能が入ってる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.kagi.com/kagi/features/redirects.html&#34; target=&#34;_blank&#34;&gt;Redirects (URL Rewrites) | Kagi’s Docs&lt;/a&gt; という機能で、検索結果のURLを書き換える機能も持っている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lensesで特定のサイトからの検索結果だけにフィルターできるのが便利
&lt;ul&gt;
&lt;li&gt;プログラミング関係(GitHubやStackoverflowなど)のサイトだけに絞ったりが、1 clickで切り替えできる&lt;/li&gt;
&lt;li&gt;レビューとか検索したいときに個人のブログを検索したい といった感じの用途でよく使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;検索結果のOrder ByとTimeが素直な感じ
&lt;ul&gt;
&lt;li&gt;Order By: recentで検索のソート順を新しいもの順にできる&lt;/li&gt;
&lt;li&gt;Timeで24時間以内の結果にできる(ここはGoogleでもできる)&lt;/li&gt;
&lt;li&gt;Verbatim modeを使うと、クエリの文字列が含まれているサイトだけが表示される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://efcl.info/2024/03/15/kagi-search/&#34;&gt;Kagi Searchをメインの検索エンジンとして使っている&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という感じらしい（&lt;a href=&#34;https://efcl.info/2024/03/15/kagi-search/&#34; target=&#34;_blank&#34; title=&#34;Kagi Searchをメインの検索エンジンとして使っている | Web Scratch&#34;&gt;原文記事&lt;/a&gt;の箇条書きを抜粋して列挙してるので詳しくは原文をどうぞ）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; は有料のサービスで料金体系は以下のようになっている。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://kagi.com/pricing&#34;&gt;&lt;img src=&#34;./plans.png&#34; srcset=&#34;./plans.png 1432w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Kagi Search Pricing and Plans&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://kagi.com/pricing&#34;&gt;Kagi Search Pricing and Plans&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;お試しで100回までは無料でいけるようだ。
検索クエリを無制限で使いたいなら Professional (10USD/月 or 108USD/年 ＋ 税金) 以上で契約する必要がある。&lt;/p&gt;
&lt;h2&gt;Kagi Search を試してみる&lt;/h2&gt;
&lt;p&gt;（私の環境では &lt;a href=&#34;https://ublockorigin.com/&#34; target=&#34;_blank&#34; title=&#34;uBlock Origin - Free, open-source ad content blocker.&#34;&gt;uBlock Origin&lt;/a&gt; で広告をブロックしているので，その辺を割り引いてね）&lt;/p&gt;
&lt;p&gt;取り敢えず無料の Trial プランでサインアップし「Kagi Search とは」で検索してみた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-kagi-1.png&#34;&gt;&lt;img src=&#34;./search-by-kagi-1.png&#34; srcset=&#34;./search-by-kagi-1.png 834w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by Kagi&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-kagi-1.png&#34;&gt;「Kagi Search とは」検索結果 by Kagi&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;比較のために Google で検索した結果を挙げる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-google-1.png&#34;&gt;&lt;img src=&#34;./search-by-google-1.png&#34; srcset=&#34;./search-by-google-1.png 857w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by Google&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-google-1.png&#34;&gt;「Kagi Search とは」検索結果 by Google&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;あー，要らん要約が付いてるな。
&lt;code&gt;&amp;amp;udm=14&lt;/code&gt; を付加して再表示する。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-google-2.png&#34;&gt;&lt;img src=&#34;./search-by-google-2.png&#34; srcset=&#34;./search-by-google-2.png 857w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by Google (要約なし)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-google-2.png&#34;&gt;「Kagi Search とは」検索結果 by Google (要約なし)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これなら多少は見れるかな。
Forbes の「&lt;a href=&#34;https://forbesjapan.com/articles/detail/49605&#34; target=&#34;_blank&#34; title=&#34;ついにGoogleをしのいだ？ 5つの未来型検索エンジン | Forbes JAPAN 公式サイト（フォーブス ジャパン）&#34;&gt;ついにGoogleをしのいだ？ 5つの未来型検索エンジン&lt;/a&gt;」が上位にないのがいい感じだな（笑）&lt;/p&gt;
&lt;p&gt;ついでに DuckDuckGo で検索した結果も挙げておこう。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-duckduckgo.png&#34;&gt;&lt;img src=&#34;./search-by-duckduckgo.png&#34; srcset=&#34;./search-by-duckduckgo.png 834w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by DuckDuckGo&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-duckduckgo.png&#34;&gt;「Kagi Search とは」検索結果 by DuckDuckGo&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;んー。
細かい違いはあるにせよ，やっぱ日本語圏では違いが分かりにくいか？&lt;/p&gt;
&lt;p&gt;今度は “Order by” を “Recency” にしてみよう。
時系列に並べ替えるわけやね。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-kagi-2.png&#34;&gt;&lt;img src=&#34;./search-by-kagi-2.png&#34; srcset=&#34;./search-by-kagi-2.png 834w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by Kagi (order by Recency)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-kagi-2.png&#34;&gt;「Kagi Search とは」検索結果 by Kagi (order by Recency)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;おー。
だいぶ変わるんだな。&lt;/p&gt;
&lt;p&gt;「&lt;a href=&#34;https://efcl.info/2024/03/15/kagi-search/&#34; target=&#34;_blank&#34; title=&#34;Kagi Searchをメインの検索エンジンとして使っている | Web Scratch&#34;&gt;Kagi Searchをメインの検索エンジンとして使っている&lt;/a&gt;」では日本の主要ブログに絞り込むレンズを紹介している。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://efcl.info/2024/03/15/kagi-search/&#34;&gt;&lt;p&gt;次の&lt;a href=&#34;https://help.kagi.com/kagi/features/lenses.html&#34; target=&#34;_blank&#34;&gt;Lenses&lt;/a&gt;を使って、日本のブログだけに絞り込める&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kagi.com/lenses/0Q9bHFmidnH3TfNAR3OYQKb0gyqDEzM7&#34; target=&#34;_blank&#34;&gt;https://kagi.com/lenses/0Q9bHFmidnH3TfNAR3OYQKb0gyqDEzM7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://efcl.info/2024/03/15/kagi-search/&#34;&gt;Kagi Searchをメインの検索エンジンとして使っている&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この設定を取り込んでみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./edit-lens.png&#34;&gt;&lt;img src=&#34;./edit-lens.png&#34; srcset=&#34;./edit-lens.png 1096w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Edit Lens&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./edit-lens.png&#34;&gt;Edit Lens&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;以下のサイトのみに絞り込む設定らしい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*.hatenablog.com, *.hatenablog.jp, *.hateblo.jp, *.hatenadiary.com, *.hatenadiary.jp, note.com, ameblo.jp, sizu.me, zenn.com, qiita.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この設定を保存して検索してみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./search-by-kagi-3.png&#34;&gt;&lt;img src=&#34;./search-by-kagi-3.png&#34; srcset=&#34;./search-by-kagi-3.png 840w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;「Kagi Search とは」検索結果 by Kagi (with Lens:ブログ)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./search-by-kagi-3.png&#34;&gt;「Kagi Search とは」検索結果 by Kagi (with Lens:ブログ)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なるほど。
こんな感じになるのか。
こりゃあカスタマイズしがいがあるな。&lt;/p&gt;
&lt;h2&gt;検索サービスも有料の時代？&lt;/h2&gt;
&lt;p&gt;最初に述べたように &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; について知ったのは4月のGW前だったのだが「そのうち試してみるか」という感じだった。
私は普段 DuckDuckGo を使ってるのだが，日本語の情報を探す限りにおいては特に不満がなかったからだ。&lt;/p&gt;
&lt;p&gt;ところが先月5月に Microsoft のサービスで障害が発生し，その余波で DuckDuckGo も使えなくなった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20240524-microsoft-outage-affects-chatgpt/&#34; target=&#34;_blank&#34;&gt;Microsoftの大規模障害によりChatGPT・Copilot・Bing・DuckDuckGoなどがダウン - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このとき久しぶりに Google 検索を使ったのだが，欲しい情報に全然当たらないのね。
大人気なく癇癪を起こしちゃったよ。
そんなわけで重い腰を上げて &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; へサインアップしてみたのだった。&lt;/p&gt;
&lt;p&gt;Google 検索サービスの「メタクソ化（&lt;a href=&#34;https://en.wikipedia.org/wiki/Enshittification&#34; target=&#34;_blank&#34; title=&#34;Enshittification - Wikipedia&#34;&gt;enshittification&lt;/a&gt;）」は許容できるレベルを超えつつある。
「メタクソ化」の造語を作った Cory Doctorow は，最初に挙げた記事以外にも&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pluralistic.net/2024/02/21/im-feeling-unlucky/&#34; target=&#34;_blank&#34;&gt;Pluralistic: Google reneged on the monopolistic bargain; The Bezzle excerpt (Part IV) (21 Feb 2024) – Pluralistic: Daily links from Cory Doctorow&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4515&#34; target=&#34;_blank&#34;&gt;かくしてGoogleはスパマーに敗北した | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pluralistic.net/2024/04/24/naming-names/&#34; target=&#34;_blank&#34;&gt;Pluralistic: The specific process by which Google enshittified its search (24 Apr 2024) – Pluralistic: Daily links from Cory Doctorow&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4541&#34; target=&#34;_blank&#34;&gt;Google検索を殺した男――Googleはいつ、どこでメタクソ化に舵を切ったのか | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;などとボロクソに書いている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4541&#34;&gt;ジットロンは、検索の質をめぐる取締役会の闘争の物語を綴っている。その取締役会で、Googleの全盛期を支えた古参Googlerであるベン・ゴームズが、コンピュータサイエンティストからマネージャーに転身したプラバカール・ラガバンとの闘争に敗れたのだ。ラガバンの戦術は、検索の質を下げることで検索クエリの数（つまり、同社が検索者に表示できる広告の数）を増やすこと（訳注：「エンゲージメント・ハッキング」）だった。そうすれば、ユーザは目的のものを見つけるまでにGoogleでより長く時間を過ごさなければならなくなる。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4541&#34;&gt;Google検索を殺した男――Googleはいつ、どこでメタクソ化に舵を切ったのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書いてあって納得しちゃったよ（笑）&lt;/p&gt;
&lt;p&gt;更に spam 広告に関しては2022年末の時点で &lt;a href=&#34;https://text.baldanders.info/remark/2022/12/ad-blocker/&#34; target=&#34;_blank&#34; title=&#34;米国 FBI は広告ブロッカーを推奨している？&#34;&gt;FBI が警告&lt;/a&gt;を出してるし，最近でも&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://internet.watch.impress.co.jp/docs/column/dlis/1592999.html&#34; target=&#34;_blank&#34;&gt;「Google広告からの誘導が6割」との分析結果。より巧妙化し、高齢者を狙う「サポート詐欺」に注意！【被害事例に学ぶ、高齢者のためのデジタルリテラシー】 - INTERNET Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;みたいな話がある。&lt;/p&gt;
&lt;p&gt;主要な検索サービスにおいて検索結果の並び順は検閲のように働く。
2022年に DuckDuckGo はロシアの一部のサイトについて政治的理由から検索結果のランクを引き下げた。
この措置に対して検閲であるとの批判が上がったらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.engadget.com/duck-duck-go-reverses-course-will-demote-russian-propaganda-in-search-results-014336389.html&#34; target=&#34;_blank&#34;&gt;DuckDuckGo will demote Russian propaganda in search results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そういやゼロ年代には「Google 八分」とかあったな（若い人は知らんかな）。&lt;/p&gt;
&lt;p&gt;私は「&lt;strong&gt;目的の如何にかかわらずユーザがコントロールできないフィルタリングはすべて検閲である&lt;/strong&gt;」という不遜な考えを持っている。
検索結果における（ユーザがコントロールできない）恣意的な順位操作は（フィルタリングではないので）検閲とまでは言わないが UX 的には「&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34; target=&#34;_blank&#34; title=&#34;『はじめて学ぶ ビデオゲームの心理学』は読んどけ！&#34;&gt;ダークパターン&lt;/a&gt;」なんじゃないかと思っている。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; は検索結果についてかなりの部分をユーザがコントロールできるっぽい。
有料サービスなので検索結果のトップが広告で溢れかえることもないだろうし「検索の質を下げることで検索クエリの数を増やす」などというアホなことはしでかさないだろうという期待感もある。&lt;/p&gt;
&lt;p&gt;また &lt;a href=&#34;https://kagi.com/&#34; target=&#34;_blank&#34; title=&#34;Kagi Search - A Premium Search Engine&#34;&gt;Kagi Search&lt;/a&gt; は自前のクローラーや巨大なデータセンターを持っているわけではなく&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4535&#34;&gt;Kagiで検索すると、Google、Yandex、Mojeek、Braveなどの従来の検索インデックスや、Wikimedia Commons、Flickrなどの少数の専門検索エンジンに「匿名化されたAPIコール」が行われる。Kagiはこれを独自のウェブインデックスとニュースインデックス（ニュース検索用）と組み合わせて、表示される検索結果ページを構築する。つまり基本的には、Google検索結果と他のインデックスからの検索結果とミックスしているのだ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4535&#34;&gt;なぜGoogleは“あなたの不満”を無視できるのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なんだそうだ（引用の引用ですまん）。
つまり，ユーザから見れば VRM (Vendor Relationship Management) として機能する 4th party と見なすこともできるわけだ（流石に褒め過ぎか？）。
本当にそうならお金を払う価値はあるかもしれない。
まぁ，細かい評価はこれからなので「やっぱあかん」ってなるかも知れんけど。&lt;/p&gt;
&lt;p&gt;日本は現在，自国通貨の価値が相対的に低いので国外の有料サービスは微妙に勧め辛いのがネックではあるが，興味が湧いたのなら選択肢のひとつとしてどうぞ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.kagi.com/kagi-translate&#34; target=&#34;_blank&#34;&gt;Kagi Translate - We speak your language | Kagi Blog&lt;/a&gt; : 翻訳サービスがローンチされた&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/rei_matsu/n/nc2d9629837c2&#34; target=&#34;_blank&#34;&gt;【実例あり】Kagi TranslateはGoogle翻訳・DeepLを超えるのか検証してみた｜れい - やさしいAIシェアマーケティング&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://help.kagi.com/kagi/ai/assistant.html&#34; target=&#34;_blank&#34;&gt;The Assistant by Kagi | Kagi&amp;rsquo;s Docs&lt;/a&gt; : Ultimate プランのみ有効&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/masat/articles/35c453e6fdb12d&#34; target=&#34;_blank&#34;&gt;Kagiでストレスのない検索を&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240527/udm14&#34; target=&#34;_blank&#34;&gt;Google検索結果からAIによるまとめを排除するフィルタ「&amp;amp;udm=14」 - YAMDAS現更新履歴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wirelesswire.jp/2024/06/86654/&#34; target=&#34;_blank&#34;&gt;Googleからウェブサイトへのトラフィックがゼロになる日 – WirelessWire News&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2023/11/blocking-ad-blocker/&#34; target=&#34;_blank&#34;&gt;広告の曲がり角&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4296001574?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51anznwPz2L._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4296001574?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ハッキング思考　強者はいかにしてルールを歪めるのか、それを正すにはどうしたらいいのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 高橋 聡 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2023-10-12&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4296001574 (ASIN), 9784296001576 (EAN), 4296001574 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「AI時代にルールを味方につけるには、「正しいハッキングの考え方」が必要だ」（帯の言葉より）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-10-13&#34;&gt;2023-10-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ハッキング思考 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41Yi36OSUmL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-13&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-04-09&#34;&gt;2023-04-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/519&amp;#43;kIHb71L._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インテンション・エコノミー～顧客が支配する経済&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Doc Searls (著), 栗原潔 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;翔泳社 2013-03-14 (Release 2013-06-20)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00DIM6BE6 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;時代はソーシャル CRM から VRM へ。&lt;a href=&#39;https://baldanders.info/blog/000794/&#39;&gt;俺達がインターネットだ！&lt;/a&gt; &lt;a href=&#39;https://baldanders.info/blog/000638/&#39;&gt;感想文はこちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-04-26&#34;&gt;2015-04-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- インテンション・エコノミー --&gt;
</content>
	</entry><entry>
		<title>オンラインメモ帳 Thredot がよさげ</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/03/thredot/" />
		<id>tag:text[.]Baldanders.info,2024-03-29:/remark/2024/03/thredot/</id>
		<published>2024-03-29T13:46:47+00:00</published>
		<updated>2024-03-29T14:14:07+00:00</updated>
		<summary>メモ書きに「分類」は不要というのは同意する。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://koki.me/&#34; target=&#34;_blank&#34;&gt;Koki Sato&lt;/a&gt; さんによる &lt;a href=&#34;https://thredot.org/&#34; target=&#34;_blank&#34; title=&#34;Thredot | シンプルに繋がる、あなたのメモ。&#34;&gt;Thredot&lt;/a&gt; が面白い。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kou_pg_0131/articles/thredot-introduction&#34; target=&#34;_blank&#34;&gt;スレッド形式で雑にメモを書き散らすためのサービス「Thredot」をリリースしました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;スレッド形式のメモサービスといえば &lt;a href=&#34;https://zenn.dev/&#34; target=&#34;_blank&#34; title=&#34;Zenn｜エンジニアのための情報共有コミュニティ&#34;&gt;Zenn&lt;/a&gt; のスクラップ機能が思い浮かぶが，上の記事によると &lt;a href=&#34;https://thredot.org/&#34; target=&#34;_blank&#34; title=&#34;Thredot | シンプルに繋がる、あなたのメモ。&#34;&gt;Thredot&lt;/a&gt; の特徴は&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://zenn.dev/kou_pg_0131/articles/thredot-introduction&#34;&gt;&lt;ul&gt;
&lt;li&gt;メモを整理させない&lt;/li&gt;
&lt;li&gt;爆速な検索機能&lt;/li&gt;
&lt;li&gt;公開範囲を設定できる&lt;/li&gt;
&lt;li&gt;WYSIWYG エディタを採用&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://zenn.dev/kou_pg_0131/articles/thredot-introduction&#34;&gt;スレッド形式で雑にメモを書き散らすためのサービス「Thredot」をリリースしました&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ということらしい。
メモ書きに「分類」は不要というのは同意する。
「メモ」では思ったことや調べたことを深く考えずに大量に書き留めていきたい。
その代わりにスレッド名の検索が「爆速」なので，スレッド名にキーワードになる単語を列挙しておけば，後からメモを簡単に探せるわけだ。
あと，プログラムコードを syntax highlight させて書き込めるのも魅力である。&lt;/p&gt;
&lt;p&gt;というわけで，早速アカウントを作った。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./my-thredot.png&#34;&gt;&lt;img src=&#34;./my-thredot.png&#34; srcset=&#34;./my-thredot.png 1100w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Thredot にアカウントを作った&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./my-thredot.png&#34;&gt;Thredot にアカウントを作った&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;上の絵は&lt;a href=&#34;https://text.baldanders.info/remark/2024/03/chromebook-1/&#34; target=&#34;_blank&#34; title=&#34;Chromebook を導入する&#34;&gt;先日導入した Chromebook&lt;/a&gt; の Chrome ブラウザで表示させたもの。
更に &lt;a href=&#34;https://thredot.org/&#34; target=&#34;_blank&#34; title=&#34;Thredot | シンプルに繋がる、あなたのメモ。&#34;&gt;Thredot&lt;/a&gt; サイトを PWA (Progressive Web Apps) 化してみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./pwa.png&#34;&gt;&lt;img src=&#34;./pwa.png&#34; srcset=&#34;./pwa.png 1366w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Thredot サイトを PWA 化する (1)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./pwa.png&#34;&gt;Thredot サイトを PWA 化する (1)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;このように 保存して共有 → ショートカットを作成 を選択すると以下のダイアログが表示される。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./pwa-2.png&#34;&gt;&lt;img src=&#34;./pwa-2.png&#34; srcset=&#34;./pwa-2.png 1366w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Thredot サイトを PWA 化する (2)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./pwa-2.png&#34;&gt;Thredot サイトを PWA 化する (2)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ここで「ウィンドウとして開く」をチェックして「作成」すれば PWA 化できる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./pwa-3.png&#34;&gt;&lt;img src=&#34;./pwa-3.png&#34; srcset=&#34;./pwa-3.png 1017w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Thredot サイトを PWA 化する (3)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./pwa-3.png&#34;&gt;Thredot サイトを PWA 化する (3)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;
&lt;p&gt;既に Chromebook セットアップの作業メモは &lt;a href=&#34;https://thredot.org/&#34; target=&#34;_blank&#34; title=&#34;Thredot | シンプルに繋がる、あなたのメモ。&#34;&gt;Thredot&lt;/a&gt; で行っている（非公開ご容赦）。
やっぱスレッド形式でメモをバンバンぶち込めるのは気持ちいい。
今までメモサービスとしては &lt;a href=&#34;https://simplenote.com/&#34; target=&#34;_blank&#34;&gt;Simplenote&lt;/a&gt; を常用していたが，作業メモや読書メモは &lt;a href=&#34;https://thredot.org/&#34; target=&#34;_blank&#34; title=&#34;Thredot | シンプルに繋がる、あなたのメモ。&#34;&gt;Thredot&lt;/a&gt; のほうがよさそうだ。&lt;/p&gt;
&lt;p&gt;初期 &lt;a href=&#34;https://zenn.dev/&#34; target=&#34;_blank&#34; title=&#34;Zenn｜エンジニアのための情報共有コミュニティ&#34;&gt;Zenn&lt;/a&gt; のときも思ったが，個人開発でこういうのをサラッと作れる人はホンマに尊敬する。
願わくば&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;チェックボックスのリストが書けると嬉しい（お買い物リストを作れる）&lt;/li&gt;
&lt;li&gt;非公開 → 公開 の切り替えができると嬉しい（非公開で書いたけど，あとで公開してもよかったなぁ，と思うことがある）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といったところかな。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://thredot.org/threads/FRMQVRRNRU499B12&#34; target=&#34;_blank&#34;&gt;Thredot がサポートしている書式の一覧 | Thredot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://thredot.org/playground&#34; target=&#34;_blank&#34;&gt;Playground | Thredot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BKKF7JHV?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41OOqwWbGBL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0BKKF7JHV?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;【Amazon.co.jp限定】 ASUS Chromebook クロームブック Flip CX1 11.6インチ 2-in-1 タッチスクリーン 日本語キーボード 重量1.32kg トランスペアレントシルバー CX1102FKA-MK0037&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ASUS (Release 2022-11-04)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B0BKKF7JHV (ASIN), 0195553939942 (EAN), 195553939942 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ASUS 製 Chromebook。11.6インチディスプレイ，8GBメモリ，32GBストレージ。正直，ストレージはもう少し欲しかったがメモリ容量優先で選んだ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-03-27&#34;&gt;2024-03-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ASUS Chromebook --&gt;
</content>
	</entry><entry>
		<title>個人用 Mastodon サーバに活動拠点を移す</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/03/moving-to-personal-mastodon-server/" />
		<id>tag:text[.]Baldanders.info,2024-03-02:/remark/2024/03/moving-to-personal-mastodon-server/</id>
		<published>2024-03-02T00:05:00+00:00</published>
		<updated>2024-03-03T01:21:52+00:00</updated>
		<summary>できれば新しい方もよろしくお願いします 🙇</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;いやぁ，今回の仕事は辛かった。
今は解放感でいっぱいです。&lt;/p&gt;
&lt;p&gt;突然だが Mastodon サーバの活動拠点を &lt;a href=&#34;https://fedibird.com/@spiegel&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;fedibird.com&lt;/code&gt; アカウント&lt;/a&gt;から個人用に運用している &lt;a href=&#34;https://goark.fedicity.net/@spiegel&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;goark.fedicity.net&lt;/code&gt; アカウント&lt;/a&gt;に移すことにした。&lt;/p&gt;
&lt;p&gt;いや，当初から思ってたのよ。
&lt;a href=&#34;https://goark.fedicity.net/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;goark.fedicity.net&lt;/code&gt;&lt;/a&gt; は5K文字書けるんだよ。
なのにボット運用にしか&lt;a href=&#34;https://text.baldanders.info/remark/2023/12/personal-mastodon-server/&#34; target=&#34;_blank&#34; title=&#34;個人用 Mastodon サーバを立てた&#34;&gt;使ってない&lt;/a&gt;のは勿体ねーって。
まだ特に使い途を思いついたわけじゃないけど，まとまった時間がとれてる今のうちに拠点を移しちゃおうかと。&lt;/p&gt;
&lt;p&gt;Mastodon の「引っ越し」機能は使わず &lt;a href=&#34;https://fedibird.com/@spiegel&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;fedibird.com&lt;/code&gt; アカウント&lt;/a&gt;は予備系として残しておくことにした。
お世話になってる身分でナニだが &lt;a href=&#34;https://hostdon.jp/&#34; target=&#34;_blank&#34; title=&#34;Hostdon - Mastodonのホスティングサービス&#34;&gt;Hostodon&lt;/a&gt; はたまに微妙なところがあって，昨夜も証明書の期限が切れて Web ページが開けなくなったし（すぐに更新されたけど。ひょっとして期限が切れてから更新してるのか？）。
技術的・財政的・政治的な理由で &lt;a href=&#34;https://goark.fedicity.net/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;goark.fedicity.net&lt;/code&gt;&lt;/a&gt; が維持できなくなったときの帰る場所は確保しておかないと，と思って。&lt;/p&gt;
&lt;p&gt;というわけで &lt;a href=&#34;https://fedibird.com/@spiegel&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;fedibird.com&lt;/code&gt; アカウント&lt;/a&gt; をフォローしてくださってる方は，できれば新しい方もよろしくお願いします &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;🙇&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://opencollective.com/fedibird-infrastructure&#34; target=&#34;_blank&#34; title=&#34;Fedibird Infrastructure - Open Collective&#34;&gt;Fedibird への寄付&lt;/a&gt;は継続するつもり。
大した金額じゃないし。
単純に情報収集するだけなら &lt;code&gt;fedibird.com&lt;/code&gt; のほうが都合がいいんだけどね。
Mastodon ではユーザ数が多くて活動が活発なところほど情報収集には有利だし，なにより全文検索をサポートしてる Mastodon サーバなんて他にはそうそうないだろう。&lt;/p&gt;
&lt;p&gt;おそらくだけど &lt;a href=&#34;https://goark.fedicity.net/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;goark.fedicity.net&lt;/code&gt;&lt;/a&gt; のほうは「日記」的な使い方になるんじゃないかなぁ。
脊髄反射で胡乱なことを口走りそうな気がするので気をつけないとな（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2023/12/personal-mastodon-server/&#34; target=&#34;_blank&#34;&gt;個人用 Mastodon サーバを立てた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2023/07/crawler/&#34; target=&#34;_blank&#34;&gt;Mastodon と Bluesky でボット運用はじめました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>個人用 Mastodon サーバを立てた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/12/personal-mastodon-server/" />
		<id>tag:text[.]Baldanders.info,2023-12-04:/remark/2023/12/personal-mastodon-server/</id>
		<published>2023-12-04T11:45:24+00:00</published>
		<updated>2024-03-02T00:21:35+00:00</updated>
		<summary>既存の汎用 Mastodon サーバにアカウントを作るのは諦めて個人サーバを立てることにした。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;ネット上の情報収集のために自作クローラと組み合わせたボット・アカウントを mastodon.social に作ったんだけど BAN されちゃいまして。
BAN された理由は不明。
問答無用なんだな。
ヤバげなページへのリンクは張ってないと思ったんだけど，ほとんど日本語情報だったのがアカンかったんだろうか。&lt;/p&gt;
&lt;p&gt;というわけで，既存の汎用 Mastodon サーバにアカウントを作るのは諦めて &lt;a href=&#34;https://hostdon.jp/&#34; target=&#34;_blank&#34; title=&#34;Hostdon - Mastodonのホスティングサービス&#34;&gt;Hostodon&lt;/a&gt; サービスを利用して&lt;a href=&#34;https://goark.fedicity.net/&#34; target=&#34;_blank&#34; title=&#34;Goark&#34;&gt;個人サーバ&lt;/a&gt;を立てることにした。&lt;/p&gt;
&lt;p&gt;以下のボットアカウントが稼働中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@osanpo&#34; target=&#34;_blank&#34; title=&#34;Spiegel&amp;#39;s Crawler (@osanpo@goark.fedicity.net) - Goark&#34;&gt;@osanpo@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@goark&#34; target=&#34;_blank&#34; title=&#34;Goark (@goark@goark.fedicity.net) - Goark&#34;&gt;@goark@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ボットの内容は「&lt;a href=&#34;https://text.baldanders.info/remark/2023/07/crawler/&#34; target=&#34;_blank&#34;&gt;Mastodon と Bluesky でボット運用はじめました&lt;/a&gt;」を参考に，よろしかったらフォローしてみてください。&lt;/p&gt;
&lt;p&gt;ボット以外のアカウントはひとつのみ作っている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@spiegel&#34; target=&#34;_blank&#34; title=&#34;Spiegel (@spiegel@goark.fedicity.net) - Goark&#34;&gt;@spiegel@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただしこちらは &lt;a href=&#34;https://fedibird.com/@spiegel&#34; target=&#34;_blank&#34; title=&#34;Spiegel (@spiegel@fedibird.com) - Fedibird&#34;&gt;fedibird.com のアカウント&lt;/a&gt;に何かあったときの予備系として考えているので，普段は活動しない予定。
でも &lt;a href=&#34;https://hostdon.jp/&#34; target=&#34;_blank&#34; title=&#34;Hostdon - Mastodonのホスティングサービス&#34;&gt;Hostodon&lt;/a&gt; で立てた Mastodon サーバって5,000文字入力できるんだよね。
もしかしたら使いみちを思いついて何かするかもしれない。&lt;/p&gt;
&lt;p&gt;&amp;hellip;年末に忙しくなるとこういうことをし始めるんだよなぁ。
我ながら困った性格である。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/03/moving-to-personal-mastodon-server/&#34; target=&#34;_blank&#34;&gt;個人用 Mastodon サーバに活動拠点を移す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>広告の曲がり角</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/11/blocking-ad-blocker/" />
		<id>tag:text[.]Baldanders.info,2023-11-21:/remark/2023/11/blocking-ad-blocker/</id>
		<published>2023-11-21T11:39:49+00:00</published>
		<updated>2023-12-11T10:16:36+00:00</updated>
		<summary>注目を広告に乗っ取られることで本来意図した UX が崩れるのはブランドイメージの棄損だし，ましてや詐欺や Phishing の温床になるのはサイトオーナーとしては拙い事態だと思うんだけどねぇ。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;広告最大の機能って「注目を奪う」ことなんだよね。
せっかく Web ページや動画コンテンツやゲームなどで上手く注目を制御していても，広告の見せ方や内容で台無しになることもある&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;というわけで Mastodon 経由で見かけたポストがこれ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;一部の広告ブロッカーがすべてのサイトで使えなくなります（ガチ）&lt;br&gt;&lt;br&gt;Google Chromeでは2024年6月から、YouTubeだけでなくすべてのサイトで、一部の広告ブロッカーが強制的に無効化されます。&lt;br&gt;&lt;br&gt;（ちなみにGoogleの収益の8割は広告ビジネスです）&lt;br&gt;&lt;br&gt;-----&lt;br&gt;&lt;br&gt;24年6月から、Chromeでは「Manifest…&lt;/p&gt;&amp;mdash; ろぼいん (@keita_roboin) &lt;a href=&#34;https://twitter.com/keita_roboin/status/1726425947069718915?ref_src=twsrc%5Etfw&#34;&gt;November 20, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;p&gt;私はガチの Firefox ユーザなので「へー， Chrome ユーザって大変なんだなぁ」くらいの感想しかないのだが，真面目な話をすれば論点は大きく2つあると思う。
すなわち&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主要ブラウザに搭載されている拡張機能アドオンの仕組みがアドホックで脆弱&lt;/li&gt;
&lt;li&gt;Web 広告（動画サービスの広告等を含む）がハックの対象になっていて，ソーシャルエンジニアリングに対して脆弱&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;である。&lt;/p&gt;
&lt;p&gt;そもそも広告ブロッカーはブラウザ拡張機能のアドホックさをハックしたものだ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/2668&#34;&gt;広告ブロックは、サードパーティのプリンターインクと同様に、現代史における最大の成功を収めた敵対的相互運用性の事例である。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/2668&#34;&gt;広告ブロッカーは「嫌ならどうする？」の表明である | p2ptk[.]org&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;一方で（昔見かけたやつだが）広告やマイニング・コードをブロックすると見せかけて別の広告やマイニング・コードを差し込んだりする悪質なものもあった。
広告ブロッカーではないが，最近見かけた記事でこんな話もある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2311/16/news047.html&#34; target=&#34;_blank&#34;&gt;HTMLソースコードから個人情報が筒抜け？　Chromeなどのブラウザ拡張機能の多くで脆弱性　米研究者らが発見：Innovative Tech - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なので，最初に挙げたポストにある「Googleは「プライバシーとセキュリティーのため」と説明していますが&amp;hellip;」という部分は多分その通りなんだろうなぁ，とは思う。
しらんけど。
でも，こうした悪用を防ぐために拡張機能をセキュリティやプライバシーの観点から締め上げていけば必然的に広告ブロッカーのような有用な機能も排除されていくわけで，その匙加減が結構難しい。
もっと言うと，拡張機能をどう制御するかというのは特定のブラウザに限る話ではないので，いずれ他のブラウザでも問題になってくると思う。&lt;/p&gt;
&lt;p&gt;私が2番目の論点を意識するようになったのは2022年に書いたこの記事あたりから。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/12/ad-blocker/&#34; target=&#34;_blank&#34;&gt;米国 FBI は広告ブロッカーを推奨している？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;つまり「Web 広告がウザい」みたいな主観で語る季節は終わっているのである。
最近では&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2023/11/12/014635&#34; target=&#34;_blank&#34;&gt;短縮URLサービス利用時に表示された悪質な広告についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;みたいな事例もあった。&lt;/p&gt;
&lt;p&gt;Google は YouTube にて「アンチ広告ブロッカー」キャンペーン（？）を推し進めているみたいだが，動画に挟み込まれている広告の中には「どうみても詐欺やろ」みたいなのも多い。
もっとも YouTube に限るなら「Premium に入りなはれ」で済む話ではあるのだが&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;意地の悪い見方をすれば，広告元締めでもある Google は自社の Chrome を利用し，セキュリティやプライバシーを「人質」にしてユーザの行動を統制・搾取した上で，別の危険な状態に晒そうとしている，なんてな言い草もできるわけで，こうしたことに反発が出ても当然と言える。
まぁ，かつて IE による市場統制への反発で Firefox が追い風になった経緯も考えれば，今回も「アンチ Google/Chrome」の象徴として Firefox という御輿を担ぐのもありかもしれない（笑）&lt;/p&gt;
&lt;p&gt;注目を広告に乗っ取られることで本来意図した UX が崩れるのはブランドイメージの棄損だし，ましてや詐欺や Phishing の温床になるのはサイトオーナーとしては拙い事態だと思うんだけどねぇ。
それをユーザ側の「自己責任」と転嫁するなら「ダークパターン」と言ってしまっていいんじゃないだろうか。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/2668&#34;&gt;そしてユーザたちは広告ブロッカーをインストールしてそれに抵抗する。広告ブロッカーは、広告主やパブリッシャにはっきりと「嫌だと言ったら？」と言い返すための手段なのだ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/2668&#34;&gt;広告ブロッカーは「嫌ならどうする？」の表明である | p2ptk[.]org&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fujii-yuji.net/2023/12/10/230716&#34; target=&#34;_blank&#34;&gt;インターネット広告ポエム2023 - フジイユウジ::ドットネット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://magazine-k.jp/2016/01/25/spam-and-media/&#34; target=&#34;_blank&#34;&gt;メディアは（常に）スパムか？ « マガジン航[kɔː]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41LvknHYLwL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二（監修） (著), 山根 信二 (翻訳), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-15 (Release 2023-07-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0C9Z7KGRN (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版が出ている。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-11-21&#34;&gt;2023-11-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 Kindle 版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CK19L1HC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41iX72RfUuL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0CK19L1HC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ハッキング思考　強者はいかにしてルールを歪めるのか、それを正すにはどうしたらいいのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 高橋 聡 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2023-10-12 (Release 2023-10-12)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0CK19L1HC (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版が出てた！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-11-21&#34;&gt;2023-11-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ハッキング思考 Kindle 版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/430924744X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51KtN0YwWcL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/430924744X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;スパム[spam]:インターネットのダークサイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;フィン・ブラントン (著), 生貝直人 (監修), 成原慧 (監修), 松浦俊輔 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;河出書房新社 2015-12-25&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;430924744X (ASIN), 9784309247441 (EAN), 430924744X (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;とりあえず読みづらい。修飾語が多すぎるよ。ギリシア神話かっての。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-12-10&#34;&gt;2016-12-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- スパム --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Web ページ上の広告 UX については結城浩さんの「&lt;a href=&#34;https://mono.hyuki.net/20230925060011/&#34; target=&#34;_blank&#34; title=&#34;結城浩のひとりごと - mono.hyuki.net&#34;&gt;個人ブログ記事の途中に挟まる広告に思うこと&lt;/a&gt;」に共感する。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;YouTube 有料版は広告カット機能に限定してもう少し安くならんのだろうか。抱き合わせ商法で高く売りつけるのは止めてほしい。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>紙芝居用の簡易 Web サーバを Go 言語で書く【叱られ編】</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/simple-web-server-with-golang-3/" />
		<id>tag:text[.]Baldanders.info,2022-10-17:/golang/simple-web-server-with-golang-3/</id>
		<published>2022-10-17T13:28:28+00:00</published>
		<updated>2024-05-10T22:02:32+00:00</updated>
		<summary>またまた lint に叱られる</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;このネタも3回目なので強引にシリーズ化（笑）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/02/simple-web-server-with-golang/&#34; target=&#34;_blank&#34;&gt;紙芝居用の簡易 Web サーバを Go 言語で書く&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/embeded-filesystem/&#34; target=&#34;_blank&#34;&gt;紙芝居用の簡易サーバを書く【Go 1.16 版】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/simple-web-server-with-golang-3/&#34; target=&#34;_blank&#34;&gt;紙芝居用の簡易 Web サーバを Go 言語で書く【叱られ編】&lt;/a&gt; ←イマココ&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;net.JoinHostPort 関数を使え！&lt;/h2&gt;
&lt;p&gt;これまでの2回の記事を受けて，今回はこのコードからスタート。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;embed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;io/fs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//go:embed html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;assets&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;embed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;FS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;port number&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s:%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Open http://localhost%s/\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Open http://%s/\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Press ctrl+c to stop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FileServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このうち，色付きの行に関連する以下の tweet を見かけた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Goで、pathの結合はfilepath.Joinを使えというのは広まっている気がしているけど、同様にホストとポートを:で結合するのはnet.JoinHostPortを使ってほしい。fmt.Sprintfの場合、IPv6アドレスには:が含まれるので困ることになる。&lt;/p&gt;&amp;mdash; kadota (@plan9user) &lt;a href=&#34;https://twitter.com/plan9user/status/1581870129423405056?ref_src=twsrc%5Etfw&#34;&gt;October 17, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;p&gt;なるほど。
というわけで，先程の部分を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;net&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;JoinHostPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Itoa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に置き換えた。
これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run main.go -host &amp;#34;127.0.0.1&amp;#34; -p 8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Open http://127.0.0.1:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Press ctrl+c to stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;うんうん。
ちゃんと動くな。&lt;/p&gt;
&lt;h2&gt;またまた lint に叱られる&lt;/h2&gt;
&lt;p&gt;今回のコードに対して念のため lint をかけてみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ golangci-lint run --enable gosec
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;main.go:35:12: G114: Use of net/http serve function that has no support for setting timeouts (gosec)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if err := http.ListenAndServe(addr, nil); err != nil {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              ^
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おぅふ。
そっちかよ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.ListenAndServe()&lt;/code&gt; 関数の中身を見ると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ListenAndServe listens on the TCP network address addr and then calls&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Serve with handler to handle requests on incoming connections.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Accepted connections are configured to enable TCP keep-alives.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// The handler is typically nil, in which case the DefaultServeMux is used.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ListenAndServe always returns a non-nil error.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となっている。
たしかにタイムアウト関連のフィールドがまるっと無視（つまりゼロ値が設定）されてるな。&lt;/p&gt;
&lt;p&gt;試しに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を以下に置き換えてみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで機能は全く同じになる。
これを lint にかけてみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ golangci-lint run --enable gosec
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;main.go:35:13: G112: Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server (gosec)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    server := &amp;amp;http.Server{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Addr:    addr,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Handler: nil,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おおっ。
内容が変わった。
ふむふむ。
&lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Server.ReadHeaderTimeout&lt;/code&gt; フィールドに値を設定しろということか。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;code&gt;ReadHeaderTimeout&lt;/code&gt; は，名前の通り，リクエストヘッダ読み込み時のタイムアウト時間を指定する &lt;a href=&#34;https://pkg.go.dev/time&#34; target=&#34;_blank&#34; title=&#34;time package - time - Go Packages&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Duration&lt;/code&gt; 型のフィールドで，ゼロ値がセットされているとタイムアウトが設定されないらしい。
つまり &lt;code&gt;ReadHeaderTimeout&lt;/code&gt; フィールドは，悪意を持った巨大リクエストヘッダを読み込まされることで処理全体が stall しないようにするための措置のようだ。&lt;/p&gt;
&lt;p&gt;というわけで書き直す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;              &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;ReadHeaderTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3秒という値には特に意味はない。
どのくらいが適当なのかねぇ。&lt;/p&gt;
&lt;p&gt;とにかく，これで問題なく動作することを確認した後，3たび lint をかけてみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;golangci&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lint&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gosec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なんとか lint は通ったようだ。&lt;/p&gt;
&lt;p&gt;余談だが &lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Server.Handler&lt;/code&gt; フィールドにゼロ値（＝&lt;code&gt;nil&lt;/code&gt;）がセットされていると &lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.DefaultServeMux&lt;/code&gt; が既定のハンドラとして使われる。
また &lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Handle()&lt;/code&gt; 関数の中身は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Handle registers the handler for the given pattern&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// in the DefaultServeMux.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// The documentation for ServeMux explains how patterns are matched.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DefaultServeMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となっていて &lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.DefaultServeMux&lt;/code&gt; にハンドラを登録していることが分かる。
さらに &lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.DefaultServeMux&lt;/code&gt; は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// DefaultServeMux is the default ServeMux used by Serve.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DefaultServeMux&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaultServeMux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultServeMux&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ServeMux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と定義されている。
なので，先程のコードは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewServeMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FileServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;              &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;ReadHeaderTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と等価だ。
こちらのほうが却って分かりやすいかもしれない。&lt;/p&gt;
&lt;h2&gt;Ctrl+C でサーバを Graceful にシャットダウンする&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/net/http&#34; target=&#34;_blank&#34; title=&#34;http package - net/http - Go Packages&#34;&gt;&lt;code&gt;http&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Server&lt;/code&gt; のドキュメントに &lt;code&gt;Ctrl+C&lt;/code&gt; の SIGNAL を受信したら &lt;code&gt;Shutdown()&lt;/code&gt; メソッドを走らせて graceful にシャットダウンするサンプルが載っていたので，それを参考に組み込んで今回の最終コードとしてみた。
全体としてはこんな感じでどうだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;embed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;errors&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;io/fs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;net/http&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os/signal&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;strconv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//go:embed html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;assets&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;embed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;FS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;port number&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;hostname&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;net&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;JoinHostPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Itoa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Open http://localhost%s/\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Open http://%s/\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Press ctrl+c to stop&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewServeMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FileServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;FS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;Addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;              &lt;span class=&#34;nx&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;Handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;           &lt;span class=&#34;nx&#34;&gt;serverMux&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;ReadHeaderTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;idleConnsClosed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;idleConnsClosed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;sigint&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;chan&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Notify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sigint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Interrupt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sigint&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Shutdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;shutdown error:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\ngraceful shutdown&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ListenAndServe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Is&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ErrServerClosed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;server error:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;idleConnsClosed&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run main.go -host &amp;#34;127.0.0.1&amp;#34; -p 8080
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Open http://127.0.0.1:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Press ctrl+c to stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;^C
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;graceful shutdown
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Ctrl+C&lt;/code&gt; でちゃんとシャットダウンしてるかな。
よしよし。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://christina04.hatenablog.com/entry/go-timeouts&#34; target=&#34;_blank&#34;&gt;Goのnet/httpのtimeoutについて - Carpe Diem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;122&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。と思ったら絶版状態らしい（2025-01 現在）。復刊を望む！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
</content>
	</entry><entry>
		<title>結局 Google Fonts に巻き戻した。そしてモリサワ BIZ UD フォント採用へ</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/09/rollback-web-fonts/" />
		<id>tag:text[.]Baldanders.info,2022-09-18:/remark/2022/09/rollback-web-fonts/</id>
		<published>2022-09-18T12:31:41+00:00</published>
		<updated>2022-09-19T08:49:02+00:00</updated>
		<summary>とほほ orz</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;実はさっき2022年3月に公開された&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1399117.html&#34; target=&#34;_blank&#34;&gt;「BIZ UD」フォントが「Google Fonts」へ ～モリサワのユニバーサルフォント - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という記事を見つけたのだが，この中で&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://forest.watch.impress.co.jp/docs/news/1399117.html&#34;&gt;TrueType版に関しては教育現場で利用されることを考慮し、「IPAフォント」v003（最新）に収録されている全文字をカバーしているという&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1399117.html&#34;&gt;「BIZ UD」フォントが「Google Fonts」へ&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という記述&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; を見て「え？ じゃあ &lt;a href=&#34;https://text.baldanders.info/remark/2022/09/morisawa-biz-ud-fonts/&#34; target=&#34;_blank&#34; title=&#34;モリサワ BIZ UD 明朝/ゴシック Web フォント&#34;&gt;神（&lt;code&gt;U+FA19&lt;/code&gt;）とか ㈱（&lt;code&gt;U+3231&lt;/code&gt;）とかが表示できない&lt;/a&gt;のおかしくね？」と思い，もう少し真面目に調べてみた。&lt;/p&gt;
&lt;p&gt;したら，収録文字を制限してるのはどうやら &lt;a href=&#34;https://fonts.bunny.net/&#34; target=&#34;_blank&#34; title=&#34;Bunny Fonts | Explore Faster &amp;amp; GDPR friendly Fonts&#34;&gt;Bunny Fonts&lt;/a&gt; 側のようなのだ。
&lt;a href=&#34;https://www.google.com/fonts/&#34; target=&#34;_blank&#34; title=&#34;Browse Fonts - Google Fonts&#34;&gt;Google Fonts&lt;/a&gt; で BIZ UD フォントを検索したら「神」も「㈱」も「①」もちゃんと表示してくれた。&lt;/p&gt;
&lt;p&gt;たぶん &lt;a href=&#34;https://fonts.bunny.net/&#34; target=&#34;_blank&#34; title=&#34;Bunny Fonts | Explore Faster &amp;amp; GDPR friendly Fonts&#34;&gt;Bunny Fonts&lt;/a&gt; は文字数を抑えるためにわざと JIS X 0208 の範囲しか収録してないんだろうね（邪推）。
でも異体字セレクタで指示する「葛󠄀（U+845B U+E0100）」なんかは &lt;a href=&#34;https://fonts.bunny.net/&#34; target=&#34;_blank&#34; title=&#34;Bunny Fonts | Explore Faster &amp;amp; GDPR friendly Fonts&#34;&gt;Bunny Fonts&lt;/a&gt; でも表示できるっぽいんだよなぁ。
基準が分からん。&lt;/p&gt;
&lt;p&gt;とりあえず BIZ UD フォント側を疑ってまじすんません &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;&amp;#x1f647;&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;正直このブログでは機種依存文字（古語）や異体字等は割と使うので削られると困るし &lt;a href=&#34;https://fonts.bunny.net/&#34; target=&#34;_blank&#34; title=&#34;Bunny Fonts | Explore Faster &amp;amp; GDPR friendly Fonts&#34;&gt;Bunny Fonts&lt;/a&gt; を使う限り NOTO JP フォントでも同じようになるみたいなので，泣く泣く &lt;a href=&#34;https://www.google.com/fonts/&#34; target=&#34;_blank&#34; title=&#34;Browse Fonts - Google Fonts&#34;&gt;Google Fonts&lt;/a&gt; に戻すことにした。
そんで，どうせ &lt;a href=&#34;https://www.google.com/fonts/&#34; target=&#34;_blank&#34; title=&#34;Browse Fonts - Google Fonts&#34;&gt;Google Fonts&lt;/a&gt; に戻すならモリサワ BIZ UD フォントで全然問題ないやろ，ということで最終的に以下の指定で Web フォントを読み込んでいる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;preconnect&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://fonts.googleapis.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;preconnect&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://fonts.gstatic.com&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;crossorigin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://fonts.googleapis.com/css2?family=BIZ+UDGothic:wght@400;700&amp;amp;family=BIZ+UDMincho&amp;amp;family=Inconsolata:wght@400;700&amp;amp;family=Noto+Color+Emoji&amp;amp;family=Noto+Sans:wght@400;700&amp;amp;family=Noto+Serif&amp;amp;display=swap&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;簡単に言うと日本語部分のみ BIZ UD ゴシック/明朝フォントを使い，それ以外は従来の NOTO フォント及び Inconsolata フォントを使う感じ。
これで英文の引用や&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;As a best practice, remember to consume software from the official project repos and watch out for potential typosquats or repository forks/clones that may appear identical to the original project but hide malware.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;35,000 code repos not hacked—but clones flood GitHub to serve malware&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;プログラム・コードは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, 世界&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;従来どおりに表示するようにしている。&lt;/p&gt;
&lt;p&gt;ほんじゃあ，まぁ，これからこれで行きますかね。
モリサワ BIZ UD フォントで表示できない文字が出てきたら最終的に NOTO JP フォントにまで巻き戻すかも知れんけど（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/12/japanese-fonts-by-google-cdn/&#34; target=&#34;_blank&#34;&gt;Google Fonts が日本語に対応してた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/06/migrate-to-bunny-fonts-from-google-fonts/&#34; target=&#34;_blank&#34;&gt;Google Fonts から Bunny Fonts に乗り換える&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;IPAex フォントのほうは2019年に &lt;a href=&#34;https://moji.or.jp/ipafont/releasenote00401/&#34; target=&#34;_blank&#34; title=&#34;IPAexリリースノート Ver.004.01 | 一般社団法人 文字情報技術促進協議会&#34;&gt;Ver.004.01&lt;/a&gt; が出ている。例の令和の合字「㋿（&lt;code&gt;U+32FF&lt;/code&gt;）」への対応である。ただ BIZ UD フォントはこの字もちゃんと含んでいるように見える。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
