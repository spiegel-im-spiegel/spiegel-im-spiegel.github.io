<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of terminal - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/terminal/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/terminal/index.xml" />
	<id>tag:text.Baldanders.info,2020-10-27:/tags</id>
	<updated>2020-10-27T22:17:46+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Windows Terminal × NYAGOS × Scoop ＝ ♥</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/10/windows-terminal-and-nyagos-and-scoop/" />
		<id>tag:text.Baldanders.info,2020-10-27:/remark/2020/10/windows-terminal-and-nyagos-and-scoop/</id>
		<published>2020-10-27T13:17:46+00:00</published>
		<updated>2020-11-08T09:18:51+00:00</updated>
		<summary>とりあえず ATOM エディタと NYAGOS を入れたい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;アルファ・ベータ・オメガの割り振りはご想像にお任せします &lt;abbr class=&#34;emoji-chars&#34; title=&#34;:smile:&#34;&gt;😄&lt;/abbr&gt; って，そういう話ではない。&lt;/p&gt;
&lt;p&gt;さて，職場で Windows 10 機を支給されたので，とりあえず &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタと &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; を入れたいわけですよ。&lt;/p&gt;
&lt;h2&gt;Windows 10 に &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; を入れる&lt;/h2&gt;
&lt;p&gt;まぁこちらはサラッと。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;公式ページ&lt;/a&gt;からインストーラを取ってきて普通にインストールすればいいだけ。
なのだが，何故か Windows 版はコマンドラインからの起動が冷遇されているのよ。
古いバージョンにはあった &lt;code&gt;atom.cmd&lt;/code&gt; がなくなっている。&lt;/p&gt;
&lt;p&gt;じゃあ，どうやって起動するのかというと “System Settings” で&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./atom-system-settings.png&#34;&gt;&lt;img src=&#34;./atom-system-settings.png&#34; srcset=&#34;./atom-system-settings.png 734w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;System Settings in ATOM&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./atom-system-settings.png&#34;&gt;System Settings in ATOM&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;てな感じにエクスプローラ等のコンテキストメニューから開けるように設定できる。
また &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; が起動している状態でタスクバーの &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; アイコンをピン留めしておけば&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./atom-in-task-bar.png&#34;&gt;&lt;img src=&#34;./atom-in-task-bar.png&#34; srcset=&#34;./atom-in-task-bar.png 525w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ATOM icon in task bar&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;./atom-in-task-bar.png&#34;&gt;ATOM icon in task bar&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;みたいな感じにコンテキストメニューを展開できる。&lt;/p&gt;
&lt;p&gt;困るのが &lt;code&gt;apm&lt;/code&gt; コマンドなのだが，これにはパスを通さずに直接カレントまで降りて操作するしかないだろう。
v1.52.0 なら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd C:\Users\username\AppData\Local\atom\app-1.52.0\resources\app\apm\bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まで降りる。
この場所で apm を使ってログインできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm login
Welcome to Atom!

Before you can publish packages, you&amp;#39;ll need an API token.

Visit your account page on Atom.io https://atom.io/account,
copy the token and paste it below when prompted.

Press [Enter] to open your account page on Atom.io.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここで &lt;code&gt;[Enter]&lt;/code&gt; キーを押すと Web ブラウザでアカウントページが開く（要 GitHub アカウント）。
開かない場合は Web ブラウザで直接 &lt;a href=&#34;https://atom.io/account&#34;&gt;&lt;code&gt;https://atom.io/account&lt;/code&gt;&lt;/a&gt; を開く。
アカウントページに表示されたアクセス・トークンを入力すればログイン完了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Token&amp;gt; ****************
Saving token to Keychain done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;あとは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm stars --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で &lt;abbr class=&#34;emoji-chars&#34; title=&#34;:star:&#34;&gt;⭐&lt;/abbr&gt; を付けたパッケージをまとめてインストールできる。
ちなみに，どのパッケージに &lt;abbr class=&#34;emoji-chars&#34; title=&#34;:star:&#34;&gt;⭐&lt;/abbr&gt; を付けたかは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm stars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で確認できる。
その他の細々した設定は &lt;a href=&#34;https://gist.github.com/spiegel-im-spiegel/e6e9c7340987f1607b2c&#34; title=&#34;ATOM Editor の設定（カスタマイズ, Windows 環境用）&#34;&gt;Gist に貼り付けておいた&lt;/a&gt;のを流用した。
なんでも取っておくものである &lt;abbr class=&#34;emoji-chars&#34; title=&#34;:smile:&#34;&gt;😄&lt;/abbr&gt;&lt;/p&gt;
&lt;h2&gt;Windows Terminal のインストール&lt;/h2&gt;
&lt;p&gt;これでようやく「メモ帳」から脱することができたので，本格的に環境を作っていこう。&lt;/p&gt;
&lt;p&gt;かつて Windows 7 を使ってた頃はターミナル・エミュレータに ConEmu を使っていたが，本家 Microsoft からようやくまともなターミナル・エミュレータがリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/windows/terminal/&#34;&gt;Windows ターミナルの概要 | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows Terminal は Microsoft Store からインストールできる。
ひとまずこれをインストールして起動し，既定の PowerShell 上で作業する。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; のインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; は Windows 用のパッケージ・マネージャである。
Windows 用のパッケージ・マネージャといえば &lt;a href=&#34;https://chocolatey.org/&#34; title=&#34;Chocolatey Software | Chocolatey - The package manager for Windows&#34;&gt;Chocolatey&lt;/a&gt; が有名だが，今回は &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; で。
&lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; の特徴は以下の通り。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;利用に管理者権限は不要！&lt;/li&gt;
&lt;li&gt;実行ファイルは ~\scoop\shims に集約され、環境変数 PATH の肥大化が抑制される&lt;/li&gt;
&lt;li&gt;インストーラのセットアップが簡単&lt;/li&gt;
&lt;li&gt;nyagos が公式レポジトリにある (Chocolatey にもあるけど）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;q&gt;&lt;a href=&#34;https://zenn.dev/zetamatta/books/5ac80a9ddb35fef9a146&#34;&gt;scoop / nyagos で始めるコマンドライン生活&lt;/a&gt;&lt;/q&gt;より&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;では早速。&lt;/p&gt;
&lt;p&gt;まずは PowerShell でスクリプトを起動できるよう権限を取得する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;PS &amp;gt; Set-ExecutionPolicy RemoteSigned -scope CurrentUser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;既に許可を取得している場合はこの操作は不要である。
そうしておいて &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; をインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;PS &amp;gt; iwr -useb get.scoop.sh | iex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで OK。
簡単！&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; のインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; のインストールは &lt;code&gt;scoop install&lt;/code&gt; コマンドで一発 OK。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;PS &amp;gt; scoop install nyagos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;
&lt;h3&gt;Windows Terminal に &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; を登録する&lt;/h3&gt;
&lt;p&gt;Windows Terminal では PowerShell を含む複数の shell を登録できる。&lt;/p&gt;
&lt;p&gt;まずは &lt;code&gt;[Ctrl+,]&lt;/code&gt; で &lt;code&gt;config.json&lt;/code&gt; ファイル（のコピー）がメモ帳で表示される（コメントを端折っているので注意）。
これを編集して &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; を登録するのだ。
具体的には以下の部分を追記する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://aka.ms/terminal-profiles-schema&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;defaultProfile&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;copyOnSelect&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;copyFormatting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;profiles&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;defaults&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;guid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Windows PowerShell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;commandline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;powershell.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;guid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{0caa0dad-35be-5f56-a8ff-afceeeaa6101}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;コマンド プロンプト&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;commandline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cmd.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;guid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{b453ae62-4e3d-5e58-b989-0a998ec441b8}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Azure Cloud Shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Windows.Terminal.Azure&amp;#34;&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;guid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{19ddaf5e-e045-481a-bf88-37f7ebe66292}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Nihongo Yet Another GOing Shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;commandline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;%USERPROFILE%\\scoop\\shims\\nyagos.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;cursorShape&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vintage&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;startingDirectory&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;%USERPROFILE%&amp;#34;&lt;/span&gt;
&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;schemes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[],&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;actions&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;copy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;singleLine&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ctrl+c&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;paste&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ctrl+v&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;find&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ctrl+shift+f&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;splitPane&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;split&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;auto&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;splitMode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;duplicate&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;keys&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;alt+shift+d&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちなみに &lt;code&gt;guid&lt;/code&gt; 項目はローカルマシン内で一意であればなんでもいいのだが（上の記述をそのままコピペしても無問題），気になるのであれば PowerShell の以下のコマンドで取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;PS &amp;gt; New-Guid

Guid
----
6c48ee13-e32b-4937-95a5-7e95a2e88613
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更に &lt;code&gt;config.json&lt;/code&gt; ファイル（のコピー）の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;defaultProfile&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{61c54bbd-c2c6-5271-96e7-009a87ff44bf}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;の部分を &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; の GUID に書き換えれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;defaultProfile&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;{19ddaf5e-e045-481a-bf88-37f7ebe66292}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Windows Terminal の既定の shell を &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; にできる。&lt;/p&gt;
&lt;p&gt;編集した &lt;code&gt;config.json&lt;/code&gt; ファイル（のコピー）を保存すれば設定が反映される。
ふぃー，よーやくここまでたどり着いた。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; を使った楽しいアレコレは以下の Zenn 本に書かれている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zetamatta/books/5ac80a9ddb35fef9a146&#34;&gt;scoop / nyagos で始めるコマンドライン生活&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述のセットアップについても，もう少し丁寧に書かれているので，是非どうぞ。&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; で GUID を取得する&lt;/h3&gt;
&lt;p&gt;そういや &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; の &lt;a href=&#34;https://pkg.go.dev/github.com/google/uuid&#34;&gt;&lt;code&gt;github.com/google/uuid&lt;/code&gt;&lt;/a&gt; パッケージを使えば &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc4122.html&#34; title=&#34;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&#34;&gt;UUID&lt;/a&gt; を取得可能だが， UUID は実質 GUID と同じなので，これを利用して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/google/uuid&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば簡単に UUID/GUID が取れる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run sample.go 
f6bdc505-e417-4b7d-a247-a06504cf03a9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; を使うなら git は必須&lt;/h2&gt;
&lt;p&gt;これでインストールは全て完了だが，今後のためにもう少し &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; で遊んでみよう。&lt;/p&gt;
&lt;p&gt;まず &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; のバージョンを見ようとしたら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop -v
Current Scoop version:
git : 用語 &amp;#39;git&amp;#39; は、コマンドレット、関数、スクリプト ファイル、または操作可能なプログラムの名前として認識されません。
名前が正しく記述されていることを確認し、パスが含まれている場合はそのパスが正しいことを確認してから、再試行してください
。
発生場所 行:1 文字:1
+ git --no-pager log --oneline HEAD -n 1
+ ~~~
    + CategoryInfo          : ObjectNotFound: (git:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;って，どエラ怒られた（笑） どうやら &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; はパッケージ管理を git ベースで行っているらしく，ちゃんと使うなら git の導入が必須のようだ。
ほんじゃあ，まぁ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop install git
Scoop uses Git to update itself. Run &amp;#39;scoop install git&amp;#39; and try again.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おっ，アップデートした後にもっかいやれって言ってるな。
ならば，アップデートしよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop update
Updating Scoop...
Updating &amp;#39;main&amp;#39; bucket...
Checking repo... ok
The main bucket was added successfully.
Scoop was updated successfully!
&amp;#39;itcode&amp;#34;&amp;#39; は、内部コマンドまたは外部コマンド、
操作可能なプログラムまたはバッチ ファイルとして認識されていません。
exit status 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おりょ，また変なエラーが出たよ。
&lt;code&gt;itcode&amp;quot;&lt;/code&gt; 云々というのは PowerShell 絡みらしい。
なので，同じコマンドを PowerShell 上で走らせれば問題なく完了する。&lt;/p&gt;
&lt;p&gt;うむ，次回から気をつけよう。&lt;/p&gt;
&lt;p&gt;これでもっかい&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop update git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば，最新版が取れるわけだ。&lt;/p&gt;
&lt;h2&gt;ついでに &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; で &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; もインストールする&lt;/h2&gt;
&lt;p&gt;ついでに &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; で &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; もインストールしてみよう。
あるかな？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop search gnupg
&amp;#39;main&amp;#39; bucket:
    gnupg (2.2.23)
    gnupg1 (1.4.23)

$ scoop search gpg
&amp;#39;main&amp;#39; bucket:
    gnupg1 (1.4.23) --&amp;gt; includes &amp;#39;gpg.exe&amp;#39;
    gpg (2.2.23)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;どっちだよ（笑）&lt;/p&gt;
&lt;p&gt;実はこれ，中身は同じなのだが別々のパッケージとしてインストールされちゃうようだ。
ふむむー。&lt;/p&gt;
&lt;p&gt;まぁ，いいや。
今回は &lt;code&gt;gnupg&lt;/code&gt; で。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ scoop install gnupg
Installing &amp;#39;gnupg&amp;#39; (2.2.23) [64bit]

...

Linking ~\scoop\apps\gnupg\current =&amp;gt; ~\scoop\apps\gnupg\2.2.23
Persisting home
&amp;#39;gnupg&amp;#39; (2.2.23) was installed successfully!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; で提供されるパッケージのうち，シングルバイナリのコマンドは &lt;code&gt;%USERPROFILE%\scoop\shims&lt;/code&gt; フォルダに集められるのだが， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のように複数のバイナリで構成されているものは専用のフォルダを作り環境変数 &lt;code&gt;PATH&lt;/code&gt; にインストールしたフォルダを追加するようだ。
その際に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Linking ~\scoop\apps\gnupg\current =&amp;gt; ~\scoop\apps\gnupg\2.2.23
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のように &lt;code&gt;current&lt;/code&gt; フォルダをシンボリックリンクとして設置することで複数のバージョンに対応できるようにしているみたい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の動作確認をしておこう。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gpg --version
gpg (GnuPG) 2.2.23
libgcrypt 1.8.6
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: C:/Users/username/scoop/apps/gnupg/current/home
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上述の &lt;code&gt;Home&lt;/code&gt; だが，これもシンボリックリンクが切られていて，実体は &lt;code&gt;%USERPROFILE%\scoop\persist\gnupg\home&lt;/code&gt; にある。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【2020-11-02 追記】&lt;/strong&gt;
&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; については以下の記事でもう少し掘り下げて紹介している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/gnupg-home-in-windows/&#34;&gt;GnuPG の HOME はどこにある？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2&gt;今回はここまで&lt;/h2&gt;
&lt;p&gt;おっと。
昼休憩が終わったようだ。
次回があれば，また今度。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lukesampson/scoop&#34;&gt;lukesampson/scoop: A command-line installer for Windows.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/iakio/items/78e7f098047ea0a47d70&#34;&gt;Windows用のコマンドラインインストーラScoop - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/Dooteeen/items/12dc8fb14042888113d0&#34;&gt;Scoopを使ったWindows環境構築のススメ - Super!! - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hogehoge.tk/guid/&#34;&gt;GUID生成ツール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zetamatta/books/c84cbe23093eee1b5830&#34;&gt;/bin/shに慣れた人に贈るバッチファイルの書き方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.satotaichi.info/scoop/index.html&#34;&gt;ScoopでWindowsにおける開発環境構築を最適化しよう | さにあらず&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sozaiya/items/fd7ec3000939f0697939&#34;&gt;scoopを使ったwindows環境構築の実例 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.isonishi.com/posts/scoop-git-sourcetree/&#34;&gt;Scoop で Git と SourceTree をインストール - ありふれた備忘録&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>Ubuntu に Visual Studio Code を導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/05/installing-vscode-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2020-05-28:/remark/2020/05/installing-vscode-in-ubuntu/</id>
		<published>2020-05-28T03:31:57+00:00</published>
		<updated>2020-05-29T06:28:31+00:00</updated>
		<summary>継続的に使うなら今後も追記するつもり。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/x-terminal-with-atom/&#34; title=&#34;とりあえず ATOM エディタ内ターミナルを x-terminal に乗り換えた&#34;&gt;ちうわけで&lt;/a&gt; &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;Visual Studio Code&lt;/a&gt;を導入して試してみることにした。&lt;/p&gt;
&lt;p&gt;継続的に使うなら今後も追記するつもり。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; のインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; をインストールするのであれば &lt;a href=&#34;https://github.com/snapcore/snapd&#34; title=&#34;snapcore/snapd: The snapd and snap tools enable systems to work with .snap files.&#34;&gt;Snap&lt;/a&gt; を使うのが一番簡単なのだが，うちの環境では何故か &lt;a href=&#34;https://github.com/snapcore/snapd&#34; title=&#34;snapcore/snapd: The snapd and snap tools enable systems to work with .snap files.&#34;&gt;Snap&lt;/a&gt; 版で日本語入力ができないという致命的な問題があるため，今回は公式サイトから deb ファイルをダウンロードして直接 &lt;code&gt;apt install&lt;/code&gt; した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install ./code_1.45.1-1589445302_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;インストールに成功すれば以下のコマンドでバージョンが取得できるはず。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ code -v
1.45.1
5763d909d5f12fe19f215cbfdd29a91c0fa9208a
x64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;よしよし。
ちゃんと最新バージョンだな。&lt;/p&gt;
&lt;p&gt;実際に &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; を起動してアプリケーション情報（メニューの &lt;code&gt;Help&lt;/code&gt; → &lt;code&gt;About&lt;/code&gt; を選択）も確認してみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./about-vscode.png&#34;&gt;&lt;img src=&#34;./about-vscode.png&#34; srcset=&#34;./about-vscode.png 524w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;うむうむ。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; のカスタマイズ&lt;/h2&gt;
&lt;p&gt;カスタマイズはメニューの &lt;code&gt;File&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; から選択できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;File&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; → &lt;code&gt;Settings&lt;/code&gt; で設定画面が開く（または &lt;code&gt;Ctrl+,&lt;/code&gt; キー押下）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;File&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; → &lt;code&gt;Keyboard Shortcuts&lt;/code&gt; でキー割当の確認・変更ができる
&lt;ul&gt;
&lt;li&gt;既定のキー割当は &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; とほとんど同じなので悩むところは少なかった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;File&lt;/code&gt; → &lt;code&gt;Preferences&lt;/code&gt; → &lt;code&gt;Keymaps&lt;/code&gt; で他エディタの割当を導入することもできる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f1&lt;/code&gt; キー押下でもコマンド・パレット（Show All Commands）が開く&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;設定の行方&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; は &lt;code&gt;$HOME&lt;/code&gt; ディレクトリに以下の設定ディレクトリを作成する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.vscode/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.config/Code/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このうち，ユーザ設定は &lt;code&gt;~/.config/Code/User/&lt;/code&gt; ディレクトリ直下の以下のファイルに書き込まれる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;settings.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keybindings.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低でもこれらのファイルを保持っておけば再現しやすくなるだろう。&lt;/p&gt;
&lt;h3&gt;とりあえず導入してみた拡張機能&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; エディタみたいに印を付けておいて纏めてインストールできるといいんだけどねぇ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig&#34;&gt;EditorConfig for VS Code - Visual Studio Marketplace&lt;/a&gt; : &lt;a href=&#34;https://editorconfig.org/&#34;&gt;EditorConfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=mosapride.zenkaku&#34;&gt;zenkaku - Visual Studio Marketplace&lt;/a&gt; : 全角空白文字を色付きで表示できる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=masakit.zenkaku-hankaku&#34;&gt;Zenkaku-Hankaku - Visual Studio Marketplace&lt;/a&gt; : 全角⇔半角文字変換&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons&#34;&gt;vscode-icons - Visual Studio Marketplace&lt;/a&gt; : file icon theme&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=jsynowiec.vscode-insertdatestring&#34;&gt;Insert Date String - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ego-digital.vscode-powertools&#34;&gt;Power Tools - Visual Studio Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/setup/linux&#34;&gt;Running Visual Studio Code on Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yoshiyasu1111/items/e21a77ed68b52cb5f7c8&#34;&gt;UbuntuにVSCodeをインストールする3つの方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/satokaz/items/cb45d82f6f8f1e24c0d6&#34;&gt;VS Code でドキュメントの空白文字を見やすくしてみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/1708/23/news026.html&#34;&gt;Visual Studio Codeの設定「虎の巻」：IDE編 (1/3)：特集：Visual Studio Codeを使いこなそう！ - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>とりあえず ATOM エディタ内ターミナルを x-terminal に乗り換えた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/05/x-terminal-with-atom/" />
		<id>tag:text.Baldanders.info,2020-05-28:/remark/2020/05/x-terminal-with-atom/</id>
		<published>2020-05-28T02:23:04+00:00</published>
		<updated>2020-05-28T02:30:42+00:00</updated>
		<summary>ATOM における Electron の外れっぷりはどうにかならないのかなぁ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先週， &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; エディタの &lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.47.0&#34; title=&#34;Release 1.47.0 · atom/atom&#34;&gt;1.47 がリリース&lt;/a&gt;され &lt;a href=&#34;https://electronjs.org/&#34; title=&#34;Electron | Build cross platform desktop apps with JavaScript, HTML, and CSS.&#34;&gt;Electron&lt;/a&gt; も v5 ベースに上がったのだが，またもや &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; が動かなくなった。
今回はちゃんとリビルドできてるのに。&lt;/p&gt;
&lt;p&gt;一週間待ったが &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; がアップデートされる気配がないので，諦めて他のパッケージを物色することにした。
まぁ，今は Linux/&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; なので Windows の頃よりは選択肢が多いだろう。&lt;/p&gt;
&lt;p&gt;ちうわけで幾つか試した結果，以下のパッケージに乗り換えた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/x-terminal&#34;&gt;x-terminal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このパッケージは atom-xterm からの fork らしいのだが，本家はメンテされなくなって久しいようだ。
&lt;a href=&#34;https://atom.io/packages/x-terminal&#34;&gt;x-terminal&lt;/a&gt; の方はマメにアップデートされているようなので，しばらくはこちらを使ってみることにする。&lt;/p&gt;
&lt;p&gt;しかし &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; における &lt;a href=&#34;https://electronjs.org/&#34; title=&#34;Electron | Build cross platform desktop apps with JavaScript, HTML, and CSS.&#34;&gt;Electron&lt;/a&gt; の外れっぷりはどうにかならないのかなぁ。
v5 なんかとっくの昔にサポートから外れてるっちうねん。
この機会に真剣に VS Code への乗り換えを検討したほうがええかもしらん&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1254642.html&#34;&gt;アプリフレームワーク「Electron 9」が公開 ～「PDFium」ベースのPDFリーダーが有効化 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;5年前に秀丸から &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; に&lt;a href=&#34;https://text.baldanders.info/remark/2015/atom-editor/&#34; title=&#34;ATOM Editor に関するメモ&#34;&gt;乗り換えた&lt;/a&gt;のだが，当時 VS Code は登場したばかりでチューニングの仕方とかよく分からなかったのだ。まぁ GitHub は Microsoft に買収されちゃったし &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; はそのうちなくなって VS Code に一本化されちゃうのかもねぇ。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>ATOM 1.41 にアップデートしたら platformio-ide-terminal が動かねー！ と思ったら</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/10/platformio-ide-terminal-in-atom/" />
		<id>tag:text.Baldanders.info,2019-10-25:/remark/2019/10/platformio-ide-terminal-in-atom/</id>
		<published>2019-10-25T13:33:09+00:00</published>
		<updated>2020-11-04T11:24:00+00:00</updated>
		<summary>色々と試行錯誤してみたが，どうやら Ubuntu の APT でインストールしている node.js と ATOM 内部の node.js が衝突しているらしい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【2020-11-04 追記】&lt;/strong&gt;
既に私は &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; に見切りをつけて &lt;a href=&#34;https://atom.io/packages/x-terminal&#34;&gt;x-terminal&lt;/a&gt; に乗り換えました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/x-terminal-with-atom/&#34;&gt;とりあえず ATOM エディタ内ターミナルを x-terminal に乗り換えた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;メインで使ってるのは &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; ですが， Windows 環境でも問題なく動きます。
&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; もちゃんと動く。
ブラボー！&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;最近は猫も杓子も Vim か VSCode で寂しい限りだが， &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 1.41 がリリースされ，ようやく &lt;a href=&#34;https://electronjs.org/&#34; title=&#34;Electron | Build cross platform desktop apps with JavaScript, HTML, and CSS.&#34;&gt;Electron&lt;/a&gt; 4 ベースの構成になった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.41.0&#34;&gt;Release 1.41.0 · atom/atom · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それはいいのだが，また &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; が動かなくなった。
しかも &lt;a href=&#34;https://text.baldanders.info/release/2019/07/atom-1_39-is-released/&#34; title=&#34;TOM エディタ v.1.39 がリリースされたのだが...
&#34;&gt;1.39 のとき&lt;/a&gt;とは様子が異なるようだ。&lt;/p&gt;
&lt;p&gt;色々と試行錯誤してみたが，どうやら &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT でインストールしている &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; と &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 内部の &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; が衝突しているらしい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt purge nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 側の &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; をいったん削除した上で &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; を入れ直したら問題なく動いた。&lt;/p&gt;
&lt;p&gt;ちなみに APT で管理されている &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; は素の設定で&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apt show nodejs
Package: nodejs
Version: 10.15.2~dfsg-2ubuntu1
Priority: extra
Section: universe/web
Origin: Ubuntu
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;だった。
一方 &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 1.41 の構成は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ atom -v
Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

$ apm -v
apm  2.4.3
npm  6.2.0
node 10.2.1 x64
atom 1.41.0
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と何とも微妙な感じである。
大丈夫か，これ。&lt;/p&gt;
&lt;p&gt;更に更に余談だが &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT に最新の &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; を組み込むには，以下のようにスクリプトを取ってきて実行すればいいらしい（以下は LTS 版の &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt; 12 を組み込む場合）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ただし現時点（2019-10-25）で &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 19.10 には対応してなかった &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodesource/distributions&#34;&gt;nodesource/distributions: NodeSource Node.js Binary Distributions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考（にならない）図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B00B47FIDC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51F&amp;#43;fSE3o&amp;#43;L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00B47FIDC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;PLUTO 豪華版 コミック 全8巻完結セット (ビッグコミックススペシャル)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;浦沢 直樹 (著)&lt;/dd&gt;
    &lt;dd&gt;小学館 2009-06-20&lt;/dd&gt;
    &lt;dd&gt;コミック&lt;/dd&gt;
    &lt;dd&gt;B00B47FIDC (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「鉄腕アトム」のスピンオフ作品の中では一番面白かった。やっぱ鉄腕アトムは「残酷」じゃないとね（笑） 浦沢直樹さんはオリジナル・シナリオよりこういうタイプの作品のほうがダントツに面白いな。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-10-25&#34;&gt;2019-10-25&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PLUTO --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B00YRVO8EC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/61Rdpb2-zML._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00YRVO8EC?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;アトム ザ・ビギニング1(ヒーローズコミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;手塚治虫 (著), ゆうきまさみ (著), カサハラテツロー (著)&lt;/dd&gt;
    &lt;dd&gt;ヒーローズ 2015-06-05 (Release 2015-06-05)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00YRVO8EC (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;あれ。4年前に買ったけど全く読んでない。 Kindle の肥やしになってるな（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-10-25&#34;&gt;2019-10-25&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- アトム ザ・ビギニング --&gt;
</content>
	</entry><entry>
		<title>ATOM エディタ v.1.39 がリリースされたのだが...</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/07/atom-1_39-is-released/" />
		<id>tag:text.Baldanders.info,2019-07-25:/release/2019/07/atom-1_39-is-released/</id>
		<published>2019-07-25T13:39:18+00:00</published>
		<updated>2020-01-03T06:05:57+00:00</updated>
		<summary>実験的に組み込まれている ripgrep がめっさ速い。 こりゃあええわ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;昨夜寝る前にメールをチェックしてたら &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; エディタ v.1.39.0 がリリースされてた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.39.0&#34;&gt;Release 1.39.0 · atom/atom · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; は公式の APT リポジトリを公開しているので &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; ユーザはそのリポジトリを登録してインストールすればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
$ sudo sh -c &amp;#39;echo &amp;#34;deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main&amp;#34; &amp;gt; /etc/apt/sources.list.d/atom.list&amp;#39;
$ sudo apt update
$ sudo apt install atom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;変更や修正は色々あるが，今回の目玉はベースになっている Electron や Chrome のバージョンを上げたことだろう。
うちの環境だとこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ atom -v
Atom    : 1.39.0
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Electron が3系になったおかげで &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 環境でメニューバーの文字がちゃんと見えるようになった。
まぁ見えなくても別に困ってはいなかったのだが（笑）&lt;/p&gt;
&lt;p&gt;悪いお知らせ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; が動かなくなった。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;mailto:node-pty-prebuilt@0.7.6&#34;&gt;node-pty-prebuilt@0.7.6&lt;/a&gt; – The module &amp;lsquo;/home/username/.atom/packages/platformio-ide-terminal/node_modules/node-pty-prebuilt/build/Release/pty.node&amp;rsquo; was compiled against a different Node.js version using NODE_MODULE_VERSION 57. This version of Node.js requires NODE_MODULE_VERSION 64. Please try re-compiling or re-installing the module (for instance, using &lt;code&gt;npm rebuild&lt;/code&gt; or &lt;code&gt;npm install&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;どうもコンパイル済みパッケージの内部バージョンが合わなくてコンフリクトを起こしているらしい。
これは最新バージョンが上がってくるのを待つしかないか。&lt;/p&gt;
&lt;p&gt;エディタ上でターミナルが使えないのはめっさ不便なんだが。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;追記 2019-07-30&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;直った。
というか，私が間違ってました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 起動時のエラー詳細を開くと以下のような画面になるのだが&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./error.png&#34;&gt;&lt;img src=&#34;./error.png&#34; srcset=&#34;./error.png 1918w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;ここで右上の &lt;code&gt;[Rebuild Package]&lt;/code&gt; ボタンを押すと（ボタンだったのかよ &lt;code&gt;orz&lt;/code&gt;）パッケージのリビルドを行う。
リビルドが終わると&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./done.png&#34;&gt;&lt;img src=&#34;./done.png&#34; srcset=&#34;./done.png 1021w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;と表示が変わる。
これで完了。
以後は普通に &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; が使えるようになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/platformio/platformio-atom-ide-terminal/issues/707&#34;&gt;Incompatible with Atom 1.39.0 - Discussion on Current state of affairs · Issue #707 · platformio/platformio-atom-ide-terminal · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;あぁ，快適。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;朗報。&lt;/p&gt;
&lt;p&gt;実験的に組み込まれている &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34; title=&#34;BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern&#34;&gt;ripgrep&lt;/a&gt; がめっさ速い。
こりゃあええわ。&lt;/p&gt;
&lt;p&gt;余談だが， &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では CLI の &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34; title=&#34;BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern&#34;&gt;ripgrep&lt;/a&gt; は APT でインストールするのがいいようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install ripgrep
$ rg -V
ripgrep 0.10.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;対応しているバージョンを見ると，一見 snap 版の &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34; title=&#34;BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern&#34;&gt;ripgrep&lt;/a&gt; のほうが良さげだが&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;N.B. Various snaps for ripgrep on Ubuntu are also available, but none of them seem to work right and generate a number of very strange bug reports that I don&amp;rsquo;t know how to fix and don&amp;rsquo;t have the time to fix. Therefore, it is no longer a recommended installation option.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なんだとさ。
残念。&lt;/p&gt;
&lt;p&gt;しかし，まぁ，やはり時代は Rust かねぇ。
&lt;a href=&#34;https://japan.zdnet.com/article/35140212/&#34; title=&#34;マイクロソフト、セキュアなコード実現に向けプログラミング言語「Rust」評価 - ZDNet Japan&#34;&gt;Microsoft も興味を持ってるみたい&lt;/a&gt;だし。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.39.1&#34;&gt;Release 1.39.1 · atom/atom · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1197983.html&#34;&gt;GitHub、フリーのコードエディター「Atom 1.39」をリリース ～あいまい検索が大幅に高速化 - 窓の杜&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>ようやく ConEmu と NYAGOS を導入した</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2015/conemu-and-nyagos/" />
		<id>tag:text.Baldanders.info,2015-10-30:/remark/2015/conemu-and-nyagos/</id>
		<published>2015-10-29T15:56:49+00:00</published>
		<updated>2020-01-03T06:05:57+00:00</updated>
		<summary>そんなわけで，えんやらやっと ConEmu を導入することにした。ついでに NYAGOS も入れなおすことに。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;いやぁ， &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 使い出したらコマンドプロンプトがいくらあっても足りないのさ。
そんなわけで，えんやらやっと &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を導入することにした。
ついでに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; も入れなおすことに。&lt;/p&gt;
&lt;h2&gt;NYAGOS の導入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34;&gt;NYAOS.ORG - NYAGOS&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34;&gt;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以前 &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入した時は&lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/9c11acf72fa38ef379f8&#34;&gt;どえら苦労した&lt;/a&gt;が&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases&#34;&gt;最近のバージョン&lt;/a&gt;は64ビット版のビルド済みのものがある。
ありがたくこのまま使わせて頂く&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;zip ファイル内のファイル群をフォルダ構成ごと適当な場所に展開すればよい。
展開できたら動作確認。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;C:\program\nyagos&amp;gt;nyagos.exe
Nihongo Yet Another GOing Shell 4.2.3_3-amd64 by go1.9.3 &amp;amp; Lua 5.3
(c) 2014-2018 NYAOS.ORG &amp;lt;http://www.nyaos.org&amp;gt;
&amp;lt;hostname:~&amp;gt;
$ ls
Doc/          _nyagos       makeicon.cmd* nyagos.exe*   readme_ja.md
LICENSE       lua53.dll     nyagos.d/     readme.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ほい，おっけ。&lt;/p&gt;
&lt;h2&gt;ConEmu の導入&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; は Windows 用のターミナルでタブごとに異なる shell を呼び出せるのが特徴。
コマンドプロンプトや上述の &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; はもちろん， &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash や &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; も呼び出せてしまう優れもの。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://conemu.github.io/&#34;&gt;ConEmu - Handy Windows Terminal&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kenpg.bitbucket.org/blog/201506/07.html&#34;&gt;Windows：コマンドプロンプト代替をConsole2からConEmuに変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tech.nitoyon.com/ja/blog/2014/03/07/fancy-git-bash/&#34;&gt;ConEmu 突っ込んだら Git for Windows の Git Bash がカッコよくなった - てっく煮ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/1000k/items/4a2f9419b19fdc9ed5f4&#34;&gt;ConEmu + nyagos で Windows ターミナル環境を作る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thecrumb.com/2013/03/04/configuring-conemu-and-putty/&#34;&gt;Configuring ConEmu and Putty | theCRUMB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kuroeveryday.blogspot.jp/2015/10/ConEmu-PuTTY.html&#34;&gt;ConEmu + PuTTYでSSHクライアントを快適に使う（Windows版） | Black Everyday Company&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以降，覚え書きで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; の設定を晒しておく。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22385157049/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/22385157049_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/22385157049_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22385157049/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;フォントは既定のままで問題ない（もちろん好きなフォントに変えてもよい）。
ただし，日本語を使う場合は “Monospace” のチェックは必ず外すこと。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/21949162924/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/21949162924_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/21949162924_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/21949162924/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;“Center console in ConEmu workspace” にチェックを入れて数ピクセル程度アキを入れるとウィンドウ境界付近の窮屈感が解消される。
おススメ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22583116011/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/22583116011_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/22583116011_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22583116011/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Windows Explorer の context menu 設定。
上段の “ConEmu Here” を登録（register）すると， context menu を開いたフォルダで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を起動してくれる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22583116021/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/22583116021_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/22583116021_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22583116021/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の状態。
“Auto save/restore opened tabs” を選択すると，タブの状態を保持してくれる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22575095305/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/22575095305_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/22575095305_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22575095305/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の環境設定。
コードページの設定（&lt;code&gt;chcp&lt;/code&gt; コマンド）もここでできるし alias の設定もできたりする。
ただし，環境設定は shell 呼び出し時にも個別にできるので，ここでは &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 全体の設定に限定すべきだろう。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22388493089/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/22388493089_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/22388493089_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/22388493089/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Shell 呼び出しの設定例。
ここでは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash を呼んでいる。
起動時の calling sequence は以下のとおり。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;set MSYSTEM=MSYS &amp;amp; C:\msys64\usr\bin\bash.exe --login -i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;前半で環境変数を設定し，後半で実際に bash を呼び出している。
やぁ，これで mintty を使わなくて済むよ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; の場合は以下のようになる&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;C:\PATH\TO\PuTTY\putty.exe -load &amp;#34;mysession&amp;#34; -new_console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mysession&lt;/code&gt; には &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; であらかじめ作成したセッション名をセットする。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の場合は &lt;code&gt;nyagos.exe&lt;/code&gt; をフルパスで指定すれば OK。&lt;/p&gt;
&lt;p&gt;ところで設定ダイアログの左下に &lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; ボタンがあるのにお気づきだろうか。
&lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; アカウントのある人は是非。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;追記 2018-03-07&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; の画面の桁数を大きくすると画面が乱れる場合がある。
この場合は &lt;code&gt;Setting&lt;/code&gt; → &lt;code&gt;Main&lt;/code&gt; → &lt;code&gt;Compress long string to fit space&lt;/code&gt; を無効にすることで改善するようだ。&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/99feb1d74e36ea5848cd&#34;&gt;NYAGOS、かんたん設定 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/f62bafd711755a4cf8d7&#34;&gt;NYAGOS で環境設定系バッチファイルが期待どおり動かない原因と対策 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;まぁこれは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; を試すきっかけになったので，結果的にはよかったのだが。  &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の記事はそのうちちゃんと書かないといけないなぁ。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;最近のバージョンでは &lt;a href=&#34;https://github.com/zetamatta/nyole&#34; title=&#34;zetamatta/nyole: Nihong Yet another OLE extension for lua&#34;&gt;zetamatta/nyole&lt;/a&gt; は不要になった。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;del&gt;ただし &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; から &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; を呼び出す場合，サーバ側が UTF-8 だと文字化けするっぽい。ググると「&lt;code&gt;chcp 65001&lt;/code&gt; に設定しろ」みたいなことが書いてあるが， &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; に対しては効いてない感じ。&lt;/del&gt; （11月11日追記） 左記を訂正。オリジナルの &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; じゃなくて，日本語に対応している &lt;a href=&#34;http://hp.vector.co.jp/authors/VA024651/PuTTYkj.html&#34; title=&#34;hdk の自作ソフトの紹介 | PuTTYjp&#34;&gt;PuTTYjp&lt;/a&gt; なら問題なく日本語で表示される。ブラボー！ &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry>
</feed>
