<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Engineering - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/engineering/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/engineering/index.xml" />
	<id>tag:text.Baldanders.info,2018-01-22:/tags</id>
	<updated>2018-01-22T20:21:30+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.34</generator>

	
	<entry>
		<title>Java に関するブックマーク - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/01/java/" />
		<id>tag:text.Baldanders.info,2018-01-22:/remark/2018/01/java/</id>
		<published>2018-01-22T20:21:30+09:00</published>
		<updated>2018-01-24T20:38:41+09:00</updated>
		<summary>訳あって Java に関するブックマークを淡々と記述するページを作ってみた。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;訳あって Java に関するブックマークを淡々と記述するページを作ってみた。
Java の話はマジで仕事に絡むので（秘守義務に抵触しないよう）ブログでは慎重に避けていたのだが，ブックマーク程度ならいいだろう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;h3 id=&#34;maven&#34;&gt;&lt;a href=&#34;https://maven.apache.org/&#34; title=&#34;Maven – Welcome to Apache Maven&#34;&gt;Maven&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stronger.hatenablog.com/entry/2016/11/19/003404&#34;&gt;EclipseでのMavenプロジェクトの作成、jarファイルの作り方 - k&amp;rsquo;s diary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/kuh96/items/a6a35f0cd0dd8ed82008&#34;&gt;Eclipse + Maven + Tomcat の開発環境を快速に!? - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://progmemo.wp.xdomain.jp/archives/1094&#34;&gt;Mavenリポジトリにないライブラリをpom.xmlで指定する方法 - システム開発メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tarosa0001/items/4254e83059c30d8c3ca3&#34;&gt;Mavenで依存関係などを含まないjarファイルを作る方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/k3286/items/1bc86cdbd58892d078a5&#34;&gt;pom.xmlではpackagingはjar指定なのに、failOnMissingWebXmlのエラーが表示され続けるときの対処 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/opengl-8080/items/f36c570032e1a7555ed2&#34;&gt;Maven2使い方メモ２（Tomcat で JAX-RS） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tarosa0001/items/4254e83059c30d8c3ca3&#34;&gt;Mavenで依存関係などを含まないjarファイルを作る方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nemuzuka.hatenablog.com/entry/20090109/1231486987&#34;&gt;Mavenでローカルに存在するjarをパッケージしてみる - nemuzukaの「明日から本気出す」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yoshi389111/items/34d1ceeff000d41ee44e&#34;&gt;&lt;a href=&#34;https://maven.apache.org/&#34; title=&#34;Maven – Welcome to Apache Maven&#34;&gt;Maven&lt;/a&gt; m2eでローカルリポジトリにライブラリをインストールする方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/tanamon/20080805/1217933963&#34;&gt;Maven2のpom.xmlの構成 - tanamonの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/taoyag/items/8b29c819e8430bca1c6b&#34;&gt;Eclipse + Maven(m2e)でライブラリが見つからない的なエラーが出たときの対応方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/shuntaro_tamura/items/cefea651de7b6b5cd8b6&#34;&gt;Eclipse環境下でのエラー対処法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.bitmeister.jp/?p=1486&#34;&gt;BASE64Encoderを使おうとしたら「rt.jarで制限されているためアクセスできません」と言われた件 – ビットログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://informationstudent.blog.fc2.com/blog-entry-20.html&#34;&gt;EclipseでJavaFXを使おうとするとアクセス制限とでる問題の解決方法 - (元)情報学科大学生のブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/lonerydeveloper/items/9f7c977c039ad4d24d30&#34;&gt;Java8での文字列連結 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/nowokay/20140409&#34;&gt;Java8時代の文字列連結まとめ - きしだのはてな&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yoshi389111/items/67354ba33f9271ef2c68&#34;&gt;[Java] Stringの結合について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://brbranch.jp/blog/201510/java/javabeans/&#34;&gt;JavaBeansの使われ方がどうも納得いかないって話 | たそがれブランチ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1BS/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41uoMp5etSL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1BS/baldandersinf-22/&#34;&gt;増補改訂版 Java言語で学ぶデザインパターン入門 マルチスレッド編&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2004-06-18&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8ATHGW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8ATHGW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補改訂版 Java言語で学ぶデザインパターン入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1EU/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1EU.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Java言語で学ぶリファクタリング入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B073F45B97/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B073F45B97.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／積分を見つめて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B076BY4VJH/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B076BY4VJH.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アプリケーションアーキテクチャ設計パターン&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B06Y114CHD/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B06Y114CHD.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;C言語による スーパーLinuxプログラミング　Cライブラリの活用と実装・開発テクニック&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00H372H40/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00H372H40.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマの数学&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00L0PDMK4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00L0PDMK4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガール／ガロア理論&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／数列の広場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00L0PDMJ0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00L0PDMJ0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／整数で遊ぼう&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;結城浩さんによる通称「デザパタ本」のマルチスレッド編。 Java 以外でも使える優れもの。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-10-24&#34;&gt;2017-10-24&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8ATHGW/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41mh5r0NwLL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8ATHGW/baldandersinf-22/&#34;&gt;増補改訂版 Java言語で学ぶデザインパターン入門&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2004-06-18&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1BS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1BS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補改訂版 Java言語で学ぶデザインパターン入門 マルチスレッド編&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1EU/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1EU.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Java言語で学ぶリファクタリング入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00JEYPPOE/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00JEYPPOE.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Code Complete 第2版 上　完全なプログラミングを目指して&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0197SZZZ0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0197SZZZ0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;日経Linux（リナックス） 2016年 1月号 [雑誌]&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00V2WMQNE/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00V2WMQNE.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;改訂2版　パーフェクトJava&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;結城浩さんによる通称「デザパタ本」。 Java 以外でも使える優れもの。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-01-05&#34;&gt;2016-01-05&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1EU/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41GPVATQiZL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1EU/baldandersinf-22/&#34;&gt;Java言語で学ぶリファクタリング入門&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2007-01-26&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1BS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1BS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補改訂版 Java言語で学ぶデザインパターン入門 マルチスレッド編&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8ATHGW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8ATHGW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補改訂版 Java言語で学ぶデザインパターン入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B073F45B97/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B073F45B97.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／積分を見つめて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00H372H40/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00H372H40.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマの数学&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1AO/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1AO.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Java言語プログラミングレッスン 第3版（下）　オブジェクト指向を始めよう&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0185E10ZQ/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0185E10ZQ.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;実践Javaコーディング作法&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B071V7MY82/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B071V7MY82.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プリンシプル オブ プログラミング 3年目までに身につけたい 一生役立つ101の原理原則&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート／微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00L0PDMK4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00L0PDMK4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガール／ガロア理論&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1A4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1A4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Java言語プログラミングレッスン 第3版（上）　Java言語を始めよう&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;結城浩さんによる「リファクタリング本」。意外に Java 以外でも使える優れもの。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-10-24&#34;&gt;2017-10-24&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>組込みで Go - golang</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/golang/embedded-engineering-with-golang/" />
		<id>tag:text.Baldanders.info,2018-01-21:/golang/embedded-engineering-with-golang/</id>
		<published>2018-01-21T18:39:17+09:00</published>
		<updated>2018-01-22T20:10:35+09:00</updated>
		<summary>組込み関連の記事を見かけたのでブックマークしておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="http://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://qiita.com/&#34;&gt;Qiita&lt;/a&gt; の &lt;a href=&#34;https://qiita.com/tetsu_koba&#34; title=&#34;tetsu_koba - Qiita&#34;&gt;@tetsu_koba&lt;/a&gt; さんが最近組込み関連の記事を連投されているのでブックマークしておく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/7435ef8d0c77844d751e&#34;&gt;組み込みLinuxでGolangのススメ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/dba170bf220c45781428&#34;&gt;Golangから物理メモリを読み書きする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/decee4d1a6ff621a7d37&#34;&gt;Golangでioctlのシステムコールを使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/1928730136736c9dd133&#34;&gt;GolangでGPIOの割り込み通知を受け取る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/53d84286ba5d87de607a&#34;&gt;Golangの実行ファイルを複数まとめてトータルのファイルサイズを減らす工夫(busybox方式) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/1ccca9b3f4bd1e6b7f5c&#34;&gt;GolangのプロセスをFIFO priorityにセットする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/f8afbb8326ee42fd27f5&#34;&gt;Golangでシリアルポート(UART)を使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tetsu_koba/items/7d8f2f40e45e1549a6fa&#34;&gt;GolangでBLE (Bluetooth Low Enagy)を使う - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で組込みといってもフルスクラッチでシーケンサみたいなのを組むわけではなく， RT Linux 下でのリアルタイム処理を想定しているようだ。&lt;/p&gt;

&lt;p&gt;独学での組込みソフトの勉強は，具体的なターゲットがないと「その辺の出来合いのハードで『Lチカ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lt1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:lt1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;』組んで満足」みたいなことになりかねないので，手を出すのを躊躇っていた。
でも今時は組込みつっても要は標準的な RTOS ( Real-Time Operating System) で動くアプリケーションなので（スマホ・アプリの開発も「組込み」カテゴリらしいし），勉強ならもっと気楽に構えていいのかなと思い直している。&lt;/p&gt;

&lt;p&gt;とはいえ，私の場合は生活基盤を立て直すことから始めないといけないので，やるにしても暫く先になるかな。&lt;/p&gt;

&lt;h2 id=&#34;その他のブックマーク&#34;&gt;その他のブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/mjhd-devlion/items/5e6f6f2f40ecb4ad4217&#34;&gt;GoでFPGAしてみる(Reconfigure.io) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tomoya0x00/items/d957dc00682c57f96771&#34;&gt;Goでのシリアル通信でハマった事 - Qiita&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/KemoKemo/items/10fb644f9d359c35646a&#34;&gt;Gobotの招きにあひて、徒然なるままにArduinoとRaspberry PiでIoTっぽいことをやってみるなり - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://postd.cc/golangs-real-time-gc-in-theory-and-practice/&#34;&gt;Go言語のリアルタイムGC　理論と実践 | プログラミング | POSTD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://postd.cc/gos-march-to-low-latency-gc/&#34;&gt;Go言語の低レイテンシGC実現のための取り組み | プログラミング | POSTD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/410V3ulwP5L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Alan A.A. Donovan Brian W. Kernighan 柴田 芳樹 &lt;/dd&gt;&lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798142417/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798142417.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スターティングGo言語 (CodeZine BOOKS)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117526/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117526.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Go言語によるWebアプリケーション開発&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4865940391/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4865940391.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Kotlinスタートブック -新しいAndroidプログラミング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4839959234/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4839959234.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Docker実戦活用ガイド&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274218961/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274218961.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グッド・マス ギークのための数・論理・計算機科学&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:lt1&#34;&gt;LED をチカチカ点滅させる組込み開発の “Hello World” みたいなやつ（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lt1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「暗号通貨」ってゆーな！ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/" />
		<id>tag:text.Baldanders.info,2018-01-10:/remark/2018/01/cryptocurrency-are-not-crypto/</id>
		<published>2018-01-10T22:21:55+09:00</published>
		<updated>2018-01-23T20:13:49+09:00</updated>
		<summary>このまま進めば間違いなく「仮想通貨」は FinTech の中央集権化に向けた覇権競争に突入するだろう。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;断っておくが，私だけが言ってるんじゃないからね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://motherboard.vice.com/en_us/article/43nk9b/cryptocurrency-are-not-crypto-bitcoin&#34;&gt;Cryptocurrencies Aren&amp;rsquo;t &amp;lsquo;Crypto&amp;rsquo; - Motherboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2017/12/crypto_is_being.html&#34;&gt;&amp;ldquo;Crypto&amp;rdquo; Is Being Redefined as Cryptocurrencies - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;“Most cryptocurrency barely has anything to do with serious cryptography,” &lt;a href=&#34;https://isi.jhu.edu/~mgreen/&#34;&gt;Matthew Green&lt;/a&gt;, a renowned computer scientist who studies cryptography, told me via email. “Aside from the trivial use of digital signatures and hash functions, it’s a stupid name.”&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://motherboard.vice.com/en_us/article/43nk9b/cryptocurrency-are-not-crypto-bitcoin&#34;&gt;Cryptocurrencies Aren&amp;#39;t &amp;#39;Crypto&amp;#39;&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;私の場合は「暗号」をキーワードにしている Google Alert がクソみたい記事ばかり引っ掛けるのにいい加減腹が立ってるからなのだが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:crypt1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:crypt1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
なんだよ「暗号通貨長者」って。&lt;/p&gt;

&lt;p&gt;ほんじゃあ，なんて言えばいいかというと&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;So if you care about this, please politely correct people who incorrectly use the word “crypto.” Or maybe make fun of it, as Ryan Stortz, a security researcher in New York suggested. In a chat, he joked that he wants to start trolling people by referring to cryptocurrencies as “Block,” short for “blockchain technologies.”&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://motherboard.vice.com/en_us/article/43nk9b/cryptocurrency-are-not-crypto-bitcoin&#34;&gt;Cryptocurrencies Aren&amp;#39;t &amp;#39;Crypto&amp;#39;&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;日本語なら後ろに「通貨」を付けて「ブロックチェーン通貨」とか「ブロック通貨」といったところだろうか（笑） まぁこの記事では，大雑把すぎる名前ではあるが，無難に括弧書きで「仮想通貨」としておくか&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:crypt2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:crypt2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;さて，今まで書いた Blockchain に関する記事は以下の通り&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000827.shtml&#34;&gt;そろそろ Blockchain について勉強を始めるか — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/01/blockchain-and-smart-contract/&#34;&gt;Blockchain と Smart Contract&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なのだが，2017年で大きく状況が変わったようなので再々勉強。&lt;/p&gt;

&lt;p&gt;まずはこれまでのおさらいを再々掲載しておく。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Blockchain は「鎖」で繋がれた追記型データベース。「鎖」の途中のデータは取り消しも変更（改竄）もできない&lt;/li&gt;
&lt;li&gt;Blockchain の追記プロセスには不正の余地がないよう何らかの仕掛けが必要。 Bitcoin の場合は「作業証明（proof-of-work）」がそれにあたる&lt;/li&gt;
&lt;li&gt;Blockchain は P2P による分散型かつ fault tolerant（過失を許容する）なシステムだが最終的には fork も merge も許容しない&lt;/li&gt;
&lt;li&gt;Bitcoin のアドレス（実体は公開鍵）の帰属先について Bitcoin/Blockchain は関知しない。Bitcoin が気にするのは Blockchain に記載されるアドレスの一貫性と無矛盾性である。アドレスの証明が必要な場合は外部の PKI を利用するか新たに組み込む必要がある&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;このうち大きく変わったのが 3 番目である。&lt;/p&gt;

&lt;h2 id=&#34;ico-と-hard-fork&#34;&gt;ICO と Hard Fork&lt;/h2&gt;

&lt;p&gt;私は最初，名前だけ見て東京オリンピックの話でもしてるのかと思ったよ（それは IOC だ&lt;code&gt;w&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;ICO (Initial Coin Offering) とは「仮想通貨」を使った資金調達を指すらしい。
建前上は「仮想通貨による生態系を創る」ということのようだが，実際には&lt;a href=&#34;https://www.shin-sasaki.com/single-post/2017/12/29/GACKT%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2588SPINDLE%25EF%25BC%2589%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2581%25AF%25E3%2581%259F%25E3%2581%25A0%25E3%2581%25AE%25E5%258E%25A8%25E4%25BA%258C%25E7%2597%2585&#34; title=&#34;GACKTコイン（SPINDLE）の中身はただの厨二病 | しんの公式ブログ&#34;&gt;厨二まるだしの趣意&lt;/a&gt;だったり&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gkt1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gkt1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;，挙句には資金を集めるだけ集めてトンズラする輩までいて，ぶっちゃけ山師の巣窟と成り果てている。
そもそも「仮想通貨による生態系を創る」という発想はゼロ年代に流行した「地域通貨」そのものであり，今もって&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B008YOHIAY/baldandersinf-22/&#34; title=&#34;エンデの遺言「根源からお金を問うこと」 | 河邑 厚徳, グループ現代 | ビジネス・経済 | Kindleストア | Amazon&#34;&gt;ミヒャエル・エンデの呪い&lt;/a&gt;は消えないのかと思うと，それはそれで怖ろしい気がする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ende1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ende1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;もっと決定的なのが Bitcoin の hard fork だ。
つまり Blockchain の分岐（fork）を許してしまったのだ。
Bitcoin における「信用」とは Blockchain に記述された取引履歴の一貫性と無矛盾性であり，本来はこの「信用」を「fork も merge も許容しない」ことで担保していたのが hard fork によって過去の「信用」を維持したまま別の通貨を生み出してしまったわけだ。
Bitcoin 単体は数学的に総量が決まっているが， hard fork すれば「仮想通貨」全体の量を&lt;strong&gt;恣意的&lt;/strong&gt;に増やすことができる。&lt;/p&gt;

&lt;p&gt;これは Bitcoin/Blockchain の根本を覆す。
何故なら Bitcoin の思想の根底にあるのは1990年代の PGP から脈々と続く「暗号アナーキズム」であり「支配者のコントロールから逃れる」ための脱中央集権化だったからだ。
しかし ICO や hard fork は守るべき一線を超えてしまった。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これまでビットコインの運営主体はいないとされてきたが、採掘事業者や開発のコアチームといった運営関係者が存在し、円滑な運営のためにはチームのガバナンスが必要で、仲間割れが起きた時にルールを強制する仕組みが何ら存在しないことも明らかとなった。仮想通貨も中央銀行と同じように、人間が創造し、人間が運用し、人間の意志によっていくらでも台無しにできるのだとすれば、仮想通貨だからといって発行に際して発行主体が負債を立てずに済む根拠をどこに置くのだろうか。&lt;br&gt;
野放図なビットコインの分裂に加えて、ICOの多くが有価証券規制を潜脱するため新たに発行するコインを仮想通貨と位置づけてしまったために、当初ビットコインが勝ち取った仮想通貨の特権的な法的位置づけは風前の灯にある。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kusunokimasanori/20180104-00080086/&#34;&gt;仮想通貨の2018年、熱狂に次ぐ幻滅の先に光明はあるか(楠正憲) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;仮想通貨-という名の球根&#34;&gt;「仮想通貨」という名の球根&lt;/h2&gt;

&lt;p&gt;これは Bitcoin の hard fork に深く関係するのだが，「Blockchain はスケールしない」ことが分かってきた。&lt;/p&gt;

&lt;p&gt;おそらく Bitcoin/Blockchain は世界的な為替取引に晒されることは想像していなかったと思われる。
そもそも「作業証明」は計算集約的なものであり費用対効果の面から見た「上限」がある筈だった。
しかし Bitcoin を含めた「仮想通貨」が投機の対象となった時，ある筈だった「上限」を超えてしまった。&lt;/p&gt;

&lt;p&gt;たとえば国家が「仮想通貨」を外貨獲得手段と見なせばコスト度外視で「作業証明」を行うことができる。
また malware や Web ページ上のスクリプト等を使って「作業証明」にかかるコストを不特定に転嫁する輩も出てきた。&lt;/p&gt;

&lt;p&gt;こうして Bitcoin/Blockchain は限界を迎え， ICO や hard fork へと向かい，更なる投機が生まれるスパイラルになる。
「仮想通貨」はもはや通貨ではなく「チューリンプの球根」になってしまったわけだ。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;現在、投機以外の暗号通貨トークン・プロジェクトは無期限の冬眠を強制されている。 本当にイノベーティブなサービスを作ろうとしているチームにとって、現在の暗号通貨バブルが弾けることは冬ではなく、むしろ春の到来を告げるものだ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jp.techcrunch.com/2018/01/08/2018-01-07-the-cryptocurrency-bubble-is-strangling-innovation/&#34;&gt;暗号通貨バブルはイノベーションを絞め殺している | TechCrunch Japan&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;2018年以降の-仮想通貨&#34;&gt;2018年以降の「仮想通貨」&lt;/h2&gt;

&lt;p&gt;ちょうど一年前（2017-01-10）には&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/01/10/20170108the-future-is-a-decentralized-internet/&#34;&gt;未来のインターネットは、非中央集権型のインターネットだ  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんてな記事もあって，あまりに皮肉なタイトルにバカウケしたものだが，もう笑い事ではなくなっているかもしれない。
何せあのザッカーバーグ君も ICO に興味を持ってるみたいだし。
ユーザを囲い込み個人情報の搾取を行う中央集権の権化たる Facebook のトップに立つ人間が&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;There are important counter-trends to this --like encryption and cryptocurrency -- that take power from centralized systems and put it back into people&#39;s hands. But they come with the risk of being harder to control. I&#39;m interested to go deeper and study the positive and negative aspects of these technologies, and how best to use them in our services.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.facebook.com/zuck/posts/10104380170714571&#34;&gt;Mark Zuckerberg - Every year I take on a personal challenge to...&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;このトレンドに逆流する重要なものがでてきている。例えば暗号化技術と仮想通貨だ。これらは中央集権化されたシステムから権力を奪い人々の手に戻す。だがこれらはコントロールしにくいというリスクを伴う。だからこれら技術のポジティブ・ネガティブ両側面とフェイスブックのサービスにどう活用できるかを深く研究したい。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://jp.cointelegraph.com/news/zuckerberg-eyeing-out-power-of-cryptocurrencies&#34;&gt;【全文和訳掲載】マーク・ザッカーバーグ「仮想通貨は権力を人々の手に戻す、フェイスブックでの活用方法探る」新年の抱負で言及 | News | Cointelegraph&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;とか恐怖しか感じない。
このまま進めば間違いなく「仮想通貨」は FinTech の中央集権化に向けた覇権競争に突入するだろう。
飼い慣らした筈の「ビヒーモス」が再び暴れだそうとしている。
あるいは「ビヒーモス」と「グリゴリ」が手を組んだか。&lt;/p&gt;

&lt;p&gt;個人的には &lt;a href=&#34;https://everipedia.org/&#34; title=&#34;Everipedia, the encyclopedia of everything&#34;&gt;Everipedia&lt;/a&gt; 辺りが試金石になるのかな，と思っているのだが，どうだろうねぇ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2018/01/05/everipedia-blockchain/&#34;&gt;オンライン百科事典「Everipedia」がブロックチェーン導入で目指すもの｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ダメかな，やっぱり。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cruel.org/krugman/babysitj.html&#34;&gt;Krugman: Baby Sitting the Economy (経済を子守りしてみると。)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://orion.mt.tama.hosei.ac.jp/hideaki/kenporon.htm&#34;&gt;グリゴリの捕縛 あるいは 情報時代の憲法について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2018/01/22/bitcoin-infrastructure/&#34;&gt;暗号通貨ブームの裏側で顕在化してきた、その基盤技術の「構造的な問題」｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/71469/bitcoin-and-ethereum-have-a-hidden-power-structure-and-its-just-been-revealed/&#34;&gt;MIT Tech Review: 「非中央集権型」通貨ビットコインの理想は儚く消えたのか？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;スティーブン・レビー 斉藤 隆央 &lt;/dd&gt;&lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/487593100X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/487593100X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハッカーズ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4105393022/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4105393022.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読―ロゼッタストーンから量子暗号まで&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4484111160/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4484111160.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グーグル ネット覇者の真実 追われる立場から追う立場へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/410215972X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/410215972X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読〈上〉 (新潮文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4102159738/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4102159738.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読 下巻 (新潮文庫 シ 37-3)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015/03/09&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:crypt1&#34;&gt;ついでに言うなら，文章で禄を食んでる者なら「暗号」と「暗合」と「符号」と「符牒」をちゃんと書き分けて欲しい。なんでも「暗号」ゆーな！
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:crypt1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:crypt2&#34;&gt;“cryptocurrency” をわざと「仮想通貨」と訳してるページもあるみたい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:crypt2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gkt1&#34;&gt;&lt;a href=&#34;http://pdl2h.tumblr.com/post/169105851262/&#34;&gt;memorandum@tumblr. の記事&lt;/a&gt;によると「恐ろしいのは、全ての広告は宣伝の機能のほかに、消費者をスクリーニングする機能があって、要するにその広告を「つまらない」とか「馬鹿げている」とか「興味が無い」と思う人は最初からその商材の想定顧客ではない、という点。つまり、騙されるのはこのホワイトペーパーを読んでもその間違いが理解できない程度の金融リテラシーを持つ人たち」ということらしく，ただの厨二文章ではないということですな。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gkt1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ende1&#34;&gt;念のために言うと私はミヒャエル・エンデ（の作品）の大ファンである。私のニックネームの Spiegel はエンデの『&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4006020317/baldandersinf-22/&#34;&gt;鏡のなかの鏡&lt;/a&gt;』から拝借している。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ende1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「ネットの中立性」と「後出しジャンケン」と「メディアによる検閲を迂回する」 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/12/hacker-ethic-2/" />
		<id>tag:text.Baldanders.info,2017-12-23:/remark/2017/12/hacker-ethic-2/</id>
		<published>2017-12-23T18:37:50+09:00</published>
		<updated>2018-01-04T20:41:28+09:00</updated>
		<summary>自分用にメモしておくことは大事なので，覚え書きとして書いておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;年も押し迫って初日の出が云々とか聞かれる今日この頃にこんな暑苦しい話もどうかと思ったんだけど，&lt;a href=&#34;http://www.hyuki.com/dream/log.html&#34; title=&#34;あなた自身の航海日誌&#34;&gt;自分用にメモしておく&lt;/a&gt;ことは大事なので，覚え書きとして書いておく。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#network-neutrality&#34;&gt;ネットの中立性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#opensource&#34;&gt;後出しジャンケン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#media-censorship&#34;&gt;メディアによる検閲を迂回する&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;network-neutrality&#34;&gt;ネットの中立性&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1711/22/news062.html&#34;&gt;FCC、オバマ前大統領導入の「ネット中立性」廃止勧告　12月に採決へ - ITmedia NEWS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/pcuser/articles/1711/26/news011.html&#34;&gt;「ネット中立性」が米国で廃止へ　日本のサービスにも影響はある？ - ITmedia PC USER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/12/01/2017-11-30-fcc-commissioner-clyburn-takes-down-chairmans-net-neutrality-doom-and-gloom/&#34;&gt;FCC現委員長のネット中立性悪者説はすべて正しくない、と同僚の委員が指摘  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/11/25/2017-11-22-net-neutrality-advocates-plan-protests-for-december-7-at-verizon-stores/&#34;&gt;ネット中立性の擁護者たちが12月7日に全国のVerizonショップで抗議集会を開く  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youkoseki.tumblr.com/post/167900801310/network-unneutrality&#34;&gt;インターネットはすでに死んでいる* | 辺境社会研究室&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35111780/&#34;&gt;ネット中立性撤廃に反対する公開書簡をテクノロジ分野の先駆者らが投稿 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://creativecommons.org/2017/12/15/battle-net-continues-fcc-erases-net-neutrality-rules/&#34;&gt;The battle for the net continues after FCC erases net neutrality rules - Creative Commons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/news/17/121502874/?rt=nocnt&#34;&gt;ニュース - 米でオバマ時代の「ネット中立性」の撤廃が承認：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://p2ptk.org/net-neutrality/662&#34;&gt;チーム・インターネットの戦いは終わらない：ネット中立性のためにできること – P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2017/12/21/net-neutrality-fight-moves-to-courts/&#34;&gt;「ネット中立性」の撤廃は決まれど、通信業界との攻防は続く｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;週明けくらいから FCC の決定に対する日本語の記事もボチボチ見えだしたが，誰も「俺たちの戦いはこれからだ！」の決まり文句を言ってくれないので（打ち切りフラグだから？），ちょっと寂しい。&lt;/p&gt;

&lt;p&gt;それはともかく，「ネット中立性」については本当に長～いあいだ議論されている。
個人的には中立性を守ろうとする側の言い分はもっともだし私も「激しく同意」するところである。&lt;/p&gt;

&lt;p&gt;今のインターネットは実質的にキャリア企業に回線を牛耳られている状態であり，ネットの「停止スイッチ」を握っているのが彼等である。
最近は「核のボタン」を現米国大統領が握っていることを危惧する意見があるが，「ネット中立性」を放棄するのはこれに近い脅威であると言えよう。
残念ながら今のインターネットは米国を中心に回ってるので，今回の FCC の決定は世界にとっても他人事ではない。&lt;/p&gt;

&lt;p&gt;個人的には，日本のキャリア企業がどう動くかに注目している。&lt;/p&gt;

&lt;h2 id=&#34;opensource&#34;&gt;後出しジャンケン&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/news/17/122002893/?rt=nocnt&#34;&gt;ニュース - エヌビディアが消費者向けGPUのライセンスを変更、データセンターへの導入を禁止：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1712/22/news071.html&#34;&gt;さくら、TITAN X搭載GPUサーバサービスの新規提供を一時停止　NVIDIAのライセンス条件変更で - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2017/12/62658/&#34;&gt;NVIDIAが規約変更によりGeForceのデータセンター利用を制限。大学などの研究活動にも大ブレーキ - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cpplover.blogspot.jp/2017/12/nvidiageforce.html&#34;&gt;本の虫: nVidia、GeForceのデータセンターでの利用を禁止する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/shi3z/20171223/1513980907&#34;&gt;みんな、これからは深層学習にはGeForceではなくRadeonを使おう - shi3zの長文日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pc.watch.impress.co.jp/docs/news/1099/481/index.html&#34;&gt;GeForceのデータセンター利用を禁止する使用許諾契約に対してNVIDIAが声明  - PC Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;恥ずかしながら GPU 市場の動向には全く疎い。
NVIDIA と AMD で一種の「住み分け」ができてることも知らなかった&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpu1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gpu1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
道理で両者が全く異なるスタンスをとってるのに競合しないはずである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/20356020/&#34;&gt;AMD、オープンソースのグラフィックスドライバの開発を支援へ - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pc.watch.impress.co.jp/docs/column/kaigai/736647.html&#34;&gt;【後藤弘茂のWeekly海外ニュース】AMDがドライバを含めたGPUソフトウェアをオープンソース化  - PC Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;オープンソースと言っても上から下まで全部「オープンソース化」されているわけではなく，ハードウェアに近いところほどベンダ企業による統制が強くなる。
ハードウェアまで全てオープンソース化しようという動きはあるにはあるが市場にインパクトを与えるほどではないのが現状である。&lt;/p&gt;

&lt;p&gt;このような「後出しジャンケン」がライセンスとして有効なのかどうか甚だ疑問なのだが，問題はそこに留まらない。
他のハードウェア企業の幾つかはこれに便乗するだろう。
こんなことが許されるのならオープンソースなんか鼻糞である。&lt;/p&gt;

&lt;h2 id=&#34;media-censorship&#34;&gt;メディアによる検閲を迂回する&lt;/h2&gt;

&lt;p&gt;（この節は &lt;a href=&#34;https://twitter.com/spiegel_2007/status/943788617268207616&#34;&gt;Twitter のスレッドで書きなぐった tweets&lt;/a&gt; の再構成です）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://allianceforscience.cornell.edu/blog/japanese-doctor-wins-global-prize-standing-anti-vaccine-activists&#34;&gt;Japanese doctor wins global prize for standing up to anti-vaccine activists | Cornell Alliance for Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/rikomuranaka/n/n64eb122ac396&#34;&gt;ジョン・マドックス賞受賞スピーチ全文「10万個の子宮」｜村中璃子　Riko Muranaka｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cakes.mu/posts/18760&#34;&gt;子宮頸がんワクチン副作用とマスコミの役割｜新・山形月報！｜山形浩生｜cakes（ケイクス）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.j-cast.com/2017/12/14316605.html?p=all&#34;&gt;高橋洋一の霞ヶ関ウォッチ 「ワクチンめぐる表彰」問題で再認識　国内新聞・テレビの「異様さ」 : J-CASTニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.j-cast.com/2017/12/14316605.html?p=all&#34; title=&#34;高橋洋一の霞ヶ関ウォッチ 「ワクチンめぐる表彰」問題で再認識　国内新聞・テレビの「異様さ」 : J-CASTニュース&#34;&gt;J-CAST の記事&lt;/a&gt;の論点は2つあると思う。
ひとつは間違った報道による「被害」をどう補償するか，または「被害」をどう防ぐか。
もうひとつはマスコミによる報道の選択（＝検閲）である。&lt;/p&gt;

&lt;p&gt;前者については&lt;a href=&#34;https://cakes.mu/posts/18760&#34; title=&#34;子宮頸がんワクチン副作用とマスコミの役割｜新・山形月報！｜山形浩生｜cakes&#34;&gt;山形浩生さんの記事&lt;/a&gt;のほうが参考になるのではないだろうか。
はっきり言ってこれは「集団訴訟」案件だと思う。
被害者が自分が被害を受けてると自覚するかどうかにもよるけど。&lt;/p&gt;

&lt;p&gt;後者については色々意見があるだろうが，私個人としては「どうでもいい」。
テレビ・新聞の報道が，仕事を含む，日常生活の関心領域について（社会性・公益性の有無に関わらず）報道することのほうが稀だからだ。
加えて言うなら，私はイエロー・ジャーナリズムには関心がない。
故にテレビ・新聞の報道をスルーしても全く支障がないのだ。&lt;/p&gt;

&lt;p&gt;私は社会人になって数年で新聞の購読を止めた。
理由は3つ。
勤務先や客先が買ってる新聞が読めたから。
長期出張で自宅を空けることが増えたから（若い頃の話だよ）。
そして，新聞はテレビより情報が遅いから，である。&lt;/p&gt;

&lt;p&gt;更に地上アナログ波の停波タイミングで本格的にテレビを見ることを止めた。
これも理由が3つ。
情報の事実性に関する S/N 比が悪すぎるから。
テレビ以外に享受できる娯楽が増えたから（アニメもネットで見れる）。
そして，テレビはネットより情報が遅いから&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:media1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:media1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，でる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000307.shtml&#34;&gt;「テレビという共同体」 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これはネットが情報摂取に関して優位であるということではない。
「情報の事実性に関する S/N 比が悪すぎる」というのはネットにも当てはまる。
今回の件は，たまたまネットのほうが「1次情報」に近いところにいる，と言うこともできる。&lt;/p&gt;

&lt;p&gt;問題は，あるメディア（テレビでも新聞でもネットメディアでも）が特定の情報を選択（＝検閲）することではなく，検閲を迂回してちゃんと「事実」に手が届く手段があるかどうかである。
&lt;strong&gt;Unreachable であることは故障と同一であり，故障を迂回するのがインターネット本来の機能である&lt;/strong&gt;。
その上で（メディアではなく）エンド・ユーザが膨大な情報を如何に効率よく偏りなく誤配を残しつつフィルタリングできるかが難問だったりする。
そのためにも「&lt;a href=&#34;#network-neutrality&#34;&gt;ネットの中立性&lt;/a&gt;」を法的に担保しておくことは重要なのである。
（おおっ。ちゃんと話が繋がった&lt;code&gt;w&lt;/code&gt;）&lt;/p&gt;

&lt;p&gt;そう言えば Facebook は「偽ニュースに印をつける」という頭の悪い考えからようやく脱却できたようである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35112356/&#34;&gt;Facebook、偽ニュースの赤フラグ表示を廃止&amp;ndash;関連記事を強化へ - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;時間的空間的な制約の多いテレビ・新聞ではできないことのひとつと言っていいだろう。
個人的には，あるトピックについて虚実にかかわらず機械的に記事を集約できるようになれば面白いと思う。
つか，集約して欲しい。
似たような記事が TL にずらずらと並ぶのは鬱陶しいことこの上ない。&lt;/p&gt;

&lt;p&gt;Twitter も（検閲に血道を上げるんじゃなく）これを真似してくれんかね。
自分の tweets をスレッドで繋げることができたんだから，関連 tweets のカスケード表示もできそうなものなんだけど。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000599.shtml&#34;&gt;“The Shadow Web” — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01CYDGUV8/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/31Q2jh%2B5SgL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01CYDGUV8/baldandersinf-22/&#34;&gt;CODE VERSION 2.0&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ローレンス・レッシグ 山形浩生 &lt;/dd&gt;&lt;dd&gt;翔泳社 2007-12-19&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01HPIZ24I/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01HPIZ24I.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コモンズ～ネット上の所有権強化は技術革新を殺す&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01DJ5VE0W/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01DJ5VE0W.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;FREE CULTURE&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01DIV9AI0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01DIV9AI0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;REMIX ハイブリッド経済で栄える文化と商業のあり方&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B06Y5KFBMM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B06Y5KFBMM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;勉強の哲学　来たるべきバカのために (文春e-book)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01N4MYLFN/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01N4MYLFN.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;あたらしい人工知能の教科書 プロダクト／サービス開発に必要な基礎知識&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FH3KRTI/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FH3KRTI.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スターティングGo言語&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01MU9VUTA/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01MU9VUTA.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ネットメディア覇権戦争～偽ニュースはなぜ生まれたか～ (光文社新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00ETNHZJS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00ETNHZJS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ヴェニスの商人の資本論 (ちくま学芸文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01LWTQFDN/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01LWTQFDN.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマのためのSQLグラフ原論 リレーショナルデータベースで木と階層構造を扱うために&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01J7Q5LB0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01J7Q5LB0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;弱いつながり　検索ワードを探す旅 (幻冬舎文庫)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;前著『CODE』改訂版。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-04-07&#34;&gt;2017-04-07&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00DIM6BE6/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/519%2BkIHb71L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00DIM6BE6/baldandersinf-22/&#34;&gt;インテンション・エコノミー～顧客が支配する経済&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Doc Searls 栗原潔 &lt;/dd&gt;&lt;dd&gt;翔泳社 2013-03-14&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W535LOU/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W535LOU.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;HARD THINGS　答えがない難問と困難にきみはどう立ち向かうか&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00TXZXE5Q/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00TXZXE5Q.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;パーソナルデータの衝撃&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00T3YFXJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00T3YFXJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UX侍 スマホアプリでユーザーが使いやすいデザインとは (impress Digital Books)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00J9ZGYQQ/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00J9ZGYQQ.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;位置情報ビッグデータ (NextPublishing)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00LTCR0IS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00LTCR0IS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;起業のエクイティ・ファイナンス&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;時代はソーシャル CRM から VRM へ。&lt;a href=&#39;http://www.baldanders.info/spiegel/log2/000794.shtml&#39;&gt;俺達がインターネットだ！&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-04-26&#34;&gt;2015/04/26&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4150504598/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41UdjkE4OpL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4150504598/baldandersinf-22/&#34;&gt;フィルターバブル──インターネットが隠していること (ハヤカワ文庫NF)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;イーライ・パリサー 井口耕二 &lt;/dd&gt;&lt;dd&gt;早川書房 2016-03-09&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4569762468/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4569762468.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;インターネット的 (PHP文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4140912073/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4140912073.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ウェブ社会のゆくえ―&lt;多孔化&gt;した現実のなかで (NHKブックス No.1207)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4122033985/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4122033985.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報の文明学 (中公文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4480062858/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4480062858.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ウェブ進化論 本当の大変化はこれから始まる (ちくま新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4152096098/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4152096098.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;五〇億年の孤独:宇宙に生命を探す天文学者たち&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;ネットにおいて私たちは自由ではなく，それと知らず「フィルターバブル」に捕らわれている。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-07&#34;&gt;2016-05-07&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:gpu1&#34;&gt;ブロックチェーン関連では AMD の独壇場らしい。なので &lt;a href=&#34;http://www.nvidia.com/content/DriverDownload-March2009/licence.php?lang=us&amp;amp;type=GeForce&#34; title=&#34;License For Customer Use of NVIDIA GeForce Software&#34;&gt;NVIDIA の修正 EULA&lt;/a&gt; でもブロックチェーン処理は制限の対象から外れている（2.1.3 章）。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpu1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:media1&#34;&gt;おそらくある分野の最先端にいる人から見れば「ネットの情報は遅い」と感じるのではないだろうか。たとえばセキュリティ分野であれば，インシデントが公衆空間にて顕在化するか「対応済み」となった後でなければ公開されない。更にそれをテレビ・新聞等のメディアが報道するか否かは相当に恣意的である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:media1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>本当に「良心」を無意味化する時代がやってくる？ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/12/artificial-intelligence/" />
		<id>tag:text.Baldanders.info,2017-12-14:/remark/2017/12/artificial-intelligence/</id>
		<published>2017-12-14T18:29:03+09:00</published>
		<updated>2018-01-24T20:38:41+09:00</updated>
		<summary>万引きが心配なら客が手に取った商品を機械が読み取って勝手に精算してしまえばいい。店員がレジの金をちょろまかすなら，そもそもレジなんか置かなきゃいいのだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/column/17/120600561/120700001/&#34;&gt;元気な日の丸スタートアップ - Amazon GOよりも早く実用化へ、国内で無人レジのAIコンビニ：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事に掲載されている写真，上から店内を見下ろす構図を見てピンと来る人は多いんじゃないだろうか。
そう，これは万引き監視のカメラ構図である。&lt;/p&gt;

&lt;p&gt;そういえば以前&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/10/artificial-intelligence/&#34;&gt;AI は人（の良心）を殺すか？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という記事を書いた。
この記事の元ネタは yomoyomo さんの以下の記事なのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2016/06/54411/&#34;&gt;ユートピアのキモさと人工知能がもたらす不気味の谷 - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20161010/kobayashihideo&#34;&gt;人工知能は人間を人間でなくすのか？ - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;犯罪をなくすには犯罪が起きるリスクを減らせばよい。
万引きが心配なら客が手に取った商品を機械が読み取って勝手に精算してしまえばいい。
店員がレジの金をちょろまかすなら，そもそもレジなんか置かなきゃいいのだ。&lt;/p&gt;

&lt;p&gt;まさに人の「良心」を無意味化する社会が AI によってもたらされる日も近いのかもしれない。
シンギュラリティ仮説なんか目じゃないよね（笑）&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;後期近代社会における社会統制の基調にあるもの、それは「保険統計主義」である。
すでにみたように〔第2章の表2-2（一一九頁）〕、ここでは正義を追求することよりも被害を最小限にすることが求められている。
そして犯罪や逸脱の原因を探ったところで犯罪という社会問題は解決しないとみなされている。
保険統計主義の中心にあるのはリスク計算である。
それは精度の高い確率論的解析であり、そこで注意が向けられるのは問題の原因ではなく、その問題が起こる蓋然性である。
保険統計主義にとって重要なのは、正義ではなく、被害の最小化である。
それが目的とするのは、世界から犯罪をなくすことではなく、損害を最小限にする効果的手段である。
それが追求するのは、ユートピアをつくりだすことではなく、敵意に満ちたこの世界に塀で囲まれた小さな楽園をできるだけ多くつくりだすことである。&lt;/q&gt;
（p.170）
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4903127044/baldandersinf-22/&#34;&gt;排除型社会&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;無人コンビニは「人の良心を無意味化する社会」を象徴するものになるかもしれない。
良心やマナーや規則・罰則に頼らずとも人を統制できるのなら，道徳教育なんて要らなくなるかもね♥&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2018/01/23/2018-01-21-inside-amazons-surveillance-powered-no-checkout-convenience-store/&#34;&gt;Amazonの、監視カメラだらけのレジ無しコンビニエンスストアにて  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;reference&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4903127044/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/417iD4x5N%2BL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4903127044/baldandersinf-22/&#34;&gt;排除型社会―後期近代における犯罪・雇用・差異&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ジョック ヤング Jock Young &lt;/dd&gt;&lt;dd&gt;洛北出版 2007-03&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791764331/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791764331.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;後期近代の眩暈―排除から過剰包摂へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4255008515/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4255008515.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;断片的なものの社会学&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4796700439/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4796700439.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スティグマの社会学―烙印を押されたアイデンティティ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791764242/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791764242.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;新しい貧困 労働消費主義ニュープア&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4062881357/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4062881357.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;弱者の居場所がない社会――貧困・格差と社会的包摂 (講談社現代新書)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000410.shtml&#34;&gt;感想はこちら&lt;/a&gt;。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-15&#34;&gt;2015-09-15&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「自動販売機の気持ちになって考える」 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/do-you-understand-what-a-computer-is/" />
		<id>tag:text.Baldanders.info,2017-11-24:/remark/2017/11/do-you-understand-what-a-computer-is/</id>
		<published>2017-11-24T12:07:09+09:00</published>
		<updated>2017-11-24T12:07:09+09:00</updated>
		<summary>機械は人間のようには考えない。「機械（＝コンピュータ）が考える」というのはどういうことなのか。これを過不足なく説明するのは意外に難しい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://twitter.com/hyuki/status/933850105614032897&#34;&gt;結城浩さんの tweet&lt;/a&gt; で&lt;/p&gt;

&lt;div&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;プログラミングの課題で「自動販売機のシミュレータを作れ」というのはいい問題ではないかとよく思う。易しいものから、難しいものまで、仕様しだいでいろいろできる。GUIの有無、商品の種類、在庫管理、金種管理、各種アラート…&lt;/p&gt;&amp;mdash; 結城浩 (@hyuki) &lt;a href=&#34;https://twitter.com/hyuki/status/933850105614032897?ref_src=twsrc%5Etfw&#34;&gt;2017年11月24日&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;p&gt;というのがあって，続きの tweets から見ても（プログラミングというよりは）システム設計（もしくは base design）のことを指しているのは明らかなんだけど，私が連想したのは梅津信幸さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774116009/baldandersinf-22/&#34;&gt;あなたはコンピュータを理解していますか？&lt;/a&gt;』だった。&lt;/p&gt;

&lt;p&gt;この本は&lt;a href=&#34;http://www.baldanders.info/spiegel/log/nikki-s/200211.html#1706&#34;&gt;2002年に出版&lt;/a&gt;されていて，これ自体は恐らく絶版なのだが，&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;2007年にリニュール本が出ている&lt;/a&gt;ようだ。
さっそく発注してしまった（笑）&lt;/p&gt;

&lt;p&gt;この本で一番印象に残っていたのが第3章の「自動販売機はコンピュータ理解の始まり」である。
この章では&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;客がお金を入れる&lt;/li&gt;
&lt;li&gt;客が商品（ジュース1本）を注文する&lt;/li&gt;
&lt;li&gt;自動販売機が商品を出す&lt;/li&gt;
&lt;li&gt;自動販売機がお釣りを返す&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という流れを人間がシミュレーションしていて，特に「機械がお金を計算する」方法について図解で説明されているのが秀逸だった。
つまり「自動販売機の気持ちになって考える」わけだ。&lt;/p&gt;

&lt;p&gt;機械は人間のようには考えない。
「機械（＝コンピュータ）が考える」というのはどういうことなのか。
これを過不足なく説明するのは意外に難しい。
用語を並べ立てて煙に巻くか，頭の悪い擬人化でお茶を濁すのがせいぜいだろう。
私もちゃんと説明できるか自信がない。
でも，それを考えるのがプログラミングの最初の1フィートである。&lt;/p&gt;

&lt;p&gt;どうせ学校教育でプログラミングを教えるのなら，「自動販売機の気持ちになって考える」からやっていただきたいものだ。
「プログラミング言語」なんか必要ないのである。
機械が人間の書いたプログラムを「理解」して実行する，というのは大いなる誤解である。
たとえば，そうした誤解が「&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/the-myth-of-the-singularity/&#34; title=&#34;『シンギュラリティの神話』を読む&#34;&gt;シンギュラリティ神話&lt;/a&gt;」へ向かわせるのなら「プログラミング言語」を習うとかむしろ有害かもしれない。&lt;/p&gt;

&lt;p&gt;学生の時に読んだ「日経サイエンス」の記事にティンカートイで3目並べを解くプログラムを組む話があったが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ttc1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ttc1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，どんなにコンピュータ技術が発達しても（量子コンピュータが登場しても）スタートラインは常に「ここ」なので，それを忘れないでほしいのですよ。&lt;/p&gt;

&lt;p&gt;まぁ，本気で AI が発達してノイマン型コンピュータが廃れたら説明の根本が変わるだろうけど，それは当分先の話（多分）。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51W3fP3Q%2BtL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;あなたはコンピュータを理解していますか? 10年後、20年後まで必ず役立つ根っこの部分がきっちりわかる！ (サイエンス･アイ新書)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;梅津 信幸 &lt;/dd&gt;&lt;dd&gt;ソフトバンク クリエイティブ 2007-03-16&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797354690/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797354690.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;あなたはネットワークを理解していますか? インターネット時代に欠かせない根っこの知識が確実に身につく! (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4087474283/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4087474283.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;痛快!コンピュータ学 (集英社文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774124222/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774124222.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピュータのしくみを理解するための10章&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797348747/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797348747.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;カラー図解でわかる通信のしくみ あなたはインターネット&amp;モバイル通信をどこまで理解していますか? (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797370939/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797370939.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;図解でかんたんアルゴリズム 情報処理のかなめとなる考え方が手に取るようにわかる! (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822281655/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822281655.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピュータはなぜ動くのか～知っておきたいハードウエア＆ソフトウエアの基礎知識～&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797384298/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797384298.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピューター&amp;テクノロジー解体新書&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822282708/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822282708.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報はなぜビットなのか 知っておきたいコンピュータと情報処理の基礎知識&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4816352481/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4816352481.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;史上最強カラー図解 プロが教えるパソコンのすべてがわかる本&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4794220588/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4794220588.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;文庫 思考する機械コンピュータ (草思社文庫)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;2002年に技術評論社から出た同名タイトルのリニューアルらしい。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-11-24&#34;&gt;2017-11-24&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ttc1&#34;&gt;この話「三目並べをするティンカートイ・コンピュータ」は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4532511135/baldandersinf-22/&#34;&gt;別冊日経サイエンス コンピューターレクリエーション 4 遊びの展開&lt;/a&gt;』に収録されていたのだが，絶版本とは言え，どえらい値段がついてるな（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ttc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「改憲」という要求開発 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/requirement-development/" />
		<id>tag:text.Baldanders.info,2017-10-23:/remark/2017/10/requirement-development/</id>
		<published>2017-10-23T17:45:41+09:00</published>
		<updated>2017-10-26T14:08:23+09:00</updated>
		<summary>やぁ，選挙が終わりましたよ。ようやくこれで胡乱なことが喋れるよ（笑）</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;やぁ，選挙が終わりましたよ。
ようやくこれで胡乱なことが喋れるよ（笑） みんなよく選挙期間中に公衆空間で具体的な候補者を名指しでこき下ろしたり礼賛したりできるな。
私は選管や選管に密告するネットユーザが怖いので無理です。&lt;/p&gt;

&lt;p&gt;さっそく頭のなかでトグロを巻いてる色々な雑念を &lt;a href=&#34;https://scrapbox.io/spiegel-branch/&#34; title=&#34;Spiegel&#39;s Branch - Scrapbox&#34;&gt;Scrapbox&lt;/a&gt; に吐き出していく（外部記憶に書いて忘れるため）。
そこで半分無意識に書いた&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt; 
&lt;q&gt;普通は逆。国家の主権者のアイデンティティを担保するものとして憲法がある。太平洋戦争で何もかもぶっ壊された当時の日本人には自分たちを肯定するものが天皇と憲法しかなかったのかもしれないが。改憲議論を含めて憲法について考えるなら，自分たちの行動規範や慣習の源泉（ルーツ）について突き詰めていく作業が不可欠だが，突き詰めていくと当の憲法にぶち当たって，そこより以前とは断絶状態になっている&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://scrapbox.io/spiegel-branch/%E6%94%B9%E6%86%B2&#34;&gt;改憲 - Spiegel&amp;#39;s Branch - Scrapbox&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;を眺めていて（我ながら珍しいことを書くなぁ）ふと思いついた。&lt;/p&gt;

&lt;p&gt;「これってコーランのことなんじゃね&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:quran1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:quran1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;？」&lt;/p&gt;

&lt;p&gt;なんでこんな明後日の方向に思考が飛んだかというと，以下の記事を思い出したからだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://30th.rcast.u-tokyo.ac.jp/future/future01.html&#34;&gt;対話する「未来論」：イスラームの宗教と脳の機能は交差する。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;正直な話，最初にこれを読んだときにはうまく脳に馴染まなかった。
ただ，この中で西欧（ギリシア哲学）的な思考とイスラーム教的な思考の違いが分かりやすく例示されている。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt; 
&lt;q&gt;例えば高校で数学の問題集をわれわれは渡されて、解答は渡されずに、数学的な真理を見出していく。後で先生が解答集から答えを見せてくれて、それ以前の人間がすでに見出していた真理と照らし合わせて理解する、そういうやり方でわれわれは数学を学びますよね。これはギリシア哲学の時代の、つまり近代的な自我を課題にするようになる以前の、科学としての哲学の方法論です。それに対して、コーランは神が啓示で真理を下した、いわば「解答集」であって、人間はそこから逆算して世界に存在する問題を認識する。問題を認識すると同時に答えも与えられている。そもそも答えが先にあって、答えにあるように世界に存在する問題読み取るのですから、答えがあるのは当たり前なのですが、しかしとにかくそのように解答と問いを同時に受け取って、世界と人間の生命に対する確信を得る。究極のマニュアルなんですね。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://30th.rcast.u-tokyo.ac.jp/future/future01.html&#34;&gt;対話する「未来論」：イスラームの宗教と脳の機能は交差する。&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;具体的には算数で「$1+1=\,?$」という問題と「$2$」という解答のセットがあるとする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:math1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:math1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
そこで「$1+1$」について考察し解答である「$2$」を導き出すのが西欧的思考で，「$1+1=2$ である」を絶対として無条件に受け入れるのがイスラーム教的思考と考えればいいのだろうか（算数に関しては日本の学校教育は後者な気もするが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ed1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ed1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;）。&lt;/p&gt;

&lt;p&gt;実はコンピュータ・エンジニアも似たようなことをする。
それは TDD (Test-Driven Development) である。&lt;/p&gt;

&lt;p&gt;TDD では先に「テスト」を書く。
つまり「問題と解答」のセットを先に作るのである。
そして入力した問題に対して必ず「正しい」解答が出力されるよう手順（algorithm）を記述するのがプログラミングである。&lt;/p&gt;

&lt;p&gt;たとえば「20と32の最大公約数は4」を導く手順としては&lt;a href=&#34;http://text.baldanders.info/golang/greatest-common-divisor/&#34;&gt;「ユークリッド互除法」が有名&lt;/a&gt;だが，なぜ「ユークリッド互除法」で最大公約数が解けるのかエンジニアは考えない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gcd1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gcd1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
テストが要求する $gcd(20,32)=4$ を実装できることが重要なのである。
そもそも大抵の数学ライブラリに入ってるしね（笑）&lt;/p&gt;

&lt;p&gt;現在の日本国憲法が日本人にとって「最後の憲法&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:quran2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:quran2&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;」であるなら「改憲」議論そのものがナンセンスだろう。
実際そのように考えている政治家（やその支持者）は多そうだ。&lt;/p&gt;

&lt;p&gt;憲法に関しては，私はそっちに与しないが。&lt;/p&gt;

&lt;p&gt;たとえば，上で挙げた TDD は「テストは正しい」ことが必要条件である。
「テストは正しい」と信じられなければ，そもそも TDD は成立しないのだ。&lt;/p&gt;

&lt;p&gt;エンジニアがアルゴリズム偏重になることについては苦言を呈する人もいる。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;プログラミングにおける何らかの問題に取り組むとき、まず私たちはその問題が何であるのか、そしてそれは本当に問題であるのかを見極めなければならない。その問題が本当にプログラミングで解決できる問題かどうかを考慮せず、プログラミングで解決することに固執し、「なぜ問題なのか」という視点を失ってしまっては、そこから何も得ることはできない。それがプログラミングで解決できる問題であろうと、なかろうとだ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/17/20160510please-dont-learn-to-code/&#34;&gt;頼むからプログラミングを学ばないでくれ | TechCrunch Japan&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;これは全くもってそのとおり。
エンジニアリングの世界ではこれを「要求定義」もしくはもう少し推し進めて「要求開発」と呼ぶ。&lt;/p&gt;

&lt;p&gt;私たち日本人に日本国憲法を「最後の憲法」たらしめんとする圧力の源は何なのか。
そこから考え始めるべきではないのだろうか。
それも「要求開発」である。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://shinodahideaki.blog.jp/archives/16834872.html&#34;&gt;護憲派は改憲案に賛成すべきだ : 「平和構築」を専門にする国際政治学者&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shinodahideaki.blog.jp/archives/21571730.html&#34;&gt;立憲民主党の未来は実は改憲にある : 「平和構築」を専門にする国際政治学者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shinodahideaki.blog.jp/archives/21632477.html&#34;&gt;長谷部恭男教授の「立憲主義」は、集団的自衛権の違憲性を説明しない : 「平和構築」を専門にする国際政治学者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/10/the-48th-general-election/&#34;&gt;第48回衆議院議員総選挙&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822282686/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/512Y77Y5WDL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822282686/baldandersinf-22/&#34;&gt;要求開発~価値ある要求を導き出すプロセスとモデリング&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;山岸 耕二 安井 昌男 萩本 順三 河野 正幸 野田 伊佐夫 平鍋 健児 細川 努 依田 智夫 ［要求開発アライアンス］ &lt;/dd&gt;&lt;dd&gt;日経BP社 2006-03-02&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822283585/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822283585.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UMLモデリング入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798121967/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798121967.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;エリック・エヴァンスのドメイン駆動設計 (IT Architects’Archive ソフトウェア開発の実践)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492961143/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4492961143.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビジネスプロセスの教科書&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822283496/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822283496.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UMLモデリングレッスン&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274505219/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274505219.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ソフトウェアエンジニアリング基礎知識体系 ―SWEBOK V3.0―&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320023528/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4320023528.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;要求仕様の探検学―設計に先立つ品質の作り込み&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4764904047/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4764904047.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;要求工学知識体系 第1版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798114456/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798114456.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ユースケース駆動開発実践ガイド (OOP Foundations)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;要求は開発するものらしい。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-01-24&#34;&gt;2017-01-24&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621045938/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51XGP8AFX2L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621045938/baldandersinf-22/&#34;&gt;いかにして問題をとくか&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;G. ポリア 柿内 賢信 &lt;/dd&gt;&lt;dd&gt;丸善 1975-04-01&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621085298/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4621085298.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;いかにして問題をとくか・実践活用編&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4061497863/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4061497863.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学的思考法―説明力を鍛えるヒント  講談社現代新書&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/462108819X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/462108819X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学×思考=ざっくりと  いかにして問題をとくか&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797375698/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797375698.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4185086180/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4185086180.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;授業研究に学ぶ高校新数学科の在り方&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;数学書。というか問いの立てかたやものの考え方についての指南書。のようなものかな。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-09-26&#34;&gt;2014/09/26&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;!-- eof --&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:quran1&#34;&gt;いや，イスラーム教徒の方は怒らないでね。この手の「思考の横滑り」は私にはいつものことなので笑って許してください。私はエンジニアだけど，いつも論理的に考えているわけじゃあないんだよ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:quran1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:math1&#34;&gt;厳密には $1+1=2$ というのは「$1+1$ と $2$ は常に等しい」という意味の恒等式であるが，細かいことは言わないでおく。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:math1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ed1&#34;&gt;そうでなければ「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000744.shtml&#34; title=&#34;日本の「算数」は壊れてる？ — Baldanders.info&#34;&gt;掛け算は順序が大事&lt;/a&gt;」みたいな大惨事にはならないだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ed1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gcd1&#34;&gt;いや，さすがに現場のエンジニアは学生時代に一度くらいは「ユークリッドの互除法」を証明したことがあるだろけど。やったことないって人や忘れてしまった人は&lt;a href=&#34;https://cakes.mu/posts/16292&#34;&gt;結城浩さんの「数学ガールの秘密ノート」の連載で「ユークリッドの互除法」が登場する&lt;/a&gt;ので読むといいだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gcd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:quran2&#34;&gt;「&lt;a href=&#34;http://30th.rcast.u-tokyo.ac.jp/future/future01.html&#34;&gt;イスラームの宗教と脳の機能は交差する。&lt;/a&gt;」には「最後」について「宗教的に画期的な「発明」」と書かれている： 「イスラーム教徒は「最後の預言者であるムハンマドに託された最後の啓示の言葉」としてコーランを認識することで、「最後の次」の啓示というものが出てくることを、単に認識しません。誰かがどれだけよく考え抜いて、現代のグローバル化した人類社会の新たな環境に適合した新たな啓示の法はこうだ、と新しい宗教を提示しても、コーランの内容と比べてその新しい宗教が優れているか否か、ということをイスラーム教徒の側は誰も論じません。論じる必然性を全く感じないからです」
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:quran2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Glide から Dep への移行を検討する - golang</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/golang/consider-switching-from-glide-to-dep/" />
		<id>tag:text.Baldanders.info,2017-10-10:/golang/consider-switching-from-glide-to-dep/</id>
		<published>2017-10-10T18:02:56+09:00</published>
		<updated>2017-10-31T14:31:04+09:00</updated>
		<summary>つまり「依存関係（Vendoring）管理ツールとしては dep を推奨するけど移行できない人のために当面はサポートを続けるよ（でも将来は分からん）」という解釈でいいのだろうか。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="http://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（この記事は &lt;a href=&#34;https://qiita.com/spiegel-im-spiegel/items/e931ad1a7565d02d179e&#34;&gt;Qiita とのマルチポスト&lt;/a&gt;です。
まぁ，向こうは草稿版だけど）&lt;/p&gt;

&lt;p&gt;久しぶりに &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; を使おうと最新版（&lt;a href=&#34;https://github.com/Masterminds/glide/releases/tag/v0.13.0&#34; title=&#34;Release 0.13.0 · Masterminds/glide&#34;&gt;0.13.0&lt;/a&gt;）を見に行ったら “&lt;strong&gt;Consider switching to &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt;&lt;/strong&gt;” とか書いてあるじゃない。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Glide is used by a great number of projects and will continue to get support for some time.
But, the near future is likely in dep.
dep can handle importing Glide config files.
Please consider trying dep on your project or converting to dep.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/Masterminds/glide/releases/tag/v0.13.0&#34;&gt;Release 0.13.0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まじすか。&lt;/p&gt;

&lt;p&gt;つまり「依存関係（Vendoring）管理ツールとしては &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; を推奨するけど移行できない人のために当面はサポートを続けるよ（でも将来は分からん）」という解釈でいいのだろうか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;開発プロジェクトの公式ツールで，2017年の始めくらいに日本でも話題になったような気がするが，私は &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; で完全に満足していたのでスルーしていた。
こんなことになるなんて。
ならもう &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; に移行するしかないぢゃん。&lt;/p&gt;

&lt;p&gt;とはいえ，いきなり本番環境に投入するのは怖いので，なにか適当なテストケースはないか，と自分のリポジトリを漁ってたら丁度いいのがあったよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34;&gt;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これって&lt;a href=&#34;http://text.baldanders.info/golang/estimate-of-pi/&#34;&gt;モンテカルロ法で遊んでた&lt;/a&gt;ときに作ったものだ。
最悪ぶっ壊れてもいいので，これ使って試してみるか。&lt;/p&gt;

&lt;h2 id=&#34;dep-の取得&#34;&gt;&lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; の取得&lt;/h2&gt;

&lt;p&gt;まず &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; の取得から始めないとだが，リポジトリ自体は &lt;code&gt;go get&lt;/code&gt; コマンドで取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get -v github.com/golang/dep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これをこのままインストールしてもいいのだが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go install -v github.com/golang/dep/cmd/dep&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/golang/dep/releases&#34; title=&#34;Releases · golang/dep&#34;&gt;リリースページ&lt;/a&gt;にビルド済みのモジュールが置かれているので，ありがたくこれを使わせてもらおう。&lt;/p&gt;

&lt;p&gt;最新版（現時点で &lt;a href=&#34;https://github.com/golang/dep/releases/tag/v0.3.2&#34; title=&#34;Release v0.3.2 · golang/dep&#34;&gt;v0.3.2&lt;/a&gt;）には Windows 用のモジュール &lt;code&gt;dep-windows-amd64&lt;/code&gt; もある。
Windows ユーザは何のファイルかと思うかもしれないが，実はこれ実行ファイルなので， &lt;code&gt;dep.exe&lt;/code&gt; にリネームしてそのまま使える。&lt;/p&gt;

&lt;p&gt;万が一があっては困るのでモジュールの SHA256 ハッシュ値を確認しておく（こういうのこそ OpenPGP を使ってくれないものか）。
Windows ユーザで Windows 8.1 以降であれば PowerShell（4.0 以上）で &lt;a href=&#34;http://technet.microsoft.com/en-us/library/dn520872.aspx&#34;&gt;&lt;code&gt;Get-FileHash&lt;/code&gt;&lt;/a&gt; コマンドレットが使える&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ps1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ps1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;n&#34;&gt;PS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Get-FileHash&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dep-windows-amd64&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Algorithm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SHA256&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Format-List&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;Algorithm&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SHA256&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Hash&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;      &lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Downloads&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dep-windows-amd64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを &lt;code&gt;dep-windows-amd64.sha256&lt;/code&gt; に記載されている値と比較する。
改竄されてなければ同じ値になるはずである。
目視は辛いのでテキストエディタ等の検索機能を使えばいいだろう。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【2017-10-31 追記】&lt;/strong&gt; だんだん面倒になってきたので&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hash&#34; title=&#34;spiegel-im-spiegel/hash: Calculating Hash Value&#34;&gt;ハッシュ値を計算するツール&lt;/a&gt;を作った。
詳しくは「&lt;a href=&#34;http://text.baldanders.info/golang/calculating-hash-value/&#34;&gt;Hash 値を計算するパッケージを作ってみた&lt;/a&gt;」を参照のこと。&lt;/p&gt;
&lt;/div&gt;

&lt;!--
Windows ユーザには（`sha256sum` といった）標準ツールがないのが痛いのだが， [7-Zip] があるなら，これを使ってハッシュ値を確認できる。

```text
$ 7z.exe h -scrcSHA256 dep-windows-amd64

7-Zip [64] 16.04 : Copyright (c) 1999-2016 Igor Pavlov : 2016-10-04

Scanning
1 file, 7696896 bytes (7517 KiB)

SHA256                                                                    Size  Name
---------------------------------------------------------------- -------------  ------------
D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A       7696896  dep-windows-amd64
---------------------------------------------------------------- -------------  ------------
D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A       7696896

Size: 7696896

SHA256 for data:              D4BF3EC10B1808CAB883C6AB2901C396CF463E684FDA350199E93E31806C194A

Everything is Ok
```

これを `dep-windows-amd64.sha256` に記載されている値と比較する。
改竄されてなければ同じ値になるはずである。
目視は辛いのでテキストエディタ等の検索機能を使えばいいだろう。

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を使っている人なら &lt;code&gt;.nyagos&lt;/code&gt; ファイルに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sha1sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%COMSPEC% /c &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;%PROGRAMFILES%/7-Zip/7z.exe&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; h -scrcSHA1 $*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sha256sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;%COMSPEC% /c &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;%PROGRAMFILES%/7-Zip/7z.exe&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; h -scrcSHA256 $*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか記述しておけば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sha256sum dep-windows-amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で同じ結果が得られる。
改竄の有無を確認するためにファイルのハッシュ値を調べることはよくあるので準備しておくとよい。&lt;/p&gt;
&lt;/div&gt;
--&gt;

&lt;p&gt;実行モジュールの動作確認もしておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep
dep is a tool for managing dependencies for Go projects

Usage: dep &amp;lt;command&amp;gt;

Commands:

  init     Initialize a new project with manifest and lock files
  status   Report the status of the project&amp;#39;s dependencies
  ensure   Ensure a dependency is safely vendored in the project
  prune    Prune the vendor tree of unused packages
  version  Show the dep version information

Examples:
  dep init                               set up a new project
  dep ensure                             install the project&amp;#39;s dependencies
  dep ensure -update                     update the locked versions of all dependencies
  dep ensure -add github.com/pkg/errors  add a dependency to the project

Use &amp;#34;dep help [command]&amp;#34; for more information about a command.

$ dep version
dep:
 version     : v0.3.1
 build date  : 2017-09-19
 git hash    : 83789e2
 go version  : go1.9
 go compiler : gc
 platform    : windows/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;glide-から-dep-への移行&#34;&gt;&lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; から &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; への移行&lt;/h2&gt;

&lt;p&gt;お試し用の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34; title=&#34;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&#34;&gt;spiegel-im-spiegel/pi&lt;/a&gt; をビルド可能な適当な場所に置く。&lt;/p&gt;

&lt;p&gt;このパッケージの &lt;code&gt;glide.yaml&lt;/code&gt; はこんな感じになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/pi&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;import&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/gocli&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/cobra&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/pkg/errors&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/seehuhn/mt&lt;span class=&#34;m&#34;&gt;19937&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/gorand&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;package&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/uint&lt;span class=&#34;m&#34;&gt;128&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また &lt;code&gt;glide.lock&lt;/code&gt; はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;hash&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;d570123d6231810c51dd17e415673df221fb2dec7ef6ab45cd34093002a87cbb&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;updated&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ld&#34;&gt;2016-11-16T17:28:38.2997832&lt;/span&gt;+&lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;imports&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/gorand&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;189780b8053a44a111339a4248394fd844c1da&lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;subpackages&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lcg&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/davidminor/uint&lt;span class=&#34;m&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5745f1bf80414e0ad2670e85d6aece8c58031def&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/inconshreveable/mousetrap&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;76626ae9c91c4f2a10f34cad8ce83ea42c93bb&lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/pkg/errors&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;248dadf4e9068a0b3e79f02ed0a610d935de&lt;span class=&#34;m&#34;&gt;5302&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/seehuhn/mt&lt;span class=&#34;m&#34;&gt;19937&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;98c0ea580d2f3c5a171acf4d4f15321b72209d&lt;span class=&#34;m&#34;&gt;08&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/cobra&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;6b74a60562f5c1c920299b8f02d153e16f4897fc&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spf&lt;span class=&#34;m&#34;&gt;13&lt;/span&gt;/pflag&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5ccb023bc27df288a957c5e994cd44fd&lt;span class=&#34;m&#34;&gt;19619465&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;github.com/spiegel-im-spiegel/gocli&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;version&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;5929f04fb8e4a19ac29fdf658866f9441f339cd&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;testImports&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この状態で &lt;code&gt;dep init&lt;/code&gt; コマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep init
Importing configuration from glide. These are only initial constraints, and are further refined during the solve process.
Detected glide configuration files...
Converting from glide.yaml and glide.lock...
  Using * as initial constraint for imported dep github.com/spiegel-im-spiegel/gocli
  Trying v0.3.0 (5929f04) as initial lock for imported dep github.com/spiegel-im-spiegel/gocli
  Using * as initial constraint for imported dep github.com/spf13/cobra
  Trying * (6b74a60) as initial lock for imported dep github.com/spf13/cobra
  Using * as initial constraint for imported dep github.com/pkg/errors
  Trying * (248dadf) as initial lock for imported dep github.com/pkg/errors
  Using * as initial constraint for imported dep github.com/seehuhn/mt19937
  Trying master (98c0ea5) as initial lock for imported dep github.com/seehuhn/mt19937
  Using * as initial constraint for imported dep github.com/davidminor/gorand
  Trying * (189780b) as initial lock for imported dep github.com/davidminor/gorand
  Using * as initial constraint for imported dep github.com/davidminor/uint128
  Trying master (5745f1b) as initial lock for imported dep github.com/davidminor/uint128
  Using * as initial constraint for imported dep github.com/inconshreveable/mousetrap
  Trying v1.0 (76626ae) as initial lock for imported dep github.com/inconshreveable/mousetrap
  Using * as initial constraint for imported dep github.com/spf13/pflag
  Trying * (5ccb023) as initial lock for imported dep github.com/spf13/pflag&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実は &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Command line interface&#34;&gt;spiegel-im-spiegel/gocli&lt;/a&gt; パッケージの最新版は v0.4.0 だが， &lt;code&gt;glide.lock&lt;/code&gt; の内容を読み取って，ちゃんと v0.3.0 のものを取ってきているようだ。
偉いぞ！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;dep init&lt;/code&gt; コマンドにより &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; および &lt;code&gt;Gopkg.lock&lt;/code&gt; の2つのファイルと &lt;code&gt;vendor/&lt;/code&gt; フォルダが作成される。
このうち &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; の内容は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/gorand&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/pkg/errors&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/seehuhn/mt19937&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そして &lt;code&gt;Gopkg.lock&lt;/code&gt; の内容は以下の通りだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/gorand&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;lcg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;189780b8053a44a111339a4248394fd844c1da40&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/davidminor/uint128&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5745f1bf80414e0ad2670e85d6aece8c58031def&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/inconshreveable/mousetrap&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;76626ae9c91c4f2a10f34cad8ce83ea42c93bb75&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;v1.0&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/pkg/errors&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;248dadf4e9068a0b3e79f02ed0a610d935de5302&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/seehuhn/mt19937&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;98c0ea580d2f3c5a171acf4d4f15321b72209d08&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;6b74a60562f5c1c920299b8f02d153e16f4897fc&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/pflag&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5ccb023bc27df288a957c5e994cd44fd19619465&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;projects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;packages&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;revision&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;5929f04fb8e4a19ac29fdf658866f9441f339cd9&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;v0.3.0&amp;#34;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;solve&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;analyzer&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dep&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;analyzer&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;inputs&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;digest&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;4a7cc1799d386351173ccdf8266d22ebe2971ce7ba417395a0b63ca267ea9267&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;solver&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gps-cdcl&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;solver&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;glide.lock&lt;/code&gt; と &lt;code&gt;Gopkg.lock&lt;/code&gt; の内容がきちんとマッチしているのが分かると思う。
念のため &lt;code&gt;dep status&lt;/code&gt; も見ておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status
PROJECT                               CONSTRAINT  VERSION        REVISION  LATEST   PKGS USED
github.com/davidminor/gorand          *                          189780b            1
github.com/davidminor/uint128         *           branch master  5745f1b   5745f1b  1
github.com/inconshreveable/mousetrap  *           v1.0           76626ae   76626ae  1
github.com/pkg/errors                 *                          248dadf            1
github.com/seehuhn/mt19937            *           branch master  98c0ea5   98c0ea5  1
github.com/spf13/cobra                *                          6b74a60            1
github.com/spf13/pflag                *                          5ccb023            1
github.com/spiegel-im-spiegel/gocli   *           v0.3.0         5929f04   ce636bb  1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ビルドもちゃんと通る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go build -v .
github.com/spiegel-im-spiegel/pi/vendor/github.com/spiegel-im-spiegel/gocli
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/pflag
github.com/spiegel-im-spiegel/pi/vendor/github.com/inconshreveable/mousetrap
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/uint128
github.com/spiegel-im-spiegel/pi/vendor/github.com/seehuhn/mt19937
github.com/spiegel-im-spiegel/pi/vendor/github.com/pkg/errors
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/lcg
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/qq
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで， &lt;code&gt;glide.yaml&lt;/code&gt; と &lt;code&gt;glide.lock&lt;/code&gt; が正しい状態で残っていれば問題なく &lt;a href=&#34;https://github.com/golang/dep&#34; title=&#34;golang/dep: Go dependency management tool&#34;&gt;dep&lt;/a&gt; に移行できそうだ。&lt;/p&gt;

&lt;h2 id=&#34;依存関係の管理&#34;&gt;依存関係の管理&lt;/h2&gt;

&lt;p&gt;ところで，この状態で &lt;code&gt;dep ensure&lt;/code&gt; コマンドを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Gopkg.lock was already in sync with imports and Gopkg.toml
(1/8) Wrote github.com/seehuhn/mt19937@master
(2/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(3/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(4/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(5/8) Wrote github.com/davidminor/uint128@master
(6/8) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(7/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じで &lt;code&gt;Gopkg.lock&lt;/code&gt; ファイルも特に更新されないが，いったん &lt;code&gt;vendor/&lt;/code&gt; フォルダを削除して（またはリネームして）同じことをすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Root project is &amp;#34;github.com/spiegel-im-spiegel/pi&amp;#34;
 19 transitively valid internal packages
 12 external packages imported from 10 projects

...

(1/22) Wrote github.com/mitchellh/mapstructure@master
(2/22) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(3/22) Wrote gopkg.in/yaml.v2@v2
(4/22) Wrote github.com/davidminor/uint128@master
(5/22) Wrote github.com/fsnotify/fsnotify@v1.4.2
(6/22) Wrote github.com/magiconair/properties@v1.7.3
(7/22) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/22) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(9/22) Wrote github.com/seehuhn/mt19937@master
(10/22) Wrote github.com/pelletier/go-toml@v1.0.1
(11/22) Wrote github.com/spf13/afero@master
(12/22) Wrote github.com/cpuguy83/go-md2man@v1.0.7
(13/22) Wrote github.com/spf13/cast@v1.1.0
(14/22) Wrote github.com/hashicorp/hcl@master
(15/22) Wrote github.com/spf13/jwalterweatherman@master
(16/22) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(17/22) Wrote github.com/spf13/viper@v1.0.0
(18/22) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(19/22) Wrote github.com/russross/blackfriday@v1.5
(20/22) Wrote golang.org/x/sys@master
(21/22) Wrote github.com/inconshreveable/mousetrap@v1.0
(22/22) Wrote golang.org/x/text@master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;（途中の表示を省いている。ご容赦）&lt;/p&gt;

&lt;p&gt;と「え？ それ要らんやろ」ってなパッケージまで読み込んでくる。
うーん。
どうやら使わないサブパッケージまで依存関係を追跡してるみたい。&lt;/p&gt;

&lt;p&gt;そこで &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; に以下の記述を加えて余計なパッケージを読み込ませないようにした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ignored&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/cpuguy83/go-md2man/md2man&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/russross/blackfriday&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra/doc&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/cobra/cobra/cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spf13/viper&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ついでに &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; で &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Command line interface&#34;&gt;spiegel-im-spiegel/gocli&lt;/a&gt; パッケージのバージョンを明記する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでもう一度 &lt;code&gt;dep ensure&lt;/code&gt; コマンドを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v
Root project is &amp;#34;github.com/spiegel-im-spiegel/pi&amp;#34;
 19 transitively valid internal packages
 8 external packages imported from 8 projects

...

(1/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(2/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(3/8) Wrote github.com/spiegel-im-spiegel/gocli@v0.3.0
(4/8) Wrote github.com/seehuhn/mt19937@master
(5/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(6/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(7/8) Wrote github.com/davidminor/uint128@master
(8/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり &lt;code&gt;dep status&lt;/code&gt; コマンドの実行結果も&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status
PROJECT                               CONSTRAINT  VERSION        REVISION  LATEST   PKGS USED
github.com/davidminor/gorand          *                          189780b            1
github.com/davidminor/uint128         *           branch master  5745f1b   5745f1b  1
github.com/inconshreveable/mousetrap  *           v1.0           76626ae   76626ae  1
github.com/pkg/errors                 *                          248dadf            1
github.com/seehuhn/mt19937            *           branch master  98c0ea5   98c0ea5  1
github.com/spf13/cobra                *                          6b74a60            1
github.com/spf13/pflag                *                          5ccb023            1
github.com/spiegel-im-spiegel/gocli   ^0.3.0      v0.3.0         5929f04   5929f04  1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と元に戻った。
不要なサブパッケージを排除するのはちょっと面倒くさそうである。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; のバージョン指定は “&lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt;” に従っている。
具体的には “&lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt;” の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;実装である &lt;a href=&#34;https://github.com/Masterminds/semver&#34; title=&#34;Masterminds/semver: Work with Semantic Versions in Go&#34;&gt;Masterminds/semver&lt;/a&gt; パッケージを参照するとよい。&lt;/p&gt;

&lt;h2 id=&#34;依存関係の視覚化&#34;&gt;依存関係の視覚化&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;dep status&lt;/code&gt; コマンドには結果を DOT 言語で吐き出すオプションがあるようだ。
&lt;a href=&#34;http://www.graphviz.org/&#34; title=&#34;Graphviz | Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; があれば，この出力結果を画像データに変換できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep status -dot | dot -Tpng -o pi-dependency.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;結果はこんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;http://text.baldanders.info/images/pi-dependency.png&#34;&gt;&lt;img src=&#34;http://text.baldanders.info/images/pi-dependency.png&#34; srcset=&#34;http://text.baldanders.info/images/pi-dependency.png 1428w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;pi-dependency.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://text.baldanders.info/images/pi-dependency.png&#34;&gt;pi-dependency.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ブラボー！&lt;/p&gt;

&lt;h2 id=&#34;リポジトリへのパスを直接指定する&#34;&gt;リポジトリへのパスを直接指定する&lt;/h2&gt;

&lt;p&gt;GitHub みたいな有名 SaaS に置いてあるパッケージなら &lt;a href=&#34;https://github.com/golang/dep/blob/master/docs/Gopkg.toml.md&#34; title=&#34;dep/Gopkg.toml.md at master · golang/dep&#34;&gt;&lt;code&gt;Gopkg.toml&lt;/code&gt;&lt;/a&gt; に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか書けば適切に処理してくれるけど，有名でない SaaS ディレクトリや職場 LAN のリポジトリ上のパッケージではこうはいかないこともある。
こういう場合には，以下に示す通り，直接リポジトリへの（プロトコルを含めた）パスを指定する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli&amp;#34;&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;git@github.com:spiegel-im-spiegel/gocli.git&amp;#34;&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.3.0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで &lt;code&gt;dep ensure&lt;/code&gt; すれば&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ dep ensure -v

...

&lt;span class=&#34;hl&#34;&gt;(1/8) Wrote github.com/spiegel-im-spiegel/gocli (from git@github.com:spiegel-im-spiegel/gocli.git)@v0.3.0
&lt;/span&gt;(2/8) Wrote github.com/pkg/errors@248dadf4e9068a0b3e79f02ed0a610d935de5302
(3/8) Wrote github.com/davidminor/gorand@189780b8053a44a111339a4248394fd844c1da40
(4/8) Wrote github.com/spf13/pflag@5ccb023bc27df288a957c5e994cd44fd19619465
(5/8) Wrote github.com/inconshreveable/mousetrap@v1.0
(6/8) Wrote github.com/davidminor/uint128@master
(7/8) Wrote github.com/spf13/cobra@6b74a60562f5c1c920299b8f02d153e16f4897fc
(8/8) Wrote github.com/seehuhn/mt19937@master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;といった感じになる。
ちゃんと指定したリポジトリからパッケージを取得してきているのが分かるだろう。&lt;/p&gt;

&lt;h2 id=&#34;go-1-9-から-glide-novendor-は必要なくなった&#34;&gt;Go 1.9 から glide novendor は必要なくなった&lt;/h2&gt;

&lt;p&gt;Vendoring で一番あつかいに困るのがテストで，たとえば安直に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go test -v ./...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とかやると &lt;code&gt;vendor/&lt;/code&gt; フォルダ以下のパッケージまでテスト・シーケンスが走ってしまうのが困りものであった。
このため &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; にはこれを回避する &lt;code&gt;glide novendor&lt;/code&gt; コマンドがあって&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go test -v $(glide novendor)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすることで &lt;code&gt;vendor/&lt;/code&gt; フォルダへのテストを回避できるようになっていたのだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tst1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tst1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ところがところがである！！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt; 1.9 からは &lt;code&gt;./...&lt;/code&gt; の扱いが変更になり&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;“By popular request, &lt;code&gt;./...&lt;/code&gt; no longer matches packages in &lt;code&gt;vendor&lt;/code&gt; directories in tools accepting package names, such as &lt;code&gt;go test&lt;/code&gt;.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/go1.9#vendor-dotdotdot&#34;&gt;Go 1.9 Release Notes&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということで &lt;code&gt;./...&lt;/code&gt; に &lt;code&gt;vendor/&lt;/code&gt; フォルダ以下が含まれないことになったのだ。
たとえば &lt;a href=&#34;https://github.com/spiegel-im-spiegel/pi&#34; title=&#34;spiegel-im-spiegel/pi: Estimate of Pi with Monte Carlo method.&#34;&gt;spiegel-im-spiegel/pi&lt;/a&gt; パッケージの場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go list ./...
github.com/spiegel-im-spiegel/pi
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/qq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となる。
逆に &lt;code&gt;vendor/&lt;/code&gt; フォルダも含めたいなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go list ./... ./vendor/...
github.com/spiegel-im-spiegel/pi
github.com/spiegel-im-spiegel/pi/cmd
github.com/spiegel-im-spiegel/pi/estmt
github.com/spiegel-im-spiegel/pi/gencmplx
github.com/spiegel-im-spiegel/pi/genpi
github.com/spiegel-im-spiegel/pi/plot
github.com/spiegel-im-spiegel/pi/qq
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/lcg
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/gorand/pcg
github.com/spiegel-im-spiegel/pi/vendor/github.com/davidminor/uint128
github.com/spiegel-im-spiegel/pi/vendor/github.com/inconshreveable/mousetrap
github.com/spiegel-im-spiegel/pi/vendor/github.com/pkg/errors
github.com/spiegel-im-spiegel/pi/vendor/github.com/seehuhn/mt19937
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/cobra
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/cobra/cmd
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/cobra/doc
github.com/spiegel-im-spiegel/pi/vendor/github.com/spf13/pflag
github.com/spiegel-im-spiegel/pi/vendor/github.com/spiegel-im-spiegel/gocli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればよい。
こっちのほうが遥かに扱いやすいよね。&lt;/p&gt;

&lt;p&gt;これでまたひとつ &lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; が「要らない子」になる理由が増えてしまったのだった。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.classmethod.jp/go/dep/&#34;&gt;Goオフィシャルチーム作成の依存関係管理ツール dep を試してみた ｜ Developers.IO&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://mattn.kaoriya.net/software/lang/go/20170125023240.htm&#34;&gt;Big Sky :: golang オフィシャル謹製のパッケージ依存解決ツール「dep」&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/golang/gopath-pollution/&#34;&gt;GOPATH 汚染問題&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/golang/package-visualization-tool/&#34;&gt;パッケージの依存状況の視覚化&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ps1&#34;&gt;Windows 7 の場合は “&lt;a href=&#34;https://www.microsoft.com/ja-jp/download/details.aspx?id=40855&#34;&gt;Windows Management Framework 4.0&lt;/a&gt;” をインストールすることで PowerShell 4.0 にアップグレードできる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ps1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tst1&#34;&gt;&lt;a href=&#34;https://github.com/Masterminds/glide&#34; title=&#34;Masterminds/glide&#34;&gt;glide&lt;/a&gt; を使わない場合は &lt;code&gt;go test -v $(go list ./... | grep -v /vendor/)&lt;/code&gt; とかする。どのみち Windows のコマンドプロンプトでは無理だけど（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tst1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>さよなら iPod - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/07/sayonara-ipod/" />
		<id>tag:text.Baldanders.info,2017-07-30:/remark/2017/07/sayonara-ipod/</id>
		<published>2017-07-30T14:59:36+09:00</published>
		<updated>2017-07-30T14:59:36+09:00</updated>
		<summary>「さよなら iPod」がそのまま「さよなら Apple」にならなきゃいいけど。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（これは Facebook のタイムラインに書いた記事を加筆修正したものです）&lt;/p&gt;

&lt;p&gt;iPod は縁がなかったなぁ。
他人が持ってるのを見て「いいなぁ」と思ったことはあるけど，そもそも移動中に音楽を聴く習慣がついたのはここ3年くらいだし。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2017/07/28/say-goodbye-to-ipod/&#34;&gt;iPodは「音楽」に何をもたらしたか──その功績を、販売終了を機に振り返る｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今世紀に入って音楽がどのように変わったかについては言うまでもないだろう。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;iPodの人気に火が付いたのは、ちょうどナップスターの熱狂のあとだった。違法コピーのスリルが、アップルのガジェットや大容量のHDDと組み合わさって、突如として音楽が「解放された」のである。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://wired.jp/2017/07/28/say-goodbye-to-ipod/&#34;&gt;iPodは「音楽」に何をもたらしたか──その功績を、販売終了を機に振り返る&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まぁ続きが気になる方は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34; title=&#34;Amazon | デジタル音楽の行方 | David Kusek, Gerd Leonhard, yomoyomo, 津田 大介 | 音楽一般 通販&#34;&gt;デジタル音楽の行方&lt;/a&gt;』辺りを読むといいだろう。
音楽に限らず世の中は「消費は美徳」な時代から「体験を共有する」時代&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:age&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:age&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; へと変わっており，そういう意味で当時の iPod は「&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B009S7CDP6/baldandersinf-22/&#34; title=&#34;ソーシャルシフト　これからの企業にとって一番大切なこと | 斉藤 徹 | 実践経営・リーダーシップ | Kindleストア | Amazon&#34;&gt;ソーシャルシフト&lt;/a&gt;」する時代の先駆けだったと言えるかもしれない。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;ステファンズ氏は言う。「何を買い、どこでお金を落とし、どのように消費するのか。消費者は、以前よりも厳しい目で判断している」&lt;br&gt;
特筆すべきは、消費者が「モノ」よりも「体験」を購入している点だ。&lt;br&gt;
この傾向は特にアパレル小売業者に打撃を与えており、その背景にはソーシャルメディアの台頭があると同氏は指摘する。&lt;br&gt;
「『モノ』よりも『体験』の方が、ソーシャルメディア上で話題になりやすい」&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.businessinsider.jp/post-100448&#34;&gt;アマゾンではなかった…… アメリカの小売業を低迷させた2つの元凶&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;一方，個人的に当時の iPod が驚愕だったのはタッチセンサを「あんなもの」に組み込んだことにあった。&lt;/p&gt;

&lt;p&gt;もちろんタッチデバイス自体はそれ以前からあったけど，どちらかというとペンタブレットのような高機能または高付加価値に重きを置いていて，単機能デバイスにわざわざタッチセンサを使うという発想がなかった。
だって物理ボタンのほうが安上がりでしょ。
大量生産品は1円のコスト減にしのぎを削っているのにあり得ないぢゃん（笑）&lt;/p&gt;

&lt;p&gt;当時 iPod に刺激を受けたタッチデバイスの試作品開発に関わったことを思い出す。
タッチセンサへの置き換えは単純に物理ボタンのエミュレーションというだけではなく様々な指の動き「アクション」とか「ジェスチャ」とか呼ばれているものに機能を割り当てることができるというもので，つまりは「HMI (Human Machine Interface) の拡張・解放」にあったわけだ。&lt;/p&gt;

&lt;p&gt;その究極が，今は当たり前になっている，全面タッチパネルの携帯端末だ。
最初に挙げた記事では現在の iPod を「簡易版のiPhone」と評しているが，私に言わせれば iPhone は，「賢い電話」なんかじゃなく，「電話機能付きの iPod」であり，電話をアプリケーションのひとつに落とし込んでいる点が秀逸だったのである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sp&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:sp&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ユーザの音楽への関わり方も含めて， iPod は時代の変化にきちんと適応しているのだ。
少なくともこれまでは。&lt;/p&gt;

&lt;p&gt;今の Apple に当時の勢いはない。
クラウドや AI については他社の後塵を拝すかたちになってるし， HMI についても Amazon の DASH ボタンや Echo&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:e1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:e1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; に比べれば停滞感は否めない。&lt;/p&gt;

&lt;p&gt;Echo については AI というバズワードばかり先行しているが，音声を HMI として高い精度で実装できているのが画期的なのだ。
これは中核技術である Alexa が自動車のダッシュボードの HMI として採用されつつある点から見ても分かるだろう。
高い精度は要求されず，見かけ上「賢い人工無脳」に過ぎない Apple の Siri や Google の Allo などとは一線を画すわけだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ai1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ai1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;正直に言って，5年後10年後に Amazon や Google というか Alphabet は生き残ってそうだけど Apple が生き残ってる未来が見えない。
「さよなら iPod」がそのまま「さよなら Apple」にならなきゃいいけど&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:x&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:x&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
まぁ，たとえそうなっても私は困らないが（笑）&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2015/06/32173/&#34;&gt;『デジタル音楽の行方』から10年経って - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.businessinsider.jp/post-100448&#34;&gt;アマゾンではなかった…… アメリカの小売業を低迷させた2つの元凶 | BUSINESS INSIDER JAPAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/01/05/20170104fords-going-to-put-alexa-in-cars-starting-later-this-year/&#34;&gt;Fordは今年の後半から、車にAlexaの搭載を計画 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35094891/&#34;&gt;進むアマゾン「Alexa」の自動車対応&amp;ndash;車載アプリ基盤「INRIX OpenCar」に搭載 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2017/07/28/20170727it-looks-like-amazon-would-be-losing-a-lot-of-money-if-not-for-aws/&#34;&gt;もしAWSがなかったら、Amazonは大赤字 | TechCrunch Japan&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:amzn&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:amzn&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/17/googlecloud_tpuaigoogle_io_2017.html&#34;&gt;［速報］Google、機械学習に最適化した「Cloud TPU」発表。「われわれれはいま、AIファーストデータセンターの構築に取りかかっている」。Google I/O 2017 － Publickey&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1705/19/news034.html&#34;&gt;Google I/O 17で「Cloud TPU」を発表：グーグルの機械学習／AIへの取り組みを支える「AIファーストデータセンター」とは - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考文献&#34;&gt;参考文献&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51HINm31mtL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798110035/baldandersinf-22/&#34;&gt;デジタル音楽の行方&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;David Kusek Gerd Leonhard yomoyomo &lt;/dd&gt;&lt;dd&gt;翔泳社 2005-12-06&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4787272217/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4787272217.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽は死なない!―音楽業界の裏側&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/402331157X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/402331157X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;誰がJ-POPを救えるか?  マスコミが語れない業界盛衰記&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791766903/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791766903.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ソーシャル化する音楽 「聴取」から「遊び」へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4787272527/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4787272527.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽業界で起こっていること&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492762183/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4492762183.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;音楽産業 再成長のための組織戦略&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4326698616/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4326698616.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;拡散する音楽文化をどうとらえるか (双書音楽文化の現在)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845626705/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845626705.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;新時代ミュージックビジネス最終講義 新しい地図を手に、音楽とテクノロジーの蜜月時代を生きる!&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798036471/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798036471.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;図解入門業界研究最新音楽業界の動向とカラクリがよ~くわかる本[第3版] (How‐nual Industry Trend Guide Book)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845620243/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845620243.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;次世代ミュージシャンのためのセルフマネージメント・バイブル 自分を作る・売る・守る!&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845619261/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4845619261.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;よくわかる音楽著作権ビジネス 基礎編 4th Edition&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;読んでない。絶賛絶版中？ もはや読む価値があるのかどうかさえ不明。「デジタル」とタイトルに冠されているにも関わらず Kindle 化さえされてないことに出版側のやる気を感じる（笑）&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-07-30&#34;&gt;2017-07-30&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:age&#34;&gt;故にコレクション魂を炸裂させ孤高の道を進むが共有する相手のいない「真のキモオタ」には辛い時代である（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:age&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sp&#34;&gt;電話をメインに使う人はガラケー・オンリーかスマホとガラケーの2台持ちが普通だったりするしね。そういえば機械音痴でスマホが使えない友人にスマホでの電話のかけ方を教えたら，電話アプリを起動しないと電話をかけられないことに驚愕していた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sp&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:e1&#34;&gt;Echo は&lt;a href=&#34;http://www.newsweekjapan.jp/yukawa/2017/01/amazon-echo.php&#34; title=&#34;日本でもAmazon Echo年内発売？既に業界は戦々恐々 | 湯川鶴章 | コラム＆ブログ | ニューズウィーク日本版 オフィシャルサイト&#34;&gt;日本では年内発売との噂&lt;/a&gt;があったのだがどうなったのだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:e1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ai1&#34;&gt;もちろん Google というか Alphabet 傘下の AI 技術開発の真価は Allo ではない。 Alphabet 傘下の各グループは明らかに5年10年先を見据えて開発を行っていて，現在の（広告中心の）収益構造を変えることを目論んでいる筈である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ai1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:x&#34;&gt;自慢じゃないが私の予言はよく外れるので真に受けないように（若い頃は20世紀内に Mac は滅びると思っていた）。冗談にクレームは受け付けません（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:x&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:amzn&#34;&gt;まぁ，今時 Amazon のことをネット書店とかEコマースサイトだとか思ってる人はいないだろう。ただ「クラウド」や「仮想化」だけで稼げる季節はとうの昔に過ぎていて，その上に何を乗せるかが重要になっている。例えば Alphabet は AI 基盤をクラウド化することで次代の収益の柱を狙っているように見える。しかし Amazon にはそういったものが見えづらい。ただ Google が「すべての情報をグラフ化する」のなら Amazon は「全てのモノと情報の流通を押さえる」ことにあるように見える。つまり社是が違うということなのだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:amzn&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>人工知能に「常識」は必要なのか？ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/03/common-sense-of-ai/" />
		<id>tag:text.Baldanders.info,2017-03-24:/remark/2017/03/common-sense-of-ai/</id>
		<published>2017-03-24T08:04:30+09:00</published>
		<updated>2018-01-06T14:58:50+09:00</updated>
		<summary>「常識」は「知能（intelligence）」というより「知性（intellect）」に近い。果たして人工知能（artificial intelligence）に「常識」は必要なのか。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;「常識」は「知能（intelligence）」というより「知性（intellect）」に近い。
果たして人工知能（artificial intelligence）に「常識」は必要なのか。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#trolley-problem&#34;&gt;機械と「トロッコ問題」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#common-sense&#34;&gt;人工知能に「常識」は必要なのか？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;trolley-problem&#34;&gt;機械と「トロッコ問題」&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2017/03/20/robocars-will-sometimes-kill/&#34;&gt;トロッコ問題とは何か？ 自律走行車は「人を守るために人を殺すこともある」｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「トロッコ問題」については以前に言及した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/10/artificial-intelligence/#trolley-problem&#34;&gt;AI は「トロッコ問題」をどう解くか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「トロッコ問題」のポイントは「正解が存在しない」ことにある。
ゆえにヒトは葛藤し（どちらを選んでも）後悔するのだ。&lt;/p&gt;

&lt;p&gt;宗教臭い言い方をするなら葛藤は「罪」であり後悔は「罰」である。
社会的動物である私たちヒトは常に社会に対して罪と罰を背負わされ続ける。
一方で，（社会的に&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:g1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:g1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）「公正」であり「正義」であると信じ切れるなら，それが自爆テロでも人類殲滅でも，罪と感じることはないだろう。&lt;/p&gt;

&lt;p&gt;機械は葛藤も後悔もしない。
内部構造がどうであれ入力に対して必ず何らかの出力を行うよう定められている。
その意味で機械に「トロッコ問題」は存在しない。
言い方を変えるなら「葛藤や後悔は機械が負う責務ではない」ということだ。&lt;/p&gt;

&lt;h2 id=&#34;common-sense&#34;&gt;人工知能に「常識」は必要なのか？&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35098179/&#34;&gt;人工知能は「常識」を持てるのか&amp;ndash;FacebookのAI研究者が語る - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「常識」というのはヒトが社会的動物であることと密接な関係がある。
そもそも「公平かつ正当な判断」という考え方からしてそうだ。
「公平」も「公正」も社会の中でこそ意味を成す。&lt;/p&gt;

&lt;p&gt;「常識」というのは社会に対する個人（identity）を固定するための基盤であり，同時に個人の想像力を制限する枷でもある。
人は想像を絶するものは想像できない。
その想像力の地平線こそが「常識」というやつである。&lt;/p&gt;

&lt;p&gt;ならば問おう。
果たして人工知能に「常識」は必要なのか？ と。
「常識」を刷り込まれ「想像を絶するものを想像できない」人工知能の価値とは如何ほどか。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;巷では「人工知能が人の仕事を奪う」みたいな言説が流布されているけど，機械の本領は人の仕事を肩代わりすることではない。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/01/game-ai/&#34;&gt;ゲーム AI の本領&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://30th.rcast.u-tokyo.ac.jp/future/future01.html&#34;&gt;対話する「未来論」：イスラームの宗教と脳の機能は交差する。&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://wired.jp/2018/01/04/ai-seeks-an-ethical-conscience/&#34;&gt;人工知能を「正しい道」へと導くのは誰か──学会で語られたAIの倫理への懸念｜WIRED.jp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/artificial-intelligence/&#34;&gt;人工知能は「ハイル・ヒトラー」と叫ぶか&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/08/pinocchio/&#34;&gt;「ピノキオ」と AI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/10/artificial-intelligence/&#34;&gt;AI は人（の良心）を殺すか？&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/01/game-ai/&#34;&gt;ゲーム AI の本領&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:g1&#34;&gt;社会的にというか「神の教えの下に」とでも言うべきか。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:g1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
