<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of Engineering - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/engineering/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/engineering/index.xml" />
	<id>tag:text.Baldanders.info,2024-04-15:/tags</id>
	<updated>2024-04-15T21:07:04+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>プラットフォームかプロトコルか</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/04/platform-or-protocol/" />
		<id>tag:text.Baldanders.info,2024-04-15:/remark/2024/04/platform-or-protocol/</id>
		<published>2024-04-15T12:07:04+00:00</published>
		<updated>2024-04-15T12:10:44+00:00</updated>
		<summary>日本で2日間（東京と大阪）に渡り Bluesky Meetup が開催された</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;物凄い偏見であることは承知の上で書いてしまうけど，現代を含む近代というのは「『個人』が台頭する時代」だと思うのよ。
もしくは社会と個人が向き合う時代。
時に協力し時に反目するのが社会と個人との関係。
その文脈の中で，たとえば身分や差別の問題，たとえばジェンダーの問題，たとえば税金と福祉の問題，といったことを捉える必要がある。&lt;/p&gt;
&lt;p&gt;ゼロ年代前半の「Web 2.0」で期待されたのは多様な Web サービスの間で個人が緩やかに連携しボトムアップで「ネット社会」を構成することだった筈だ。
しかしそれは「ソーシャルネットワーク・サービス」の登場でぶち壊された。
ユーザは人間関係を「人質」にプラットフォームに囲い込まれ縛り付けられる。
更に2010年代の「アラブの春」がこれを強化した。
ネットはプラットフォーム間の覇権ゲームの会場となりユーザを&lt;a href=&#34;https://text.baldanders.info/remark/2023/01/internet-bulimia/&#34; title=&#34;嘔吐するインターネット&#34;&gt;過剰に飲み込み嘔吐する&lt;/a&gt;。
そこに個人は存在せず，ユーザは統計上の「数値」でしかない。
この辺が「&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20230828/neo-feudalism&#34; title=&#34;時代はデジタル封建主義？ ジョエル・コトキン『新しい封建制がやってくる』が出るぞ - YAMDAS現更新履歴&#34;&gt;デジタル封建主義&lt;/a&gt;」などと呼ばれる所以だろう。&lt;/p&gt;
&lt;p&gt;これを打ち破りたいならプロトコルから変えるべきだ！ という発想になるのは自然なことかもしれない。&lt;/p&gt;
&lt;p&gt;先週末は日本で2日間（東京と大阪）に渡り Bluesky Meetup が開催された。
個人的には関心が薄かったのだが yomoyomo さんがこれに絡む記事を &lt;a href=&#34;https://wirelesswire.jp/&#34; title=&#34;WirelessWire News – The Technology and Ecosystem of the IoT.&#34;&gt;WirelessWire News&lt;/a&gt; のブログにタイムリーに公開されていて，流石と思ってしまった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2024/04/86389/&#34;&gt;BlueskyやThreadsに受け継がれたネット原住民の叡智 – WirelessWire News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この中で紹介されている以下の記事は読んでおくべきだろう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210201-free-speech-protocols-approach/&#34;&gt;言論の自由を取り巻く問題を解決する「プロトコルに基づいた仕組み」とは？ - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yamdas.org/column/technique/marking-the-webs-35th-birthday-an-open-letterj.html&#34;&gt;ウェブの35歳の誕生日を祝う：オープンレター（Marking the Web’s 35th Birthday: An Open Letter 日本語訳）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今のところ Bluesky には Bluesky というサービスと，それを駆動する &lt;a href=&#34;https://atproto.com/&#34; title=&#34;The AT Protocol&#34;&gt;AT (Authenticated Transfer) Protocol&lt;/a&gt; という2本の柱がある。
おそらく Bluesky 自身は AT プロトコルを実装する実験的な側面を持っていて，本命は AT プロトコルの標準化とそれを使った「Bluesky ではない」サービス群の台頭ではないかと思う。&lt;/p&gt;
&lt;p&gt;上で紹介した一連の記事を読んで思い出したのは『&lt;a href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インテンション・エコノミー&lt;/a&gt;』だ。
この本についても yomoyomo さんの&lt;a href=&#34;https://www.yamdas.org/booklog/intentioneconomy.html&#34; title=&#34;yomoyomoの読書記録 - ドク・サールズ『インテンション・エコノミー 顧客が支配する経済』（翔泳社）&#34;&gt;書評&lt;/a&gt;がある。
一部引用しておこう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;p&gt;　インテンション・エコノミーとは買い手が価値の源泉となる真の意味でオープンな市場であり、VRM（企業関係管理）が CRM（顧客関係管理）にとってかわり、顧客は企業に囲い込まれることなく、つまり消費者として集合的に扱われるのでなく企業との関係はパーソナルなものになる。&lt;/p&gt;
&lt;p&gt;　つまり、顧客の側が自分に関するデータの主導権に握り、自らの意思に従い企業との関係を決められる。それには顧客側に立ちそのニーズの代理人として機能する「フォース・パーティ」の存在が必要になるし、顧客と企業の間には対話的でオープンな API が提供されることで市場のオープンさが担保される。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.yamdas.org/booklog/intentioneconomy.html&#34;&gt;yomoyomoの読書記録 - ドク・サールズ『インテンション・エコノミー 顧客が支配する経済』（翔泳社）&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これを&lt;a href=&#34;https://baldanders.info/blog/000638/&#34; title=&#34;『インテンション・エコノミー』を読む&#34;&gt;読んだ&lt;/a&gt;当時は「企業と個人」の関係で考えていたが，これは「社会と個人」の関係で考えることもできる。
もしかしたらこれから求められるのは SRM (社会関係管理) みたいな仕組みかもしれない，などと妄想してみた。
もし AT プロトコルによって SRM が構成できるなら面白いのに（笑）&lt;/p&gt;
&lt;p&gt;既に ActivityPub は W3C によって&lt;a href=&#34;https://www.w3.org/TR/activitypub/&#34;&gt;標準化&lt;/a&gt;され Mastodon のみならず PeerTube や Pixelfed といった多様なサービスを生み出しつつある（なくなってるぽいものもあるが）。
日本でならこれに Misskey を加えてもいいかも知れない。
Threads は Mastodon ベースだそうだが，もはや Mastodon とは別物だろう。
こういうことが AT プロトコル周りでも起こるようになれば，もう少し真面目に取り組んでもいいかなぁ，とは思っている。&lt;/p&gt;
&lt;p&gt;まぁ，でも，標準化されたらされたで，またぞろ覇権ゲームが勃発しそうな気がするけどね。
そしてその勝者はやがて腐っていく。
これも自然の理か？&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;プラットフォームはこのように滅びていく。まず、ユーザにとって良き存在になる。次に、ビジネス顧客にとって良き存在になるために、ユーザを虐げる。最後に、ビジネス顧客を虐げて、すべての価値を自分たちに向ける。そうして死んでいく。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4366&#34;&gt;メタクソ化するTiktok&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/wirelesswire&#34;&gt;WirelessWire News連載更新（BlueskyやThreadsに受け継がれたネット原住民の叡智） - YAMDAS現更新履歴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/masayukihatta/ss-199545007&#34;&gt;プロトコル・ベースのプラットフォーム規制 | PPT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/bookmarks/fediverse/&#34;&gt;Fediverse 関連のブックマーク&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/519&amp;#43;kIHb71L._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インテンション・エコノミー～顧客が支配する経済&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Doc Searls (著), 栗原潔 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;翔泳社 2013-03-14 (Release 2013-06-20)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00DIM6BE6 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;時代はソーシャル CRM から VRM へ。&lt;a href=&#39;https://baldanders.info/blog/000794/&#39;&gt;俺達がインターネットだ！&lt;/a&gt; &lt;a href=&#39;https://baldanders.info/blog/000638/&#39;&gt;感想文はこちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-04-26&#34;&gt;2015-04-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- インテンション・エコノミー --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00FW5SSCK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/515aVCPebQL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00FW5SSCK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ソーシャル・ネットワーク (字幕版)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ジェシー・アイゼンバーグ (出演), アンドリュー・ガーフィールド (出演), ジャスティン・ティンバーレイク (出演), アーミー・ハマー (出演), マックス・ミンゲラ (出演), David Fincher (監督), Scott Rudin (プロデュース), Dana Brunetti (プロデュース), Michael De Luca (プロデュース), Cean Chaffin (プロデュース)&lt;/dd&gt;
    &lt;dd&gt; (Release 2013-11-26)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B00FW5SSCK (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;この映画が公開された当時（2011年）は日本でも Facebook が一般（特に年配層）に浸透し始めていたときで，スクリーン上の狂騒に苦笑したものだが，その Facebook が広告まみれの駄システムに堕ちてしまうとは誰も思わなかっただろうな（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-04-14&#34;&gt;2019-04-14&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ソーシャル・ネットワーク --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;&lt;img src=&#34;https://tatsu-zine.com/images/books/877/cover_s.jpg&#34; width=&#34;106&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;yomoyomo (著)&lt;/dd&gt;
    &lt;dd&gt;達人出版会 2017-12-25 (Release 2019-03-02)&lt;/dd&gt;
    &lt;dd&gt;デジタル書籍&lt;/dd&gt;
    &lt;dd&gt;infoshare2 (tatsu-zine.com)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://wirelesswire.jp/author/yomoyomo/&#34;&gt;WirelessWire News 連載&lt;/a&gt;の書籍化。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/infoshare2/&#34;&gt;こちら&lt;/a&gt;。祝 &lt;a href=&#34;https://www.amazon.co.jp/dp/B08DD2MC46?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Kindle 化&lt;/a&gt;！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-12-31&#34;&gt;2018-12-31&lt;/abbr&gt;&lt;/p&gt;
&lt;/div&gt; &lt;!-- 続・情報共有の未来 --&gt;
</content>
	</entry><entry>
		<title>Spiegelさん＠がんばらない</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/03/tekipaki-working/" />
		<id>tag:text.Baldanders.info,2024-03-23:/remark/2024/03/tekipaki-working/</id>
		<published>2024-03-23T00:44:18+00:00</published>
		<updated>2024-03-23T00:45:54+00:00</updated>
		<summary>たぶん「生産性の高い仕事」ってのは「がむしゃら」にがんばることではなく「てきぱき」さばくことだと思うのよ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今回のネタ元はこちら。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/tsukamoto/n/n8a03a4175572&#34;&gt;「がむしゃらに働く」って週60時間ぐらいまで｜塚本 牧生&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;念のために引用しておくと&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;ただし、ここでいうがむしゃらとは「週60〜65時間労働」です。 これは超えてはいけない過労死ラインで、また超えても成果がむしろ出なくなるラインなので、がむしゃらも度が過ぎないようにしてください。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://note.com/tsukamoto/n/n8a03a4175572&#34;&gt;「がむしゃらに働く」って週60時間ぐらいまで｜塚本 牧生&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ということだそうなので。
つか，まっとうな企業なら三六協定などでその辺は守られてると思うけど。&lt;/p&gt;
&lt;p&gt;個人的な感覚として「もう週50Hも無理」になってきた。
我ながら衰えたなぁと思う。
いや頑張ればできるのよ。
でもそこから回復に時間がかかるようになった。
週末休んでも追いつかないくらい。&lt;/p&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;ぺーぺーの新人の頃に言われたのが「仕事には必ず終わりがある」である。
私はこれを曲解して「終わりのない（見えない）仕事は仕事じゃない」と思っている。
精神的に削られるのは「終わりのない仕事」である。
終わりがあるからこそ最終直線のひと仕事を「がむしゃら」に駆け抜けることができる。&lt;/p&gt;
&lt;p&gt;たぶん「生産性の高い仕事」ってのは「がむしゃら」にがんばることではなく「てきぱき」さばくことだと思うのよ。
まぁ，それが難しいから「がむしゃら」に頑張ることでカバーしようとするんだけどね。
「てきぱき」さばくのって技能（スキル）だし。
だからといって，そこで「がむしゃら」を導入するのは根本からやり方を間違えてる。
「がむしゃら」は最後のひと鞭で発揮するからこそ効果が出るのである。&lt;/p&gt;
&lt;p&gt;&amp;hellip;というようなことをつらつらと考えたりした。
なので，やっぱり今年も「がんばらない」方向でよろしくお願いします。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00HY73M16?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51yk&amp;#43;9cbozL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00HY73M16?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;SAVED. ／ Be mine!&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;坂本　真綾 (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;FlyingDog 2014-02-05 (Release 2014-02-05)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B00HY73M16 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「世界征服〜謀略のズヴィズダー〜」OP曲。万能感溢れるノリのいい曲である（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-12-26&#34;&gt;2020-12-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Be mine! --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757700423?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/518JGPT6DEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757700423?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;てきぱきワーキン〓ラブ (5) (ビームコミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;竹本 泉 (著)&lt;/dd&gt;
    &lt;dd&gt;エンターブレイン 2000-05-01&lt;/dd&gt;
    &lt;dd&gt;コミック&lt;/dd&gt;
    &lt;dd&gt;4757700423 (ASIN), 9784757700420 (EAN), 4757700423 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに（「さよパラ」にも出てきた）アレックスの謎が解ける？&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-10-13&#34;&gt;2017-10-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- てきぱきワーキン♡ラブ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00FYKN2C4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51EE&amp;#43;Hx-J8L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00FYKN2C4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ささみさん@がんばらない【TBSオンデマンド】&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;高山カツヒコ (Writer), 新房昭之 (監督), ――― (プロデュース)&lt;/dd&gt;
    &lt;dd&gt; (Release 2013-05-15)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B00FYKN2C4 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2013年の作品なんだねぇ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-02-08&#34;&gt;2023-02-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ささみさん@がんばらない --&gt;
</content>
	</entry><entry>
		<title>VTuber に満たない Bluesky</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/07/audience/" />
		<id>tag:text.Baldanders.info,2023-07-23:/remark/2023/07/audience/</id>
		<published>2023-07-23T05:56:09+00:00</published>
		<updated>2023-07-23T08:26:26+00:00</updated>
		<summary>70万ユーザ登録おめでとうございます。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;いやぁ，夏っスねぇ。
九州はまだ梅雨が明けてないのに，本州は明けてしまったらしい。
相変わらずテキトーだな，気象庁，いや地方気象台か？&lt;/p&gt;
&lt;p&gt;昨日も自転車で遊びに出かけたのだが，日中が暑すぎて図書館から出れなくなったり。
しょうがないので昼飯食いに路線バスで移動したですよ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/53063471038/&#34;&gt;&lt;img src=&#34;./53063471038_a2982980e4_e.jpg&#34; srcset=&#34;./53063471038_a2982980e4_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;夏雲 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/53063471038/&#34;&gt;夏雲 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;Threads のリリースですっかり影が薄くなった Bluesky は昨日時点でユーザ総数が34万人を超えたらしい。
同じ日， VTuber の周防パトラの&lt;a href=&#34;https://www.youtube.com/watch?v=xdDw9YGApLE&#34; title=&#34;【ギター/ESP FRX】70万人いくまでメタルをギターを弾き続ける耐久！ロック＆メタル！ フーファイターズ/メガデス/紅/Helloween/メガロバニア and more...【周防パトラ】 - YouTube&#34;&gt;「70万人いくまでギターを弾き続ける耐久！」ライブ&lt;/a&gt;が行われていた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/xdDw9YGApLE&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xdDw9YGApLE&#34;&gt;70万人いくまでギターを弾き続ける耐久！ ロック＆メタル！... - YouTube&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;念のために言っておくが， Bluesky は今（2023-07 時点で）なおクローズドベータ状態で，サインアップするためには wait list に登録するか誰かから招待コードを貰うしかない。
でも，単純に言って Bluesky のユーザ規模の倍以上のオーディエンスがいるわけですよ，彼女には。
もちろん世の中にはもっと上の桁のオーディエンスを抱える有名人もいるわけで。&lt;/p&gt;
&lt;p&gt;先日，またもや Twitter がやらかしてかなりのユーザが Mastodon や Bluesky 等に流れ込んだわけだが，自前でどうとでも調達できる（クラウドという名の）計算資源を持ってる「ビッグテック」と違って「その他大勢」のサービスでは，とつぜん難民が押し寄せたからといってリアルタイムにスケールアップできるわけじゃない。
実際，新規登録を制限してるはずの Bluesky でさえ一時的にサインアップを止めざるを得なかった。
おそらくサーバ資源の増強をしてたんだろう。&lt;/p&gt;
&lt;p&gt;Mastodon サーバのひとつで私がメインで利用している fedibird.com のユーザ総数は現在33K人を超えたあたりで，アクティブユーザに限れば10K人ほどらしい&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
そんで，ランニングコストは145K円/月ほどだそうな。
この規模なら，単純計算で各アクティブユーザが300円/年ほど寄付すれば（少なくともランニングコスト分は）賄えるとのこと。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox center&#34;&gt;
&lt;iframe src=&#34;https://fedibird.com/@noellabo/110758504812079195/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;&lt;script src=&#34;https://fedibird.com/embed.js&#34; async=&#34;async&#34;&gt;&lt;/script&gt;
&lt;/blockquote&gt;&lt;/figure&gt;
&lt;p&gt;この中に人件費は含まれてないだろうし，累積赤字がけっこうあるらしいので「お金なんてナンボあってもいいですからね」って感じだろうけど。&lt;/p&gt;
&lt;p&gt;実は昨年末に Hostdon で（何かに使えるかなと思って）ホスティングサービスを契約していたのだが，何もしないまま先月解約した。
ホスティングサービスに500円/月払うくらいなら fedibird.com に寄付するほうが全然安上がりだろうという判断。
不特定多数相手の汎用サーバだとコンプライアンスが云々とかあるので，特殊用途（TRUTH Social とかw）ならホスティングのほうがいいんだろうけど（あとはセルフブランディングで独自ドメインを使いたいとか），結局私には用がなかった（笑）&lt;/p&gt;
&lt;p&gt;Mastodon のサーバで最大規模のユーザを抱えているのが mastodon.social で，2023-07時点で1.5M人に満たないくらい。
ちなみに mastodon.social 以外に1M人を超えるユーザを有しているサーバ（Threads のような連合しないサーバは除く）は今のところ存在しない。&lt;/p&gt;
&lt;p&gt;もし Mastodon 連合が全体で1億人を超えるユーザを夢見るなら，ものすごく単純に考えても mastodon.social 規模のサーバが100は必要になる。
実際には ActivityPub で「連合」する &lt;a href=&#34;https://instances.social/list/advanced&#34; title=&#34;Mastodon instances&#34;&gt;Mastodon サーバ&lt;/a&gt;の総数は18Kほどだが&lt;a href=&#34;https://mastodon.social/@mastodonusercount&#34; title=&#34;Mastodon Users (@mastodonusercount@mastodon.social) - Mastodon&#34;&gt;全体のユーザ総数&lt;/a&gt;は13M人を超えたあたりのようだ&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;こうしてみると Threads が単体で初日で10M人ユーザを獲得したのは計算資源の調達からして並大抵ではないし，これが将来 ActivitiyPub 連携で Fediverse に加わるかもしれない考えるとぞんぞがさばる（出雲弁）。&lt;/p&gt;
&lt;p&gt;クラウド資源あるいはサービスの利用はすぐに始められるので，個人利用やスタートアップでは使い勝手がいいが，スケールについて真剣に考え始めると足枷になることも多い。
クラウドで無制限にスケールできるのはクラウドの所有者（社）だけだろう。
あるいは札束で明かりとりをする成金か（笑） 喩えるならクラウドは砂漠の水売りみたいなもんで，ゼロ年代に言われてた「情報ダム」のような公共イメージとは程遠い。&lt;/p&gt;
&lt;p&gt;&amp;hellip;てなことを&lt;a href=&#34;https://www.youtube.com/watch?v=xdDw9YGApLE&#34; title=&#34;【ギター/ESP FRX】70万人いくまでメタルをギターを弾き続ける耐久！ロック＆メタル！ フーファイターズ/メガデス/紅/Helloween/メガロバニア and more...【周防パトラ】 - YouTube&#34;&gt;耐久ライブ&lt;/a&gt;を見ながら考えてた。
そうそう，70万ユーザ登録おめでとうございます。&lt;/p&gt;
&lt;p&gt;結局のところ Twitter が本当に沈没しても代わりになるようなサービスは存在せず，某タイタニック号のごとく全てを道連れにするしかないのだ。
これは他の単一プラットフォームの大規模 SNS でも同じ。
たとえば私は広島時代の友人の近況を見るためだけに Facebook を使ってるが，仮に Facebook がサービスをシャットダウンしても代わりになるものがなく，旧友との関係も「ハイそれまでョ」になりかねない。
これはそういうものだと割り切るしかないだろう。&lt;/p&gt;
&lt;p&gt;ただ，自分自身がネットから切り離されないよう，特定の企業・サービスの思惑に巻き込まれることなく，依存をできるだけ少なくするようにしないと。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/freedom-of-speech/4214&#34;&gt;我々が「離脱の自由」を必要とする理由――あるいはソーシャルメディアの失敗をマシにする方法 | p2ptk[.]org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4366&#34;&gt;メタクソ化するTiktok：プラットフォームが生まれ、成長し、支配し、滅びるまで | p2ptk[.]org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://note.com/tsukamoto/n/n8056f3562d91&#34;&gt;クラウドネイティブから見たクラウドの小史｜塚本 牧生&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.theverge.com/2023/7/7/23787334/instagram-threads-news-politics-adam-mosseri-meta-facebook&#34;&gt;Threads isn’t for news and politics, says Instagram’s boss - The Verge&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gigazine.net/news/20230706-mastodon-ceo-comments-about-threads/&#34;&gt;Twitter対抗の分散型SNS「Threads」が登場することでMastodonは変わるのか？をMastodonのCEOが解説 - GIGAZINE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2307/06/news174.html&#34;&gt;Threads、JASRACと利用許諾契約を結んでいた　Twitterとの差別化点に - ITmedia NEWS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/bookmarks/fediverse/&#34;&gt;Fediverse 関連のブックマーク&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B011LC4D58?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51o1Irti1QL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B011LC4D58?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ハイそれまでョ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;植木等 (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;EMIミュージック・ジャパン 2008-10-22 (Release 2015-07-22)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B011LC4D58 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「クレイジー・キャッツ・デラックス」より。昭和を代表する歌謡曲（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-07-23&#34;&gt;2023-07-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- クレイジー・キャッツ・デラックス ハイそれまでョ --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;fedibird.com は 2023-02 から新規登録を制限している。サインアップするには既存ユーザからの招待が必要。なので fedibird.com ユーザの増加ペースはゆっくりしている。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Facebook のユーザ数が29.9億人で世界最大。続いて YouTube は20億人， Instagram が10億人， TikTok が同じく10億人という感じ&lt;a href=&#34;https://growthseed.jp/experts/sns/number-of-users/&#34; title=&#34;【2023年6月最新】SNSの利用者数とユーザー属性や特徴まとめ&#34;&gt;らしい&lt;/a&gt;。ちなみに Twitter は3.3億人だそうな。トラブルで数万ユーザが逃げたところで大したことないし，喉元すぎれば熱さを忘れて戻ってくるユーザも多かろう（笑）&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Mastodon と Bluesky でボット運用はじめました【2023-12-04 更新】</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/07/crawler/" />
		<id>tag:text.Baldanders.info,2023-07-01:/remark/2023/07/crawler/</id>
		<published>2023-07-01T03:49:59+00:00</published>
		<updated>2023-12-04T12:40:34+00:00</updated>
		<summary>自作ツールに Web 上の情報を収集する機能を付けて Mastodon/Bluesky 上でボットを構成できるようにした。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;自作ツール goark/toolbox&lt;/h2&gt;
&lt;p&gt;5月頃に思いついてコマンドラインで Mastodon や Bluesky に投稿できる &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;goark/toolbox&lt;/a&gt; というツールを作った。
ついでに Web 上の情報を収集する機能も付けてボットを構成できるようにした。&lt;/p&gt;
&lt;p&gt;実際の運用は自宅 PC で cron を回している（自宅 PC は24時間稼働中）。
&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; ならシングルバイナリで取り回しできるし，この程度ならクラウドとか Docker とか要らんですよ。&lt;/p&gt;
&lt;h2&gt;Bluesky で非公式 APOD 配信ボットを作った&lt;/h2&gt;
&lt;p&gt;Mastodon には &lt;a href=&#34;https://apod.nasa.gov/apod/&#34; title=&#34;Astronomy Picture of the Day&#34;&gt;APOD (Astronomy Picture of the Day)&lt;/a&gt; の非公式配信ボットがいくつかあるのだが（&lt;code&gt;#apod&lt;/code&gt; で検索するとアホほど出てくる），できたばかりの Bluesky で運用している人はいない様子。
なら作っちゃえ！ というわけで作った。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/apodunofficial.bsky.social&#34; title=&#34;Astronmy Picture of the Day (unofficial bot)&#34;&gt;@apodunofficial.bsky.social&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;データを収集するために &lt;a href=&#34;https://api.nasa.gov/&#34; title=&#34;NASA Open APIs&#34;&gt;NASA API&lt;/a&gt; をハンドリングする機能を &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;goark/toolbox&lt;/a&gt; に組み込んだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2023/02/api-for-astronomy-picture-of-the-day/&#34;&gt;NASA API を使って “Astronomy Picture of the Day” のデータを取得する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;API でクレジットが示されているものは明示しているが， NASA 関連の画像・動画については示されない？&lt;/p&gt;
&lt;p&gt;あと API がしょっちゅう 504 で落ちるのね。
Web ページは全然構造化されてなくてスクレイピングする気も起こらない。
というわけで，生暖かく見守っていただければ（笑）&lt;/p&gt;
&lt;h2&gt;自ブログおよび自作パッケージの更新情報も配信&lt;/h2&gt;
&lt;p&gt;Bluesky や Mastodon に記事を投稿する仕組みが整ったので，フィードを読み込む機能も組み込んで自ブログや Flickr にアップした写真の更新情報を以下の Mastodon/Bluesky のメインアカウントに配信できるようにした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fedibird.com/@spiegel&#34; title=&#34;Spiegel@がんばらない&#34;&gt;@spiegel@fedibird.com &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/baldanders.info&#34; title=&#34;Spiegel&#34;&gt;@baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; でフィードを取得するには &lt;a href=&#34;https://github.com/mmcdole/gofeed&#34; title=&#34;mmcdole/gofeed: Parse RSS, Atom and JSON feeds in Go&#34;&gt;mmcdole/gofeed&lt;/a&gt; パッケージを使うのが便利。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20201003-feed-with-golang&#34;&gt;フィードを取得する Go 言語パッケージ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これでフィードを自動配信する仕組みも用意できたので，自ブログ以外に &lt;a href=&#34;https://github.com/goark&#34; title=&#34;Playing with Go Language&#34;&gt;github.com/goark&lt;/a&gt; で公開している自作パッケージの更新情報も自動投稿することにした。&lt;/p&gt;
&lt;p&gt;GitHub のリリース情報のフィードは以下の URL で取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://github.com/username/repositoryname/releases.atom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;自作パッケージの更新情報は以下のアカウントで自動投稿している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@goark&#34; title=&#34;Goark (@goark@goark.fedicity.net) - Goark&#34;&gt;@goark@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/goark.bsky.social&#34; title=&#34;Goark&#34;&gt;@goark.bsky.social&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://goark.fedicity.net/&#34; title=&#34;Goark&#34;&gt;goark.fedicity.net&lt;/a&gt; については「&lt;a href=&#34;https://text.baldanders.info/remark/2023/12/personal-mastodon-server/&#34;&gt;個人用 Mastodon サーバを立てた&lt;/a&gt;」を参考にどうぞ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bsky.app/profile/goark.bsky.social&#34; title=&#34;Goark&#34;&gt;@goark.bsky.social&lt;/a&gt; は &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;goark/toolbox&lt;/a&gt; の動作テスト用に取ったアカウントだけど，遊ばせておくのもナニなので半ボットとして運用することにした。
まぁ，今後もテスト用にゴミ投稿することもあると思うけど，そこはご容赦を（笑）&lt;/p&gt;
&lt;h2&gt;その他のフィードも配信するぞ&lt;/h2&gt;
&lt;p&gt;調子に乗って自作以外でお世話になっている &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; パッケージ（プロダクト）や &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 関連記事も以下のアカウントに自動投稿することにした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@goark&#34; title=&#34;Goark (@goark@goark.fedicity.net) - Goark&#34;&gt;@goark@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/osanpo.bsky.social&#34; title=&#34;Spiegel&#39;s crawler&#34;&gt;@osanpo.bsky.social&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://bsky.app/profile/osanpo.bsky.social&#34; title=&#34;Spiegel&#39;s crawler&#34;&gt;@osanpo.bsky.social&lt;/a&gt; は Bluesky のボット運用のために取ったアカウント。&lt;/p&gt;
&lt;p&gt;監視対象は以下のサイト（今後追加予定）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go.dev/blog/&#34;&gt;The Go Blog - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/tools&#34;&gt;golang/tools: [mirror] Go Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-task/task&#34;&gt;go-task/task: A task runner / simpler Make alternative written in Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser&#34;&gt;goreleaser/goreleaser: Deliver Go binaries as fast and easily as possible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sashabaranov/go-openai&#34;&gt;sashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anchore/syft&#34;&gt;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint&#34;&gt;golangci/golangci-lint: Fast linters Runner for Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tinygo-org/tinygo&#34;&gt;tinygo-org/tinygo: Go compiler for small places. Microcontrollers, WebAssembly (WASM/WASI), and command-line tools. Based on LLVM.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pelletier/go-toml&#34;&gt;pelletier/go-toml: Go library for the TOML file format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny&#34;&gt;nyaosorg/go-readline-ny: Readline library for golang , used in nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny&#34;&gt;hymkor/go-multiline-ny: Readline package supporting multi-lines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rs/zerolog&#34;&gt;rs/zerolog: Zero Allocation JSON Logger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;uber-go/zap: Blazing fast, structured, leveled logging in Go.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらに調子に乗って &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 関連以外にも私の関心領域にかかる情報も収集・投稿することにした。
投稿先は以下の通り：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goark.fedicity.net/@osanpo&#34; title=&#34;Spiegel&#39;s Crawler (@osanpo@goark.fedicity.net) - Goark&#34;&gt;@osanpo@goark.fedicity.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bsky.app/profile/osanpo.bsky.social&#34; title=&#34;Spiegel&#39;s crawler&#34;&gt;@osanpo.bsky.social&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;監視対象は以下のサイト（今後追加予定）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.schneier.com/&#34;&gt;Schneier on Security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/index.html&#34;&gt;情報セキュリティ | IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jpcert.or.jp/&#34;&gt;JPCERT コーディネーションセンター&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/&#34;&gt;piyolog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ubuntu.com/security/notices&#34;&gt;Security notices | Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nist.gov/&#34;&gt;National Institute of Standards and Technology&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/&#34;&gt;P2Pとかその辺のお話R | Sharing is Caring&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://creativecommons.org/blog/&#34;&gt;Blog - Creative Commons&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.flickr.org/&#34;&gt;Flickr Foundation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nao.ac.jp/&#34;&gt;国立天文台（NAOJ）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://eco.mtk.nao.ac.jp/koyomi/&#34;&gt;国立天文台 天文情報センター 暦計算室&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.publickey1.jp/&#34;&gt;Publickey － Enterprise IT × Cloud Computing × Web Technology / Blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax | Beautiful math in all browsers.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.thunderbird.net/&#34;&gt;The Thunderbird Blog -&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mattn.kaoriya.net/&#34;&gt;Big Sky&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nyaosorg/nyagos&#34;&gt;nyaosorg/nyagos: NYAGOS - The hybrid Commandline Shell between UNIX &amp;amp; DOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo&#34;&gt;gohugoio/hugo: The world’s fastest framework for building websites.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tailscale/tailscale&#34;&gt;tailscale/tailscale: The easiest, most secure way to use WireGuard and 2FA.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/koki-develop/gat&#34;&gt;koki-develop/gat: 🐱 cat alternative written in Go.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mermaid-js/mermaid&#34;&gt;mermaid-js/mermaid: Generation of diagrams like flowcharts or sequence diagrams from text in a similar manner as markdown&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;microsoft/vscode: Visual Studio Code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/plantuml/plantuml&#34;&gt;plantuml/plantuml: Generate diagrams from textual description&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-boot&#34;&gt;spring-projects/spring-boot: Spring Boot&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/keepassxreboot/keepassxc&#34;&gt;keepassxreboot/keepassxc: KeePassXC is a cross-platform community-driven port of the Windows application “Keepass Password Safe”.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上のリスト（の一部）は元々 &lt;a href=&#34;https://text.baldanders.info/remark/2017/01/slack/&#34; title=&#34;いまさら聞けない Slack の使い方&#34;&gt;Slack 上で監視&lt;/a&gt;していたものだが，プライベートでも仕事でもあまり Slack を使わなくなったので（仕事では主に Teams） Mastodon/Bluesky に移行することにしたのだ。
ただ，今までの反省で，やたら滅多とフィードを食い散らかして自 TL を埋め尽くすのは嬉しくないので，流量についてはチューニングしながら運用する予定である。&lt;/p&gt;
&lt;p&gt;本来はフィードのチェックは Feedly とか使うべきだし，本当によく見るものだけに厳選したい。
特に青空文庫（&lt;a href=&#34;https://bsky.app/profile/aozorabunko.bsky.social&#34; title=&#34;青空文庫(Aozora Bunko)&#34;&gt;@aozorabunko.bsky.social&lt;/a&gt;）とか，自身でブログ記事の更新情報を積極的に上げておられるユーザとかのフィードは外している。&lt;/p&gt;
&lt;h2&gt;今後は&amp;hellip;&lt;/h2&gt;
&lt;p&gt;今の &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;goark/toolbox&lt;/a&gt; ってフィード情報をキャッシュするのにテキストファイルを使ってるんだよな。
これだとそろそろ耐えられない気がするので SQLite を導入するかなぁ。&lt;/p&gt;
&lt;p&gt;Pure &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; で実装するならこのあたりか？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/glebarez/go-sqlite&#34;&gt;glebarez/go-sqlite: pure-Go SQLite driver for Go (SQLite embedded)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/glebarez/sqlite&#34;&gt;glebarez/sqlite: The pure-Go SQLite driver for GORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/moul/zapgorm2&#34;&gt;moul/zapgorm2: ⚡ zap logging driver for gorm v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mpalmer/gorm-zerolog&#34;&gt;mpalmer/gorm-zerolog: Alternative logging with Zerolog for GORM ⚡️&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まぁ，ぼちぼちやろう。&lt;/p&gt;
&lt;p&gt;Twitter ？ 知らんですよ。
IFTTT にも金を払う気はないし，向こうでの活動は最小限に留めたい。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/mattn/articles/7ac25f3328bde3&#34;&gt;RSS/Atom フィードを Twitter/Nostr にポストする小さいプログラムを書いた。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
</content>
	</entry><entry>
		<title>『はじめて学ぶ ビデオゲームの心理学』は読んどけ！</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/" />
		<id>tag:text.Baldanders.info,2023-04-09:/remark/2023/04/the-psychology-of-video-games/</id>
		<published>2023-04-09T12:31:30+00:00</published>
		<updated>2023-04-09T23:19:48+00:00</updated>
		<summary>ユーザーはバカではない。賢くなろうよ</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』をようやく読み終わった。
ついでに 2023-04-08 に著者の Celia Hodent さんを招待して開催された &lt;a href=&#34;https://www.igda.jp/2023/03/20/13647/&#34; title=&#34;『はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）』特別ウェビナー(4/8) | 国際ゲーム開発者協会日本&#34;&gt;Webinar&lt;/a&gt; も観た。&lt;/p&gt;
&lt;p&gt;本を手にした第一印象は「字がデカい」「ページ数が薄い（巻末の日本語版解説も併せて184ページしかない）」であった（いや，書く方も翻訳する方も凄い労力だと思うけど）。
私はスキマ時間にチマチマ読んでたので比較的時間がかかったが，メモを取りながらでも1日あれば読める分量だよね。
この本はつまみ食い的に読むのではなく，第1章から順に読んでいくことを強くお勧めする。&lt;/p&gt;
&lt;p&gt;念のために言うと，私はゲームデザイナーでもゲームエンジニアでもない。
ゲームは好きだが，少なくとも社会人になってからはコンシューマー機オンリーだったし，テレビを捨ててからはスマホゲームをスキマ時間でやる程度の雑魚ゲーマーである。
そりゃあ学生時代は可処分時間が有り余ってたし，田舎は娯楽が少ないからゲーセンも通ってたし，なんなら発売日にドラクエを買うためにデパート前の行列に並んでたクチですよ。
それも今は昔。&lt;/p&gt;
&lt;p&gt;じゃあ，なんでこの本に興味を持ったかというと，サブタイトルにある「ユーザー体験（UX）」の単語に惹かれたから。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』にも書かれているが， UX (User eXperience) って UI (User Interface) とは違うのよ。
たとえば最近だと， IPA が自身のサイト構成を一新した際に旧コンテンツのリンクが切れまくって IT 業界が阿鼻叫喚になった話がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1490762.html&#34;&gt;大量のリンク切れをIPAが謝罪 ～重要コンテンツは原則、全件リダイレクトへ - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新しいサイトデザインが UI 的にどれだけ優れているのか知らないが， UX 的には既存ユーザーをぶった切る「（悪意はなくとも）悪い UX」事例と言える。&lt;/p&gt;
&lt;p&gt;あるいはネットサービスの「あるある話」で，どこぞのサブスクリプション・サービスとかに退会機能がないかめちゃめちゃ分かりにくい場所にあってユーザーにストレスを与えるって&lt;a href=&#34;https://baldanders.info/blog/000709/&#34; title=&#34;NIKKEI is Worst of Worsts. もしくは「無料（ただ）より高くつくものはない」 — Baldanders.info&#34;&gt;事例&lt;/a&gt;があるよね。
これも「悪い UX」か，意図的であれば「（悪意ある）ダークパターン」って奴だ。&lt;/p&gt;
&lt;p&gt;じゃあ，そういう「悪い UX」や「ダークパターン」を避けるにはどういう設計をすればいいの？ 心理学や社会学の専門家に（お金を払って）来てもらってアドバイスしてもらえばいいの？ って話になる。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;ほかのテクノロジー業界（特にソーシャルメディア）に比べて、ゲーム業界がいくらか先に進んでいる点があります。それは、オンラインのマルチプレイゲームのなかで、反社会的な行為（被害者にとって有害と感じられる行動）から、できるだけプレイヤーの安全を守る対策を備えていることです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.63&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;つまり，ゲーム開発・運用における UX 実践&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; を見ていくことで，ゲーム以外のソフトウェア製品やサービス（特に SNS）にもヒントになるようなものがあるんじゃないか。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;ドナルド・ノーマン（大きな影響力をもつ『誰のためのデザイン？ —— 認知科学者のデザイン原論』（Norman, 1990）の著者）は「ユーザー体験（UX：user experience）」という単語を提唱し、製品やそのエコシステム（マーケティング、ウェブサイト、顧客サービスなど）にユーザーが関与するときの体験全般を考えるという方針を示しました。そのため、企業やグローバル戦略も UX に含まれます。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.34&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これって私が最近読んでいる&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/competing-with-unicorns/&#34; title=&#34;『ユニコーン企業のひみつ』読書会（1）&#34;&gt;『ユニコーン企業のひみつ』&lt;/a&gt;や&lt;a href=&#34;https://text.baldanders.info/remark/2023/02/peopleware/&#34; title=&#34;『ピープルウエア』を借りて流し読む&#34;&gt;『ピープルウエア』&lt;/a&gt;なんかにも通じる話だよね。
個人が趣味や余暇でやってるようなものはともかく，企業が開発・運用する製品（サービス）は，どうやっても「チーム戦」になる。
突出したスーパープログラマ（笑）が職人技でプロダクトを組む時代ではないのだ。
それもエンジニアだけじゃなく，プロダクトオーナーやその上の経営者や，ときにはその筋の専門家をも巻き込んだ「総力戦」だ。
そのような状況で上手く製品のイテレーションを繰り返すには「文化が重要」（『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』p.152）というわけ。&lt;/p&gt;
&lt;p&gt;もっとも『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』や『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』はチーム内あるいは職場内の環境や文化にフォーカスしているが『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』は「誰の方を向いて仕事をするのか」といったことにフォーカスしていると言える。
そして，それはもちろん「顧客（ユーザー）」の方を向いていなければならない。
考えてみれば当たり前の話なんだけどね。
SF作家の Cory Doctorow さんも言ってるじゃない。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;プラットフォームはこのように滅びていく。まず、ユーザにとって良き存在になる。次に、ビジネス顧客にとって良き存在になるために、ユーザを虐げる。最後に、ビジネス顧客を虐げて、すべての価値を自分たちに向ける。そうして死んでいく。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4366&#34;&gt;メタクソ化するTiktok&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;って。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』では UX の実践について第2章で「UX マインドセット」と呼んで具体的に解説している。
「マインドセット」とは「個人やチームが確立したものの見方や考え方」（p.34）らしい。
この辺はゲーム関係者だけでなく，他のソフトウェア製品（サービス）の提供者も読んでおくべきだろう。&lt;/p&gt;
&lt;p&gt;第3章と第4章はビデオゲームの良い面と悪い面について「科学」的な視点から論じている。
「科学」というのは，宗教や信仰とは違い，トライ&amp;amp;エラーの繰り返しである。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;他の専門家から問題を指摘された論文が訂正されるのは正常な科学の営みだ。むしろ問題は、論文は撤回することができるが、その主張にもとづいた政策を取り消すのは論文撤回後も容易ではないということだ。したがってゲームに関する政策決定を行う際には、個々の主張にのみ注目するのではなく、学会（科学者集団）でどこまで合意が得られてどのような異論があるかもとりいれる必要がある。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.181-182&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;第3章と第4章は引用にあるような「政策決定を行う」人だけでなく子どもを持つ親とかゲーマー自身も読んでおくべきだろう。
子どもがある程度以上の年齢なら親子で読んで議論するのも面白いかも知れない。&lt;/p&gt;
&lt;p&gt;第5章は「ビデオゲーム業界の倫理」について。
この章で「悪い UX」や「ダークパターン」といった単語とその解説が登場する。&lt;/p&gt;
&lt;p&gt;たとえばルートボックス（いわゆる「ガチャ」のこと）について「未成年を標的にするルートボックスは、まちがいなく倫理に反しています」（p.143）と断言し，その理由として&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;脳の前頭前野という領域は25歳くらいまで発達を続けます。この脳領域は、衝動や自動的な行動の制御などに関与します。子どもや10代の青少年は前頭前野が未成熟なので、特定の状況で自動的に起きる反応を制御することが、大人に比べてはるかに大変です。このような脳の発達上の理由から、子どもはセルフコントロールが苦手ですし（大人が限度を決めてあげないとうまくいかないことがよくありますよね）、ティーンエージャーはリスクの高い行動をとる傾向が大人より強いのです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.143-144&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と解説している。&lt;/p&gt;
&lt;p&gt;特に，昨今流行りの Generative AI サービスの提供者は必見だと思う。
巷の論調だと LLM に常識や倫理観を求めようと躍起になってるように見えるが，本当に重要なのはサービスを利用するユーザーが常識的かつ倫理的な行動を取りやすいようサービス全体を設計していくことなんじゃないだろうか。
「完全に中立的なデザインは存在しない」（p.152）のなら，まずは提供する側が製品に対して一貫した倫理観を「マインドセット」していく必要がある。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』には「ゲームはルールによって行動を強制する」（p.153）とあるが，それはどんなサービスでも同じだろう。
適切なルール・メイキングとそれを（浪花節や刷り込みではなく）合理的に無理なく遵守させる仕組みが必要なのだ，と思ったり。&lt;/p&gt;
&lt;p&gt;あとゲーマー（あるいはその親）も第5章は読んでおくべきだろう。
ゲームの中で自分たちが何をしているのか（させられてるのか）自覚できればゲーム内での行動も変わってくるかも知れない。
2023-04-08 の &lt;a href=&#34;https://www.igda.jp/2023/03/20/13647/&#34; title=&#34;『はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）』特別ウェビナー(4/8) | 国際ゲーム開発者協会日本&#34;&gt;Webinar&lt;/a&gt; で Celia Hodent さんが言っておられたが，ユーザーはバカではない。
経験を積み情報を得られれば賢く立ち回れるものである。
賢くなろうよ。&lt;/p&gt;
&lt;p&gt;私は，少なくとも職業エンジニアの&lt;ruby&gt;&lt;rb&gt;矜持&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;pride&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;は「善の実現」にあると思っている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;理学は、真理の探究であり、工学は善の実現である。そして、藝術は美の表現である&amp;mdash;&amp;mdash;これで所謂「真美善」が揃う&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4344980158?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はやぶさ―不死身の探査機と宇宙研の物語&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;でも，その場合「善って何？」という問題が常につきまとう。
『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』がその問題を照らす最初の取っ掛かりになることを期待したい。&lt;/p&gt;
&lt;p&gt;総評すれば『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』はみんな読んどけ！ ってことだな。
以上。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;年齢に関わらず、遊びは私たちの精神を鋭敏に保つために重要です。 [&amp;hellip;] 遊ぶことは学ぶことです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.71&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41Yi36OSUmL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-13&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-04-09&#34;&gt;2023-04-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cE5EmeezL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2021-04-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;版元より&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34;&gt;電子版&lt;/a&gt;も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ユニコーン企業のひみつ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51CFepapBZL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア 第3版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;トム・デマルコ (著), ティモシー・リスター (著), 松原友夫 (翻訳), 山浦恒央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2013-12-18&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4822285243 (ASIN), 9784822285241 (EAN), 4822285243 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;とりあえず図書館で借りて試し読みしたら面白かったので買うことにした。原書の初版が1987年ということで，当時の雰囲気が漂う感じ。アジャイルやスクラムなど現代につながる開発スタイルの源流とも言える本。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-02-12&#34;&gt;2023-02-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ピープルウエア Peopleware --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』では UX を「実装」ではなく「実践」と書かれていたのが印象的だった。つまりシステム設計や実装に限る話ではないということだろう。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>ソフトウェア部品表（SBOM）を生成するツール</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/03/cli-tool-for-generating-sbom/" />
		<id>tag:text.Baldanders.info,2023-03-26:/remark/2023/03/cli-tool-for-generating-sbom/</id>
		<published>2023-03-26T07:07:29+00:00</published>
		<updated>2023-03-26T07:07:35+00:00</updated>
		<summary>Go 以外のエコシステムでも使える。 grype と組み合わせて脆弱性のチェックも可能，らいい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; コードのビルドとリリースを一度にやってくれる &lt;a href=&#34;https://goreleaser.com/&#34;&gt;GoReleaser&lt;/a&gt; というツールがあるのだが，これの最近のバージョンはソフトウェア部品表（Software Bill of Materials; SBOM）も生成・リリースできるらしい。
というわけで，&lt;a href=&#34;https://github.com/goark/ml/releases/tag/v0.6.6&#34; title=&#34;Release v0.6.6 · goark/ml&#34;&gt;自作ツール&lt;/a&gt;でちょっと試してみた。&lt;/p&gt;
&lt;p&gt;設定自体は難しくなく &lt;code&gt;.goreleaser.yaml&lt;/code&gt; ファイルに以下の記述を追加すればいいだけのようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;sboms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;archive&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;早速この記述を追加して手元で動かしてみたのだが&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; • cataloging artifacts
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    • cataloging                      artifact=dist/ml_SNAPSHOT-a83f2d0b1db0ade89d839cd70b6870cd90011f55_Windows_ARM64.zip cmd=syft sboms=ml_SNAPSHOT-a83f2d0b1db0ade89d839cd70b6870cd90011f55_Windows_ARM64.zip.sbom
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ⨯ release failed after 1s   error=cataloging artifacts: syft failed: exec: &amp;#34;syft&amp;#34;: executable file not found in $PATH: 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ふむむ？ &lt;code&gt;syft&lt;/code&gt; がないって言ってるのか？ 調べてみたら &lt;a href=&#34;https://github.com/anchore/syft&#34; title=&#34;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&#34;&gt;syft&lt;/a&gt; というのはこれのことらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anchore/syft&#34;&gt;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://goreleaser.com/&#34;&gt;GoReleaser&lt;/a&gt; は内部で &lt;a href=&#34;https://github.com/anchore/syft&#34; title=&#34;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&#34;&gt;syft&lt;/a&gt; を起動して SBOM を生成しているようだ。
SBOM を生成するための設定を &lt;code&gt;.goreleaser.yaml&lt;/code&gt; ファイルに記述する際の詳細情報は以下のページが参考になる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goreleaser.com/customization/sbom/&#34;&gt;Cataloging artifacts - GoReleaser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;つか，最初からマニュアルを読めっての！＞自分&lt;/p&gt;
&lt;p&gt;GitHub Actions の &lt;a href=&#34;https://github.com/goreleaser/goreleaser-action&#34; title=&#34;goreleaser/goreleaser-action: GitHub Action for GoReleaser&#34;&gt;goreleaser-action&lt;/a&gt; を使って SBOM を含むリリースを行う場合は，自前で &lt;a href=&#34;https://github.com/anchore/syft&#34; title=&#34;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&#34;&gt;syft&lt;/a&gt; をインストールする必要がある。
とはいえ  &lt;a href=&#34;https://github.com/goreleaser/goreleaser-action&#34; title=&#34;goreleaser/goreleaser-action: GitHub Action for GoReleaser&#34;&gt;goreleaser-action&lt;/a&gt; を使うなら &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; のコンパイラは事前に導入されているはずなので，簡単に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;v*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;permissions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;goreleaser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Set up Go&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/setup-go@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;go-version-file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;go.mod&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install syft&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;go install github.com/anchore/syft/cmd/syft@latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Run GoReleaser&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;goreleaser/goreleaser-action@v4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# either &amp;#39;goreleaser&amp;#39; (default) or &amp;#39;goreleaser-pro&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;distribution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;goreleaser&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;release --clean&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Your GoReleaser Pro key, if you are using the &amp;#39;goreleaser-pro&amp;#39; distribution&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;といった感じに &lt;code&gt;go install&lt;/code&gt; コマンドでインストールしてしまっても問題なく行けるっぽい。
でも，これをすると SBOM に &lt;a href=&#34;https://github.com/anchore/syft&#34; title=&#34;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&#34;&gt;syft&lt;/a&gt; のバージョンが入らなくなるんだよなぁ。
&lt;a href=&#34;https://github.com/anchore/sbom-action&#34; title=&#34;anchore/sbom-action: GitHub Action for creating software bill of materials using Syft.&#34;&gt;sbom-action&lt;/a&gt; と組み合わせればいいのだろうか。
要検証だな。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/anchore/syft&#34; title=&#34;anchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems&#34;&gt;syft&lt;/a&gt; は &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 製だが &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; エコシステム専用というわけではなく，以下のものに対応しているらしい。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Alpine (apk)&lt;/li&gt;
&lt;li&gt;C (conan)&lt;/li&gt;
&lt;li&gt;C++ (conan)&lt;/li&gt;
&lt;li&gt;Dart (pubs)&lt;/li&gt;
&lt;li&gt;Debian (dpkg)&lt;/li&gt;
&lt;li&gt;Dotnet (deps.json)&lt;/li&gt;
&lt;li&gt;Objective-C (cocoapods)&lt;/li&gt;
&lt;li&gt;Elixir (mix)&lt;/li&gt;
&lt;li&gt;Erlang (rebar3)&lt;/li&gt;
&lt;li&gt;Go (go.mod, Go binaries)&lt;/li&gt;
&lt;li&gt;Haskell (cabal, stack)&lt;/li&gt;
&lt;li&gt;Java (jar, ear, war, par, sar, native-image)&lt;/li&gt;
&lt;li&gt;JavaScript (npm, yarn)&lt;/li&gt;
&lt;li&gt;Jenkins Plugins (jpi, hpi)&lt;/li&gt;
&lt;li&gt;PHP (composer)&lt;/li&gt;
&lt;li&gt;Python (wheel, egg, poetry, requirements.txt)&lt;/li&gt;
&lt;li&gt;Red Hat (rpm)&lt;/li&gt;
&lt;li&gt;Ruby (gem)&lt;/li&gt;
&lt;li&gt;Rust (cargo.lock)&lt;/li&gt;
&lt;li&gt;Swift (cocoapods)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/anchore/syft/blob/main/README.md&#34;&gt;syft/README.md at main · anchore/syft&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;んー。
メジャーどころは網羅してる感じ？&lt;/p&gt;
&lt;p&gt;他にも &lt;a href=&#34;https://github.com/anchore/grype&#34; title=&#34;anchore/grype: A vulnerability scanner for container images and filesystems&#34;&gt;grype&lt;/a&gt; と組み合わせることで脆弱性のチェックとかもできるし，その結果を証明書として作成して発行することもできるそうな。
私が公開しているような小物パッケージではそこまで不要だろうが，企業とかが運用している，それなりに規模の大きなプロジェクトでは重宝するかもしれない。&lt;/p&gt;
&lt;p&gt;覚えておこう。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wirelesswire.jp/2023/03/84355/&#34;&gt;米国の国家サイバーセキュリティ戦略とインフラとしてのオープンソース – WirelessWire News&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20220402-how-go-mitigates-supply-chain-attacks&#34;&gt;Go はどのようにしてサプライチェーン攻撃を低減しているか&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/08/software-bills-of-materials/&#34;&gt;オープンソース製品とソフトウェア部品表&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B09C2XBC2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31PDIZXO9tL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B09C2XBC2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;デベロッパーゴースーパーゴラン Tシャツ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Geek Go Super Golang Tees&lt;/dd&gt;
    &lt;dd&gt;ウェア&amp;amp;シューズ&lt;/dd&gt;
    &lt;dd&gt;B09C2XBC2F (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついカッとなってポチった。反省はしない&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-04-10&#34;&gt;2022-04-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Golang Tシャツ --&gt;
</content>
	</entry><entry>
		<title>ChatGPT という壁打ち</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/03/practice-on-the-wall/" />
		<id>tag:text.Baldanders.info,2023-03-19:/remark/2023/03/practice-on-the-wall/</id>
		<published>2023-03-19T12:43:57+00:00</published>
		<updated>2023-03-28T11:50:11+00:00</updated>
		<summary>改めて OpenAI にアカウントを作った</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先日から『&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） | セリア ホデント, 山根 信二, 成田 啓行 |本 | 通販 | Amazon&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』という本をちょっとずつ読み始めている。
この本の感想はいずれ書くとして，この本に&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;ビデオゲームをはじめ各種のゲームは、ツールでないという点で、ほかの製品と少し違います。ビデオゲームは外部の目標に向かってプレイするものではなく、プレイ自体が目的になる、自己目的的な活動です。私たちはゲームを通じてシステムに働きかけ、その反応を楽しみます。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』p.39&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれているのを見て，その前に見た&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;おもちゃが手に入ったときの草の根活動は日本最強だと思うんですよね。事業化するのがとにかく下手 &lt;a href=&#34;https://t.co/d43QS8F4h7&#34;&gt;https://t.co/d43QS8F4h7&lt;/a&gt;&lt;/p&gt;&amp;mdash; odashi (@odashi_t) &lt;a href=&#34;https://twitter.com/odashi_t/status/1634252815882391554?ref_src=twsrc%5Etfw&#34;&gt;March 10, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;p&gt;という tweet を思い出した。&lt;/p&gt;
&lt;p&gt;もの凄い個人的な意見を言わせていただければ AI でプログラマが失業するかもしれないなんて話は完全に想定内なのよ。
つい40年前には「キーパンチャー」とか「コーダー」とかいう（今は絶滅した）職業が存在してたんだぜ。
プログラマみたいな（頭脳）労働集約的な職業が近い将来なくなったとしても全く不思議ではないだろう。&lt;/p&gt;
&lt;p&gt;たとえば「Linux のメンテナを AI に一任することになりました」とか「Eマスク氏が AI を使って Twitter を自分好みに全面改修しました」みたいな話が起きれば本格的に（職業をかわるという意味での）転職を考えないといけなくなるだろうが，たかだか学部生の宿題レベルが解ける程度なら，鼻の先は驚異でも脅威でもない（日進月歩という意味では凄いと思うけど）。&lt;/p&gt;
&lt;p&gt;話が逸れた。
逸れたついでに&amp;hellip;&lt;/p&gt;
&lt;p&gt;恥ずかしながら中学時代はテニス部だったのだが&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，運動神経が壊滅してる私は「壁打ち」で練習することが多かった。
「壁打ち」って奥が深いよね。
どの方向にどういう強さ打って，球にどう回転を加えれば，思い通りの球が返ってくるか。
まさに物理学だよね。&lt;/p&gt;
&lt;p&gt;私の中で ChatGPT は何となく「壁打ち」なイメージなんだよなぁ。
インプットに対するアウトプットを見ながら次のインプットを調整していく。
フィードバックを行うのは機械（＝壁）じゃなくて人間のほうだよね。&lt;/p&gt;
&lt;p&gt;というような思いつきを Mastodon に投稿したら&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox center&#34;&gt;
&lt;iframe src=&#34;https://social.hyuki.net/@hyuki/110046769146123924/embed&#34; class=&#34;mastodon-embed&#34; style=&#34;max-width: 100%; border: 0&#34; width=&#34;400&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;
&lt;/blockquote&gt;&lt;/figure&gt;
&lt;p&gt;というリアクションをいただいた。
ありがたや。&lt;/p&gt;
&lt;p&gt;結城浩さんといえば最近&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/hyuki/f7218870ae47847eab066545b8b51d05&#34;&gt;ChatGPT と結城浩の対話（矛盾や反復を含んだ対話によってAIと人間の識別は行えるか） · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というのを公開されていて，これは凄いと思った。
対話というのはお互いの間で「文脈（context）」を生成・共有する必要があるが，パッと見た限りでは両者の間に「文脈」があるように見える。
もっとも ChatGPT については&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ChatGPTと会話していると、記憶力があるように錯覚するけれど、APIで使う人はわかるように、記憶はなく（ステートレスで）、今までの会話の全記録（ただし長さ制限あり）と新しい質問を入力して、新しい回答を生成するだけ。密かに悪巧みを考えることもできない（SFに出てくるAGIではない）&lt;/p&gt;&amp;mdash; Haruhiko Okumura (@h_okumura) &lt;a href=&#34;https://twitter.com/h_okumura/status/1637280594534211584?ref_src=twsrc%5Etfw&#34;&gt;March 19, 2023&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;p&gt;なんだそうで，そうなると少なくとも ChatGPT 側は「文脈」と言えるものを持ってないことになる？&lt;/p&gt;
&lt;p&gt;「ゲーム」の面白さのひとつは，「ゲーム」というブラックボックスに対して何某かの入力を行いそれに対する反応をフィードバックして次の入力を行う，という繰り返しで対象への「理解」を深めることにあり，それ自体が目的化している点にあると思う。&lt;/p&gt;
&lt;p&gt;何だかよく分からないものを理解していくというプロセスは，自身の「『有能さ』への欲求」を満たす行為であり，まさに「ゲーム」に対する内発的動機になり得るものだ。&lt;/p&gt;
&lt;p&gt;であるなら ChatGPT も「仕事に使えるか？」とか要らないことは考えずに，純粋に「ゲーム」だと思えば楽しく遊べるのではないか，と考えを切り替えることにした。
競馬の予想屋と大して変わらないなんちゃらアナリストの発言に右往左往するのはもう止めよう。&lt;/p&gt;
&lt;p&gt;というわけで，改めて（Google アカウントではない）アカウントを作ってみた。
Subscription で決済が発生するのなら Google アカウントは使いたくなかったので。
まずは無料枠分で「壁打ち」するところから始めようか（笑）&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;年齢に関わらず、遊びは私たちの精神を鋭敏に保つために重要です。
[&amp;hellip;]
遊ぶことは学ぶことです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』p.71&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.openai.com/en/articles/6825453-chatgpt-release-notes&#34;&gt;ChatGPT — Release Notes | OpenAI Help Center&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/koma_aws/items/5d4a8bed52599f497f5c&#34;&gt;ChatGPTをVSCodeで利用するための設定方法 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/waarrk/articles/a6868cea7549de&#34;&gt;ChatGPTのVSCodeプラグインが神すぎる件について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;これらで紹介されている拡張機能は，規約違反がどうのとかで，後悔を取りやめたらしい。まぁ Chromium がインストールされている必要があるみたいなので，どっちみち使わんと思うが&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yukiaprogramming/items/538a18bb3581245857e5&#34;&gt;ChatGPTのAPIをGolangで実装する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/o_ob/articles/gas-chatgpt-api&#34;&gt;VisualStudio CodeとGoogle Apps ScriptでChatGPT(gpt-3.5-turbo)をより安全快適に使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35201375/&#34;&gt;ChatGPTに回答の参考文献を提示させるには - ZDNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://platform.openai.com/docs/libraries/community-libraries&#34;&gt;OpenAI API&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sashabaranov/go-openai&#34;&gt;GitHub - sashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/u_u/articles/54902c757ffce5&#34;&gt;ChatGPTのプロンプトをLispで書く&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ikeda_yasuhiro/items/3c633ddf0f3119051fe0&#34;&gt;GPT-4はどのようにして「不適切な回答」を回避するように学習されているのか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/kznrluk/items/6d5ecd22c1b19d3e1d56&#34;&gt;ChatGPTで開発効率アップ！askiを使ったCLIコードレビュー＆バグ特定 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/disukharev/top-3-open-source-ai-tools-for-programmers-4oed&#34;&gt;TOP 3 open-source AI to code like a PRO 🧠 🤖 - DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41Yi36OSUmL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-13&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-04-09&#34;&gt;2023-04-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BXQ2HMQ5?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51RHpNwG41L._SL160_.jpg&#34; width=&#34;120&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0BXQ2HMQ5?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;日経サイエンス2023年5月号（特集：対話するAI　ChatGPT）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;日経サイエンス編集部 (編集)&lt;/dd&gt;
    &lt;dd&gt;日経サイエンス 2023-03-25 (Release 2023-03-25)&lt;/dd&gt;
    &lt;dd&gt;雑誌&lt;/dd&gt;
    &lt;dd&gt;B0BXQ2HMQ5 (ASIN), 4910071150534 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;特集記事が「話す AI 描く AI」ということで，いわゆる Generative AI に関する内容。大規模言語モデル（LLM）の解説も載っている。圏論の記事もあるよ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-03-28&#34;&gt;2023-03-28&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 日経サイエンス2023年5月号（特集：対話するAI ChatGPT） --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00LF90DZW?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/61StnV8HguL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00LF90DZW?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;賢者の弟子を名乗る賢者1 (GCノベルズ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;りゅうせんひろつぐ (著), 藤ちょこ (イラスト)&lt;/dd&gt;
    &lt;dd&gt;マイクロマガジン社 2014-06-30 (Release 2014-07-01)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00LF90DZW (ASIN), 9784896374650 (EAN), 4896374657 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;最近のお気に入りラノベ。 &lt;a href=&#34;http://ncode.syosetu.com/n6829bd/&#34;&gt;Web 版&lt;/a&gt;も愛読している。こういう設定のゲームとかあったら楽しいかなぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-06-09&#34;&gt;2017-06-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 賢者の弟子を名乗る賢者 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;親に無理やり入れさせられた。高校に入ったら一切運動部には関わらないという条件で渋々入った。テニス部を選んだのは一番楽そうに見えたからだ（←シロート考えw）。まぁ，それで身に着けた体力の余剰分でこの歳まで生き延びたんだから，そこだけは当時の親に感謝しておこう。今だに運動も体育会系のノリもまっぴらゴメンって感じだが。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Mastodon/Misskey は Twitter にはなれない</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/02/mastodon-or-misskey-is-not-twitter/" />
		<id>tag:text.Baldanders.info,2023-02-27:/remark/2023/02/mastodon-or-misskey-is-not-twitter/</id>
		<published>2023-02-27T03:51:13+00:00</published>
		<updated>2023-02-27T04:02:49+00:00</updated>
		<summary>単一でカオスでスケールするプラットフォームが欲しいなら，何がどうなろうと Twitter にしがみつくしかない。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://givemegohan.xyz/2023/02/26/misskey%e3%81%ae%e6%80%a5%e9%80%9f%e3%81%aa%e6%b5%81%e8%a1%8c%e3%81%a8%e5%88%86%e6%95%a3%e5%9e%8bsns%e3%81%ae%e9%99%90%e7%95%8c/&#34;&gt;misskeyの急速な流行と分散型SNSの限界 | 右や左の旦那様&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近 &lt;a href=&#34;https://misskey.io/&#34;&gt;Misskey.io&lt;/a&gt; が急激に煩くなってきて「なぜ？ いまさら？」と思ってたのだが，どうやら「日本製であることから日本人の間でtwitterからの移行先として注目されています」ということで，特定のコミュニティが Twitter や Mastodon からまとめて移住してきたっぽい？ 移住者が同じサーバに殺到すれば，そりゃああなるわな，知らんけど。
&lt;a href=&#34;https://misskey.io/&#34;&gt;Misskey.io&lt;/a&gt; の知ってるアカウントをいくつかフォローしてみたが，あまりに煩いので，&lt;a href=&#34;https://fedibird.com/@spiegel/109930674837957927&#34;&gt;ホーム TL から隔離&lt;/a&gt;して専用リストで様子見をしている。&lt;/p&gt;
&lt;p&gt;私が &lt;a href=&#34;https://fedibird.com/&#34;&gt;Fedibird&lt;/a&gt; に移住を決めた最大要因は「ローカル TL がないこと」だったので，件の記事の「分散型SNSはローカルタイムラインが本体であり、インスタンスごとにコミュニティを形成しているから」というのは同意しかねるものがある。
けど，まぁ，世間的にはそういうことなんだろう。&lt;/p&gt;
&lt;p&gt;実際，他所から移住してくるときはコミュニティ単位だったり，あるいは大勢のオーディエンスを引き連れてくる場合が多いのかもしれない。
SNS だからね。
「分散型SNSはローカルタイムラインが本体」というか「連合型 SNS の各サーバは，その構成員で色が決まる」ということだろう。
どんな色か見たければローカル TL を眺めるしかない。
だから色が見えない &lt;a href=&#34;https://fedibird.com/&#34;&gt;Fedibird&lt;/a&gt; の設計は，汎用サーバとしては秀逸だと思うけどねぇ。&lt;/p&gt;
&lt;p&gt;Mastodon にせよ Misskey にせよ，サーバのスケールアップは簡単じゃない。
お金で殴れる財力があれば別だろうけど，その場合でも，そこにお金をつぎ込むインセンティブが（サーバ管理者側に）あるのかという問題もある。
&lt;a href=&#34;https://fedibird.com/&#34;&gt;Fedibird&lt;/a&gt; も2月に入って招待ユーザ以外の受け入れを停止してる。&lt;/p&gt;
&lt;p&gt;あれだな。
かつてシリア内戦で大量の難民が欧州各国に向かったけど，受け入れ国側も受け入れる余白に限りがあるので，そこでまた国際政治問題に発展したみたいな（喩えが物騒）。&lt;/p&gt;
&lt;p&gt;スケールの問題を解決するにはエンジニアとお金を集める必要がある。
エンジニアやお金を集めるためにはどうしても企業・組織の形態を取らざるを得ない（寄付だって受ける側がただの個人では限界がある）。
だから Fediverse では連合という形でスケールの問題を回避しようとしているのに，結局は有象無象が群れて行動するから移住先サーバが「Twitter 化」してしまうんだよな。
これに耐えられないサーバは新規のお客さんを断るか，最悪は店じまいするしかない。&lt;/p&gt;
&lt;p&gt;結局のところ Twitter の代替となるものはない。
Mastodon も Misskey も，最近流行りらしい Nostr も Twitter の代わりにはならない。
考え方が根本から違うからだ。
単一でカオスでスケールする &lt;strong&gt;プラットフォーム&lt;/strong&gt; が望みなら，某マスク氏が何をしようが，お金を払わないと使いものにならなくなっても Twitter にしがみつくしかない。
「離脱の自由」などク◯喰らえである。
そもそも代替となるものがないのだから。
代替を探すなど無駄な努力は止めて有料会員になるか広告料をバンバン払って TL を広告塗れにするほうが建設的だろう。
私は嫌だけど（笑） それをするくらいなら &lt;a href=&#34;https://opencollective.com/fedibird-project&#34; title=&#34;Fedibird Project - Open Collective&#34;&gt;Fedibird Project に寄付&lt;/a&gt;する。&lt;/p&gt;
&lt;p&gt;そういや，最初期の Twitter は全ユーザの tweets を表示する TL があったんだよね。
いつなくなったんだっけ？ まぁ Twitter ですら無理なものを Mastodon や Misskey ごときにどうにかできるはずがない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/freedom-of-speech/4214&#34;&gt;我々が「離脱の自由」を必要とする理由――あるいはソーシャルメディアの失敗をマシにする方法 | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/bookmarks/fediverse/&#34;&gt;Fediverse 関連のブックマーク&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cE5EmeezL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2021-04-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;版元より&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34;&gt;電子版&lt;/a&gt;も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ユニコーン企業のひみつ --&gt;
</content>
	</entry><entry>
		<title>『ピープルウエア』を借りて流し読む</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/02/peopleware/" />
		<id>tag:text.Baldanders.info,2023-02-12:/remark/2023/02/peopleware/</id>
		<published>2023-02-12T11:38:11+00:00</published>
		<updated>2023-02-13T00:56:18+00:00</updated>
		<summary>もしこれから買うって方は紙の本をおすすめする。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4621303252?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Effective Java&lt;/a&gt;』や『&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;』の翻訳でおなじみ&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/&#34; title=&#34;柴田 芳樹 (Yoshiki Shibata)：SSブログ&#34;&gt;柴田芳樹&lt;/a&gt;さん主催の読書会で『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』を取り上げることになったそうな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technical-book-reading.connpass.com/event/273601/&#34;&gt;第1回『ピープルウェア第3版』オンライン読書会 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不勉強なことに『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』を知らなかったので，まずは&lt;a href=&#34;https://www.library.pref.shimane.lg.jp/&#34;&gt;県立図書館&lt;/a&gt;で&lt;a href=&#34;https://text.baldanders.info/remark/2023/01/castle-in-winter/&#34; title=&#34;松江城 冬景色&#34;&gt;借りて&lt;/a&gt;読んでみることにした。
これが，いざ借りようとしたら&lt;a href=&#34;https://www.library.pref.shimane.lg.jp/&#34;&gt;図書館&lt;/a&gt;の地下倉庫にあるっていうのよ。
受付で一般の人が借りていいか訊いてしまったよ。
まぁ，でも，無事に借りれた。&lt;/p&gt;
&lt;p&gt;もしこれから買うって方は紙の本をおすすめする。
この本は注釈が巻末にまとめて書かれていて（縦書きの人文系の本ではよくあるスタイル） Kindle ではたぶん読みにくい。
PDF なら複数のウィンドウで開いたり，アプリケーションによっては画面分割したりできるんだけどねぇ。
まぁ，私は&lt;a href=&#34;https://baldanders.info/blog/000709/&#34;&gt;日経嫌い&lt;/a&gt;なので PDF 版出ても買わんだろうけど（笑）&lt;/p&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』の問題意識は，プロジェクトで起きるアレコレは大抵，技術的な問題というよりは人間側の問題であると考えている点にある。
この本ではこれを「プロジェクトの社会学」と呼んでいる。
だから “Peopleware” なのだ。&lt;/p&gt;
&lt;p&gt;たとえば&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;開発者の主な仕事は、ユーザー流の表現で表したユーザー要求を、厳格な処理手順に組み替えるための、人と人とのコミュニケーションである。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.37&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という感じ。
他にも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;本当にハイテクビジネスに身を置いているのは、ハイテクの領域で、基本的な発明発見を成し遂げた研究者だけだ。それ以外の人は他人の研究成果を応用しているに過ぎない。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.4&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;プログラミング言語は、問題を考える方法に大きな影響を与えるので重要だが、これもコーディング工程にしか影響を与えない。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.36&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;など，私のような凡庸なエンジニアには耳の痛い記述もある（笑）&lt;/p&gt;
&lt;p&gt;でも『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』でメインに dis ってるのは経営者や管理職だろう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;自信のない権威主義的体制（教区附属学校や軍隊など）のもとでは画一性は極めて重要で、この下ではドレスコードを強いることさえある。スカートの丈やジャケットの色の違いに脅威を感じるから禁止されるのだ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.110&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;屍を支える仕事は人に満足を与えない。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.110&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;人的資本は非常に大きな意味を持ち得る。誤って消えてなくなる経費と考えると、投資した価値が残らないような行動にマネージャーを誘導する危険がある。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ピープルウエア』 p.143&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この辺を読んで，某 Twitter のことか？ と一瞬思っちまったよ（笑）&lt;/p&gt;
&lt;p&gt;最近 “&lt;a href=&#34;https://www.platformer.news/p/elon-musk-fires-a-top-twitter-engineer&#34;&gt;Elon Musk fires a top Twitter engineer over his declining view count&lt;/a&gt;” という記事を見かけたが，この中で&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;The perks that made Twitter an attractive place to work pre-Musk have been eradicated. Food at the office? “Sucks – and now we have to pay for it. And, I know this sounds petty, but they appear to have obtained the absolute worst coffee vendors on earth.”&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.platformer.news/p/elon-musk-fires-a-top-twitter-engineer&#34;&gt;Elon Musk fires a top Twitter engineer over his declining view count&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;“People don’t even chat about work things anymore,” the employee said. “It’s just heartbreaking. I have more conversations with my colleagues on Signal and WhatsApp than I do on Slack. Before the transition, it was not uncommon in the team channel to talk about what everybody did that weekend. There’s none of that anymore.”&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.platformer.news/p/elon-musk-fires-a-top-twitter-engineer&#34;&gt;Elon Musk fires a top Twitter engineer over his declining view count&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書かれていて，まさに『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』に書かれている悪い例が進行しているのを見て「うわぁ」となった。&lt;/p&gt;
&lt;p&gt;たぶん『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』や，最近なら『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BNH1J2W2?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ちょうぜつソフトウェア設計入門&lt;/a&gt;』を読むような人なら，その前説として『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』は読んでおいて損はないだろう。
そういえば，オンラインイベント「&lt;a href=&#34;https://forkwell.connpass.com/event/271212/&#34;&gt;ちょうぜつ改め21世紀ふつうのソフトウェア設計入門 - Forkwell Library #14&lt;/a&gt;」の&lt;a href=&#34;https://twitter.com/m3m0r7&#34;&gt;めもりー&lt;/a&gt;さんによる&lt;a href=&#34;https://speakerdeck.com/memory1994/why-the-application-design-is-breaking-sometimes-at-a-startup-company&#34; title=&#34;CTO から見た，なぜスタートアップ初期のソフトウェア設計は壊れがちなのか - Speaker Deck&#34;&gt;講演&lt;/a&gt;の中で，エンジニアの採用事情について言及があったが，『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア&lt;/a&gt;』を読めば，経費ではなく，最も価値ある資源であり投資対象でもある「人材」を如何にして確保し定着させるか，といったことの片鱗が見えるかもしれない。&lt;/p&gt;
&lt;p&gt;というわけで，とりあえず第III部の途中まで読んで本は返したが，なかなか面白かったので買うことにした。
&lt;a href=&#34;https://www.library.pref.shimane.lg.jp/&#34;&gt;図書館&lt;/a&gt;においては，地下倉庫じゃなくて，是非とも一般の書架に置いていただきたいものである（笑） &lt;a href=&#34;https://technical-book-reading.connpass.com/event/273601/&#34; title=&#34;第1回『ピープルウェア第3版』オンライン読書会 - connpass&#34;&gt;読書会&lt;/a&gt;も参加してみようかな。
この本を若い人が読んだらどう思うのだろうか。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51CFepapBZL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822285243?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ピープルウエア 第3版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;トム・デマルコ (著), ティモシー・リスター (著), 松原友夫 (翻訳), 山浦恒央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2013-12-18&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4822285243 (ASIN), 9784822285241 (EAN), 4822285243 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;とりあえず図書館で借りて試し読みしたら面白かったので買うことにした。原書の初版が1987年ということで，当時の雰囲気が漂う感じ。アジャイルやスクラムなど現代につながる開発スタイルの源流とも言える本。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-02-12&#34;&gt;2023-02-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ピープルウエア Peopleware --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07FSBHS2V?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51mQrYTahJL._SL160_.jpg&#34; width=&#34;121&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07FSBHS2V?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Clean Architecture　達人に学ぶソフトウェアの構造と設計 (アスキードワンゴ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Ｒｏｂｅｒｔ Ｃ．Ｍａｒｔｉｎ (著), 角 征典 (著), 高木 正弘 (著)&lt;/dd&gt;
    &lt;dd&gt;ドワンゴ 2018-08-01 (Release 2018-08-01)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07FSBHS2V (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実務に即効性のある技術解説書というわけではないが，ものの「考え方」を示す本としてはよく出来ている。ソフトウェア技術史の読み物としても面白い。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-03&#34;&gt;2021-04-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Clean Architecture --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cE5EmeezL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2021-04-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;版元より&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34;&gt;電子版&lt;/a&gt;も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ユニコーン企業のひみつ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BNH1J2W2?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51hWll9NSML._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0BNH1J2W2?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ちょうぜつソフトウェア設計入門――PHPで理解するオブジェクト指向の活用&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;田中 ひさてる (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2022-12-07 (Release 2022-12-07)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0BNH1J2W2 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;祝♪ &lt;a href=&#34;https://twitter.com/search?q=%23%E3%81%A1%E3%82%87%E3%81%86%E3%81%9C%E3%81%A4%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%82%81%E3%82%82%E3%82%8A%E3%83%BC%E3%81%A1%E3%82%83%E3%82%93&#34;&gt;#ちょうぜつエンジニアめもりーちゃん&lt;/a&gt; 単行本化！ 私は&lt;a href=&#34;https://gihyo.jp/book/2022/978-4-297-13234-7&#34;&gt;版元&lt;/a&gt;で電子版を購入した。絵は可愛いが読み応えあり。「SoftwareDesign」連載分も収録されていて超お得！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-10&#34;&gt;2022-12-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ちょうぜつエンジニアめもりーちゃん --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BQ6M39HJ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51D3pBPsawL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0BQ6M39HJ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;小さな会社のスクラム実践講座&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;柏岡秀男 (著), Scrum Inc. (監修)&lt;/dd&gt;
    &lt;dd&gt;エムディエヌコーポレーション（MdN） 2022-12-16 (Release 2022-12-16)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0BQ6M39HJ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;基本に忠実な内容。何回でも読み返すべき。こういうのをゼロから始めるときって（特に小さな会社は）ブートストラップが難しいと思うが，この本はかなり参考になるのではないだろうか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-24&#34;&gt;2022-12-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 小さな会社のスクラム実践講座 --&gt;
</content>
	</entry><entry>
		<title>松江に出戻り5度目の冬（Advent Calendar）</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/12/09-san-in/" />
		<id>tag:text.Baldanders.info,2022-12-09:/remark/2022/12/09-san-in/</id>
		<published>2022-12-08T15:00:01+00:00</published>
		<updated>2022-12-08T17:01:45+00:00</updated>
		<summary>「年寄りの冷や水」という感じで眺めていただければと思います。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;（本ページは「&lt;a href=&#34;https://adventar.org/calendars/8245&#34; title=&#34;山陰 Advent Calendar 2022 - Adventar&#34;&gt;山陰 Advent Calendar 2022&lt;/a&gt;」9日目の記事です）&lt;/p&gt;
&lt;p&gt;はじめましての方ははじめまして。
Spiegel と申します。
簡単なプロフィールは&lt;a href=&#34;https://baldanders.info/profile/&#34; title=&#34;公開履歴書 | Baldanders.info&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;長いこと広島市に住んでいたのですが4年前（1998年末）に生まれ故郷の松江市に &lt;del&gt;撤退&lt;/del&gt; おっと転進しまして，以後は「死の行軍」で本当に死にそうになることもなく，かといって歓楽街で夜遊びすることもなく，比較的のんびり暮らしています。
（体調面の不安もあり）帰郷直後は IT 業界への復帰を諦めていたのですが，幸運にも拾ってくださった地元企業がありまして，こちらにも帰ってまいりました。&lt;/p&gt;
&lt;p&gt;今回参加する Advent Calendar は「せっかくだから、ゆるっと記事を書いてみませんか？」ということなので，アドバイス通り，ゆる～く行きたいと思います。
とはいえ，特に後半の話は以前から書きたかった内容ですので「年寄りの冷や水」という感じで眺めていただければと思います。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;プログラミング言語にも「母国語」と言えるものがあります。
たとえば「数学ガール」シリーズやデザパタ本などでおなじみ結城浩さんの「連ツイ」にも以下のような記述があります。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;p&gt;プログラミング言語との付き合い方というのはいろいろあってですね。自分の母国語という言語はある。それから現在学んでいる最中の言語というのもある。そして、仕事用の言語やら、他の人とのコミュニケーション用言語というのもある。そのあたりは、自然言語とちょっと似ている。&lt;/p&gt;
&lt;p&gt;ITな業界で仕事をしているひとというのは、だいたいそういう感じでプログラミング言語とつきあっていると思っている。たった一つしかプログラミング言語ができないという人は少なくて、二つくらいは読み書きできる。三つ四つくらいはなんとなく読むのはできる。五つ六つくらいは何のソースか言える。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;http://rentwi.hyuki.net/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれどRubyやJavaScriptの本はまだ書いていないですね（出版社からは、Ruby!とかJavaScript!と言われていますけれど）。でも、結城が現在日常的に書いている言語はRubyとJavaScriptになります。 - 結城浩の連ツイ&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;私の場合は出自が組込みソフトウェア・エンジニアなのでアセンブラと C 言語が「母国語」と言えるものでしたが，2015年頃から趣味で &lt;a href=&#34;https://go.dev/&#34;&gt;Go 言語&lt;/a&gt;を習い始めまして，近年は Go が「母国語」になってきています。&lt;/p&gt;
&lt;p&gt;物凄く簡単に言うと，昔は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hello, world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を C で書いたらどうなるかというのを脳内でほぼ無意識に「翻訳」してましたが，今は逆に K&amp;amp;R の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;“&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を Go で書くとどうなるか，という感じでしょうか。&lt;/p&gt;
&lt;p&gt;仕事で様々なプログラミング言語を渡り歩いて来ましたが「母国語」が変わるほどのインパクトは初めての経験で，今も楽しく Go で遊んでいます。
願わくば，もう少し仕事に繋げられるといいのですが。&lt;/p&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;2020年のパンデミック宣言以後&lt;a href=&#34;https://github.com/spiegel-im-spiegel/covid-2019-report&#34;&gt;なかなか収まる気配のない COVID-2019&lt;/a&gt; ですが，おかげさまというか何というか，いわゆる「リモートワーク」が普通になりつつありオンライン・イベントもたくさん開催されるようになったのは，田舎に引っ込んだ身としてはありがたい機会でした。&lt;/p&gt;
&lt;p&gt;特に『&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;』や『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119979?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語による分散サービス&lt;/a&gt;』の翻訳者でもある&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/&#34;&gt;柴田芳樹&lt;/a&gt;さん主催のオンライン読書会は勉強になっています。&lt;/p&gt;
&lt;p&gt;その柴田芳樹さんのブログ記事で興味深いものがありまして。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2013-10-10&#34;&gt;ソフトウェアエンジニアの成長カーブ（再掲載）：柴田 芳樹 (Yoshiki Shibata)：SSブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事で示されている図&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2010-01-27&#34;&gt;&lt;img src=&#34;https://yshibata.c.blog.ss-blog.jp/_images/blog/_d3f/yshibata/E68890E995B7E382ABE383BCE38396.JPG&#34; srcset=&#34;https://yshibata.c.blog.ss-blog.jp/_images/blog/_d3f/yshibata/E68890E995B7E382ABE383BCE38396.JPG 1057w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ソフトウェアエンジニアの成長カーブ（２）：柴田 芳樹 (Yoshiki Shibata)：SSブログ&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2010-01-27&#34;&gt;ソフトウェアエンジニアの成長カーブ（２）：柴田 芳樹 (Yoshiki Shibata)：SSブログ&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;にはなかなか考えさせられるものがあります。&lt;/p&gt;
&lt;p&gt;この図が示すのは，会社から与えられている仕事に慣れて自律&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 的に「学ぶ」ことを止めてしまうと，手持ちのスキルは（時代の流れで）先細りし，さらに学習習慣が失われることにより新たな技術・スキルを得る機会を逸してしまうため，全体としてスキルレベルが低下してしまう，というものです。&lt;/p&gt;
&lt;p&gt;特に日本企業は従業員の「今」のスキルレベルに合わせて「できそうな仕事」を見繕って割り振る傾向があり，所属部署から与えられる仕事をこなすことに満足しているとあっという間にスキルが先細りしてしまう，というような話を読書会でもしていました。&lt;/p&gt;
&lt;p&gt;この辺は私も耳が痛い部分があります。
お金をもらって技術とスキルを発揮するプロのエンジニアであれば，いくつになっても何処にいても，学ぶ姿勢と習慣を捨ててはいけないということでしょう。
でも，どうせなら楽しく学びたいものです。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
僕たちは好きで学んでいる。
&lt;br&gt;先生を待つ必要はない。授業を待つ必要はない。
&lt;br&gt;本を探せばいい。本を読めばいい。
&lt;br&gt;広く、深く、ずっと先まで勉強すればいい
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00EYXMA9I?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;数学ガール&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://engineer-lab.findy-code.io/tenntenn-go&#34;&gt;チャンスは待たずに自分で作る ─ ソフトウェアエンジニアが「好きな技術」で生きていくための技術とは - Findy Engineer Lab - ファインディエンジニアラボ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119693?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cBKEBEYyL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119693?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;実用 Go言語 ―システム開発の現場で知っておきたいアドバイス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-04-22&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp//books/9784873119694/&#34;&gt;版元&lt;/a&gt;のデジタル版を購入。 Go で躓きやすい点を解説していくのが&lt;a href=&#34;https://forkwell.connpass.com/event/262394/&#34;&gt;最初の動機&lt;/a&gt;らしい。「◯◯するには」を調べる際にこの本を調べるといいかも。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-26&#34;&gt;2022-10-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 実用 Go 言語 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51pUKQajnaL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語による並行処理&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Katherine Cox-Buday (著), 山口 能迪 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2018-10-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873118468 (ASIN), 9784873118468 (EAN), 4873118468 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873118468/&#34;&gt;Eブック版もある&lt;/a&gt;。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2018/11/concurrency-in-go/&#34;&gt;こちら&lt;/a&gt;。 Go 言語で並行処理を書くならこの本は必読書になるだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-01-13&#34;&gt;2020-01-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Go言語による並行処理 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119979?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41WaZWxEzVL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119979?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語による分散サービス ―信頼性、拡張性、保守性の高いシステムの構築&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Travis Jeffery (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-08-03&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119979 (ASIN), 9784873119977 (EAN), 4873119979 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119977/&#34;&gt;版元&lt;/a&gt;でデジタル版を購入。&lt;a href=&#34;https://technical-book-reading-2.connpass.com/&#34;&gt;読書会&lt;/a&gt;の課題図書。ハンズオンぽい構成でコードがたくさん書かれているのがよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-08-03&#34;&gt;2022-08-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Go言語による分散サービス --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4908686122?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51UR-fn8fmL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4908686122?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Goならわかるシステムプログラミング 第2版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;渋川よしき (著), ごっちん (イラスト)&lt;/dd&gt;
    &lt;dd&gt;ラムダノート 2022-03-23&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4908686122 (ASIN), 9784908686122 (EAN), 4908686122 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;第1版はとても&lt;a href=&#34;https://text.baldanders.info/remark/2018/10/system-programming-in-golang/&#34;&gt;ためになる内容&lt;/a&gt;だったので第2版も &lt;a href=&#34;https://www.lambdanote.com/collections/frontpage/products/go-2-pdf&#34;&gt;PDF 版&lt;/a&gt;で確保しておく。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-08&#34;&gt;2022-10-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Goならわかるシステムプログラミング 第2版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B09C2XBC2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31PDIZXO9tL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B09C2XBC2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;デベロッパーゴースーパーゴラン Tシャツ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Geek Go Super Golang Tees&lt;/dd&gt;
    &lt;dd&gt;ウェア&amp;amp;シューズ&lt;/dd&gt;
    &lt;dd&gt;B09C2XBC2F (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついカッとなってポチった。反省はしない&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-04-10&#34;&gt;2022-04-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Golang Tシャツ --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/B071FHBGW8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;そろそろ、人工知能の真実を話そう&lt;/a&gt;』によると「自律」というのは元々哲学用語で「自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができることをいう」のだそうです。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
