<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of Engineering - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/engineering/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/engineering/index.xml" />
	<id>tag:text.Baldanders.info,2025-01-09:/tags</id>
	<updated>2025-01-09T18:46:24+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Mini PC を衝動買いした</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2025/01/win11pro-on-minipc/" />
		<id>tag:text.Baldanders.info,2025-01-09:/remark/2025/01/win11pro-on-minipc/</id>
		<published>2025-01-09T09:46:24+00:00</published>
		<updated>2025-01-09T09:46:29+00:00</updated>
		<summary>これで Windws 11 Pro がバンドルされてて26K円ちょっと</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今年は散財せず慎ましく生活していこうと思ったのに &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以下の記事を見て&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pc.watch.impress.co.jp/docs/column/nishikawa/1652152.html&#34;&gt;【西川和久の不定期コラム】邪魔なACアダプタがなくなった！？Twin LakeのIntel N150搭載ミニPC「Beelink EQ14」  - PC Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;衝動買いしてしまった（←他人のせいにしようとしている）&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54253033452/&#34;&gt;&lt;img src=&#34;./54253033452_728a6fa959_e.jpg&#34; srcset=&#34;./54253033452_728a6fa959_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ミニPCを衝動買い | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54253033452/&#34;&gt;ミニPCを衝動買い | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ハードウェアのスペックは以下の通り。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; cite=&#34;https://pc.watch.impress.co.jp/docs/column/nishikawa/1652152.html&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;プロセッサ&lt;/td&gt;
          &lt;td&gt;Intel N150(4コア4スレッド、クロック最大 3.6GHz、キャッシュ 6MB、TDP 最大25W)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;メモリ&lt;/td&gt;
          &lt;td&gt;16GB(SO-DIMM DDR4 3200MHz)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ストレージ&lt;/td&gt;
          &lt;td&gt;M.2 2280 SSD PCIe 3.0 500GB(PCIe 3.0 x4)、PCIe 3.0 x1(空き)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;グラフィックス&lt;/td&gt;
          &lt;td&gt;Intel UHD Graphics 24EU/HDMI 2.0(4K@60Hz) 2基&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ネットワーク&lt;/td&gt;
          &lt;td&gt;Gigabit Ethernet×2、Wi-Fi 6、Bluetooth 5.2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;インターフェイス&lt;/td&gt;
          &lt;td&gt;USB 3.2 Gen 2 3基、USB 3.2 Gen 2 Type-C、USB 2.0、3.5mmジャック&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;サイズ/重量&lt;/td&gt;
          &lt;td&gt;126×126×39mm、490g&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://pc.watch.impress.co.jp/docs/column/nishikawa/1652152.html&#34;&gt;【西川和久の不定期コラム】邪魔なACアダプタがなくなった！？Twin LakeのIntel N150搭載ミニPC「Beelink EQ14」 - PC Watch&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これで Windws 11 Pro がバンドルされてて26K円ちょっとで Amazon で売っていた。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0DNS713WK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31NZlH87UTL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0DNS713WK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Beelink EQ14 ミニPC、Intel Twin Lake N150 ミニゲーミング PC、16GB DDR4 500G SSD ミニコンピューター (4C/4T、最大 3.6 GHz) WiFi 6、Bluetooth 5.2、2*LAN、2*HDMI サポート 4K@60Hz、USB3.2、WOL&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Beelink&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B0DNS713WK (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついカッとなってポチった。 Intel &lt;a href=&#34;https://www.intel.co.jp/content/www/jp/ja/products/sku/241636/intel-processor-n150-6m-cache-up-to-3-60-ghz/specifications.html&#34;&gt;N150&lt;/a&gt; プロセッサ搭載，メモリ16GB，ストレージ500GB。 Windows 11 Pro がバンドルされて26K円。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2025-01-08&#34;&gt;2025-01-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Mini PC ミニPC N150 Beelink EQ14 Win11pro --&gt;
&lt;p&gt;すンごいハイスペックというわけではないけど，これ採算とれてるの？
いや，中国メーカーだし赤字覚悟な値段なわけないか？ ミニPCの相場を知らないので適正価格が分からない。
まぁ，ヤバそうなら潰して Linux 機にするか（笑）&lt;/p&gt;
&lt;p&gt;以前 &lt;a href=&#34;https://text.baldanders.info/remark/2021/12/azure-virtual-desktop-2/&#34; title=&#34;Azure Virtual Desktop で遊ぶ&#34;&gt;Azure Virtual Desktop で遊&lt;/a&gt;んだんだけど，継続的に使おうとするとランニングコストが馬鹿にならなくて。
ホビーで利用するには割に合わないと感じて削除したんだよね。
今回買ったミニPCなら Windows 環境下の動作検証用として必要十分かな，って感じ。&lt;/p&gt;
&lt;p&gt;電源ケーブルと HDMI ケーブルは付属してるけど（当然ながら）モニタやキーボード・マウスや LAN ケーブル（必要なら）は自前で用意する必要がある。
昨年，衝動で&lt;a href=&#34;https://text.baldanders.info/remark/2024/11/mechanical-keyboard/&#34; title=&#34;はじめてのメカニカルキーボード&#34;&gt;メカニカルキーボードを買った&lt;/a&gt;ときに，余ったキーボードを捨てずに取っておいてよかったよ。&lt;/p&gt;
&lt;p&gt;セットアップは滞りなく。
でも，せっかく省スペースのミニPCを買ったんだから，直にモニタやキーボード等を繋げるんじゃなくリモートデスクトップで Ubuntu 機からアクセスできないかな？ と思ったら Ubuntu デスクトップに標準で入ってる Remmina を使えばいいらしい。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./remmina-setup-1.png&#34;&gt;&lt;img src=&#34;./remmina-setup-1.png&#34; srcset=&#34;./remmina-setup-1.png 877w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Remote Connection Profile (1)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./remmina-setup-1.png&#34;&gt;Remote Connection Profile (1)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;中途半端に日本語化されているが（日本語化作業有難うございます）これで問題なく接続できた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./remote-desktop.png&#34;&gt;&lt;img src=&#34;./remote-desktop.png&#34; srcset=&#34;./remote-desktop.png 1920w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;リモートデスクトップ on Ubuntu デスクトップ&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./remote-desktop.png&#34;&gt;リモートデスクトップ on Ubuntu デスクトップ&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;（標準のブラウザを Firefox に入れ替えている）&lt;/p&gt;
&lt;p&gt;クリップボードの共有も問題なくできてるし，音声もリモートオーディオで問題なく鳴っている。
よーし，うむうむ，よーし。&lt;/p&gt;
&lt;p&gt;ちなみに上図はリモートデスクトップを最高品質で表示している。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./remmina-setup-2.png&#34;&gt;&lt;img src=&#34;./remmina-setup-2.png&#34; srcset=&#34;./remmina-setup-2.png 877w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Remote Connection Profile (2)&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./remmina-setup-2.png&#34;&gt;Remote Connection Profile (2)&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最高品質より下だと画像が間引きされて大昔のファミコンゲームの画面みたいになった（笑）&lt;/p&gt;
&lt;p&gt;これで準備完了。
ミニPC本体はデスクサイドラックに追いやって机上スッキリ。
これから Windows を私好みにカスタマイズするかね。
まずは &lt;a href=&#34;https://scoop.sh/&#34; title=&#34;Scoop&#34;&gt;Scoop&lt;/a&gt; 入れて Windows Terminal のシェルを &lt;a href=&#34;https://github.com/nyaosorg/nyagos&#34; title=&#34;nyaosorg/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; に換装するところからかな。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.milkmemo.com/entry/remote_desktop_ubuntu_win&#34;&gt;【Ubuntu】UbuntuからWindowsをリモートデスクトップで操作する - Milkのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gihyo.jp/admin/serial/01/ubuntu-recipe/0661&#34;&gt;第661回　リモートデスクトップビューアー、Remminaを使用する | gihyo.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07KXCJ8Q1?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31VV4mOd-sL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07KXCJ8Q1?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;サンワダイレクト デスクサイドラック 幅60×奥行35×高さ110cm キッチンワゴン マルチラック ライトブラウン 100-DESKF013LBR&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;サンワダイレクト&lt;/dd&gt;
    &lt;dd&gt;&lt;/dd&gt;
    &lt;dd&gt;B07KXCJ8Q1 (ASIN), 4969887636695 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;在宅勤務のため机上を整理するために購入。&lt;a href=&#34;https://www.amazon.co.jp/dp/B0757M9DJ6?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&#34;&gt;机&lt;/a&gt;と色を合わせた。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-27&#34;&gt;2022-12-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- デスクサイドラック --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B089GN1VKY?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31aSTGE-heL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B089GN1VKY?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;BUFFALO Giga対応 金属筐体 電源内蔵 8ポート LSW6-GT-8NS/NBK ブラック スイッチングハブ 簡易パッケージ マグネット 壁掛け設置対応&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;バッファロー (Release 2020-06-13)&lt;/dd&gt;
    &lt;dd&gt;その他&lt;/dd&gt;
    &lt;dd&gt;B089GN1VKY (ASIN), 4981254056769 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;在宅勤務でパソコンが増えるためポートが足りなくなった。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-27&#34;&gt;2022-12-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- BUFFALO 8ポート スイッチングハブ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B087745J5B?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/315TtRYTRJL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B087745J5B?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;エレコム 電源タップ 雷ガード 10個口 ほこりシャッター付 固定&amp;amp;吊下可能な回転パーツ付き 1m ブラック ECT-0101BK&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;エレコム (Release 2020-05-20)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B087745J5B (ASIN), 4549550162593 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;電源コンセントの数が足りなくなったので。この手の雷ガードでは，建物直撃だとあまり効果はないらしいけど，神社のお守りみたいなものだと思えば（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-06-13&#34;&gt;2021-06-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 電源タップ --&gt;
</content>
	</entry><entry>
		<title>「うるう秒は時代遅れ？」</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2025/01/should-we-abandon-the-leap-second/" />
		<id>tag:text.Baldanders.info,2025-01-04:/remark/2025/01/should-we-abandon-the-leap-second/</id>
		<published>2025-01-04T13:31:23+00:00</published>
		<updated>2025-01-05T03:04:59+00:00</updated>
		<summary>「日経サイエンス」2025年2月特大号より</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0D47FY7Q3?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;日経サイエンス2025年2月特大号 [雑誌] | 日経サイエンス | 趣味・その他 | Kindleストア | Amazon&#34;&gt;「日経サイエンス」2025年2月号&lt;/a&gt;の Kindle 版が出てたのでポチって読む。
これって紙版と同時にリリースしてくれないのかなぁ。
私はお金を出して資源ゴミを買う趣味はないので，紙の雑誌はなるべく買いたくないのよ。&lt;/p&gt;
&lt;p&gt;特集記事以外では「&lt;a href=&#34;https://www.nikkei-science.com/202502_100.html&#34; title=&#34;うるう秒は時流遅れ？ | 日経サイエンス&#34;&gt;うるう秒は時代遅れ？&lt;/a&gt;」が面白かった。
挿し絵を含めて4ページほどの短い記事。&lt;/p&gt;
&lt;p&gt;念のために説明すると私達が日常で使っている時刻系には大きく恒星時系と原子時系の2つがある。
恒星時系は UT (universal time; 世界時) に代表される地球の自転を基準にした時刻系で原子時系は TAI (international atomic time; 国際原子時) に代表される原子時計（SI秒）を基準にした時刻系である。
恒星時系は地球上の日周運動とリンクしているため日常生活にマッチしているが，一定の時間を刻まず，また観測値であるため未来時刻の予測ができない。
原子時系は一定の時間を刻む&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; が恒星時系との乖離が発生する。&lt;/p&gt;
&lt;p&gt;UT と TAI とのギャップを埋めるために考えられたのが UTC (coordinated universal time; 協定世界時) である。
現在の UTC は原子時系の一種で1972年1月1日から TAI と10秒差で開始された&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
以後 UTC は TAI との差が整数秒かつ UT1&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; との差が0.9秒より大きくならないよう適宜調整されている（$|UT1-UTC| \leq 0.9^\,\mathrm{sec}$）。
この時刻調整が閏秒。
閏秒の予測はできないが，挿入または差し引かれる半年前にはアナウンスがある。&lt;/p&gt;
&lt;p&gt;実は&lt;a href=&#34;https://text.baldanders.info/remark/2016/11/leap-second-2017/&#34; title=&#34;2017年直前の閏秒について&#34;&gt;2017年直前の閏秒挿入&lt;/a&gt;以来，閏秒は発生していない。
&lt;a href=&#34;https://www.nikkei-science.com/202502_100.html&#34; title=&#34;うるう秒は時流遅れ？ | 日経サイエンス&#34;&gt;件の記事&lt;/a&gt;によると2029年までは発生しないだろうと試算されて，しかもこのときは1秒が差し引かれる閏秒になるんだそうな。&lt;/p&gt;
&lt;p&gt;地球の自転は潮汐摩擦により遅くなっていく傾向にあるが（恐竜が生きてた時代は1日が23.5時間ほどだったとか），1990年頃から逆に加速しているらしい。
加速している理由は地球温暖化により極地で地殻を押さえつけていた氷が融けて地球の形状が（より球に近く）変わったせいなんだとか。
でもこれは一時的なもので，融解した水が赤道付近に集まれば再び自転速度は遅くなるそうな。&lt;/p&gt;
&lt;p&gt;UTC が開始された頃は閏秒のインパクトはそれほど大きくなかった。
しかしコンピュータ・ネットワークが発達し，更にチップの処理単位もマイクロ秒あるいはナノ秒といった桁で処理されるようになり，閏秒のインパクトが馬鹿にならなくなってきた。
特に2012年の閏秒では実際にあちこちのサービスで不具合が発生し大騒ぎになった。
今や閏秒は可用性リスク要因となっているのだ。
これにより「ホンマに閏秒って要るの？」という議論がされるようになった。&lt;/p&gt;
&lt;p&gt;仮に閏秒を入れずに UT とのギャップをスルーしたとしても100年で1分程度の差にしかならないらしい。
それなら100年ごとに閏分を入れるとか，いっそ時刻調整なんか止めちまえとかいった主張が出るのも無理からぬ話である。&lt;/p&gt;
&lt;p&gt;そこで2022年の国際度量衡総会で閏秒の調整を2035年まで行わないことに決めたんだそうな（廃止ではない）。
それまでにどういうルールで調整するのか決めるということで，ぶっちゃけ問題の先送りである（笑）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nikkei-science.com/202502_100.html&#34; title=&#34;うるう秒は時流遅れ？ | 日経サイエンス&#34;&gt;件の記事&lt;/a&gt;にあるように時刻調整が20年ごととか100年ごとになるのか，それとも廃止になるのかは分からない。
たぶん100年後って今のようなコンピュータは存在しないんじゃないのかな？ それならいっそ閏秒なんか止めちまえば？ とか最近は思うようになった。
だって閏秒のたびに不具合が起きないよう起きても即座に対処できるよう大量の人員を配置するんだぜ。
費用対効果の観点からも無駄の極みだよな（こういうのこそ AI が肩代わりしてくれないものだろうか）。&lt;/p&gt;
&lt;p&gt;さて，どうなるやら。&lt;/p&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0D47FY7Q3?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/514G8lxv3GL._SL160_.jpg&#34; width=&#34;120&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0D47FY7Q3?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;日経サイエンス2025年2月特大号 [雑誌]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;日経サイエンス (編集)&lt;/dd&gt;
    &lt;dd&gt;日経サイエンス 2024-12-25 (Release 2024-12-25)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0D47FY7Q3 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;固定レイアウトなので&lt;a href=&#34;https://read.amazon.co.jp/&#34;&gt;ブラウザ&lt;/a&gt;で読める。この巻の特集は「科学者に迫る人工知能」と「めざすは月」。あと閏秒の小さな記事が面白かった。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2025-01-04&#34;&gt;2025-01-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 「日経サイエンス」2025年2月号 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4416723660?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/317XDfcuC0L._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4416723660?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;天文年鑑 2025年版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;天文年鑑編集委員会 (編集)&lt;/dd&gt;
    &lt;dd&gt;誠文堂新光社 2024-12-05 (Release 2024-12-05)&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4416723660 (ASIN), 9784416723661 (EAN), 4416723660 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;天文ファン必携。2025年版。これが届くと年末って感じ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-12-05&#34;&gt;2024-12-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 天文年鑑 2025年版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621304259?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51bBPM6dbwL._SL160_.jpg&#34; width=&#34;114&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621304259?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;理科年表 2020&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;国立天文台 (編集)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2019-11-20&lt;/dd&gt;
    &lt;dd&gt;文庫&lt;/dd&gt;
    &lt;dd&gt;4621304259 (ASIN), 9784621304259 (EAN), 4621304259 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;日本における令和への改元や国際単位系（SI）の定義改定などに関するトピックを多く掲載。2020年版は（保存用として）買いかも。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-12-08&#34;&gt;2019-12-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 理科年表 2020 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;厳密には相対論効果があるため（観測者との位置関係によっては）一定ではない。相対論効果を考慮した時刻系を座標時系と呼ぶ。座標時系は天文学の厳密な力学計算で用いられる。また原子時系のひとつである TAI は，実は座標時系の一種として再定義されている。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;1972年より前にも UTC は存在したが，現在とは異なるルール（1秒の長さを意図的に変える）で運用されていた。これが破綻したため現在の UTC になった。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;簡単に言うと &lt;a href=&#34;https://www.gsi.go.jp/uchusokuchi/vlbi-about.html&#34; title=&#34;VLBIとは | 国土地理院&#34;&gt;VLBI (Very Long Baseline Interferometry; 超長基線電波干渉法)&lt;/a&gt; などを使った観測により求められた生の値が UT0。そこから地球自転軸の極運動等の効果（これも観測により求める）を差し引いたものが UT1 である。さらにそこから年間の自転速度の進み遅れを調整した UT2 もあるのだが，現在 UT2 は運用されていない？&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>書きたくないときには書かなくていい</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/12/input-output/" />
		<id>tag:text.Baldanders.info,2024-12-28:/remark/2024/12/input-output/</id>
		<published>2024-12-28T08:39:01+00:00</published>
		<updated>2024-12-29T13:21:24+00:00</updated>
		<summary>大事なのは好奇心を錆びつかせないこと</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;皆さま，年末をいかがお過ごしでしょうか。
勤務先は&lt;a href=&#34;https://text.baldanders.info/remark/2023/12/bonenkai/&#34; title=&#34;はじめての一泊忘年会&#34;&gt;昨年&lt;/a&gt;と同じく温泉旅館で一泊忘年会を行いましたよ。
ただし今年は皆生温泉へ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54229882215/&#34;&gt;&lt;img src=&#34;./54229882215_3c32d3255e_e.jpg&#34; srcset=&#34;./54229882215_3c32d3255e_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;皆生温泉上がりのコーヒー牛乳（白バラ） | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54229882215/&#34;&gt;皆生温泉上がりのコーヒー牛乳（白バラ） | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54229724428/&#34;&gt;&lt;img src=&#34;./54229724428_5a643384fe_e.jpg&#34; srcset=&#34;./54229724428_5a643384fe_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;宴会場 机と椅子助かる | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54229724428/&#34;&gt;宴会場 机と椅子助かる | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;今回は Bluesky で見かけた記事をネタに戯れ言を書いてみる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/moroi/items/e39fb42172bfe2d4d209&#34;&gt;なぜ俺たち中年はアウトプットできなくなったのか #ポエム - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bookplus.nikkei.com/atcl/column/121100449/121100003/&#34;&gt;「本を読んでいれば、教養が身に付く」は勘違い　本物の教養とは | 日経BOOKプラス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「俺たち」ゆーな（笑） ぶっちゃけ「時間」はつくるものだし。
以上！&lt;/p&gt;
&lt;p&gt;&amp;hellip;では面白くないので続きを。&lt;/p&gt;
&lt;p&gt;この辺の記事を読んでて思い出したのは『&lt;a href=&#34;https://www.amazon.co.jp/dp/4621303252?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Effective Java&lt;/a&gt;』や『&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;』の翻訳でおなじみ柴田芳樹さんが挙げておられる以下のイメージ図だ（グラフっぽいけど定量評価ではない）。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39; cite=&#34;https://yshibata.blog.ss-blog.jp/2010-01-27&#34;&gt;
&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2010-01-27&#34;&gt;&lt;img src=&#34;https://yshibata.c.blog.ss-blog.jp/_images/blog/_d3f/yshibata/E68890E995B7E382ABE383BCE38396.JPG&#34; srcset=&#34;https://yshibata.c.blog.ss-blog.jp/_images/blog/_d3f/yshibata/E68890E995B7E382ABE383BCE38396.JPG 1057w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ソフトウェアエンジニアの成長カーブ（２）：柴田 芳樹 (Yoshiki Shibata)：SSブログ&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2010-01-27&#34;&gt;ソフトウェアエンジニアの成長カーブ（２）：柴田 芳樹 (Yoshiki Shibata)：SSブログ&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この図について教えてもらったのは，とある読書会の雑談でだったが，その時の話がこんな感じだった。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;/remark/2022/12/09-san-in/&#34;&gt;&lt;p&gt;この図が示すのは，会社から与えられている仕事に慣れて自律的に「学ぶ」ことを止めてしまうと，手持ちのスキルは（時代の流れで）先細りし，さらに学習習慣が失われることにより新たな技術・スキルを得る機会を逸してしまうため，全体としてスキルレベルが低下してしまう，というものです。&lt;/p&gt;
&lt;p&gt;特に日本企業は従業員の「今」のスキルレベルに合わせて「できそうな仕事」を見繕って割り振る傾向があり，所属部署から与えられる仕事をこなすことに満足しているとあっという間にスキルが先細りしてしまう，というような話を読書会でもしていました。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/12/09-san-in/&#34;&gt;松江に出戻り5度目の冬（Advent Calendar）&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ちなみに縦軸の「&lt;a href=&#34;http://yshibata.blog.so-net.ne.jp/2010-01-11&#34; title=&#34;技術者のレベルとソフトウェア開発の難易度（２）&#34;&gt;ソフトウェア・スキル・インデックス&lt;/a&gt;」については『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CCY7VJ4C?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラマー“まだまだ”現役続行&lt;/a&gt;』に詳しく書かれているので是非ご一読を&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;自身の話で恐縮だが，私は思考が言語的じゃないのよ。
だから「文章を書く」というのは思考を言語に翻訳する作業なのだ（ブログ記事は意図的に文体を崩して書いてるけど&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;）。
と同時にインプットした（と思ってる）ことを振り返る機会でもある。
これはプログラミングでも同じ。
思考を言語化することで理解の解像度が上がるし，見落としてたことにも気付ける。&lt;/p&gt;
&lt;p&gt;最初に挙げたイメージ図にもある通り，エンジニアの学習・勉強は現役でいるかぎり続くものだけど，続けるための最大のモチベーションは「それ」を楽しめるか否かだと思う。
ただ（仕事はともかく）個人の趣味・興味・関心は歳を重ねるごとに移り変わって当たり前である。
なのにアウトプットは若い頃と同じなんてありえない。&lt;/p&gt;
&lt;p&gt;大事なのは好奇心を錆びつかせないことなので，一時的にアウトプットを止めてインプットに専念していいと思うし疲れたならインプットも休んでいいと思う。
まぁ，休むのなら期限を切ったほうがいいだろうけど。&lt;/p&gt;
&lt;p&gt;私なんて今年このブログで書いた Go 関連の記事は&lt;a href=&#34;https://text.baldanders.info/golang/pseudo-random-number-generator-v2/&#34; title=&#34;Go 1.22 における疑似乱数生成器&#34;&gt;一本&lt;/a&gt;だけだぜ。
年間の記事数はそう変わらないと思うけど。
松江に &lt;ruby&gt;&lt;rb&gt;帰郷&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;かえ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;って自転車を再開して明らかに趣味が変わったもんな（笑）&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学&lt;/a&gt;』にも書いてあるぢゃん。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;年齢に関わらず、遊びは私たちの精神を鋭敏に保つために重要です。 [&amp;hellip;] 遊ぶことは学ぶことです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4571210450?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『はじめて学ぶ ビデオゲームの心理学』 p.71&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;って。&lt;/p&gt;
&lt;p&gt;来年は『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0DNYMMBBQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語で学ぶ並行プログラミング&lt;/a&gt;』の&lt;a href=&#34;https://technical-book-reading-2.connpass.com/event/337562/&#34; title=&#34;第1回『Go言語で学ぶ並行プログラミング』オンライン読書会 - connpass&#34;&gt;読書会&lt;/a&gt;が始まるし CVSSv4 の実装もいい加減始めないとなぁ&amp;hellip;&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621303252?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41WZElZb9eL._SL160_.jpg&#34; width=&#34;128&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621303252?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Effective Java 第3版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Joshua Bloch (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2018-10-30&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-03-17&#34;&gt;2021-03-17&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Effective Java 第3版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CCY7VJ4C?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51mZrPkoejL._SL160_.jpg&#34; width=&#34;109&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0CCY7VJ4C?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラマー&amp;#34;まだまだ&amp;#34;現役続行 技評SE選書&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;柴田 芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2023-08-01 (Release 2023-08-01)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0CCY7VJ4C (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;初版は2006年。当時は「プログラマ35歳定年説」とか言われてた頃で，仕事でも「私はコード読めないので」とか平気で言う SE がいたりした。この本はそういう風潮に対するアンチテーゼになっていたわけだ。ただし中身は今でも十分通用すると思う。奇抜な内容ではないが，こういうのは継続することが重要だからなぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-08-01&#34;&gt;2023-08-01&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラマー&#34;まだまだ&#34;現役続行 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41LvknHYLwL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0C9Z7KGRN?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX）&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;セリア ホデント (著), 山根 信二（監修） (著), 山根 信二 (翻訳), 成田 啓行 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;福村出版 2022-12-15 (Release 2023-07-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0C9Z7KGRN (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版が出ている。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-11-21&#34;&gt;2023-11-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- はじめて学ぶ ビデオゲームの心理学 Kindle 版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0DNYMMBBQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51wZEHUKZiL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0DNYMMBBQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語で学ぶ並行プログラミング　他言語にも適用できる原則とベストプラクティス impress top gearシリーズ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;James Cutajar (著), 柴田 芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;インプレス 2024-12-04 (Release 2024-12-04)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0DNYMMBBQ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;とりあえず&lt;a href=&#34;https://technical-book-reading-2.connpass.com/event/337562/&#34;&gt;読書会&lt;/a&gt;のために購入。版元で &lt;a href=&#34;https://book.impress.co.jp/books/1123101144&#34;&gt;PDF 版&lt;/a&gt;が買える。サンプルコードは Go で書かれているが，原理的な解説が充実していて Go 以外の言語でも応用できる。
&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-12-15&#34;&gt;2024-12-15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Go言語で学ぶ並行プログラミング --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CCY7VJ4C?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラマー“まだまだ”現役続行&lt;/a&gt;』が最初に出たのは2006年。当時は「プログラマ35歳定年説」とか言われてた頃で，仕事でも「私はコード読めないので」とか平気で言う SE がいたりした。この本はそういう風潮に対するアンチテーゼになっていたわけだ。ただし中身は今でも十分通用すると思う。奇抜な内容ではないが，こういうのは継続することが重要だからなぁ。ちなみに著者の柴田芳樹さんは既に&lt;a href=&#34;https://note.com/yoshiki_shibata/n/n86d730f758e5&#34; title=&#34;65歳になりました｜柴田 芳樹&#34;&gt;65歳&lt;/a&gt;とのことだが，今も「&lt;a href=&#34;https://note.com/yoshiki_shibata/n/n1489871a51ac&#34; title=&#34;カウシェでのAPI仕様整備と効率的なバックエンド開発の実現｜柴田 芳樹&#34;&gt;現役&lt;/a&gt;」だそうだ。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;かっちりした文章は仕事でアホほど書いてるし。仕事以外で真面目な文章なんて書きたくない。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>「ミリしら」で KeebWorld Conference 2024 へ行ってみた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/12/keebworld-conference-2024/" />
		<id>tag:text.Baldanders.info,2024-12-07:/remark/2024/12/keebworld-conference-2024/</id>
		<published>2024-12-07T14:27:29+00:00</published>
		<updated>2024-12-08T00:06:25+00:00</updated>
		<summary>ただ聴きに来ただけという感じになってしまった。発表に対して何を質問していいのかすら分からん</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;「ミリしら」で KeebWorld Conference 2024 へ行ってみた&lt;/h2&gt;
&lt;p&gt;最初に予防線を張っておくと，私は自作キーボードとか全く知らないのよ。
そりゃ，そういうことをする人たちがいるのは知ってるよ。
でも，それだけ。
でもまぁ，せっかく松江でやるってのなら見てみたいし，そもそも技術系のオフラインイベントが「コロナ」以降では初参加なので&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，リハビリにはなるかなぁと（笑）&lt;/p&gt;
&lt;p&gt;毎年松江市内で RubyWorld Conference が開かれるが，今年はその流れで&lt;a href=&#34;https://2024.rubyworld-conf.org/&#34; title=&#34;RubyWorld Conference 2024&#34;&gt;カンファレンス&lt;/a&gt;の翌日の今日に開催された。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://keebkaigi.org/2024/&#34;&gt;KeebWorld Conference 2024 松江&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さっそく松江駅前の&lt;a href=&#34;https://team-place.com/space/494&#34; title=&#34;松江オープンソースラボ | TeamPlace - 「人でつながる」ワークプレイスプラットフォーム&#34;&gt;オープンソースラボ&lt;/a&gt;まで出かける。
自転車は&lt;a href=&#34;https://text.baldanders.info/remark/2024/12/overhaul/#overhaul&#34; title=&#34;自転車をオーバーホールに出した&#34;&gt;オーバーホール&lt;/a&gt;に出してるので公共交通機関で。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188441314/&#34;&gt;&lt;img src=&#34;./54188441314_fa8148d34e_e.jpg&#34; srcset=&#34;./54188441314_fa8148d34e_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日の会場 カルト？が煩い | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188441314/&#34;&gt;今日の会場 カルト？が煩い | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;いや，なんか，なんかワクチンがどうたらとか叫ぶカルト集団？ がビルの前に居たので，大回りの遠巻きにしながら入っていった。
マジ迷惑。
病院前も迷惑だろうし，休日にやるならお役所前でやってくれ。&lt;/p&gt;
&lt;p&gt;開始10分前に入ったのだが，既にほぼ満席状態だった。
&lt;a href=&#34;https://2024.rubyworld-conf.org/&#34; title=&#34;RubyWorld Conference 2024&#34;&gt;RubyWorld Conference&lt;/a&gt; からの流れとはいえ，結構ビックリした。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188425748/&#34;&gt;&lt;img src=&#34;./54188425748_05f83ef656_e.jpg&#34; srcset=&#34;./54188425748_05f83ef656_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;KeebWorld Conference 2024 (聴衆モード) | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188425748/&#34;&gt;KeebWorld Conference 2024 (聴衆モード) | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最初に述べたように自作キーボードに関しては本当に「ミリしら」状態なので，ただ聴きに来ただけという感じになってしまった。
発表に対して何を質問していいのかすら分からん（笑）&lt;/p&gt;
&lt;p&gt;例えば，なんで &lt;a href=&#34;https://2024.rubyworld-conf.org/&#34; title=&#34;RubyWorld Conference 2024&#34;&gt;RubyWorld Conference&lt;/a&gt; の流れでこれを開催するのか，今回の一連の発表でようやく分かった。
どうやら Ruby 製の &lt;a href=&#34;https://github.com/picoruby/prk_firmware&#34; title=&#34;picoruby/prk_firmware: A keyboard firmware platform in PicoRuby&#34;&gt;picoruby/prk_firmware&lt;/a&gt; というファームウェア環境があって，それを使って自作キーボードをカスタマイズするってのが Ruby コミュニティ内で随分前から流行ってるらしい。
そういう基本的なことも知らないレベルな私である&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;以下は覚え書で（全ての発表を網羅しているわけではないのはご容赦）：&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;Have fun why not&lt;/a&gt; by &lt;a href=&#34;https://yhara.jp/&#34;&gt;原悠&lt;/a&gt; (&lt;a href=&#34;https://x.com/yhara&#34;&gt;@yhara&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;自作キーボードについてのガイダンス的な発表。
助かる。
60%とか40%とか30%とかいうキーボードの分類の仕方を初めて知った（たとえば有名な &lt;a href=&#34;https://happyhackingkb.com/&#34; title=&#34;Happy Hacking Keyboard Microsite | PFU&#34;&gt;HHKB&lt;/a&gt; は60%）。
特に面白かったのは，キーボードの話にはあまり関係ないが&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39; cite=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;
&lt;a href=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;&lt;img src=&#34;./have-fun-why-not.png&#34; srcset=&#34;./have-fun-why-not.png 1263w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Have fun why not&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;Have fun why not&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;プログラミング言語を包丁に喩えて，普通は切れ味や軽さや丈夫さといった点で評価するが Ruby は「持ち手がすべすべだと嬉しいよね」的な評価になりがちってのがめがっさウケた。&lt;/p&gt;
&lt;p&gt;考えてみれば &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 言語も（Ruby とはある意味真逆なのに）似たようなもんだと思ったり。&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://github.com/kurod1492/keebworldconf-2024/blob/main/slide.md&#34;&gt;キーボードからロボットへ&lt;/a&gt; by &lt;a href=&#34;https://qiita.com/kurod1492&#34;&gt;Akihiro Kurotani&lt;/a&gt; (&lt;a href=&#34;https://x.com/kurod1492&#34;&gt;@kurod1492&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;次に紹介する発表に絡むが，ファームウェアのカスタマイズ（書き換え）が容易という話は興味深かった。&lt;/p&gt;
&lt;p&gt;自作キーボードと関係ないが，来年 2024-01-12 に&lt;a href=&#34;https://www.matsue-terrsa.jp/&#34; title=&#34;松江テルサ&#34;&gt;松江テルサ&lt;/a&gt;で「&lt;a href=&#34;https://www.shimane-oss.org/kani-robo/&#34; title=&#34;Matz葉がにロボコン|かにロボ連盟 ご当地こども向けプログラミングコンテスト&#34;&gt;Matz葉がにロボコン&lt;/a&gt;」ってのが開催されるらしい。
でも関係者以外の見学は無理そう？&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://speakerdeck.com/sylph01/actual-security-in-microcontroller-ruby&#34;&gt;&amp;ldquo;Actual&amp;rdquo; Security in Microcontroller Ruby!?&lt;/a&gt; by &lt;a href=&#34;https://s01.ninja/&#34;&gt;sylph01&lt;/a&gt; (&lt;a href=&#34;https://x.com/s01&#34;&gt;@s01&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;自作キーボードの制御に使われている &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-pico/&#34; title=&#34;Buy a Raspberry Pi Pico – Raspberry Pi&#34;&gt;Raspberry Pi Pico&lt;/a&gt; および &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-pico-2/&#34; title=&#34;Buy a Raspberry Pi Pico 2 – Raspberry Pi&#34;&gt;Raspberry Pi Pico 2&lt;/a&gt; では WiFi 接続ができるそうな。
しかもファームウェアである &lt;a href=&#34;https://github.com/picoruby/prk_firmware&#34; title=&#34;picoruby/prk_firmware: A keyboard firmware platform in PicoRuby&#34;&gt;picoruby/prk_firmware&lt;/a&gt; も WiFi 制御に対応してるんだと。
さらに &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-pico-2/&#34; title=&#34;Buy a Raspberry Pi Pico 2 – Raspberry Pi&#34;&gt;Raspberry Pi Pico 2&lt;/a&gt; のほうは SRAM がほぼ倍（520MB）になったそうで，単純な制御ではなくもっと色々なことができるようになったわけだ。
さらにさらに前節にあるようにファームウェアの書き換えは容易という話（スクリプトキディには無理かもしれないが）。&lt;/p&gt;
&lt;p&gt;これで何が起きるかというと，自作キーボード経由で不正アクセスがしやすくなるということだ。
これを防ぐのが Secure Boot や Encryptd Boot らしい。&lt;/p&gt;
&lt;p&gt;まぁ，キーボードを PC (Programmable Controller) として構成すれば当然そうなるよな。
面白い！&lt;/p&gt;
&lt;h3&gt;わたしのキーボード by &lt;a href=&#34;https://matz.rubyist.net/&#34;&gt;まつもとゆきひろ&lt;/a&gt; (&lt;a href=&#34;https://x.com/yukihiro_matz&#34;&gt;@yukihiro_matz&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;スライドの公開はないのかな。
うろ覚えですまん。&lt;/p&gt;
&lt;p&gt;欲しいキーボードのスペックは決まってるけど，完成品でも自作（金に飽せて作ってもらったらしい）でも満足するものがなくて，キーボードを買いまくってる話が面白かった。
カンファレンスのあと（私は参加してないが）使わなくなったキーボードを放出したそうな。&lt;/p&gt;
&lt;p&gt;キーレイアウトは日本語キーボードが欲しいんだけどマッピングは US 配列がいいらしい。
理由は US キーボードはキーの数が少ないから。&lt;/p&gt;
&lt;p&gt;さらにファンクションキーは独立したものが欲しいらしい。
これに関しては同意する。
ファンクションキーは結構使うし，コンビネーション・キーと組み合わせたキーアサインは少ないほうがいいと私も思う。&lt;/p&gt;
&lt;h3&gt;30%キーボード発想法 by &lt;a href=&#34;https://scrapbox.io/self-made-kbds-ja/minamo&#34;&gt;みなも♨️30%&lt;/a&gt; (&lt;a href=&#34;https://x.com/X___MOON___X&#34;&gt;@X___MOON___X&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;これもスライドの公開はないのかな。
うろ覚えですまん。&lt;/p&gt;
&lt;p&gt;最初に紹介した発表から引用するが，30%キーボードってのは概ね以下のようなキーで構成されているキーボードらしい。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39; cite=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;
&lt;a href=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;&lt;img src=&#34;./have-fun-why-not-2.png&#34; srcset=&#34;./have-fun-why-not-2.png 1230w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Have fun why not&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XPRzvgzHdGFtaawGHmVlssijzvD40zISW7wQGv3uf8o/edit?usp=sharing&#34;&gt;Have fun why not&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;たとえば60%だとキーの配列の自由度がなくなって，どれも似たようなレイアウトになるらしい。
せいぜい分割にするとかかな。
キーの数を極端に減らすことでタイプライタ由来のレイアウトの軛から外れ自由な設計ができる，という話が興味深かった。&lt;/p&gt;
&lt;h2&gt;感想&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://keebkaigi.org/2024/&#34; title=&#34;KeebWorld Conference 2024 松江&#34;&gt;カンファレンス&lt;/a&gt;では自作キーボードも色々展示されていたが，あまり見てない。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188541799/&#34;&gt;&lt;img src=&#34;./54188541799_2b0851cf6c_e.jpg&#34; srcset=&#34;./54188541799_2b0851cf6c_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;KeebWorld Conference 2024 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188541799/&#34;&gt;KeebWorld Conference 2024 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;やっぱ分割は基本なんだな。
まぁ分割しないでファームウェアのカスタマイズも要らないならメーカーから完成品を買えばいいだろうし。&lt;/p&gt;
&lt;p&gt;私は若い頃にガチの VT 端末で「現地調整」させられてたことがあって US キー配列でも日本語キー配列でもどっちでもいけるのよ。
でも60%キーボードは当時のトラウマがフラッシュバックするので使いたくない（あと vi/vim もトラウマがフラッシュバックするw）。
それに「わたしのキーボード」でも言及されていたが，コンビネーション・キーと組み合わせたキーアサインは少ないほうがいい。
そもそもメカニカルキーボード自体を使い出したのが&lt;a href=&#34;https://text.baldanders.info/remark/2024/11/mechanical-keyboard/&#34; title=&#34;はじめてのメカニカルキーボード&#34;&gt;ごく最近&lt;/a&gt;なんだよな。&lt;/p&gt;
&lt;p&gt;あと手先が不器用なのでハンダ付けとかも駄目。
私の場合，パーツ数の少ないガンプラを組み立てるくらいが限界である。
母親は手先が器用でハンダ付けも得意なのに，その辺は遺伝してくれなかったようだ（不器用さは親父似）。
もしやるなら金に飽せて得意な人にやってもらうって感じになるだろうか。&lt;/p&gt;
&lt;p&gt;まぁ，しばらくはキーボードには手を出すまいと思った。
ファームウェアをいじるのは面白そうだし「キーボードガチ勢でもないのに全部他人の仕事でごそごそやっていたら新聞に載ってしまった件 (by &lt;a href=&#34;https://github.com/HirohitoHigashi&#34;&gt;東裕人&lt;/a&gt;)」で紹介されているような特殊用途のキーボードとかなら興味あるけど&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;広島にいた頃から Ruby 案件には恵まれてなくて，仕事で全く使ったことがない。
仕事以外では C/C++ か Java か &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; で，今は &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 一辺倒なので，松江地元にいてこれでいいのか？ という気はチョットしている。
一方で，歳とってから Ruby かぁ，という気もしないではないが。&lt;/p&gt;
&lt;p&gt;あと Ruby コミュニティでは SNS は &lt;abbr class=&#34;emoji-chars&#34; title=&#34;X&#34;&gt;𝕏&lt;/abbr&gt; が主流なのかね。
Bluesky とかで見かけない感じ？ まぁ，今回の&lt;a href=&#34;https://keebkaigi.org/2024/&#34; title=&#34;KeebWorld Conference 2024 松江&#34;&gt;カンファレンス&lt;/a&gt;は Bluesky の TL で知ったんだけど。&lt;/p&gt;
&lt;p&gt;日本語圏のエンジニアは Bluesky であまり見かけない印象を受ける。
真面目に探してないせいかも知れないが。
Mastodon は他サーバのユーザは探しにくいので動向が分からない。&lt;/p&gt;
&lt;p&gt;今回はタイムテーブルをちゃんと見てなくて「日没までには帰ろう」とか呑気に考えてたら17時半過ぎまでみっちりだった。
逢魔時のバス停で帰りのバスを待っていたら号外が配られているのに気づく。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188796995/&#34;&gt;&lt;img src=&#34;./54188796995_09454faa67_e.jpg&#34; srcset=&#34;./54188796995_09454faa67_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;号外！ | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/54188796995/&#34;&gt;号外！ | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;おー。
いよいよか。
新聞記者さんに捕まってインタビューを求められたが断った。
私は数年前から政治的無関心を装う（特に政治的なポジショントークはしない）ことを年間目標にしてるので（ときどき胡乱なことを口走るのはご容赦），応えないほうがいいだろう（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/11/mechanical-keyboard/&#34;&gt;はじめてのメカニカルキーボード&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0CJT7S6D6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41UoRrBP69L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0CJT7S6D6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;エレコム メカニカルキーボード Leggero 有線 テンキーレス Nキーロールオーバー対応 5000万回高耐久スイッチ採用 赤軸 グレー TK-MC30UKLGY/EC&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;エレコム (Release 2023-10-25)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B0CJT7S6D6 (ASIN), 4549550275798 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;赤軸（リニア）で押下圧50g，ストローク4.0mm。個人的にはちょうどいい感じ。打鍵音が煩いがメカニカルだとこんなもんらしい。押下圧45gで静音タイプもあるらしいが10K円超える。有線だがキーボード直結ではなく USB-C ケーブルで接続できる（USB-C⇔USB-A ケーブル付属）。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-11-05&#34;&gt;2024-11-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- テンキーレス キーボード メカニカル --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;技術系以外のイベントならある。「&lt;a href=&#34;https://shimane-kodaibunka.jp/sympo/sympo-3424/&#34; title=&#34;島根の歴史文化講座　2024 | 島根県古代文化センター&#34;&gt;島根の歴史文化講座 2024&lt;/a&gt;」とか。これも今年に入ってからだけどさ。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;確か &lt;a href=&#34;https://tinygo.org/&#34; title=&#34;TinyGo&#34;&gt;TinyGo&lt;/a&gt; でキーボードのファームウェアを組むみたいな話も聞いたことがあるが，この辺の情報も全く知らない。いやぁ，組込み制御ソフトウェアに全くタッチしなくなって長いからなぁ&amp;hellip;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;特定用途というなら FPS (First-Person Shooter) とかでキーボード入力する人なら30%キーボードはむしろ需要があるかも？ ハードウェア要件が厳しいかもだけど。そういえば &lt;span class=&#34;box&#34;&gt; &lt;code&gt;Shift&lt;/code&gt; &lt;/span&gt; や &lt;span class=&#34;box&#34;&gt; &lt;code&gt;Ctrl&lt;/code&gt; &lt;/span&gt; といったコンビネーション・キーをフットペダルにアサインした製品を見かけたことがあるな。&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>『効率的な Go』読書会 2回目</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/05/efficient-go-2/" />
		<id>tag:text.Baldanders.info,2024-05-18:/remark/2024/05/efficient-go-2/</id>
		<published>2024-05-18T11:19:34+00:00</published>
		<updated>2024-08-23T08:21:01+00:00</updated>
		<summary>第2章だけ立ち読みするってのも手かも知れない。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今日は読書会の日。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yokohama-go-reading.connpass.com/event/317024/&#34;&gt;第59回横浜Go読書会（オンライン） - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というわけで，&lt;a href=&#34;https://text.baldanders.info/remark/2024/04/efficient-go-1/&#34;&gt;前回&lt;/a&gt;に引き続き『&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;効率的なGo ―データ指向によるGoアプリケーションの性能最適化 | Bartłomiej Płotka, 山口 能迪 |本 | 通販 | Amazon&#34;&gt;効率的な Go&lt;/a&gt;』の話を。
今回は第2章の真ん中辺りまで読んだので「第2章 効率的な Go 入門」の感想を書いてみる。&lt;/p&gt;
&lt;p&gt;これから &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; について調べたい。
あるいは「&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; ってどがぁな言語？」って方がいたらこの第2章だけ立ち読みするってのも手かも知れない。
&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; を礼賛するフレーズが多いが，苦手とする部分もきっちり言及してるし参考にはなると思う。
例示されているコードは少なめ且つ簡単なので「&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; なにもわからない」って方も取り敢えず大丈夫。&lt;/p&gt;
&lt;p&gt;以下，個人的に面白いと思ったフレーズを抜き出しててみよう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;指針となった原則は、安全性と繰り返しの少なさを引き換えにせず、よりシンプルなコードを可能にする言語を作ることでした。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.41&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;GoogleはいまだにGoを管理する唯一の企業であり、Goに対する最後の決定的な支配権を持っています。たとえ誰もが修正、使用、貢献できるとしても、単一のベンダーによって調整されたプロジェクトは、再ライセンスや特定の機能のブロックなど、身勝手で有害な決定を下す危険性があります&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.41&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;「gofmt のスタイルは誰の好みでもないが、gofmt はみんなの好みである（ Gofmt&amp;rsquo;s style is no one&amp;rsquo;s favorite, yet gofmt is everyone&amp;rsquo;s favorite. ）」&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.42&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;標準ライブラリの設計を通じて、依存関係を制御することに多大な努力が払われました。1つの機能のために大きなライブラリを引っ張ってくるよりも、少しのコードをコピーするほうが良い場合があります（システムビルドのテストでは、新しいコアの依存関係が発生すると文句を言われます）。依存関係の衛生管理は、コードの再利用に優先します。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.47&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;繰り返しになりますが、効率を考慮すると、依存関係と透明性における潜在的なミニマリズムは、非常に大きな価値をもたらします。未知なものが少ないということは、主要なボトルネックをすばやく検出し、もっとも重要な価値のある最適化にまず注力できることを意味します。私たちは、依存関係に最適化の余地があることに気づいても、それを回避する必要はないのです。そのかわり、私たちは通常、その修正を直接アップストリームに貢献することが歓迎されます。これは両者にとって有益なことです！&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.48&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Goは、エラーを第一級市民の言語機能として扱うことで、独自の道を歩んでいます。信頼できるソフトウェアを書きたいと仮定して、エラー処理を明示的に、簡単に、そしてライブラリやインターフェイスにわたって統一的に行うのです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.50&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;もうひとつよくある不満は、Goを書くと非常に「悲観的」になるということです。なぜなら、決して起こらないかもしれないエラーが、目に見える形で現れるからです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.53&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;以下は読書会では未読だけど面白かったので。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;
&lt;p&gt;1960 年、米国と欧州のプログラミング言語専門家が手を組み、Algol60 が誕生しました。1970 年、Algol のツリーはCとPascal の2 つのブランチに分かれました。約 40 年後、この2 つの枝はGoで再び合流しました。&lt;/p&gt;
&lt;p class=&#34;right&#34; lang=&#34;en&#34;&gt;Robert Griesemer, &lt;q&gt;The Evolution of Go&lt;/q&gt; （https://oreil.ly/a4V1e）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.71&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;効率という点では、Go にはアキレス腱があります。「5.5 Goのメモリ管理」で学ぶように、メモリ使用量はときに制御しにくいことがあります。プログラム中の割り当ては（特に新しいユーザーにとっては）驚くようなもので、ガベージコレクションの自動メモリ解放処理にはオーバーヘッドや偶発的な動作があります。特にデータ指向（data-intensive）のアプリケーションでは、メモリやCPU の効率を確保するために、メモリ容量が厳しく制限されているマシン（IoT など）と同様に努力が必要です。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.71&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と，まぁ，こんな感じかな。
多少は雰囲気が伝わるだろうか。&lt;/p&gt;
&lt;p&gt;そういえば &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 処理系のバリエーションとして &lt;a href=&#34;https://tinygo.org/&#34;&gt;TinyGo&lt;/a&gt; は知ってたけど &lt;a href=&#34;https://gobot.io/&#34; title=&#34;Gobot - Golang framework for robotics, drones, and the Internet of Things (IoT)&#34;&gt;GoBot&lt;/a&gt; は知らんかった。
いや Mastodon の TL で見かけたかな。
いわゆる IoT で &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 処理系を考えているならこの辺も視野に入れたほうがいいだろう。&lt;/p&gt;
&lt;p&gt;今回はここまで。
次回も感想を書くかどうかは分からない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/_kazuya/articles/0045ef8057c0b5&#34;&gt;Golang(Gobot+Firmata+Arduino)でアナログメーターを作ってみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41&amp;#43;ew2wl2jL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;効率的なGo ―データ指向によるGoアプリケーションの性能最適化&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Bartłomiej Płotka (著), 山口 能迪 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 2024-02-24&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400535 (ASIN), 9784814400539 (EAN), 4814400535 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400539/&#34;&gt;版元&lt;/a&gt;で Ebook を買える。Go言語のリファレンス本ではない。フトウェア工学，プログラミング（の考え方）を学ぶ教科書的な位置づけかなぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-04-21&#34;&gt;2024-04-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 効率的なGo : Efficient Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4863544006?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/413DpucT1ML._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4863544006?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;基礎から学ぶ TinyGoの組込み開発&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;高砂正哲 (著)&lt;/dd&gt;
    &lt;dd&gt;C&amp;amp;R研究所 2022-11-12&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4863544006 (ASIN), 9784863544000 (EAN), 4863544006 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://book.mynavi.jp/manatee/c-r/books/detail/id=134168&#34;&gt;本の森.jp で PDF 版&lt;/a&gt;を購入。ハンズオン的な内容らしい。実は Wio Terminal を買ったまま放置プレイ中なので，楽しみにしている。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-11-12&#34;&gt;2022-11-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 基礎から学ぶ TinyGo の組込み開発 --&gt;
</content>
	</entry><entry>
		<title>性能とはなにか【『効率的な Go』読書会 初回】</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/04/efficient-go-1/" />
		<id>tag:text.Baldanders.info,2024-04-21:/remark/2024/04/efficient-go-1/</id>
		<published>2024-04-21T04:18:52+00:00</published>
		<updated>2024-08-23T08:21:01+00:00</updated>
		<summary>『効率的な Go』読書会が始まった</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;冬の間忙しくてできなかった読書会への参加を再開することにした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yokohama-go-reading.connpass.com/event/313675/&#34;&gt;第58回横浜Go読書会（オンライン）- Part 2 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「横浜Go読書会」とあって田舎暮らしの私としては躊躇するところではあったが主催の柴田芳樹さんより「&lt;a href=&#34;https://twitter.com/yoshiki_shibata/status/1760774448217723104&#34;&gt;全国から参加可能&lt;/a&gt;」と言っていただけたので参加することに決めた。&lt;/p&gt;
&lt;p&gt;題材となる書籍はこれ。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41&amp;#43;ew2wl2jL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;効率的なGo ―データ指向によるGoアプリケーションの性能最適化&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Bartłomiej Płotka (著), 山口 能迪 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 2024-02-24&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400535 (ASIN), 9784814400539 (EAN), 4814400535 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400539/&#34;&gt;版元&lt;/a&gt;で Ebook を買える。Go言語のリファレンス本ではない。フトウェア工学，プログラミング（の考え方）を学ぶ教科書的な位置づけかなぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2024-04-21&#34;&gt;2024-04-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 効率的なGo : Efficient Go --&gt;
&lt;p&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400539/&#34; title=&#34;O&#39;Reilly Japan - 効率的なGo&#34;&gt;版元が O&amp;rsquo;Reilly Japan&lt;/a&gt; ということで PDF で購入した。&lt;/p&gt;
&lt;p&gt;タイトルを見たとき「ついに Effective Go を冠する本が出たのか」と思ったが&lt;a href=&#34;https://ymotongpoo.hatenablog.com/entry/efficient-go&#34; title=&#34;『効率的なGo』という本が出版されました #efficient_go - YAMAGUCHI::weblog&#34;&gt;翻訳者の方&lt;/a&gt;に「&lt;a href=&#34;https://bsky.app/profile/ymotongpoo.com/post/3knziwolx2c27&#34;&gt;&amp;ldquo;Efficient Go&amp;rdquo; だよ&lt;/a&gt;」と指摘していただいた恥ずかしい過去は内緒である。&lt;/p&gt;
&lt;p&gt;普通は本を買ったら最低でも流し読みくらいをしておくものだけど，これを買った2月頃はホンマに忙しくてねぇ。
目次くらいしか眺めてなかった。
まぁ読書会で読むし，と後回しにしてたら結局初見で読書会に望むことになってしまった。
反省。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;効率的なGo ―データ指向によるGoアプリケーションの性能最適化 | Bartłomiej Płotka, 山口 能迪 |本 | 通販 | Amazon&#34;&gt;効率的な Go&lt;/a&gt;』は11章で構成されていて500ページちょっとというボリューム。
読書会では読み終わるまで1年くらいかかるかなぁという見通しだった。
1回目の今回は都合で時間短めだったこともあり，序文と1章の途中まで。&lt;/p&gt;
&lt;p&gt;読み始めた最初の感想は「講釈が長い！」だった。
&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; のコードは殆ど出てこないし。&lt;/p&gt;
&lt;p&gt;読書会のあとで後ろの章をさっくり眺めてみたが，コードは少なめで地の文章が多い。
なので，よくあるリファレンス本と思って読むと面食らうかもしれない。
どっちかというとソフトウェア工学，プログラミング（の考え方）を学ぶ教科書的な位置づけかなぁ。
その教材としてのプログラミング言語として &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; が選ばれているという感じ。
実際に序文でも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;最適化の考え方やオブザーバビリティパターンを示すためにGoを例題言語として使っていますが、本書の11 章のうち8章は言語に中立的に書かれています。Java、C#、Scala、Python、C++、Rust、Haskellなど、他の言語で書かれたソフトウェアを改善するために、同じテクニックを使えます。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』序文&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれている。
なので，この本の内容を &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 以外の言語で応用するにはどうすればいいか考えながら読むのも面白いかもしれない。&lt;/p&gt;
&lt;p&gt;そういえば「訳者まえがき」には&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;私が直近で翻訳に携わった『オブザーバビリティ・エンジニアリング』（2023、オライリー・ジャパン、ISBN9784814400126）、『SLO サービスレベル目標』（2023、オライリー・ジャパン、ISBN9784814400348）の2冊に続いて、本書が加わることで、システムの性能改善というテーマにおいてマクロからミクロまで、全体の理解を深められる書籍が揃ったからです。したがって先の2冊を併せて読むことで、広い視点を保ったまま、プログラムの性能改善に取り組む意味が見えてくると思います。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』訳者まえがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれている。
この辺も読んでおくといいかも。&lt;/p&gt;
&lt;p&gt;では，1章の前半で刺さったフレーズをつまみ食いしてみよう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;よく言われるように、「完璧は善の敵（Perfect is the enemy of good、https://oreil.ly/OogZF）」ですが、まずはそのバランスの取れた善を見つけなければなりません。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.3&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これは個人的に&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4344980158?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;理学は、真理の探究であり、工学は善の実現である。そして、藝術は美の表現である－－これで所謂「真美善」が揃う&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4344980158?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はやぶさ―不死身の探査機と宇宙研の物語&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;を座右の銘のひとつとしている私としては気になるフレーズである。
ちなみに &lt;a href=&#34;https://oreil.ly/OogZF&#34;&gt;&lt;code&gt;https://oreil.ly/OogZF&lt;/code&gt;&lt;/a&gt; は Wikipedia へのリンクになっていて，そのバリエーションとして&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good&#34;&gt;&amp;ldquo;If you never miss a plane, you&amp;rsquo;re spending too much time at the airport&amp;rdquo;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good&#34;&gt;Perfect is the enemy of good - Wikipedia&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;というフレーズがあって笑ってしまった。他に Donald Knuth 博士の&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good&#34;&gt;&amp;ldquo;Premature optimization is the root of all evil&amp;rdquo;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good&#34;&gt;Perfect is the enemy of good - Wikipedia&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;も紹介されていたが，これは『&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;効率的なGo ―データ指向によるGoアプリケーションの性能最適化 | Bartłomiej Płotka, 山口 能迪 |本 | 通販 | Amazon&#34;&gt;効率的な Go&lt;/a&gt;』でも言及されている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;しかし、この名言はずいぶん前になされたものです。過去から一般的なプログラミングについて多くを学ぶことができる一方で、1974年から大幅に改善されたことも多くあります。たとえば、当時はリスト1-5に紹介されているように、変数名に変数の型に関する情報を追加することが一般的でした。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.13&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;「リスト1-5」ってのがこれ&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;structSystem&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;sliceU32Numbers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;uint32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;bCharacter&lt;/span&gt;      &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;f64Ratio&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.14&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;いわゆるハンガリアン記法ってやつですな。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;当時はコンパイラーや統合開発環境（IDE）があまり成熟していなかったので、ハンガリアン記法が便利でした。しかし現在では、IDEやGitHubのようなリポジトリサイトでも、変数にカーソルを合わせるとすぐにその型を認識できるようになりました。数ミリ秒で変数の定義にたどり着き、解説を読み、すべての呼び出しと変更を見つけられます。賢いコードの提案、高度なハイライト、1990 年代半ばに開発されたオブジェクト指向プログラミングの優位性により、実用的な可読性に大きな影響を与えることなく、機能や効率の最適化（複雑化）を追加できるツールを手に入れました。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.14&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;最近では、IDEの機能に対応しやすいようにコードを書くことが推奨されていることは、特筆に値するでしょう。たとえば、コード構造は「連結」グラフ（https://oreil.ly/mFzH9）であるべきです。これは、IDE が支援できる方法で関数を接続することを意味します。動的ディスパッチ、コードインジェクション、遅延読み込みは、これらの機能を無効にするので、厳密に必要でない限り避けるべきです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.14 脚注&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;こういった感じにツールの助け等によってコードに対する認知負荷が変わってきているため「性能の最適化」も昔とは変わってきている，ということらしい。&lt;/p&gt;
&lt;p&gt;じゃあ，そもそも「性能（performance）」って何？ って話になる。
この辺の話が今回読んだ中で一番面白かった。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;私の経験では、多くの人がソフトウェア開発において性能（パフォーマンス）という言葉を速度（スピード）の代名詞と考えています。他の人々にとっては、この言葉の本来の定義である実行の全体的な質を意味します 。この現象は「意味拡散（semantic diffusion、https://oreil.ly/Qx9Ft）」と呼ばれることもあり、ある言葉がより大きな集団によって、本来持っていた意味と異なる意味で使われ始めるときに起こります。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.4&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;p&gt;結論から言うと、性能とは少なくともこの3つの要素の組み合わせです。&lt;/p&gt;
\[ 性能 = ( 精度 \times 効率 \times 速度 ) \]&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.6&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ここで性能は単にソフトウェアの機能を指すものではないというのが重要なポイント&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
日々要件が変わるソフトウェア開発においては如何にして変化をプロセスに組み込み小刻みにイテレーションを回していくかが重要になる。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;たとえば、RockstarGamesが人気ゲーム「グランド・セフト・オートV」を開発するのに5年の歳月と250人のエンジニアを要し、その費用は1億3750万ドルと推定されて（https://oreil.ly/0CRW2）います。また、Appleは、実用的で商品化されたOSを作るために、2001年にmacOSを初めてリリースするまでに5億ドル（https://oreil.ly/hQhiv）をはるかに超える資金を費やさなければなりませんでした。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『効率的なGo』p.1&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;故に1章の「ソフトウェア効率性が重要」という見出しになるわけだ。&lt;/p&gt;
&lt;p&gt;&amp;hellip;という感じで読み進めていくことになりそうだ。
次回の読書会の感想を書くかどうかはわからないけど（笑）&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51pUKQajnaL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語による並行処理&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Katherine Cox-Buday (著), 山口 能迪 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2018-10-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873118468 (ASIN), 9784873118468 (EAN), 4873118468 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873118468/&#34;&gt;Eブック版もある&lt;/a&gt;。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2018/11/concurrency-in-go/&#34;&gt;こちら&lt;/a&gt;。 Go 言語で並行処理を書くならこの本は必読書になるだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-01-13&#34;&gt;2020-01-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Go言語による並行処理 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400535?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;効率的なGo ―データ指向によるGoアプリケーションの性能最適化 | Bartłomiej Płotka, 山口 能迪 |本 | 通販 | Amazon&#34;&gt;効率的な Go&lt;/a&gt;』では 性能＝上手くできているか？ とし，その内訳として 精度＝間違いを犯してないか？ 効率＝余計な仕事をしてないか / 資源を使いすぎてないか？ 速度＝早くできているか？ といった感じに噛み砕いて説明している。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>オープンソース・プロジェクトの乗っ取りを試みる</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/04/take-over-opensource-project/" />
		<id>tag:text.Baldanders.info,2024-04-20:/remark/2024/04/take-over-opensource-project/</id>
		<published>2024-04-20T08:59:26+00:00</published>
		<updated>2024-04-20T09:03:08+00:00</updated>
		<summary>OpenSSF および OpenJS Foundation からの警告</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2024/04/other-attempts-to-take-over-open-source-projects.html&#34; title=&#34;Other Attempts to Take Over Open Source Projects - Schneier on Security&#34;&gt;Bruce Schneier 先生の記事&lt;/a&gt;経由：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;Open Source Security (OpenSSF) and OpenJS Foundations Issue Alert for Social Engineering Takeovers of Open Source Projects – Open Source Security Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://openjsf.org/blog/openssf-openjs-alert-social-engineering-takeovers&#34;&gt;Open Source Security (OpenSSF) and OpenJS Foundations Issue Alert for Social Engineering Takeovers of Open Source Projects | OpenJS Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先日の &lt;a href=&#34;https://text.baldanders.info/remark/2024/04/xz-utils-backdoor/&#34; title=&#34;XZ Utils に仕組まれたバックドアに関する覚え書き&#34;&gt;XZ Utils に仕組まれたバックドア&lt;/a&gt;に関連して &lt;a href=&#34;https://openssf.org/&#34; title=&#34;Open Source Security Foundation – Linux Foundation Projects&#34;&gt;OpenSSF (Open Source Security Foundation)&lt;/a&gt; と &lt;a href=&#34;https://openjsf.org/&#34; title=&#34;A safe and modern home for JavaScript technologies | OpenJS Foundation&#34;&gt;OpenJS Foundation&lt;/a&gt; よりオープンソース・プロジェクトの乗っ取りに関する警告が出ている。
両者とも同じ内容かな。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2024/04/xz-utils-backdoor/&#34; title=&#34;XZ Utils に仕組まれたバックドアに関する覚え書き&#34;&gt;今回&lt;/a&gt;のような話は特異なケースというわけではないらしく，以下のような類似例（試みは失敗したようだが）を報告している。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;&lt;p&gt;The OpenJS Foundation Cross Project Council received a suspicious series of emails with similar messages, bearing different names and overlapping GitHub-associated emails. These emails implored OpenJS to take action to update one of its popular JavaScript projects to “address any critical vulnerabilities,” yet cited no specifics. The email author(s) wanted OpenJS to designate them as a new maintainer of the project despite having little prior involvement. This approach bears strong resemblance to the manner in which “Jia Tan” positioned themselves in the XZ/liblzma backdoor.&lt;/p&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;The OpenJS team also recognized a similar suspicious pattern in two other popular JavaScript projects not hosted by its Foundation, and immediately flagged the potential security concerns to respective OpenJS leaders, and the Cybersecurity and Infrastructure Security Agency (CISA) within the United States Department of Homeland Security (DHS).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;Open Source Security (OpenSSF) and OpenJS Foundations Issue Alert for Social Engineering Takeovers of Open Source Projects&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これらを踏まえ social engineering による乗っ取りのパターンとして以下を挙げている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;&lt;ul&gt;
&lt;li&gt;Friendly yet aggressive and persistent pursuit of maintainer or their hosted entity (foundation or company) by relatively unknown members of the community.&lt;/li&gt;
&lt;li&gt;Request to be elevated to maintainer status by new or unknown persons.&lt;/li&gt;
&lt;li&gt;Endorsement coming from other unknown members of the community who may also be using false identities, also known as “sock puppets.”&lt;/li&gt;
&lt;li&gt;PRs containing blobs as artifacts.
&lt;ul&gt;
&lt;li&gt;For example, the XZ backdoor was a cleverly crafted file as part of the test suite that wasn’t human readable, as opposed to source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Intentionally obfuscated or difficult to understand source code.&lt;/li&gt;
&lt;li&gt;Gradually escalating security issues.
&lt;ul&gt;
&lt;li&gt;For example, the XZ issue started off with a relatively innocuous replacement of safe_fprintf() with fprintf() to see who would notice.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deviation from typical project compile, build, and deployment practices that could allow the insertion of external malicious payloads into blobs, zips, or other binary artifacts.&lt;/li&gt;
&lt;li&gt;A false sense of urgency, especially if the implied urgency forces a maintainer to reduce the thoroughness of a review or bypass a control.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;Open Source Security (OpenSSF) and OpenJS Foundations Issue Alert for Social Engineering Takeovers of Open Source Projects&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まぁ，悪人顔の悪人はいないってね。
漫画やドラマならともかく，現実の詐欺師は友好的かつ誠実そうな顔をしてやってくる（笑） 企業・組織などへの標的型攻撃もそうだけど，安全な「距離」をはかりながら徐々に侵食していく感じだよね。
寄生虫が宿主を乗っ取るのと同じ。
これを防ぐのはなかなか難しいだろう。
特に小規模の FOSS プロジェクトなんかでは。&lt;/p&gt;
&lt;p&gt;件の記事では，オープンソース・プロジェクトを保護するための手順として&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;&lt;ul&gt;
&lt;li&gt;Consider following industry-standard security best practices such as &lt;a href=&#34;https://openssf.org/resources/guides/&#34;&gt;OpenSSF Guides&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Use strong authentication.
&lt;ul&gt;
&lt;li&gt;Enable two-factor authentication (2FA) or Multifactor Authentication (MFA).&lt;/li&gt;
&lt;li&gt;Use a secure password manager.&lt;/li&gt;
&lt;li&gt;Preserve your recovery codes in a safe, preferably offline place.&lt;/li&gt;
&lt;li&gt;Do not reuse credentials/passwords across different services.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Have a security policy including a “&lt;a href=&#34;https://github.com/ossf/oss-vulnerability-guide&#34;&gt;coordinated disclosure&lt;/a&gt;” process for reports.&lt;/li&gt;
&lt;li&gt;Use best practices for merging new code.
&lt;ul&gt;
&lt;li&gt;Enable branch protections and signed commits.&lt;/li&gt;
&lt;li&gt;If possible, have a second developer conduct code reviews before merging, even when the PR comes from a maintainer.&lt;/li&gt;
&lt;li&gt;Enforce readability requirements to ensure new PRs are not obfuscated, and use of opaque binaries is minimized.&lt;/li&gt;
&lt;li&gt;Limit who has npm publish rights.&lt;/li&gt;
&lt;li&gt;Know your committers and maintainers, and do a periodic review. Have you seen them in your working group meetings or met them at events, for example?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you run an open source package repository, consider adopting &lt;a href=&#34;https://repos.openssf.org/principles-for-package-repository-security&#34;&gt;Principles for Package Repository Security&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Review “&lt;a href=&#34;https://www.cisa.gov/news-events/news/avoiding-social-engineering-and-phishing-attacks&#34;&gt;Avoiding social engineering and phishing attacks&lt;/a&gt;” from CISA and/or “&lt;a href=&#34;https://www.enisa.europa.eu/topics/incident-response/glossary/what-is-social-engineering&#34;&gt;What is ‘Social Engineering’&lt;/a&gt;” from ENISA.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/&#34;&gt;Open Source Security (OpenSSF) and OpenJS Foundations Issue Alert for Social Engineering Takeovers of Open Source Projects&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;を挙げている。
比較的大きなコミュニティならこれでもいいんだろうけどねぇ。
サプライチェーンの観点では重要だけどオープンソース・プロジェクトとしては小規模で，殆どワンオペで回してるようなところは難しいかもしれない。
&lt;a href=&#34;https://text.baldanders.info/remark/2024/04/xz-utils-backdoor/&#34; title=&#34;XZ Utils に仕組まれたバックドアに関する覚え書き&#34;&gt;今回&lt;/a&gt;の XZ Utils のように。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4296001574?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51anznwPz2L._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4296001574?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ハッキング思考　強者はいかにしてルールを歪めるのか、それを正すにはどうしたらいいのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 高橋 聡 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2023-10-12&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4296001574 (ASIN), 9784296001576 (EAN), 4296001574 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「AI時代にルールを味方につけるには、「正しいハッキングの考え方」が必要だ」（帯の言葉より）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-10-13&#34;&gt;2023-10-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ハッキング思考 --&gt;
</content>
	</entry><entry>
		<title>自家中毒を起こす AI と SF に取り憑かれたビッグテック</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/04/model-collapse/" />
		<id>tag:text.Baldanders.info,2024-04-15:/remark/2024/04/model-collapse/</id>
		<published>2024-04-15T13:12:54+00:00</published>
		<updated>2024-05-21T22:54:39+00:00</updated>
		<summary>botshit とモデル崩壊</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;久しぶりに &lt;a href=&#34;https://p2ptk.org/&#34; title=&#34;P2Pとかその辺のお話R | Sharing is Caring&#34;&gt;P2Ptk.org&lt;/a&gt; の翻訳記事を見た気がする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4484&#34;&gt;食糞AIがもたらす危機：botshitの肥溜めと化すインターネットの未来 | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;またコリイ・ドクトロウさんってばお下品な言葉を（笑）と思ったが “botshit” というのは2024年1月のこの論文が元ネタらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4678265&#34;&gt;Beware of Botshit: How to Manage the Epistemic Risks of Generative Chatbots by Tim Hannigan, Ian P. McCarthy, Andre Spicer :: SSRN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abstract によると&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4678265&#34;&gt;Generative chatbots do this work by ‘predicting’ responses rather than ‘knowing’ the meaning of their responses. This means chatbots can produce coherent sounding but inaccurate or fabricated content, referred to as ‘hallucinations’. When humans use this untruthful content for tasks, it becomes what we call ‘botshit’.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4678265&#34;&gt;Beware of Botshit: How to Manage the Epistemic Risks of Generative Chatbots&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なんだそうだ。
そしてコリイ・ドクトロウさんによると「&lt;a href=&#34;https://p2ptk.org/monopoly/4484&#34; title=&#34;食糞AIがもたらす危機：botshitの肥溜めと化すインターネットの未来 | p2ptk[.]org&#34;&gt;すでにインターネットはbotshitの肥溜めと化している&lt;/a&gt;（&lt;a href=&#34;https://pluralistic.net/2024/03/14/inhuman-centipede/#enshittibottification&#34; title=&#34;Pluralistic: The Coprophagic AI crisis (14 Mar 2024) – Pluralistic: Daily links from Cory Doctorow&#34;&gt;internet is already drowning in it&lt;/a&gt;）」ということらしい。
つか，訳文のほうがお下品だな（笑）&lt;/p&gt;
&lt;p&gt;これによって起こりうるのがモデル崩壊（Model Collapse）である。
以下は2023年5月の論文。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2305.17493&#34;&gt;[2305.17493] The Curse of Recursion: Training on Generated Data Makes Models Forget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://arxiv.org/abs/2305.17493&#34;&gt;We find that use of model-generated content in training causes irreversible defects in the resulting models, where tails of the original content distribution disappear. We refer to this effect as Model Collapse and show that it can occur in Variational Autoencoders, Gaussian Mixture Models and LLMs.  We build theoretical intuition behind the phenomenon and portray its ubiquity amongst all learned generative models. We demonstrate that it has to be taken seriously if we are to sustain the benefits of training from large-scale data scraped from the web.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arxiv.org/abs/2305.17493&#34;&gt;The Curse of Recursion: Training on Generated Data Makes Models Forget&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なんちうか，これって自家中毒みたいだよな（喩えが雑）。
こっちの記事のほうがイメージしやすいかな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lightbluetouchpaper.org/2023/06/06/will-gpt-models-choke-on-their-own-exhaust/&#34;&gt;Will GPT models choke on their own exhaust? | Light Blue Touchpaper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://www.lightbluetouchpaper.org/2023/06/06/will-gpt-models-choke-on-their-own-exhaust/&#34;&gt;Just as we’ve strewn the oceans with plastic trash and filled the atmosphere with carbon dioxide, so we’re about to fill the Internet with blah. This will make it harder to train newer models by scraping the web, giving an advantage to firms which already did that, or which control access to human interfaces at scale. Indeed, we already see AI startups &lt;a href=&#34;https://blog.archive.org/2023/05/29/let-us-serve-you-but-dont-bring-us-down/&#34;&gt;hammering the Internet Archive&lt;/a&gt; for training data.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.lightbluetouchpaper.org/2023/06/06/will-gpt-models-choke-on-their-own-exhaust/&#34;&gt;Will GPT models choke on their own exhaust?&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;“AI startups &lt;a href=&#34;https://blog.archive.org/2023/05/29/let-us-serve-you-but-dont-bring-us-down/&#34;&gt;hammering the Internet Archive&lt;/a&gt; for training data” の部分を示す記事がこれだね。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.archive.org/2023/05/29/let-us-serve-you-but-dont-bring-us-down/&#34;&gt;Let us serve you, but don’t bring us down | Internet Archive Blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote cite=&#34;https://blog.archive.org/2023/05/29/let-us-serve-you-but-dont-bring-us-down/&#34;&gt;Tens of thousands of requests per second for our public domain OCR files were launched from 64 virtual hosts on amazon’s AWS services. (Even by web standards,10’s of thousands of requests per second is a lot.)&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://blog.archive.org/2023/05/29/let-us-serve-you-but-dont-bring-us-down/&#34;&gt;Let us serve you, but don’t bring us down&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これは酷い。
1年前にこんなことが起こってたのか。&lt;/p&gt;
&lt;p&gt;モデル崩壊については，私も耳にしていたが，昨年前半は仕事が徐々に忙しくなっていて LLM への関心が薄れていたんだよな。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4484&#34;&gt;皮肉なことに、AI企業自身がこの問題の火種を作っている。GoogleやMicrosoftによる「AI検索」の全面的な推進は、検索エンジンがウェブページへのリンクを返すのではなく、そのコンテンツを要約する未来を想定している。しかし、そうなれば誰がウェブを書くだろうか。あなたの書いたものを見つけられるのはAIのクローラーだけで、しかもそのAIはあなたの書いたものを自分のトレーニングの餌にするだけで、読者にあなたの書いたものを紹介する気は毛頭ない。AIが検索を支配すれば、オープンウェブはAIの工業的畜産場（CAFO）となり、検索クローラーはますます肥溜めからクソを吸い上げるようになるだろう。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4484&#34;&gt;食糞AIがもたらす危機：botshitの肥溜めと化すインターネットの未来&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;大昔，仕事とかでメールのやり取りに辟易してた頃， AI がエージェントとなってメール送受信を仲立ちしてくれれば，マナーと称した下らない時候の挨拶とか書かなくて済むし，分かりにくい文面も要約してくれるんじゃないか？ と夢想したものだが，人同士のやり取りを LLM が仲立ちして肩代わりするようになったらどんな恐ろしいことが起きるんだろうねぇ（笑）&lt;/p&gt;
&lt;p&gt;ところで，この記事の最初の方に&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4484&#34;&gt;かつては、一部の作家や読者がSFを予言と勘違いしても、さして問題にはならなかった。SF＝予言という妄想に駆られた人々に、社会を間違った方向に再構築する力がなかったからだ。しかし、SFに取り憑かれたテック億万長者たちが、我先に「人類苦悩化システム（torment nexus）」の発明に乗り出すに至っては、SF作家たちは作り物のお話と予言とを明確に区別しなくてはならなくなった（例「サイバーパンクは警告であって提案ではない」）。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4484&#34;&gt;食糞AIがもたらす危機：botshitの肥溜めと化すインターネットの未来&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書かれていて思わず笑ってしまったのだが，似たような話を yomoyomo さんが紹介していた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/science-fiction-shape-the-future&#34;&gt;SFが未来を方向づけるのか？ 当代の人気SF作家が答える - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事でも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://yamdas.hatenablog.com/entry/20240415/science-fiction-shape-the-future&#34;&gt;コリイ・ドクトロウは、実際にものを作る人の多くが SF にインスピレーションを受けているのは否定できないと認めながらも、物語の寓意をそのまま受け取りすぎるのは、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E6%B4%9E%E7%AA%9F%E3%81%AE%E6%AF%94%E5%96%A9&#34;&gt;「プラトンの洞窟」&lt;/a&gt;を本当に探すようなものと語っている。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/science-fiction-shape-the-future&#34;&gt;SFが未来を方向づけるのか？ 当代の人気SF作家が答える&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と紹介している。
ほかにも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://yamdas.hatenablog.com/entry/20240415/science-fiction-shape-the-future&#34;&gt;結局のところ、SF が我々が築く未来の青写真になるんですかね？ という最初の問いに、N・K・ジェミシンが、そんなわけない。他の文学ジャンルと変わらん。ちょっとしたことを一つ正しく言い当てて、他はすべてハズレなのが「先見の明がある」ヴィジョンと言えるか？ と答えていて受けた。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/science-fiction-shape-the-future&#34;&gt;SFが未来を方向づけるのか？ 当代の人気SF作家が答える&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と紹介されていて，これが一番面白かった。
「SFに取り憑かれたテック億万長者たち」のせいで SF 作家がわざわざこういうことを言わないといけない世の中になったのかねぇ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/ai/4486&#34;&gt;学校教育とAI：生成AIの使用禁止とAI検出ツールは生徒たちを害する | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/quality-assurance-and-ai&#34;&gt;AI栄えてQAエンジニアが儲かる？ 話はそんな単純ではない - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/ai-snake-oil&#34;&gt;アーヴィンド・ナラヤナンらの「インチキAI」本が遂に出る - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.techno-edge.net/article/2024/04/08/3130.html&#34;&gt;GPT-4超え精度でスマホ上実行できるオンデバイス生成AI「Octopus v2」、Google「生成AIは大きければいいってものではない」など重要論文5本を解説（生成AIウィークリー） | テクノエッジ TechnoEdge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/ai/4500&#34;&gt;AI黙示録は“簡単に”回避できる | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2024/05/86454/&#34;&gt;TESCREALふたたび：AGIが約束するユートピアはSF脳のディストピアなのか？ – WirelessWire News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/ai/4556&#34;&gt;なぜ我々はジェットパックの実用化というウソっぱちを信じたのか | p2ptk[.]org&lt;/a&gt; : dis る dis る（笑）&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>プラットフォームかプロトコルか</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/04/platform-or-protocol/" />
		<id>tag:text.Baldanders.info,2024-04-15:/remark/2024/04/platform-or-protocol/</id>
		<published>2024-04-15T12:07:04+00:00</published>
		<updated>2024-04-20T10:42:40+00:00</updated>
		<summary>日本で2日間（東京と大阪）に渡り Bluesky Meetup が開催された</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;物凄い偏見であることは承知の上で書いてしまうけど，現代を含む近代というのは「『個人』が台頭する時代」だと思うのよ。
もしくは社会と個人が向き合う時代。
時に協力し時に反目するのが社会と個人との関係。
その文脈の中で，たとえば身分や差別の問題，たとえばジェンダーの問題，たとえば税金と福祉の問題，といったことを捉える必要がある。&lt;/p&gt;
&lt;p&gt;ゼロ年代前半の「Web 2.0」で期待されたのは多様な Web サービスの間で個人が緩やかに連携しボトムアップで「ネット社会」を構成することだった筈だ。
しかしそれは「ソーシャルネットワーク・サービス」の登場でぶち壊された。
ユーザは人間関係を「人質」にプラットフォームに囲い込まれ縛り付けられる。
更に2010年代の「アラブの春」がこれを強化した。
日本ではこれに 3.11 を加えてもいいかも知れない。
ネットはプラットフォーム間の覇権ゲームの会場となりユーザを&lt;a href=&#34;https://text.baldanders.info/remark/2023/01/internet-bulimia/&#34; title=&#34;嘔吐するインターネット&#34;&gt;過剰に飲み込み嘔吐する&lt;/a&gt;。
そこに個人は存在せず，ユーザは統計上の「数値」でしかない。
この辺が「&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20230828/neo-feudalism&#34; title=&#34;時代はデジタル封建主義？ ジョエル・コトキン『新しい封建制がやってくる』が出るぞ - YAMDAS現更新履歴&#34;&gt;デジタル封建主義&lt;/a&gt;」などと呼ばれる所以だろう。&lt;/p&gt;
&lt;p&gt;これを打ち破りたいならプロトコルから変えるべきだ！ という発想になるのは自然なことかもしれない。&lt;/p&gt;
&lt;p&gt;先週末は日本で2日間（東京と大阪）に渡り Bluesky Meetup が開催された。
個人的には関心が薄かったので見てもないのだが yomoyomo さんがこれに絡む記事を &lt;a href=&#34;https://wirelesswire.jp/&#34; title=&#34;WirelessWire News – The Technology and Ecosystem of the IoT.&#34;&gt;WirelessWire News&lt;/a&gt; のブログにタイムリーに公開されていて，流石と思ってしまった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2024/04/86389/&#34;&gt;BlueskyやThreadsに受け継がれたネット原住民の叡智 – WirelessWire News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この中で紹介されている以下の記事は読んでおくべきだろう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210201-free-speech-protocols-approach/&#34;&gt;言論の自由を取り巻く問題を解決する「プロトコルに基づいた仕組み」とは？ - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yamdas.org/column/technique/marking-the-webs-35th-birthday-an-open-letterj.html&#34;&gt;ウェブの35歳の誕生日を祝う：オープンレター（Marking the Web’s 35th Birthday: An Open Letter 日本語訳）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今のところ Bluesky には Bluesky というサービスと，それを駆動する &lt;a href=&#34;https://atproto.com/&#34; title=&#34;The AT Protocol&#34;&gt;AT (Authenticated Transfer) Protocol&lt;/a&gt; という2本の柱がある。
おそらく Bluesky 自身は AT プロトコルを実装する実験的な側面を持っていて，本命は AT プロトコルの標準化とそれを使った「Bluesky ではない」サービス群の台頭ではないかと思う。&lt;/p&gt;
&lt;p&gt;上で紹介した一連の記事を読んで思い出したのが『&lt;a href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インテンション・エコノミー&lt;/a&gt;』だ。
この本についても yomoyomo さんの&lt;a href=&#34;https://www.yamdas.org/booklog/intentioneconomy.html&#34; title=&#34;yomoyomoの読書記録 - ドク・サールズ『インテンション・エコノミー 顧客が支配する経済』（翔泳社）&#34;&gt;書評&lt;/a&gt;がある。
一部引用しておこう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://www.yamdas.org/booklog/intentioneconomy.html&#34;&gt;&lt;p&gt;　インテンション・エコノミーとは買い手が価値の源泉となる真の意味でオープンな市場であり、VRM（企業関係管理）が CRM（顧客関係管理）にとってかわり、顧客は企業に囲い込まれることなく、つまり消費者として集合的に扱われるのでなく企業との関係はパーソナルなものになる。&lt;/p&gt;
&lt;p&gt;　つまり、顧客の側が自分に関するデータの主導権に握り、自らの意思に従い企業との関係を決められる。それには顧客側に立ちそのニーズの代理人として機能する「フォース・パーティ」の存在が必要になるし、顧客と企業の間には対話的でオープンな API が提供されることで市場のオープンさが担保される。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.yamdas.org/booklog/intentioneconomy.html&#34;&gt;yomoyomoの読書記録 - ドク・サールズ『インテンション・エコノミー 顧客が支配する経済』（翔泳社）&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これを&lt;a href=&#34;https://baldanders.info/blog/000638/&#34; title=&#34;『インテンション・エコノミー』を読む&#34;&gt;読んだ&lt;/a&gt;当時は「企業と個人」の関係で考えていたが，これは「社会と個人」の関係で考えることもできる。
もしかしたらこれから求められるのは SRM (社会関係管理) みたいな仕組みかもしれない，などと妄想してみた。
もし AT プロトコルによって SRM が構成できるなら面白いのに（笑）&lt;/p&gt;
&lt;p&gt;既に ActivityPub は W3C によって&lt;a href=&#34;https://www.w3.org/TR/activitypub/&#34;&gt;標準化&lt;/a&gt;され Mastodon のみならず PeerTube や Pixelfed といった多様なサービスを生み出しつつある（なくなってるぽいものもあるが）。
日本でならこれに Misskey を加えてもいいかも知れない。
Threads は Mastodon ベースだそうだが，もはや Mastodon とは別物だろう。
こういうことが AT プロトコル周りでも起こるようになれば，もう少し真面目に取り組んでもいいかなぁ，とは思っている。&lt;/p&gt;
&lt;p&gt;まぁ，でも，標準化されたらされたで，またぞろ覇権ゲームが勃発しそうな気がするけどね。
そしてその勝者はやがて腐っていく。
これも自然の理か？&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://p2ptk.org/monopoly/4366&#34;&gt;プラットフォームはこのように滅びていく。まず、ユーザにとって良き存在になる。次に、ビジネス顧客にとって良き存在になるために、ユーザを虐げる。最後に、ビジネス顧客を虐げて、すべての価値を自分たちに向ける。そうして死んでいく。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4366&#34;&gt;メタクソ化するTiktok&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;それならば，持てる荷物は最小限に，いつでもプラットフォームから離脱できるよう備えるのがネットでの賢い過ごし方なのかも知れない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20240415/wirelesswire&#34;&gt;WirelessWire News連載更新（BlueskyやThreadsに受け継がれたネット原住民の叡智） - YAMDAS現更新履歴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.slideshare.net/masayukihatta/ss-199545007&#34;&gt;プロトコル・ベースのプラットフォーム規制 | PPT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4502&#34;&gt;誰もがインターネットの「暗がり」に安住する日 | p2ptk[.]org&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/4482&#34;&gt;なぜミレニアル世代はTiktokを離れられないのか（あるいはおじさん・おばさんがFacebookを離れられないのはなぜか） | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://lovetech-media.com/love/bluesky-meetup-in-tokyo-vol2-report/&#34;&gt;「日本の開発者は素晴らしい」ソーシャルメディアの明るい未来を感じたBlueskyミートアップ東京 #BskyMeetup | LoveTechMedia - ラブテックメディア&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/bookmarks/fediverse/&#34;&gt;Fediverse 関連のブックマーク&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/519&amp;#43;kIHb71L._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00DIM6BE6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インテンション・エコノミー～顧客が支配する経済&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Doc Searls (著), 栗原潔 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;翔泳社 2013-03-14 (Release 2013-06-20)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00DIM6BE6 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;時代はソーシャル CRM から VRM へ。&lt;a href=&#39;https://baldanders.info/blog/000794/&#39;&gt;俺達がインターネットだ！&lt;/a&gt; &lt;a href=&#39;https://baldanders.info/blog/000638/&#39;&gt;感想文はこちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-04-26&#34;&gt;2015-04-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- インテンション・エコノミー --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00FW5SSCK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/515aVCPebQL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00FW5SSCK?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ソーシャル・ネットワーク (字幕版)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ジェシー・アイゼンバーグ (出演), アンドリュー・ガーフィールド (出演), ジャスティン・ティンバーレイク (出演), アーミー・ハマー (出演), マックス・ミンゲラ (出演), David Fincher (監督), Scott Rudin (プロデュース), Dana Brunetti (プロデュース), Michael De Luca (プロデュース), Cean Chaffin (プロデュース)&lt;/dd&gt;
    &lt;dd&gt; (Release 2013-11-26)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B00FW5SSCK (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;この映画が公開された当時（2011年）は日本でも Facebook が一般（特に年配層）に浸透し始めていたときで，スクリーン上の狂騒に苦笑したものだが，その Facebook が広告まみれの駄システムに堕ちてしまうとは誰も思わなかっただろうな（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-04-14&#34;&gt;2019-04-14&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ソーシャル・ネットワーク --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;&lt;img src=&#34;https://tatsu-zine.com/images/books/877/cover_s.jpg&#34; width=&#34;106&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;yomoyomo (著)&lt;/dd&gt;
    &lt;dd&gt;達人出版会 2017-12-25 (Release 2019-03-02)&lt;/dd&gt;
    &lt;dd&gt;デジタル書籍&lt;/dd&gt;
    &lt;dd&gt;infoshare2 (tatsu-zine.com)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://wirelesswire.jp/author/yomoyomo/&#34;&gt;WirelessWire News 連載&lt;/a&gt;の書籍化。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/infoshare2/&#34;&gt;こちら&lt;/a&gt;。祝 &lt;a href=&#34;https://www.amazon.co.jp/dp/B08DD2MC46?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Kindle 化&lt;/a&gt;！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-12-31&#34;&gt;2018-12-31&lt;/abbr&gt;&lt;/p&gt;
&lt;/div&gt; &lt;!-- 続・情報共有の未来 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4903127044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41uBRNdBygL._SL160_.jpg&#34; width=&#34;110&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4903127044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;排除型社会―後期近代における犯罪・雇用・差異&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ジョック ヤング (著), Young,Jock (原著), 秀男, 青木 (翻訳), 泰郎, 伊藤 (翻訳), 政彦, 岸 (翻訳), 真保呂, 村澤 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;洛北出版 2007-03-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4903127044 (ASIN), 9784903127040 (EAN), 4903127044 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://baldanders.info/blog/000410/&#34;&gt;感想はこちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-10-31&#34;&gt;2015-10-31&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 排除型社会 --&gt;
</content>
	</entry><entry>
		<title>Spiegelさん＠がんばらない</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2024/03/tekipaki-working/" />
		<id>tag:text.Baldanders.info,2024-03-23:/remark/2024/03/tekipaki-working/</id>
		<published>2024-03-23T00:44:18+00:00</published>
		<updated>2024-03-23T00:45:54+00:00</updated>
		<summary>たぶん「生産性の高い仕事」ってのは「がむしゃら」にがんばることではなく「てきぱき」さばくことだと思うのよ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今回のネタ元はこちら。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/tsukamoto/n/n8a03a4175572&#34;&gt;「がむしゃらに働く」って週60時間ぐらいまで｜塚本 牧生&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;念のために引用しておくと&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote cite=&#34;https://note.com/tsukamoto/n/n8a03a4175572&#34;&gt;ただし、ここでいうがむしゃらとは「週60〜65時間労働」です。 これは超えてはいけない過労死ラインで、また超えても成果がむしろ出なくなるラインなので、がむしゃらも度が過ぎないようにしてください。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://note.com/tsukamoto/n/n8a03a4175572&#34;&gt;「がむしゃらに働く」って週60時間ぐらいまで｜塚本 牧生&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ということだそうなので。
つか，まっとうな企業なら三六協定などでその辺は守られてると思うけど。&lt;/p&gt;
&lt;p&gt;個人的な感覚として「もう週50Hも無理」になってきた。
我ながら衰えたなぁと思う。
いや頑張ればできるのよ。
でもそこから回復に時間がかかるようになった。
週末休んでも追いつかないくらい。&lt;/p&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;ぺーぺーの新人の頃に言われたのが「仕事には必ず終わりがある」である。
私はこれを曲解して「終わりのない（見えない）仕事は仕事じゃない」と思っている。
精神的に削られるのは「終わりのない仕事」である。
終わりがあるからこそ最終直線のひと仕事を「がむしゃら」に駆け抜けることができる。&lt;/p&gt;
&lt;p&gt;たぶん「生産性の高い仕事」ってのは「がむしゃら」にがんばることではなく「てきぱき」さばくことだと思うのよ。
まぁ，それが難しいから「がむしゃら」に頑張ることでカバーしようとするんだけどね。
「てきぱき」さばくのって技能（スキル）だし。
だからといって，そこで「がむしゃら」を導入するのは根本からやり方を間違えてる。
「がむしゃら」は最後のひと鞭で発揮するからこそ効果が出るのである。&lt;/p&gt;
&lt;p&gt;&amp;hellip;というようなことをつらつらと考えたりした。
なので，やっぱり今年も「がんばらない」方向でよろしくお願いします。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00HY73M16?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51yk&amp;#43;9cbozL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00HY73M16?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;SAVED. ／ Be mine!&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;坂本　真綾 (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;FlyingDog 2014-02-05 (Release 2014-02-05)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B00HY73M16 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「世界征服〜謀略のズヴィズダー〜」OP曲。万能感溢れるノリのいい曲である（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-12-26&#34;&gt;2020-12-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Be mine! --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757700423?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/518JGPT6DEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757700423?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;てきぱきワーキン〓ラブ (5) (ビームコミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;竹本 泉 (著)&lt;/dd&gt;
    &lt;dd&gt;エンターブレイン 2000-05-01&lt;/dd&gt;
    &lt;dd&gt;コミック&lt;/dd&gt;
    &lt;dd&gt;4757700423 (ASIN), 9784757700420 (EAN), 4757700423 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに（「さよパラ」にも出てきた）アレックスの謎が解ける？&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-10-13&#34;&gt;2017-10-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- てきぱきワーキン♡ラブ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00FYKN2C4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51EE&amp;#43;Hx-J8L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00FYKN2C4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ささみさん@がんばらない【TBSオンデマンド】&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;高山カツヒコ (Writer), 新房昭之 (監督), ――― (プロデュース)&lt;/dd&gt;
    &lt;dd&gt; (Release 2013-05-15)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B00FYKN2C4 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2013年の作品なんだねぇ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-02-08&#34;&gt;2023-02-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ささみさん@がんばらない --&gt;
</content>
	</entry>
</feed>
