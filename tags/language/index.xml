<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Language - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/language/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/language/index.xml" />
	<id>tag:text.Baldanders.info,2015-11-17:/</id>
	<updated>2015-11-17T21:52:50+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.16</generator>

	
	<entry>
		<title>プログラミング言語との付き合い方 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/programming-language/" />
		<id>tag:text.Baldanders.info,2015-11-17:/remark/2015/programming-language/</id>
		<published>2015-11-17T21:52:50+09:00</published>
		<updated>2016-02-18T12:56:03+09:00</updated>
		<summary>こういう話は好きなので便乗してみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://rentwi.textfile.org/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれど&amp;hellip; - 結城浩の連ツイ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今朝見かけたこれ。
こういう話は好きなので便乗してみる。&lt;/p&gt;

&lt;p&gt;ちなみに，結城浩さんの通称「デザパタ本」はずい分昔に買っている。
お世話になってます。&lt;/p&gt;

&lt;h2 id=&#34;プログラミング言語の-母国語&#34;&gt;プログラミング言語の「母国語」&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;プログラミング言語との付き合い方というのはいろいろあってですね。自分の母国語という言語はある。それから現在学んでいる最中の言語というのもある。そして、仕事用の言語やら、他の人とのコミュニケーション用言語というのもある。そのあたりは、自然言語とちょっと似ている。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://rentwi.textfile.org/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれど...&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;個人的に母国語と言えるのはアセンブラとC言語。
私の場合はコードを脳内でインストラクションに翻訳する。
手続き型の言語ならこの「翻訳」をほとんど無意識でできる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
だから手続き型の言語であれば知らない言語でも見ればだいたい理解できる。&lt;/p&gt;

&lt;p&gt;逆に，関数型のような非手続き型言語はあまり得意ではないのだが，簡単なものであれば手続き型に翻訳できるので，簡単なものを組み合わせて考えることで，まぁ何とか理解することはできる。&lt;/p&gt;

&lt;h3 id=&#34;ちまりまわるつ&#34;&gt;ちまりまわるつ&lt;/h3&gt;

&lt;p&gt;そういえば，竹本泉さんの作品に『ちまりまわるつ』シリーズというのがある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
このシリーズの世界では「魔法」が科学的（？）に体系化されていて，工場で生産できるようになっている。なので，人力（？）で魔法を使う「魔法使い」は（工場で生産できない高度な魔法を使うことのできる一部の大魔法使いを除いては）古臭い職業として子供たちからは敬遠されている。
魔法使い達は能力でランク分けされていて，低ランクの魔法使いは簡単な呪文で簡単な魔法しか使えない。&lt;/p&gt;

&lt;p&gt;でもここからが竹本泉作品らしいところで，簡単な呪文しか使えない魔法使いも呪文を組み合わせることで高度な魔法を使うことができるのだ（ただし高度な魔法は制御が難しいので，ふつうは使わせてもらえない）。
プログラムに例えるなら，高級言語で1行で書けるプログラムをアセンブラで数十ステップで書くような感じだと思えばよい。&lt;/p&gt;

&lt;p&gt;こういう世界設定を少女漫画でさらっと描いてしまうところが竹本泉さんの凄いところである。&lt;/p&gt;

&lt;h3 id=&#34;目的別の言語&#34;&gt;目的別の言語&lt;/h3&gt;

&lt;p&gt;話が逸れた。&lt;/p&gt;

&lt;p&gt;そういうわけなので個人的に「学んでいる最中の言語」というのはない。
見て理解できるかできないか。
いや，ぺーぺーの新人の頃はアセンブラやC言語を必死こいて学んでいたが，一度基礎ができればあとは全部「応用編」なのである。
そういう意味じゃ「今現在学んでない言語なんかない」とも言えるか&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a2&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;私は職業プログラマなので当然「仕事用の言語」というのは存在するが，「コミュニケーション用言語」というのはないな。
『数学ガール』冒頭のミルカさんの登場シーンはなかなかインパクトがあるが，あんな感じだろうか。&lt;/p&gt;

&lt;p&gt;プログラマにとって最も信頼できる言葉は「動くコード」なので，ある意味で「仕事用の言語」が「コミュニケーション用言語」と言えるかもしれない。
ただ，職業プログラマは非プログラマとも話ができないといけない。
というか，大抵の顧客はそう。
顧客の「言語化されない意図」をいかに聞き取れるかが重要。
ホンマ「コミュニケーション用言語」なるものがあるなら欲しいよ。&lt;/p&gt;

&lt;p&gt;あぁでも，&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000869.shtml&#34;&gt;要求開発&lt;/a&gt;で使う「概念モデリング」は「コミュニケーション用言語」と言えなくもない？&lt;/p&gt;

&lt;h2 id=&#34;言語を巡る愛憎&#34;&gt;言語を巡る愛憎&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;自然言語と同じようにプログラミング言語を使う人（要はプログラマ）には、その言語に対する愛情がこもる（愛憎がこもる）。なので、エンジニアリングや効率の話題と思っているのにいつのまにか忠誠心や貢献度みたいな話になることも。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://rentwi.textfile.org/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれど...&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;仕事でプログラミングを行う際に言語を選べることはほとんどない。
顧客が指定してくることもあるし（顧客がコード資産を持っている），プロジェクト管理者が指定してくることもある（すでにある資産を使おうとする）。
そうじゃない場合でも要求と予算と期間とプロジェクトの面子によって（つまりそれを使うメリットとか関係なしに）言語が決まってしまう。&lt;/p&gt;

&lt;p&gt;もし，そういうのが一切ないのなら，今なら &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;か JavaScript/&lt;a href=&#34;http://electron.atom.io/&#34; title=&#34;Electron&#34;&gt;Electron&lt;/a&gt; がいいなぁ。
これらで十分だよね。&lt;/p&gt;

&lt;p&gt;一時期は Ruby も好きだったが，きれいさっぱり忘れてしまった。
今では Ruby の最新バージョンがいくつかさえ知らない。
なんか Rails 以降，凄い面倒くさいイメージがあるんだよね。
ある機能を Ruby で実装した記事を見かけたら，同じ機能を他の言語でもっと簡単にできないか，つい探してしまう。
こういうのが「宗教的」って言われるんだろうな，きっと（笑）&lt;/p&gt;

&lt;p&gt;まぁ，でも，上で書いたように仕事で言語を選べることはほとんどないので，「グダグダ言わずにコード書け」って感じだけど。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;【12月21日 追記】&lt;/strong&gt;
フィードバックで Python について言及があったので。
Python は Linux 等では実質的に（少なくとも Ruby よりは）標準言語のようになっているし，資産も豊富なのでちゃんと覚えなきゃなぁ，とは思ってる。
しかし構文にインデントが必須な言語構造はどうしても慣れない。
同じ理由で Haskell や CoffeeScript とかも馴染めない。&lt;/p&gt;

&lt;p&gt;プログラムコードをもっと human-understandable に，という考え方は分からなくもないけど，それなら &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;のようにフォーマッタやドキュメントフレームワークを標準で用意するほうが賢いと思う。
私はもうプログラミングで（タブだの全角空白だのも含めた）空白文字に煩わされたくない。&lt;/p&gt;

&lt;p&gt;とはいえ，こういうのは「慣れ」の問題なので，仕事でやれと言われれば喜んでやりますよ。&lt;/p&gt;

&lt;h2 id=&#34;ひとつのプログラミング言語に縛られることの恐さ&#34;&gt;ひとつのプログラミング言語に縛られることの恐さ&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;一つの技術に縛られることの恐さは、エンジニアなら誰でも知っている。では一つのプログラミング言語に縛られることの恐さは知っているか。一つのプログラミング言語がパーフェクトなことはない。時代が変われば要請も変わる。リソース配分は時々刻々変わる。そんな中で何にコミットするか。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://rentwi.textfile.org/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれど...&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;手続き型言語の弱点は「ノイマン型コンピュータ」に最適化されていることだ。&lt;/p&gt;

&lt;p&gt;ノイマン型コンピュータの構造はプロセッサとメモリが分かれているのが特徴で&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:b&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;，メモリから命令を順番にプロセッサにフェッチして実行していく。&lt;/p&gt;

&lt;p&gt;もちろん「非ノイマン型コンピュータ」というのもある。
典型的なのは，いわゆるニューロチップである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35073012/&#34;&gt;脳を模したチップ「TrueNorth」でコンピューティング革命を模索するIBM - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こういうタイプのコンピュータは（ノイマン型コンピュータで言うところの）プロセッサとメモリがセットでひとつの素子になっているのが特徴で，しかも素子同士はお互いに非同期で動く。
こういうのが本気で市場に台頭してきたら私のようなロートル・エンジニアはお払い箱だ。&lt;/p&gt;

&lt;h2 id=&#34;若い人が正しい&#34;&gt;若い人が正しい&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;いつの時代でも、若い人は自由だ。何でも選べる。何でも言える。ときにはバカにされるかもしれない。わかってないよと侮られるかもしれない。でも、ほとんどの場合、若い人が正しい。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://rentwi.textfile.org/?666213569055166464s&#34;&gt;考えてみると結城はC, Perl, Javaの本は書いたけれど...&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;先のことは誰にもわからない。
特に今の時代は。
だから「より多くの未来を持っている人」が正しいと言える。
私のように人生の残り時間を勘定している人ではない。&lt;/p&gt;

&lt;p&gt;願わくば「何でも選べる。何でも言える」未来を引き渡したいものである。&lt;/p&gt;

&lt;h2 id=&#34;おまけ-tensorflow-に関するブックマーク&#34;&gt;【おまけ】 TensorFlow に関するブックマーク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;#feedback&#34;&gt;フィードバック&lt;/a&gt;で &lt;a href=&#34;http://tensorflow.org/&#34; title=&#34;TensorFlow is an Open Source Software Library for Machine Intelligence&#34;&gt;TensorFlow&lt;/a&gt; について言及があったので，ついでに。&lt;/p&gt;

&lt;p&gt;（この項は「&lt;a href=&#34;http://text.baldanders.info/remark/2016/02/tensorflow/&#34;&gt;TensorFlow に関するブックマーク&lt;/a&gt;」に移動しました）&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00EYXMA9I/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41ETMZ7i9qL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00EYXMA9I/baldandersinf-22/&#34;&gt;数学ガール&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ株式会社 2014-02-14&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1CM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガール／フェルマーの最終定理&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1D6/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00I8AT1D6.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガール／ゲーデルの不完全性定理&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;「数学ガール」シリーズ第1作目。ミルカさん衝撃の登場から分割数まで。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-06-06&#34;&gt;2015/06/06&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:0&#34;&gt;たとえば，C言語では「ポインタ」の概念でよく躓くと言われているが，インストラクションで考えれば実にシンプル。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1&#34;&gt;多分もう絶版。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a1&#34;&gt;評価を中断している言語はある。 Erlang とか Scala とか Haskell とか。仕事で絡むようなことがあれば是非やりたい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a2&#34;&gt;そう考えると，私にとって &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;はちょっと例外的かも。今のところ身近に &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;を使った仕事がないということもあるが，仕事抜きで完全に&lt;a href=&#34;http://text.baldanders.info/golang&#34;&gt;「遊び」でやってる&lt;/a&gt;。はっきり言って C/C++ や初期の Java 以来「これでなに作ろうかな」って思わせる言語に久しぶりに出会った感じ。もっとも，今は仕事が忙しすぎて全然かまってあげられないのだが orz
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;キャッシュやパイプライン等の話はとりあえずチャイしてね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
