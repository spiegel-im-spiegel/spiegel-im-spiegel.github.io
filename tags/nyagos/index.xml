<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Nyagos - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/nyagos/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/nyagos/index.xml" />
	<id>tag:text.Baldanders.info,2018-06-03:/tags</id>
	<updated>2018-06-03T18:16:56+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.51</generator>

	
	<entry>
		<title>NYAGOS 4.3.1 がリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/06/nyagos-4_3_1-is-released/" />
		<id>tag:text.Baldanders.info,2018-06-03:/release/2018/06/nyagos-4_3_1-is-released/</id>
		<published>2018-06-03T18:16:56+09:00</published>
		<updated>2018-06-24T14:23:49+09:00</updated>
		<summary>いくつかの起動時オプションが追加された。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.1_0&#34;&gt;Release 4.3.1_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いくつかの起動時オプションが追加された。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Support Windows10&#39;s native ESCAPE SEQUENCE processing with &lt;code&gt;--no-go-colorable&lt;/code&gt; and &lt;code&gt;--enable-virtual-terminal-processing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For #304,#312, added options to search for the executable from the current directory

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-first&lt;/code&gt;: do before %PATH% (compatible with CMD.EXE)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-last&lt;/code&gt; : do after %PATH% (compatible with PowerShell)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-never&lt;/code&gt;: never (compatible with UNIX Shells)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;nyagos.prompt can now be assigned string literal as prompt template directly.&lt;/li&gt;
&lt;li&gt;Fix #314 rmdir could not remove junctions.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--no-go-colorable&lt;/code&gt; と &lt;code&gt;--enable-virtual-terminal-processing&lt;/code&gt; で、Windows10 ネイティブのエスケープシーケンスをサポート&lt;/li&gt;
&lt;li&gt;#304,#312, カレントディレクトリから実行ファイルを探す時のオプションを追加

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-first&lt;/code&gt;: &lt;code&gt;%PATH%&lt;/code&gt; より前に探す(デフォルト:CMD.EXE互換動作)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-last&lt;/code&gt; : &lt;code&gt;%PATH%&lt;/code&gt; より後に探す(PowerShell互換動作)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--look-curdir-never&lt;/code&gt;: &lt;code&gt;%PATH%&lt;/code&gt; だけから実行ファイルを探す(UNIX Shells互換動作)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;nyagos.prompt にプロンプトテンプレートの文字列を直接代入できるようになった。&lt;/li&gt;
&lt;li&gt;#314 rmdir がジャンクションを削除できなかった問題を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.1_0&#34;&gt;Release 4.3.1_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【追記 2018-06-24】&lt;/strong&gt;
下記の件は 4.3.1_3 で改修されたようだ。
&lt;code&gt;--look-curdir-never&lt;/code&gt; 指定時はカレントディレクトリ直下の &lt;code&gt;hoge.exe&lt;/code&gt; は &lt;code&gt;./hoge&lt;/code&gt; でのみ起動する。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;実行ファイルの検索オプションだが &lt;code&gt;--look-curdir-never&lt;/code&gt; について &lt;code&gt;--look-curdir-last&lt;/code&gt; との違いがよく分からなかったり。
たとえばカレントディレクトリに &lt;code&gt;hoge.exe&lt;/code&gt; があって PATH 上に同名のファイルが存在しない場合に，どちらのオプションでも&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ hoge&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で起動してしまう。
私としては &lt;code&gt;--look-curdir-never&lt;/code&gt; 指定時は &lt;code&gt;./hoge&lt;/code&gt; のみで起動することを期待したのだが違うのだろうか。
まぁ，大した問題ではないのでよかろう。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;にしても，コマンドプロンプトと PowerShell ってそんなところで挙動が違うんだなぁ。
いいのか，それ。&lt;/p&gt;

&lt;h2 id=&#34;追記-2018-06-24-nyagos-4-3-1-1-がリリース&#34;&gt;【追記 2018-06-24】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.1_1 がリリース&lt;/h2&gt;

&lt;p&gt;不具合等の改修。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Remove source code for lua53.dll&lt;/li&gt;
&lt;li&gt;#317: deadlock when &lt;code&gt;use &amp;quot;subcomplete&amp;quot;&lt;/code&gt; is enabled and rclone.exe is found.

&lt;ul&gt;
&lt;li&gt;See also: &lt;a href=&#34;https://github.com/yuin/gopher-lua/issues/181&#34;&gt;yuin/gopher-lua#181&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;#318,#319: add compatible functions with lua 5.3

&lt;ul&gt;
&lt;li&gt;bit32.band/bitor/bxor&lt;/li&gt;
&lt;li&gt;utf8.char/charpattern/codes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;lua53.dll 向けのソースコードを削除&lt;/li&gt;
&lt;li&gt;#317: &lt;code&gt;use subcomplete&lt;/code&gt; が有効で、rclone.exe が見付かった時デッドロックしていた

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuin/gopher-lua/issues/181&#34;&gt;yuin/gopher-lua#181&lt;/a&gt; も参照のこと&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;#318,#319 下記の Lua 5.3 互換関数を追加

&lt;ul&gt;
&lt;li&gt;bit32.band/bitor/bxor&lt;/li&gt;
&lt;li&gt;utf8.char/charpattern/codes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.1_1&#34;&gt;Release 4.3.1_1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;追記-2018-06-24-nyagos-4-3-1-2-がリリース&#34;&gt;【追記 2018-06-24】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.1_2 がリリース&lt;/h2&gt;

&lt;p&gt;不具合等の改修。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;#320: fix the imcompatibility: nyagos.rawexec &amp;amp; raweval did not expand tables in arguments.&lt;/li&gt;
&lt;li&gt;--show-version-only enables --norc automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;#320: nyagos.rawexec &amp;amp; raweval が引数内のテーブルを展開していなかった非互換性を修正&lt;/li&gt;
&lt;li&gt;--show-version-only を指定すると --norc を自動的に有効化するようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.1_2&#34;&gt;Release 4.3.1_2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;追記-2018-06-24-nyagos-4-3-1-3-がリリース&#34;&gt;【追記 2018-06-24】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.1_3 がリリース&lt;/h2&gt;

&lt;p&gt;不具合等の改修。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;#316 Fix: zero-length directory-name in %PATH% is regarded as the current directory&lt;/li&gt;
&lt;li&gt;#321 Fix: key function names &lt;code&gt;previous_history&lt;/code&gt; &amp;amp; &lt;code&gt;next_history&lt;/code&gt; were not registered.&lt;/li&gt;
&lt;li&gt;Add -h and --help option&lt;/li&gt;
&lt;li&gt;Lines starting with &lt;code&gt;@&lt;/code&gt; of Lua script are now ignored to embed into batchfile.&lt;/li&gt;
&lt;li&gt;#322 Fix: change the encoding for batchfile&#39;s parameters from Thread Codepage to Console Codepage #322&lt;/li&gt;
&lt;li&gt;All of lua variables &lt;code&gt;nyagos.option.*&lt;/code&gt; are now able to be set by nyagos.exe&#39;s command-line option.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;#316 %PATH% の中の長さゼロのエントリがカレントディレクトリとみなされていた不具合を修正&lt;/li&gt;
&lt;li&gt;#321 キー機能名の &lt;code&gt;previous_history&lt;/code&gt; と &lt;code&gt;next_history&lt;/code&gt; が未登録だった不具合を修正&lt;/li&gt;
&lt;li&gt;-h,--help オプションを追加&lt;/li&gt;
&lt;li&gt;バッチファイル組み込みのため、Luaスクリプトの &lt;code&gt;@&lt;/code&gt; で始まる行を無視するようにした&lt;/li&gt;
&lt;li&gt;#322 バッチファイルの引数のエンコーディングをスレッドのコードページから、コンソールのコードページへ変更した。&lt;/li&gt;
&lt;li&gt;Lua変数 &lt;code&gt;nyagos.option.*&lt;/code&gt; の全てを nyagos.exe のコマンドラインオプションで設定できるようにした。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.1_3&#34;&gt;Release 4.3.1_3&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.3 で GopherLua が採用される - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/04/nyagos-4_3/" />
		<id>tag:text.Baldanders.info,2018-04-30:/release/2018/04/nyagos-4_3/</id>
		<published>2018-04-30T18:49:39+09:00</published>
		<updated>2018-05-13T13:24:15+09:00</updated>
		<summary>NYAGOS 4.3 で Lua の Go 言語実装のひとつである GopherLua が採用された。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（正式版が出たので内容を更新した 2018-05-07）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3 で &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;実装のひとつである &lt;a href=&#34;https://github.com/yuin/gopher-lua&#34; title=&#34;yuin/gopher-lua: GopherLua: VM and compiler for Lua in Go&#34;&gt;GopherLua&lt;/a&gt; が採用された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/112484eb7fdae87830a0&#34;&gt;nyagos で lua53.dll のかわりに GopherLua を使おう - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/18597ed77c4574796c7b&#34;&gt;続・nyagos で lua53.dll のかわりに GopherLua を使おう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3_beta&#34;&gt;Release 4.3_beta · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3_beta2&#34;&gt;Release 4.3_beta2 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_0&#34;&gt;Release 4.3.0_0 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下に変更点をまとめて紹介する。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use Gopher-Lua instead of lua53.dll&lt;/strong&gt; #300

&lt;ul&gt;
&lt;li&gt;nyagos with lua53.dll (mains.exe) can be built with &lt;code&gt;cd mains ; go build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;nyagos with no Lua (ngs.exe) can be built with &lt;code&gt;cd ngs ; go build&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Made &lt;code&gt;nyagos.option.cleanup_buffer&lt;/code&gt; (default=false). When it is true, clean up console input buffer before readline.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set -o OPTION_NAME&lt;/code&gt; and &lt;code&gt;set +o OPTION_NAME&lt;/code&gt; (=&lt;code&gt;nyagos.option.OPTION_NAME=&lt;/code&gt; on Lua)&lt;/li&gt;
&lt;li&gt;Buffer console-output ( go-colorable and bufio.Writer )
^ Fix: Typing C-o looks to raise hang up until Enter or ESCAPE is typed (on 4.3beta) #303

&lt;ul&gt;
&lt;li&gt;Fix the library: &lt;a href=&#34;https://github.com/zetamatta/go-box/commit/322b2318471f1ad3ce99a3531118b7095cdf3842&#34;&gt;go-box&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fix: chcp did not work. (&lt;code&gt;chcp&lt;/code&gt; was aliaes to update memory of screen width)&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;ls -L&lt;/code&gt; which shows information for the file refernces rather than for the link it self. (because ls could not show the directories in OneDrive )&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lua53.dll のかわりに Gopher-Lua を採用&lt;/strong&gt; #300

&lt;ul&gt;
&lt;li&gt;旧来の lua53.dll 版 nyagos (mains.exe) は &lt;code&gt;cd mains ; go build&lt;/code&gt; でビルド可能&lt;/li&gt;
&lt;li&gt;Lua無し版 nyagos (ngs.exe) は &lt;code&gt;cd ngs ; go build&lt;/code&gt; でビルド可能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.option.cleanup_buffer&lt;/code&gt; を追加(デフォルトは false)。true の場合、一行入力の前にコンソールバッファをクリアする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set -o OPTION_NAME&lt;/code&gt; と &lt;code&gt;set +o OPTION_NAME&lt;/code&gt; を新設(&lt;code&gt;nyagos.option.OPTION_NAME=&lt;/code&gt; on Lua と等価)&lt;/li&gt;
&lt;li&gt;コンソール出力をバッファリングするようにした ( go-colorable and bufio.Writer )&lt;/li&gt;
&lt;li&gt;C-o を押すと Enter か Escape が押されるまでハングしたように見える不具合を修正

&lt;ul&gt;
&lt;li&gt;(ライブラリを修正: &lt;a href=&#34;https://github.com/zetamatta/go-box/commit/322b2318471f1ad3ce99a3531118b7095cdf3842&#34;&gt;go-box&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;chcp が動作しない不具合を修正 (同コマンドは画面幅取得のため別名定義していた)&lt;/li&gt;
&lt;li&gt;シンボリックリンクの先を参照するオプション &lt;code&gt;ls -L&lt;/code&gt; を追加（OneDrive内のディレクトリーが表示できなかったため）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_0&#34;&gt;Release 4.3.0_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;起動時のバージョン表記は以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Nihongo Yet Another GOing Shell 4.3.0_2-amd64 by go1.10.2
Powered by GopherLua 0.1
(c) 2014-2018 NYAOS.ORG &amp;lt;http://www.nyaos.org&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;私も以前 &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;実装についてちょろんと調べたことがあるのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/golang/lua/&#34;&gt;Go 言語による Lua 実装を試してみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このときは別のパッケージでしかも args などのグローバル変数の設定の仕方がよく分からなくて放置していたのだ（ゴメンペコン）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;は組込み用途のコードも書けるので，そこに &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; エンジンを（&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;ネイティブで）組み込めるというのは意義が大きいと思う。
例えば現在のツールの多くは設定情報を YAML や TOML などで記述するが，  &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で設定を記述できるのなら，ちょっとしたロジックを組み込むことも可能になる。
実際に &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; ではコマンドの alias に &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; コードを組み込むことができる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; で &lt;a href=&#34;https://github.com/yuin/gopher-lua&#34; title=&#34;yuin/gopher-lua: GopherLua: VM and compiler for Lua in Go&#34;&gt;GopherLua&lt;/a&gt; を組み込んでくれるのなら，是非ソースコードも読んでノウハウを勉強したい。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【追記 2018-05-07】&lt;/strong&gt; 4.3.0 にアップグレードして起動した際に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;C:\Users\username\AppData\Roaming\NYAOS_ORG\amd64.nyagos.luac line:1(column:1) near &amp;#39;←&amp;#39;:   Invalid token&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と警告が出た。
古いファイルなのかな？&lt;/p&gt;

&lt;p&gt;この場合は &lt;code&gt;C:\Users\username\AppData\Roaming\NYAOS_ORG&lt;/code&gt; フォルダの中身を掃除すればいいようだ。
なお，このフォルダにある &lt;code&gt;nyagos.history&lt;/code&gt; ファイルは名前の通りコマンド履歴なのでご注意を。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;追記-2018-05-07-nyagos-4-3-0-1-がリリース&#34;&gt;【追記 2018-05-07】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.0_1 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_1&#34;&gt;Release 4.3.0_1 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正のみ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Fix: nyagos.d/start.lua did not worked because the member &lt;code&gt;rawargs&lt;/code&gt; of alias-function&#39;s argument was not implemented.&lt;/li&gt;
&lt;li&gt;Fix: the return value of alias-function was not evaluted.&lt;/li&gt;
&lt;li&gt;Fix: for the script in -e option, &lt;code&gt;arg[]&lt;/code&gt; was not assinged.&lt;/li&gt;
&lt;li&gt;Fix: On -f &amp;amp; -e option, warned as &lt;code&gt;getRegInt: could not find shell in Lua instanc e&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix: batchfile cound not return the value of &lt;code&gt;exit /b&lt;/code&gt; as ERRORLEVEL&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;nyagos.d/start.lua が動作していなかった不具合を修正 (エイリアス関数の &lt;code&gt;rawargs&lt;/code&gt; パラメータが実装されていなかった)&lt;/li&gt;
&lt;li&gt;alias 関数の戻り値が評価されていなかった不具合を修正&lt;/li&gt;
&lt;li&gt;-e オプションのスクリプト向けに、&lt;code&gt;arg[]&lt;/code&gt; に引数が代入されていなかった&lt;/li&gt;
&lt;li&gt;-e,-f オプションで、&lt;code&gt;getRegInt: could not find shell in Lua instance&lt;/code&gt; が表示される不具合を修正&lt;/li&gt;
&lt;li&gt;バッチファイルが &lt;code&gt;exit /b&lt;/code&gt; の値を ERRORLEVEL として返せなかった不具合を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_1&#34;&gt;Release 4.3.0_1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;追記-2018-05-07-nyagos-4-3-0-2-がリリース&#34;&gt;【追記 2018-05-07】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.0_2 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_2&#34;&gt;Release 4.3.0_2 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正のみ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;#305: Fix issue that user&#39;s .nyagos was not loaded again (Thx! @erw7)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;#305: ユーザの .nyagos が二回目以降ロードされない不具合を修正(Thx! @erw7)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_2&#34;&gt;Release 4.3.0_2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;追記-2018-05-10-nyagos-4-3-0-3-がリリース&#34;&gt;【追記 2018-05-10】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.0_3 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_3&#34;&gt;Release 4.3.0_3 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正。
着々と改善されています。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Fix: forgot implement nyagos.setalias , nyagos.getalias (&lt;code&gt;alias { CMD=XXX}&lt;/code&gt; did not work.)&lt;/li&gt;
&lt;li&gt;Fix: that the element [0] of the table value returned by alias-function was not used as the new command name to evaluate.&lt;/li&gt;
&lt;li&gt;Fix: &lt;code&gt;doc/09-Build_*.md&lt;/code&gt; about how to download sourcefiles from github&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;nyagos.setalias, nyagos.getalias の実装が漏れており、&lt;code&gt;alias { CMD=XXX}&lt;/code&gt; が動かなくなっていた&lt;/li&gt;
&lt;li&gt;エイリアスの戻り値でテーブルが与えられた時、コマンド名として解釈すべき、要素[0]が使われていなかった不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;doc/09-Build_*.md&lt;/code&gt;: github からのソースダウンロード方法についてドキュメント更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_3&#34;&gt;Release 4.3.0_3&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;追記-2018-05-13-nyagos-4-3-0-4-がリリース&#34;&gt;【追記 2018-05-13】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.3.0_4 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_4&#34;&gt;Release 4.3.0_4 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正。
着々と改善されています。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Fix: #309 nyagos.getkey() raised panic (Thx @nocd5)&lt;/li&gt;
&lt;li&gt;Fix: error-message when command &lt;code&gt;lnk&lt;/code&gt;&#39;s target is not &lt;code&gt;*.lnk&lt;/code&gt; nor exist.&lt;/li&gt;
&lt;li&gt;Fix: the cursor blink was switched to off on the child process.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Fix: #309 nyagos.getkey() が使えない不具合を修正 (Thx @nocd5)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lnk&lt;/code&gt; コマンドの宛先が &lt;code&gt;*.lnk&lt;/code&gt; でなかったり存在しなかった時のエラーメッセージを修正&lt;/li&gt;
&lt;li&gt;子プロセスのカーソルがオフになってしまう不具合を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.3.0_3&#34;&gt;Release 4.3.0_3&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://inforno.net/articles/2015/02/15/gopher-lua-released&#34;&gt;inforno :: LuaのGo言語実装を公開しました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/nocd5/items/1736064cd9ee652d5920&#34;&gt;nyagos 4.3でもmigemoでディレクトリ移動したい! - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.5 のリリースと環境変数の扱い - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_5_beta-released/" />
		<id>tag:text.Baldanders.info,2018-03-27:/release/2018/03/nyagos-4_2_5_beta-released/</id>
		<published>2018-03-27T19:47:59+09:00</published>
		<updated>2018-04-18T09:57:00+09:00</updated>
		<summary>このバージョンからバッチファイル実行時の環境変数の扱いが変わるようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（正式版がリリースされたので改題しました）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.5 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_beta&#34;&gt;Release 4.2.5_beta · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_beta2&#34;&gt;Release 4.2.5_beta2 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_0&#34;&gt;Release 4.2.5_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下に変更点をまとめて紹介する。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Read the value of environment variables and the current directory that a batchfile changed like CMD.EXE.&lt;/li&gt;
&lt;li&gt;And refactored a lot of source files&lt;/li&gt;
&lt;li&gt;Fix: #296 the batchfile could not be executed when the username contains multibyte-character.

&lt;ul&gt;
&lt;li&gt;Fix that the encoding of the temporary batchfile was UTF8.&lt;/li&gt;
&lt;li&gt;Fix that the end of the each line of the temporary batchfile was LF not CRLF.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fix: #297 running the batchfile includes exit without /b option, an error occurs&lt;/li&gt;
&lt;li&gt;Add Lua-flag: nyagos.option.usesource. When it is false, batchfiles can not change nyagos&#39;s environment variables and directory.(default:true)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;CMD.EXE と同様に、バッチファイルが変更した環境変数・カレントディレクトリを読み取るようにした。&lt;/li&gt;
&lt;li&gt;ソースの幾つかを派手にリファクタリングした。&lt;/li&gt;
&lt;li&gt;#296 ユーザ名にマルチバイト文字が入っていると、バッチが正常動作しない不具合を修正

&lt;ul&gt;
&lt;li&gt;一時バッチファイルのエンコーディングが UTF8 になっていた&lt;/li&gt;
&lt;li&gt;一時バッチファイルの改行コードが CRLF ではなく LF になっていた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;#297 /b なしの exit をバッチファイルが実行した時、一時ファイルが無い旨のエラーがでていた&lt;/li&gt;
&lt;li&gt;luaフラグ nyagos.option.usesource を追加。false の時、バッチファイルは NYAGOS の環境変数を変更できなくなる(default:true)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_0&#34;&gt;Release 4.2.5&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで，このバージョンからバッチファイル（&lt;code&gt;*.bat&lt;/code&gt;, &lt;code&gt;*.cmd&lt;/code&gt;）実行時の環境変数の扱いが変わるようだ。
詳しくは以下を参照のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/efff93d92ac2150192fb&#34;&gt;NYAGOS 4.2.5βが、いかにしてバッチファイルでの環境変数の変更取り込みを可能としたか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;個人的にはバッチファイルで環境変数が汚れるのは好みではなかったので &lt;code&gt;source&lt;/code&gt; コマンドのみで環境変数を変えられるという仕様は結構気に入っていたのだが，まぁいいか。
問題ない。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【追記 2018-03-31】&lt;/strong&gt; &lt;code&gt;nyagos.option.usesource&lt;/code&gt; オプションを追加していただいた。
これを &lt;code&gt;false&lt;/code&gt; にすれば従来どおり &lt;code&gt;source&lt;/code&gt; コマンドのみで環境変数を変更できる。
ホームディレクトリの &lt;code&gt;.nyagos&lt;/code&gt; に追記しておけばいいだろう。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;追記-2018-04-18-nyagos-4-2-5-1-がリリース&#34;&gt;【追記 2018-04-18】 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.5_1 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_1&#34;&gt;Release 4.2.5_1 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正のみ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Fix: &lt;code&gt;if [not] errorlevel N&lt;/code&gt; did not work on block-if.&lt;/li&gt;
&lt;li&gt;Fix: that &lt;code&gt;ls -1F&lt;/code&gt; did not show the indicator such as &lt;code&gt;/&lt;/code&gt;,&lt;code&gt;*&lt;/code&gt; or &lt;code&gt;@&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Fix: the problem that executables reparse-pointed but not symbolic-linked can not be found. ★&lt;/li&gt;
&lt;li&gt;Fix: &lt;code&gt;ls -F&lt;/code&gt; marked &#39;&lt;code&gt;@&lt;/code&gt;&#39; to files and directories which ar reparse-pointed but not symbolic-link nor junction&lt;/li&gt;
&lt;li&gt;Changed the error message when the command history is called in &lt;code&gt;_nyagos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;★ This is the reason that executables in OneDrive can not be called.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;ブロックif で &lt;code&gt;if [not] errorlevel N&lt;/code&gt; が動かなかった不具合を修正&lt;/li&gt;
&lt;li&gt;リパースポイント先の実行ファイルが見付からなくなっている問題を修正（※）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -1F&lt;/code&gt; が &lt;code&gt;/&lt;/code&gt;,&lt;code&gt;*&lt;/code&gt; や &lt;code&gt;@&lt;/code&gt; といったインジケーターを出力しない問題を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -F&lt;/code&gt; が「リパースポイントではあるが、ジャンクション、シンボリックリンクでないファイル・ディレクトリ」に &lt;code&gt;@&lt;/code&gt; マークをつけていた不具合を修正&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_nyagos&lt;/code&gt; で history コマンドを使った時のエラーメッセージを変更&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（※ OneDrive の下においた実行ファイルが実行できなくなる問題の原因がコレです）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.5_1&#34;&gt;Release 4.2.5_1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;付録-環境変数の汚染を防ぐには&#34;&gt;【付録】 環境変数の汚染を防ぐには&lt;/h2&gt;

&lt;p&gt;バッチファイルで環境変数を汚さないようにするには &lt;code&gt;setlocal ... endlocal&lt;/code&gt; で囲めばよい&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sl1&#34;&gt;&lt;a href=&#34;#fn:sl1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
しかも入れ子にできる。
たとえばフィボナッチ数を数え上げる処理はこんな感じ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:de1&#34;&gt;&lt;a href=&#34;#fn:de1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;setlocal&lt;/span&gt; enabledelayedexpansion

&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%~&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 1 &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 1&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt; &amp;amp;&amp;amp; goto :end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 1&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 2 &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 2&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt; &amp;amp;&amp;amp; goto :end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; 2&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;%b2%&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/l&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;i &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;%n%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b1! + !b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;%%&lt;/span&gt;i&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;!b2!&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;endlocal&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;/a&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;fib&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%~1&lt;/span&gt;th Fibonacci number is &lt;span class=&#34;nv&#34;&gt;%fib%&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;endlocal&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;endlocal &amp;amp;&amp;amp; set /a fib = %b2%&lt;/code&gt; で &lt;code&gt;setlocal ... endlocal&lt;/code&gt; スコープの外に値を持ち出している点に注目。&lt;/p&gt;

&lt;p&gt;これを実行すると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;C:&amp;gt; fibonacci.cmd 10
1: 0
2: 1
3: 1
4: 2
5: 3
6: 5
7: 8
8: 13
9: 21
10: 34
10th Fibonacci number is 34

C:&amp;gt; set fib
環境変数 fib が定義されていません

C:&amp;gt; set b2
環境変数 b2 が定義されていません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/IIJIMAS/20101023/1287772847&#34;&gt;バッチファイルで、setlocal～endlocal内での変数の値を外部に引き継ぎたい！ - IIJIMASの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sawa_tsuka/items/67be34bab1fdf3fb87f9&#34;&gt;.bat（バッチファイル）のforコマンド解説。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sawa_tsuka/items/c7c477cacf8c97792e17&#34;&gt;バッチファイル界の魔境『遅延環境変数』に挑む（おまけもあるよ） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:sl1&#34;&gt;時々 &lt;code&gt;setlocal&lt;/code&gt; と &lt;code&gt;endlocal&lt;/code&gt; がペアになっていない記述を見かける（特に遅延環境変数の説明とか）。 &lt;code&gt;endlocal&lt;/code&gt; がなくても別にエラーになったりはしないしちゃんと動くのだが（バッチ終了時に全スコープが閉じられるので），プログラマならスコープは正しく書こうね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:de1&#34;&gt;コード内の &lt;code&gt;enabledelayedexpansion&lt;/code&gt; は遅延環境変数を有効にするオプション。 &lt;code&gt;!fib!&lt;/code&gt; などがこれに該当する。 &lt;code&gt;for&lt;/code&gt; 文や &lt;code&gt;if&lt;/code&gt; 文の &lt;code&gt;( ... )&lt;/code&gt; で囲まれた部分で環境変数を操作する場合に必要。遅延環境変数は &lt;code&gt;setlocal ... endlocal&lt;/code&gt; スコープ内でしか有効にできない点に注意。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:de1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.4_0 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_4_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-11:/release/2018/03/nyagos-4_2_4_0-released/</id>
		<published>2018-03-11T15:28:00+09:00</published>
		<updated>2018-03-27T13:50:56+09:00</updated>
		<summary>細かい機能の変更や修正がメイン。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.4_0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;細かい機能の変更や修正がメイン。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load &lt;code&gt;nyagos.d/*.ny&lt;/code&gt; as batchlike file&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; forbides overwriting existing file by redirect.&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; and &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; enable to overwrite the file already existing by redirect even if &lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;#270: Console input buffer has been cleaned up when prompt is drawn.&lt;/li&gt;
&lt;li&gt;#228: Completion supports $ENV[TAB]... by native&lt;/li&gt;
&lt;li&gt;#275: Fix: history substitution like &lt;code&gt;!str:$&lt;/code&gt; , &lt;code&gt;!?str?:$&lt;/code&gt; did not work.&lt;/li&gt;
&lt;li&gt;The error &lt;code&gt;event not found&lt;/code&gt; is caused when the event pointed !y does note exists.&lt;/li&gt;
&lt;li&gt;#285: Not wait GUI-process not using pipeline terminating like CMD.EXE (Call them with ShellExecute() instead of CreateProcess() )&lt;/li&gt;
&lt;li&gt;(Replaced &lt;code&gt;bytes.Buffer&lt;/code&gt; to &lt;code&gt;strings.Builder&lt;/code&gt; and Go 1.10 is required to build)&lt;/li&gt;
&lt;li&gt;When more than one are to be executed with &lt;code&gt;open&lt;/code&gt; at once, display error: &lt;code&gt;open: ambiguous shellexecute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix that &lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; could not remove the alias.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; が &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; が &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; のコマンドファイルも読み込むようにした&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; でリダイレクトでのファイル上書きを禁止&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; もしくは &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; で、&lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt; の時も上書きできるようにした&lt;/li&gt;
&lt;li&gt;#270: プロンプト表示時にコンソール入力バッファをクリアするようにした&lt;/li&gt;
&lt;li&gt;#228: $ENV[TAB] という補完をネイティブでサポート&lt;/li&gt;
&lt;li&gt;#275: !str:$ や !str?:$ といったヒストリ置換が機能しない不具合を修正&lt;/li&gt;
&lt;li&gt;! で指定されるヒストリが存在しない時「event not found」エラーを出させるようにした&lt;/li&gt;
&lt;li&gt;#285: パイプラインを使っていない GUIプログラムは CMD.EXE 同様終了を待たないようにした (CreateProcess ではなく ShellExecute を使用する)&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;bytes.Buffer&lt;/code&gt; を &lt;code&gt;strings.Builder&lt;/code&gt; に置き換えた。Go 1.10 が必要になった)&lt;/li&gt;
&lt;li&gt;複数のファイルが「open」で一度に開こうとした時、&lt;code&gt;open: ambiguous shellexecute&lt;/code&gt; とエラーを表示するようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; で alias を削除できなかった動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; は今回のリリース・パッケージには含まれてなかったのだけど，次回以降で入ってくるってことかなぁ？ それとも自前のスクリプトは &lt;code&gt;*.lua&lt;/code&gt; じゃなくて &lt;code&gt;*.ny&lt;/code&gt; にしろってことなのだろうか。&lt;/p&gt;

&lt;p&gt;（&lt;strong&gt;追記：&lt;/strong&gt; &lt;code&gt;*.ny&lt;/code&gt; は単純にコマンドを列挙したバッチ処理を格納できるファイルだそうだ）&lt;/p&gt;

&lt;p&gt;アップデートは上書きコピーでOK。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ようやく ConEmu と NYAGOS を導入した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>バージョン間のコミット・ログを取得する - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/git-log/" />
		<id>tag:text.Baldanders.info,2018-03-06:/remark/2018/03/git-log/</id>
		<published>2018-03-06T18:58:09+09:00</published>
		<updated>2018-03-06T18:58:09+09:00</updated>
		<summary>今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; でリリース・ドキュメントを書くことを考える。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で書いたツールのバイナリ・リリース時は &lt;a href=&#34;https://goreleaser.com/&#34; title=&#34;GoReleaser | Deliver Go binaries as fast and easily as possible&#34;&gt;GoReleaser&lt;/a&gt; にお任せで全部やってくれるのだが，ソースコードやドキュメントのみのリリースの場合は自前でドキュメントを書く必要がある。
このとき &lt;code&gt;git log&lt;/code&gt; コマンドでコミット・ログを参照するのだが，滅多に使わないコマンドなので毎回 Google 先生のお世話になる。&lt;/p&gt;

&lt;p&gt;今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。&lt;/p&gt;

&lt;h2 id=&#34;コミット-ログの収集&#34;&gt;コミット・ログの収集&lt;/h2&gt;

&lt;p&gt;たとえば v0.6.0 と v0.7.0 の間のコミット・ログを markdown 形式で箇条書きにしたい場合はこうする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この出力から “&lt;code&gt;Merge&lt;/code&gt;” とか “&lt;code&gt;typo&lt;/code&gt;” とかいった単語を含む行を除きたければ grep と組み合わせればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお pretty format に使える &lt;code&gt;%s&lt;/code&gt; などのプレースホルダ等については以下が参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/pretty-formats&#34;&gt;Git - pretty-formats Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;コマンドを-nyagos-の-alias-として組み込む&#34;&gt;コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の Alias として組み込む&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; には &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で書いたコードを alias コマンドとして組み込めるという素敵な機能がある。
そこで，先ほどの &lt;code&gt;git log&lt;/code&gt; コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の alias として組み込んでみる。
具体的には &lt;code&gt;.nyagos&lt;/code&gt; に以下の記述を追加する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- git log&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.alias&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gitlog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--pretty=format:- %s %h&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.writerr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: gitlog [[&amp;lt;from&amp;gt;] &amp;lt;to&amp;gt;]&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;gitlog&lt;/code&gt; コマンドができた。
実際に動かしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gitlog v0.6.0 v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012

$ gitlog v0.6.0 v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/suin/items/e98cef1409b6525f9bb6&#34;&gt;git logでタグとタグの間のものだけ抽出する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://efcl.info/2014/07/20/git-tag-to-release-github/&#34;&gt;Git tagとGitHub ReleasesとCHANGELOG.mdの自動化について | Web Scratch&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git - Book&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection&#34;&gt;Git - Revision Selection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/git-commands/&#34;&gt;あまり使わないけど，たまに使おうとすると忘れてる Git コマンド集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.3_4 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_3_4-released/" />
		<id>tag:text.Baldanders.info,2018-03-06:/release/2018/03/nyagos-4_2_3_4-released/</id>
		<published>2018-03-06T18:57:17+09:00</published>
		<updated>2018-03-27T13:50:56+09:00</updated>
		<summary>今回は不具合の修正がメインのようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.3_4 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.3_4&#34;&gt;Release 4.2.3_4 (bug fixes) · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は不具合の修正がメインのようだ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -?&lt;/code&gt; for help instead of &lt;code&gt;ls -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Building with go build instead of make.cmd, print version as &lt;code&gt;snapshot-GOARCH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show an error when &lt;code&gt;type DIRECTORY&lt;/code&gt; is executed.&lt;/li&gt;
&lt;li&gt;Made error message simple on &lt;code&gt;del NOTEXISTFILE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix: #279 Substitution on Environment variable (%VAR:OLD=NEW%) did not ignore case&lt;/li&gt;
&lt;li&gt;Fix: #281 &lt;code&gt;cd \\server\folder ; open&lt;/code&gt; -&amp;gt;&lt;code&gt;C:\Windows\system32&lt;/code&gt; was open.&lt;/li&gt;
&lt;li&gt;Fix: #286 A tilde(~) after whitespace enclosed with double quotations was interpreted same as %USERPROFILE%&lt;/li&gt;
&lt;li&gt;#287 On the last entry of the history, do nothing for typing ARROW-DOWN&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -h&lt;/code&gt; のかわりに &lt;code&gt;ls -?&lt;/code&gt; をヘルプに用意した&lt;/li&gt;
&lt;li&gt;make.cmd のかわりに go build でビルドした時、バージョンを &lt;code&gt;snapshot-GOARCH&lt;/code&gt; と表示するようにした&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type DIRECTORY&lt;/code&gt; が実行された時にエラーにするようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;del 存在しないファイル&lt;/code&gt; を実行した時のエラーをシンプルにした.&lt;/li&gt;
&lt;li&gt;#279 環境変数置換(%VAR:OLD=NEW%)で、英大文字/小文字を区別していた不具合を修正&lt;/li&gt;
&lt;li&gt;#281 &lt;code&gt;cd \\server\folder ; open&lt;/code&gt; で &lt;code&gt;C:\Windows\system32&lt;/code&gt; 開く不具合を修正&lt;/li&gt;
&lt;li&gt;#286 Fix: 二重引用符内の空白に続く ~ が %USERPROFILE% と解釈されていた不具合を修正&lt;/li&gt;
&lt;li&gt;#287 ヒストリの最後のエントリの時、↓をタイプしても何もしないようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.3_4&#34;&gt;Release 4.2.3_4 (bug fixes)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;アップデートは上書きコピーでOK。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ようやく ConEmu と NYAGOS を導入した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>ATOM × NYAGOS ＝ ♥ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/11/nyagos-with-atom/" />
		<id>tag:text.Baldanders.info,2016-11-20:/remark/2016/11/nyagos-with-atom/</id>
		<published>2016-11-20T16:29:24+09:00</published>
		<updated>2016-11-20T16:29:24+09:00</updated>
		<summary>やっとこれで Windows 環境でも ATOM にターミナル・エミュレータが導入できるようになった。しかも NYAGOS が動く。素晴らしい！</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 上で動くターミナル・エミュレータはいくつかあるが，大抵は UNIX 互換環境を前提としたもので Windows では動かなかったり特別なインストール手順を要するものが殆どで使う気にならなかったりする。
そんな中で &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; は Windows 環境でも簡単に導入できる優れもののようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://labs.spiffield.net/archives/508&#34;&gt;Atomのterminal-plusが動かないのでplatformio-ide-terminalを入れてみた | spiffieldLabs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kmry2045/items/b61a000ff257c01720e4&#34;&gt;ATOMエディタではじめるマイナー言語探訪(あんま怖くないNim②) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストールは，他のパッケージと同じように， Settings の Install から選択してインストールすれば OK。
マジ簡単。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552246/&#34;&gt;&lt;img src=&#34;https://c7.staticflickr.com/6/5820/31089552246_cc66a5a325.jpg&#34; srcset=&#34;https://c7.staticflickr.com/6/5820/31089552246_cc66a5a325.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;platformio-ide-terminal (1)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552246/&#34;&gt;platformio-ide-terminal (1)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ふむむ。
どうやら既定では PawerShell が立ち上がるようだ。
ってことは他の shell でもいけるんじゃね？&lt;/p&gt;

&lt;p&gt;ということで Settings を見ると&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552576/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/6/5339/31089552576_cfa8e26522.jpg&#34; srcset=&#34;https://c1.staticflickr.com/6/5339/31089552576_cfa8e26522.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;platformio-ide-terminal (2)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552576/&#34;&gt;platformio-ide-terminal (2)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;おおっ。
やっぱり shell を変えられるんだ。
ほんじゃあ &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を入れてみよっか。
「Shell Override」の項目に &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をフルパスで指定して  &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; を起動する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552456/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/6/5615/31089552456_609a1b8c62.jpg&#34; srcset=&#34;https://c1.staticflickr.com/6/5615/31089552456_609a1b8c62.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;platformio-ide-terminal (3)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552456/&#34;&gt;platformio-ide-terminal (3)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;おおおおっ！ なにこれ素敵。
&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; であれば UTF-8 を受け入れるので文字コードがどうとかあまり考えなくてよい。&lt;/p&gt;

&lt;p&gt;ん？ 待てよ。
ってことは git bash もいけるのか？ では同じように「Shell Override」の項目に git bash をフルパスで指定指定して  &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; を起動してみる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552546/&#34;&gt;&lt;img src=&#34;https://c3.staticflickr.com/6/5745/31089552546_7a38f046da.jpg&#34; srcset=&#34;https://c3.staticflickr.com/6/5745/31089552546_7a38f046da.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;platformio-ide-terminal (4)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/31089552546/&#34;&gt;platformio-ide-terminal (4)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;よいではないか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt; を起動する際は， Windows では， &lt;code&gt;alt-shift-T&lt;/code&gt; を押下すればいいのだが，キーを3つ押さえるのは得意ではないので &lt;code&gt;ctrl-f1&lt;/code&gt; に振り直した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cson&#34; data-lang=&#34;cson&#34;&gt;&amp;#39;.platform-win32 atom-workspace&amp;#39;:
  &amp;#39;ctrl-f1&amp;#39;: &amp;#39;platformio-ide-terminal:new&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あぁ。
やっとこれで Windows 環境でも &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; にターミナル・エミュレータが導入できるようになった。
しかも &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; が動く。
素晴らしい！&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Lua のモジュール - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/01/lua-module/" />
		<id>tag:text.Baldanders.info,2016-01-04:/remark/2016/01/lua-module/</id>
		<published>2016-01-04T22:44:13+09:00</published>
		<updated>2016-01-04T22:44:13+09:00</updated>
		<summary>Lua は不案内なので知らなかったのだが module() 関数は Lua 5.2 で廃止されていたらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 4.1.0_0 がリリースされた。
主な変更点は &lt;code&gt;ln&lt;/code&gt; コマンドが追加されたことのようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.1.0_0&#34;&gt;Release 4.1.0_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ただ，私の場合はより切実な問題があって， &lt;code&gt;-f&lt;/code&gt; オプションで &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のスクリプトを実行させた場合に &lt;code&gt;module()&lt;/code&gt; 関数が使えなくなった。
&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; は不案内なので知らなかったのだが &lt;code&gt;module()&lt;/code&gt; 関数は &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 5.2 で deprecated になっていたらしい。
逆になんで今まで使えてたのかは分からない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://p-monster.hatenablog.com/entry/2013/02/13/205419&#34;&gt;Luaのモジュールを穴が空くまで見つめてみる - プログラミングの魔物&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;module()&lt;/code&gt; 関数が使えないので &lt;code&gt;require()&lt;/code&gt; で外部ファイルを呼び出すとファイル内の記述がそのまま実行される。&lt;/p&gt;

&lt;p&gt;以前なら &lt;code&gt;module1.lua&lt;/code&gt; に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;module1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;package.seeall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;method1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 1&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;method2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 2&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と定義しておけば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;module1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;nyagos.write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module1.method1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module1.method2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と記述できた。
もし同じように機能させたいなら &lt;code&gt;module1.lua&lt;/code&gt; を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;module1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;module1.method1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 1&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;module1.method2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 2&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と記述するのが一番簡単なようだ。
&lt;code&gt;module1&lt;/code&gt; を関数テーブルとして定義するわけだ。&lt;/p&gt;

&lt;p&gt;あるいは &lt;code&gt;module1.lua&lt;/code&gt; を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;module1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;module1.method1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 1&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;module1.method2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Method 2&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;module1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;としておいて，呼び出し側を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;module1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;module1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;nyagos.write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module1.method1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module1.method2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればグローバル領域を汚さずに済むだろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.luafaq.org/&#34;&gt;Lua Unofficial FAQ (uFAQ)&lt;/a&gt; : “1.37.2 Life after module()?” の項が参考になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/16849422/using-the-module-function-in-lua-5-2&#34;&gt;c++ - Using the &#39;module&#39; function in Lua 5.2? - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://marupeke296.com/LUA_No4_Table.html&#34;&gt;その４ 会得必須！Luaの真髄「テーブル」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ie.u-ryukyu.ac.jp/~e085739/lua.hajime.4.html&#34;&gt;第 4 回: Lua のオブジェクト指向について紹介する — WTOPIA v1.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.1-beta がリリース - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/nyagos-4_1_beta/" />
		<id>tag:text.Baldanders.info,2015-12-20:/remark/2015/nyagos-4_1_beta/</id>
		<published>2015-12-20T16:31:06+09:00</published>
		<updated>2015-12-21T10:36:09+09:00</updated>
		<summary>4.1 で大きく変わったのはコールバック関数の扱いのようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;ここのところ忙しくしてたら，いつの間にか &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.1-beta&#34;&gt;4.1-beta&lt;/a&gt; が出てた。
4.1 で大きく変わったのはコールバック関数の扱いのようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;クラッシュ回避のため、全てのLua のコールバック関数はそれぞれの Lua インスタンスを持つようにした。（つまり、.nyagos で定義されたグローバル変数は、全てのコールバック関数から見ることができなくなった）&lt;/li&gt;
&lt;li&gt;コールバック関数と .nyagos 間で値を共有するため、テーブル share[] を作った&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コールバック関数の挙動が変わったのは&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;この制限は、クラッシュ回避のため、コールバック関数ごとに別の Lua インスタンスを用意しているためです。エイリアス等は別の goroutine 内で呼ばれるのですが、4.0 では、この時同一の Lua インスタンスを使用していたため、時にスタックに矛盾が発生して、クラッシュすることがあったのです。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c08586c85fa73c182a7a&#34;&gt;nyagosスクリプト解説 - CMD.EXEで化けさせず、nyagosの中だけプロンプトをカラー化&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということらしい。&lt;/p&gt;

&lt;p&gt;実は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; で表示するプロンプトは以下の記事を参考にオリジナルの &lt;code&gt;%PROMPT%&lt;/code&gt; から変えている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c08586c85fa73c182a7a&#34;&gt;nyagosスクリプト解説 - CMD.EXEで化けさせず、nyagosの中だけプロンプトをカラー化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前のプロンプト定義は以下のような感じだった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Simple Prompt for CMD.EXE&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;PROMPT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$L&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nyagos.getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;COMPUTERNAME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:$P$G$_$$$s&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- Coloring Prompt for NYAGOS.exe&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prompter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nyagos.prompt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prompter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$e[36;40;1m&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$e[37;1m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この中の &lt;code&gt;prompter&lt;/code&gt; がコールバック関数から見えなくなったということらしい。
そこで以下のようにコードを変更するのだそうだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- Simple Prompt for CMD.EXE&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$L&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nyagos.getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;COMPUTERNAME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;..&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:$P$G$_$$$s&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;-- Coloring Prompt for NYAGOS.exe&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;share.org_prompter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nyagos.prompt&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.prompt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;share.org_prompter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$e[36;40;1m&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$e[37;1m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ポイントは &lt;code&gt;share.org_prompter=nyagos.prompt&lt;/code&gt; の部分。
オリジナルの &lt;code&gt;nyagos.prompt()&lt;/code&gt; 関数を &lt;code&gt;share[]&lt;/code&gt; テーブルに退避させている。&lt;/p&gt;

&lt;p&gt;これでめでたく&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\program\nyagos&amp;gt;nyagos.exe
Nihongo Yet Another GOing Shell 4.1-beta-amd64 Powered by go1.5.2 &amp;amp; Lua 5.3
Copyright (c) 2014,2015 HAYAMA_Kaoru and NYAOS.ORG
&amp;lt;VENUS:C:/program/nyagos&amp;gt;
$ ls
Doc/               lua53.dll          nyagos.lua*        specialfolders.js*
catalog.d/         makeicon.cmd*      nyole.dll
license.txt        nyagos.d/          readme.md
lnk.js*            nyagos.exe*        readme_ja.md
&amp;lt;VENUS:C:/program/nyagos&amp;gt;
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と表示できるようになった（カラーでお見せできないのが残念です）&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;実は私もプロンプトは折り返す派。
開発環境ではフォルダがかなり深くなることがあり，既存の &lt;code&gt;$P$G&lt;/code&gt; では見づらいのだ。
まぁこれは Windows に限らないのだが。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/75840096f8279dd641a8&#34;&gt;何がちがう？NYAGOS 4.0 と 4.1β - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;そういや昔の UNIX ワークステーションはホスト名に venus とか惑星名を付けてるところが多かったな。私がネットワーク管理者をしてた時はプロキシサーバに janus とか付けてた。若気の至りである（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS で Lua - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/nyagos-and-lua/" />
		<id>tag:text.Baldanders.info,2015-11-02:/remark/2015/nyagos-and-lua/</id>
		<published>2015-11-02T21:41:54+09:00</published>
		<updated>2018-03-27T09:22:45+09:00</updated>
		<summary>前回，ConEmu とともに NYAGOS を導入したけど，今回は NYAGOS のセッティングを中心に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;前回&lt;/a&gt;， &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; とともに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入したけど，今回は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; のセッティングを中心に。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の特徴のひとつに， &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のエンジンを内蔵し解釈できる点がある。
というか &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 自身が機能拡張を &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で実装していて，ユーザも hackable に &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をカスタマイズできる。&lt;/p&gt;

&lt;p&gt;また &lt;code&gt;nyagos.exe&lt;/code&gt; を &lt;code&gt;-f&lt;/code&gt; オプションを付けて起動すると &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のソースファイルをスクリプトとして実行できる。
たとえば以下のコード &lt;code&gt;hello.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:&amp;gt;nyagos.exe -f hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;これだけだと大したことはないが， &lt;code&gt;nyagos.exe&lt;/code&gt; でスクリプトを実行した場合は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張が使える。
例えばカレント・フォルダを取得する &lt;code&gt;getwd.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;n&#34;&gt;nyagos.write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nyagos.getwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\username&amp;gt;nyagos.exe -f getwd.lua
C:\Users\username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張については&lt;a href=&#34;https://github.com/zetamatta/nyagos/blob/master/Doc/07-LuaFunctions_ja.md&#34;&gt;ドキュメント&lt;/a&gt;を参照するとよいだろう。
特筆すべきは &lt;code&gt;alias&lt;/code&gt; 機能で，単純なコマンドの置き換えだけでなく&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nyagos.alias.cmdname = function(args) ... end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のような形式で新しい内部コマンドを作成することもできる。&lt;/p&gt;

&lt;p&gt;ところで &lt;code&gt;nyagos.exe&lt;/code&gt; を普通に起動してプロンプトから &lt;code&gt;ls -oF&lt;/code&gt; コマンドでファイルの一覧を表示させてみると，拡張子 &lt;code&gt;.lua&lt;/code&gt; のファイルは実行可能ファイルになっていることが分かる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rc&#34;&gt;&lt;a href=&#34;#fn:rc&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;!--
ただ，実際に起動しようとすると

```
~&gt; hello.lua
&#39;lua&#39; is not recognized as an internal or external command,
operable program or batch file
```

と怒られた。
どうやら `lua` コマンドがねーよ，と言っているらしい（確かに [Lua] の実行モジュールは入れてないのだが）。

[NYAGOS] をインストールしたフォルダにある `nyagos.d\suffix.lua` ファイルの末尾あたりを見ると

```lua
suffix.pl=&#34;perl&#34;
if nyagos.which(&#34;ipy&#34;) then
  suffix.py=&#34;ipy&#34;
elseif nyagos.which(&#34;py&#34;) then
  suffix.py=&#34;py&#34;
else
  suffix.py=&#34;python&#34;
end
suffix.rb=&#34;ruby&#34;
suffix.lua=&#34;lua&#34;
suffix.awk={&#34;awk&#34;,&#34;-f&#34;}
suffix.js={&#34;cscript&#34;,&#34;//nologo&#34;}
suffix.vbs={&#34;cscript&#34;,&#34;//nologo&#34;}
suffix.ps1={&#34;powershell&#34;,&#34;-file&#34;}
```

となっていて，拡張子 `.lua` のファイルが `lua` コマンドに関連付けられているのが分かる。
ってことは，これを `nyagos.exe` に書き換えればいいわけだ。
とはいえ `nyagos.d\suffix.lua` ファイルを直接いじるわけにはいかないので（バージョンアップのたびに上書きされる）， `%HOME%` または `%HOMEPATH%` フォルダにある `.nyagos` ファイルに以下の記述を追加する[^a]。

 ```lua
 suffix.lua={&#34;nyagos.exe&#34;,&#34;-f&#34;}
 ```

これで `nyagos.exe` を起動し直して `hello.lua` ファイルを実行してみる。
--&gt;

&lt;p&gt;実際に &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; のプロンプト上で動かしてみよう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおっ，うまくいった。
これで &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; スクリプトを &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 上でバッチファイルのように扱うことができる。&lt;/p&gt;

&lt;p&gt;さぁて，これでいよいよもって &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の勉強をしないといけなくなった。
Pascal 系の構文は目が滑るんだよなぁ。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;h3 id=&#34;nyagos-作者による解説&#34;&gt;NYAGOS 作者による解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/a49e3a40201511128508&#34;&gt;環境変数PATHが長すぎて、追加したパスが有効にならないぜ！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c4ad3cc55c5afa74da63&#34;&gt;nyagosスクリプト解説 - svn のサブコマンドを勝手に拡張する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/29a85695813926cafd2c&#34;&gt;nyagosスクリプト解説 - ezoe.lua「コマンドではない。」 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/cdff310f53faf3369e48&#34;&gt;nyagosスクリプト解説 - 逆クォートによるコマンド出力展開編(backquote.lua) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c08586c85fa73c182a7a&#34;&gt;nyagosスクリプト解説 - CMD.EXEで化けさせず、nyagosの中だけプロンプトをカラー化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/89a907f4bd46d1750c31&#34;&gt;nyagosスクリプト解説 - VisualStudio れんけー - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/1fe83f736b0254e02415&#34;&gt;git 付属のPerlやunzipとかを使いたいけどsort,find,lnとかは要らない - Qiita&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a href=&#34;#fn:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lua-の解説&#34;&gt;Lua の解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yohshiy.blog.fc2.com/blog-entry-291.html&#34;&gt;Lua の Windows へのインストールと使い方 | プログラマーズ雑記帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://densan-labs.net/tech/lua/index.html&#34;&gt;Luaプログラミング入門 | densan-labs.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ie.u-ryukyu.ac.jp/~e085739/lua.hajime.html&#34;&gt;高速スクリプト言語 Lua を始めよう — WTOPIA v1.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://handasse.blogspot.com/2010/02/lua.html&#34;&gt;良いもの。悪いもの。: Lua基礎文法最速マスター&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://noriko3.blog42.fc2.com/blog-entry-128.html&#34;&gt;紀子さん＠へぼぷろぐらまの日常 | Luaで日付時間操作。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://symfoware.blog68.fc2.com/blog-entry-454.html&#34;&gt;Luaでファイルの読み書きを行なう - Symfoware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://torus.jp/memo/x200907/lua-coroutine.rd.html&#34;&gt;Lua のコルーチンの使い方〜基本編〜 : torus solutions!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/daxanya1/items/7d4b51bba6c8f3a6016b&#34;&gt;NYAGOSとconemuでキーボード操作の拡張 - Qiita&lt;/a&gt; : &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt;+&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で動作を定義， &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; でキーバインドを変更する&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/JugnautOnishi/items/7bec6008b6bdb1c1fb9a&#34;&gt;nyagosでbower searchを便利につかいたかった - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/3e83c7bfdfbe7fcc92b5&#34;&gt;【ポエム】 NYAGOSの現在と今後 【2017年版】 - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/e2ae6e2ca232a3164214&#34;&gt;【ポエム】NYAGOS 2017年ふりかえり - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/f62bafd711755a4cf8d7&#34;&gt;NYAGOS で環境設定系バッチファイルが期待どおり動かない原因と対策 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/efff93d92ac2150192fb&#34;&gt;NYAGOS 4.2.5βが、いかにしてバッチファイルでの環境変数の変更取り込みを可能としたか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/nocd5/items/a5e136285804ba2d02c3&#34;&gt;補完候補の既入力部分の文字列をハイライト - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tsuyoshi_cho/items/d029825b6d8d3688da92&#34;&gt;Nyagos リポジトリブランチ名表示 プロンプトの一例 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:rc&#34;&gt;拡張子 &lt;code&gt;.lua&lt;/code&gt; とコマンドの関連付けは &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をインストールしたフォルダにある &lt;code&gt;_nyagos&lt;/code&gt; ファイルに記述されている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rc&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;最近の &lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git for Windows&lt;/a&gt; は bash 関連のコマンドを &lt;code&gt;Git\usr\bin&lt;/code&gt; フォルダに集めている。 git コマンドだけが必要なら &lt;code&gt;Git\cmd&lt;/code&gt; フォルダにのみパスを通せばよい。 bash を使う場合は &lt;code&gt;Git\bin&lt;/code&gt; フォルダにある &lt;code&gt;bash.exe&lt;/code&gt; を起動するのが一番安全なようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
