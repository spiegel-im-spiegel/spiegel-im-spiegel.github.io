<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of tls - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/tls/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/tls/index.xml" />
	<id>tag:text.Baldanders.info,2019-02-26:/tags</id>
	<updated>2019-02-26T23:03:40+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Go 1.12 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/02/go-1_12-is-released/" />
		<id>tag:text.Baldanders.info,2019-02-26:/release/2019/02/go-1_12-is-released/</id>
		<published>2019-02-26T14:03:40+00:00</published>
		<updated>2021-08-12T21:22:05+00:00</updated>
		<summary>主な変更点としては TLS 1.3 の暫定的なサポートとモジュール・モードの挙動の一部が変わったことだろうか。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Go 1.12 がリリースされた。
そういえば2月ももう終わりか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/go1.12&#34;&gt;Go 1.12 is released - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/go1.12&#34;&gt;Go 1.12 Release Notes - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主な変更点としては TLS 1.3 の暫定的なサポート（有効にするには環境変数の設定が必要）と&lt;a href=&#34;https://text.baldanders.info/golang/go-module-aware-mode/&#34; title=&#34;モジュール対応モードへの移行を検討する&#34;&gt;モジュール・モード&lt;/a&gt;の挙動の一部が変わったことだろうか。&lt;/p&gt;
&lt;p&gt;たとえば環境変数 &lt;code&gt;$GO111MODULE&lt;/code&gt; を &lt;code&gt;on&lt;/code&gt; にしておけば &lt;a href=&#34;https://github.com/mattn&#34;&gt;mattn&lt;/a&gt; さんの &lt;a href=&#34;https://github.com/mattn/jvgrep&#34; title=&#34;mattn/jvgrep: grep for japanese vimmer&#34;&gt;jvgrep&lt;/a&gt; をインストールする際にも任意のフォルダで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go get github.com/mattn/jvgrep@latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすればよい。
ダミーの &lt;code&gt;go.mod&lt;/code&gt; ファイルを作る必要はなくなった。
ブラボー！&lt;/p&gt;
&lt;p&gt;Go 1.13 からはモジュール・モードが既定になるようで，「GOPATH モードじゃないと困る」とかじゃなければ環境変数 &lt;code&gt;$GO111MODULE&lt;/code&gt; は &lt;code&gt;on&lt;/code&gt; のままにしてしまえばいいんじゃないのかなぁ。&lt;/p&gt;
&lt;p&gt;あと地味だが嬉しい変更としては，並行処理下で正規表現パッケージ &lt;a href=&#34;https://golang.org/pkg/regexp/&#34; title=&#34;regexp - The Go Programming Language&#34;&gt;&lt;code&gt;regexp&lt;/code&gt;&lt;/a&gt; を使う際に &lt;a href=&#34;https://golang.org/pkg/regexp/&#34; title=&#34;regexp - The Go Programming Language&#34;&gt;&lt;code&gt;regexp&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Regexp.Copy()&lt;/code&gt; でクローンを作らなくてもブロッキングが起きないようになった。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt; はこの 1.12 から 1.13 にかけて大きく変わる予感がする（今のところ後方互換性は確保されるだろうが）。
色々と試していって慣れていくのがいいかもしれない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/go-module-aware-mode/&#34;&gt;モジュール対応モードへの移行を検討する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/regular-expression/&#34;&gt;正規表現に関する戯れ言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51pUKQajnaL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873118468?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Go言語による並行処理&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Katherine Cox-Buday (著), 山口 能迪 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2018-10-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873118468 (ASIN), 9784873118468 (EAN), 4873118468 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873118468/&#34;&gt;Eブック版もある&lt;/a&gt;。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2018/11/concurrency-in-go/&#34;&gt;こちら&lt;/a&gt;。 Go 言語で並行処理を書くならこの本は必読書になるだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-01-13&#34;&gt;2020-01-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Go言語による並行処理 --&gt;
</content>
	</entry><entry>
		<title>（不完全ながら） HTTPS 接続に対応した</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/01/replace-to-https/" />
		<id>tag:text.Baldanders.info,2019-01-07:/remark/2019/01/replace-to-https/</id>
		<published>2019-01-07T08:53:06+00:00</published>
		<updated>2022-05-04T05:22:29+00:00</updated>
		<summary>各ページに埋め込まれる他サイトのスクリプトや画像等のマテリアルに HTTPS に対応していないものがあるため不完全な対応になっている点はご了承の程を。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;遅まきながら&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;の HTTPS 接続に対応した。&lt;/p&gt;
&lt;p&gt;いや，随分前に「&lt;a href=&#34;https://www.sakura.ne.jp/&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」で &lt;a href=&#34;https://letsencrypt.org/&#34; title=&#34;Let&#39;s Encrypt - Free SSL/TLS Certificates&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; を用いた &lt;a href=&#34;https://www.sakura.ne.jp/function/freessl.html&#34; title=&#34;無料SSLサーバー証明書 Let&#39;s Encrypt - レンタルサーバーはさくらインターネット&#34;&gt;TLS 設定が簡単になった&lt;/a&gt;という話は聞いてたのよ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sakura.ad.jp/information/pressreleases/2017/10/10/90197/&#34;&gt;さくらインターネットの「さくらのレンタルサーバ」、コントロールパネル上の簡単操作で無料SSL証明書「Let’s Encrypt」を設定可能に | さくらインターネット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://chalow.net/2018-01-14-1.html&#34;&gt;当ブログもHTTPSになりました！さくらの500円サーバーで「Let&amp;rsquo;s Encrypt」によるSSL化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20180420/https&#34;&gt;今更ではあるが、本家サイトのHTTPS対応を行った - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただし，個人的には積極的に HTTPS に切り替える動機はなかった&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; ので放置していた。&lt;/p&gt;
&lt;p&gt;ところが Facebook で聞いた話によると米国では ISP が Web の通信に対して何らかの干渉を行う懸念を払拭できないとかで，そういえば米国では&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/hacker-ethic-2/&#34;&gt;「ネットの中立性」は公式に破れている&lt;/a&gt;し日本もいずれそうなるだろうとは想像に難くない。&lt;/p&gt;
&lt;p&gt;そうであるなら，そういった通信に対する干渉を抑止するためにも HTTPS を有効にしておくのは意味があるだろうと考えを改めることにした。
まぁ，ページの広告エリアに採掘コードを差し込むとか，セキュリティと称して HTTPS 通信に中間者攻撃をかまして出歯亀するとかいったことが横行している状況で HTTPS でどこまで安全が担保されるのかは分からないが。&lt;/p&gt;
&lt;p&gt;なお，各ページに埋め込まれる他サイトのスクリプトや画像等のマテリアルに HTTPS に対応していないものがあるため不完全な対応になっている点はご了承の程を&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
これは徐々に改修していく予定。&lt;/p&gt;
&lt;p&gt;このため，当面は HTTP と HTTPS の両方とも有効にして運用し強制的な HTTPS リダイレクトはしない。
上述したように，私は HTTPS をデータの機密性および完全性の観点からはあまり信用してないので「やらないよりはマシ」というスタンスで運用することにする。&lt;/p&gt;
&lt;h2 id=&#34;2019&#34;&gt;2019年の目標&lt;/h2&gt;
&lt;p&gt;実は今年の目標というか TODO として&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;の改造を考えていて，具体的には&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;を &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; ベースに再構築する（ただし URL はできるだけ変えない）&lt;/li&gt;
&lt;li&gt;Flickr の写真を引き揚げて&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;に移転する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と考えている。
今回の HTTP 接続対応はそのついでというわけだ。
上の2つのうち 2 に関しては既に全バックアップをとって手元にデータはあるのだが，&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;での公開については 1 の作業と併せて行う予定なので，しばらく先のことになるだろう。&lt;/p&gt;
&lt;p&gt;これ以外にもうひとつ問題があって， Amazon アフィリエイト・リンク作成サービスの &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; title=&#34;Amakuri [Amazonアフィリエイトリンク作成ツール]&#34;&gt;Amakuri&lt;/a&gt; がサービスを終了するらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/235&#34;&gt;【Amakuri】来年15日にAmakuriは閉鎖いたします - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/10/amazon-affiliate-with-amakuri/&#34; title=&#34;Amazon アフィリエイトリンク作成サービスを Amakuri へ移行する&#34;&gt;G-Tools さんに続いて&lt;/a&gt;お宅もか &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;どうしよう。
たぶん類似サービスは軒並み閉鎖だよね，これ。
自前でツールを用意するしかないのか。
それが面倒くさいから人様のサービスを利用してたのに。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;ここのブログ&lt;/a&gt;も  HTTPS 接続に対応していた&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;ここのブログ&lt;/a&gt;は &lt;a href=&#34;https://github.com/spiegel-im-spiegel/spiegel-im-spiegel.github.io&#34; title=&#34;&#34;&gt;GitHub Page&lt;/a&gt; なのだが，なにもしないのに何時の間にか HTTPS 接続に対応していたらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.github.com/2018-05-01-github-pages-custom-domains-https/&#34;&gt;Custom domains on GitHub Pages gain support for HTTPS | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こちらも当面は HTTP と HTTPS の両方とも有効にして運用するが Flickr の写真と Amazon アフィリエイト・リンクの目処が立てば HTTPS 強制にしてもいいかも知れない。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;em&gt;【2019-05-21】&lt;/em&gt; 以下を参考に HTTP 強制にしました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/en/articles/securing-your-github-pages-site-with-https&#34;&gt;Securing your GitHub Pages site with HTTPS - GitHub Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;h3&gt;【追記1】 e-Words 用語集止めました&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;ここのブログ&lt;/a&gt;ではページ下部に &lt;a href=&#34;http://e-words.jp/&#34; title=&#34;IT用語辞典 e-Words&#34;&gt;e-Words&lt;/a&gt; 用語集のブログパーツを貼り付けていたのだが，既にメンテナンスされていないようで，かなり前から説明ページが消えてるし，しかも HTTP 接続オンリーで HTTPS なページに貼り付けるとブラウザから reject されるので，今回を機に削除することにした。&lt;/p&gt;
&lt;p&gt;本当は &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt; も止めたい。
&lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt; の埋め込みコードは Firefox からはトラッキング・コードと見做されているため reject される。
設定を緩めればいける&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; のだが，それも微妙な気もする。
&lt;a href=&#34;https://twitter.com/spiegel_2007&#34;&gt;Twitter&lt;/a&gt; か &lt;a href=&#34;https://www.facebook.com/baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;Facebook ページ&lt;/a&gt;でフィードバックを，という手もあるが&amp;hellip;&lt;/p&gt;
&lt;h3&gt;【追記2】 Amazon 関連の URL 変換&lt;/h3&gt;
&lt;p&gt;Amazon の商品ページへのリンク URL や書影等のイメージの URL について以下のように変換した。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;

&lt;style&gt;
main table.amazon th  {
  vertical-align:middle;
  text-align: center;
}
main table.amazon td  {
  vertical-align:middle;
  text-align: left;
}
&lt;/style&gt;
&lt;table class=&#34;amazon&#34;&gt;
&lt;thead&gt;
    &lt;tr&gt;
        &lt;th&gt;変換前&lt;/th&gt;
        &lt;th&gt;変換後&lt;/th&gt;
    &lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
    &lt;tr&gt;
        &lt;td&gt;&lt;code&gt;http://www.amazon.co.jp/&lt;/code&gt;&lt;/td&gt;
        &lt;td&gt;&lt;code&gt;https://www.amazon.co.jp/&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
        &lt;td&gt;&lt;code&gt;http://ecx.images-amazon.com/&lt;/code&gt;&lt;/td&gt;
        &lt;td rowspan=&#34;3&#34;&gt;&lt;code&gt;https://images-fe.ssl-images-amazon.com/&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
        &lt;td&gt;&lt;code&gt;http://images.amazon.com/&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;&lt;tr&gt;
        &lt;td&gt;&lt;code&gt;http://g-images.amazon.com/&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;figcaption&gt;&lt;div&gt;Amazon 関連の URL 変換&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sakura.ad.jp/information/news/2018/12/19/1968198392/&#34;&gt;ウェブサイトの常時SSL化普及へ向けたさくらのレンタルサーバの取り組み | さくらインターネット&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/rinopo/sakura-init&#34;&gt;GitHub - rinopo/sakura-init: さくらのレンタルサーバを借りたとき最初にすること&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tapioca-hiroyuki.net/?blog=git0320&#34;&gt;Gitのリモートリポジトリにプッシュすると自動的にWebサイトが更新されるリポジトリを作成する |  Arcany&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/zprodev/items/0a16bc51866ee6a7a102&#34;&gt;さくらレンタルサーバーとSourceTreeでGit環境構築 - Qiita&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://help.sakura.ad.jp/hc/ja/articles/206054622&#34;&gt;.htaccessによるアクセス制御 – さくらのサポート情報&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pecopla.net/seo-column/sakura-server-redirect-method&#34;&gt;さくらのレンタルサーバーでのリダイレクト設定「.htaccess」を使ってhttp→httpsとwww有り無し統一のやり方 | SEO対策なら株式会社ペコプラ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gordiustears.net/trouble-with-wordpress-on-sakura-internet/&#34;&gt;さくらインターネットでWordPressを動かす時の定番のトラブル | ゴルディアスの涙目&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.flickr.net/en/2018/11/01/changing-flickr-free-accounts-1000-photos/&#34;&gt;Why we’re changing Flickr  free accounts | Flickr Blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://techcrunch.com/2018/11/02/flickrs-new-business-model-could-see-works-deleted-from-creative-commons/&#34;&gt;Flickrの新しいビジネスモデルでCreative Commonsの作品は消されるのか  |  TechCrunch Japan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;こう言ったら専門家の方には鼻で笑われるだろうが，セキュリティ専門家が言う「木の葉を隠すなら林の中」理論で馬も鹿も HTTPS ってのには首を傾げてしまう。ましてや SEO 対策で HTTPS に切り替えるとか阿呆としか言いようがない。ひとつのドメインやサービスで，ページや状況によって HTTP と HTTPS を使い分けるな，というのならその通りだと思うけれど。まぁ &lt;a href=&#34;https://letsencrypt.org/&#34; title=&#34;Let&#39;s Encrypt - Free SSL/TLS Certificates&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; が正式リリースされたし「面倒臭い」以外に HTTPS にしない理由はないので，今回はいい機会になったと考えている。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;なにせ1999年以来19年分の垢がこびりついたサイトなので。って今年は（&lt;a href=&#34;https://baldanders.info/spiegel/log/&#34;&gt;本格的に Web で活動を始めて&lt;/a&gt;から）20周年やん！&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;どうも Firefox 側でホワイトリストまたはブラックリストを持っていて，トラッキング・コードの配信元から有効/無効を判断してるっぽい。ホワイトリスト方式またはブラックリスト方式は運用する側にどうしても恣意が混入してしまう。この辺は spam メール対策で懲りているので賢いやり方に見えない。&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Firefox の Cipher Suite</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2018/12/cipher-suite-in-firefox/" />
		<id>tag:text.Baldanders.info,2018-12-16:/remark/2018/12/cipher-suite-in-firefox/</id>
		<published>2018-12-16T02:24:32+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>たまには Firefox のことも思い出してあげてください</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/note_s/n/n517ff243e083&#34;&gt;J-STAGEがFirefoxでのアクセスを遮断、日本の電子ジャーナルが世界から不可視となった日｜Guest｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事を読んで以下のように思わなかっただろうか。&lt;/p&gt;
&lt;p&gt;「Firefox 側が &lt;code&gt;TLS_RSA_WITH_AES_256_CBC_SHA256&lt;/code&gt; あたりを用意すればええんちゃうん？」&lt;/p&gt;
&lt;p&gt;私は思った。
&lt;a href=&#34;https://www.jstage.jst.go.jp/&#34;&gt;J-STAGE&lt;/a&gt; というサイトや運営している &lt;a href=&#34;https://www.jst.go.jp/&#34; title=&#34;国立研究開発法人 科学技術振興機構&#34;&gt;JST&lt;/a&gt; という組織をよく知らないので，なんでそこまで悪意たっぷりに書かれるのかよく分からないが，もうちょっと書きようがあるだろうに。&lt;/p&gt;
&lt;h2&gt;TLS Cipher Suite&lt;/h2&gt;
&lt;p&gt;まず TLS (Transport Layer Security) Version 1.2 の仕様を記した &lt;a href=&#34;https://tools.ietf.org/html/rfc5246&#34; title=&#34;RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2&#34;&gt;RFC 5246&lt;/a&gt; によると “&lt;a href=&#34;https://tools.ietf.org/html/rfc5246#section-9&#34;&gt;Mandatory Cipher Suites&lt;/a&gt;” というのがあって，この中で &lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt; を MUST に定めている。
したがって，上述のリンク先の記事でこれがないことについて「TLS仕様違反」と断じている点は間違いない。&lt;/p&gt;
&lt;p&gt;この場合，サーバ側の対応としては， NSS なら &lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt;， OpenSSL なら &lt;code&gt;AES128-SHA&lt;/code&gt; を有効にすればいいわけだ。&lt;/p&gt;
&lt;p&gt;一方， Firefox はどうなっているかというと &lt;code&gt;about:config&lt;/code&gt; を開いて “&lt;code&gt;ssl3&lt;/code&gt;” で検索すると出てくる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./cipher-suite-in-firefox.png&#34;&gt;&lt;img src=&#34;./cipher-suite-in-firefox.png&#34; srcset=&#34;./cipher-suite-in-firefox.png 643w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Cipher Suite in Firefox&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./cipher-suite-in-firefox.png&#34;&gt;Cipher Suite in Firefox&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ちなみにこれは Firefox Developer Edition 65 の場合である。
一応，抜き書きすると&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.dhe_rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.dhe_rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_128_gcm_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_256_gcm_sha384&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_chacha20_poly1305_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_128_gcm_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_256_gcm_sha384&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_chacha20_poly1305_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_des_ede3_sha&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;となっている。
これを見ると &lt;code&gt;TLS_RSA_...&lt;/code&gt; から始まる古い cipher suite は殆ど対応していないことが分かる（mandatory cipher suites を除けば2つのみ）。
Firefox 側の思惑は不明だが，古い cipher suite は PFS (Perfect Forward Secrecy) に対応してない（できない）ため意図的に外してる可能性もある。&lt;/p&gt;
&lt;h2&gt;Cipher Suites for Modern Browser&lt;/h2&gt;
&lt;p&gt;（おそらくもうサポートされていない）古いブラウザを切り捨てていいのであれば，以下の cipher suite をサポートしておけば問題ないらしい。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HEX&lt;/th&gt;
&lt;th&gt;IANA&lt;/th&gt;
&lt;th&gt;OpenSSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x2C&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES256-GCM-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x30&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES256-GCM-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xCC,0xA9&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-CHACHA20-POLY1305&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xCC,0xA8&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-CHACHA20-POLY1305&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x2B&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES128-GCM-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x2F&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES128-GCM-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x24&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES256-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x28&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES256-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x23&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES128-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x27&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES128-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;これらの cipher suite は Firefox 27 以降, Chrome 30 以降, IE 11 以降, Edge, Opera 17 以降, Safari 9 以降, Android 5.0 以降, Java 8 以降であれば対応している。&lt;/p&gt;
&lt;h2&gt;たまには Firefox のことも思い出してあげてください&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/12/software-diversity/&#34; title=&#34;オープンソースはコードの多様性を担保しない&#34;&gt;以前も書いた&lt;/a&gt;が，携帯端末も含めれば Chrome/Chromium と Safari/WebKit でほぼ寡占状態と言ってよい。
そういった状況の中で Firefox も対応しろと言われてもかったるいかもしれないし，実際に私が関わったことのある案件でも Chrome や Edge での動作確認はするのに Firefox はスルーするところも結構あったりした。
特定企業への依存度が減るんだから，むしろ Firefox は推奨されていいと思うんだけどねぇ。&lt;/p&gt;
&lt;p&gt;少なくとも HTTPS 接続で Firefox を&lt;ruby&gt;&lt;rb&gt;村八分&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ハブ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;にする理由はないと思うので，是非ともよろしくお願いします。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://support.mozilla.org/en-US/questions/1119007&#34;&gt;How can I disable arbitrary SSL/TLS cipher suites in Firefox? | Firefox Support Forum | Mozilla Support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34;&gt;Security/Server Side TLS - MozillaWiki&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7905&#34;&gt;RFC 7905 - ChaCha20-Poly1305 Cipher Suites for Transport Layer Security (TLS)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34;&gt;SSL Server Test (Powered by Qualys SSL Labs)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cc.dcsec.uni-hannover.de/&#34;&gt;SSL Cipher Suites Supported By Your Browser&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/cipherscan&#34;&gt;GitHub - mozilla/cipherscan: A very simple way to find out which SSL ciphersuites are supported by a target.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/square/certigo&#34;&gt;GitHub - square/certigo: A utility to examine and validate certificates in a variety of formats&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/key-parameters/&#34;&gt;暗号鍵関連の各種変数について&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>HTTPS 通信監視機器のリスク</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2017/03/security-risk-of-https-interception/" />
		<id>tag:text.Baldanders.info,2017-03-21:/remark/2017/03/security-risk-of-https-interception/</id>
		<published>2017-03-21T11:32:28+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>2015年の CERT/CC ブログ記事「The Risks of SSL Inspection」に関する注意喚起が今更ながら出ている。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;2015年の CERT/CC ブログ記事 “&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;” に関する注意喚起が今更ながら出ている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://jhalderm.com/pub/papers/interception-ndss17.pdf&#34;&gt;The Security Impact of HTTPS Interception &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.us-cert.gov/ncas/alerts/TA17-075A&#34;&gt;HTTPS Interception Weakens TLS Security | US-CERT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/ta/JVNTA96603741/&#34;&gt;JVNTA#96603741: HTTPS 通信監視機器によるセキュリティ強度低下の問題&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「HTTPS 通信監視機器」というのは，ぶっちゃけていうと， HTTPS 暗号通信&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; に「中間者攻撃（man-in-the-middle attack）」を仕掛けて通信を傍受し malware 等を検出・排除する「セキュリティ製品」である。&lt;/p&gt;
&lt;p&gt;HTTPS 通信監視機器のいくつかにはセキュリティ上の問題が存在する。
“&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;” から抜き出してみよう。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Incomplete validation of upstream certificate validity&lt;/li&gt;
&lt;li&gt;Not conveying validation of upstream certificate to the client&lt;/li&gt;
&lt;li&gt;Overloading of certificate Canonical Name (CN) field&lt;/li&gt;
&lt;li&gt;Use of the application layer to convey certificate validity&lt;/li&gt;
&lt;li&gt;Use of a User-Agent HTTP header to determine when to validate a certificate&lt;/li&gt;
&lt;li&gt;Communication before warning&lt;/li&gt;
&lt;li&gt;Same root CA certificate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これらの問題があると推測される製品のリストが “&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;” に挙がっているので該当者は確認してみるとよいだろう。
また以下のサイトからも確認できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://badssl.com/&#34;&gt;badssl.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;“&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;” では以下のように結論付けている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;SSL and TLS do not provide the level of end-to-end security that users may expect. Even in absence of SSL inspection, there are problems with how well browsers are conveying SSL information to users. The fact that &#34;SSL inspection&#34; is a phrase that exists, should be a blazing red flag that what you think SSL is doing for you is fundamentally broken.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;http://insights.sei.cmu.edu/cert/2015/03/the-risks-of-ssl-inspection.html&#34;&gt;The Risks of SSL Inspection&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://baldanders.info/blog/000812/&#34; title=&#34;HTTPS Deep Inspection — Baldanders.info&#34;&gt;以前も書いた&lt;/a&gt;が，HTTPS 通信監視機器（あるいは HTTPS Deep Inspection）の存在自体がインターネットの “End to End” 原則を崩すものであり，ひいては「ネットの中立性」に楔を入れるものである。
しかし「&lt;a href=&#34;https://text.baldanders.info/remark/2016/03/vulnerability-cross-protocol-attack-on-tls-using-sslv2/&#34; title=&#34;SSLv2 を有効にしている TLS 実装の脆弱性 ― 馬も鹿も暗号化する時代のセキュリティ&#34;&gt;馬も鹿も暗号化する時代&lt;/a&gt;」にこの原則は風前の灯である。
たとえば &lt;a href=&#34;https://text.baldanders.info/remark/2016/07/cms/&#34; title=&#34;「自分で面倒見られる子」だけが CMS を導入しなさい&#34;&gt;CMS の面倒すらろくすっぽ見られない&lt;/a&gt;ユーザが「うちも &lt;a href=&#34;https://letsencrypt.org/&#34; title=&#34;Let&#39;s Encrypt - Free SSL/TLS Certificates&#34;&gt;Let&amp;rsquo;s la Encrypt&lt;/a&gt;」とか言い出して脆弱性だらけのサイトを暗号化したらどうなるのか。&lt;/p&gt;
&lt;p&gt;ネットワーク・セキュリティ専門家から企業あるいは私たち個人に至るまで，場当たりな対処に満足するのではなく，この「現実」にきちんと向き合うべきだと思うのだが，どうだろう。&lt;/p&gt;
&lt;h2&gt;【おまけの追記】公開鍵基盤が担保するもの&lt;/h2&gt;
&lt;p&gt;他の事象だが同じ公開鍵基盤（Public Key Infrastructure; PKI）に関連している事柄なので，おまけの追記ということで。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.computerworld.com/article/3184573/security/to-punish-symantec-google-may-distrust-a-third-of-the-webs-ssl-certificates.html&#34;&gt;To punish Symantec, Google may distrust a third of the web&amp;rsquo;s SSL certificates | Computerworld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://notchained.hatenablog.com/entry/2017/03/27/090554&#34;&gt;Symantecが再びGoogleの信頼を失った件についてのメモ - Technically, technophobic.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35098759/&#34;&gt;グーグル、シマンテックが発行したTLS証明書に不信感 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「&lt;a href=&#34;http://notchained.hatenablog.com/entry/2017/03/27/090554&#34; title=&#34;Symantecが再びGoogleの信頼を失った件についてのメモ - Technically, technophobic.&#34;&gt;Symantecが再びGoogleの信頼を失った件についてのメモ&lt;/a&gt;」にもあるように Symantec （傘下の Thawte）は既に前科持ちなので「またか（sigh）」って感じなのだが&amp;hellip;&lt;/p&gt;
&lt;p&gt;X.509 型の公開鍵基盤は認証局（Certification Authority; CA）が信頼できることが絶対条件で，これが崩れると機能しなくなる。&lt;/p&gt;
&lt;p&gt;喩えるならお金と銀行の関係と似ている。
銀行はお金の価値を担保するが銀行が信用できないのならお金の価値を担保するものがなくなる。
同じく認証局が管理する証明書は認証局が安全性を担保できているからこそ意味がある。
そうでなければオレオレ証明書またはそれ以下の価値しかない。&lt;/p&gt;
&lt;p&gt;この問題は Symantec と Google の2者間の喧嘩だと思ったら物事を見誤る。
現在 Web を支配している公開鍵基盤の根幹に関わる問題なのである。&lt;/p&gt;
&lt;p&gt;それにしても，昔「&lt;a href=&#34;https://baldanders.info/blog/000277/&#34; title=&#34;Extended Validation SSL — Baldanders.info&#34;&gt;EV SSL は『屋上屋を架す』ようにしか見えない&lt;/a&gt;」と書いたが，まったくもってその通りだったな（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000809/&#34;&gt;Malware Spoofing HTTPS（3月2日，追記あり） — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000812/&#34;&gt;HTTPS Deep Inspection — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35098402/&#34;&gt;HTTPS監視装置にセキュリティ低下の危険性&amp;ndash;日米機関で注意喚起 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2017/03/new_paper_on_en.html&#34;&gt;New Paper on Encryption Workarounds - Schneier on Security&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2938033&#34;&gt;Encryption Workarounds by Orin S. Kerr, Bruce Schneier :: SSRN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;念のため簡単に説明しておくと， HTTPS (Hypertext Transfer Protocol Secure) 暗号通信は WWW (World Wide Web) におけるクライアント-サーバ間の通信経路を暗号化する仕組みである。具体的には TLS (Transport Layer Security) 等のプロトコルを用い公開鍵暗号方式を使ってセッション鍵を生成する。また公開鍵暗号方式の公開鍵は X.509 方式の公開鍵基盤によって管理される。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>NIST SP800-52 Rev.1 の邦訳が登場</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2017/02/sp800-52-rev1-japanese/" />
		<id>tag:text.Baldanders.info,2017-02-01:/remark/2017/02/sp800-52-rev1-japanese/</id>
		<published>2017-02-01T14:06:06+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>NIST SP800-52 Rev.1 の邦訳が登場したようだ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;IPA は &lt;a href=&#34;http://www.ipa.go.jp/security/publications/nist/&#34; title=&#34;セキュリティ関連NIST文書：IPA 独立行政法人 情報処理推進機構&#34;&gt;NIST のセキュリティ関連文書の邦訳を積極的に行っている&lt;/a&gt;が，SP800-52 Rev.1 の邦訳が登場したようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nist.gov/node/562891?pub_id=915295&#34;&gt;Guidelines for the Selection, Configuration, and Use of Transport Layer Security (TLS) Implementations | NIST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://www.ipa.go.jp/files/000057084.pdf&#34;&gt;NIST Special Publication 800-52 Revision 1 トランスポート層セキュリティ (TLS) 実装の選択、設定、および使用のためのガイドライン &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;古い話になるが，2013年までに &lt;a href=&#34;https://baldanders.info/blog/000626/&#34; title=&#34;RC4 終了のお知らせ — Baldanders.info&#34;&gt;RC4 の危殆化&lt;/a&gt;や SSL/TLS の攻略コードがいくつか「開発」されたことにより TLS 1.2 への移行が強く推奨されることになった。
それを受けての SP800-52 改訂だったのだが，その後の SSL/TLS やその実装である OpenSSL 等のソフトウェアへの攻撃の激しさはみなさんご存じのとおりである。&lt;/p&gt;
&lt;p&gt;そうそう。
IPA と言えば最近になってヤバい注意喚起が上がっている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/announce/website_vuln.html&#34;&gt;【注意喚起】SQLインジェクションをはじめとしたウェブサイトの脆弱性の再点検と速やかな改修を：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また2014年に大騒ぎになった Heartbleed 脆弱性をいまだに放置しているサイトもあるようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35095570/&#34;&gt;「Heartbleed」脆弱性、多くのサイトやサーバでいまだに存在&amp;ndash;Shodan Report - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;攻撃者は既知の攻撃は当然のように試す。
先延ばししていいことは何もない。
いや，マジでお願いしますよ，サイト運用者の方々。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000740/&#34;&gt;CRYPTREC Report 2013 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000682/&#34;&gt;パスワード変更は計画的に — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000810/&#34;&gt;Prohibiting RC4 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>SSLv2 を有効にしている TLS 実装の脆弱性 ― 馬も鹿も暗号化する時代のセキュリティ</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2016/03/vulnerability-cross-protocol-attack-on-tls-using-sslv2/" />
		<id>tag:text.Baldanders.info,2016-03-03:/remark/2016/03/vulnerability-cross-protocol-attack-on-tls-using-sslv2/</id>
		<published>2016-03-02T15:30:52+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>OpenSSL をはじめとする SSL/TLS 暗号通信の実装に複数のセキュリティ脆弱性あり。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;脆弱性の内容&lt;/h2&gt;
&lt;p&gt;いい加減 SSL 周りの脆弱性にはうんざりなのだが， &lt;a href=&#34;https://www.openssl.org/&#34; title=&#34;OpenSSL&#34;&gt;OpenSSL&lt;/a&gt; をはじめとする SSL/TLS 暗号通信の実装に複数のセキュリティ脆弱性あり。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;CVE&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;脆弱性内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0800&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Cross-protocol attack on TLS using SSLv2 (DROWN)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0705&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Double-free in DSA code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0798&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Memory leak in SRP database lookups&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0797&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;BN_hex2bn/BN_dec2bn NULL pointer deref/heap corruption&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0799&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Fix memory issues in BIO_*printf functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0702&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Side channel attack on modular exponentiation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0703&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Divide-and-conquer session key recovery in SSLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CVE-2016-0704&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Bleichenbacher oracle in SSLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;このうち特に CVE-2016-0800 のリスクが高いので紹介する。&lt;/p&gt;
&lt;h3&gt;CVE-2016-0800 : Cross-protocol attack on TLS using SSLv2 (DROWN)&lt;/h3&gt;
&lt;p&gt;通称 &lt;a href=&#34;https://drownattack.com/&#34;&gt;DROWN (Decrypting RSA with Obsolete and Weakened eNcryption)&lt;/a&gt; 攻撃。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;A cross-protocol attack was discovered that could lead to decryption of TLS sessions by using a server supporting SSLv2 and EXPORT cipher suites as a Bleichenbacher RSA padding oracle.  Note that traffic between clients and non-vulnerable servers can be decrypted provided another server supporting SSLv2 and EXPORT ciphers (even with a different protocol such as SMTP, IMAP or POP) shares the RSA keys of the non-vulnerable server. This vulnerability is known as DROWN (CVE-2016-0800).&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.openssl.org/news/secadv/20160301.txt&#34;&gt;OpenSSL Security Advisory [1st March 2016]&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://www.openssl.org/&#34; title=&#34;OpenSSL&#34;&gt;OpenSSL&lt;/a&gt; などで SSLv2 を有効にしている場合， SSL を使用していなくても TLS 暗号通信を中間者攻撃で攻略することができるらしい&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
ポイントは SSL サーバのみでなくサーバとネットで繋がっている他のマシンにも影響をおよぼす可能性があることだ。&lt;/p&gt;
&lt;h3&gt;CVE-2016-0702 : Side channel attack on modular exponentiation&lt;/h3&gt;
&lt;p&gt;リスクは低いが， CVE-2016-0702 についても一応紹介しておく。
通称 &lt;a href=&#34;http://ssrg.nicta.com.au/projects/TS/cachebleed/&#34; title=&#34;CacheBleed: A Timing Attack on OpenSSL Constant Time RSA&#34;&gt;CacheBleed&lt;/a&gt; と呼ばれる side-channel 攻撃の一種である。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;A side-channel attack was found which makes use of cache-bank conflicts on the Intel Sandy-Bridge microarchitecture which could lead to the recovery of RSA keys.  The ability to exploit this issue is limited as it relies on an attacker who has control of code in a thread running on the same hyper-threaded core as the victim thread which is performing decryptions.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.openssl.org/news/secadv/20160301.txt&#34;&gt;OpenSSL Security Advisory [1st March 2016]&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;どうもこれ，2013年の GnuPG の脆弱性のバリエーションらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://eprint.iacr.org/2013/448.pdf&#34;&gt;Flush&amp;#43;Reload: a High Resolution, Low Noise, L3 Cache Side-Channel Attack &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; （&lt;a href=&#34;https://baldanders.info/blog/000648/&#34; title=&#34;Flush+Reload: a High Resolution, Low Noise, L3 Cache Side-Channel Attack — Baldanders.info&#34;&gt;当時書いた拙文&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Side-channel 攻撃は成立条件が特殊なので，一般的にリスクは高くない。
CVSSv2 基本評価値は 2.6 (AV:L/AC:H/Au:N/C:P/I:P/A:N) なので，こういう攻略法もあるといった程度に覚えておくといいだろう。&lt;/p&gt;
&lt;h2&gt;影響度（CVSS）&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CVSSv2 基本評価値 7.1 (AV:N/AC:H/Au:N/C:C/I:C/A:N)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“&lt;a href=&#34;https://www.kb.cert.org/vuls/id/583776&#34;&gt;Vulnerability Note VU#583776 - Network traffic encrypted using RSA-based SSL certificates over SSLv2 may be decrypted by the DROWN attack&lt;/a&gt;” より&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃前の認証要否（Au）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;全面的（C）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;全面的（C）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;CVSSv3 基本評価値 7.4 (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;「&lt;a href=&#34;http://jvn.jp/vu/JVNVU90617353/&#34;&gt;JVNVU#90617353: SSLv2 の暗号通信を解読可能な脆弱性 (DROWN 攻撃)&lt;/a&gt;」より&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;必要な特権レベル（PR）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;ユーザ関与レベル（UI）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;スコープ（S）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;変更なし（U）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;CVSS については&lt;a href=&#34;https://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;
&lt;h2&gt;影響を受ける製品&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OpenSSL 1.0.1r およびそれ以前の 1.0.1 系列&lt;/li&gt;
&lt;li&gt;OpenSSL 1.0.2f およびそれ以前の 1.0.2 系列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;また，このバージョンの &lt;a href=&#34;https://www.openssl.org/&#34; title=&#34;OpenSSL&#34;&gt;OpenSSL&lt;/a&gt; を利用している製品（Apache, Postfix, Nginx 等）も影響を受ける。
なお，公開されているサーバが &lt;a href=&#34;https://drownattack.com/&#34; title=&#34;DROWN Attack&#34;&gt;DROWN&lt;/a&gt; の影響を受けているかどうかテストするサイトがある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://test.drownattack.com/&#34;&gt;test.drownattack.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.openssl.org/&#34; title=&#34;OpenSSL&#34;&gt;OpenSSL&lt;/a&gt; 以外にも SSLv2 が有効になっている場合は今回の脆弱性の影響を受ける可能性があり，以下の製品・バージョンについて警告されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft IIS (Windows Server) : バージョン 7 以降は既定で SSLv2 が無効化されている&lt;/li&gt;
&lt;li&gt;MNetwork Security Services (NSS) : バージョン 3.13 以降は既定で SSLv2 が無効化されている&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LibreSSL は &lt;a href=&#34;https://drownattack.com/&#34; title=&#34;DROWN Attack&#34;&gt;DROWN&lt;/a&gt; の影響を受けないそうだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://undeadly.org/cgi?action=article&amp;amp;sid=20160301141941&amp;amp;mode=expanded&#34;&gt;LibreSSL not affected by DROWN attack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;対策・回避策&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.openssl.org/&#34; title=&#34;OpenSSL&#34;&gt;OpenSSL&lt;/a&gt; に関しては最新バージョンで対策されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenSSL 1.0.1s&lt;/li&gt;
&lt;li&gt;OpenSSL 1.0.2g&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSL は既に仕様上の脆弱性を抱えており，可能な限り無効にすることをお薦めする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/vuln/ssl_crypt_config.html&#34;&gt;SSL/TLS暗号設定ガイドライン～安全なウェブサイトのために（暗号設定対策編）～：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どうしても SSLv2 を有効にしなければならない場合，証明書を分けて，他のプロトコルと共用しないようにすること。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://drownattack.com/&#34;&gt;DROWN (Decrypting RSA with Obsolete and Weakened eNcryption)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.openssl.org/news/secadv/20160301.txt&#34;&gt;OpenSSL Security Advisory [1st March 2016]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kb.cert.org/vuls/id/583776&#34;&gt;Vulnerability Note VU#583776 - Network traffic encrypted using RSA-based SSL certificates over SSLv2 may be decrypted by the DROWN attack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU90617353/&#34;&gt;JVNVU#90617353: SSLv2 の暗号通信を解読可能な脆弱性 (DROWN 攻撃)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2016/at160010.html&#34;&gt;OpenSSL の複数の脆弱性に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20160301/1456849603&#34;&gt;OpenSSLの脆弱性CVE-2016-800(DROWN)やCVE-2016-0702(CacheBleed)についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gigazine.net/news/20160302-drown-attack/&#34;&gt;SSLの脆弱性で日本の大手サイトを含む全世界1100万以上のHTTPSサイトが攻撃を受け得ると判明 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35078777/&#34;&gt;HTTPSサイトの3割に影響する「DROWN」脆弱性見つかる&amp;ndash;OpenSSLはパッチ公開 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1603/02/news065.html&#34;&gt;「DROWN攻撃」の脆弱性が発覚，HTTPSサイトの33％に影響 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/vulnerability/february-2016-security-releases/&#34;&gt;February 2016 Security Release Summary | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.cryptographyengineering.com/2016/03/attack-of-week-drown.html&#34;&gt;A Few Thoughts on Cryptographic Engineering: Attack of the week: DROWN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arstechnica.com/security/2016/03/more-than-13-million-https-websites-imperiled-by-new-decryption-attack/&#34;&gt;More than 11 million HTTPS websites imperiled by new decryption attack | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tsukamoto/items/9a5242e39e255fdc194b&#34;&gt;VMware製品へのDROWN脆弱性の影響情報 - Qiita&lt;/a&gt; : VMware 製品には影響はないそうだ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;【余談】 馬も鹿も暗号化する時代のセキュリティ&lt;/h2&gt;
&lt;p&gt;一千万規模か。
意外と少ないな。
まぁ2014年に大騒ぎになった SSL 関連の脆弱性のおかげで SSL を無効にしたところも多かろう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/announce/20141017-ssl.html&#34;&gt;更新：SSL 3.0 の脆弱性対策について(CVE-2014-3566)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSL を無効に出来ないサイトの多くは古い PC やケータイを考慮しているのだろうけど，もう考慮の余地はないと思う。
セキュリティを気にせざるを得ない他のユーザに迷惑をかけるからだ。&lt;/p&gt;
&lt;p&gt;Web サイトを全て暗号化すべきという意見があって，セキュリティ専門家でも賛同者が多いが，私は懐疑的だ。
現在はセキュリティ要件が2,3年単位で変化し追従できないサービスやユーザも多い。
問題なのは，サイトが乗っ取らるなどして，暗号通信下で malware の活動を許してしまうことで，セキュリティ管理のいい加減なサービスが暗号通信を行うのはむしろ有害とさえ言える。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://news.mynavi.jp/news/2016/03/01/106/&#34;&gt;SSL VPNの9割がセキュリティ対策が不十分な状況 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://internet.watch.impress.co.jp/docs/news/20160229_745799.html&#34;&gt;総SSL通信化時代のセキュリティ死角、F5ネットワークスが解説 -INTERNET Watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35078634/&#34;&gt;サイバー攻撃を認識するまで平均2カ月かかる&amp;ndash;CIO意識調査 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今だに SSLv2 や SSLv3 を有効にしているサイトがあるというのなら，そのサイトはセキュリティ上は全く信用できないと断言していいと思う。
脆弱な暗号通信を使うくらいなら，いっそ暗号化していない限定機能の HTTP サイトを用意して古いマシンのユーザは（安全でないことを警告したうえで）そちらに誘導する方がよい。
個人的な感覚では Web サービス全体の 2/3 程度が暗号化できていれば充分だと思う。&lt;/p&gt;
&lt;p&gt;馬も鹿も暗号化するこの時代。
国家や企業の戯れ言に耳を貸す気はないが，それが本当は何を守ってるのか，そろそろ真面目に考えないといけないのではないのだろうか。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;TLS と SSLv3 で同じ証明書を使用している場合。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>[security] Go 1.5.3 is released</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2016/01/security-update-go-1_5_3-is-released/" />
		<id>tag:text.Baldanders.info,2016-01-24:/remark/2016/01/security-update-go-1_5_3-is-released/</id>
		<published>2016-01-24T06:24:23+00:00</published>
		<updated>2019-07-01T13:48:09+00:00</updated>
		<summary>リスクとしては大したことはないですが， Web アプリケーションまたは TLS の実装を Go 言語で行っている方は要更新です。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;2週間前の話ですみません。
1月14日に &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;コンパイラ 1.5.3 が出ています。
メインは &lt;a href=&#34;https://golang.org/pkg/math/big/&#34; title=&#34;big - The Go Programming Language&#34;&gt;&lt;code&gt;math/big&lt;/code&gt;&lt;/a&gt; パッケージの不具合修正です。&lt;/p&gt;
&lt;p&gt;リスクとしては大したことはないですが， Web アプリケーションまたは TLS の実装を &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で行っている方は要更新です。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This issue can affect RSA computations in crypto/rsa, which is used by crypto/tls. TLS servers on 32-bit systems could plausibly leak their RSA private key due to this issue. Other protocol implementations that create many RSA signatures could also be impacted in the same way.&lt;br&gt;
Specifically, incorrect results in one part of the RSA Chinese Remainder computation can cause the result to be incorrect in such a way that it leaks one of the primes. While RSA blinding should prevent an attacker from crafting specific inputs that trigger the bug, on 32-bit systems the bug can be expected to occur at random around one in 2^26 times. Thus collecting around 64 million signatures (of known data) from an affected server should be enough to extract the private key used.&lt;br&gt;
On 64-bit systems, the frequency of the bug is so low (less than one in 2^50) that it would be very difficult to exploit. Nonetheless, everyone is strongly encouraged to upgrade.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/MEATuOi_ei4&#34;&gt;[security] Go 1.5.3 is released - Google グループ&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;CVE-2015-8618 Carry propagation in Int.Exp Montgomery code in math/big library&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CVSSv2 基本評価値 2.6 (&lt;code&gt;AV:N/AC:H/Au:N/C:P/I:N/A:N&lt;/code&gt;)&lt;/strong&gt;
（&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2015-8618&#34;&gt;Redhat による評価&lt;/a&gt;）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;高（H）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;攻撃前の認証要否（Au）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;部分的（P）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;なし（N）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
	</entry>
</feed>
