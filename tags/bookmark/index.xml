<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Bookmark - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/bookmark/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/bookmark/index.xml" />
	<id>tag:text.Baldanders.info,2015-09-11T17:58:42+0900:/</id>
	<updated>2015-09-11T17:58:42+0900</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」 （プレ・オープン中）</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15-DEV</generator>

	
	<entry>
		<title>Go 言語に関するブックマーク - golang</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/golang/bookmark/" />
		<id>tag:text.Baldanders.info,2015-09-11T17:58:42+0900:/golang/bookmark/</id>
		<published>2015-09-11T17:58:42+0900</published>
		<updated>2015-09-12T10:20:00+0900</updated>
		<summary>本業が忙しくて Go 言語をかまってあげる暇がないのだが，ブックマークばっかり溜まっていくので，定期的に吐き出しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="http://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（初出： &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/98d49ac456485b007a15&#34;&gt;Go 言語に関するブックマーク - Qiita&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;本業が忙しくて Go 言語をかまってあげる暇がないのだが，ブックマークばっかり溜まっていくので，定期的に吐き出しておく。&lt;/p&gt;

&lt;h2 id=&#34;official:9bacfa348e5fe42acc9342a16675997d&#34;&gt;公式サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/&#34;&gt;The Go Programming Language&lt;/a&gt; : 2015年9月8日時点での最新は 1.5.1

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go.googlesource.com/&#34;&gt;git repositories (Google)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang&#34;&gt;git repositories (GitHub)&lt;/a&gt; : mirror&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://golang-jp.org/&#34;&gt;golang-jp - The Go Programming Language&lt;/a&gt; : 本家の日本語訳サイト。（&lt;a href=&#34;http://golang.jp/&#34;&gt;golang.jp&lt;/a&gt; は参考にしない方がいい，らしい）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go 1.5 Released.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/go1.5&#34;&gt;Go 1.5 is released - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/go1.5&#34;&gt;Go 1.5 Release Notes - The Go Programming Language&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1e8kOo3r51b2BWtTs_1uADIA5djfXhPT36s6eHVRIvaU/edit&#34;&gt;Go 1.4 &amp;ldquo;Internal&amp;rdquo; Packages&lt;/a&gt; : Internal Packages は 1.5 で GOPATH まで拡張された&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1Bz5-UB7g2uPBdOx-rw5t9MxJwkfpx90cqG9AFL0JAYo/edit&#34;&gt;Go 1.5 Vendor Experiment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;spec:9bacfa348e5fe42acc9342a16675997d&#34;&gt;言語仕様に関すること&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kazusa-qooq/items/40f9ea3e72406d845b10&#34;&gt;Golangの基本文法をおさえてみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tanaka0325/items/9c61a022cd32be0c65a6&#34;&gt;Golang の 数値型 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/makoto_kw/items/0638c0af1002647e3f7a&#34;&gt;忙しい人のためのA Tour of Go - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/modal_soul/items/e49480e5692597fda975&#34;&gt;Goのfor rangeで思った値が取れなかった話 - Qiita&lt;/a&gt; : ちょっとしたミス&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kwi/items/185bb3fe0d60ca765ab0&#34;&gt;Go - unsafe が unsafe なケース (1) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/lang/go/20130919023425.htm&#34;&gt;Big Sky :: Go言語でインタフェースの変更がそれ程問題にならない理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/taji-taji/items/5a4f17bcf5b819954cc1&#34;&gt;import 書き方まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;string:9bacfa348e5fe42acc9342a16675997d&#34;&gt;文字列操作または変換&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/ref/spec#String_types&#34;&gt;string&lt;/a&gt;, &lt;a href=&#34;http://blog.golang.org/strings&#34;&gt;rune&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.golang.org/strings&#34;&gt;Strings, bytes, runes and characters in Go - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knightso.hateblo.jp/entry/2014/06/24/090719&#34;&gt;Go言語のstring, runeの正体とは？ - golang - The Round&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Sheile/items/ba51ac9091e09927b95c&#34;&gt;Go言語は空文字に対してstrings.splitを掛けると1要素の配列を返す - Qiita&lt;/a&gt; : コメントに別解あり&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hokaccha/items/3d3f45b5927b4584dbac&#34;&gt;golang - Goでマルチバイトが混在した文字列をtruncateする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://matope.hatenablog.com/entry/2014/04/22/101127&#34;&gt;Golangでの文字列・数値変換 - 小野マトペの納豆ペペロンチーノ日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/uchiko/items/1810ddacd23fd4d3c934&#34;&gt;golang - Go言語で文字コード変換 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ikawaha/items/540c2af34b1c381c37c1&#34;&gt;Go で euc-jp や sjis の csv ファイルを読み込むには変換用のリーダーを1つかませるだけでよかった - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ruiu/items/2bb83b29baeae2433a79&#34;&gt;Goでは文字列連結はコストの高い操作 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ono_matope/items/d5e70d8a9ff2b54d5c37&#34;&gt;Goの文字列結合のパフォーマンス - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yoya/items/23ac2c490625c5d47ad9&#34;&gt;Go言語で SplitMultiSep (複数種の区切り文字列で分解) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;文字列型と他の型との相互変換を覚えておけば，案外どうにかなるものである。（文字列操作が処理のメインならスクリプト言語のほうが有利だけどね）&lt;/p&gt;

&lt;h3 id=&#34;slice:9bacfa348e5fe42acc9342a16675997d&#34;&gt;配列&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/ref/spec#Slice_types&#34;&gt;slice&lt;/a&gt;, &lt;a href=&#34;http://golang.org/ref/spec#Map_types&#34;&gt;map&lt;/a&gt;, &lt;a href=&#34;http://golang.org/ref/spec#Making_slices_maps_and_channels&#34;&gt;make&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jxck.hatenablog.com/entry/golang-slice-internals2&#34;&gt;Go のスライスでハマッたところ - Block Rockin’ Codes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/ref/spec#Slice_types&#34;&gt;slice&lt;/a&gt;, &lt;a href=&#34;http://golang.org/ref/spec#Map_types&#34;&gt;map&lt;/a&gt;, および後述の &lt;a href=&#34;http://golang.org/ref/spec#Channel_types&#34;&gt;channel&lt;/a&gt; は組み込みの型だが内部構造と状態を持つため， &lt;a href=&#34;http://golang.org/ref/spec#Allocation&#34;&gt;new&lt;/a&gt; ではなく &lt;a href=&#34;http://golang.org/ref/spec#Making_slices_maps_and_channels&#34;&gt;make&lt;/a&gt; を使う。&lt;/p&gt;

&lt;h3 id=&#34;goroutine:9bacfa348e5fe42acc9342a16675997d&#34;&gt;並行処理と並列処理&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/ref/spec#Go_statements&#34;&gt;goroutine&lt;/a&gt;, &lt;a href=&#34;http://golang.org/ref/spec#Channel_types&#34;&gt;channel&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jxck.hatenablog.com/entry/20130414/1365960707&#34;&gt;Go の並行処理 - Block Rockin’ Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/suin/items/eca21ed935115e5da2e8&#34;&gt;Go: 計算なしのFizzBuzz - Qiita&lt;/a&gt; : channel の説明するのにいいかも&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yuki2006/items/3f90e53ce74c6cff1608&#34;&gt;Goのchannelの送受信用の型について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hondata/items/64776c79063e93bea9ed&#34;&gt;Go言語のChannelは送信時にもブロックする - Qiita&lt;/a&gt; : 意外と見落とす channel 送信時のブロック&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tutuming/items/c0ffdd28001ee0e9320d&#34;&gt;golang - x/net/context の実装パターン - Qiita&lt;/a&gt; : &lt;a href=&#34;https://godoc.org/golang.org/x/net/context&#34;&gt;golang.org/x/net/context&lt;/a&gt; を使って並行処理を細かく制御。 Domain-Driven あるいは Context-Driven な設計でも使えそう。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go 言語で複数 CPU を使った並列処理を行うには明示的な設定が必要。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/07/30/golang-parallel-by-cpu/&#34;&gt;Go言語でCPU数に応じて並列処理数を制限する | SOTA&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ymko/items/554e3630fefdc29393a8&#34;&gt;やはり俺のgolangがCPUを一つしか使わないのはまちがっている。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;proc:9bacfa348e5fe42acc9342a16675997d&#34;&gt;プロセス間同期&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/shanxia1218/items/7fb15f50ec645f114bc7&#34;&gt;Go言語でプロセス間同期処理 - Qiita&lt;/a&gt; : Windows の Mutex を使ってプロセス間通信を行う&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sample-code:9bacfa348e5fe42acc9342a16675997d&#34;&gt;パッケージやサンプルコード&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sago35/items/cc9ed3dc38d0b2f19bf9&#34;&gt;Go用のGoogle製のGUIツールキットgxuiのインストール(Windows版) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ohisama@github/items/bfc1eb6407cbdfebbd18&#34;&gt;goでLチカの練習　その２ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/rubytomato@github/items/638299aabb7922cbef59&#34;&gt;Go - Revel templatesを使ったサンプルアプリケーション - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ohisama@github/items/20bc61175ce4a33b7365&#34;&gt;goでwindowsでwindow - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.daisukeyamashita.com/post/1209.html&#34;&gt;Go言語でパッケージを作成して世界に公開する方法 at ミネルヴァの梟は黄昏とともに飛び始める（山下 大介 公式ブログ）&lt;/a&gt; : パッケージの作り方なんだけど、情報が古すぎた orz&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ohisama@github/items/e6fa2bd1527c257bb9c9&#34;&gt;goでwindowsでRS232C - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ohisama/serial&#34;&gt;ohisama/serial&lt;/a&gt; (forkd from &lt;a href=&#34;https://github.com/lnmx/serial&#34;&gt;lnmx/serial&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ohisama@github/items/12dccdcdfc5082c22e72&#34;&gt;goでwindowsでRS232C その２ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ohisama@github/items/9f05679f25cfc9c3ecfc&#34;&gt;goでwindowsでキースキャン - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/modal_soul/items/83b0930d90d44e006768&#34;&gt;Goのencoding/jsonでタグが反映されなくてハマったしょうもない話 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/mitsuse/items/8669bf54d2310b3e68a1&#34;&gt;gocron でジョブスケジューリング - Qiita&lt;/a&gt; : &lt;a href=&#34;https://github.com/carlescere/scheduler&#34;&gt;gcarlescere/scheduler&lt;/a&gt; のほうがおすすめらしいw&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/51b0f45496e5143e2e63&#34;&gt;Google ChromeのテキストエリアをEmacsで編集する&amp;rsquo;Edit with Emacs&amp;rsquo;から任意のエディタを起動するデーモンをGo 1.4 for Windowsで書いてみたわけだが、エディタがブラウザの後ろに出てしまってダメかもしれない - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/shibukawa/items/9db22c9684cc0586b737&#34;&gt;golangでprivateなエイリアスのポインタを元の型に戻す - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/methane/items/8f56f663d6da4dee9f64&#34;&gt;Go の expvar パッケージを使ってアプリケーションのメトリクスを公開する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/minodisk/items/d96a0673223f36315ce7&#34;&gt;ジェネレートしたコードを gofmt / goimports する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/suin/items/b9c0f92851454dc6d461&#34;&gt;Go言語: ファイルの存在をちゃんとチェックする実装? - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/shinofara/items/e5e78e6864a60dc851a6&#34;&gt;Golangで、ファイル一覧取得（最新順出力） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tutuming/items/d8aaaf5442d84a7961e1&#34;&gt;golang - Go小ネタ: 正規表現を全角半角問わずマッチするよう変換する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sudix/items/c542e1b59bc94dc741e3&#34;&gt;Goのバッチで統計を取得するAPIを用意しておくと便利 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/masatsugumatsus/items/e28254ff52963705ce7f&#34;&gt;Mithril＋golang Gin を試す - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/qube81/items/c47b9e3ea8d028e95588&#34;&gt;大学入試問題をGoで解いてみる - Qiita&lt;/a&gt; : &lt;a href=&#34;https://golang.org/pkg/math/big/&#34;&gt;math/big&lt;/a&gt; パッケージを使って大きな数を計算する。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yodatomato/items/8013f728bbf4358e9425&#34;&gt;GoでGoogleCalendarAPIv3を叩く（APIキー） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/8845musign/items/5c4b32f82c2df08acd93&#34;&gt;golang - cmd.Envを設定してexecしたらコケた - Qiita&lt;/a&gt; : &lt;a href=&#34;https://golang.org/pkg/os/exec/&#34;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; パッケージを使う際には環境変数に注意&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cli:9bacfa348e5fe42acc9342a16675997d&#34;&gt;コマンドライン・ツール&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yuuki.hatenablog.com/entry/go-cli-unix&#34;&gt;Go言語によるCLIツール開発とUNIX哲学について - ゆううきブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tellme.tokyo/post/2015/06/23/unix_cli_tool_go/&#34;&gt;開発者から見た UNIX 哲学とコマンドラインツールと Go言語 - TELLME.TOKYO&lt;/a&gt; （&lt;a href=&#34;http://qiita.com/b4b4r07/items/df660d82e2de715acda5&#34;&gt;Qiita 版&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/pkg/flag/&#34;&gt;flag&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/uokada/items/f0e069a751679dcf616d&#34;&gt;Go - コマンドライン引数 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ryochack.hatenablog.com/entry/2013/04/17/232753&#34;&gt;Go言語のflagパッケージを使う - uragami note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/flaflasun/items/df5ebb057697da062a08&#34;&gt;Go を使ってコマンドラインツール wordc を作ってみた - Qiita&lt;/a&gt; : &lt;a href=&#34;https://github.com/codegangsta/cli&#34;&gt;codegangsta/cli&lt;/a&gt; についての言及あり&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/isaoshimizu/items/71dd2ca2a08ddb607e31&#34;&gt;golang - GoでCLIツール作るのに便利そうなパッケージを集めてみました - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ryochack.hatenablog.com/entry/2013/07/15/232207&#34;&gt;C言語とGo言語で標準出力が端末を参照しているかどうかを判定する - uragami note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2015/04/17/panicwrap/&#34;&gt;Go言語のCLIツールのpanicをラップしてクラッシュレポートをつくる | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;io:9bacfa348e5fe42acc9342a16675997d&#34;&gt;入出力処理&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/pkg/io/&#34;&gt;io&lt;/a&gt;, &lt;a href=&#34;http://golang.org/pkg/bufio/&#34;&gt;bufio&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hnakamur/items/a53b701c8827fe4bfec7&#34;&gt;Go ファイルや標準入力から一行ずつ読み込む - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ono_matope/items/5c8cfce81933c5eb9fd0&#34;&gt;Goでファイルを読んで別のgoroutineに渡す - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kroton/items/431e6dad9e5e4dbc44cf&#34;&gt;「連結されたgzipを1行ずつ見る」をgolangでやったらハマった - Qiita&lt;/a&gt; : &lt;a href=&#34;https://golang.org/pkg/compress/gzip/&#34;&gt;compress/gzip&lt;/a&gt; と入出力処理の関係&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/curious-eyes/items/2d4b6c20ea47e3efc47b&#34;&gt;bufio.Scannerのend-of-line判断を変更してみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kobegdg.blogspot.jp/2013/05/go.html&#34;&gt;KOBE GDG: Go言語　バイナリファイルを扱う&lt;/a&gt; : 任意のオブジェクトをバイト列に変換してファイルに格納&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cgo:9bacfa348e5fe42acc9342a16675997d&#34;&gt;cgo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/cmd/cgo/&#34; title=&#34;cgo - The Go Programming Language&#34;&gt;cgo&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://1000ch.net/posts/2014/c-in-golang-with-cgo.html&#34;&gt;cgoでGoのコードからCの関数を利用する - 1000ch.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://beatsync.net/main/log20141022.html&#34;&gt;cgoでGolangとC++ライブラリをリンクするとき、何が起きているのか - beatsync.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;logging:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Logging&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kosuda/items/988c505c2abc5321aba8&#34;&gt;Golang logging library - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.satotaichi.info/logging-frameworks-for-go/&#34;&gt;go言語におけるロギングについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Ets/items/49e8f781990a3b0b3821&#34;&gt;Golangで簡単にログを吐くことを考える - Qiita&lt;/a&gt; : &lt;a href=&#34;https://github.com/cihub/seelog&#34;&gt;seelog&lt;/a&gt; について解説している。私は XML には全くアレルギーがないので無問題&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sbjib/items/2cef51e572eef0795bc2&#34;&gt;Go言語でdebugログの実現方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;framework:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Web Microframework for Golang&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goji.io/&#34;&gt;Goji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/lang/go/20141021134209.htm&#34;&gt;Big Sky :: golang で最近お気に入りの WAF「Goji」&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/reiki4040/items/a038f1b99e0caee97d3e&#34;&gt;gojiのMiddlewareの使い方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sys_cat/items/1b8581de1344cc5db6bb&#34;&gt;golang - Gojiを使ってWebビーコン作る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/taizo/items/845fcfc58cfd0b30020a&#34;&gt;Google App EngineでGoのウェブアプリケーションをまず動かしてみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/n0bisuke/items/45ab414fc11959fc27c7&#34;&gt;Go言語(Go-Json-Rest)でAPIサーバーを立てるときのCORS設定 (Basic認証機能付きも) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/taizo/items/e6597c66c3494d545686&#34;&gt;Goでwebサーバー作るときに考えたこと - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tchssk/items/cb208f9ccd0a1819bbfa&#34;&gt;Golang の net/url で # を含む文字列を Parse() する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kkdd/items/bd653e3d02546d1aa340&#34;&gt;Golang で OpenStreetMap ファイル（osm.pbf）の読み込み（osmpbf 利用） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/masahikoofjoyto/items/f60188f4252e455541d4&#34;&gt;golang - GoのWEBアプリケーション運用について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hachi8833/items/315642ceecb378cabcb4&#34;&gt;golang - go-qmlのWebViewでローカルWebサイトを表示するときの注意 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/eielh/items/2e5fabb707355253b187&#34;&gt;http.Clientのタイムアウトの時間を変更 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kenjiszk/items/7ae842415ec392822612&#34;&gt;golangでhttpを監視するscriptを書いて結果をslackにpostする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/n0bisuke/items/65c4a473a1fdbbf931f0&#34;&gt;Go言語(Go-Json-Rest)のCORSでのハマり。Safariだけでハマった話。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;embed:9bacfa348e5fe42acc9342a16675997d&#34;&gt;ビルド時に情報を各種埋め込みたい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/suin/items/d643a0ccb6270e8e3734&#34;&gt;Go言語: ビルド時にバージョン情報を埋め込みたい - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doloopwhile.hatenablog.com/entry/2014/09/08/211626&#34;&gt;Golangビルド時に、サブパッケージ内の変数をいじる - None is None is None&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ikawaha/items/c02d84cfd00f8f442500&#34;&gt;go-bindata でコンパイル時にリソースを埋め込んじゃおう！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/reiki4040/items/6b32370532c3eafe1f0e&#34;&gt;golang - Goでビルドバージョン情報を参照できるようにする(Go1.5) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;testing:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Go 言語のテスト・フレームワーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Jxck_/items/8717a5982547cfa54ebc&#34;&gt;Go の Test に対する考え方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://straitwalk.hatenablog.com/entry/2014/09/18/232810&#34;&gt;Goでテストを書く - 成らぬは人の為さぬなりけり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/umisama/items/0d589cca7e89b89c29a8&#34;&gt;golang 1.4で追加されたtestingの便利機能(テストの初期化とお片づけ) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/taizo/items/11897f6284159919f65a&#34;&gt;gojiのレスポンス結果をテストする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tenntenn/items/24fc34ec0c31f6474e6d&#34;&gt;Go Mockでインタフェースのモックを作ってテストする #golang - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jxck.hatenablog.com/entry/20131123/1385189088&#34;&gt;Go でベンチマーク - Block Rockin’ Codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Mulyu/items/ed585f2777496f29a725&#34;&gt;go言語でベンチマーク - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ci:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Continuous Integration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/dmnlk/items/3fb4e0abb98e39fee275&#34;&gt;Go + Travis CI + Coveralls でCI環境を作る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sue445.hatenablog.com/entry/2013/06/01/170607&#34;&gt;GithubにあるリポジトリをTravis CI連携する手順 #junitbook - くりにっき&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/10/16/golang-in-ci-as-a-service/&#34;&gt;CI-as-a-ServiceでGo言語プロジェクトの最新ビルドを継続的に提供する | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://uchimanajet7.hatenablog.com/entry/2015/03/20/211352&#34;&gt;golangでTravis CIを使ってクロスコンパイルするときにハマったところ #golang #travisci - uchimanajet7のメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/atotto/items/b796c31c1755dbec13db&#34;&gt;Go言語のビルド生活を drone.ioで幸せに暮らす #golang - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;godoc:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Go 言語のドキュメント・フレームワーク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://godoc.org/golang.org/x/tools/cmd/godoc&#34; title=&#34;godoc - GoDoc&#34;&gt;godoc&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/megu_ma/items/2066aef2f8c7f0ce2cc3&#34;&gt;Go で godoc を使えるようにする〜godoc のインストール〜 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/05/26/go-code-review/&#34;&gt;Go言語のコードレビュー | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://papaeye.tumblr.com/post/92328649161/go&#34;&gt;Go コードのレビュー時によくされるコメント - build error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/taknb2nch/20131101/1383285018&#34;&gt;testingパッケージのExamplesについて - taknb2nchのメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://swdyh.tumblr.com/post/55771477125/go-example&#34;&gt;GoのExampleテストが便利 : swdyh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/taknb2nch/20140225/1393302743&#34;&gt;godoc.org への掲載方法を調べた - taknb2nchのメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;refactoring:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Refactoring&lt;/h2&gt;

&lt;p&gt;リファクタリングには gofmt よりも gorename が使えるという話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/lang/go/20150113141338.htm&#34;&gt;Big Sky :: golang のリファクタリングには gofmt ではなく、gorename を使おう。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;environment:9bacfa348e5fe42acc9342a16675997d&#34;&gt;開発環境など&lt;/h2&gt;

&lt;h3 id=&#34;integrated-development-environment:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Integrated Development Environment&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://codezine.jp/article/detail/8374&#34;&gt;EclipseでGoプログラミング！ GoClipseのインストールとGojiフレームワークを使ったWeb APIの作成 （1/6）：CodeZine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ngsm3/items/67620fc4e39219235a23&#34;&gt;WindowsでGolang開発環境構築　IntelliJ IDEA - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gihyo.jp/dev/serial/01/android_studio/0001&#34;&gt;第1回　Android Studio，そしてベースとなる「IntelliJ IDEA」とは何か？：Android Studio最速入門～効率的にコーディングするための使い方｜gihyo.jp … 技術評論社&lt;/a&gt; : IntelliJ IDEA についての解説&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/makoto2468/items/3ced77de947ea997e72f&#34;&gt;Go入門@環境構築編(IntelliJ IDEA 14.1.4) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;debug:9bacfa348e5fe42acc9342a16675997d&#34;&gt;デバッガ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tetsuok.hatenablog.com/entry/2012/07/01/062325&#34;&gt;golang でビルド時に最適化をオフにする - tetsuok の旅 blog&lt;/a&gt; : gdb でデバッグする際は最適化を off にするといいという話&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;atom:9bacfa348e5fe42acc9342a16675997d&#34;&gt;ATOM で Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://notchained.hatenablog.com/entry/2014/09/20/104829&#34;&gt;AtomでGoを書く環境を整える（Windows） - Technically, technophobic.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;vscode:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Visual Studio Code で Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/evalphobia/items/f68396d573c7caf2065b&#34;&gt;VisualStudioCode - Visual Studio CodeでGo言語の設定 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/llaughlin/16305f0b91356e93a1c4&#34;&gt;VSCode+Golang&lt;/a&gt; : task.json の設定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;gb:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Build Tool for Golang&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/constabulary/gb&#34;&gt;constabulary/gb&lt;/a&gt; を使ってプロジェクトベースの環境構築&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/shinofara/items/ac0591fef95c2c6e936e&#34;&gt;golang - gbを知ったのでgojiを使ったWEBアプリケーションプロジェクトを管理してみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://walledcity.com/supermighty/building-go-projects-with-gb&#34;&gt;Building Go projects with gb - Supermighty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2015/06/26/golang-dependency-vendoring/&#34;&gt;Go言語のDependency/Vendoringの問題と今後．gbあるいはGo1.5 | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cross:9bacfa348e5fe42acc9342a16675997d&#34;&gt;クロス環境&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://unknownplace.org/archives/golang-cross-compiling.html&#34;&gt;Goはクロスコンパイルが簡単 - unknownplace.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Jxck_/items/02185f51162e92759ebe&#34;&gt;Go のクロスコンパイル環境構築 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kaoriya.net/blog/2015/03/06/&#34;&gt;golang でのクロスコンパイルの留意事項 — KaoriYa&lt;/a&gt; : Windows 環境でクロス環境を構築する際の注意点。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yanolab/items/5a6dfb3c07c94f7c760d&#34;&gt;Golang + Raspberry Pi + LPS331AP で気圧・温度を測定してみた - Qiita&lt;/a&gt; : Raspberry Pi 用のクロス環境例。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gobot.io/&#34;&gt;Gobot - Golang framework for robotics, physical computing, and the Internet of Things&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2015/07/22/go1_5-cross-compile/&#34;&gt;Go1.5はクロスコンパイルがより簡単 | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ttsuzo/items/64e29dd7caa635ac7863&#34;&gt;MacOS X でGo言語のクロスコンパイルを試したらハマった - Qiita&lt;/a&gt; : &lt;a href=&#34;https://github.com/mitchellh/gox&#34;&gt;gox&lt;/a&gt; を使う方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/e44961a8bcbb2578cfe7&#34;&gt;Goで64bitと32bitの実行ファイルを同一Windows機で作成するために講じたこと - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;remark:9bacfa348e5fe42acc9342a16675997d&#34;&gt;その他 四方山話&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/suin/items/22662f43b6a6e8728798&#34;&gt;動的言語だけやってた僕が、38日間Go言語を書いて学んだこと - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ksato9700/items/6228d4eb6d5b282f82f6&#34;&gt;golang - Go言語で幸せになれる10のテクニック - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kaoriya.net/blog/2014/04/17/&#34;&gt;または私は如何にして例外するのを止めて golang を愛するようになったか — KaoriYa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.wacul.co.jp/blog/2014/08/22/go/&#34;&gt;これからGoを始める人のためのTips集 | The Wacul Blog&lt;/a&gt; : ちゃんと開発環境を整備したい場合には参考になる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/mrpepper/items/95c428f2b3c25be6b3e2&#34;&gt;Golang ファーストインプレッション - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kayac.com/news/2014/07/golang&#34;&gt;2014年夏、カヤックは、Go言語を積極的に推進していきます。 ｜ニュース｜面白法人カヤック&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://akiradeveloper.hatenadiary.com/entry/2014/07/22/205515&#34;&gt;(go report) Goが本当はすごかったので, 謝罪する - テストステ論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/TakaakiFuruse/items/0fec78e5ecbcbe4337e8&#34;&gt;Golang のインスコでハマった件 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/t-sato/items/a5d1a309733e765533ce&#34;&gt;Go Conference 2015 summer - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yamadagenki/items/5032cf853f6b136b533f&#34;&gt;最新versionのgolangをぶち込む方法について - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hostingadvice.com/how-to/install-golang-on-ubuntu/&#34;&gt;7 Easy Steps to Install Go (Golang) on Ubuntu - HostingAdvice.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/15/herokugo.html&#34;&gt;Heroku、Go言語の正式サポートを発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;最近ではGo言語の採用例が増えてきており、例えばDropboxは性能が重要な部分ではPythonに代わりGoで記述することを昨年11月に表明しており、オープンソースのPaaS基盤であるCloud Foundryも主要部分での開発でGo言語の採用を進めていると言われています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/15/google_app_enginego_1.html&#34;&gt;Google App Engineも「Go言語」の正式サポートを発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hiconyan/items/7656e9fb2d5bf5c794be&#34;&gt;Sensuでネットワーク監視やってみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.ibm.com/open/i18n4go/&#34;&gt;i18n4go - developerWorks Open&lt;/a&gt; : IBM の &lt;a href=&#34;https://developer.ibm.com/open/&#34;&gt;developerWorks Open&lt;/a&gt; プロジェクトのひとつ。「&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1507/23/news058.html&#34;&gt;プログラムを国際化するための汎用ツール&lt;/a&gt;」らしい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;go15:9bacfa348e5fe42acc9342a16675997d&#34;&gt;Go 1.5 に関する話題&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/msaito3/items/3aef86e9864990b16b4c&#34;&gt;GVM で go1.5rc1 のインストール - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/masahikoofjoyto/items/4ced298989e6ab346f15&#34;&gt;goを1.5にアップデートして1.4とベンチを取る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/taji-taji/items/4c43e126e67d65a219e3&#34;&gt;Go 1.3 から 1.5 へのアップデートでエラー - Qiita&lt;/a&gt; : 古いバージョンからアップデートする際は，いったん 1.4 に上げてから 1.5 にアップデートするとよい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/lang/go/20150820102400.htm&#34;&gt;Big Sky :: golang 1.5 の internal パッケージの使い方。&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/qt-luigi/items/d0f52b3b0906b35e6027&#34;&gt;「golang 1.5 の internal パッケージの使い方。」を試してみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo に関するブックマーク - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/bookmark/" />
		<id>tag:text.Baldanders.info,2015-09-05T00:00:00+0900:/hugo/bookmark/</id>
		<published>2015-09-05T00:00:00+0900</published>
		<updated>2015-09-12T11:30:00+0900</updated>
		<summary>当サイトを Hugo で構築するにあたって参考になったページを紹介する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;当サイトを &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で構築するにあたって参考になったページを紹介する。
日本語の情報が少ないのでホンマに感謝だよ。&lt;/p&gt;

&lt;h2 id=&#34;official:9bacfa348e5fe42acc9342a16675997d&#34;&gt;公式サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo :: A fast and modern static website engine&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;spf13/hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;spf13/hugoThemes&lt;/a&gt; : &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のテーマ集。スクリーンショットもあるよ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;mostfav:9bacfa348e5fe42acc9342a16675997d&#34;&gt;日本語によるもっとも丁寧な解説&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0714-hugo/&#34;&gt;静的サイトジェネレータHugoの導入 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0715-hugo/&#34;&gt;Hugoのフォルダ構成 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0731-hugo/&#34;&gt;Hugoでサイト構築(1) レイアウトことはじめ | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0807-hugo-config/&#34;&gt;Hugoでサイト構築(2) サイト全体の設定&amp;rsquo;config.toml&amp;rsquo; | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0808-hugo-partial/&#34;&gt;Hugoでサイト構築(3) partialで部品をつくる | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0817-hugo-markdown/&#34;&gt;Hugoでサイト構築(4) markdownで記事を書く | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0818-hugo-static/&#34;&gt;Hugoでサイト構築(5) そのままコピーする&amp;rsquo;static&amp;rsquo;フォルダ | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0824-hugo-public/&#34;&gt;Hugoでサイト構築(6) publicへの記事出力について | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0831-hugo-section/&#34;&gt;Hugoでサイト構築(7) Sectionで記事を分類する | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;themes:9bacfa348e5fe42acc9342a16675997d&#34;&gt;テーマなど&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://rakuishi.com/archives/hugo-zen/&#34;&gt;Hugo Zen: これから Hugo を始める人向けのミニマムなテーマを作りました - rakuishi.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ci:9bacfa348e5fe42acc9342a16675997d&#34;&gt;継続的インテグレーション&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yoheimuta/items/8a619cac356bed89a4c9&#34;&gt;Hugo + Github Pages + Wercker CI = ¥0（無料）でコマンド 1 発（自動化）でサイト・ブログを公開・運営・分析・収益化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hori-ryota.com/blog/create-blog-with-hugo-and-circleci/&#34;&gt;HugoとCircleCIでGitHub PagesにBlogを公開してみたら超簡単だった · Hori Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rel:9bacfa348e5fe42acc9342a16675997d&#34;&gt;関連ドキュメント&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://golang.org/pkg/text/template/&#34;&gt;template - The Go Programming Language&lt;/a&gt; : &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で使われているテンプレートパッケージ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/b4b4r07/items/77c327742fc2256d6cbe&#34;&gt;設定ファイル記述言語 TOML - Qiita&lt;/a&gt; : &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の設定は TOML で記述するのがヨサゲ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hashrock/items/939684b9207dbab1d59e&#34;&gt;floatより辛くない「flexbox」でざっくりレイアウト - Qiita&lt;/a&gt; : flex は table より float より直感的で分かりやすい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/&#34;&gt;Font Awesome, the iconic font and CSS toolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://syncer.jp/how-to-use-highlightjs&#34;&gt;ソースコードをハイライトする軽量ライブラリ、Highlight.jsの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cc-icons.github.io/&#34;&gt;Creative Commons Icon Font&lt;/a&gt; : CC License 用のアイコン・フォント&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;others:9bacfa348e5fe42acc9342a16675997d&#34;&gt;その他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://t32k.me/mol/log/hugo/&#34;&gt;Jekyllが許されるのは小学生までだよね - MOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/syui/items/869538099551f24acbbf&#34;&gt;CSS - HUGOを使ってサイトを立ち上げる方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://machortz.github.io/posts/usinghugo/&#34;&gt;Hugoを使ってみたときのメモ // machortz blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/12/25/hugo/&#34;&gt;OctopressからHugoへ移行した | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.jigyakkuma.org/2015/02/11/hugo/&#34;&gt;blogをoctopressからHugoに乗り換えたメモ / 俺よりイケてないエンジニアはいない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keens.github.io/blog/2014/12/30/migration-from-octopress-to-hugo/&#34;&gt;OctopressからHugoに移行した | κeenのHappy Hacκing Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kmry@github/items/01f68550880dcc6d01fe&#34;&gt;静的サイトジェネレーターHugoでgithubページ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yet.unresolved.xyz/blog/2015/01/04/migrate-blog-to-hugo-from-octopress/&#34;&gt;ブログをOctopressからHugoに移行した | Unresolved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yet.unresolved.xyz/blog/2015/01/07/how-to-use-multibyte-title-in-hugo/&#34;&gt;Hugoでマルチバイトのタイトルをスマートに使う方法 | Unresolved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tamano/items/d3be25027c9b80bbfb7a&#34;&gt;metalsmith - 静的サイトジェネレータを比較してみた - Qiita&lt;/a&gt; : Hugo を含めた比較記事。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kakkyz81/items/75bcaace6bcaa38373ba&#34;&gt;Hugoではテーマを指定しないとindex.htmlのサイズがゼロで作成される - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/DQNEO/items/7c05252fa434c861d938&#34;&gt;MovableTypeからHugoにブログ記事を移管するために下調べしたのでまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takunagai.github.io/post/hugo/template/&#34;&gt;Hugo のテンプレート 基本 | My Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
