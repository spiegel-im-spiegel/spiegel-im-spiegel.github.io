<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Git - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/git/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/git/index.xml" />
	<id>tag:text.Baldanders.info,2016-01-09:/</id>
	<updated>2016-01-09T18:59:13+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15</generator>

	
	<entry>
		<title>週末スペシャル： Go コンパイラのセキュリティアップデートがあるらしい - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/01/09-stories/" />
		<id>tag:text.Baldanders.info,2016-01-09:/remark/2016/01/09-stories/</id>
		<published>2016-01-09T18:59:13+09:00</published>
		<updated>2016-01-09T18:59:13+09:00</updated>
		<summary>Go コンパイラのセキュリティアップデートがあるらしい / GnuPG 1.4.20 released / GitLab.com にアカウントを作った / くそな「中間者デバイス」が SHA-1 廃止の邪魔をする</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;年末忙しくて書き損ねてるネタを回収中。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#go:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;Go コンパイラのセキュリティアップデートがあるらしい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gpg:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;GnuPG 1.4.20 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gl:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;GitLab.com にアカウントを作った&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mitm:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;くそな「中間者デバイス」が SHA-1 廃止の邪魔をする&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;go:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;Go コンパイラのセキュリティアップデートがあるらしい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/MLaPAPFlCNY&#34;&gt;[security] Go 1.5.3 pre-announcement - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳細は示されてないが13日（日本時間だと14日かな）を待つことにしよう。
来週は月例のセキュリティ更新週間である。&lt;/p&gt;

&lt;h2 id=&#34;gpg:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;GnuPG 1.4.20 released&lt;/h2&gt;

&lt;p&gt;昨年の話で申し訳ないが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2015q4/000382.html&#34;&gt;[Announce] GnuPG 1.4.20 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;セキュリティアップデートではないが既定の動作が変わるようである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reject signatures made using the MD5 hash algorithm unless the new option &amp;ndash;allow-weak-digest-algos or &amp;ndash;pgp2 are given.&lt;/li&gt;
&lt;li&gt;New option &amp;ndash;weak-digest to specify hash algorithms which should be considered weak.&lt;/li&gt;
&lt;li&gt;Changed default cipher for symmetric-only encryption to AES-128.&lt;/li&gt;
&lt;li&gt;Fix for DoS when importing certain garbled secret keys.&lt;/li&gt;
&lt;li&gt;Improved error reporting for secret subkey w/o corresponding public subkey.&lt;/li&gt;
&lt;li&gt;Improved error reporting in decryption due to wrong algorithm.&lt;/li&gt;
&lt;li&gt;Fix cluttering of stdout with trustdb info in double verbose mode.&lt;/li&gt;
&lt;li&gt;Pass a DBUS envvar to gpg-agent for use by gnome-keyring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GnuPG というか OpenPGP が後生大事に MD5 を残しているのは過去の資産への対応のためであろう。&lt;/p&gt;

&lt;p&gt;ちなみに PGP の最初のリリースは1991年で，実に四半世紀も前である。
作者の &lt;a href=&#34;https://www.philzimmermann.com/&#34;&gt;Phil Zimmermann&lt;/a&gt; は当時，米国内反核運動の活動家であった。
更に暗号技術に対する政治的圧力は現在と比較にならないほど厳しく，米国は長いあいだ彼をマークし続けた。
PGP の広まり方や改良のプロセスは実に「インターネット的」であった。
詳しくは Steven Levy の『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;暗号化（Crypto）&lt;/a&gt;』をどうぞ。&lt;/p&gt;

&lt;p&gt;あれからネットも随分変わったが，当時政府が何をしたか企業は何をしたか「暗号アナーキスト」たちはどうしたか。
現在のネットは先人の努力により「勝ち取った」ものであることを私たちは絶対に忘れてはならない。&lt;/p&gt;

&lt;p&gt;自由そのものは自由ではない。
勝ち取ったものはいつか奪われる。
奪われたくなければ勝ち続けなければならない。&lt;/p&gt;

&lt;h2 id=&#34;gl:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;GitLab.com にアカウントを作った&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/masakura/items/e679c094e8afea9a4879&#34;&gt;GitLab/GitLab.com 勉強会 (2015/12/09) レポート - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これ見て &lt;a href=&#34;https://gitlab.com/&#34; title=&#34;GitLab&#34;&gt;GitLab.com&lt;/a&gt; にアカウントを作ってみた。
とりあえず中身は空っぽ。
公開リポジトリを &lt;a href=&#34;https://gitlab.com/&#34; title=&#34;GitLab&#34;&gt;GitLab.com&lt;/a&gt; に作るメリットはない気もするが，容量が 10GB/repos あるのはありがたい。&lt;/p&gt;

&lt;p&gt;まぁ，どう使うかはこれからおいおい考える。
今年あたり，どっかにサーバでも借りて私用リポジトリ・サービスを立ち上げてみたいのだが，これもおいおい。&lt;/p&gt;

&lt;h2 id=&#34;mitm:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;くそな「中間者デバイス」が SHA-1 廃止の邪魔をする&lt;/h2&gt;

&lt;p&gt;いやもうこれは笑うところだよね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35075954/&#34;&gt;「Firefox」、SHA-1証明書のサポートを一時的に復活&amp;ndash;HTTPSサイトのアクセスに問題 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1601/08/news069.html&#34;&gt;FirefoxのSHA-1廃止で一部ユーザーに障害、サポート復活 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;Barnes氏は次のように説明している。「ユーザーがHTTPSサイトへの接続を試みると、中間者デバイスがFirefoxに対し、サーバの本物の証明書でなく新規のSHA-1証明書を送信する」&lt;br&gt;
「Firefoxは新規のSHA-1証明書を拒否するため、サーバに接続できない」（同氏）&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35075954/&#34;&gt;「Firefox」、SHA-1証明書のサポートを一時的に復活--HTTPSサイトのアクセスに問題&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;「&lt;a href=&#34;http://text.baldanders.info/remark/2015/problem-of-sha1-collision/&#34;&gt;SHA-1 衝突問題： 廃止の前倒し&lt;/a&gt;」でも紹介したが， SHA-1 の危殆化はかなり現実的な問題になってきている。
いますぐどうこうというわけではないが，これ以上の先延ばしは出来ない状態である。
しかし CA やブラウザが頑張っても「中間者デバイス」なる覗き屋が邪魔をする。&lt;/p&gt;

&lt;p&gt;やはりセキュリティ製品が暗号通信に対して「中間者攻撃」を仕掛けるのは筋が悪すぎると思うのだが，何とかならないものかねぇ。&lt;/p&gt;

&lt;h2 id=&#34;参考図書:f5be1a5c24e490c7dcaaa2d9d26e48a7&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;スティーブン・レビー 斉藤 隆央 &lt;/dd&gt;&lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/487593100X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/487593100X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハッカーズ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4105393022/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4105393022.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読―ロゼッタストーンから量子暗号まで&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4484111160/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4484111160.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グーグル ネット覇者の真実 追われる立場から追う立場へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/410215972X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/410215972X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読〈上〉 (新潮文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4102159738/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4102159738.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読 下巻 (新潮文庫 シ 37-3)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015/03/09&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>あまり使わないけど，たまに使おうとすると忘れてる Git コマンド集 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/git-commands/" />
		<id>tag:text.Baldanders.info,2015-12-09:/remark/2015/git-commands/</id>
		<published>2015-12-09T20:14:59+09:00</published>
		<updated>2016-01-24T15:42:38+09:00</updated>
		<summary>git 各コマンドに関する覚え書き。思い出したら追記予定。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;git&lt;/a&gt; 各コマンドに関する覚え書き。
思い出したら追記予定。&lt;/p&gt;

&lt;h2 id=&#34;submodule-の作成から削除まで:426366135f9b7036b5475695fbc6d142&#34;&gt;Submodule の作成から削除まで&lt;/h2&gt;

&lt;h3 id=&#34;submodule-の作成:426366135f9b7036b5475695fbc6d142&#34;&gt;Submodule の作成&lt;/h3&gt;

&lt;p&gt;Repository に別の repository &lt;code&gt;sub_repo.git&lt;/code&gt; を submodule として &lt;code&gt;subdir&lt;/code&gt; に追加する場合は以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule add sub_repo.git subdir
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;submodule-の初期化:426366135f9b7036b5475695fbc6d142&#34;&gt;Submodule の初期化&lt;/h3&gt;

&lt;p&gt;Submodule を含む repository を clone してきた場合は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone repo.git
$ cd repo/subdir
$ git submodule init
$ git submodule update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;または&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --recursive repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で初期化できる。
これ以降， remote 側から fetch/maerge した際に submodule の参照ポイントが変更されていた場合は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で初期化できる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:426366135f9b7036b5475695fbc6d142:sub1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:426366135f9b7036b5475695fbc6d142:sub1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&#34;submodule-の更新:426366135f9b7036b5475695fbc6d142&#34;&gt;Submodule の更新&lt;/h3&gt;

&lt;p&gt;Submodule の remote 側の変更を pull する場合は以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule update --remote subdir
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fetch したデータを merge する場合は &lt;code&gt;--merge&lt;/code&gt; オプションを， rebase する場合は &lt;code&gt;--rebase&lt;/code&gt; オプションを付ける&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:426366135f9b7036b5475695fbc6d142:rb&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:426366135f9b7036b5475695fbc6d142:rb&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&#34;submodule-の削除:426366135f9b7036b5475695fbc6d142&#34;&gt;Submodule の削除&lt;/h3&gt;

&lt;p&gt;Repository から submodule を削除する場合は以下のコマンドで削除できる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git submodule deinit subdir
$ git rm subdir
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;remote-repository-の接続設定:426366135f9b7036b5475695fbc6d142&#34;&gt;Remote Repository の接続設定&lt;/h2&gt;

&lt;h3 id=&#34;remote-repository-への-uri-を変更する:426366135f9b7036b5475695fbc6d142&#34;&gt;Remote Repository への URI を変更する&lt;/h3&gt;

&lt;p&gt;Remote repository （通常は &lt;code&gt;origin&lt;/code&gt;）の接続先 URI を変更するには以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote set-url origin new_repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;remote-repository-との接続を追加する:426366135f9b7036b5475695fbc6d142&#34;&gt;Remote Repository との接続を追加する&lt;/h3&gt;

&lt;p&gt;新たに remote repository との接続を追加する場合には以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote add upstream up_repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここでは追加した remote repository に &lt;code&gt;upstream&lt;/code&gt; と名前をつけている。
たとえば fork した repository で作業する際に fork 元の repository の変更も取り込みたい場合などに有効である。&lt;/p&gt;

&lt;h3 id=&#34;remote-repository-との接続を削除する:426366135f9b7036b5475695fbc6d142&#34;&gt;Remote Repository との接続を削除する&lt;/h3&gt;

&lt;p&gt;Remote repository との接続を削除する場合には以下のコマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote rm upstream
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;repository-の分離:426366135f9b7036b5475695fbc6d142&#34;&gt;Repository の分離&lt;/h2&gt;

&lt;p&gt;Repository の特定のディレクトリ &lt;code&gt;subdir&lt;/code&gt; を commit tree を維持したまま分離したいときの手順。&lt;/p&gt;

&lt;p&gt;まず元の repository &lt;code&gt;org_repo.git&lt;/code&gt; を clone する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone org_repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clone 元の bare repository がない場合にはローカルの repository を丸ごとどっかにコピーすればよい（commit 済みであること）。&lt;/p&gt;

&lt;p&gt;で， clone した repository 内に入って &lt;code&gt;git filter-branch&lt;/code&gt; コマンドを実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd org_repo
$ git filter-branch --subdirectory-filter subdir HEAD
Rewrite **************************************** (999/999)
Ref &#39;refs/heads/master&#39; was rewritten
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このとき &lt;code&gt;subdir&lt;/code&gt; 以下のファイル・ディレクトリが repository のトップ・ディレクトリに移動するので注意が必要である。
また，オリジナルの commit tree が &lt;code&gt;refs/original/refs/heads/master&lt;/code&gt; として残っているので以下のコマンドで削除する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git update-ref -d refs/original/refs/heads/master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した repository はそのまま使うなり新しい bare repository に push するなりすればいい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git remote set-url origin new_repo.git
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;元の repository に push しようとすると怒られる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:426366135f9b7036b5475695fbc6d142:sf&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:426366135f9b7036b5475695fbc6d142:sf&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;git-に関するブックマーク:426366135f9b7036b5475695fbc6d142&#34;&gt;Git に関するブックマーク&lt;/h2&gt;

&lt;p&gt;ついでなので，ローカルで溜め込んでいた &lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;git&lt;/a&gt; に関するブックマークを挙げておく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34;&gt;Git Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kinokoru.jp/archives/1017&#34;&gt;【Git入門者向け】イメージで理解するGitコマンド事始め | きのこる庭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kray.jp/blog/git-pull-rebase/&#34;&gt;git pull と git pull –rebase の違いって？図を交えて説明します！ | KRAY Inc&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/Teloo/items/95a860ae276b49edb040&#34;&gt;Git - pull は本当に fetch + merge なの？ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/doilux/items/b5a9abd95ac91e848a5f&#34;&gt;Gitのこれやめて！リスト - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://meme.efcl.info/2011/07/gitcloneerror-setting-certificate.html&#34;&gt;githubからclone時にerror setting certificate verify locationsがでる | MemeTodo&lt;/a&gt; : うちでもなっていろいろ大変だった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kiida/items/0d51c43ac73f14f09f5a&#34;&gt;Git LFSが1.0になってGitHubで使えるようになったので試してみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/crifff/items/32ffc824f69ed5632217&#34;&gt;git-lfsは大容量のファイルを扱うもので多量のファイルを扱うものではない - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://r-h.hatenablog.com/entry/2013/12/07/093423&#34;&gt;gitで重いリポジトリをcloneするとき - webネタ&lt;/a&gt; （&lt;a href=&#34;http://qiita.com/butchi_y/items/cc0fe50acc47c1e3ab32&#34;&gt;Qiita 版&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/ja/v2/Git-%E3%81%AE%E3%81%95%E3%81%BE%E3%81%96%E3%81%BE%E3%81%AA%E3%83%84%E3%83%BC%E3%83%AB-%E3%82%B5%E3%83%96%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB&#34;&gt;Git - サブモジュール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://raimon49.github.io/2015/04/04/git-submodule-deinit.html&#34;&gt;Gitのsubmoduleをお手軽に削除する - Steel Dragon 14106&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/hiratara/20091112/1258023732&#34;&gt;Gitリポジトリ中のサブディレクトリを別のリポジトリにする - 北海道苫小牧市出身のPGが書くブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gozuk16.hatenablog.com/entry/2015/04/24/145714&#34;&gt;Gitリポジトリのディレクトリ構成を変えて別リポジトリにする - ごずろぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/go_astrayer/items/6e39d3ab16ae8094496c&#34;&gt;Git リポジトリに上がっているファイルを履歴ごと消すには？ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/dtan4/items/34e41e3bd40a43fd8cbf&#34;&gt;GitHub にパスワードとかセンシティブなファイルを push してしまったときの対処法 - Qiita&lt;/a&gt; : GitHub などリモートのリポジトリに上げてしまうと，とてつもなく面倒になるので，要注意&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hirogw/items/3ea3a321a367740e971a&#34;&gt;マージされてない他者のプルリクを取り込む - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sagaraya/items/60e983856e16dc571f22&#34;&gt;git commit時に英語でメッセージ書くためのヒントを表示する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;git-flow-and-github-flow:426366135f9b7036b5475695fbc6d142&#34;&gt;Git-flow and GitHub-flow&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://scottchacon.com/2011/08/31/github-flow.html&#34;&gt;GitHub Flow – Scott Chacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/Gab-km/3705015&#34;&gt;GitHub Flow (Japanese translation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;A successful Git branching model » nvie.com&#34;&gt;A successful Git branching model » nvie.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;git-flow cheatsheet&#34;&gt;git-flow cheatsheet&lt;/a&gt; （日本語）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://komaken.me/blog/2013/09/09/git-flow%E3%81%A8github-flow%E3%81%96%E3%81%A3%E3%81%8F%E3%82%8A%E3%81%BE%E3%81%A8%E3%82%81/&#34;&gt;git flowとgithub flowざっくりまとめ | KentaKomai Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.qnyp.com/2013/05/28/pull-request-for-github-beginners/&#34;&gt;GitHub初心者はForkしない方のPull Requestから入門しよう | qnyp blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/anqooqie/items/07367b2b5932f3acfc38&#34;&gt;Git for Windows 2.xのシステムコンフィグファイルは2つある - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:426366135f9b7036b5475695fbc6d142:sub1&#34;&gt;&lt;code&gt;--recursive&lt;/code&gt; オプションなしで cloneした 直後は &lt;code&gt;git update&lt;/code&gt; では初期化できないので注意。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:426366135f9b7036b5475695fbc6d142:sub1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:426366135f9b7036b5475695fbc6d142:rb&#34;&gt;Rebase は歴史の改変なので取り扱いに注意。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:426366135f9b7036b5475695fbc6d142:rb&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:426366135f9b7036b5475695fbc6d142:sf&#34;&gt;&lt;code&gt;-f&lt;/code&gt; オプションを付けて強制的に push することは可能。ただしこれは（rebase と同じで）歴史の改変になるため取り扱いに注意。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:426366135f9b7036b5475695fbc6d142:sf&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>gibo による .gitignore 生成（再掲載） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/gitignore-boilerplates/" />
		<id>tag:text.Baldanders.info,2015-11-07:/remark/2015/gitignore-boilerplates/</id>
		<published>2015-11-07T22:01:10+09:00</published>
		<updated>2015-11-25T10:58:29+09:00</updated>
		<summary>Git の repository を作る際に .gitignore をどうするかは悩みどころだが、 gibo というツールを使えば .gitignore の生成をかなり自動化できるらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;以前 &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/45a4619aafcacc161521&#34;&gt;Qiita で書いた&lt;/a&gt;が，復習を兼ねて再掲載する。&lt;/p&gt;

&lt;p&gt;Git の repository を作る際に &lt;code&gt;.gitignore&lt;/code&gt; をどうするかは悩みどころだが（つか、大概は他の repository からコピってくるのだが）、 &lt;code&gt;gibo&lt;/code&gt; というツールを使えば &lt;code&gt;.gitignore&lt;/code&gt; の生成をかなり自動化できるらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simonwhitaker/gibo&#34;&gt;simonwhitaker/gibo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;導入方法は &lt;code&gt;README.md&lt;/code&gt; に書かれているが，実体はスクリプトのみなので，面倒くさいならプラットフォームごとにスクリプト・ファイル（Windows なら &lt;code&gt;gibo.bat&lt;/code&gt;）を取ってきてパスの通っているフォルダに放り込めばよい。
処理自体は簡単で， &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; で公開されているテンプレートを取ってきて単純に連結しているだけである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;以下は Windows での操作手順。
まずは動作確認と初期化から。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -v
gibo 1.0.4 by Simon Whitaker &amp;lt;sw@netcetera.org&amp;gt;
https://github.com/simonwhitaker/gitignore-boilerplates

C:&amp;gt;gibo -u
Cloning https://github.com/github/gitignore.git to C:\Users\username\AppData\Roaming\.gitignore-boilerplates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;C:\Users\username\AppData\Roaming\.gitignore-boilerplates&lt;/code&gt; に &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; の内容がセットされる。&lt;/p&gt;

&lt;p&gt;使用するにはコマンドラインに言語名やフレームワーク名を並べればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse
### java

*.class

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


### eclipse

*.pydevproject
.metadata
.gradle
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# CDT-specific
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific
.buildpath

# sbteclipse plugin
.target

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出力は標準出力なので &lt;code&gt;.gitignore&lt;/code&gt; にリダイレクトしてあげればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;既に &lt;code&gt;.gitignore&lt;/code&gt; があるのなら追記で OK。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo windows &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;対応している言語等が知りたければ &lt;code&gt;-l&lt;/code&gt; オプションを付けて起動すると一覧が表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -l
=== Languages ===

Actionscript
Ada
Agda
Android
AppceleratorTitanium
AppEngine
ArchLinuxPackages
Autotools
C
C++
CakePHP
CFWheels
ChefCookbook
Clojure
CMake
CodeIgniter
CommonLisp
Composer
Concrete5
Coq
CraftCMS
CUDA
D
Dart
Delphi
DM
Drupal
Eagle
Elisp
Elixir
Elm
EPiServer
Erlang
ExpressionEngine
ExtJs
Fancy
Finale
ForceDotCom
Fortran
FuelPHP
Gcov
GitBook
Go
Gradle
Grails
GWT
Haskell
Idris
IGORPro
Java
Jboss
Jekyll
Joomla
KiCAD
Kohana
LabVIEW
Laravel
Leiningen
LemonStand
Lilypond
Lithium
Lua
Magento
Maven
Mercury
MetaProgrammingSystem
Nanoc
Nim
Node
Objective-C
OCaml
Opa
OpenCart
OracleForms
Packer
Perl
Phalcon
PlayFramework
Plone
Prestashop
Processing
Python
Qooxdoo
Qt
R
Rails
RhodesRhomobile
ROS
Ruby
Rust
Sass
Scala
SCons
Scrivener
Sdcc
SeamGen
SketchUp
Stella
SugarCRM
Swift
Symfony
SymphonyCMS
TeX
Textpattern
TurboGears2
Typo3
Umbraco
Unity
UnrealEngine
VisualStudio
VVVV
Waf
WordPress
Xojo
Yeoman
Yii
ZendFramework
Zephir

=== Global ===

Anjuta
Archives
BricxCC
Cloud9
CodeKit
CVS
DartEditor
Dreamweaver
Eclipse
EiffelStudio
Emacs
Ensime
Espresso
FlexBuilder
GPG
IPythonNotebook
JDeveloper
JetBrains
Kate
KDevelop4
Lazarus
LibreOffice
Linux
LyX
Matlab
Mercurial
MicrosoftOffice
ModelSim
Momentics
MonoDevelop
NetBeans
Ninja
NotepadPP
OSX
Otto
Redcar
Redis
SBT
SlickEdit
SublimeText
SVN
SynopsysVCS
Tags
TextMate
TortoiseGit
Vagrant
Vim
VirtualEnv
VisualStudioCode
WebMethods
Windows
Xcode
XilinxISE
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;追記:32a1cbcb62001915d1d530155d7e0ff8&#34;&gt;追記&lt;/h2&gt;

&lt;p&gt;Ruby/Gem にも同様のツールがあるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rubygems.org/gems/gemignore&#34; title=&#34;gemignore | RubyGems.org | your community gem host&#34;&gt;gemignore&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/nakaken0629/items/cd25b722d9eb15b4efcb&#34;&gt;gitignoreの雛形を用意する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;とはいえ自分で処理を書くのは微妙に面倒くさいからね。このツールを作った方には感謝である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>今日の戯れ言： GitHub-flow を捨てた ATOM Editor - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/1024-diary/" />
		<id>tag:text.Baldanders.info,2015-10-24:/remark/2015/1024-diary/</id>
		<published>2015-10-24T01:13:56+09:00</published>
		<updated>2015-10-24T01:13:56+09:00</updated>
		<summary>GitHub-flow を捨てた ATOM Editor / 暗号プロトコルのセキュリティ評価 / VoLTE の脆弱性 / 「おかげさまで半世紀も生きちゃったぜ」記念</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#atom:607609ccb6f4d1c721b237710b517ddf&#34;&gt;GitHub-flow を捨てた ATOM Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cipher:607609ccb6f4d1c721b237710b517ddf&#34;&gt;暗号プロトコルのセキュリティ評価&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#volte:607609ccb6f4d1c721b237710b517ddf&#34;&gt;VoLTE の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#birth:607609ccb6f4d1c721b237710b517ddf&#34;&gt;「おかげさまで半世紀も生きちゃったぜ」記念&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;atom:607609ccb6f4d1c721b237710b517ddf&#34;&gt;GitHub-flow を捨てた ATOM Editor&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.atom.io/2015/10/21/introducing-the-atom-beta-channel.html&#34;&gt;Introducing the Atom Beta Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20151022_726976.html&#34;&gt;オープンソースのテキストエディター「Atom」にベータチャンネルが登場 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これまで「Atom」は“master”ブランチ（ソースコードの大元）を直接リリースする形態がとられていた。この方法はシンプルで、機能の追加や不具合の修正をそのままユーザーの元へ届けることができたため、開発当初はうまくいっていたという。しかし、機能が増えるにつれて修正済みの不具合が再発する“リグレッション”が多くなり、ワークフローに混乱が生じることがたびたび発生するようになったようだ。&lt;br&gt;
そこで、GitHubは“master”ブランチを直接リリースする方法をやめ、「Google Chrome」などでお馴染みの“リリースチャンネル”を設ける方針をとることにした。「Atom」の場合、開発を行う“master”ブランチから切り離されたベータ版と、ベータ版でテストされた新機能や不具合修正を盛り込んだ正式版（stable）の2つのリリースチャンネルが設けられる。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20151022_726976.html&#34;&gt;オープンソースのテキストエディター「Atom」にベータチャンネルが登場&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まぁ要するに &lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; は， &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; に関してはお家芸の GitHub-flow を捨てて Git-flow に切り替えたということらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://scottchacon.com/2011/08/31/github-flow.html&#34;&gt;GitHub Flow – Scott Chacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/Gab-km/3705015&#34;&gt;GitHub Flow (Japanese translation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;A successful Git branching model » nvie.com&#34;&gt;A successful Git branching model » nvie.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;git-flow cheatsheet&#34;&gt;git-flow cheatsheet&lt;/a&gt; （日本語）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://komaken.me/blog/2013/09/09/git-flow%E3%81%A8github-flow%E3%81%96%E3%81%A3%E3%81%8F%E3%82%8A%E3%81%BE%E3%81%A8%E3%82%81/&#34;&gt;git flowとgithub flowざっくりまとめ | KentaKomai Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どちらがいいのかについては何とも言えないが，複数バージョンを同時に管理していくのであれば Git-flow にせざるを得ないだろう。
個人的には 1.0 系でそれほど不満はないので，敢えてベータ版を使う必要はないかな。&lt;/p&gt;

&lt;h2 id=&#34;cipher:607609ccb6f4d1c721b237710b517ddf&#34;&gt;暗号プロトコルのセキュリティ評価&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nict.go.jp/press/2015/10/20-2.html&#34;&gt;プレスリリース | 暗号プロトコルのセキュリティ評価結果をリスト化・公開 | NICT-情報通信研究機構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://crypto-protocol.nict.go.jp/&#34;&gt;Cryptographic Protocol Verification Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ascii.jp/elem/000/001/068/1068218/&#34;&gt;ASCII.jp：58個の暗号プロトコルをセキュリティ評価！NICTがリスト公開&lt;/a&gt; : 10月23日現在ダウン中&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各種の認証および鍵交換プロトコルの評価一覧。
分かりやすくまとめられてるし技術文書へのリンクもあってとても参考になる。
なんで &lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; なのかは分からないけど。
&lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; の活動って chaotic でイマイチよく分からないんだよなぁ。&lt;/p&gt;

&lt;p&gt;そうそう。
&lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; で思い出したけど，また ntpd の脆弱性が見つかったみたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.cisco.com/security/talos/2015-10-ntpd-vulnerabilities&#34;&gt;Cisco Identifies Multiple Vulnerabilities in Network Time Protocol daemon (ntpd)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35072380/&#34;&gt;時刻同期のNTPに複数の脆弱性&amp;ndash;HTTPS接続のバイパスなどを誘発 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やれやれ。&lt;/p&gt;

&lt;h2 id=&#34;volte:607609ccb6f4d1c721b237710b517ddf&#34;&gt;VoLTE の脆弱性&lt;/h2&gt;

&lt;p&gt;脆弱性といえばもうひとつ。
いや4つ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dl.acm.org/citation.cfm?id=2813718&#34;&gt;Breaking and Fixing VoLTE: Exploiting Hidden Data Channels and Mis-implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kb.cert.org/vuls/id/943167&#34;&gt;Vulnerability Note VU#943167 - Voice over LTE implementations contain multiple vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvn.jp/vu/JVNVU93463833/index.html&#34;&gt;JVNVU#93463833: Voice over LTE (VoLTE) の実装に複数の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://news.mynavi.jp/news/2015/10/23/085/&#34;&gt;VoLTEの脆弱性、携帯3社は検証の上で「問題なし」 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちうことで日本の3大キャリアでは問題なさそうだ。&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;GoogleとしてはIMSベアラに直接触れないようにOSを修繕する必要があるので「対策します」ってことになったのでしょうが、基本的にはシステム全体としてはとっくに対策されてるんですよね。あまり知られていませんがVoLTEも実はモデムチップに依存したシステムで、主要チップ屋の実装として端末への直接攻撃も防がれるようになっているみたいですし。まあ、そういう情報は普通はあまり外に漏れないので（漏れたらそれはそれでセキュリティリスクになるし）、理屈上はこうやったらハックできちゃうぜ、って発表されることは悪いことではないと思うのですが、少なくとも、日本やその他情報通信先進国でまともな装置を使っているような国では、このリスクは問題ないと思っていただいて大丈夫だと思いますよ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://wnyan.jp/4204&#34;&gt;ニュースコメント[VoLTEの実装で複数の脆弱性と報告] | 無線にゃん&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;慌てない慌てない。&lt;/p&gt;

&lt;h2 id=&#34;birth:607609ccb6f4d1c721b237710b517ddf&#34;&gt;「おかげさまで半世紀も生きちゃったぜ」記念&lt;/h2&gt;

&lt;p&gt;今月で五十路に突入します。
いやぁ，半世紀も生きちゃったよ。&lt;/p&gt;

&lt;p&gt;半世紀も生きてるのに何かを悟ったとか全然ないし，財や名誉を得たとかも全然ないし，何やってるんだろうね，私は。
50代になったらもっとこうナイスミドル（笑）になってるとかありそうなもんだけど，言動が（歳の割に）幼いのか，いまだに生物年齢相当に見られないのは困ったもんである。&lt;/p&gt;

&lt;p&gt;お祝いを下さった友人方々，本当に有難うございます。
みなさんのおかげで明日からも生きていけると思います。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;a href=&#34;http://japanese.engadget.com/2015/10/22/ascii-jp-ddos-anonymous-it-ascii-jp/&#34;&gt;イルカ漁への抗議で Anonymous が絶賛攻撃中&lt;/a&gt;らしい。 ASCII.jp 関係ないじゃん。迷惑な話。ちなみにイルカは美味い。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>今日の戯れ言：TPP 大筋合意 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/1011-diary/" />
		<id>tag:text.Baldanders.info,2015-10-11:/remark/2015/1011-diary/</id>
		<published>2015-10-11T23:06:14+09:00</published>
		<updated>2015-10-22T08:46:00+09:00</updated>
		<summary>TPP 大筋合意 / 「クリエイティブ・コモンズ・ライセンスについて」改訂版 / Git for Windoes 2.6.1</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#tpp:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;TPP 大筋合意&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cc:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;「クリエイティブ・コモンズ・ライセンスについて」改訂版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#git:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;Git for Windoes 2.6.1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;tpp:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;TPP 大筋合意&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/10/soramoyou-tpp/&#34;&gt;TPP大筋合意との報に際して « マガジン航&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さてさて，困ったもんですね。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;TPPに関して今後、条約の締結や国内法の整備などが進められていくことでしょう。とはいえそのなかで、ひとりひとりが粘り強く声を上げ、自分たちの文化がどうあるべきなのか、あきらめずに議論を続けることも必要です。&lt;br&gt;
今ようやく芽生えてきたパブリックドメインによる豊かで多様な共有文化が損なわれないような、柔軟な著作権のあり方を切に望みます。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/10/soramoyou-tpp/&#34;&gt;TPP大筋合意との報に際して&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;という点には全く同意。
日本の国会は，一度法案が上がると撤回するのは難しい。
しかし，まだ「合意」しただけで「条約」すらない状態なのだから，必要なことに関しては今のうちからきちんと声を上げて行くことが必要。&lt;/p&gt;

&lt;h2 id=&#34;cc:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;「クリエイティブ・コモンズ・ライセンスについて」改訂版&lt;/h2&gt;

&lt;p&gt;そういうわけでもないのだが，&lt;a href=&#34;http://www.baldanders.info/&#34;&gt;本家サイト&lt;/a&gt;の「&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/cc-license/&#34;&gt;クリエイティブ・コモンズ・ライセンスについて&lt;/a&gt;」の改訂版を作成中&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2a81847ab7df7d6192d2ea66dde1f941:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2a81847ab7df7d6192d2ea66dde1f941:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;私はその筋の専門家ではないので，今まで著作権や著作権法に大きく踏み込む記述は（敢えて）しなかったのだが，それだと CC Licenses の背景や Free Culture について説明しきれない気がして。
本当は，こういうのって &lt;a href=&#34;http://creativecommons.jp/&#34; title=&#34;クリエイティブ・コモンズ・ジャパン&#34;&gt;creativecommons.jp&lt;/a&gt; がすべきなんだろうけど， FAQ もいまだに古いままだし， Free Culture の F の字もないし&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2a81847ab7df7d6192d2ea66dde1f941:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2a81847ab7df7d6192d2ea66dde1f941:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;今年は CC0 や CC Licenses の日本語訳を公開したりして &lt;a href=&#34;http://creativecommons.jp/&#34; title=&#34;クリエイティブ・コモンズ・ジャパン&#34;&gt;creativecommons.jp&lt;/a&gt; の成果には敬意を払うものだけど，どうも「ライセンス・ツールを提供すれば終わり」みたいな態度が透けていて，活動母体である &lt;a href=&#34;http://commonsphere.jp/&#34; title=&#34;commonsphere | コモンスフィア&#34;&gt;commonsphere&lt;/a&gt; もただの「寄せ鍋」状態で活動実態がまるで見えない。
この前まで本家 &lt;a href=&#34;https://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;creativecommons.org&lt;/a&gt; がやってた crowd-funding に連動するような動きもなかったし，今月あるソウルでの Global Summit で何かするってわけでもないようだし。
せめて本家 &lt;a href=&#34;https://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;creativecommons.org&lt;/a&gt; や &lt;a href=&#34;https://www.eff.org/&#34; title=&#34;Electronic Frontier Foundation | Defending your rights in the digital world&#34;&gt;EFF&lt;/a&gt; の活動くらいはちゃんとフォローして欲しいけど，そういうのもないからなぁ。&lt;/p&gt;

&lt;p&gt;個人的には &lt;a href=&#34;http://creativecommons.jp/&#34; title=&#34;クリエイティブ・コモンズ・ジャパン&#34;&gt;creativecommons.jp&lt;/a&gt; はもう死んだものとして本家 &lt;a href=&#34;https://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;creativecommons.org&lt;/a&gt; の活動のみを追いかけていく所存です（英語不得手なのに orz）。&lt;/p&gt;

&lt;p&gt;改訂版はこれから&lt;a href=&#34;http://text.baldanders.info/cc-licenses&#34;&gt;徐々に公開&lt;/a&gt;していく。
&lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env&#34; title=&#34;spiegel-im-spiegel/github-pages-env&#34;&gt;作業環境 repository&lt;/a&gt; には草稿版があるので興味のある方はどうぞ。&lt;/p&gt;

&lt;h2 id=&#34;git:2a81847ab7df7d6192d2ea66dde1f941&#34;&gt;Git for Windoes 2.6.1&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.6.1.windows.1&#34;&gt;Release Git for Windows 2.6.1 - git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特に問題なさそう。
脆弱性や大きな瑕疵がない限り無理に追随する必要はないのかもしれないけど，まぁ一応。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:2a81847ab7df7d6192d2ea66dde1f941:a&#34;&gt;&lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の Section 機能を使うとこういった特集記事を組みやすい。いやぁ，ホンマに &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; にしてよかったよ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2a81847ab7df7d6192d2ea66dde1f941:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2a81847ab7df7d6192d2ea66dde1f941:b&#34;&gt;理事である &lt;a href=&#34;http://creativecommons.jp/about/people/#chen&#34;&gt;Dominique Chen さん&lt;/a&gt;の本は出たけど，それっきり。まぁ彼の関心領域も変わっちゃったみたいだからなぁ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2a81847ab7df7d6192d2ea66dde1f941:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>今日の戯れ言：週末は掃除三昧 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/0920-diary/" />
		<id>tag:text.Baldanders.info,2015-09-20:/remark/2015/0920-diary/</id>
		<published>2015-09-20T18:33:08+09:00</published>
		<updated>2015-09-23T19:57:00+09:00</updated>
		<summary>仕事部屋が広くなった orz / 国勢調査を片付けた / Git for Windows 2.5.3</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;世間ではシルバーウィークとかなんとか言うらしいですが，私には関わりのねぇこってござんす。&lt;/p&gt;

&lt;h2 id=&#34;仕事部屋が広くなった-orz:2fb21705604ae2347e0f287e22b99865&#34;&gt;仕事部屋が広くなった orz&lt;/h2&gt;

&lt;p&gt;ついに実家の親から仕事（魔窟）部屋をかたせ，と命令が下りまして（他にも色々大変だったんだけど），泣く泣く本を手放した。&lt;/p&gt;

&lt;p&gt;今の場所に引っ越してきたのは16年ほど前だけど，主に漫画本が溜まりまくってて。
軽トラ1台分の単行本を処分。
まぁ，最近は Kindle で買えるし，いいんだけどね。
15年くらい前は4コマで人気だったのに，今ではさっぱり名前を聞かない作家さんの本とかもあって，惜しむ気持ちはあったんだけど，命令には逆らえません。&lt;/p&gt;

&lt;p&gt;でも好きな作家さんの本はどうしても捨てられませんでした。
というわけで&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21549048532/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/570/21549048532_5205dd7322.jpg&#34; alt=&#34;竹本泉エリア。整理したら３段ぶち抜きになってしまった&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21549048532/&#34;&gt;竹本泉エリア。整理したら３段ぶち抜きになってしまった&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;漫画本の本棚が大変なことに。&lt;/p&gt;

&lt;p&gt;仕事関係の本は今回は手付かず。
（Kindle 含め） E ブックで買えるなら，これこそ紙で買う必要はないんだけどね。&lt;/p&gt;

&lt;p&gt;ラノベで紙の本で買ってたものは全て処分した。
Kindle で買えるし。&lt;/p&gt;

&lt;h2 id=&#34;国勢調査を片付けた:2fb21705604ae2347e0f287e22b99865&#34;&gt;国勢調査を片付けた&lt;/h2&gt;

&lt;p&gt;国勢調査の回答をネットで片付けた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.e-kokusei.go.jp/&#34;&gt;国勢調査オンライン窓口 - 総務省統計局&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Symantic の証明書かぁ。
いや，まぁ，いいんだけどね。
そういや，偽サイト作って怒られてた人いたな。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1509/15/news083.html&#34;&gt;国勢調査の“偽サイト”作った意図は？　総務省から削除依頼……「騒ぎになり深く反省」と制作者 (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;) - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;常識だと思うが， Phishing サイト自体は誰でも作れる。
昔は日本語が怪しかったりして，ひと目でわかるようなものが多かったが，今の職業犯罪者は明確に「憐れな日本人」ユーザをターゲットにしているので，見た目ではわからないことも多い。
従って，そのサイトまたはページが本物かどうかは URI と証明書で判断するしかない。&lt;/p&gt;

&lt;p&gt;幸い今回は調査員がマニュアルとアカウント情報を手渡しでくれるので（調査員が信用できるのなら）それほど問題ではないだろう。
怪しい電子メールに書いてある URL や 検索サービスの検索結果に表示されているページをそのまま開くのでないなら，ね。&lt;/p&gt;

&lt;h2 id=&#34;git-for-windows-2-5-3:2fb21705604ae2347e0f287e22b99865&#34;&gt;Git for Windows 2.5.3&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.5.3.windows.1&#34;&gt;Release Git for Windows 2.5.3 · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows 版 git が MSYS2 ベースになって，本家のアップデートに素早く対応できるようになったのはいいんだけど，アップデートのペースが速いよ。
もうちょっとなんとかならんのん，これ。&lt;/p&gt;
</content>
	</entry>
	
</feed>
