<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Git - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/git/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/git/index.xml" />
	<id>tag:text.Baldanders.info,2019-02-16:/tags</id>
	<updated>2019-02-16T22:15:35+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info//images/avatar.jpg</icon>
	<logo>https://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.54.0</generator>

	
	<entry>
		<title>Hugo で Git 情報を取得する - hugo</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/hugo/gitinfo/" />
		<id>tag:text.Baldanders.info,2019-02-16:/hugo/gitinfo/</id>
		<published>2019-02-16T22:15:35+09:00</published>
		<updated>2019-02-16T22:15:35+09:00</updated>
		<summary>Hugo の環境を git で管理している場合はコミット情報等をテンプレートに組み込むことができる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="https://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;を改装するにあたって &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の環境を見直している。
この作業でやったことをこのセクションで少しずつ紹介していこうと思う。&lt;/p&gt;

&lt;p&gt;今回は &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; との連携の話。&lt;/p&gt;

&lt;h2 id=&#34;gitinfo&#34;&gt;.GitInfo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の環境を &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; で管理している場合は以下のコミット情報等をテンプレートに組み込むことができる。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;テンプレート変数&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorEmail&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザのメールアドレス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorDate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コミット時刻&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.Hash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リビジョン値&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AbbreviatedHash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リビジョン値（短縮値）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.Subject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コミット・メッセージ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;.GitInfo&lt;/code&gt; を有効にするには &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; コマンド起動時に &lt;code&gt;--enableGitInfo&lt;/code&gt; オプションを付加するか設定ファイル（&lt;code&gt;config.toml&lt;/code&gt; など）に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;enableGitInfo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と設定すればよい。&lt;/p&gt;

&lt;h2 id=&#34;ページ更新時刻-lastmod-をコミット時刻にする&#34;&gt;ページ更新時刻 .Lastmod をコミット時刻にする&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;.GitInfo&lt;/code&gt; が有効であればページの更新時刻を示すテンプレート変数 &lt;code&gt;.Lastmod&lt;/code&gt; の値がコミット時刻になる。&lt;/p&gt;

&lt;p&gt;テンプレート変数 &lt;code&gt;.Lastmod&lt;/code&gt; は，既定ではページの front matter 内の以下の変数にマッピングされている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastmod&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;publishDate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配列の順番がそのまま優先順位になっている。
つまり &lt;code&gt;&amp;quot;:git&amp;quot;&lt;/code&gt; がコミット時刻 &lt;code&gt;.GitInfo.AuthorDate&lt;/code&gt; に対応する。&lt;/p&gt;

&lt;p&gt;この設定は設定ファイルで変更可能なので，たとえば &lt;code&gt;.GitInfo&lt;/code&gt; を有効にしたいがコミット時刻を更新時刻に使いたくない場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;lastmod&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;publishDate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとしてしまってもよい。&lt;/p&gt;

&lt;p&gt;ちなみに入力ファイルのタイムスタンプを更新時刻にする場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:fileModTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとする。
まぁ今どきファイルのタイムスタンプを更新時刻にするのはオススメではないが。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>【セキュリティ・アップデート】 Git 2.x 最新版がリリース - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/10/git-2_x-are-released/" />
		<id>tag:text.Baldanders.info,2018-10-10:/release/2018/10/git-2_x-are-released/</id>
		<published>2018-10-10T16:49:56+09:00</published>
		<updated>2018-10-10T16:49:56+09:00</updated>
		<summary>サブモジュールに関する脆弱性で，再帰的な git clone において任意のコードが実行される可能性がある。深刻度高めなのでご注意を。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 2.x の各マイナーバージョンに脆弱性が見つかったため修正版がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marc.info/?l=git&amp;amp;m=153875888916397&amp;amp;w=2&#34;&gt;&#39;[Announce] Git 2.14.5, 2.15.3, 2.16.5, 2.17.2, 2.18.1, and 2.19.1&#39; - MARC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/devops/2018/10/05/remediating-the-october-2018-git-security-vulnerability/&#34;&gt;Remediating the October 2018 Git Security Vulnerability – Microsoft DevOps Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2018-17456&#34;&gt;NVD - CVE-2018-17456&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;サブモジュールに関する脆弱性で，再帰的な &lt;code&gt;git clone&lt;/code&gt; において任意のコードが実行される可能性がある。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;When running &#34;git clone --recurse-submodules&#34;, Git parses the supplied .gitmodules file for a URL field and blindly passes it as an argument to a &#34;git clone&#34; subprocess.  If the URL field is set to a string that begins with a dash, this &#34;git clone&#34; subprocess interprets the URL as an option.  This can lead to executing an arbitrary script shipped in the superproject as the user who ran &#34;git clone&#34;.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://marc.info/?l=git&amp;amp;m=153875888916397&amp;amp;w=2&#34;&gt;[Announce] Git 2.14.5, 2.15.3, 2.16.5, 2.17.2, 2.18.1, and 2.19.1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;サブモジュールの脆弱性は前にもなかったっけ。
まぁ，この手の脆弱性はありがちではある。
TeX とか Go 言語の cgo とかでも似たようなことがあったよなぁ。&lt;/p&gt;

&lt;p&gt;深刻度高めみたいなのでご注意を。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2018-17456&#34;&gt;CVE-2018-17456 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;深刻度: 重要 (8.8)&lt;/strong&gt; : &lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;各マイナーバージョンの最新版がリリースされているので更新すること。&lt;/p&gt;

&lt;p&gt;なお &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; には影響がないとのこと。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Git for Windows is uniquely not vulnerable to this security issue: this vulnerability requires writing a file to disk, and that filename must be particularly formatted and include a colon. Since colons are not permitted characters on Windows filesystems, Git for Windows will refuse to write the file.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/devops/2018/10/05/remediating-the-october-2018-git-security-vulnerability/&#34;&gt;Remediating the October 2018 Git Security Vulnerability&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;このせいなのか &lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; にアナウンスがなくて気が付かなかったんだよねぇ（笑）&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1146/869/index.html&#34;&gt;バージョン管理システム「Git」に任意コード実行の脆弱性、修正版が公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Git for Windows 2.18.0 がリリース - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/06/git-for-windows-2_18_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-06-24:/release/2018/06/git-for-windows-2_18_0-is-released/</id>
		<published>2018-06-24T18:32:12+09:00</published>
		<updated>2018-06-24T18:32:12+09:00</updated>
		<summary>Git および Git Credential Manager のアップデート，他。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 2.17.1 がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.18.0.windows.1&#34;&gt;Release Git for Windows 2.18.0 · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git/git/blob/v2.18.0/Documentation/RelNotes/2.18.0.txt&#34;&gt;Git v2.18.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.16.2&#34;&gt;Git Credential Manager v1.16.2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.18.0.windows.1&#34;&gt;Release Git for Windows 2.18.0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;他にもいくつか不具合の修正がある。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Git for Windows 2.17.1 がリリース（セキュリティアップデート） - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/05/git-for-windows-2_17_1-is-released/" />
		<id>tag:text.Baldanders.info,2018-05-30:/release/2018/05/git-for-windows-2_17_1-is-released/</id>
		<published>2018-05-30T20:58:48+09:00</published>
		<updated>2018-06-03T17:32:14+09:00</updated>
		<summary>Git v2.17.1 にはセキュリティ・アップデートがある。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 2.17.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.1.windows.1&#34;&gt;Release Git for Windows 2.17.1 · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git/git/blob/v2.17.1/Documentation/RelNotes/2.17.1.txt&#34;&gt;Git v2.17.1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;http://search.cpan.org/dist/perl-5.26.2/pod/perldelta.pod&#34;&gt;Perl v5.26.2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The installer &lt;a href=&#34;https://github.com/git-for-windows/build-extra/pull/181&#34;&gt;now offers VS Code Insiders as option for Git&#39;s default editor&lt;/a&gt; if it is installed.&lt;/li&gt;
&lt;li&gt;The vim configuration &lt;a href=&#34;https://github.com/git-for-windows/build-extra/pull/181&#34;&gt;was modernized&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://curl.haxx.se/changes.html#7_60_0&#34;&gt;cURL v7.60.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Certain errors, e.g. when pushing failed due to a non-fast-forwarding change, &lt;a href=&#34;https://github.com/git-for-windows/git/pull/1429&#34;&gt;are now colorful&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git-lfs/git-lfs/releases/tag/v2.4.1&#34;&gt;Git LFS v2.4.1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.1.windows.1&#34;&gt;Release Git for Windows 2.17.1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/git/git/blob/v2.17.1/Documentation/RelNotes/2.17.1.txt&#34;&gt;Git v2.17.1&lt;/a&gt; にはセキュリティ・アップデートがある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/devops/2018/05/29/announcing-the-may-2018-git-security-vulnerability/&#34;&gt;Announcing the May 2018 Git Security Vulnerability – Microsoft DevOps Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;できるだけ早めのアップデートが推奨されているようだ。
詳しい情報は後日追記する。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;git-for-windows-2-17-1-2-がリリース&#34;&gt;Git for Windows 2.17.1 (2) がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.1.windows.2&#34;&gt;Release Git for Windows 2.17.1(2) · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.16.1&#34;&gt;Git Credential Manager v1.16.1&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git-lfs/git-lfs/releases/tag/v2.4.2&#34;&gt;Git LFS v2.4.2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.1.windows.2&#34;&gt;Release Git for Windows 2.17.1(2)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1124686.html&#34;&gt;「Git」に複数の脆弱性、修正版が公開 ～Microsoftは「Git for Windows」の更新を推奨 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Git for Windows 2.17.0 がリリース（OpenSSL セキュリティアップデートを含む） - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/04/git-for-windows-2_17_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-04-08:/release/2018/04/git-for-windows-2_17_0-is-released/</id>
		<published>2018-04-08T11:32:36+09:00</published>
		<updated>2018-04-08T11:32:36+09:00</updated>
		<summary>HTTPS アクセスに OpenSSL を選択している人は早めのアップデートをお勧めする。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; 2.17.0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.0.windows.1&#34;&gt;Release Git for Windows 2.17.0 · git-for-windows/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/git/git/blob/v2.17.0/Documentation/RelNotes/2.17.0.txt&#34;&gt;Git v2.17.0&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://www.openssl.org/news/openssl-1.0.2-notes.html&#34;&gt;OpenSSL v1.0.2o&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.15.2&#34;&gt;Git Credential Manager v1.15.2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Comes with &lt;a href=&#34;https://www.openssh.com/txt/release-7.7&#34;&gt;OpenSSH v7.7p1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.17.0.windows.1&#34;&gt;Release Git for Windows 2.17.0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;OpenSSL v1.0.2o はセキュリティ・アップデートを含んでいる（深刻度：CVSSv3 Base 評価 で 5.9 【警告】）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvn.jp/vu/JVNVU93502675/&#34;&gt;JVNVU#93502675: OpenSSL に複数の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/ja/contents/2017/JVNDB-2017-011252.html&#34;&gt;JVNDB-2017-011252 - JVN iPedia - 脆弱性対策情報データベース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTPS アクセスに OpenSSL を選択している人は早めのアップデートをお勧めする。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>バージョン間のコミット・ログを取得する - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2018/03/git-log/" />
		<id>tag:text.Baldanders.info,2018-03-06:/remark/2018/03/git-log/</id>
		<published>2018-03-06T18:58:09+09:00</published>
		<updated>2018-03-06T18:58:09+09:00</updated>
		<summary>今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; でリリース・ドキュメントを書くことを考える。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で書いたツールのバイナリ・リリース時は &lt;a href=&#34;https://goreleaser.com/&#34; title=&#34;GoReleaser | Deliver Go binaries as fast and easily as possible&#34;&gt;GoReleaser&lt;/a&gt; にお任せで全部やってくれるのだが，ソースコードやドキュメントのみのリリースの場合は自前でドキュメントを書く必要がある。
このとき &lt;code&gt;git log&lt;/code&gt; コマンドでコミット・ログを参照するのだが，滅多に使わないコマンドなので毎回 Google 先生のお世話になる。&lt;/p&gt;

&lt;p&gt;今度忘れたときに Google 先生のお世話にならなくても済むよう覚え書きとして残しておく。&lt;/p&gt;

&lt;h2 id=&#34;コミット-ログの収集&#34;&gt;コミット・ログの収集&lt;/h2&gt;

&lt;p&gt;たとえば v0.6.0 と v0.7.0 の間のコミット・ログを markdown 形式で箇条書きにしたい場合はこうする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この出力から “&lt;code&gt;Merge&lt;/code&gt;” とか “&lt;code&gt;typo&lt;/code&gt;” とかいった単語を含む行を除きたければ grep と組み合わせればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git log &amp;quot;--pretty=format:- %s %h&amp;quot; v0.6.0..v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお pretty format に使える &lt;code&gt;%s&lt;/code&gt; などのプレースホルダ等については以下が参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/pretty-formats&#34;&gt;Git - pretty-formats Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;コマンドを-nyagos-の-alias-として組み込む&#34;&gt;コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の Alias として組み込む&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; には &lt;a href=&#34;https://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で書いたコードを alias コマンドとして組み込めるという素敵な機能がある。
そこで，先ほどの &lt;code&gt;git log&lt;/code&gt; コマンドを &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; の alias として組み込んでみる。
具体的には &lt;code&gt;.nyagos&lt;/code&gt; に以下の記述を追加する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- git log&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;nyagos.alias&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gitlog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;--pretty=format:- %s %h&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.rawexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;nyagos.writerr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: gitlog [[&amp;lt;from&amp;gt;] &amp;lt;to&amp;gt;]&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;gitlog&lt;/code&gt; コマンドができた。
実際に動かしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gitlog v0.6.0 v0.7.0
- Merge pull request #3 from spiegel-im-spiegel/signal-subpackage 01a70c3
- Update Document 3fe7b80
- Add signal subpackage cfff012

$ gitlog v0.6.0 v0.7.0 | grep -v Merge
- Update Document 3fe7b80
- Add signal subpackage cfff012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/suin/items/e98cef1409b6525f9bb6&#34;&gt;git logでタグとタグの間のものだけ抽出する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://efcl.info/2014/07/20/git-tag-to-release-github/&#34;&gt;Git tagとGitHub ReleasesとCHANGELOG.mdの自動化について | Web Scratch&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2&#34;&gt;Git - Book&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection&#34;&gt;Git - Revision Selection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/git-commands/&#34;&gt;あまり使わないけど，たまに使おうとすると忘れてる Git コマンド集&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Git Extensions に関する覚え書き - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2018/01/git-extensions-in-japanese/" />
		<id>tag:text.Baldanders.info,2018-01-21:/remark/2018/01/git-extensions-in-japanese/</id>
		<published>2018-01-21T16:07:15+09:00</published>
		<updated>2018-02-03T18:31:50+09:00</updated>
		<summary>毎度のことながらインストールしたときのことを忘れているため，Git Extensions のインストールに絡むあれこれについて覚え書きを記しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;私は &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; の GUI フロントエンドとして &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を愛用しているのだが，毎度のことながらインストールしたときのことを忘れているため，インストールに絡むあれこれについて覚え書きを記しておく。&lt;/p&gt;

&lt;h2 id=&#34;git-extensions-のインストール&#34;&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; のインストール&lt;/h2&gt;

&lt;p&gt;現在 &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; は以下のサイトで運用されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34;&gt;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; は .NET Framework （4.6.1 以上）で動作するが Mono （5.0 以上）でも動くので Linux や macOS 等でも利用可能らしい。
Windows 用なら &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; 本体の他に以下のツールが同梱されている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:inst1&#34;&gt;&lt;a href=&#34;#fn:inst1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34;&gt;PuTTY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このうち &lt;a href=&#34;http://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; と &lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt; は SetupComplete ファイル&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sc1&#34;&gt;&lt;a href=&#34;#fn:sc1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; にのみ同梱されているが，バージョンが古いため，別途インストールしてから（SetupComplete ファイルではなく） Setup ファイルでインストールしたほうがいいかもしれない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34;&gt;PuTTY&lt;/a&gt; を別途インストールしている場合は設定でそちらに差し替えできる。
&lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34;&gt;PuTTY&lt;/a&gt; は時々セキュリティ・アップデートが行われるが &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; 側で追従できないことも多いので（SSH クライアントとして &lt;a href=&#34;https://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34;&gt;PuTTY&lt;/a&gt; を使うのであれば）自前でインストールして運用した方がいいだろう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; はそのままでOK。&lt;/p&gt;

&lt;h2 id=&#34;git-extensions-を日本語化したいけど&#34;&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を日本語化したいけど...&lt;/h2&gt;

&lt;p&gt;最近の &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; はインストールした状態では日本語にできない。
&lt;a href=&#34;https://github.com/gitextensions/gitextensions&#34;&gt;リポジトリ&lt;/a&gt;に日本語化モジュールはあるのだが Setup ファイルに同梱されていないようだ。&lt;/p&gt;

&lt;p&gt;そこで無理矢理ではあるが，&lt;a href=&#34;https://github.com/gitextensions/gitextensions/releases/latest&#34;&gt;リリースページ&lt;/a&gt;から “Source Code” をダウンロードし，その中にある以下のファイルを &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; インストール先フォルダ以下の &lt;code&gt;Translation&lt;/code&gt; に入れてみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gitextensions-2.xx.xx/GitUI/Translation/Japanese.gif&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gitextensions-2.xx.xx/GitUI/Translation/Japanese.xlf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gitextensions-2.xx.xx/GitUI/Translation/Japanese.Plugins.xlf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これで言語を日本語にできる。
言語の変更は Settings ダイアログの以下の部分をクリックする。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/24939315857/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/24939315857_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/24939315857_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Setting of Git Extensions&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/24939315857/&#34;&gt;Setting of Git Extensions&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;すると以下のウィンドウが表示されるので日本の国旗を選択すれば日本語に切り替わる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/39100077644/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/39100077644_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/39100077644_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Choose language in Git Extensions Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/39100077644/&#34;&gt;Choose language in Git Extensions Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;やってみるとわかると思うが，けっこう英語のままである（そのせいで Setup ファイルに含まれないのかな）。
&lt;code&gt;Japanese.xlf&lt;/code&gt; および &lt;code&gt;Japanese.Plugins.xlf&lt;/code&gt; はテキストファイルなので，ここをいじれば日本語化できそうだ。
もし英語得手の方がいれば翻訳に貢献できるかもしれない。
私は... まぁ英語でも別に困らないか。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opcdiary.net/?page_id=27065&#34;&gt;私家版 Git For Windowsのインストール手順 | OPC Diary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://w3w.nnn2.com/?p=874&#34;&gt;KDiff3 の日本語化 – 各種パソコン技術情報&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://takkii.hatenablog.com/entry/2017/11/06/195156&#34;&gt;しれっと、GitExtensionを日本語化する。 - Sinatraのあらかると&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-gnupg-for-windows-2/&#34;&gt;GnuPG for Windows : gpg-agent について&lt;/a&gt; : SSH の鍵管理も gpg-agent で行う&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2016/11/git-extensions-2_49/&#34;&gt;Git Extensions 2.49 × ConEmu ＝ ♥&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/git-extensions-and-libreoffice-6-with-openpgp/&#34;&gt;Git Extensions と LibreOffice 6 と OpenPGP&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:inst1&#34;&gt;最近の &lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; には &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows&#34; title=&#34;Microsoft/Git-Credential-Manager-for-Windows: Secure Git credential storage for Windows with support for Visual Studio Team Services, GitHub, and Bitbucket multi-factor authentication.&#34;&gt;GCM (Git Credential Manager for Windows)&lt;/a&gt; は同梱されていない。 &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows&#34; title=&#34;Git Credential Manager for Windows&#34;&gt;GCM&lt;/a&gt; は &lt;a href=&#34;http://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; の方に同梱されているため， &lt;a href=&#34;http://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt; インストール時に &lt;a href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows&#34; title=&#34;Git Credential Manager for Windows&#34;&gt;GCM&lt;/a&gt; も有効にすること。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:inst1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sc1&#34;&gt;&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; 2.50.02 であれば &lt;code&gt;GitExtensions-2.50.02-SetupComplete.msi&lt;/code&gt; が SetupComplete ファイルである。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>年末なので ATOM Editor を掃除しましょう（もしくは2017年お気に入り ATOM パッケージ） - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2017/12/favorite-atom-packages-2017/" />
		<id>tag:text.Baldanders.info,2017-12-16:/remark/2017/12/favorite-atom-packages-2017/</id>
		<published>2017-12-16T18:16:31+09:00</published>
		<updated>2018-03-06T11:00:35+09:00</updated>
		<summary>というわけで，唐突に ATOM エディタの掃除とか始めてしまう。ついでに最近のお気に入りパッケージとか紹介してみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;なんで日本人はクソ忙しい年末に「大掃除」とかするんでしょうねぇ。
普段からやっとけっての，自分。
分かってます。
現実逃避ってやつですね（笑）&lt;/p&gt;

&lt;p&gt;というわけで，唐突に &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタの掃除とか始めてしまう。
ついでに最近のお気に入りパッケージとか紹介してみる。&lt;/p&gt;

&lt;h2 id=&#34;atom-のいいところ-悪いところ&#34;&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; のいいところ，悪いところ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; のいいところって何だろう。
私の場合，あるエディタが気に入る理由はひとつしかない。
それは&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;手に馴染むかどうか&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;である。
これは極めて感覚的かつ主観的なので説明しづらい。
でも，これって殆どの人がそうじゃないだろうか。&lt;/p&gt;

&lt;p&gt;たとえば私が「&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; の◯◯機能がチョー便利！」とか「◯◯パッケージが素敵！」とか言ったところで「それ◯◯で出来るよ」と返されるのがオチである。
「好き」という感情は感覚的なものなので合理的に説明するのは難しいし，好悪を評価軸に他人を説得するのは更に無理筋というものである。&lt;/p&gt;

&lt;p&gt;逆に &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; の悪いところは幾らでも挙げられる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tsundere1&#34;&gt;&lt;a href=&#34;#fn:tsundere1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
すぐ思いつくところでは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;起動が遅い&lt;/li&gt;
&lt;li&gt;全体的に動きがモッサリしている&lt;/li&gt;
&lt;li&gt;巨大ファイルを（事実上）扱えない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;といった感じ。
これのせいで私はテキスト・エディタを「&lt;a href=&#34;http://hide.maruo.co.jp/software/hidemaru.html&#34;&gt;秀丸&lt;/a&gt;」から完全に乗り換えることができないでいる。
今のところ &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; での作業はテキスト表示・入力・編集作業全体の9割5分といったところ。
ちょこっとだけファイルの中身を覗いてみたいとか，10万行くらいの巨大 CSV ファイル（しかも Shift-JIS）を開きたいとかいったことには  &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; は向かない。&lt;/p&gt;

&lt;p&gt;まぁ，でも，私がよく使うパッケージ等を紹介することで「&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタってこんな感じ」くらいのことは分かってもらえるのではないかと淡い期待を寄せてみる。&lt;/p&gt;

&lt;h2 id=&#34;インストールしたパッケージを整理する&#34;&gt;インストールしたパッケージを整理する&lt;/h2&gt;

&lt;p&gt;さて，前口上はこのくらいにして，タイトル通り &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタの掃除を始めよう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; は多様なパッケージ群が特徴でインストールも非常に簡単なのはいいのだが &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; を長く使っているとインストールしたまま忘れ去ってしまったパッケージのひとつやふたつはあるものだ。
自分の環境にどんなパッケージが入っているか調べるには以下のコマンドを使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm list -i -b&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみにパッケージだけを見る場合には &lt;code&gt;-p&lt;/code&gt; オプションを付けて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm list -i -b -p&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればよい（テーマのみなら &lt;code&gt;-t&lt;/code&gt; オプションを付ける）。
表示される一覧を見て「何だっけ？ これ」っていうのがあったなら削除してしまって構わない。
ただし，パッケージ同士が依存関係にある場合は &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; を再起動した際に再インストールを要求されることがある。&lt;/p&gt;

&lt;p&gt;パッケージの削除は &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; の Setting で行うかコマンドラインで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm delete package-name&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればいい。&lt;/p&gt;

&lt;p&gt;お気に入りのパッケージについては，各パッケージの Web ページで ☆ (star) を付けることをお勧めする。
Star を付けたパッケージは初期インストール時に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apm stars --install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で一気にインストールすることが可能になる。
詳しくは「&lt;a href=&#34;https://text.baldanders.info/remark/2015/atom-editor/&#34;&gt;ATOM Editor に関するメモ&lt;/a&gt;」を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;2017年のお気に入りパッケージ&#34;&gt;2017年のお気に入りパッケージ&lt;/h2&gt;

&lt;p&gt;それでは以下に2017年末時点でよく使うパッケージを紹介する。&lt;/p&gt;

&lt;h3 id=&#34;テーマ&#34;&gt;テーマ&lt;/h3&gt;

&lt;p&gt;最近は &lt;a href=&#34;https://atom.io/themes/atom-material-syntax-dark&#34;&gt;atom-material-syntax-dark&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;本当はライト・テーマにしたいのだが，いいのがないんだよねぇ。
何だってみんなライト・テーマの背景を真っ白にするんだろう。
ちょっとベージュっぽい背景色にすれば，それで充分眼に優しい配色になるのに。&lt;/p&gt;

&lt;p&gt;黒背景もそれはそれで視覚的にキツいんだけど，真っ白背景よりはマシなので仕方なくダーク・テーマを使っている。&lt;/p&gt;

&lt;p&gt;選択するテーマによるのだが &lt;a href=&#34;https://atom.io/packages/highlight-line&#34;&gt;highlight-line&lt;/a&gt; でカーソル行にアンダーラインを表示させている。
&lt;code&gt;styles.less&lt;/code&gt; ファイルで簡単に色などを調整できるのがよい。&lt;/p&gt;

&lt;h3 id=&#34;git-関連&#34;&gt;Git 関連&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 1.18 でコア・パッケージに &lt;a href=&#34;https://atom.io/packages/github&#34;&gt;github&lt;/a&gt; が導入され，ようやく GUI で git の基本操作が出来るようになった。
ただし，キーボード・ベースの操作では &lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; の方が使いやすい。
てか，私は主に &lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; のほうを使っている。&lt;/p&gt;

&lt;p&gt;他には， commit 履歴を視覚的に見るために &lt;a href=&#34;https://atom.io/packages/git-time-machine&#34;&gt;git-time-machine&lt;/a&gt; を使うことがある。
ちょっと癖が強いのが難点なのだが。&lt;/p&gt;

&lt;h3 id=&#34;自動保存&#34;&gt;自動保存&lt;/h3&gt;

&lt;p&gt;ファイルの自動保存機能として，コア・パッケージに &lt;a href=&#34;https://atom.io/packages/autosave&#34;&gt;autosave&lt;/a&gt; というのがあるのだが，ファイル保存をトリガにして動く機能もあるので（&lt;a href=&#34;https://atom.io/packages/git-plus&#34;&gt;git-plus&lt;/a&gt; の commit コメントとか），使い所が微妙である。&lt;/p&gt;

&lt;p&gt;ちなみに，かつての &lt;a href=&#34;https://atom.io/packages/save-session&#34;&gt;save-session&lt;/a&gt; 機能は &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 本体に取り込まれているそうで，保存を忘れて &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; を閉じても，次に開くときは未保存状態のまま復元されるようだ。
よしよし。&lt;/p&gt;

&lt;h3 id=&#34;go-plus-と-atom-ide&#34;&gt;go-plus と atom-ide&lt;/h3&gt;

&lt;p&gt;はっきり言おう。
私が &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; にロックインされている最大の理由が &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; パッケージである。
コードの入力補完と整形，lint，テスト，カバレッジ 等々... これがなかったらコーディング効率半減どころか 70% 減かも。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; パッケージを入れると副パッケージとして，以下も併せてインストールされる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/go-debug&#34;&gt;go-debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/go-signature-statusbar&#34;&gt;go-signature-statusbar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/hyperclick&#34;&gt;hyperclick&lt;/a&gt; （&lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; が入ってる場合は不要？）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また &lt;a href=&#34;https://github.com/alecthomas/gometalinter&#34; title=&#34;GitHub - alecthomas/gometalinter: Concurrently run Go lint tools and normalise their output&#34;&gt;alecthomas/gometalinter&lt;/a&gt; をはじめとする大量のツールがインストールされるため &lt;code&gt;GOPATH&lt;/code&gt; および &lt;code&gt;PATH&lt;/code&gt; 環境変数の設定をしておくこと。&lt;/p&gt;

&lt;p&gt;最近の &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; は &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; を導入するよう勧めてくる。
&lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; は最近発表された &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 用の IDE (Integrated Development Environment; 統合開発環境) パッケージで &lt;a href=&#34;http://langserver.org/&#34;&gt;LSP (Language Server Protocol)&lt;/a&gt; に対応しているのが売りである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ide.atom.io/&#34;&gt;Atom IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どうも &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; は &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; とも両立するようになったらしい。
&lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; は言語ごとのサブパッケージと組み合わせるようになっていて， &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;に対応しているものとしては &lt;a href=&#34;https://atom.io/packages/ide-go&#34;&gt;ide-go&lt;/a&gt; というパッケージがあるのだが，これがウチの環境では動いてくれんのよ。
&lt;a href=&#34;https://atom.io/packages/ide-go&#34;&gt;ide-go&lt;/a&gt; のバックエンドには &lt;a href=&#34;https://github.com/sourcegraph/go-langserver&#34; title=&#34;GitHub - sourcegraph/go-langserver: Go language server to add Go support to editors and other tools that use the Language Server Protocol (LSP)&#34;&gt;sourcegraph/go-langserver&lt;/a&gt; が動いているのだが，こいつが Windows と相性が悪い気がする。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;に関しては &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; があれば &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; は全く必要ないのだが，他の言語（たとえば &lt;a href=&#34;https://atom.io/packages/ide-typescript&#34;&gt;ide-typescript&lt;/a&gt; とか）用に入れてある。
そのうち統合されることがあるのだろうか。&lt;/p&gt;

&lt;h3 id=&#34;editorconfig&#34;&gt;&lt;a href=&#34;http://editorconfig.org/&#34; title=&#34;EditorConfig&#34;&gt;EditorConfig&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;コード書きで &lt;a href=&#34;http://editorconfig.org/&#34; title=&#34;EditorConfig&#34;&gt;EditorConfig&lt;/a&gt; を使わないやつは，もはや evil と言っていいだろう。
チームでソースコードのフォーマットを合わせるなら &lt;a href=&#34;http://editorconfig.org/&#34; title=&#34;EditorConfig&#34;&gt;EditorConfig&lt;/a&gt; は必須だし，ひとりで作業するときもリポジトリに必ず &lt;code&gt;.editorconfig&lt;/code&gt; を含める習慣をつけていきたいものである。&lt;/p&gt;

&lt;h3 id=&#34;機能を直接埋め込む&#34;&gt;機能を直接埋め込む&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; では &lt;code&gt;init.coffee&lt;/code&gt; ファイルで機能を記述し組み込むことが出来る。
パッケージにするまでもない小さな処理などで重宝する。&lt;/p&gt;

&lt;p&gt;私が組み込んでいるのは以下の機能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/insert-datetime-in-atom-editor/&#34;&gt;ATOM Editor で現在日時を挿入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/insert-amazon-url-with-associate-id-in-atom-editor/&#34;&gt;ATOM Editor で Amazon Associate ID を含んだ商品 URL を生成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;日本語関連のパッケージ&#34;&gt;日本語関連のパッケージ&lt;/h3&gt;

&lt;p&gt;以降は簡単に箇条書きで。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/auto-encoding&#34;&gt;auto-encoding&lt;/a&gt;&lt;/em&gt; ： 文字エンコーディングを自動で判定してくれる。 Shift-JIS や EUC-JP なファイルを開く時に重宝する。たまに間違うのがご愛嬌&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/japan-util&#34;&gt;japan-util&lt;/a&gt;&lt;/em&gt; ： 日本語用の文字変換パッケージ半角/全角変換や平仮名/片仮名変換とかしてくれる&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/show-ideographic-space&#34;&gt;show-ideographic-space&lt;/a&gt;&lt;/em&gt; ： いわゆる全角空白文字を視覚化してくれる。これがないとコンパイルエラー時にパニクるハメになる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:zs1&#34;&gt;&lt;a href=&#34;#fn:zs1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。見せ方は &lt;code&gt;styles.less&lt;/code&gt; ファイルでカスタマイズ可能&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;その他のお気に入りパッケージ&#34;&gt;その他のお気に入りパッケージ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/autoclose-html&#34;&gt;autoclose-html&lt;/a&gt;&lt;/em&gt; ： HTML 入力でタグを入力すると自動的に閉じタグを補完してくれる。便利なのだが HTML を直に弄ることが少なくなったので削除した&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/file-icons&#34;&gt;file-icons&lt;/a&gt;&lt;/em&gt; ： Tree View やタブのアイコン表示を見やすくしてくれる&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/language-lua&#34;&gt;language-lua&lt;/a&gt;&lt;/em&gt; ： Lua 言語用のパッケージ。 &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; に対応するものがないっぽいので。 &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 用のバッチ処理等を書くのに Lua 言語を使うのよ&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/markdown-table-editor&#34;&gt;markdown-table-editor&lt;/a&gt;&lt;/em&gt; ： Markdown のテーブル作成支援パッケージ。めっさ便利&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/nav-panel-plus&#34;&gt;nav-panel-plus&lt;/a&gt;&lt;/em&gt; ： アウトライン表示。 &lt;a href=&#34;https://atom.io/packages/atom-ide-ui&#34;&gt;atom-ide-ui&lt;/a&gt; のアウトラインで表示できない言語（markdown 等）はこちらで。以前は &lt;a href=&#34;https://atom.io/packages/symbols-tree-view&#34;&gt;symbols-tree-view&lt;/a&gt; を使っていたが，こちらに乗り換えた&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/open-recent&#34;&gt;open-recent&lt;/a&gt;&lt;/em&gt; ： File メニューに “Open Recent” 項目を追加し，最近開いたファイルやプロジェクトを表示してくれる&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;platformio-ide-terminal&lt;/a&gt;&lt;/em&gt; ： &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; 内でターミナルを起動する。 shell  や環境変数を指定できるのが素敵。私は shell として &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を指定している&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;未インストールだけど気になってるパッケージ&#34;&gt;未インストールだけど気になってるパッケージ&lt;/h2&gt;

&lt;p&gt;こちらも簡単に箇条書きで。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/docblockr&#34;&gt;fdocblockr&lt;/a&gt;&lt;/em&gt; ： &lt;code&gt;/** */&lt;/code&gt; みたいなブロックコメントを生成してくれる。 Java とかならありがたいが &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;は微妙&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/language-plantuml&#34;&gt;language-plantuml&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://atom.io/packages/plantuml-viewer&#34;&gt;plantuml-viewer&lt;/a&gt;&lt;/em&gt; ： PlantUML 用の言語パッケージと画像表示パッケージ。 SVG や PNG といった画像データとして保存できるのが素敵。 DOT 言語に変換されるので， &lt;a href=&#34;http://graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; を用意する必要がある

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/nakahashi/items/3d88655f055ca6a2617c&#34;&gt;AtomとPlantUMLで爆速UMLモデリング - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/k_nakayama/items/77ca73753ebd049a66de&#34;&gt;Atom+PlantUMLで見た目もいい感じのシーケンス図を作成する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/linter&#34;&gt;linter&lt;/a&gt;&lt;/em&gt; ： これ単独では使えなくて，言語ごとに lint パッケージを用意する必要がある。 &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;では &lt;a href=&#34;https://atom.io/packages/go-plus&#34;&gt;go-plus&lt;/a&gt; が独自の強力な lint 機能を持っているため不要

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/pechefamille/items/40966a0c78846f4053c9&#34;&gt;AtomにESLint導入した - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://atom.io/packages/tablr&#34;&gt;tablr&lt;/a&gt;&lt;/em&gt; ： CSV ファイルをスプレッドシート風に表示・編集できる。小さいファイルならいいんだけど， CSV ファイルって大抵が巨大ファイルだからなぁ。結局 Office ツール使ったほうがよかったり&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://texwiki.texjp.org/?Atom&#34;&gt;Atom - TeX Wiki&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://employment.en-japan.com/engineerhub/entry/2017/08/10/110000&#34;&gt;［保存版］Atomエディタ 便利なパッケージ一覧！ 全23社のWebエンジニア・デザイナーがおすすめを紹介 - エンジニアHub｜若手Webエンジニアのキャリアを考える！&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/atom-editor/&#34;&gt;ATOM Editor に関するメモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2016/11/nyagos-with-atom/&#34;&gt;ATOM × NYAGOS ＝ ♥&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/golang-with-atom/&#34;&gt;ATOM で Go&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:tsundere1&#34;&gt;あっ，私ツンデレ属性とかないですから（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tsundere1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:zs1&#34;&gt;Windows 環境なら，全角空白文字の誤入力は IME のプロパティでスペース・キー押下で常に「半角空白」を入力するように設定すればほとんど防げるんだどね（全角空白を入力する場合は &lt;code&gt;shift-space&lt;/code&gt; 押下）。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:zs1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Git Commit で OpenPGP 署名を行う - openpgp</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/openpgp/git-commit-with-openpgp-signature/" />
		<id>tag:text.Baldanders.info,2017-12-01:/openpgp/git-commit-with-openpgp-signature/</id>
		<published>2017-12-01T17:51:38+09:00</published>
		<updated>2018-12-07T17:08:24+09:00</updated>
		<summary>Git で commit する際に OpenPGP 署名を付加できるらしい。いやぁ，今まで知らなかったよ。物知らずでごめん。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="openpgp" label="openpgp" scheme="https://text.baldanders.info/openpgp" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;(move from &lt;a href=&#34;https://text.baldanders.info/remark/2016/04/git-commit-with-openpgp-signature/&#34; title=&#34;Git Commit で OpenPGP 署名を行う&#34;&gt;https://text.baldanders.info/remark/2016/04/git-commit-with-openpgp-signature/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;Git&lt;/a&gt; で commit する際に OpenPGP 署名を付加できるらしい。
いやぁ，今まで知らなかったよ。
物知らずでごめん。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/uz/v2/Git-Tools-Signing-Your-Work&#34;&gt;Git - Signing Your Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/prince_0203/items/ef0e12f2f6d150ff0485&#34;&gt;GitHubでGPGにより署名されたコミットにバッジが表示されるようになったので設定してみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;openpgp-鍵の登録&#34;&gt;OpenPGP 鍵の登録&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;Git&lt;/a&gt; に OpenPGP 鍵を設定するには以下のコマンドでいいようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global user.signingkey 7E20B81C&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;“&lt;code&gt;7E20B81C&lt;/code&gt;” は OpenPGP 鍵の鍵 ID である。
鍵ごとに異なる値になるので注意。
今回は「&lt;a href=&#34;https://baldanders.info/spiegel/pubkeys/&#34;&gt;OpenPGP 公開鍵リスト&lt;/a&gt;」で公開している鍵の鍵 ID を登録している。
この設定で &lt;code&gt;.gitconfig&lt;/code&gt; ファイルに以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[user]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;signingkey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;7E20B81C&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;gpg-を直接指定する場合&#34;&gt;Gpg を直接指定する場合&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://git-for-windows.github.io/&#34; title=&#34;Git for Windows&#34;&gt;Git for Windows&lt;/a&gt; の場合， &lt;code&gt;git bash&lt;/code&gt; に同梱されている &lt;code&gt;gpg.exe&lt;/code&gt; を使うのだが，困ったことにこれが classic version なのである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 1.4.20
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
Supported algorithms:
Pubkey: RSA, RSA-E, RSA-S, ELG-E, DSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;既に &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の Windows 版をインストールしているのであれば，以下の設定で &lt;code&gt;gpg.exe&lt;/code&gt; をフルパス指定できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global gpg.program C:/path/to/GnuPG/bin/gpg.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに &lt;code&gt;.gitconfig&lt;/code&gt; ファイルには以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[gpg]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;program&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;C:/path/to/GnuPG/bin/gpg.exe&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なお Windows 環境であれば，特に理由がないかぎり， stable/modern version を使うことをお薦めする。
Windows 環境以外でも &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を classic version と stable/modern version で使い分けている場合は，この設定が役に立つだろう。&lt;/p&gt;

&lt;h2 id=&#34;commit-に-openpgp-署名を付加する&#34;&gt;Commit に OpenPGP 署名を付加する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt; 時に OpenPGP 署名を付加したい場合は， version 2 以降なら，以下の設定で常時署名を行うようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global commit.gpgsign true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;.gitconfig&lt;/code&gt; ファイルには以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[commit]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;gpgsign&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この状態で逆に commit 時に署名を付加してほしくない場合は &lt;code&gt;--no-gpg-sign&lt;/code&gt; オプションを付加すればいいようだ。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタの &lt;a href=&#34;https://atom.io/packages/git-plus&#34; title=&#34;git-plus&#34;&gt;git-plus&lt;/a&gt; パッケージで commit してみたが，きちんと署名もできていた。
&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions&#34;&gt;Git Extensions&lt;/a&gt; でも問題ないようだ。
「&lt;a href=&#34;http://qiita.com/prince_0203/items/ef0e12f2f6d150ff0485&#34;&gt;GitHubでGPGにより署名されたコミットにバッジが表示されるようになったので設定してみる&lt;/a&gt;」には「GitHub DesktopはGPGによる署名をサポートしていません」とあるが， Facebook で教えてもらった話によれば， &lt;code&gt;gpg-agent&lt;/code&gt; と Pinentry が正しく設定されていれば使えるそうだ。&lt;/p&gt;

&lt;p&gt;きちんと署名されているか確認するには &lt;code&gt;git log&lt;/code&gt; コマンドに &lt;code&gt;--show-signature&lt;/code&gt; オプションを付けるとよい。&lt;/p&gt;

&lt;h3 id=&#34;tag-にも-merge-にも署名できる&#34;&gt;Tag にも Merge にも署名できる&lt;/h3&gt;

&lt;p&gt;タグに署名を付加する場合は &lt;code&gt;-s&lt;/code&gt; オプションを付けて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git tag -s -a v0.1.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればいい。
同様に merge でも &lt;code&gt;-S&lt;/code&gt; オプションを付けて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git merge -S branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でいいようだ。&lt;/p&gt;

&lt;h2 id=&#34;github-が-openpgp-署名に対応した&#34;&gt;GitHub が OpenPGP 署名に対応した&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; で commit や tag に対する署名を表示できるようになったらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blog/2144-gpg-signature-verification&#34;&gt;GPG signature verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえばこんな感じに表示される。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26315000570/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26315000570_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26315000570_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (4)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26315000570/&#34;&gt;OpenPGP Key in GitHub (4)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;これを有効にするには &lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; に OpenPGP 公開鍵を登録して署名検証可能にしなければならない。
公開鍵の登録は設定画面で行う。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26494073882/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26494073882_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26494073882_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (1)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26494073882/&#34;&gt;OpenPGP Key in GitHub (1)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;この画面で「New GPG key」ボタンを押すと以下の入力画面になる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26520705641/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26520705641_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26520705641_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (2)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26520705641/&#34;&gt;OpenPGP Key in GitHub (2)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ここに公開鍵の armor テキストを貼り付けて「Add GPG key」ボタンを押せばよい。
これで OpenPGP 公開鍵の登録は完了である。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26586667165/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26586667165_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26586667165_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (3)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26586667165/&#34;&gt;OpenPGP Key in GitHub (3)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なお公開鍵の armor テキストは以下のコマンドで取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --armor --export 7E20B81C&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;“&lt;code&gt;7E20B81C&lt;/code&gt;” は先ほど説明した鍵 ID である。&lt;/p&gt;

&lt;p&gt;Tag や commit に署名することで「なりすまし」に対する抑止になる。
これは特にチームで開発を行う場合に威力を発揮するだろう。
ぜひ習慣付けていきたいものである。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/pontago/items/5867b6492e09c34084fe&#34;&gt;git(GitHub)でGPGを使った署名をおこなう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/akashima/items/4b40ccb13ad13dee5cdb&#34;&gt;Yubikeyを使って、Githubのcommitをverifyする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/wktk/items/acf641bbbf2b82ff7275&#34;&gt;Git のタグやコミットを (PGP ではなく) S/MIME で署名する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>SCM ツールの脆弱性 - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2017/08/vulnerabilities-in-scm-tools/" />
		<id>tag:text.Baldanders.info,2017-08-19:/remark/2017/08/vulnerabilities-in-scm-tools/</id>
		<published>2017-08-19T21:02:07+09:00</published>
		<updated>2017-08-19T21:02:07+09:00</updated>
		<summary>改修されたバージョンが公開されている。更新作業は計画的に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;がっつり見落としてました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.recurity-labs.com/2017-08-10/scm-vulns&#34;&gt;Compromise On Checkout - Vulnerabilities in SCM Tools · The Recurity Lablog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1466490.html&#34;&gt;[ANNOUNCE] Git v2.14.1, v2.13.5, and others&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/2017/08/10/gitlab-9-dot-4-dot-4-released/&#34;&gt;GitLab 9.4.4, 9.3.10, 9.2.10, 9.1.10, 9.0.13, and 8.17.8 Critical Security Release | GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mercurial-scm.org/wiki/WhatsNew#Mercurial_4.3_.2F_4.3.1_.282017-08-10.29&#34;&gt;Mercurial 4.3 / 4.3.1 (2017-08-10)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://subversion.apache.org/security/CVE-2017-9800-advisory.txt&#34;&gt;Arbitrary code execution on clients through malicious svn+ssh URLs in svn:externals and svn:sync-from-url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://forest.watch.impress.co.jp/docs/news/1075909.html&#34;&gt;「Git」「Mercurial」「Subversion」などにコマンドインジェクションの脆弱性 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;脆弱性の内容&#34;&gt;脆弱性の内容&lt;/h2&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;同社のブログ記事によると、「Git LFS」の旧バージョンにはURLの解釈処理に問題があり、たとえば“ssh://-oProxyCommand=some-command”というURLの場合、ホスト名を“-o ProxyCommand=some-command”と解釈してしまうため、“some-command”が実行されてしまう。同様の問題は、「Git」「Mercurial」「Subversion」にも存在する。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://forest.watch.impress.co.jp/docs/news/1075909.html&#34;&gt;「Git」「Mercurial」「Subversion」などにコマンドインジェクションの脆弱性&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;影響度-cvss&#34;&gt;影響度（CVSS）&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-9800&#34;&gt;CVE-2017-9800 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-1000116&#34;&gt;CVE-2017-1000116 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/security/cve/cve-2017-1000117&#34;&gt;CVE-2017-1000117 - Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CVSSv3 基本評価値 6.3 (&lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L&lt;/code&gt;)&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;基本評価基準&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃元区分（AV）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ネットワーク（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;攻撃条件の複雑さ（AC）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;必要な特権レベル（PR）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;不要（N）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;ユーザ関与レベル（UI）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;要（R）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;スコープ（S）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;変更なし（U）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報漏えいの可能性（機密性への影響, C）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;情報改ざんの可能性（完全性への影響, I）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;業務停止の可能性（可用性への影響, A）&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;低（L）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CVSS については&lt;a href=&#34;https://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;解説ページ&lt;/a&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;影響を受ける製品&#34;&gt;影響を受ける製品&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Git v2.7.6, v2.8.6, v2.9.5, v2.10.4, v2.11.3, v2.12.4, and v2.13.5&lt;/li&gt;
&lt;li&gt;Mercurial 4.3 以前&lt;/li&gt;
&lt;li&gt;Subversion

&lt;ul&gt;
&lt;li&gt;1.0.0 through 1.8.18&lt;/li&gt;
&lt;li&gt;1.9.0 through 1.9.6&lt;/li&gt;
&lt;li&gt;1.10.0-alpha3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GitLab （&lt;a href=&#34;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12426&#34;&gt;CVE-2017-12426&lt;/a&gt; を含む）

&lt;ul&gt;
&lt;li&gt;7.9.0 through 8.17.7&lt;/li&gt;
&lt;li&gt;9.0.0 through 9.0.12&lt;/li&gt;
&lt;li&gt;9.1.0 through 9.1.9&lt;/li&gt;
&lt;li&gt;9.2.0 through 9.2.9&lt;/li&gt;
&lt;li&gt;9.3.0 through 9.3.9&lt;/li&gt;
&lt;li&gt;9.4.0 through 9.4.3&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;対策-回避策&#34;&gt;対策・回避策&lt;/h2&gt;

&lt;p&gt;改修されたバージョンが公開されている。
更新作業は計画的に。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Git v2.14.1&lt;/li&gt;
&lt;li&gt;Mercurial 4.3.1&lt;/li&gt;
&lt;li&gt;Subversion 1.8.19 and 1.9.7&lt;/li&gt;
&lt;li&gt;GitLab 8.17.8, 9.0.13, 9.1.10, 9.2.10, 9.3.10, and 9.4.4&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/bells17/items/b8a21b1ef8d9ec36a151&#34;&gt;CVE-2017-1000117 対策のメモ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
