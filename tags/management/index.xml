<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Management - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/management/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/management/index.xml" />
	<id>tag:text.Baldanders.info,2018-02-04:/tags</id>
	<updated>2018-02-04T02:44:22+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.35</generator>

	
	<entry>
		<title>週末スペシャル： 2019年の暦象，他 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/02/04-stories/" />
		<id>tag:text.Baldanders.info,2018-02-04:/remark/2018/02/04-stories/</id>
		<published>2018-02-04T02:44:22+09:00</published>
		<updated>2018-02-04T09:23:30+09:00</updated>
		<summary>2019年の暦象 / Coincheck のアレ / インフルエンザ過敏症とトリアージ / 「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;久しぶり，週末の戯れ言特集。
今回は Facebook の TL に書き散らしたものを中心にお送りします。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#calendar&#34;&gt;2019年の暦象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coincheck&#34;&gt;Coincheck のアレ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#triage&#34;&gt;インフルエンザ過敏症とトリアージ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wireless&#34;&gt;「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;calendar&#34;&gt;2019年の暦象&lt;/h2&gt;

&lt;p&gt;今年も予定通り国立天文台から来年（2019年）の暦象が公開された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/news/topics/2018/20180201-rekiyoko.html&#34;&gt;平成31（2019）年暦要項の発表 | 国立天文台(NAOJ)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;祝日から解説すると，12月23日の天皇誕生日がなくなる。
これは新しい天皇が即位されるのが2019年5月で，その時点から「天皇誕生日」が2月23日に変わるため2019年中は天皇誕生日はないということらしい。
また即位による祝日が5月1日になった場合は前後の平日も祝日になるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nlab.itmedia.co.jp/nl/articles/1802/02/news108.html&#34;&gt;天皇陛下の退位に伴い2019年は祝日「天皇誕生日」がなくなる　翌年から2月23日が新たな祝日に - ねとらぼ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;暦象については2019年は水星の日面経過がある。
ただし日本では見られない。
また金環日食もあるが日本では部分日食になる。&lt;/p&gt;

&lt;h2 id=&#34;coincheck&#34;&gt;Coincheck のアレ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20180126/1517012654&#34;&gt;Coincheckで発生した暗号通貨NEMの不正送金事案についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kusunokimasanori/20180128-00080965/&#34;&gt;コインチェックからのNEM流出、なぜ安全対策が遅れたのか(楠正憲) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2018/02/02/fsa-coincheck/&#34;&gt;金融庁がコインチェックへの立入検査、CAMPFIREなどみなし仮想通貨交換業者15社にも報告徴求命令  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一応，重大なセキュリティ・インシデント（かつ現在進行形）なんで挙げておくけど，個人的には&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;の投機には小指の先ほども興味が無いので完全に他人事である。
だいたい，あんな短期間に価値が乱高下する通貨なんか取引に使えないだろ。
もはやこれを「通貨（currency）」と呼ぶことさえ疑問に感じてしまう。
もう「チューリップ」でいいぢゃん。&lt;/p&gt;

&lt;p&gt;以上，終わり。&lt;/p&gt;

&lt;h2 id=&#34;triage&#34;&gt;インフルエンザ過敏症とトリアージ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://medg.jp/mt/?p=8111&#34;&gt;Vol.021 インフルエンザで「早めの受診」は間違いです！  |  MRIC by 医療ガバナンス学会&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fsight.jp/articles/-/43278&#34;&gt;インフルエンザで「早めの受診」は間違いです！：医療ガバナンス学会 | MRICの部屋 | 新潮社　Foresight(フォーサイト) | 会員制国際情報サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://k3c.hatenablog.com/entry/2018/02/01/230354&#34;&gt;インフルエンザの予防と治療について考える - 18 til i die (another phase)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これね、結局リスク・マネジメントの問題なのよ。&lt;/p&gt;

&lt;p&gt;インフルエンザに対してリスクの高い（重症化しやすい）人はいる。
例えば循環器系にリスクがある人，子供や老人，等々&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:inf1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:inf1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
あるいは受験等の重要なイベントを控えている人などは出来るだけ避けたいと思うだろう。
そういった人（あるいはその家族）がリスクを下げるために予防接種や罹患時に早めの措置を行なうことは意味がある。&lt;/p&gt;

&lt;p&gt;でもリスクというのは系（system）全体で最小になるように再配分（trade-off）しなければならない。
医療ってのは一種の公共サービスなんだから個人の思惑が通らないこともある。
リソースは有限なのだから。&lt;/p&gt;

&lt;p&gt;で，（急変など）予測を超える事態が起きた場合に備えて（救急車の手配や医師やベッドの確保など）医療機関側の体制を整えておかなきゃいけないのに，実際には医療機関側のリソースは軽症者に使い潰されているわけ。
そこが問題で，そのことを（正しくリスクを再配分すべき）国が全く分かってないというのが批判の核心なのである。&lt;/p&gt;

&lt;p&gt;もうね，インフルエンザだからって診断証明を要求するのは止めなよ。
日本の悪しき慣習。
“&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01LYTKUPM/baldandersinf-22/&#34; title=&#34;Amazon.co.jp： THIS IS JAPAN 英国保育士が見た日本 eBook: ブレイディみかこ: Kindleストア&#34;&gt;This Is Japan&lt;/a&gt;” って奴。
病院をバイオ・ハザードにするつもりか。&lt;/p&gt;

&lt;p&gt;そろそろ日本人は「インフルエンザ過敏症」から卒業して正しいリスク感覚を身に着けるべきなんじゃないのか。
何度おなじ失敗を繰り返したら懲りるんだ。&lt;/p&gt;

&lt;p&gt;まぁあとは「てうが」ね。&lt;/p&gt;

&lt;h2 id=&#34;wireless&#34;&gt;「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.soumu.go.jp/menu_news/s-news/01ryutsu03_02000137.html&#34;&gt;総務省｜公衆無線LANセキュリティ分科会報告書（案）に対する意見募集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;途中まで読んで「公衆無線 LAN 版安全・安心マーク」という語句を見た瞬間に読む気が失せた。
これが日本のネットワーク・セキュリティの現状である。&lt;/p&gt;

&lt;p&gt;海外から来られる皆さん，日本政府はあてにならないのでぜひ自衛してください。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51AT2LqRIsL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;UNDERGROUND MARKET　ヒステリアン・ケース&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;藤井太洋 &lt;/dd&gt;&lt;dd&gt;朝日新聞出版 2013-11-07&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00H91YQGW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00H91YQGW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDERGROUND MARKET　アービトレーター&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00V7Y7DUS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00V7Y7DUS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビッグデータ・コネクト (文春文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00B71TZ9S/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00B71TZ9S.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDER GROUND MARKET&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01IGR0TA4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01IGR0TA4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アンダーグラウンド・マーケット (朝日文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00CHIFA1M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00CHIFA1M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Gene Mapper -full build-&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0753H9CDS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0753H9CDS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;公正的戦闘規範 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSMC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSMC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 下 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSP4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSP4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 上 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B078JT42J7/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B078JT42J7.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アリスマ王の愛した魔物 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B077Q9WM8M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B077Q9WM8M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;SF飯：宇宙港デルタ３の食料事情 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;日本で「仮想通貨」が流行る前に登場した傑作。つかエンジニアは全員「UNDERGROUND MARKET」シリーズを読め！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-02-04&#34;&gt;2018-02-04&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:inf1&#34;&gt;それ以外では劇症型または劇症型が予測されるウイルスの場合とか。これは「新型インフルエンザ」のときに大騒ぎしたのでみんな覚えてると思う。でも劇症型のインフルエンザなんてそうそうないのよ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:inf1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな - openpgp</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/openpgp/using-ecc-with-gnupg/" />
		<id>tag:text.Baldanders.info,2017-12-02:/openpgp/using-ecc-with-gnupg/</id>
		<published>2017-12-02T16:20:26+09:00</published>
		<updated>2018-01-28T18:00:19+09:00</updated>
		<summary>手っ取り早く ECC 鍵を作りたいなら --quick-generate-key コマンドでアルゴリズムに future-default を指定すればよい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="openpgp" label="openpgp" scheme="http://text.baldanders.info/openpgp" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;最初に言っておくと &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; では（秘密鍵の漏洩や暗号アルゴリズム等の危殆化がない限り）永続的に使われるのがよい鍵とされている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:km1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:km1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
なので，無理に新しい鍵に切り替える必要はないのだが，もし &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で新しい鍵を作るのであれば ECC (Elliptic Curve Cryptography; 楕円曲線暗号) を選択するのがいいんじゃないかな？ という提案である。&lt;/p&gt;

&lt;h2 id=&#34;手っ取り早く-ecc-鍵を作る&#34;&gt;手っ取り早く ECC 鍵を作る&lt;/h2&gt;

&lt;p&gt;手っ取り早く ECC 鍵を作りたいなら &lt;code&gt;--quick-generate-key&lt;/code&gt; コマンドでアルゴリズムに &lt;code&gt;future-default&lt;/code&gt; を指定すればよい。
（以下は有効期限を2年で指定する場合。無期限でいいなら &lt;code&gt;0&lt;/code&gt; を指定する）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-gen-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; future-default - 2y
たくさんのランダム・バイトの生成が必要です。キーボードを打つ、マウスを動か
す、ディスクにアクセスするなどの他の操作を素数生成の間に行うことで、乱数生
成器に十分なエントロピーを供給する機会を与えることができます。

たくさんのランダム・バイトの生成が必要です。キーボードを打つ、マウスを動か
す、ディスクにアクセスするなどの他の操作を素数生成の間に行うことで、乱数生
成器に十分なエントロピーを供給する機会を与えることができます。
gpg: 失効証明書を &amp;#39;C:/Users/slice/AppData/Roaming/gnupg/openpgp-revocs.d\F79B411717B86902177EA08200693613E2B68F5A.rev&amp;#39; に保管しました。
公開鍵と秘密鍵を作成し、署名しました。

pub   ed25519 2017-12-02 [SC] [有効期限: 2019-12-02]
      F79B411717B86902177EA08200693613E2B68F5A
uid                      Alice &amp;lt;alice@example.com&amp;gt;
sub   cv25519 2017-12-02 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成した鍵を私作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpd&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gpd&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; で見てみるとこんな感じになっている。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -a --export alice | gpgpdump
&lt;span class=&#34;hl&#34;&gt;Public-Key Packet (tag 6) (51 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Version: 4 (current)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public key creation time: 2017-12-02T10:37:17+09:00
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        5a 22 03 cd
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public-key Algorithm: EdDSA (pub 22)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECC Curve OID: ed25519
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        2b 06 01 04 01 da 47 0f 01
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    EdDSA EC point (04 || X || Y) (263 bits)
&lt;/span&gt;User ID Packet (tag 13) (25 bytes)
    User ID: Alice &amp;lt;alice@example.com&amp;gt;
Signature Packet (tag 2) (150 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: EdDSA (pub 22)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (62 bytes)
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                f7 9b 41 17 17 b8 69 02 17 7e a0 82 00 69 36 13 e2 b6 8f 5a
        Signature Creation Time (sub 2): 2017-12-02T10:37:17+09:00
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 730 days after (2019-12-02T10:37:17+09:00)
        Preferred Symmetric Algorithms (sub 11) (4 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
            Hash Algorithm: SHA-1 (hash 2)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x00693613e2b68f5a
    Hash left 2 bytes
        7e b5
    EdDSA compressed value r (253 bits)
    EdDSA compressed value s (251 bits)
&lt;span class=&#34;hl&#34;&gt;Public-Subkey Packet (tag 14) (56 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Version: 4 (current)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public key creation time: 2017-12-02T10:37:17+09:00
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        5a 22 03 cd
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public-key Algorithm: ECDH public key algorithm (pub 18)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECC Curve OID: cv25519
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        2b 06 01 04 01 97 55 01 05 01
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECDH EC point (04 || X || Y) (263 bits)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    KDF parameters (3 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        Hash Algorithm: SHA2-256 (hash 8)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        Symmetric Algorithm: AES with 128-bit key (sym 7)
&lt;/span&gt;Signature Packet (tag 2) (120 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: EdDSA (pub 22)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (32 bytes)
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                f7 9b 41 17 17 b8 69 02 17 7e a0 82 00 69 36 13 e2 b6 8f 5a
        Signature Creation Time (sub 2): 2017-12-02T10:37:17+09:00
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x00693613e2b68f5a
    Hash left 2 bytes
        29 27
    EdDSA compressed value r (254 bits)
    EdDSA compressed value s (254 bits)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;長々とした出力で申し訳ないが &lt;code&gt;Public-Key Packet&lt;/code&gt; と &lt;code&gt;Public-Subkey Packet&lt;/code&gt; の項目に注目していただくと，電子署名用に EdDSA (ed25519)，暗号用に ECDH (cv25519) が使われているのが分かる。
鍵長はいずれも 256bits である。&lt;/p&gt;

&lt;p&gt;通常はこれで問題ない。&lt;/p&gt;

&lt;h2 id=&#34;楕円曲線と鍵長&#34;&gt;楕円曲線と鍵長&lt;/h2&gt;

&lt;p&gt;ここでちょっと横道に逸れて鍵長の話をしておく。&lt;/p&gt;

&lt;p&gt;たとえば RSA の（平文 $M$ から暗号文 $C$ への）暗号化は以下の式で表される。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;
\[
    C = M^e \bmod n
\]
&lt;/div&gt;

&lt;p&gt;$(e, n)$ のセットが公開鍵で， $n$ のサイズが鍵長に相当する。
実際の計算はともかく，感覚としては分かりやすいよね。&lt;/p&gt;

&lt;p&gt;ECC の場合は暗号化の前に，まずベースとなる楕円曲線の（素数 $q$ で決められる）素体（prime fields）を決めなければならない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:pf1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:pf1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
これは以下の式で表される。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;
\[
    E : y^2 \equiv x^3 + ax + b \pmod{q}
\]
&lt;/div&gt;

&lt;p&gt;この素体上の有理点の数（位数）を $\#E$ とした時の $\#E$ のサイズが鍵長に相当する。
$(a,b,q)$ といったパラメータを眺めただけでは鍵長が分からないというのが面倒臭い感じである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ecc1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ecc1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;そこで ECC の場合は楕円曲線を表すパラメータのセットが標準化されていて，そのセットを識別する ECC Curve OID (Object IDentifier) も決められている。
先程書いた &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; 出力結果の &amp;ldquo;&lt;code&gt;ECC Curve OID&lt;/code&gt;” の項目がそれに該当する。&lt;/p&gt;

&lt;p&gt;つまり ECC Curve OID から楕円曲線の種類を特定し，そこから鍵長も分かる，というわけだ。&lt;/p&gt;

&lt;h2 id=&#34;gnupg-で利用できる楕円曲線&#34;&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線&lt;/h2&gt;

&lt;p&gt;そこで， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線をリストアップしておく。&lt;/p&gt;

&lt;p&gt;表の左端列の「GnuPG」は &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で表示される楕円曲線名を示す。
楕円曲線名に鍵長が含まれている（ただし &lt;code&gt;cv25519&lt;/code&gt; と &lt;code&gt;ed25519&lt;/code&gt; は 256bits）。
右端列の「強度」は鍵長ではなく，セキュリティ強度なのでご注意を。&lt;/p&gt;

&lt;h3 id=&#34;secg-nist-推奨パラメータ&#34;&gt;SECG/NIST 推奨パラメータ&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;SECG&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;NIST&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp256r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-256&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp384r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-384&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp521r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-521&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp256k1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;SECG/NIST の楕円曲線名とのマッピングは &lt;a href=&#34;https://tools.ietf.org/html/rfc4492&#34; title=&#34;RFC 4492 - Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)&#34;&gt;RFC 4492&lt;/a&gt; を参考にした。
&lt;code&gt;nistp256&lt;/code&gt;, &lt;code&gt;nistp384&lt;/code&gt;, &lt;code&gt;nistp521&lt;/code&gt; は既に &lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; で定義済みなので正式に使える。
&lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; では NIST curve P-256 については &amp;ldquo;MUST implement”， NIST curve P-521 については &amp;ldquo;SHOULD implement”， NIST curve P-384 については &amp;ldquo;MAY implement” となっている。&lt;/p&gt;

&lt;h3 id=&#34;brainpool&#34;&gt;Brainpool&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP256r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP384r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP512r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Brainpool については &lt;a href=&#34;https://tools.ietf.org/html/rfc5639&#34; title=&#34;RFC 5639 - Elliptic Curve Cryptography (ECC) Brainpool Standard Curves and Curve Generation&#34;&gt;RFC 5639&lt;/a&gt; を参照のこと。
&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; では &lt;code&gt;brainpoolP256r1&lt;/code&gt; および &lt;code&gt;brainpoolP512r1&lt;/code&gt; については &amp;ldquo;MAY implement” となっている。&lt;/p&gt;

&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;cv25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ed25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;EdDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;EdDSA については &lt;a href=&#34;https://tools.ietf.org/html/rfc8032&#34; title=&#34;RFC 8032 - Edwards-Curve Digital Signature Algorithm (EdDSA)&#34;&gt;RFC 8032&lt;/a&gt; を参照のこと。
&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; では Curve25519 (&lt;code&gt;cv25519&lt;/code&gt;) および Ed25519 (&lt;code&gt;ed25519&lt;/code&gt;) については &amp;ldquo;SHOULD implement” となっている。&lt;/p&gt;

&lt;h2 id=&#34;セキュリティ強度と楕円曲線&#34;&gt;セキュリティ強度と楕円曲線&lt;/h2&gt;

&lt;p&gt;セキュリティ強度と暗号アルゴリズムと鍵長の関係は以下の表の通り（単位は全てbit）。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;style&gt;
main table.nist2 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist2 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist2&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security&lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Symmetric&lt;br&gt; key&lt;br&gt; algorithms&lt;/th&gt;
&lt;th&gt;FFC&lt;br&gt;(e.g., DSA, D-H)&lt;/th&gt;
&lt;th&gt;IFC&lt;br&gt;(e.g., RSA)&lt;/th&gt;
&lt;th&gt;ECC&lt;br&gt;(e.g., ECDSA)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;$\le 80$&lt;/td&gt;&lt;td&gt;2TDEA&lt;/td&gt;&lt;td&gt;$L=1024$&lt;br&gt;$N=160$&lt;/td&gt;&lt;td&gt;$k=1024$&lt;/td&gt; &lt;td&gt;$f = 160\text{ - }223$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$112$&lt;/td&gt;&lt;td&gt;3TDEA&lt;/td&gt;&lt;td&gt;$L=2048$&lt;br&gt;$N=224$&lt;/td&gt; &lt;td&gt;$k=2048$&lt;/td&gt; &lt;td&gt;$f = 224\text{ - }255$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;&lt;td&gt;AES-128&lt;/td&gt;&lt;td&gt;$L=3072$&lt;br&gt;$N=256$&lt;/td&gt; &lt;td&gt;$k=3072$&lt;/td&gt; &lt;td&gt;$f = 256\text{ - }383$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;&lt;td&gt;AES-192&lt;/td&gt;&lt;td&gt;$L=7680$&lt;br&gt;$N=384$&lt;/td&gt; &lt;td&gt;$k=7680$&lt;/td&gt; &lt;td&gt;$f = 384\text{ - }511$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;&lt;td&gt;AES-256&lt;/td&gt;&lt;td&gt;$L=15360$&lt;br&gt;$N=512$&lt;/td&gt;&lt;td&gt;$k=15360$&lt;/td&gt;&lt;td&gt;$f=512+$&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Comparable strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;2030年以降も Acceptable な鍵が要件なら 128bits 以上のセキュリティ強度が必要だが， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線は全て問題ないことが分かるだろう。&lt;/p&gt;

&lt;h2 id=&#34;付録-対話モードによる-ecc-鍵の選択&#34;&gt;【付録】 対話モードによる ECC 鍵の選択&lt;/h2&gt;

&lt;p&gt;対話モードで ECC 鍵を選択して作成するには以下のコマンドラインで起動する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --full-gen-key --expert&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このうち ECC 鍵を作成できるのは，以下の選択肢の内 (9) から (11) を選択した場合である。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ご希望の鍵の種類を選択してください:
   (1) RSA と RSA (デフォルト)
   (2) DSA と Elgamal
   (3) DSA (署名のみ)
   (4) RSA (署名のみ)
   (7) DSA (機能をあなた自身で設定)
   (8) RSA (機能をあなた自身で設定)
&lt;span class=&#34;hl&#34;&gt;   (9) ECC と ECC
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  (10) ECC (署名のみ)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  (11) ECC (機能をあなた自身で設定)
&lt;/span&gt;  (13) 既存の鍵
あなたの選択は? &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(9) を選択すると電子署名用の主鍵と暗号化用の副鍵をセットで作成する。
(10) と (11) を選択すると電子署名用の主鍵のみ作成する（(11) では主鍵の機能を選択できる） 。&lt;/p&gt;

&lt;p&gt;いずれを選択した場合でも以下の楕円曲線の選択肢が表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ご希望の楕円曲線を選択してください:
   (1) Curve 25519
   (3) NIST P-256
   (4) NIST P-384
   (5) NIST P-521
   (6) Brainpool P-256
   (7) Brainpool P-384
   (8) Brainpool P-512
   (9) secp256k1
あなたの選択は? &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際にどのような鍵が作成されるか以下に示す。&lt;/p&gt;

&lt;h3 id=&#34;ecc-と-ecc-を選んだ場合&#34;&gt;「ECC と ECC」を選んだ場合&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;選択した楕円曲線&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;主鍵（電子署名用）&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;副鍵（暗号化用）&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Curve 25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;EdDSA (&lt;code&gt;ed25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;cv25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-512&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;ecc-署名のみ-を選んだ場合&#34;&gt;「ECC (署名のみ)」を選んだ場合&lt;/h3&gt;

&lt;p&gt;「ECC (機能をあなた自身で設定)」でも同じ。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;選択した楕円曲線&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;主鍵（電子署名用）&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;副鍵&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Curve 25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;EdDSA (&lt;code&gt;ed25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-512&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://www.jnsa.org/seminar/pki-day/2011/data/02_kanaoka.pdf&#34;&gt;楕円曲線暗号の整備動向＋楕円暗号の実装状況 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.maidsphere.jp/archive/%E6%A5%95%E5%86%86%E6%9B%B2%E7%B7%9A%E6%9A%97%E5%8F%B7%E3%81%AE%E9%8D%B5%E9%95%B7%E3%81%AB512bit%E3%81%8C%E3%81%AA%E3%81%8F521bit%E3%81%8C%E3%81%82%E3%82%8B%E7%90%86%E7%94%B1&#34;&gt;楕円曲線暗号の鍵長に512bitがなく521bitがある理由 | maidsphere&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/algorithms-for-openpgp/&#34;&gt;OpenPGP で利用可能なアルゴリズム（RFC 4880bis 対応版）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート（鍵作成から失効まで）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:km1&#34;&gt;この辺については「&lt;a href=&#34;http://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;」を参照のこと。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:km1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gpd&#34;&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; v0.3.4 以降なら多分大丈夫。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpd&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:pf1&#34;&gt;素体ではなく「標数2の体（binary fields）」を使う場合もあるが，ここでは割愛する。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:pf1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ecc1&#34;&gt;楕円曲線と楕円曲線暗号については結城浩さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版&lt;/a&gt;』の付録に比較的分かりやすい解説が載っている。同じく結城浩さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00L0PDMK4/baldandersinf-22/&#34;&gt;数学ガール ガロア理論&lt;/a&gt;』が何となく分かれば楕円曲線についても何となく分かると思う。大丈夫。私も何となくしか分かっていない（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ecc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>OpenPGP 鍵管理に関する考察 - openpgp</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/openpgp/openpgp-key-management/" />
		<id>tag:text.Baldanders.info,2017-12-01:/openpgp/openpgp-key-management/</id>
		<published>2017-12-01T17:51:59+09:00</published>
		<updated>2017-12-02T16:20:26+09:00</updated>
		<summary>OpenPGP 鍵の管理について考えてみるテスト。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="openpgp" label="openpgp" scheme="http://text.baldanders.info/openpgp" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;(move from &lt;a href=&#34;http://text.baldanders.info/remark/2017/11/openpgp-key-management/&#34; title=&#34;OpenPGP 鍵管理に関する考察&#34;&gt;http://text.baldanders.info/remark/2017/11/openpgp-key-management/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;たまたま以下の記事を見かけたのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/moutend/items/5c22d6e57a74845578f6&#34;&gt;gpg (GNU Privacy Guard)の使い方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このやり方も良さそうだけど，もう少し簡単に運用できないか考えてみる。
なお &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理は目的別にアドホック（ad hoc）な運用も可能なので「これ！」という正解はない。
自分にあったやり方を考えるのも面白いと思う。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の信用モデル&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル&lt;/h2&gt;

&lt;p&gt;鍵の管理について考える前に &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデルについておさらいしておこう。&lt;/p&gt;

&lt;p&gt;最初の登場人物は Alice と Bob。
2人はそれぞれ &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵を持っていて，これを使って秘密のやり取りをしようと考えている。
持っている鍵が信用できることを証明するために，お互い相手の公開鍵に自身の鍵で電子署名を施した。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Bob-- Digital Sign --&gt;Alice
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;鍵に施されている電子署名を確認することでコンテンツに対する暗号文や電子署名が正しい鍵で行われていることが証明できるわけだ。
これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の基本。
公開鍵への電子署名を使って peer-to-peer で信用関係を結ぶ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ksp1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ksp1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ここで3人目の人物 Chris に登場してもらおう。
Bob と Chris は面識があり既にお互いの公開鍵で電子署名を交わしている。
しかし Alice と Chris は面識がなく電子署名を交わす機会がないとする。
Alice から見て Chris の鍵は信用できるだろうか？&lt;/p&gt;

&lt;p&gt;（念のために言うと，ここで言う「信用」は「あなたは人として信用できる」の信用ではなく「この鍵は正しく本人のものであると信用できる」の信用である）&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. trust? .-&gt;Chris
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;まず Alice から見て直接電子署名を交わした Bob の鍵が信用できるのは明らかである。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
 graph LR
   Alice[&#34;Alice&#39;s Public Key&#34;]
   Bob[&#34;Bob&#39;s Public Key&#34;]
   Chris[&#34;Chris&#39;s Public Key&#34;]

   Alice-- Digital Sign --&gt;Bob
   Alice-. trust .-&gt;Bob
   Bob-- Digital Sign --&gt;Alice
   Bob-- Digital Sign --&gt;Chris
   Chris-- Digital Sign --&gt;Bob

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Alice は Chris の公開鍵に信用できる Bob の公開鍵による電子署名を見つけたため， Bob の公開鍵と同じく Chris の公開鍵も有効であると見なすことができる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. validate! .-&gt;Chris
  Alice-. trust .-&gt;Bob
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な信用モデル “web of trust” の基本的な考え方である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tm1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tm1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
このことから &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理ににおいて「信用できる鍵」の条件は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;多くの電子署名（とできれば信用）が集まっていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;だと分かる。
更にこのことから派生的に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;同じ鍵が永続的に使われ続けていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;も「信用できる鍵」の条件となる。
何故なら，鍵が頻繁に変わるとその度に電子署名をやり直すことになり，鍵に署名（＝信用）が集まりにくくなるからである。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の鍵管理&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理&lt;/h2&gt;

&lt;p&gt;以上を踏まえて &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵の管理について考えてみよう。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵で運用する場合&#34;&gt;ひとつの鍵で運用する場合&lt;/h3&gt;

&lt;p&gt;一番簡単なケースで，ひとつの &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵で全てをまかなう場合を考える。
たとえば，ふだん暗号化ツールなんて全然使わないけど git commit に電子署名するためだけに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を使いたい，など。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な実装である &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の最新バージョンでは，以下に示すように，鍵の作成処理が（昔と比べて）大幅に簡略化できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵02C94DC57527A786を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d\9416E477EBA825CD1694573102C94DC57527A786.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--batch&lt;/code&gt; オプション&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gk1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gk1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;（または &lt;code&gt;--pinentry-mode&lt;/code&gt; オプションに &lt;code&gt;loopback&lt;/code&gt; を指定）と &lt;code&gt;--passphrase&lt;/code&gt; オプションを組み合わせて Pinentry によるパスフレーズ入力を回避できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--quick-generate-key&lt;/code&gt; コマンドの第1引数にユーザID，第2引数にアルゴリズム，第3引数に使用目的，第4引数に有効期限を指定する

&lt;ul&gt;
&lt;li&gt;アルゴリズムに &lt;code&gt;default&lt;/code&gt; を指定するか指定しない場合は既定のアルゴリズム（RSA/2048ビット）で鍵を作成する&lt;/li&gt;
&lt;li&gt;使用目的には主鍵&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:k1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:k1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; の種類を指定する。通常は &lt;code&gt;default&lt;/code&gt; のまま（署名と証明）でよい（指定しなければ &lt;code&gt;default&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;有効期限には期間（1週間なら &lt;code&gt;7d&lt;/code&gt; または &lt;code&gt;1w&lt;/code&gt;，1年なら &lt;code&gt;12m&lt;/code&gt; または &lt;code&gt;1y&lt;/code&gt; など）を指定する。 &lt;code&gt;0&lt;/code&gt; を指定すると無期限になる（指定しないと有効期限が当日になる）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生成された鍵の状態は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成した鍵の公開鍵を配布するには&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice &amp;gt; alice-key.asc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として &lt;code&gt;alice-key.asc&lt;/code&gt; を直接配布するか&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --keyserver keys.gnupg.net --send-key alice&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として鍵サーバ（ここでは &lt;a href=&#34;http://keys.gnupg.net/&#34;&gt;&lt;code&gt;keys.gnupg.net&lt;/code&gt;&lt;/a&gt;）にアップロードすればいい。&lt;/p&gt;

&lt;p&gt;注意する点としてはパスフレーズと失効証明書を紛失・漏洩しないよう管理することであろう。
できれば失効証明書は普段使う PC や携帯端末とは別に管理しておくのが望ましい。
ちなみに &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; ではパスフレーズは何処にも保存されないので，パスフレーズを忘れてしまうと全くリカバリできなくなる（だからといってパスフレーズを設定しないというのは通常運用ではあり得ないが）。&lt;/p&gt;

&lt;p&gt;ノートPCや携帯端末には常に紛失・盗難のリスクが付きまとうが，予防に注力しすぎて現実的でない対策を執るよりも，これはもう「起こり得ること」として「事後」がスムーズに行われるようバックアップ等の準備しておくほうが賢明である。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵に複数のユーザidを付与する場合&#34;&gt;ひとつの鍵に複数のユーザIDを付与する場合&lt;/h3&gt;

&lt;p&gt;ユーザIDというのは鍵の名前 “&lt;code&gt;Alice &amp;lt;alice@examle.com&amp;gt;&lt;/code&gt;” の部分である。&lt;/p&gt;

&lt;p&gt;たとえば，以下の鍵があったとき&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これに新しいユーザID “&lt;code&gt;Alice &amp;lt;alice@examle2.com&amp;gt;&lt;/code&gt;” を付加するには &lt;code&gt;--quick-add-uid&lt;/code&gt; コマンドを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-add-uid alice &amp;#34;Alice &amp;lt;alice@examle2.com&amp;gt;&amp;#34;
$ gpg --update-trustdb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:updtd1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:updtd1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
これで新しいユーザIDが付加された。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@examle2.com&amp;gt;
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに，この鍵を &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; にかけると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice | pgpdump -u
Old: Public Key Packet(tag 6)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@example.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 05 21
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@examle2.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:33:28 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 7d 5a
        RSA m^d mod n(2048 bits) - ...
                -&amp;gt; PKCS-1
Old: Public Subkey Packet(tag 14)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: Signature Packet(tag 2)(310 bytes)
        Ver 4 - new
        Sig type - Subkey Binding Signature(0x18).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to encrypt communications
                Flag - This key may be used to encrypt storage
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 3a a7
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ユーザID毎に電子署名（自己署名）が付与されているのがお分かりだろうか。&lt;/p&gt;

&lt;p&gt;ひとつの鍵に複数のユーザIDを付与することに関しては昔から賛否あるのだが，手段が提供されていることは覚えておいて損はないだろう。&lt;/p&gt;

&lt;h3 id=&#34;用途によって鍵を使い分けたい場合&#34;&gt;用途によって鍵を使い分けたい場合&lt;/h3&gt;

&lt;p&gt;たとえば，暗号化メール，リリースファイルの電子署名， git commit 時の電子署名といった用途毎に異なる鍵を使いたいことがある。
その場合でもそれぞれ鍵を生成して運用すればいいのだが，新しい鍵を作る度にそれぞれの鍵とやり取りを行うユーザが毎度電子署名を行うのは相当に煩雑な作業である。&lt;/p&gt;

&lt;p&gt;そこで「ルート鍵」と「運用鍵」の2種類の鍵を作って運用する。
具体的にはルート鍵と各運用鍵との間で電子署名を交わす。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  rt[Root Key]-- Digital Sign --&gt;op1[Operation Key 1]
  op1-- Digital Sign --&gt;rt

  rt-- Digital Sign --&gt;op2[Operation Key 2]
  op2-- Digital Sign --&gt;rt
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;運用鍵とやり取りするユーザは，各運用鍵ではなく，ルート鍵と署名を交わし信用度を設定することによって各運用鍵の有効性を確認できる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  usr[User&#39;s Key]
  rt[Root Key]
  op1[Operation Key 1]
  op2[Operation Key 2]

  usr-- Digital Sign --&gt;rt
  usr-. trust .-&gt;rt
  rt-- Digital Sign --&gt;usr

  usr-. validate .-&gt;op1
  rt-- Digital Sign --&gt;op1

  rt-- Digital Sign --&gt;op2
  usr-. validate .-&gt;op2

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;この方法ならユーザも各運用鍵もルート鍵とのみ信用関係を構築すればいいので柔軟な運用が可能になる。
欠点としてはルート鍵の管理が煩雑になりがちで信用に関する責務も重くなるため，かなり慎重な運用が求められることであろう。&lt;/p&gt;

&lt;h4 id=&#34;alice-のルート鍵と運用鍵&#34;&gt;Alice のルート鍵と運用鍵&lt;/h4&gt;

&lt;p&gt;では実際にやってみよう。&lt;/p&gt;

&lt;p&gt;まず Alice がルート鍵と運用鍵の運用を行うとする。
ルート鍵は電子署名を行うだけの鍵なので，以下のように署名専用鍵として作成する（アルゴリズムは DSA/3072ビット にしてみた）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34; dsa3072 default 0
gpg: *警告*: いくつかのOpenPGPプログラムはこのダイジェスト長のDSA鍵を扱うことができません
gpg: 鍵B965D53DB907EF0Eを究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;もうひとつ。
運用鍵も作っておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (commit) &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵DFFC3F67BBB3C083を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\A3CEFEEEDA222024F325C403DFFC3F67BBB3C083.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この2つの鍵でお互いに電子署名を交わす（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -u 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E --quick-sign-key A3CEFEEEDA222024F325C403DFFC3F67BBB3C083

sec  rsa2048/DFFC3F67BBB3C083
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: A3CE FEEE DA22 2024 F325  C403 DFFC 3F67 BBB3 C083

     Alice (commit) &amp;lt;alice@example.com&amp;gt;

$ gpg -u A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

sec  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで Alice の2つの鍵の署名状態はこんな感じになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-sigs alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  究極  ] Alice (root) &amp;lt;alice@example.com&amp;gt;
sig 3        B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig 3        DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig          B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一方の主鍵に他方の鍵の電子署名が付与されているのが分かるだろうか。&lt;/p&gt;

&lt;h4 id=&#34;bob-鍵で-alice-のルート鍵に電子署名する&#34;&gt;Bob 鍵で Alice のルート鍵に電子署名する&lt;/h4&gt;

&lt;p&gt;今度は Bob の側である。
まずは Bob の公開鍵をこんな感じで作ってみた（作成操作は省略）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys bob
pub   rsa2048 2017-11-23 [SC]
      B4E708652A1E81445B328A3D93F496726CBE8335
uid           [  究極  ] Bob &amp;lt;bob@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この環境に先程の Alice の公開鍵をインポートしてみる。
まずはルート鍵から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import alice-root.asc
gpg: key B965D53DB907EF0E: 鍵がないため1個の署名は検査しません
gpg: 鍵B965D53DB907EF0E: 公開鍵&amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;をインポートしました
gpg:           処理数の合計: 1
gpg:             インポート: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然ながら，この時点では読み込んだルート鍵の有効性は不明である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  不明  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では，ルート鍵に Bob の鍵で署名しよう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lsign1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:lsign1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

pub  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 不明の        有効性: 不明の
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでルート鍵の有効性は「充分」になった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さらに信用データベースを更新して信用度も設定する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --update-trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   1  信用: 0-, 0q, 0n, 0m, 0f, 1u
信用度が指定されていません:
pub   dsa3072 2017-11-23 [SC]
      &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

他のユーザの鍵を正しく検証するために、このユーザの信用度を決めてください
(パスポートを見せてもらったり、他から得たフィンガープリントを検査したり、などなど)

  1 = 知らない、または何とも言えない
  2 = 信用し ない
  3 = まぁまぁ信用する
  4 = 充分に信用する
  s = この鍵はとばす
  q = 終了

あなたの決定は? 4
gpg: 深さ: 1  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 1f, 0u
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここでは「充分に信用する」を選択した。&lt;/p&gt;

&lt;p&gt;次に運用鍵もインポートする（操作は同じなので省略）。
この時点で Alice の公開鍵の状態を見ると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  充分  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性も既に「充分」になっていることが分かると思う。
ちなみにルート鍵の信用度を「まぁまぁ信用する」にすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [まぁまぁ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性が「まぁまぁ」になる。&lt;/p&gt;

&lt;p&gt;独りでこうした運用をやるメリットは殆どないが，プロジェクト・チーム等で一括して鍵管理を行いたい場合は有効な手段だと思う。&lt;/p&gt;

&lt;h2 id=&#34;有効期限について&#34;&gt;有効期限について&lt;/h2&gt;

&lt;p&gt;この記事ではすべての鍵を「無期限」で設定している。
公開鍵の有効期限をどのようにするかは意見が別れるところだと思うが，私個人としては原則として「無期限」にすることをお薦めする。
何故なら &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は永続性と一貫性が重要だからである。&lt;/p&gt;

&lt;p&gt;公開鍵に有効期限を設ける理由としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;期間の決まったプロジェクト内でのみ使用する鍵である&lt;/li&gt;
&lt;li&gt;チーム・メンバの出入りが激しく無期限では却って管理が煩雑になる&lt;/li&gt;
&lt;li&gt;鍵のセキュリティ強度の問題から期限を切って運用したい（たとえば RSA/2048ビット鍵が acceptable なのは2030年までである）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったところだろうか。
これならば，これまで述べたようにルート鍵と運用鍵を分けて，ルート鍵の方で永続性と一貫性を担保するように運用していくのがよいだろう。&lt;/p&gt;

&lt;p&gt;自分の鍵であれば有効期限はいつでも変更できる（変更時にパスフレーズ入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]

$ gpg --quick-set-expire A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 2y

$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC] [有効期限: 2019-11-23]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E] [有効期限: 2019-11-23]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかし，有効期限を随時延長していく運用は鍵のオーナーもそれを使うユーザも手間が増えるだけであまりメリットがない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:own1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:own1&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は（今のところ）利用するユーザに公開鍵の変更を自動的に通知・配信する仕組みがないので（それとも cron で鍵サーバへアクセスする？），ユーザ側の手間の多い運用では取りこぼしが出る可能性が大きくなる。&lt;/p&gt;

&lt;h2 id=&#34;鍵を失効させる&#34;&gt;鍵を失効させる&lt;/h2&gt;

&lt;p&gt;秘密鍵が漏洩するなどして鍵の失効が必要になった場合には，鍵作成時に作られた失効証明書を使って失効させる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rvk1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:rvk1&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;。
鍵作成時に作られた失効証明書の中身はこんな感じになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d

$ cat 9416E477EBA825CD1694573102C94DC57527A786.rev
これは失効証明書でこちらのOpenPGP鍵に対するものです:

pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid          Alice &amp;lt;alice@example.com&amp;gt;

失効証明書は &amp;#34;殺すスイッチ&amp;#34; のようなもので、鍵がそれ以上使えない
ように公に宣言するものです。一度発行されると、そのような失効証明書は
撤回することはできません。

秘密鍵のコンプロマイズや紛失の場合、これを使ってこの鍵を失効させます。
しかし、秘密鍵がまだアクセス可能である場合、新しい失効証明書を生成し、
失効の理由をつける方がよいでしょう。詳細は、GnuPGマニュアルのgpgコマン
ド &amp;#34;--generate-revocation&amp;#34;の記述をご覧ください。

このファイルを誤って使うのを避けるため、以下ではコロンが5つのダッシュ
の前に挿入されます。この失効証明書をインポートして公開する前に、テク
スト・エディタでこのコロンを削除してください。

:-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: This is a revocation certificate

iQE2BCABCAAgFiEElBbkd+uoJc0WlFcxAslNxXUnp4YFAloWYkcCHQAACgkQAslN
xXUnp4aG1wf/XoyxQPks2JlJ93ghQALdqCIxFPh015q21K53u0rVwTsMocwdGowR
l+/UppyBxnGyU1uIba68D787INlruMzsOyUTuruCUZ5XJpiuYYVXcRuovUmCREWF
EbW1DGd1lzmrO8cr70qu3yVCMYjGOQ6NA0fh1lpKTpFqHc3GC+ue19RDoVY1KnCC
YsWuNom4PAuUyHlH3uJLM9+F9J2Qec+0PIedxHyxuIStWOSg+/TGjD4cP3FEItIt
giRxx6qLWcK+bfg6WXv7I3+FA2J8eRKjLoD/vsZX+FpxG7T+c4mvfTUgxn0+bZD9
gxTKlFWg2bhKTcxi0EsJ9XAEmocvOolwPQ==
=ShPY
-----END PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際に使う場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;:-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;の先頭のコロンを削除して使う。
失効処理を行うには &lt;code&gt;--import&lt;/code&gt; コマンドで失効証明書をインポートすればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import 9416E477EBA825CD1694573102C94DC57527A786.rev
gpg: 鍵02C94DC57527A786:&amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34;失効証明書をインポートしました
gpg:           処理数の合計: 1
gpg:         新しい鍵の失効: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで鍵の状態は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC] [失効: 2017-11-23]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  失効  ] Alice &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり失効したことが分かる。
&lt;strong&gt;失効した公開鍵を配布するのを忘れずに！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/OpenPGP-Key-Management.html&#34;&gt;Using the GNU Privacy Guard: OpenPGP Key Management&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-1/&#34;&gt;GnuPG for Windows ― インストール編&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-2/&#34;&gt;GnuPG for Windows ― gpg-agent について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ksp1&#34;&gt;相手の公開鍵に電子署名するには (1) 相手の公開鍵を貰って &lt;code&gt;--import&lt;/code&gt; （または鍵サーバから &lt;code&gt;--recv-keys&lt;/code&gt;）する (2) インポートした鍵に &lt;code&gt;--sign-key&lt;/code&gt; する (3) 署名した公開鍵を &lt;code&gt;--export&lt;/code&gt; して相手に返す（または鍵サーバへ &lt;code&gt;--send-keys&lt;/code&gt;） といった手順を踏む。これをひとりひとりやるのは割と面倒なので，複数人が一度に電子署名を交わすために「&lt;a href=&#34;https://en.wikipedia.org/wiki/Key_signing_party&#34; title=&#34;Key signing party - Wikipedia&#34;&gt;キーサイン・パーティ（key signing party）&lt;/a&gt;」が行われることがある。日本ではあまり聞かないけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ksp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tm1&#34;&gt;もう少し詳しく言うと，公開鍵への電子署名の際に「信用度」を設定し，集まった「信用度」の累積から公開鍵の「有効性」を機械的に判定する。なので（信用度が分からない）全く未知の人の電子署名がいくらあっても「有効性」は上がりにくい。また公開鍵に電子署名を施すことは相手の鍵をある程度以上信用していることになるため，よく分からない鍵に対して安易に電子署名を行うことは避けるべきである。なお，現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では web of trust 以外にも X.509 や &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34; title=&#34;Trust on first use - Wikipedia&#34;&gt;Tofu (Trust on first use)&lt;/a&gt; といった信用モデルもサポートしている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gk1&#34;&gt;&lt;code&gt;--gen-key&lt;/code&gt; コマンドに &lt;code&gt;--batch&lt;/code&gt; オプションを組み合わせて設定ファイルから鍵を作成することも可能である。詳しい方法は “&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/Unattended-GPG-key-generation.html&#34;&gt;Unattended GPG key generation&lt;/a&gt;” が参考になるだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:k1&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵は1つの主鍵（primary key）と0個以上の副鍵（subkey）で構成されている。主鍵は必ず電子署名用の鍵になっていて，この主鍵にユーザID（とその自己署名）や他の鍵からの電子署名が付与される。副鍵は暗号化または電子署名用の鍵である。たとえば，データの暗号化と復号は実際にはこの副鍵を使って行う。副鍵は個別に追加したり失効したりできる。ちなみに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では通常のやり方では暗号化機能のみの鍵は作れない。電子署名機能のみの鍵は作ることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:k1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:updtd1&#34;&gt;&lt;code&gt;--update-trustdb&lt;/code&gt; コマンドは信用データベース（trustdb）の更新コマンドである。現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では信用度は &lt;code&gt;trustdb.gpg&lt;/code&gt; ファイルを使って鍵束とは独立に管理される。通常は鍵の状態が変わると自動的に信用データベースが更新されるのだが，自動更新しない場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドで更新できる。なお，他ユーザの公開鍵に電子署名を施した場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドを起動して署名した鍵の信用度を設定する。信用度の設定は &lt;code&gt;--edit-key&lt;/code&gt; コマンドの編集モードでも設定・変更が可能である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:updtd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:lsign1&#34;&gt;公開鍵に電子署名したことを公開したくない場合は &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで署名する。 &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで付与した署名はエクスポートされないため他ユーザには公開されない。公開鍵に関する確証はないけど取り敢えず使いたいという場合には有効な手だろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lsign1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:own1&#34;&gt;公開鍵の更新を鍵オーナーの存在証明に使うのは，あまり筋のいい運用とは思えない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:own1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:rvk1&#34;&gt;または &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで失効証明書を作成する。 &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで作成した場合は失効理由も含めることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rvk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>暗号鍵関連の各種変数について - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/key-parameters/" />
		<id>tag:text.Baldanders.info,2017-10-17:/remark/2017/10/key-parameters/</id>
		<published>2017-10-17T16:32:03+09:00</published>
		<updated>2017-12-01T17:31:17+09:00</updated>
		<summary>この記事は将来の記事で再利用するための snippet 置き場として使うことにする。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;「&lt;a href=&#34;https://qiita.com/darai0512/items/c7b47d1b3fe06c4dea7d&#34;&gt;ECDSA鍵をGitHubで使う方法&lt;/a&gt;」で SP 800-56 が Rev.4 になってるのを見て一瞬「ふぁ！」となったが，よく考えたら今年始めに書いた「&lt;a href=&#34;http://text.baldanders.info/remark/2017/02/sha-1-collision/&#34;&gt;最初の SHA-1 衝突例&lt;/a&gt;」では既に Rev.4 を参照していたのだった。
でも古い記事を見返したら結構 Rev.3 のままになってるので，このさい全部アップデートすることにした。&lt;/p&gt;

&lt;p&gt;この記事は将来の記事で再利用するための snippet 置き場として使うことにする。
表のレイアウトの関係で携帯端末で見ている人は見づらいかもしれないけど，そこはご容赦。&lt;/p&gt;

&lt;h2 id=&#34;参照資料&#34;&gt;参照資料&lt;/h2&gt;

&lt;p&gt;ここで参照する資料は，米国 &lt;a href=&#34;https://www.nist.gov/&#34; title=&#34;National Institute of Standards and Technology | NIST&#34;&gt;NIST&lt;/a&gt; の Special Publication (SP) 800-57 Part 1 で正式タイトルは「Recommendation for Key Management Part 1: General （鍵管理における推奨事項 第一部：一般事項）」となっている（日本語訳は IPA によるもの）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-4/final&#34;&gt; SP 800-57 Part 1 Rev. 4 Recommendation for Key Management, Part 1: General&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#34;&gt;NIST Special Publication 800-57 Part 1; Revision 4; Recommendation for Key Management Part 1: General &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; （&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000055490.pdf&#34;&gt;IPA による日本語版 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;セキュリティ強度と鍵長の関係&#34;&gt;セキュリティ強度と鍵長の関係&lt;/h2&gt;

&lt;p&gt;最初はセキュリティ強度と鍵長の関係を示す表。
単位は全て bit である。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;style&gt;
main table.nist2 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist2 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist2&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security&lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Symmetric&lt;br&gt; key&lt;br&gt; algorithms&lt;/th&gt;
&lt;th&gt;FFC&lt;br&gt;(e.g., DSA, D-H)&lt;/th&gt;
&lt;th&gt;IFC&lt;br&gt;(e.g., RSA)&lt;/th&gt;
&lt;th&gt;ECC&lt;br&gt;(e.g., ECDSA)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;$\le 80$&lt;/td&gt;&lt;td&gt;2TDEA&lt;/td&gt;&lt;td&gt;$L=1024$&lt;br&gt;$N=160$&lt;/td&gt;&lt;td&gt;$k=1024$&lt;/td&gt; &lt;td&gt;$f = 160\text{ - }223$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$112$&lt;/td&gt;&lt;td&gt;3TDEA&lt;/td&gt;&lt;td&gt;$L=2048$&lt;br&gt;$N=224$&lt;/td&gt; &lt;td&gt;$k=2048$&lt;/td&gt; &lt;td&gt;$f = 224\text{ - }255$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;&lt;td&gt;AES-128&lt;/td&gt;&lt;td&gt;$L=3072$&lt;br&gt;$N=256$&lt;/td&gt; &lt;td&gt;$k=3072$&lt;/td&gt; &lt;td&gt;$f = 256\text{ - }383$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;&lt;td&gt;AES-192&lt;/td&gt;&lt;td&gt;$L=7680$&lt;br&gt;$N=384$&lt;/td&gt; &lt;td&gt;$k=7680$&lt;/td&gt; &lt;td&gt;$f = 384\text{ - }511$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;&lt;td&gt;AES-256&lt;/td&gt;&lt;td&gt;$L=15360$&lt;br&gt;$N=512$&lt;/td&gt;&lt;td&gt;$k=15360$&lt;/td&gt;&lt;td&gt;$f=512+$&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Comparable strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Symmetric key algorithms は共通鍵暗号アルゴリズム全般を指す。
たとえば AES とか。
IFC (Integer Factorization Cryptosystems) は素因数分解問題ベースの公開鍵暗号アルゴリズムで RSA がこれに該当する。
FFC (Finite Field Cryptosystems) は離散対数問題ベースの公開鍵暗号アルゴリズムで Diffie-Hellman や ElGamal, DSA などがこれに該当する。
ECC (Elliptic Curve Cryptosystems) は離散対数問題でも特に楕円曲線上の離散対数問題ベースの公開鍵暗号アルゴリズムを指す。
たとえば ECDH や ECDSA など。&lt;/p&gt;

&lt;p&gt;IFC では $k$，FFC では $L$，ECC では $f$ が鍵長を示す。
たとえばセキュリティ強度が 128bit なら&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AES 128bit&lt;/li&gt;
&lt;li&gt;ElGamal, DSA 3072bit&lt;/li&gt;
&lt;li&gt;RSA 3072bit&lt;/li&gt;
&lt;li&gt;ECDH, ECDSA 256bit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の組み合わせで「ベストマッチ キター！」となる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/S0Zn1DRSH0w&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/figure&gt;

&lt;h2 id=&#34;セキュリティ強度と-hash-関数の関係&#34;&gt;セキュリティ強度と Hash 関数の関係&lt;/h2&gt;

&lt;p&gt;次はセキュリティ強度とHash 関数の関係を示す表。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#39;en&#39;&gt;
&lt;style&gt;
main table.nist3 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist3 td  {
  //vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist3&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security &lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Digital Signatures and &lt;br&gt;hash-only applications&lt;/th&gt;
&lt;th&gt;HMAC,&lt;br&gt;Key Derivation Functions,&lt;br&gt;Random Number Generation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; $\le 8$0&lt;/td&gt;
&lt;td&gt;SHA-1&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$112$&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA3-224&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$128$&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA3-256&lt;/td&gt;
&lt;td&gt;SHA-1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$192$&lt;/td&gt;
&lt;td&gt;SHA-384, SHA3-384&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$\ge 256$&lt;/td&gt;
&lt;td&gt;SHA-512, SHA3-512&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256,&lt;br&gt; SHA-384,&lt;br&gt; SHA-512, SHA3-512&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Hash functions that can be used to provide the targeted security strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;考え方は先程の暗号鍵長のときと同じ。
ただし Hash 関数の場合は使用目的ごとに要求されるアルゴリズムが異なるので注意が必要である。&lt;/p&gt;

&lt;h2 id=&#34;セキュリティ強度と有効期限&#34;&gt;セキュリティ強度と有効期限&lt;/h2&gt;

&lt;p&gt;こちらはセキュリティ強度の有効期限を表したものだ。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#39;en&#39;&gt;
&lt;style&gt;
main table.nist4 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist4 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist4&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;2&#39;&gt;Security Strength&lt;/th&gt;
&lt;th&gt;Through&lt;br&gt; 2030&lt;/th&gt;
&lt;th&gt;2031 and&lt;br&gt; Beyond&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td rowspan=&#39;2&#39;&gt;$\lt 112$&lt;/td&gt;&lt;td&gt;Applying&lt;/td&gt;  &lt;td colspan=&#39;2&#39;&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                              &lt;td&gt;Processing&lt;/td&gt;&lt;td colspan=&#39;2&#39;&gt;Legacy-use&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan=&#39;2&#39;&gt;$112$&lt;/td&gt;    &lt;td&gt;Applying&lt;/td&gt;  &lt;td rowspan=&#39;2&#39;&gt;Acceptable&lt;/td&gt;&lt;td&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                              &lt;td&gt;Processing&lt;/td&gt;                               &lt;td&gt;Legacy use&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;                &lt;td rowspan=&#39;3&#39;&gt;Applying/Processing&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;                                   &lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;                                   &lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Security-strength time frames (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;各用語はそれぞれ&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;用語&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Applying&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;適用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Processing&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;処理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Acceptable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;許容&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Legacy-use&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;許容（レガシー使用のみ）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Disallowed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;禁止&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;という意味だ。
例を挙げると，セキュリティ強度 112bit の暗号スイート（Cipher Suites）を適用する場合は2030年までは許容するけど2031年以降は禁止。
すでに暗号化されているデータを復号したい場合でも，2031年以降はレガシー・システムしか許容しない，ということになる。&lt;/p&gt;

&lt;p&gt;たとえば ssh 認証は「適用」なので多くの人が使ってる RSA 2048bit の鍵は2031年以降は使用禁止となるわけだ。
まぁ，そんな先まで同じシステムで同じ鍵を使い続けるかどうかは分からないが（なので今使ってる鍵を慌てて新調する必要はない。新規に作成するなら 128bit 強度の鍵をお勧めするが）。&lt;/p&gt;

&lt;p&gt;なおこれは各アルゴリズムに危殆化要因となる脆弱性等がない場合の話である。
したがって暗号製品を使うシステムの管理者やセキュリティ管理者は常に暗号関係のトピックに耳を澄ませておくべきであろう。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-で利用可能なアルゴリズム&#34;&gt;OpenPGP で利用可能なアルゴリズム&lt;/h2&gt;

&lt;p&gt;この項は「&lt;a href=&#34;http://text.baldanders.info/openpgp/algorithms-for-openpgp/&#34;&gt;OpenPGP で利用可能なアルゴリズム&lt;/a&gt;」に移動した。&lt;/p&gt;

&lt;h2 id=&#34;パスワードの強度&#34;&gt;パスワードの強度&lt;/h2&gt;

&lt;p&gt;これは &lt;a href=&#34;https://www.nist.gov/&#34; title=&#34;National Institute of Standards and Technology | NIST&#34;&gt;NIST&lt;/a&gt; ではなく IPA の資料だが，文字種と文字数の組み合わせによるパスワードの強度についても上げておこう。
出典は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ipg/documents/dev_setting_crypt.html&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000026760.pdf&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;4&#39;&gt;利用する文字種類数と内訳&lt;/th&gt;
&lt;th colspan=&#39;4&#39;&gt;パスワード長&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;種類数&lt;/th&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;文字&lt;/th&gt;
&lt;th&gt;シンボル&lt;/th&gt;
&lt;th&gt;4文字&lt;/th&gt;
&lt;th&gt;8文字&lt;/th&gt;
&lt;th&gt;12文字&lt;/th&gt;
&lt;th&gt;16文字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;10種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;      &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{13.3}$）&lt;/td&gt;&lt;td&gt;1円未満（$2^{26.6}$）&lt;/td&gt;  &lt;td&gt;約35円（$2^{39.9}$）&lt;/td&gt;     &lt;td&gt;約35万円（$2^{53.2}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;36種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;/td&gt;       &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{20.7}$）&lt;/td&gt;&lt;td&gt;約100円（$2^{41.4}$）&lt;/td&gt;  &lt;td&gt;約1.65億円（$2^{62.0}$）&lt;/td&gt; &lt;td&gt;約276兆円（$2^{82.7}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;62種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{23.8}$）&lt;/td&gt;&lt;td&gt;約7,500円（$2^{47.6}$）&lt;/td&gt;&lt;td&gt;約1,120億円（$2^{71.5}$）&lt;/td&gt;&lt;td&gt;約165京円（$2^{95.3}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;94種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;&lt;code style=&#39;font-size:smaller;&#39;&gt;! &#34; # $ %&lt;br&gt;&amp;amp; &#39; ( ) =&lt;br&gt;~ | - ^ `&lt;br&gt;¥ { @ [&lt;br&gt;+ * ] ; :&lt;br&gt;} &amp;lt; &amp;gt; ? _&lt;br&gt;, . /&lt;/code&gt;&lt;/td&gt;
                                                             &lt;td&gt;1円未満（$2^{26.2}$）&lt;/td&gt;&lt;td&gt;約21万円（$2^{52.4}$）&lt;/td&gt; &lt;td&gt;約16.5兆円（$2^{78.7}$）&lt;/td&gt; &lt;td&gt;約129,000京円（$2^{104.9}$）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;パスワード解読の想定コスト例（&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より）&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;測定基準は以下の通り。&lt;/p&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;利用できる文字種類すべてを完全にランダムに選択して作ったパスワードを一つ一つ調べる全数探索により1日で解読しようとした際にかかるおおまかな想定攻撃コストを示しています。ここでは、全数探索(暗号鍵の総数256)でDES10を1日で解読するためのコストを約250万円と仮定します。また、パスワードを1つ検査するのとDESの暗号鍵を1つ検査するコストは同じであるとし、パスワードを求めるのに必要な計算量(検査する個数)が半分になればコストも半分、2倍になればコストも2倍になるものとしています。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000740.shtml&#34;&gt;CRYPTREC Report 2013 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000810.shtml&#34;&gt;Prohibiting RC4 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cryptrec.go.jp/topics/cryptrec_20151218_sha1_cryptanalysis.html&#34;&gt;CRYPTREC | SHA-1の安全性について&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://www.cryptrec.go.jp/report/c13_tech_guideline_SHA-1_web.pdf&#34;&gt;CRYPTREC暗号技術ガイドライン(SHA-1) &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://blog.visvirial.com/articles/519&#34;&gt;scryptがGPUに破られる時 | びりあるの研究ノート&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/02/sha-1-collision/&#34;&gt;最初の SHA-1 衝突例&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/10/changes-in-password-best-practices/&#34;&gt;「パスワードのベストプラクティス」が変わる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22/&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;スティーブン・レビー 斉藤 隆央 &lt;/dd&gt;&lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/487593100X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/487593100X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハッカーズ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4105393022/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4105393022.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読―ロゼッタストーンから量子暗号まで&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4484111160/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4484111160.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グーグル ネット覇者の真実 追われる立場から追う立場へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/410215972X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/410215972X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読〈上〉 (新潮文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4102159738/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4102159738.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号解読 下巻 (新潮文庫 シ 37-3)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015/03/09&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「パスワードのベストプラクティス」が変わる - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/changes-in-password-best-practices/" />
		<id>tag:text.Baldanders.info,2017-10-16:/remark/2017/10/changes-in-password-best-practices/</id>
		<published>2017-10-16T19:21:02+09:00</published>
		<updated>2017-10-18T15:02:52+09:00</updated>
		<summary>Bruce Schneier 氏の「Changes in Password Best Practices」の内容が簡潔だったので「そのうち紹介しなくちゃ」と思っていたが，先を越されたっぽい感じなので，便乗記事として上げておく（笑）</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;Bruce Schneier 氏の “&lt;a href=&#34;https://www.schneier.com/blog/archives/2017/10/changes_in_pass.html&#34; title=&#34;Changes in Password Best Practices - Schneier on Security&#34;&gt;Changes in Password Best Practices&lt;/a&gt;” の内容が簡潔だったので「そのうち紹介しなくちゃ」と思っていたが，先を越されたっぽい感じなので，便乗記事として上げておく（笑）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/column/17/092800400/101200002/&#34;&gt;やばいパスワード - 複雑なパスワードを強制、でも破られやすいという現実：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まずは “&lt;a href=&#34;https://www.schneier.com/blog/archives/2017/10/changes_in_pass.html&#34; title=&#34;Changes in Password Best Practices - Schneier on Security&#34;&gt;Changes in Password Best Practices&lt;/a&gt;” で挙げられている3つの要件を以下に紹介する。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Stop it with the annoying password complexity rules. They make passwords harder to remember. They increase errors because artificially complex passwords are harder to type in. And they don&amp;rsquo;t help that much. It&amp;rsquo;s better to allow people to &lt;strong&gt;use pass phrases&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;top it with password expiration. That was &lt;a href=&#34;https://securingthehuman.sans.org/blog/2017/03/23/time-for-password-expiration-to-die&#34; title=&#34;Security Awareness Blog | Time for Password Expiration to Die&#34;&gt;an old idea for an old way&lt;/a&gt; we used computers. Today, &lt;strong&gt;don&amp;rsquo;t make people change their passwords unless there&amp;rsquo;s indication of compromise&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Let people &lt;strong&gt;use password managers&lt;/strong&gt;. This is how we deal with all the passwords we need.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;強調部分は私によるものである。&lt;/p&gt;

&lt;h2 id=&#34;生成規則が複雑なだけのパスワードではダメ&#34;&gt;生成規則が複雑なだけのパスワードではダメ&lt;/h2&gt;

&lt;p&gt;最初の要件は，いたずらに複雑なパスワード生成規則を強要するな，というものだ。
ここで勘違いしてもらっては困るのだが，これは「複雑なパスワードはダメ」と言っているのではない。&lt;/p&gt;

&lt;p&gt;パスワードの要件は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;できるだけ文字数が多いこと&lt;/li&gt;
&lt;li&gt;出来るだけ文字種が多いこと&lt;/li&gt;
&lt;li&gt;出来るだけランダムに文字を選ぶこと&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の3つである。
これを人力で作って覚えるのは難しい。&lt;/p&gt;

&lt;p&gt;パスワードの強度に関して IPA が2013年に発表した資料がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ipg/documents/dev_setting_crypt.html&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000026760.pdf&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このうちの「&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000026760.pdf&#34;&gt;解説編 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;」にパスワードの解読されやすさの一覧表がある。
以下に引用しよう。&lt;/p&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;4&#39;&gt;利用する文字種類数と内訳&lt;/th&gt;
&lt;th colspan=&#39;4&#39;&gt;パスワード長&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;種類数&lt;/th&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;文字&lt;/th&gt;
&lt;th&gt;シンボル&lt;/th&gt;
&lt;th&gt;4文字&lt;/th&gt;
&lt;th&gt;8文字&lt;/th&gt;
&lt;th&gt;12文字&lt;/th&gt;
&lt;th&gt;16文字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;10種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;      &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{13.3}$）&lt;/td&gt;&lt;td&gt;1円未満（$2^{26.6}$）&lt;/td&gt;  &lt;td&gt;約35円（$2^{39.9}$）&lt;/td&gt;     &lt;td&gt;約35万円（$2^{53.2}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;36種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;/td&gt;       &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{20.7}$）&lt;/td&gt;&lt;td&gt;約100円（$2^{41.4}$）&lt;/td&gt;  &lt;td&gt;約1.65億円（$2^{62.0}$）&lt;/td&gt; &lt;td&gt;約276兆円（$2^{82.7}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;62種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{23.8}$）&lt;/td&gt;&lt;td&gt;約7,500円（$2^{47.6}$）&lt;/td&gt;&lt;td&gt;約1,120億円（$2^{71.5}$）&lt;/td&gt;&lt;td&gt;約165京円（$2^{95.3}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;94種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;&lt;code style=&#39;font-size:smaller;&#39;&gt;! &#34; # $ %&lt;br&gt;&amp;amp; &#39; ( ) =&lt;br&gt;~ | - ^ `&lt;br&gt;¥ { @ [&lt;br&gt;+ * ] ; :&lt;br&gt;} &amp;lt; &amp;gt; ? _&lt;br&gt;, . /&lt;/code&gt;&lt;/td&gt;
                                                             &lt;td&gt;1円未満（$2^{26.2}$）&lt;/td&gt;&lt;td&gt;約21万円（$2^{52.4}$）&lt;/td&gt; &lt;td&gt;約16.5兆円（$2^{78.7}$）&lt;/td&gt; &lt;td&gt;約129,000京円（$2^{104.9}$）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;パスワード解読の想定コスト例（&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より）&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;見たらわかると思うが，文字種の多さより文字数の多いほうがインパクトがあることが分かる。
数英大小文字記号すべて使って8文字のパスワードを作っても&lt;strong&gt;1日で解読完了させるコスト&lt;/strong&gt;は21万円ほどだが，これは数字だけで16文字からなるパスワードよりもコストが低い。&lt;/p&gt;

&lt;p&gt;ただしこれは最もコストの高い「総当たり攻撃」の場合である（しかも4年も前の話だ）。&lt;/p&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;利用できる文字種類すべてを完全にランダムに選択して作ったパスワードを一つ一つ調べる全数探索により1日で解読しようとした際にかかるおおまかな想定攻撃コストを示しています。ここでは、全数探索(暗号鍵の総数256)でDES10を1日で解読するためのコストを約250万円と仮定します。また、パスワードを1つ検査するのとDESの暗号鍵を1つ検査するコストは同じであるとし、パスワードを求めるのに必要な計算量(検査する個数)が半分になればコストも半分、2倍になればコストも2倍になるものとしています。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;したがって辞書にあるような単語を組み合わせたパスフレーズの場合は，余程の単語数が必要になる。
たとえば「&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/column/17/092800400/101200002/&#34; title=&#34;やばいパスワード - 複雑なパスワードを強制、でも破られやすいという現実：ITpro&#34;&gt;やばいパスワード&lt;/a&gt;」で紹介されている方法では&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;テレビは1日1時間 → Terebi ha 1 niti 1 Jikan  → Terebiha1niti1Jikan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった感じで19文字のパスワードを生成していて，先程の表で照らし合わせると，総当たり攻撃なら，ほとんど天文学的なコストになるが，実際にはそれぞれの単語が攻撃側の辞書にある場合は，たったの6単語しかないわけで，やり方によっては解読コストをかなり引き下げられる可能性もある（犯罪者側の最近の事情をよく知らないので杞憂かもしれないが）。&lt;/p&gt;

&lt;p&gt;パスフレーズというのは，もともと「辞書攻撃」などない長閑な時代に PGP などのセキュリティ製品に採用されていたもので（今でも GnuPG ではパスフレーズが使用できる）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;I could tell you my pass phrase, but then I would have to kill you.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;みたいな比較的長い文（phrase）を使うことを想定している&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:pgp1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:pgp1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
したがってパスワード解読技術が向上している今の時代に単語を組み合わせただけのパスフレーズがどこまで効果的かは正直に言って分からない。
しかし “&lt;code&gt;Password!1&lt;/code&gt;” みたいな「法令遵守の観点から社内規則に則ってはいるけど機械で容易に推測可能なパスワード」よりは遥かにマシということなのである。&lt;/p&gt;

&lt;h2 id=&#34;パスワードの有効期限など無意味&#34;&gt;パスワードの有効期限など無意味&lt;/h2&gt;

&lt;p&gt;2番目の要件は既に散々言われていることなので今更であろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/07/02-stories/&#34;&gt;週末スペシャル： 「パスワードの定期変更はすべきでない」，他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;追記-パスワード定期変更の起源&#34;&gt;【追記】 パスワード定期変更の起源？&lt;/h3&gt;

&lt;p&gt;「&lt;a href=&#34;http://www.jnsa.org/aboutus/jnsaml/ml-57special.html&#34;&gt;JNSAメールマガジン　臨時号　2015.4.3.&lt;/a&gt;」によると&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;パスワードの定期的な変更は、パスワード文字列が4文字だった時代にパスワードの総当たり攻撃(ブルートフォース攻撃)の対策として実施したことが起源と言われている。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.jnsa.org/aboutus/jnsaml/ml-57special.html&#34;&gt;JNSAメールマガジン　臨時号　2015.4.3.&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なんだそうだ。
ホンマかいな（笑）&lt;/p&gt;

&lt;p&gt;むしろ，ネットワーク管理者やセキュリティ管理者が自分たちの仕事（アカウント管理）を面倒臭がって「放っておいても期限切れになる」パスワード運用を強制した，のほうに1票いれるよ。&lt;/p&gt;

&lt;h2 id=&#34;パスワード管理ツールを使え&#34;&gt;パスワード管理ツールを使え&lt;/h2&gt;

&lt;p&gt;3番目の要件もおなじみのやつである。&lt;/p&gt;

&lt;p&gt;最近はウイルス対策ソフトを提供しているセキュリティ企業がパスワード管理ツールも提供していたりするので，そちらを使う手もある。
私としては &lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; を是非オススメするが。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://keepass.info/&#34;&gt;KeePass Password Safe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; はオープンソースのパスワード管理ツールで Windows の .NET Framework 用だが Linux 用に &lt;a href=&#34;http://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; で動作するバージョンも存在する。
また Android や iOS で動作する互換アプリも存在する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&#34;&gt;Keepass2Android Password Safe - Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;パスワード管理ツールにはデータ暗号化にマスタパスワードを要求するものが多いが， &lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; では暗号鍵ファイルで暗号化できるのでマスタパスワードも不要だ（マスタパスワードと組み合わせることも可能）。
暗号鍵ファイルさえ適切に管理すればパスワードを格納した DB ファイルをクラウドに置いて（他人に見えないところに置いてね）機器間で共有することもできる。&lt;/p&gt;

&lt;h2 id=&#34;パスワードを覚えようとか考えないこと&#34;&gt;パスワードを覚えようとか考えないこと&lt;/h2&gt;

&lt;p&gt;いつも言っていることだが「&lt;strong&gt;パスワードを覚えるなんて脳みその無駄使い&lt;/strong&gt;」である。
最初に述べた3要件を満たすパスワードをツールで生成させてツールで管理すればよい。
どうしても不安ならば紙に書いて誰にも知られないように管理する手もある。
パスフレーズだって「覚えないといけない」という点では同じことなのだ。&lt;/p&gt;

&lt;p&gt;「セキュリティと利便性のトレードオフ」なんてのは昔の話である。
適切な運用をすればセキュリティも利便性も両方確保できる。
それをしないのは単なる怠慢だ。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://pages.nist.gov/800-63-3/&#34;&gt;NIST SP 800-63 Digital Identity Guidelines&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.sbbit.jp/article/cont1/33969&#34;&gt;崩れる「安全なパスワード」神話　否定される過去の基準、追従できない現場の課題 ｜ビジネス+IT&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35105725/&#34;&gt;あの「面倒なパスワード作成ルール」、作った人も後悔していた - ZDNet Japan&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4900900028/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/5132396FFQL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4900900028/baldandersinf-22/&#34;&gt;PGP―暗号メールと電子署名&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;シムソン ガーフィンケル Simson Garfinkel &lt;/dd&gt;&lt;dd&gt;オライリー・ジャパン 1996-04&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;3&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-3-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4756136494/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4756136494.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラミング作法&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320026926/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4320026926.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラミング言語C 第2版 ANSI規格準拠&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797350997/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797350997.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;新版暗号技術入門 秘密の国のアリス&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798132608/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798132608.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報処理教科書 高度試験午後II論述 春期・秋期 (EXAMPRESS)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798105538/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798105538.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;エンタープライズ アプリケーションアーキテクチャパターン (Object Oriented Selection)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-16&#34;&gt;2014/10/16&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:pgp1&#34;&gt;この物騒なパスフレーズは Simson Garfinkel 氏の『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4900900028/baldandersinf-22/&#34; title=&#34;Amazon | PGP―暗号メールと電子署名 | シムソン ガーフィンケル, Simson Garfinkel, ユニテック 通販&#34;&gt;PGP&lt;/a&gt;』に載っていたものである。パスフレーズは文字数や文字種の制限がないのが特徴である。もし入力に日本語（UTF-8）が使えるのなら，海外の犯罪者に対しては，かなり強力なパスフレーズができると思うんだけどねぇ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:pgp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>JASRAC が音楽教室からも「著作権（みかじめ）料」をまきあげる話 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/02/jasrac/" />
		<id>tag:text.Baldanders.info,2017-02-07:/remark/2017/02/jasrac/</id>
		<published>2017-02-07T20:02:46+09:00</published>
		<updated>2017-02-09T16:36:41+09:00</updated>
		<summary>いっそのこと音楽教室用に「自由な楽曲」を創作するのも面白いかもねぇ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;きっかけはこれ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1702/02/news065.html&#34;&gt;JASRAC、音楽教室から著作権料徴収へ　業界は反発「演奏権及ばない」 - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事によると&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;日本音楽著作権協会（JASRAC）は2月2日、「ヤマハ音楽教室」など楽器の演奏を教える教室から著作権料を徴収する方向で検討していると明らかにした。早ければ来年1月から徴収する考えだ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1702/02/news065.html&#34;&gt;JASRAC、音楽教室から著作権料徴収へ　業界は反発「演奏権及ばない」&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;だそうだ。
当然ながら「音楽教室」側は反発する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1702/03/news113.html&#34;&gt;ヤマハ、河合など「音楽教育を守る会」結成　JASRACの徴収方針に反対 - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんと，「音楽教育を守る会」なるものができたらしい。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;参加するのは、ヤマハ音楽振興会、河合楽器製作所、開進堂楽器、島村楽器、宮地商会、山野楽器と、音楽教育家などが所属している全日本ピアノ指導者協会。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1702/03/news113.html&#34;&gt;ヤマハ、河合など「音楽教育を守る会」結成　JASRACの徴収方針に反対&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ってな感じで一気にキナ臭い話になってきたわけだ。
訴訟へと展開していくのかな（訴訟になればいいのに）。&lt;/p&gt;

&lt;p&gt;まぁ JASRAC が叩かれるのは毎度のことで個人的にも JASRAC を擁護する気は全くないのだが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:j1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:j1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，しかしこれは JASRAC だけが悪いわけではない。
何故なら「音楽業界」は長い間，この利権構造によって潤ってきたのだから。
「音楽業界」も JASRAC も同じ既得権益者であり，両者は共依存の関係にある。
搾取の矛先が自分たちに向いたからといって，いまさら「そんなの嫌だ！」と駄々をこねたところで「筋が通らない（ヤクザ風味）」だろう。
本当にそれが認められないというのなら，今までの自分たちの行いも含めてきちんと「総括」していただきたいものである（笑）&lt;/p&gt;

&lt;p&gt;まっ，その辺の「大人の事情」についてはこの記事では横に置いておくとして，今回のケースについて以下の記事を参考にしながら&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34; title=&#34;著作権法&#34;&gt;著作権法&lt;/a&gt;から見た問題点を簡単に紹介してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bengo4.com/houmu/17/n_5653/&#34;&gt;JASRAC、音楽教室から「著作権料」徴収へ…なぜレッスンで使うだけでもダメ？ - 弁護士ドットコム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/kuriharakiyoshi/20170202-00067263/&#34;&gt;JASRACが音楽教室からも著作権使用料を徴収しようとする法的根拠は何か？(栗原潔) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/kuriharakiyoshi/20170203-00067314/&#34;&gt;JASRACを気にせずに音楽を演奏できるのはどのような場合か(栗原潔) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://danblog.cocolog-nifty.com/index/2017/02/jasrac-599f.html&#34;&gt;公衆とJASRAC: 壇弁護士の事務室&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/kuriharakiyoshi/20170206-00067411/&#34;&gt;JASRAC vs 音楽教室：法廷で争った場合の論点を考える(栗原潔) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;演奏権と公衆&#34;&gt;演奏権と公衆&lt;/h2&gt;

&lt;p&gt;まず，今回問題になっているのは著作財産権のうちの「演奏権」とよばれるものである。
「演奏権」は&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34; title=&#34;著作権法&#34;&gt;著作権法&lt;/a&gt;第二十二条で定義されている。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;&lt;strong&gt;第二十二条&lt;/strong&gt; 著作者は、その著作物を、公衆に直接見せ又は聞かせることを目的として（以下「公に」という。）上演し、又は演奏する権利を専有する。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34;&gt;著作権法&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ここでの注目点は「公衆に直接聞かせることを目的」としたものであること。
たとえば「公衆」ではない相手に対する演奏には「演奏権」は及ばない。
また何とはなしに「聞こえてくる」ものも除外される。&lt;/p&gt;

&lt;p&gt;では音楽教室で先生や生徒が演奏することは「演奏権」に抵触するのか。
これは&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34; title=&#34;著作権法&#34;&gt;著作権法&lt;/a&gt;において「公衆」がどう定義されているかがポイントである。&lt;/p&gt;

&lt;p&gt;一般に「公衆」とは「不特定かつ多数」であると認識されていると思う。
法律の世界でも概ねそのような解釈らしい。
しかし&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34; title=&#34;著作権法&#34;&gt;著作権法&lt;/a&gt;第二条の5では&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;この法律にいう「公衆」には、特定かつ多数の者を含むものとする。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34;&gt;著作権法&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;と明記されている。
したがって「特定かつ少数」以外は全部「公衆」と見なされるわけだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
つまり音楽教室での演奏が「演奏権」に抵触するかは，その音楽教室が「特定かつ少数」で構成されているか否かにかかっている。
ちなみに，過去の判例&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:u1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:u1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt; から，誰でも入会できるサービスの場合にはユーザは「不特定」と見なされるらしい。&lt;/p&gt;

&lt;h2 id=&#34;著作権の制限&#34;&gt;著作権の制限&lt;/h2&gt;

&lt;p&gt;もうひとつ。
&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34; title=&#34;著作権法&#34;&gt;著作権法&lt;/a&gt;の第三十条から第五十条にかけて「著作権の制限」が定義されている。
これは目的や手段に応じて著作権の行使が制限される条件を記したものだ。
この中に「営利を目的としない上演等」という条件がある。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;&lt;strong&gt;第三十八条&lt;/strong&gt; 公表された著作物は、営利を目的とせず、かつ、聴衆又は観衆から料金（いずれの名義をもつてするかを問わず、著作物の提供又は提示につき受ける対価をいう。以下この条において同じ。）を受けない場合には、公に上演し、演奏し、上映し、又は口述することができる。ただし、当該上演、演奏、上映又は口述について実演家又は口述を行う者に対し報酬が支払われる場合は、この限りでない。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://law.e-gov.go.jp/htmldata/S45/S45HO048.html&#34;&gt;著作権法&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;音楽教室での演奏が「演奏権」に抵触するとしても「営利を目的としない上演等」であれば「演奏権」は制限される。&lt;/p&gt;

&lt;p&gt;ちなみに「著作権の制限」では教育目的の場合でもいくつかの制限がかかるが，残念ながら「演奏権」に関しては当てはまらない。
「演奏権」に制限がかかるのはあくまでも非営利の場合に限られる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:s1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:s1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
ボランティアなら分からないが背後に大きな企業が控える音楽教室での演奏が非営利にあたるかどうかはかなり難しいんじゃないだろうか。&lt;/p&gt;

&lt;p&gt;ちなみに海外の例だが&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これに対して米国では「公正な利用」であると判断されれば明文の規定がなくても著作権が制限されるフェアユースの規定があるので、音楽教室での利用は音楽産業を振興し権利者に利益を与えているという主張が可能です。ただし、その米国でさえも、営利目的の音楽教室（専門学校や私立の音楽大学を含むかどうかASCAPに確認中です）は、著作権利用料を払っている状況であることには注意が必要です。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/kuriharakiyoshi/20170206-00067411/&#34;&gt;JASRAC vs 音楽教室：法廷で争った場合の論点を考える&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということで日本の状況だけが特殊と言うわけでもないようだ。&lt;/p&gt;

&lt;h2 id=&#34;包括契約について&#34;&gt;包括契約について&lt;/h2&gt;

&lt;p&gt;もし音楽教室での演奏が「演奏権」に抵触すると判断された場合，&lt;ruby&gt;&lt;rb&gt;著作権&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;みかじめ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;料の集金方法と著作（権）者への配分が問題になるだろう。&lt;/p&gt;

&lt;p&gt;これについて JASRAC 側はどうも&lt;ruby&gt;&lt;rb&gt;包括契約&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;どんぶりかんじょう&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;を想定しているらしいが，包括契約については公正取引委員会から独占禁止法違反を指摘され最終的に最高裁までもつれたばかりである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c2&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
この状況で包括契約を行うのは無理筋な気がするが，もしやるなら当然のことながら他の著作権管理団体もそれに倣う形になる。
JASRAC だけなら 2.5% かもしれないが，他の著作権管理団体も併せれば相当な負担になるはずである。&lt;/p&gt;

&lt;p&gt;もし包括契約をしないのであれば各教室ごとに1曲ずつ請求することになるだろうが，著作権管理団体側にも音楽教室側にも負担の大きい作業になる。&lt;/p&gt;

&lt;p&gt;別の観点でみると音楽教室で演奏する楽曲に各著作権管理団体が管理するものがどのくらい含まれるかという問題もある。
著作権期限の切れた古い民謡やクラシック音楽を教える教室であればもとより「演奏権」は関係ない。
&lt;a href=&#34;https://creativecommons.org/licenses/&#34; title=&#34;ライセンスについて - Creative Commons&#34;&gt;CC Licenses&lt;/a&gt; のようにあらかじめ公衆への演奏が許諾されている場合も対象外である。&lt;/p&gt;

&lt;p&gt;更に，講師が生徒に向かって模範演奏する場合はともかく，生徒が練習として演奏するのは「演奏権」に抵触するのかという問題もある。これも「演奏権」に抵触するとなると話は音楽教室だけでは済まなくなる気もするのだが&amp;hellip;&lt;/p&gt;

&lt;p&gt;いっそのこと音楽教室用に「自由な楽曲」を創作するのも面白いかもねぇ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:txt&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:txt&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://anond.hatelabo.jp/20170207184036&#34;&gt;（釣り）むちゃくちゃな理由でJASRACを勝たせた判例ベスト10（前半）&lt;/a&gt; : 著作権絡みの（迷？）判例集。タイトルは釣りらしい（笑）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://anond.hatelabo.jp/20170207184136&#34;&gt;（釣り）むちゃくちゃな理由でJASRACを勝たせた判例ベスト10（後半）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/cc-licenses/&#34;&gt;改訂3版： CC Licenses について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757102852/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41YkbcP5IyL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757102852/baldandersinf-22/&#34;&gt;著作権２．０ ウェブ時代の文化発展をめざして (NTT出版ライブラリー―レゾナント)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;名和 小太郎 &lt;/dd&gt;&lt;dd&gt;エヌティティ出版 2010-06-24&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4569812902/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4569812902.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;著作権法がソーシャルメディアを殺す (PHP新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4334037070/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4334037070.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;「ネットの自由」vs.著作権: TPPは、終わりの始まりなのか (光文社新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4087202941/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4087202941.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;著作権とは何か―文化と創造のゆくえ (集英社新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4166608347/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4166608347.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビジネスパーソンのための契約の教科書 (文春新書 834)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798119806/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798119806.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;REMIX ハイブリッド経済で栄える文化と商業のあり方&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;名著です。今すぐ買うべきです。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-02&#34;&gt;2014/08/02&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845911744/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51pDWTdSdlL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845911744/baldandersinf-22/&#34;&gt;フリーカルチャーをつくるためのガイドブック  クリエイティブ・コモンズによる創造の循環&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ドミニク・チェン &lt;/dd&gt;&lt;dd&gt;フィルムアート社 2012-05-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757103581/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757103581.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;電脳のレリギオ:ビッグデータ社会で心をつくる&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791767160/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791767160.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;インターネットを生命化する プロクロニズムの思想と実践&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4778314379/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4778314379.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暇と退屈の倫理学 増補新版 (homo Viator)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4761525649/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4761525649.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;シェアをデザインする: 変わるコミュニティ、ビジネス、クリエイションの現場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757103506/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757103506.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;みんなのビッグデータ: リアリティ・マイニングから見える世界&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;国内における Free Culture の事例が豊富。取っ掛かりとしてはちょうどよい本。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-05-07&#34;&gt;2015/05/07&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:j1&#34;&gt;知らない人はいないと思うが JASRAC は音楽ユーザからはすこぶる評判が悪い： &lt;a href=&#34;http://lite-ra.com/2017/02/post-2895.html&#34;&gt;JASRACが音楽教室からも著作権料を徴収で大炎上！ 不当裁判、裏金、天下り、独禁法違反…その強欲の歴史｜LITERA／リテラ&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:j1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:c1&#34;&gt;対象が不特定なら多数でも少数でも「公衆」と見なされるらしい。私にはイマイチそのロジックが分からないのだが。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:u1&#34;&gt;「&lt;span&gt;&lt;a href=&#34;http://www.courts.go.jp/app/files/hanrei_jp/324/011324_hanrei.pdf&#34;&gt;社交ダンス教室に対する判決 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;」より。この中で「ダンス教師の人数及び本件各施設の規模という人的，物的条件が許容する限り，何らの資格や関係を有しない顧客を受講生として迎え入れることができ，このような受講生に対する社交ダンス指導に不可欠な音楽著作物の再生は，組織的，継続的に行われるものであるから，社会通念上，不特定かつ多数の者に対するもの，すなわち，公衆に対するものと評価するのが相当である」と述べられている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:u1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:s1&#34;&gt;学校教育（私立学校を含む）の音楽の授業での演奏は非営利と見なされるらしい。文化祭での演奏もお金を取らないのであれば非営利。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:s1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:c2&#34;&gt;公取委からの改善命令に対し JASRAC が不服を申し立て一度は命令が取り消されたもののイーライセンス（現 NexTone）が取り消しを不服として提訴し最高裁までもつれた。結果として JASRAC は2016年9月に不服申し立てを取り下げ改善命令を受け入れた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:txt&#34;&gt;音楽ではないが自由に利用できる数学教材というのは存在する： &lt;a href=&#34;http://www.ftext.org/&#34;&gt;フリー教材開発コミュニティ FTEXT&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:txt&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「無料」という手段 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/01/not-free-beer/" />
		<id>tag:text.Baldanders.info,2017-01-20:/remark/2017/01/not-free-beer/</id>
		<published>2017-01-20T21:05:08+09:00</published>
		<updated>2017-01-30T12:39:37+09:00</updated>
		<summary>「無料」が重要なんじゃないのだよ。そのもう1フィート先にあるものがとても重要なのである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;いい感じに炎上しているらしいので便乗してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lineblog.me/nishino/archives/9256089.html&#34;&gt;キングコング 西野 公式ブログ - お金の奴隷解放宣言。 - Powered by LINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本を売る戦略は様々。
私は&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;10万部《売れる》ことよりも、1000万人が《知っている》ことの方が、はるかに価値がある&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://lineblog.me/nishino/archives/9256089.html&#34;&gt;お金の奴隷解放宣言。&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;という考え方には敬意を表すものである。
が，どうも文章がちぐはぐな印象を受ける。
何でだろう？ と考えて，そもそも「お金の奴隷解放宣言。」というタイトルに違和感を感じているのだと気が付いた。&lt;/p&gt;

&lt;h2 id=&#34;無料-にすることは-お金の奴隷解放-になるのか&#34;&gt;「無料」にすることは「お金の奴隷解放」になるのか&lt;/h2&gt;

&lt;p&gt;「お金」の最大の特徴は価値可換であること。&lt;/p&gt;

&lt;p&gt;「物々交換」というのは「お互いに持っている価値を交換すること」だ。
でもそれぞれが持っている価値を比較するのは難しい（画家が描いた絵画は自身で作ったお米何キロ分になるのだろう）。
しかも価値は取引の相手や時間などの要因で変動する。
そこで価値を「お金」の量に変換することが考えられた。
価値を「お金」に変換できるということは負債も「お金」に変換できる。
信用もリスクも「お金」に変換できる。&lt;/p&gt;

&lt;p&gt;私は，「お金」は人類が生み出した最大級の発明だと思っている。
だから「お金の奴隷解放宣言。」という言葉に違和感を覚えるのだ。&lt;/p&gt;

&lt;p&gt;似たようなことは以前にもあった。
いわゆる「地域通貨」が大流行した時である。
面白いことに，当時「地域通貨」を信望していた人たちの間には共通のバイブルのようなものがあった。
それが「&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B008YOHIAY/baldandersinf-22/&#34; title=&#34;エンデの遺言「根源からお金を問うこと」 | 河邑 厚徳, グループ現代 | ビジネス・経済 | Kindleストア | Amazon&#34;&gt;エンデの遺言&lt;/a&gt;」である。&lt;/p&gt;

&lt;p&gt;この辺の話については山形浩生さんの記事で鋭くツッコまれているのでいるので，そちらを参考にどうぞ。
ここでは割愛する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cruel.org/hotwired/hotwired23_01.html&#34;&gt; 山形浩生の『ケイザイ2.0』第23回 地域通貨って、そんなにいいの？──その成否は時と場合によるのかも&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「お金の奴隷解放宣言。」という言葉には当時の「地域通貨信望者」と同じ匂いを感じるのだが，どうだろう。
ちなみに地域通貨は今では「補完通貨」と呼ばれている。
そして地球最大規模の補完通貨と言えるのが Bitcoin である。&lt;/p&gt;

&lt;h2 id=&#34;有料で売りつつ無料でも公開する-というのはそれほど珍しいことではない&#34;&gt;「有料で売りつつ無料でも公開する」というのはそれほど珍しいことではない&lt;/h2&gt;

&lt;p&gt;作品を有料で売りつつ無料でも公開するというスキームは日本では珍しいかもしれないが，世界的には（事例は多くないかもしれないが）それほど珍しいことではない。
特に初期の &lt;a href=&#34;https://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;Creative Commons&lt;/a&gt; が行っていた「&lt;a href=&#34;https://wiki.creativecommons.org/wiki/Founders_Copyright&#34; title=&#34;Founders Copyright - Creative Commons&#34;&gt;アメリカ建国時代の著作権（The Founders&amp;rsquo; Copyright）&lt;/a&gt;」では，賛同した出版社等が一定期間を過ぎた書籍を &lt;a href=&#34;https://creativecommons.org/licenses/&#34; title=&#34;ライセンスについて - Creative Commons&#34;&gt;CC Licenses&lt;/a&gt; 下で公開する（もちろん作家と合意の上でだが）といった活動が見られた&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fc&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:fc&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
また作家自身が出版した書籍と同じ内容を &lt;a href=&#34;https://creativecommons.org/licenses/&#34; title=&#34;ライセンスについて - Creative Commons&#34;&gt;CC Licenses&lt;/a&gt; 下で公開したり，執筆段階から作品を公開してレビューを受けたり議論を交わしたりといった事例もある。&lt;/p&gt;

&lt;p&gt;そこまで行かなくてもブログ公開した作品が人気になって書籍化されるなんてことはもう日本でも珍しくないだろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:s&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:s&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
昨年ヒットした映画「&lt;a href=&#34;http://text.baldanders.info/remark/2016/02/the-martian/&#34; title=&#34;映画『火星の人』を観た&#34;&gt;火星の人&lt;/a&gt;」は，とあるプログラマがブログで連載していた SF 作品を自己出版したことでブレイクした。&lt;/p&gt;

&lt;h2 id=&#34;その先にあるもの&#34;&gt;その先にあるもの&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://lineblog.me/nishino/archives/9256089.html&#34; title=&#34;キングコング 西野 公式ブログ - お金の奴隷解放宣言。 - Powered by LINE&#34;&gt;この記事&lt;/a&gt;への批判を眺むるに，みんな「無料」という点にこだわりすぎなんじゃないだろうか。
ここでは「無料」は手段に過ぎない。
多くの人（特に子ども）に接触機会を提供するというのであれば，たとえば希望する学校や図書館に格安で配布するというのもいいかもしれない。
手段なんていくらでもあるし，ポイントはそこではないのだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/01/books-can-not-be-brought-to-the-grave/&#34; title=&#34;本は墓場まで持ち込めない&#34;&gt;ブログでも書いた&lt;/a&gt;が，&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;本を出版するというのは作家やその作品を如何にしてプロデュースし読者に届けるかということである。届ける努力をせずに漫然と「売れない」「評価されない」などと言うのは明確に怠慢であり，読者から見れば「知らんよ，そんなもん」としか言いようがない。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;故に今回のネットでの公開は絵本のプロモーションとしては実に王道と言える。
まぁ誰にでも使える手ではないのだが。&lt;/p&gt;

&lt;p&gt;「無料」が重要なんじゃないのだよ。
そのもう1フィート先にあるものがとても重要なのである。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spotlight-media.jp/article/370505056378315909&#34;&gt;大ヒット中の絵本『えんとつ町のプペル』を全ページ無料公開します（キンコン西野） - Spotlight (スポットライト)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spotlight-media.jp/article/371477452226041923&#34;&gt;西野「絵本の無料公開後、Amazonランキング1位に。その理由を冷静に考えた」 - Spotlight (スポットライト)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/nakajimayoshifumi/20170126-00066990/&#34;&gt;キングコング・西野さんの絵本無料公開を批判するクリエイターは、今後確実に食えなくなる。(中嶋よしふみ) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/17/googlesite_reliability_engineering.html&#34;&gt;Google、書籍「Site Reliability Engineering」の無料公開を開始。インフラや運用をソフトウェアで改善していく新しいアプローチ － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845911744/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51pDWTdSdlL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4845911744/baldandersinf-22/&#34;&gt;フリーカルチャーをつくるためのガイドブック  クリエイティブ・コモンズによる創造の循環&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ドミニク・チェン &lt;/dd&gt;&lt;dd&gt;フィルムアート社 2012-05-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757103581/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757103581.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;電脳のレリギオ:ビッグデータ社会で心をつくる&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791767160/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791767160.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;インターネットを生命化する プロクロニズムの思想と実践&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4778314379/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4778314379.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暇と退屈の倫理学 増補新版 (homo Viator)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4761525649/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4761525649.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;シェアをデザインする: 変わるコミュニティ、ビジネス、クリエイションの現場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757103506/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757103506.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;みんなのビッグデータ: リアリティ・マイニングから見える世界&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;国内における Free Culture の事例が豊富。取っ掛かりとしてはちょうどよい本。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-05-07&#34;&gt;2015/05/07&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:fc&#34;&gt;本来の「&lt;a href=&#34;https://wiki.creativecommons.org/wiki/Founders_Copyright&#34; title=&#34;Founders Copyright - Creative Commons&#34;&gt;アメリカ建国時代の著作権（The Founders&amp;rsquo; Copyright）&lt;/a&gt;」は作品の著作権を &lt;a href=&#34;https://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;Creative Commons&lt;/a&gt; 管理下に置き，公開から14年または28年後に公有化するというものだったが，実際にはそこまでやるところは少なかったようで，公開から一定期間経過した作品を &lt;a href=&#34;https://creativecommons.org/licenses/&#34; title=&#34;ライセンスについて - Creative Commons&#34;&gt;CC Licenses&lt;/a&gt; 下で自主的に公開する程度にとどまった（それでも充分画期的だったが）。また「&lt;a href=&#34;https://wiki.creativecommons.org/wiki/Founders_Copyright&#34; title=&#34;Founders Copyright - Creative Commons&#34;&gt;アメリカ建国時代の著作権（The Founders&amp;rsquo; Copyright）&lt;/a&gt;」は米国以外では実現が難しかった。これが後に &lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34; title=&#34;Creative Commons — CC0 1.0 Universal&#34;&gt;CC0&lt;/a&gt; ライセンスが登場するきっかけのひとつになったと言える。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fc&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:s&#34;&gt;「&lt;a href=&#34;http://syosetu.com/&#34;&gt;小説家になろう&lt;/a&gt;」みたいなサービスとかあるよね。私はそういうの疎いので最近まで知らなかったのだけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:s&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「自分で面倒見られる子」だけが CMS を導入しなさい - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/07/cms/" />
		<id>tag:text.Baldanders.info,2016-07-17:/remark/2016/07/cms/</id>
		<published>2016-07-17T08:26:43+09:00</published>
		<updated>2016-08-19T20:19:25+09:00</updated>
		<summary>そもそもセキュリティ以前に「自分で面倒をみる」ことのできない人は自前で CMS を導入するのはやめたほうがいい。ペットを飼うのと同じ（笑）</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;私の場合，それまで使っていた&lt;a href=&#34;https://www.movabletype.jp/opensource/&#34; title=&#34;Movable Type Open Source | MovableType.jp - CMSプラットフォーム Movable Type -&#34;&gt;オープンソース版 Movable Type (MTOS)&lt;/a&gt; を捨ててローカルでサイト管理するようにした&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
直接のきっかけは開発元が &lt;a href=&#34;https://www.movabletype.jp/opensource/&#34; title=&#34;Movable Type Open Source | MovableType.jp - CMSプラットフォーム Movable Type -&#34;&gt;MTOS&lt;/a&gt; のサポートを打ち切ったことだが，自前でサーバ・サイドの CMS (Content Management System) を導入・運用することが高コストになり，それを個人レベルで運用することに意義を見いだせなくなってきたというのが大きい。&lt;/p&gt;

&lt;p&gt;というわけで以下の話題。
いつもは「セキュリティクラスタ」の話題はまるっと無視しているのだが，今回は気になる点があったので。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1607/15/news015.html&#34;&gt;セキュリティクラスタ まとめのまとめ 2016年6月版：初心者でも気軽にWordPressサイト作成！ して大丈夫なの？ (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;) - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そもそもセキュリティ以前に「自分で面倒をみる」ことのできない人は自前でサーバ・サイド CMS を導入するのはやめたほうがいい。
ペットを飼うのと同じ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;（笑） 「初心者」かどうかはさしたる問題ではない。
誰だって最初は初心者だし，分からなければ訊くなり調べるなりすればいいからだ。&lt;/p&gt;

&lt;p&gt;プログラムは家電製品とは違う。
導入すればそれで終わり，とはいかない。
多くの人に使われる製品こそ常に不具合や脆弱性の改修が行われているし&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ss&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ss&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;，もちろん機能改善も行われる。
「プログラムは常にベータ版」という名言は一般の方も覚えておいたほうがいいだろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:iot&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:iot&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;面倒を見る気はないが気軽にブログをやりたい，って程度なら SaaS (Software as a Service) 型のサービスがいくらでもある。
さすがに ameblo みたいなのはデザインが古すぎてアレだが， &lt;a href=&#34;https://wordpress.com/&#34;&gt;WordPress&lt;/a&gt; も &lt;a href=&#34;https://movabletype.net/&#34;&gt;Movable Type&lt;/a&gt; も SaaS を提供している。
最近なら &lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt; や 日本の &lt;a href=&#34;https://note.mu/&#34;&gt;note&lt;/a&gt; みたいに気軽にオン書きできるものもある。
&lt;a href=&#34;https://www.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt; でブログサイトを運用している人は日本語圏にも結構いる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:t&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:t&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
最近では &lt;a href=&#34;https://esa.io/&#34; title=&#34;esa.io - Expertise Sharing Archives for motivated teams.&#34;&gt;esa.io&lt;/a&gt; のようにチームで使えるものが流行りらしい。
あるいは私のようにサーバ・サイドの CMS を捨てて &lt;a href=&#34;https://pages.github.com/&#34; title=&#34;GitHub Pages - Websites for you and your projects, hosted directly from your GitHub repository. Just edit, push, and your changes are live.&#34;&gt;GitHub Pages&lt;/a&gt; ＋ &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で静的なページとして運用すればセキュリティ上の煩わしさから解放される。
やり方なんていくらでもあるのだ。&lt;/p&gt;

&lt;p&gt;今でこそ「セキュリティは投資」とみなされ PDCA サイクルで回されるようになってきたが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:s&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:s&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;，ちょっと前まではセキュリティ管理は典型的なコストセンターだったのだ。
JTB の情報漏えい騒ぎに関する今回の事後の振る舞いには批判が多いが，結局のところ「セキュリティ」を経営レベルでどう捉えるかということに尽きる。
セキュリティ管理をコストとみなすうちは&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000850.shtml&#34;&gt;昨年の日本年機構&lt;/a&gt;や今回の JTB のような失敗は必ずまた繰り返される。&lt;/p&gt;

&lt;p&gt;しかし企業や組織はそれでいいとしても個人レベルでそれを求めるのは酷な話である。
セキュリティと利便性はトレードオフにならない。
利便性を犠牲にしてセキュリティを強化してもユーザはただそこを迂回するだけだ（日本年金機構の事例はまさにこれと言える）。&lt;/p&gt;

&lt;p&gt;WordPress のようなサーバ・サイド CMS がセキュリティ的に高コストに見えるのは，製品デザインとセキュリティ管理が齟齬を起こしていて，そこを運用で強引にカバーしようという駄目プロジェクトの典型みたいになっているからである。
あるいは「&lt;a href=&#34;http://0xcc.net/misc/bad-knowhow.html&#34; title=&#34;バッドノウハウと「奥が深い症候群」&#34;&gt;奥が深い症候群&lt;/a&gt;」の末期症状と言うべきか。
SaaS ならそうした面倒をサービス・プロバイダに押しつけることが出来るという意味で次善の策になる。&lt;/p&gt;

&lt;p&gt;もう一度繰り返そう。&lt;/p&gt;

&lt;p&gt;「自分で面倒見られる子」だけが CMS を導入しなさい。&lt;/p&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00LBPGFJS/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51r6kpV26GL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00LBPGFJS/baldandersinf-22/&#34;&gt;フルスクラッチから1日でCMSを作る シェルスクリプト高速開発手法入門 (アスキー書籍)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;上田 隆一 後藤 大地 ＵＳＰ研究所 &lt;/dd&gt;&lt;dd&gt;KADOKAWA / アスキー・メディアワークス 2014-07-02&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00MPDUQQI/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00MPDUQQI.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;サーバ／インフラエンジニア養成読本 ログ収集〜可視化編 [現場主導のデータ分析環境を構築！] (Software Design plus)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00ME9TTMA/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00ME9TTMA.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;フロントエンドエンジニア養成読本［HTML ，CSS，JavaScriptの基本から現場で役立つ技術まで満載！］ (Software Design Plus)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00LHFOTF4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00LHFOTF4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;絵で見てわかるシステムパフォーマンスの仕組み&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00J4KDYV4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00J4KDYV4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;はじめてUNIXで仕事をする人が読む本 (アスキー書籍)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00MLUGZIS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00MLUGZIS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;すごいErlangゆかいに学ぼう！&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;既存の常識に凝り固まったソフトウェア・エンジニアに「痛恨の一撃」を加える快書もしくは怪書。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-09-21&#34;&gt;2014/09/21&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:0&#34;&gt;経緯については本家サイトの「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000870.shtml&#34;&gt;ブログ移転準備中または Take the Hugo!&lt;/a&gt;」を参照のこと。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:1&#34;&gt;でも，好きでペットを飼ってる人はそれをコストだと思わないだろうけど。コンピュータ・オタクやセキュリティ・オタクには変態が多いので，そういう「面倒」をわざわざ引き受けて楽しんでいるフシがある。仕事で使うツールを自分のフィールドでも使い倒すってのはあるけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ss&#34;&gt;不具合や脆弱性の報告が全くない製品ってのは誰も使ってないか製品の提供者が怠慢かのどちらかである。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ss&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:iot&#34;&gt;とはいえ IoT の時代になれば家電製品も「自分で面倒をみる」ことが必要になってくるかもしれない。本当に面倒な時代になったものである。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:iot&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:t&#34;&gt;&lt;a href=&#34;https://www.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt; は&lt;a href=&#34;http://whitehouse.tumblr.com/&#34; title=&#34;The Official White House Tumblr&#34;&gt;ホワイトハウスの公式サイトがある&lt;/a&gt;ことで有名である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:t&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:s&#34;&gt;そしてセキュリティへの投資につけ入る「輩」も増えてきた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:s&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： まじめに規制に従っている人ほど馬鹿を見る社会 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/04/10-stories/" />
		<id>tag:text.Baldanders.info,2016-04-10:/remark/2016/04/10-stories/</id>
		<published>2016-04-10T18:44:29+09:00</published>
		<updated>2018-01-23T16:07:00+09:00</updated>
		<summary>まじめに規制に従っている人ほど馬鹿を見る社会 / Linux サブシステムは Windows の終わりの始まり / 鍵管理システム CONIKS / Go 言語を使うようになって変わったこと / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;3月は去りました。
春になっちゃったよ。&lt;/p&gt;

&lt;p&gt;うっかり左手首を痛めてしまった（疲労がたまるとたまになる）のでいろいろ控えてた。
溜まりまくった小ネタを消化しないと。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#code&#34;&gt;まじめに規制に従っている人ほど馬鹿を見る社会&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bash&#34;&gt;Linux サブシステムは Windows の終わりの始まり&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pki&#34;&gt;鍵管理システム CONIKS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#go&#34;&gt;Go 言語を使うようになって変わったこと&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;code&#34;&gt;まじめに規制に従っている人ほど馬鹿を見る社会&lt;/h2&gt;

&lt;p&gt;もう何度も書いているが「警察にできることは犯罪者にもできる」。
問題は犯罪者にできることが警察にもできるかどうか駄菓子菓子&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/society/35080404/&#34;&gt;米政府によるスマホデータ取り出しの協力要請、ACLUが実態調査 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/01/news114.html&#34;&gt;FBIのiPhoneロック解除方法、Appleに知らされない可能性も (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;) - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/08/news060.html&#34;&gt;FBI長官、「購入したロック解除ツールはiPhone 5sでは機能しなかった」 - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/04/09/20160408justice-department-keeps-pushing-apple-to-unlock-iphone-in-new-york-drug-case/&#34;&gt;司法省がまたAppleにiPhoneアンロック要求、今度はAppleが“相手を間違えた”国を訴訟か | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FBI が端末を突破するのに外部企業を使ったということ，そして企業がそれに応じたことは重要だ。
もちろん実は NSA の息のかかった企業だった，としても驚かないけど。&lt;/p&gt;

&lt;p&gt;企業は利があると思えば警察にも犯罪者にだって加担する。
今回の件のポイントは「犯罪者にできることが警察にできるとは限らない」と証明してしまったことだ。
セキュリティ企業は新しい時代の「死の商人」になるかもしれない。&lt;/p&gt;

&lt;p&gt;警察が優位に立てるのは犯罪者よりもパワー（暴力・権力を含む）を有している場合のみである。
コンピュータ・ネットワーク技術あるいは暗号技術において政府・警察は優位に立てない。
米国司法省は法規制によって優位に立てると思ってるようだが，こんなもの最初から「法の外」にいる犯罪者やテロリストに対しては効力がない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/09/news022.html&#34;&gt;暗号化解除をめぐる米法案、司法当局へのバックドア提供を義務付け - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/society/35080962/&#34;&gt;バックドア提供を拒む企業に制裁金を&amp;ndash;米国で法案が公開 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これは「飲酒運転を減らすために飲酒運転規制を厳罰化する」というのとは話が違う。
犯罪者にはインパクトがないし，まじめに規制に従っている人ほど「馬鹿を見る」ことになる。&lt;/p&gt;

&lt;p&gt;有害なルールに従う必要はないし，それに従うことはむしろリスクを高めることになる。&lt;/p&gt;

&lt;h2 id=&#34;bash&#34;&gt;Linux サブシステムは Windows の終わりの始まり&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/03/31/20160330be-very-afraid-hell-has-frozen-over-bash-is-coming-to-windows-10/&#34;&gt;Build 2016で驚きの発表―Microsoftはこの夏Windows 10でBashシェルをサポート | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35080406/&#34;&gt;「Windows 10」で動作するUbuntuのBashシェル&amp;ndash;その実現方法 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://satonaoki.wordpress.com/2016/03/31/bash-ubuntu-windows/&#34;&gt;開発者がWindows 10でBashシェルとユーザー モードのUbuntu Linuxバイナリを実行可能に | S/N Ratio (by SATO Naoki)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/16/mariadbmariadb_columnstoreolap.html&#34;&gt;MariaDB、カラム型データベースエンジン「MariaDB ColumnStore」発表。OLAPへ参入 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;del&gt;もともと Windows は POSIX サブシステムを持っている。
今回はそれに加えて&lt;/del&gt; Ubuntu ベースの Linux サブシステムを組み込むということらしいが子亀の上に親亀を乗っけるようなものだ。&lt;/p&gt;

&lt;p&gt;Windows の基本的な設計思想は20～25年くらい前の古いものだ。
しかも DOS/Windows はもともとシングルユーザ用に設計されたもので UNIX 等のマルチユーザ向けの OS とは全く異なる。&lt;/p&gt;

&lt;p&gt;Linux のベースとなっている UNIX もそうとう古いが，マルチユーザを前提とした考え方は今でも通用するし，なにより Linux はもはや UNIX に縛られない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20160331/linux25years&#34;&gt;Linux公開25周年を受けたリーナス・トーバルズのインタビュー - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35080722/&#34;&gt;Linux創始者トーバルズ氏、IoTを語る&amp;ndash;「セキュリティは二の次」と警鐘 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows は永遠に Windows に縛られ続ける。
Microsoft が満を持して出した Windows 10 も結局は Windows に縛られている。&lt;/p&gt;

&lt;p&gt;Windows が時代遅れなのは明らかである。
Microsoft 自らこういう無茶をすること自体が「Windows の終わりの始まり」だ。
個人的に2020年までに自宅 PC のメインを Linux 機に換装する予定だが，ちょっと計画を前倒ししたほうがいいかもしれない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35080364/&#34;&gt;目的別のおすすめLinuxディストリビューション&amp;ndash;あなたにぴったりなのはどれ？ - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;追記&#34;&gt;追記&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mattn.kaoriya.net/software/why-i-use-cmd-on-windows.htm&#34;&gt;Big Sky :: Windows ユーザは cmd.exe で生きるべき。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;激しく同意。
もっとも私は &lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ConEmu &amp;amp; NYAGOS&lt;/a&gt; だけど（笑）&lt;/p&gt;

&lt;h2 id=&#34;sig&#34;&gt;WhatsApp がついに Signal ベースの E2E 暗号化を実装する&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://whispersystems.org/blog/whatsapp-complete/&#34;&gt;Open Whisper Systems &amp;gt;&amp;gt; Blog &amp;gt;&amp;gt; WhatsApp&amp;rsquo;s Signal Protocol integration is now complete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techcrunch.com/2016/04/05/whatsapp-completes-end-to-end-encryption-rollout/&#34;&gt;WhatsApp completes end-to-end encryption rollout | TechCrunch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/06/news069.html&#34;&gt;Facebook傘下のWhatsApp、完全暗号化を完了　「政府もわれわれも解除できない」 - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/04/06/20160405whatsapp-completes-end-to-end-encryption-rollout/&#34;&gt;WhatsApp、全てのプラットフォームのエンドツーエンド暗号化を完了 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;もともと WhatsApp が Signal ベースの暗号化システムを実装することは予告されていた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://whispersystems.org/&#34;&gt;Open Whisper Systems&lt;/a&gt; (&lt;a href=&#34;https://github.com/WhisperSystems&#34;&gt;GitHub&lt;/a&gt;)

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://support.whispersystems.org/hc/en-us/articles/212477768-Is-it-secure-Can-I-trust-it-&#34;&gt;Is it private? Can I trust it? – Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Signal 自体は SMS アプリを置き換えることのできる優れたアプリなのだが SNS ベースのメッセンジャー・アプリとしては機能的に劣る。
WhatsApp がその辺を埋めることになるかどうか。
でも日本のユーザにはウケないかなぁ。&lt;/p&gt;

&lt;p&gt;メールは ProtonMail， SMS ベースのメッセンジャーには Signal，それ以外のメッセンジャーには WhatsApp と，だいぶ揃ってきたねぇ。&lt;/p&gt;

&lt;h2 id=&#34;pki&#34;&gt;鍵管理システム CONIKS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://coniks.cs.princeton.edu/&#34;&gt;CONIKS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2016/04/coniks.html&#34;&gt;CONIKS - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;CONIKS is a key management system for end users capable of integration in end-to-end secure communication services. The main idea is that users should not have to worry about managing encryption keys when they want to communicate securely, but they also should not have to trust their secure communication service providers to act in their interest.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://coniks.cs.princeton.edu/&#34;&gt;CONIKS&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;とりあえずメーリング・リストに入ってみた。&lt;/p&gt;

&lt;h2 id=&#34;go&#34;&gt;Go 言語を使うようになって変わったこと&lt;/h2&gt;

&lt;p&gt;内容自体にさほど文句があるわけではないが（細かい部分は置いておいて），「interface を中心に設計する」という記述が気になって。&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;947e9a6ef68c4310baf21afdec4fcfab&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;私はそんなにたくさんの言語を知っているわけではないが， &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;を勉強するようになって設計の考え方が少し変わった。
まさに「制約は構造を生む」（by 結城浩「数学ガール」シリーズより）が如く，言語仕様によって思考も影響を受けるのである。
以下にいくつか例を挙げよう。&lt;/p&gt;

&lt;h3 id=&#34;value-object-から考える&#34;&gt;Value Object から考える&lt;/h3&gt;

&lt;p&gt;さて，いつもの図。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;http://text.baldanders.info/images/DDD.svg&#34;&gt;&lt;img src=&#34;http://text.baldanders.info/images/DDD.svg&#34; srcset=&#34;http://text.baldanders.info/images/DDD.svg 640w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Domain-Driven Design&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://text.baldanders.info/images/DDD.svg&#34;&gt;Domain-Driven Design&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Domain Layer の中身は Domain Service, Entity, そして Value Object に分類される。
ビジネスロジックは図の右側，つまり Entity や Value Object に記述されるのが良い設計だと言われている（記述の重複を避けられるため）。
ただし Value Object はしばしば省略されることが多い。&lt;/p&gt;

&lt;p&gt;Value Object の特徴は以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内部状態を持たず不変である&lt;/li&gt;
&lt;li&gt;属性（property）の比較のみでオブジェクト同士が等価かどうか決定できる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そして実装上の要件としては「軽量」であることが求められる。
何故なら Value Object は Entity の属性として使われることが多く Value Object がボトルネックになるとシステム全般へのインパクトが大きいからだ。&lt;/p&gt;

&lt;p&gt;実は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;はこの Value Object の実装にとても向いている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/golang/object-oriented-programming/&#34;&gt;Go 言語における「オブジェクト」 — プログラミング言語 Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/golang/function-and-pointer/&#34;&gt;関数とポインタ — プログラミング言語 Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;の特徴である「強い型付け」も Value Object を念頭に置いて考えるなら合理的な仕様であることが分かるだろう。&lt;/p&gt;

&lt;h3 id=&#34;多態性を-振る舞い-から考える&#34;&gt;多態性を「振る舞い」から考える&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;の多態性（polymorphism）は振る舞いによってのみ規定される（構造的部分型）。
つまり「猫」のように振る舞うのであれば実体がロボットだろうがコスプレイヤーだろうが全部「猫」として括れるのである。
そして「猫」のようにあるためにロボットやコスプレイヤーの identity を書き換える必要はない。
これはとても重要な事である。&lt;/p&gt;

&lt;p&gt;たとえば「猫」を実装する際に，それに多態性を持たせなければならないかどうかは設計の割と早い段階で決めなければならないことが多い。
そうして先に &lt;code&gt;interface&lt;/code&gt; などを決めなければ具体的なクラスを記述することができない。
しかし &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;ではアプローチが逆になる。
先にロボットやコスプレイヤーといった具体的な型（&lt;a href=&#34;https://golang.org/ref/spec#Properties_of_types_and_values&#34; title=&#34;Properties of types and values&#34;&gt;type&lt;/a&gt;）をバンバン作り，個々の振る舞いを見て，あとから「あっ，これ「猫」で括れるぢゃん♥」となるわけだ。
言い方を変えるなら refactoring 向きであるとも言える。&lt;/p&gt;

&lt;h3 id=&#34;要件定義からコードを書く&#34;&gt;要件定義からコードを書く&lt;/h3&gt;

&lt;p&gt;これは &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;に限らないが， refactoring しやすい言語は prototyping に向いている言語であるとも言える。
Prototyping に向いているということはプロジェクトのかなり早い段階（たとえば要件定義）からコードを書けるということでもある。
結局エンジニアにとって信用できるのは百万語を連ねた設計書より「動くコード」なのである。&lt;/p&gt;

&lt;h2 id=&#34;other&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/transmission-releases-long-awaited-bittorrent-client-for-windows-160327/&#34;&gt;Transmission Releases Long-Awaited BitTorrent Client For Windows - TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/npm-and-left-pad/&#34;&gt;NPMとleft-pad : 私たちはプログラミングのやり方を忘れてしまったのか？ | プログラミング | POSTD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/03/29/20160328windows-users-finally-have-a-good-bittorrent-client/&#34;&gt;WindowsにBitTorrentクライアントの決定版Transmissionがやってくる | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.iij.ad.jp/news/pressrelease/2016/0329-2.html&#34;&gt;IIJ、Webサイトにおけるユーザ認証のセキュリティを強化する 「IIJ SmartKeyマネージメントサービス」を提供開始 | 2016年 | IIJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/technicalwatch/201600330.html&#34;&gt;IPAテクニカルウォッチ「公衆無線LAN利用に係る脅威と対策」：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/research/apt-guide.html&#34;&gt;高度サイバー攻撃(APT)への備えと対応ガイド～企業や組織に薦める一連のプロセスについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://p2ptk.org/copyright/231&#34;&gt;著作権削除要請の28％が「疑わしい」との研究結果 – P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://current.ndl.go.jp/node/31200&#34;&gt;国立極地研究所情報図書室、ウェブサイトをCC BYで公開 | カレントアウェアネス・ポータル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fanfun.jaxa.jp/jaxatv/files/20160408_hitomi.pdf&#34;&gt;Ｘ線天文衛星「ひとみ」（ASTRO-H）の状況について - 20160408_hitomi.pdf&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sorae.jp/030201/2016_04_02_jspoc.html&#34;&gt;X線天文衛星「ひとみ」、回転は破片を誤認？米軍発表 | Sorae.jp : 宇宙（そら）へのポータルサイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@tsukamoto/-f42bf7b5e25e&#34;&gt;定時帰宅のススメ — Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/04/09/20160408spacex-just-landed-a-rocket-on-a-drone-ship-for-the-first-time/&#34;&gt;SpaceXのFalcon 9ロケット、洋上のドローン艀への軟着陸についに成功 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sonickun.hatenablog.com/entry/2016/04/03/183220&#34;&gt;GoogleがTLSでの採用を提唱している共通鍵暗号方式「ChaCha」についてまとめた - sonickun.log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41aCueik45L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Alan A.A. Donovan Brian W. Kernighan 柴田 芳樹 &lt;/dd&gt;&lt;dd&gt;丸善出版 2016-06-15&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117526/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117526.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Go言語によるWebアプリケーション開発&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117607/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117607.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;マイクロサービスアーキテクチャ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117402/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117402.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハイパフォーマンスPython&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/0134190440/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/0134190440.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;The Go Programming Language (Addison-Wesley Professional Computing Series)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774166340/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774166340.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Vim script テクニックバイブル ~Vim使いの魔法の杖&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。買おうかどうか悩み中。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-03-12&#34;&gt;2016-03-12&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： 安全と安心をいっしょくたにする輩を信用してはいけない - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/03/27-stories/" />
		<id>tag:text.Baldanders.info,2016-03-27:/remark/2016/03/27-stories/</id>
		<published>2016-03-27T02:38:30+09:00</published>
		<updated>2016-04-28T21:52:18+09:00</updated>
		<summary>安全と安心をいっしょくたにする輩を信用してはいけない / 漫画家小山田いくさん死去 / RFC 7763 The text/markdown Media Type / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#sec&#34;&gt;安全と安心をいっしょくたにする輩を信用してはいけない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#iku&#34;&gt;漫画家小山田いくさん死去&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#md&#34;&gt;RFC 7763 The text/markdown Media Type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;sec&#34;&gt;安全と安心をいっしょくたにする輩を信用してはいけない&lt;/h2&gt;

&lt;p&gt;一昨年前に Facebook で呟いていた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;安心は思い込みさえすればお手軽に手に入るが、安全を手に入れるには少なくないコストがかかるし、誰かから貰えたりもしない。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;どんな文脈で言ったか憶えてないが，まぁいつものことだろう。&lt;/p&gt;

&lt;p&gt;安全でなくても安心（感）は手に入る。
そして人が素朴に求めるのは安全ではなく安心のほうだ。
これが悪いほうに作用した典型例が Apple 製品である。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/bmpSJwZ5xqA&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=bmpSJwZ5xqA&#34;&gt;セキュリティ MacCM - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;当時， Apple はユーザに対して安心感を「売る」キャンペーンを大々的に展開した。
また App Store からセキュリティ関連アプリを排除したりしたこともあった（今はどうなってるか知らないが）。
Apple の失敗はユーザに安心感を与えるために安全を omit してしまったことだ。
そのせいで Apple は大勢のユーザを危険に晒すことになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://news.mynavi.jp/news/2016/03/24/162/&#34;&gt;FBIとAppleの対立が急転、サン電子子会社がiPhoneロック解除で協力か | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gigazine.net/news/20160324-fbi-unlock-iphone/&#34;&gt;iPhoneの暗号化をAppleの協力なしで解除する7つの方法 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/03/29/20160328justice-department-drops-lawsuit-against-apple-over-iphone-unlocking-case/&#34;&gt;司法省、対Apple訴訟を取り下げ―テロ容疑者のiPhoneはFBIがアンロックに成功 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今まで何度も言っているが「警察にできることは犯罪者にもできる」。
自力で iPhone を突破できなかった FBI は外部の企業を使うようだ。
つまり警察は犯罪者以下だと証明してしまったわけだ。&lt;/p&gt;

&lt;p&gt;IPA も気をつけなよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/sec/reports/20160324.html&#34;&gt;「つながる世界の開発指針」を公開：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;追加ブックマーク&#34;&gt;追加ブックマーク&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/society/35080404/&#34;&gt;米政府によるスマホデータ取り出しの協力要請、ACLUが実態調査 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/01/news114.html&#34;&gt;FBIのiPhoneロック解除方法、Appleに知らされない可能性も (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;) - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1604/08/news060.html&#34;&gt;FBI長官、「購入したロック解除ツールはiPhone 5sでは機能しなかった」 - ITmedia ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/04/27/20160426fbi-to-keep-apple-guessing-on-san-bernardino-iphone-hack/&#34;&gt;FBIは銃撃犯のiPhoneをハッキングしたツールの詳細をAppleに開示しない意向 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;iku&#34;&gt;漫画家小山田いくさん死去&lt;/h2&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;小山田いく先生。お亡くなりになりました。&lt;br&gt;お疲れ様でした。&lt;/p&gt;&amp;mdash; 田上 喜久 (@HgKjDWcYgmlilNs) &lt;a href=&#34;https://twitter.com/HgKjDWcYgmlilNs/status/713252253725904896&#34;&gt;2016年3月25日&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nlab.itmedia.co.jp/nl/articles/1603/25/news127.html&#34;&gt;漫画家・小山田いくさん亡くなる　代表作に出身地・長野県小諸市を舞台にした「すくらっぷ・ブック」など - ねとらぼ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「すくらっぷ・ブック」の主要キャラは私より1歳下（連載当時）で思春期真っ盛りの私はシンクロしまくりだった。
社会人になって読み返したらこっ恥ずかしい台詞のオンパレードで赤面するのだが，今でも1980年代までに出た単行本は実家に全部ある。&lt;/p&gt;

&lt;p&gt;手塚治虫さんとか石森章太郎さんとかの作品って私からはだいぶ上の世代なんだよね。
私等くらいの世代だと小山田いくさんとかご兄弟のたがみよしひささんとか竹本泉さんとかあたりが思春期リアルなんじゃないだろうか&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;その時代の作家さんが亡くなるのはやっぱくるねぇ。
合掌。&lt;/p&gt;

&lt;h2 id=&#34;md&#34;&gt;RFC 7763 The text/markdown Media Type&lt;/h2&gt;

&lt;p&gt;Markdown が RFC になったらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7763&#34;&gt;RFC 7763 - The text/markdown Media Type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;文法についても定義されているけど markdown って既に方言バリバリだからなぁ。&lt;/p&gt;

&lt;h2 id=&#34;other&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/nakahashi/items/3d88655f055ca6a2617c&#34;&gt;AtomとPlantUMLで爆速UMLモデリング - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/k_nakayama/items/77ca73753ebd049a66de&#34;&gt;Atom+PlantUMLで見た目もいい感じのシーケンス図を作成する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/chuck0523/items/ee23293f2645d40cb317&#34;&gt;【意訳】たった今、npmのパッケージを解放しました。 - Qiita&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&#34;&gt;The npm Blog — kik, left-pad, and npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/03/25/20160324email-is-dying-among-mobiles-youngest-users/&#34;&gt;モバイル最若年層では、Eメールが死につつある | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/16/docker_for_macwindows.html&#34;&gt;MacOSとWindowsのネイティブ仮想化を用いたDocker純正ツール「Docker for Mac/Windows」登場、VirtualBoxは不要に － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483544213X/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/518uMdKYp3L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483544213X/baldandersinf-22/&#34;&gt;すくらっぷ・ブック (1) (fukkan.com―小山田いく選集)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;小山田 いく &lt;/dd&gt;&lt;dd&gt;ブッキング 2006-06-01&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/425310200X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/425310200X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;週刊少年チャンピオン40th 創刊40周年記念特別編集&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4835442970/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4835442970.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;魑魅 (小山田いく選集 2期)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;思春期の頃の愛読書でした。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-07-01&#34;&gt;2015/07/01&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;まぁ他にも新谷かおるさんとか聖悠紀さんとか人によって色々あるだろうけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
