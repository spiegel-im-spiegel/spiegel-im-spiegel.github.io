<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Management - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/management/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/management/index.xml" />
	<id>tag:text.Baldanders.info,2018-12-16:/tags</id>
	<updated>2018-12-16T11:24:32+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.52</generator>

	
	<entry>
		<title>Firefox の Cipher Suite - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/12/cipher-suite-in-firefox/" />
		<id>tag:text.Baldanders.info,2018-12-16:/remark/2018/12/cipher-suite-in-firefox/</id>
		<published>2018-12-16T11:24:32+09:00</published>
		<updated>2018-12-16T17:55:21+09:00</updated>
		<summary>たまには Firefox のことも思い出してあげてください</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/note_s/n/n517ff243e083&#34;&gt;J-STAGEがFirefoxでのアクセスを遮断、日本の電子ジャーナルが世界から不可視となった日｜Guest｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事を読んで以下のように思わなかっただろうか。&lt;/p&gt;

&lt;p&gt;「Firefox 側が &lt;code&gt;TLS_RSA_WITH_AES_256_CBC_SHA256&lt;/code&gt; あたりを用意すればええんちゃうん？」&lt;/p&gt;

&lt;p&gt;私は思った。
&lt;a href=&#34;https://www.jstage.jst.go.jp/&#34;&gt;J-STAGE&lt;/a&gt; というサイトや運営している &lt;a href=&#34;https://www.jst.go.jp/&#34; title=&#34;国立研究開発法人 科学技術振興機構&#34;&gt;JST&lt;/a&gt; という組織をよく知らないので，なんでそこまで悪意たっぷりに書かれるのかよく分からないが，もうちょっと書きようがあるだろうに。&lt;/p&gt;

&lt;h2 id=&#34;tls-cipher-suite&#34;&gt;TLS Cipher Suite&lt;/h2&gt;

&lt;p&gt;まず TLS (Transport Layer Security) Version 1.2 の仕様を記した &lt;a href=&#34;https://tools.ietf.org/html/rfc5246&#34; title=&#34;RFC 5246 - The Transport Layer Security (TLS) Protocol Version 1.2&#34;&gt;RFC 5246&lt;/a&gt; によると “&lt;a href=&#34;https://tools.ietf.org/html/rfc5246#section-9&#34;&gt;Mandatory Cipher Suites&lt;/a&gt;” というのがあって，この中で &lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt; を MUST に定めている。
したがって，上述のリンク先の記事でこれがないことについて「TLS仕様違反」と断じている点は間違いない。&lt;/p&gt;

&lt;p&gt;この場合，サーバ側の対応としては， NSS なら &lt;code&gt;TLS_RSA_WITH_AES_128_CBC_SHA&lt;/code&gt;， OpenSSL なら &lt;code&gt;AES128-SHA&lt;/code&gt; を有効にすればいいわけだ。&lt;/p&gt;

&lt;p&gt;一方， Firefox はどうなっているかというと &lt;code&gt;about:config&lt;/code&gt; を開いて “&lt;code&gt;ssl3&lt;/code&gt;” で検索すると出てくる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./cipher-suite-in-firefox.png&#34;&gt;&lt;img src=&#34;./cipher-suite-in-firefox.png&#34; srcset=&#34;./cipher-suite-in-firefox.png 643w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Cipher Suite in Firefox&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./cipher-suite-in-firefox.png&#34;&gt;Cipher Suite in Firefox&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ちなみにこれは Firefox Developer Edition 65 の場合である。
一応，抜き書きすると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.dhe_rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.dhe_rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_128_gcm_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_256_gcm_sha384&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_ecdsa_chacha20_poly1305_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_128_gcm_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_256_gcm_sha384&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.ecdhe_rsa_chacha20_poly1305_sha256&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_aes_128_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_aes_256_sha&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;security.ssl3.rsa_des_ede3_sha&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;となっている。
これを見ると &lt;code&gt;TLS_RSA_...&lt;/code&gt; から始まる古い cipher suite は殆ど対応していないことが分かる（mandatory cipher suites を除けば2つのみ）。
Firefox 側の思惑は不明だが，古い cipher suite は PFS (Perfect Forward Secrecy) に対応してない（できない）ため意図的に外してる可能性もある。&lt;/p&gt;

&lt;h2 id=&#34;cipher-suites-for-modern-browser&#34;&gt;Cipher Suites for Modern Browser&lt;/h2&gt;

&lt;p&gt;（おそらくもうサポートされていない）古いブラウザを切り捨てていいのであれば，以下の cipher suite をサポートしておけば問題ないらしい。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HEX&lt;/th&gt;
&lt;th&gt;IANA&lt;/th&gt;
&lt;th&gt;OpenSSL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0xC0,0x2C&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES256-GCM-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x30&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES256-GCM-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xCC,0xA9&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-CHACHA20-POLY1305&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xCC,0xA8&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-CHACHA20-POLY1305&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x2B&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES128-GCM-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x2F&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES128-GCM-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x24&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES256-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x28&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES256-SHA384&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x23&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-ECDSA-AES128-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0xC0,0x27&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ECDHE-RSA-AES128-SHA256&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;これらの cipher suite は Firefox 27 以降, Chrome 30 以降, IE 11 以降, Edge, Opera 17 以降, Safari 9 以降, Android 5.0 以降, Java 8 以降であれば対応している。&lt;/p&gt;

&lt;h2 id=&#34;たまには-firefox-のことも思い出してあげてください&#34;&gt;たまには Firefox のことも思い出してあげてください&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/12/software-diversity/&#34; title=&#34;オープンソースはコードの多様性を担保しない&#34;&gt;以前も書いた&lt;/a&gt;が，携帯端末も含めれば Chrome/Chromium と Safari/WebKit でほぼ寡占状態と言ってよい。
そういった状況の中で Firefox も対応しろと言われてもかったるいかもしれないし，実際に私が関わったことのある案件でも Chrome や Edge での動作確認はするのに Firefox はスルーするところも結構あったりした。
特定企業への依存度が減るんだから，むしろ Firefox は推奨されていいと思うんだけどねぇ。&lt;/p&gt;

&lt;p&gt;少なくとも HTTPS 接続で Firefox を&lt;ruby&gt;&lt;rb&gt;村八分&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ハブ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;にする理由はないと思うので，是非ともよろしくお願いします。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.mozilla.org/en-US/questions/1119007&#34;&gt;How can I disable arbitrary SSL/TLS cipher suites in Firefox? | Firefox Support Forum | Mozilla Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.mozilla.org/Security/Server_Side_TLS&#34;&gt;Security/Server Side TLS - MozillaWiki&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7905&#34;&gt;RFC 7905 - ChaCha20-Poly1305 Cipher Suites for Transport Layer Security (TLS)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34;&gt;SSL Server Test (Powered by Qualys SSL Labs)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://cc.dcsec.uni-hannover.de/&#34;&gt;SSL Cipher Suites Supported By Your Browser&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/cipherscan&#34;&gt;GitHub - mozilla/cipherscan: A very simple way to find out which SSL ciphersuites are supported by a target.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/square/certigo&#34;&gt;GitHub - square/certigo: A utility to examine and validate certificates in a variety of formats&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/10/key-parameters/&#34;&gt;暗号鍵関連の各種変数について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; height=&#34;160&#34; alt=&#34;暗号技術入門 第3版　秘密の国のアリス&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018.12.15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; &gt;Amakuri&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>脆弱性情報の収集・管理ツール jvnman v0.3.0 をリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/05/jvnman-0_3_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-05-30:/release/2018/05/jvnman-0_3_0-is-released/</id>
		<published>2018-05-30T21:09:41+09:00</published>
		<updated>2018-05-30T21:09:41+09:00</updated>
		<summary>「テーブル構成を変更した。テストは全然進んでない orz</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;脆弱性情報の収集・管理ツール &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;jvnman&lt;/a&gt; の v0.3.0 をリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman/releases/tag/v0.3.0&#34;&gt;Release v0.3.0 · spiegel-im-spiegel/jvnman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;テーブル構成を変更した。
related テーブルの url をプライマリ・キーに追加しただけだけど。
URL 情報以外が全く一緒って，なんだよそれ。&lt;/p&gt;

&lt;p&gt;他は出力の細かい調整。
テストは全然進んでない &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>脆弱性情報の収集・管理ツール jvnman v0.2.0 をリリース，他 - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/05/jvnman-0_2_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-05-15:/release/2018/05/jvnman-0_2_0-is-released/</id>
		<published>2018-05-15T21:53:54+09:00</published>
		<updated>2018-05-15T21:53:54+09:00</updated>
		<summary>脆弱性情報の収集・管理ツール jvnman の v0.2.0 をリリースした。 また jvnman に関連するパッケージもリリースした。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;脆弱性情報の収集・管理ツール &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;jvnman&lt;/a&gt; の v0.2.0 をリリースした。
また &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;jvnman&lt;/a&gt; に関連するパッケージもリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman/releases/tag/v0.2.0&#34;&gt;Release v0.2.0 · spiegel-im-spiegel/jvnman · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn/releases/tag/v0.4.0&#34;&gt;Release v0.4.0 · spiegel-im-spiegel/go-myjvn · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-cvss/releases/tag/v0.1.0&#34;&gt;Release v0.1.0 · spiegel-im-spiegel/go-cvss · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-cvss&#34; title=&#34;spiegel-im-spiegel/go-cvss: Common Vulnerability Scoring System (CVSS) Version 3&#34;&gt;spiegel-im-spiegel/go-cvss&lt;/a&gt; は &lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn&#34; title=&#34;spiegel-im-spiegel/go-myjvn: Handling MyJVN RESTful API by Golang&#34;&gt;spiegel-im-spiegel/go-myjvn&lt;/a&gt; 内のサブパッケージを独立させたもので今回が初リリース。
これでようやく CVSS をまともにハンドリングできるようになった。&lt;/p&gt;

&lt;p&gt;たとえば &lt;a href=&#34;https://jvndb.jvn.jp/ja/contents/2018/JVNDB-2018-003148.html&#34; title=&#34;JVNDB-2018-003148 - JVN iPedia - 脆弱性対策情報データベース&#34;&gt;JVNDB-2018-003148&lt;/a&gt; に関する情報がほしければ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ jvnman info JVNDB-2018-003148&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば標準出力に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;gh&#34;&gt;#&lt;/span&gt; Mercurial におけるアクセス制御に関する脆弱性
&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;脆弱性対策情報ID: [&lt;span class=&#34;nt&#34;&gt;JVNDB-2018-003148&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://jvndb.jvn.jp/ja/contents/2018/JVNDB-2018-003148.html&lt;/span&gt;)&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;Mercurial には、アクセス制御に関する脆弱性が存在します。&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;##&lt;/span&gt; 想定される影響
&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;情報を取得される、および情報を改ざんされる可能性があります。&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;###&lt;/span&gt; 影響を受ける製品

&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Debian / Debian GNU/Linux &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Mercurial / Mercurial 4.5 およびそれ以前&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;###&lt;/span&gt; 深刻度
&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;緊急: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N（9.1）&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 基本評価基準 | 評価値 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;|--------|-------|&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 攻撃元区分 | ネットワーク |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 攻撃条件の複雑さ | 低 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 必要な特権レベル | 不要 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| ユーザ関与レベル | 不要 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| スコープ | 変更なし |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 機密性への影響 | 高 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 完全性への影響 | 高 |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;| 可用性への影響 | なし |&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;##&lt;/span&gt; 対策
&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;ベンダより正式な対策が公開されています。ベンダ情報を参照して適切な対策を実施してください。&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;##&lt;/span&gt; 関連情報

&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Common Vulnerabilities and Exposures (CVE) [&lt;span class=&#34;nt&#34;&gt;CVE-2018-1000132&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000132&lt;/span&gt;) &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Debian [[SECURITY] [DLA 1331-1] mercurial security update](https://lists.debian.org/debian-lts-announce/2018/03/msg00034.html) &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; JVNDB [&lt;span class=&#34;nt&#34;&gt;CWE-284&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://cwe.mitre.org/data/definitions/284.html&lt;/span&gt;) 不適切なアクセス制御&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; National Vulnerability Database (NVD) [&lt;span class=&#34;nt&#34;&gt;CVE-2018-1000132&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://nvd.nist.gov/vuln/detail/CVE-2018-1000132&lt;/span&gt;) &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; Release Note [&lt;span class=&#34;nt&#34;&gt;Mercurial 4.5.1 / 4.5.2 (2018-03-06)&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://www.mercurial-scm.org/wiki/WhatsNew#Mercurial_4.5.1_.2F_4.5.2_.282018-03-06.29&lt;/span&gt;) &lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;##&lt;/span&gt; 更新情報

&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 発見日 2018年3月6日&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 公開日 2018年5月15日&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 最終更新日 2018年5月15日&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;(Powerd by [&lt;span class=&#34;nt&#34;&gt;JVN&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;https://jvn.jp/&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と出力される。
CVSS のベクタもちゃんと表に展開されるぞ。&lt;/p&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;p&gt;とりあえず，これで欲しい情報は取れるようになったので，あとはのんびりテストをするか。
つか， &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; のほうも作業を進めないといけないのだが...&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>脆弱性情報の収集・管理ツール jvnman の最初のリリース - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/05/jvnman-0_1_0-is-released/" />
		<id>tag:text.Baldanders.info,2018-05-13:/release/2018/05/jvnman-0_1_0-is-released/</id>
		<published>2018-05-13T19:43:21+09:00</published>
		<updated>2018-05-13T21:30:45+09:00</updated>
		<summary>先月あたりから余暇にコツコツ作ってた脆弱性情報の収集・管理ツール [jvnman] の最初のリリースを行った。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;先月あたりから余暇にコツコツ作ってた脆弱性情報の収集・管理ツール &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;jvnman&lt;/a&gt; の最初のリリースを行った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34;&gt;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman/releases/tag/v0.1.0&#34;&gt;Release v0.1.0 · spiegel-im-spiegel/jvnman&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストールおよび使い方については&lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;リポジトリ&lt;/a&gt;の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman/blob/master/README.md&#34; title=&#34;jvnman/README.md at master · spiegel-im-spiegel/jvnman&#34;&gt;README.md&lt;/a&gt; を参照のこと。&lt;/p&gt;

&lt;p&gt;このツールを作った理由は大きく2つ。&lt;/p&gt;

&lt;p&gt;ひとつは私が Windows 7 のサポートの切れる2020年を目処に Windows プラットフォームを捨てる予定であり Windows 環境への依存をできるだけ排除する形でセキュリティ管理を行えないか模索していること。
もうひとつは昨今のセキュリティや脆弱性情報に関するメディアの報道にいい加減ウンザリしていることだ。&lt;/p&gt;

&lt;p&gt;Windows ユーザはセキィリティ管理に関しては比較的恵まれている。
ベンダ企業である Microsoft によるセキュリティ管理のダメな部分は20世紀のうちに粗方やり尽くしていて，現在は脆弱性の修正サイクルも安定しているため安心して利用できる。
まさに se-cure な状態なのだ。
これが破られたのが &lt;a href=&#34;http://text.baldanders.info/remark/2015/windows-10-upgrade-problem/&#34; title=&#34;また Windows 10 にヤラレタ（KB3112343 の恐怖）&#34;&gt;Windows 10 の強制アップロード&lt;/a&gt;のときだったが，それ以外は（年に2,3個ほど？ ヤバいのがある程度で）本当に安定している。
まぁ，あの強制アップロード事件があったから Windows を本気で捨てる気になったんだけどね。&lt;/p&gt;

&lt;p&gt;障害管理やセキュリティ・インシデント・レスポンスが稚拙な Apple 製品や Android 端末機は論外としても，たとえば Linux 機でどの程度セキュリティを気にしなければならないか，といった感覚的な部分でよく分からなかったりする。
私がセキュリティ管理者をやってたのはかれこれ20年近く前なので当時の経験は殆ど参考にならない（当時のセキュリティ周りは実に牧歌的だった，今に比べれば）。
かといって今更この歳でセキュリティ管理者みたいなヘヴィな職を目指すつもりもない。&lt;/p&gt;

&lt;p&gt;私が学生の頃にある教官から教わった言葉に「情報浴」というのがある。
ある分野で最先端を行きたいなら常にその分野の情報を浴びていなさい，という意味である。
裏を返せば専門でない（興味があるわけでもない）分野の情報を過剰に浴びるのは毒でしかないということである。
セキュリティ情報というのは（専門家以外から見れば）まさに毒なのだ。&lt;/p&gt;

&lt;p&gt;煩わしいことに自身の寿命とお金をかけることほど馬鹿げてることはない。
どうせリソースを使うなら煩わしさを解消する方向に使いたい。
セキュリティ情報が過剰に溢れているのなら，もはやそれを人間が扱うのは悪手である。
機械に任せられることは機械にやらせればいいのだ。&lt;/p&gt;

&lt;p&gt;そのための調査を兼ねて &lt;a href=&#34;https://github.com/spiegel-im-spiegel/jvnman&#34; title=&#34;spiegel-im-spiegel/jvnman: JVN Vulnerability Data Management&#34;&gt;jvnman&lt;/a&gt; を運用してみようと考えた次第である。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>MyJVN API に関する覚え書き - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/myjvn-api/" />
		<id>tag:text.Baldanders.info,2018-03-12:/remark/2018/03/myjvn-api/</id>
		<published>2018-03-12T22:47:09+09:00</published>
		<updated>2018-05-13T21:31:14+09:00</updated>
		<summary>MyJVN API は JVN が提供している「脆弱性対策情報共有フレームワーク」のひとつである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; は &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; が提供している「&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/&#34; title=&#34;脆弱性対策情報共有フレームワーク - MyJVN&#34;&gt;脆弱性対策情報共有フレームワーク&lt;/a&gt;」のひとつである。
&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; ではメインサービスである RESTful API のほか， Twitter での情報配信も行っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/JVNiPedia&#34;&gt;@JVNiPedia&lt;/a&gt; : 脆弱性情報&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/MyJVN&#34;&gt;@MyJVN&lt;/a&gt; : バージョン更新情報&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は RESTful API に絞り，覚え書きとして残しておく（随時加筆予定）。
なお「&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/&#34; title=&#34;脆弱性対策情報共有フレームワーク - MyJVN&#34;&gt;脆弱性対策情報共有フレームワーク&lt;/a&gt;」では &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; と併せて以下のツールも提供している（どれも機能がイマイチなのが...）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MyJVN バージョンチェッカ（Windows 専用）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheck.html&#34;&gt;Java JRE 版&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:jre1&#34;&gt;&lt;a href=&#34;#fn:jre1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheckcmd.html&#34;&gt;CLI 版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheckdotnet.html&#34;&gt;.NET 版&lt;/a&gt; : GUI 版と CUI 版がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/mjcheck.html&#34;&gt;MyJVN 脆弱性対策情報収集ツール&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/mjcheck3.html&#34;&gt;MyJVN 脆弱性対策情報フィルタリング収集ツール&lt;/a&gt; （要 Adobe AIR）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;myjvn-api-のライセンス&#34;&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; のライセンス&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; 自体の利用については以下に記載がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/termsofuse.html&#34;&gt;MyJVN - API: 利用上の留意事項&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを見れば分かるが， &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; の利用には制限がありオープンでもフリーでもない点は注意が必要である。&lt;/p&gt;

&lt;p&gt;また &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; が提供しているデータにはデータベースの著作権が発生する筈だが，データの利用許諾範囲が明示されていないため，このままでは（著作権法上は）利用できない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c1&#34;&gt;&lt;a href=&#34;#fn:c1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
データの取り扱いについて一定のリスクがある点も注意すべきだろう。&lt;/p&gt;

&lt;h2 id=&#34;myjvn-api-のバージョンアップ&#34;&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; のバージョンアップ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; は 2018-02-21 にバージョンアップしたが，これに伴い旧バージョンの API のほうは 2018-04-02 から使えなくなる。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;2018年2月20日以前の旧サービス（MyJVN API, MyJVNバージョンチェッカ等）は、2018年4月2日（月）以降は継続したサービス利用ができなくなります。旧サービスを継続して利用する場合には以下の案内を参考にして、MyJVN APIを使用する利用者プログラムを改修する、あるいは新ツールの再ダウンロードによる利用、などの対処を実施してください。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/svc-change.html&#34;&gt;SSL暗号化通信への対応に伴う注意事項（MyJVN API、MyJVNバージョンチェッカ等の仕様変更について）&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;RESTful API についてはスキーマが HTTP から HTTPS へ変更となり，場合によってはバージョン名（HND/ITM）を付加する必要がある。&lt;/p&gt;

&lt;p&gt;深刻度（severity）の評価に注意すること。
旧バージョンでは CVSSv2 ベースだったが，新バージョンでは CVSSv3 ベースになっている。
両者は以下のように異なっている。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;深刻度&lt;/th&gt;
&lt;th&gt;CVSSv2 Base スコア&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;危険&lt;/td&gt;
&lt;td&gt;7.0 - 10.0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;警告&lt;/td&gt;
&lt;td&gt;4.0 - 6.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;注意&lt;/td&gt;
&lt;td&gt;0.0 - 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;深刻度&lt;/th&gt;
&lt;th&gt;CVSSv3 Base スコア&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;緊急（Critical）&lt;/td&gt;
&lt;td&gt;9.0 - 10.0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;重要（High）&lt;/td&gt;
&lt;td&gt;7.0 - 8.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;警告（Medium）&lt;/td&gt;
&lt;td&gt;4.0 - 6.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;注意（Low）&lt;/td&gt;
&lt;td&gt;0.1 - 3.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;なし（None）&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以降から個々の API について概説する。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性対策概要情報一覧の取得&#34;&gt;脆弱性対策概要情報一覧の取得&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnOverviewList_api_hnd.html&#34;&gt;getVulnOverviewList (ver. HND)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;curl-as-dsl&#34;&gt;&lt;a href=&#34;https://shibukawa.github.io/curl_as_dsl/&#34; title=&#34;cURL as DSL — cURL as DSL 1.0 documentation&#34;&gt;cURL as DSL&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;とりあえず必須オプションのみ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:curl1&#34;&gt;&lt;a href=&#34;#fn:curl1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
過去1週間の情報を取得する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -G -d &amp;quot;method=getVulnOverviewList&amp;quot; -d &amp;quot;feed=hnd&amp;quot; https://jvndb.jvn.jp/myjvn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;必須オプション&#34;&gt;必須オプション&lt;/h3&gt;

&lt;p&gt;必須オプションは以下の通り&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;getVulnOverviewList&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hnd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;取得のハンドリング&#34;&gt;取得のハンドリング&lt;/h3&gt;

&lt;p&gt;脆弱性対策概要情報一覧は一度に50件までしか取得できない。
取得可能件数が50件以上ある場合はオプションで「n件目から取得」と指定すればよい。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;startItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;取得可能なエントリの取得開始位置&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;maxCountItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一度に取得できるエントリ数&lt;/td&gt;
&lt;td&gt;50 (max 50)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;取得可能件数は，返却された XML データの &lt;code&gt;&amp;lt;status:Status&amp;gt;&lt;/code&gt; 要素に記述されている。&lt;/p&gt;

&lt;h3 id=&#34;ベンダおよび製品情報によるフィルタリング&#34;&gt;ベンダおよび製品情報によるフィルタリング&lt;/h3&gt;

&lt;p&gt;ベンダおよび製品情報によるフィルタリングは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cpeName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CPE製品名。ワイルドカード使用可。複数指定可（&lt;code&gt;+&lt;/code&gt; で区切る）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vendorId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ベンダID。複数指定可（&lt;code&gt;+&lt;/code&gt; で区切る）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;productId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;製品ID。複数指定可（&lt;code&gt;+&lt;/code&gt; で区切る）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;cpeName&lt;/code&gt;, &lt;code&gt;vendorId&lt;/code&gt;, &lt;code&gt;productId&lt;/code&gt; はいずれかひとつのみ指定可能。&lt;/p&gt;

&lt;p&gt;もっと大雑把にキーワードを指定してフィルタリングすることもできる。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;keyword&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;脆弱性概要情報の部分一致。ワイルドカード使用不可。大文字小文字の区別なし。 UTF-8&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;cvss-評価値によるフィルタリング&#34;&gt;CVSS 評価値によるフィルタリング&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;severity&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CVSS 深刻度（&lt;code&gt;n/l/m/h/c&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;CVSS 基本評価基準。ベクタ値（&lt;code&gt;CVSS:3.0/...&lt;/code&gt;）で指定&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CVSS は Version 3 のみ対応のようだ。&lt;/p&gt;

&lt;h3 id=&#34;期間指定によるフィルタリング&#34;&gt;期間指定によるフィルタリング&lt;/h3&gt;

&lt;p&gt;期間指定によるフィルタリングは発見日・発行日・更新日に対応している。&lt;/p&gt;

&lt;p&gt;まずは発見日によるフィルタリング。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rangeDatePublic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日の範囲（n/w/m）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicStartY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日開始年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicStartM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日開始月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicStartD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日開始日（整数1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicEndY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日終了年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicEndM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日終了月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublicEndD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発見日終了日（整数 1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;rangeDatePublic&lt;/code&gt; で &lt;code&gt;w&lt;/code&gt; を指定すると当日を含む直近一週間を， &lt;code&gt;m&lt;/code&gt; を指定すると直近１ヶ月の情報を取得する。
期間を指定する場合は &lt;code&gt;rangeDatePublic&lt;/code&gt; に &lt;code&gt;n&lt;/code&gt; を指定して開始および終了条件をセットする。
開始および終了条件は年・年月・年月日で指定できる。&lt;/p&gt;

&lt;p&gt;更新日によるフィルタリングは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rangeDatePublished&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日の範囲（n/w/m）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedStartY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日開始年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedStartM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日開始月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedStartD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日開始日（整数 1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedEndY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日終了年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedEndM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日終了月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;datePublishedEndD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;更新日終了日（整数 1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;指定の仕方は発見日と同じ要領でできる。&lt;/p&gt;

&lt;p&gt;発行日によるフィルタリングは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rangeDateFirstPublished&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日の範囲（n/w/m）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedStartY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日開始年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedStartM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日開始月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedStartD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日開始日（整数 1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedEndY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日終了年（整数4桁）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedEndM&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日終了月（整数 1-12）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dateFirstPublishedEndD&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;発行日終了日（整数 1-31）&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;指定の仕方は発見日と同じ要領でできる。&lt;/p&gt;

&lt;h3 id=&#34;表示言語の指定&#34;&gt;表示言語の指定&lt;/h3&gt;

&lt;p&gt;表示言語は日本語と英語のみ対応している。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示言語（&lt;code&gt;ja/en&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;返却地&#34;&gt;返却地&lt;/h3&gt;

&lt;p&gt;返却データのフォーマットは XML で RSS 1.0 形式。
ただし &lt;a href=&#34;https://jvndb.jvn.jp/schema/mod_sec.html&#34; title=&#34;JVNRSS: Qualified Security Advisory Reference (mod_sec)&#34;&gt;mod_sec&lt;/a&gt; と呼ばれる &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; 独自のスキーマを含んでいて，通常のフィード情報の他に脆弱性情報の記述もある。
なお，詳細を取得したいのであれば次節の &lt;code&gt;getVulnDetailInfo&lt;/code&gt; を使うほうがよい。&lt;/p&gt;

&lt;p&gt;XML の大まかな構成は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;rdf:RDF&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
    ....
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;&amp;gt;https://jvndb.jvn.jp/...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:identifier&amp;gt;&lt;/span&gt;JVNDB-2018-XXXXXX&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:identifier&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:references&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;source=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;JVN&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;JVN#XXXXXXXX&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;https://jvn.jp/jp/JVNXXXXXXXX/index.html&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:references&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:references&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;source=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CVE&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CVE-2018-XXXXX&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-XXXXX&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:references&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:references&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CWE-XX&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;https://cwe.mitre.org/data/definitions/XX.html&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:references&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:references&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:references&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:cpe&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.2&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;vendor=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;....&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;product=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;....&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;cpe:/.....&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:cpe&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:cpe&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:cpe&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:cvss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;score=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;8.8&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;severity=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;High&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;vector=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CVSS:3.0/...&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;3.0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Base&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:cvss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;score=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;5.8&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;severity=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Medium&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;vector=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Base&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:date&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:date&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dcterms:issued&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dcterms:issued&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dcterms:modified&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dcterms:modified&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
    ....
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;status:Status&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;3.3&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;getVulnOverviewList&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;retCd=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;retMax=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;errCd=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;errMsg=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;totalRes=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;totalResRet=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;firstRes=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;feed=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hnd&amp;#34;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;status:Status&amp;gt;&lt;/code&gt; 要素には API 処理時のステータスが返る。
正常終了であれば &lt;code&gt;retCd&lt;/code&gt; に &lt;code&gt;0&lt;/code&gt; がセットされる。
また取得可能件数は &lt;code&gt;totalRes&lt;/code&gt; 属性にセットされる。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性対策詳細情報の取得&#34;&gt;脆弱性対策詳細情報の取得&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnDetailInfo_api_hnd.html&#34;&gt;getVulnDetailInfo (ver. HND)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;curl-as-dsl-1&#34;&gt;&lt;a href=&#34;https://shibukawa.github.io/curl_as_dsl/&#34; title=&#34;cURL as DSL — cURL as DSL 1.0 documentation&#34;&gt;cURL as DSL&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;とりあえず必須オプションのみ。
以下は JVNDB-2018-000024 の情報を取得する場合。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -G -d &amp;quot;method=getVulnDetailInfo&amp;quot; -d &amp;quot;feed=hnd&amp;quot; -d &amp;quot;vulnId=JVNDB-2018-000024&amp;quot; https://jvndb.jvn.jp/myjvn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;必須オプション-1&#34;&gt;必須オプション&lt;/h3&gt;

&lt;p&gt;必須オプションは以下の通り&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;method&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;getVulnDetailInfo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;feed&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;hnd&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vulnId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;脆弱性対策情報ID 。複数指定可（&lt;code&gt;+&lt;/code&gt; で区切る）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;取得のハンドリング-1&#34;&gt;取得のハンドリング&lt;/h3&gt;

&lt;p&gt;脆弱性対策詳細情報は一度に10件までしか取得できない。
取得可能件数が10件以上ある場合はオプションで「n件目から取得」と指定すればよい。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;startItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;取得可能なエントリの取得開始位置&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;maxCountItem&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一度に取得できるエントリ数&lt;/td&gt;
&lt;td&gt;50 (max 50)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ただし取得可能件数は &lt;code&gt;vulnId&lt;/code&gt; オプションでコントロールできるため，あまり意味のあるオプションではないだろう。&lt;/p&gt;

&lt;h3 id=&#34;表示言語の指定-1&#34;&gt;表示言語の指定&lt;/h3&gt;

&lt;p&gt;表示言語は日本語と英語のみ対応している。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;表示言語（&lt;code&gt;ja/en&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;返却地-1&#34;&gt;返却地&lt;/h3&gt;

&lt;p&gt;返却データのフォーマットは XML で &lt;a href=&#34;http://jvnrss.ise.chuo-u.ac.jp/jtg/vuldef/index.ja.html&#34; title=&#34;VULDEF: The VULnerability Data publication and Exchange Format data model&#34;&gt;VULDEF&lt;/a&gt; と呼ばれる &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; 独自のスキーマを使っている。
HTML ページ（たとえば &lt;a href=&#34;https://jvndb.jvn.jp/ja/contents/2018/JVNDB-2018-000024.html&#34; title=&#34;JVNDB-2018-000024 - JVN iPedia - 脆弱性対策情報データベース&#34;&gt;JVNDB-2018-000024&lt;/a&gt;）に記載されている内容はほぼ網羅されているため HTML ページをわざわざ scraping する必要はない。&lt;/p&gt;

&lt;p&gt;XML の大まかな構成は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;VULDEF-Document&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;Vulinfo&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VulinfoID&amp;gt;&lt;/span&gt;JVNDB-2018-XXXXXXX&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VulinfoID&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;VulinfoData&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;VulinfoDescription&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Overview&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Overview&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VulinfoDescription&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;Affected&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;AffectedItem&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;ProductName&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/ProductName&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Cpe&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.2&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Cpe&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;VersionNumber&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VersionNumber&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/AffectedItem&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;AffectedItem&amp;gt;&lt;/span&gt;
          ...
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/AffectedItem&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Affected&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;Impact&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Cvss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Severity&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Base&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Severity&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Base&amp;gt;&lt;/span&gt;X.X&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Base&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Vector&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Vector&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Cvss&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;Cvss&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;3.0&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Severity&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Base&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Severity&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Base&amp;gt;&lt;/span&gt;X.X&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Base&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Vector&amp;gt;&lt;/span&gt;CVSS:3.0/...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Vector&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Cvss&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;ImpactItem&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/ImpactItem&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Impact&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;Solution&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;SolutionItem&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/SolutionItem&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;SolutionItem&amp;gt;&lt;/span&gt;
          ...
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/SolutionItem&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Solution&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;Related&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;RelatedItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;VulinfoID&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VulinfoID&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Title&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Title&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;URL&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/URL&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/RelatedItem&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;RelatedItem&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
          ...
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/RelatedItem&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Related&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;History&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;HistoryItem&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;HistoryNo&amp;gt;&lt;/span&gt;1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/HistoryNo&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;DateTime&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/DateTime&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;nt&#34;&gt;&amp;lt;Description&amp;gt;&lt;/span&gt;...&lt;span class=&#34;nt&#34;&gt;&amp;lt;/Description&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/HistoryItem&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;HistoryItem&amp;gt;&lt;/span&gt;
          ...
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/HistoryItem&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;/History&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;DateFirstPublished&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/DateFirstPublished&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;DateLastUpdated&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/DateLastUpdated&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;DatePublic&amp;gt;&lt;/span&gt;2006-01-02T15:04:05+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/DatePublic&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/VulinfoData&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Vulinfo&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;Vulinfo&amp;gt;&lt;/span&gt;
    ....
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/Vulinfo&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;sec:handling&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;marking:Marking&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;lt;marking:Marking_Structure&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/marking:Marking&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/sec:handling&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;status:Status&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;3.3&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;getVulnDetailInfo&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;retCd=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;retMax=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;errCd=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;errMsg=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;totalRes=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;totalResRet=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;firstRes=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;feed=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hnd&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;vulnId=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/VULDEF-Document&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;status:Status&amp;gt;&lt;/code&gt; 要素には API 処理時のステータスが返る。
正常終了であれば &lt;code&gt;retCd&lt;/code&gt; に &lt;code&gt;0&lt;/code&gt; がセットされる。
また取得可能件数は &lt;code&gt;totalRes&lt;/code&gt; 属性にセットされる。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/schema/jvnrss.html&#34;&gt;JVNRSS: Specification of Japan Vulnerability Notes RSS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/schema/mod_sec.html&#34;&gt;JVNRSS: Qualified Security Advisory Reference (mod_sec)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvnrss.ise.chuo-u.ac.jp/jtg/vuldef/index.ja.html&#34;&gt;VULDEF: The VULnerability Data publication and Exchange Format data model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://astaxie.gitbooks.io/build-web-application-with-golang/ja/07.1.html&#34;&gt;XMLの処理 · Build web application with Golang&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://vuls.io/&#34;&gt;Vuls · Agentless Vulnerability Scanner for Linux/FreeBSD&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/future-architect/vuls/&#34;&gt;future-architect/vuls: Vulnerability scanner for Linux/FreeBSD, agentless, written in Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1107654.html&#34;&gt;“JVN iPedia”がHTTPS対応などのリニューアル、「MyJVNバージョンチェッカ」は要更新 - 窓の杜&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;JVN が CVSSv3 による脆弱性評価を開始&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/release/2018/03/go-myjvn-v0_1_0-released/&#34;&gt;go-myjvn パッケージを作ってみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:jre1&#34;&gt;Java JRE には Windows アカウント名に全角文字を含む場合にエラーになる不具合があるらしい。 JRE 実装に起因するものなので JRE 側で修正されない限り対応できないようだ。 Windows 専用ツールでわざわざ Java を使うメリットはないので .NET 版を使うことを強くお勧めする。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:jre1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:c1&#34;&gt;念のために説明しておくと著作権では著作物の「使用」と「利用」を区別し「利用」について制限をかける（「使用」については著作権は関知しない）。著作物の利用とは，大まかに &lt;em&gt;複製（フォーマット変換・機械翻訳を含む）・公開（上演や展示など）・配布（共有）・翻案（改変）&lt;/em&gt; を指す。 &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; で取得したデータの利用については別途許諾を得る必要がある？
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:curl1&#34;&gt;&lt;code&gt;-G&lt;/code&gt; オプションは GET プロトコルを指す。明示するなら &lt;code&gt;-X GET&lt;/code&gt; とするのがいいかも。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:curl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「仮想通貨」と公開鍵基盤 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/02/blockchain-and-pki/" />
		<id>tag:text.Baldanders.info,2018-02-05:/remark/2018/02/blockchain-and-pki/</id>
		<published>2018-02-05T19:10:06+09:00</published>
		<updated>2018-02-05T19:10:06+09:00</updated>
		<summary>Bitcoin が気にするのは Blockchain に記載されるアドレスの一貫性と無矛盾性である。今回はこの部分についてもう少し詳しく書いてみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;Twitter で見かけた記事。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@ShinichiroMatsuo/-cde3f8ffa0e4&#34;&gt;Satoshiが注意深く設定した世界の境界線 – Shin&#39;ichiro Matsuo – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Satoshi Nakamoto 氏の論文を引いていてかなり面白い内容だと思うが，言いたいことは単純で，私がこれまで&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;述べてきた&lt;/a&gt;通り&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bitcoin のアドレスの帰属先について Bitcoin/Blockchain は関知しない。Bitcoin が気にするのは Blockchain に記載されるアドレスの一貫性と無矛盾性である。アドレスの証明が必要な場合は外部の PKI を利用するか新たに組み込む必要がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということに尽きる。&lt;/p&gt;

&lt;p&gt;今回はこの部分についてもう少し詳しく書いてみる。&lt;/p&gt;

&lt;h2 id=&#34;まずは定義から&#34;&gt;まずは定義から&lt;/h2&gt;

&lt;p&gt;Blockchain もしくは Blockchain に準ずる技術を用い，価値可換なトークンによって取引を行うシステムを括弧書きで&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;または「&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;システム」と命名する。
この時の「価値可換なトークン」を「コイン」と命名する。
コインは量で表すことができるものとする。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;システムで発生する取引を記録する追記型データベースを「元帳」と命名する。
もちろん元帳は「Blockchain もしくは Blockchain に準ずる技術」を用いて実装されているわけだ。&lt;/p&gt;

&lt;p&gt;ここで，ある&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;システム上でユーザ $A$ からユーザ $B$ へコインを移転&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:t1&#34;&gt;&lt;a href=&#34;#fn:t1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; する「取引」を考える。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「ある&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;システム」を $COIN$ とする&lt;/li&gt;
&lt;li&gt;取引を $T$ とし，取引の際に移転するコインの量を $c$ とする&lt;/li&gt;
&lt;li&gt;$A$ が持つ&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;のアドレスを $a$ とし， $B$ が持つ&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;のアドレスを $b$ とする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このときの取引全体を示す図式&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:math1&#34;&gt;&lt;a href=&#34;#fn:math1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; を以下のように記述してみる。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
\[
    COIN : A[a] \xrightarrow{T(c)} B[b]
\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;このとき取引 $T$ を元帳に追記する内容は&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
\[
    a \xrightarrow{c} b
\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;であり，取引関係者である $A$ や $B$ は一切登場しないのがポイントである。&lt;/p&gt;

&lt;h2 id=&#34;仮想通貨-はアドレスの帰属先を証明-certificate-しない&#34;&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;はアドレスの帰属先を証明（Certificate）しない&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;は $a$ の帰属先が $A$ であること，あるいは $b$ の帰属先が $B$ であることを証明しないし証明できない。
もう少し厳密にいうなら「&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;はアドレスの帰属先を証明する責務を負わない」と言える。&lt;/p&gt;

&lt;p&gt;このことが何をもたらすか，いくつかシナリオを考えてみよう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$a$ の帰属先が $A$ であると証明できない

&lt;ul&gt;
&lt;li&gt;$B$ は入金 $c$ を $A$ によるものではないと主張できる。 $B$ は $A$ からの入金を否認し $A$ に尚も $c$ を請求するかもしれない&lt;/li&gt;
&lt;li&gt;$a$ は別の誰か（たとえば $E$）に乗っ取られているかもしれない。これにより $B$ は取引不成立とみなし $A$ に何らかのペナルティを課すかもしれない \[ COIN : E[a] \xrightarrow{T( c )} B[b] \]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;$b$ の帰属先が $B$ であると証明できない

&lt;ul&gt;
&lt;li&gt;$B$ は $b$ が自身に帰属しないと主張できる。これにより $B$ は $A$ からの入金を否認できる&lt;/li&gt;
&lt;li&gt;$b$ は別の誰かに乗っ取られているかもしれない。これにより $A$ は取引不成立とみなして出金を拒否した上で $B$ に何らかのペナルティを課すかもしれない（出金した $c$ を上回る量の賠償請求を行うなど） \[ COIN : A[a] \xrightarrow{T( c )} E[b] \]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Coincheck 事例の事実関係は（今のところ）よく分かってない部分もあるが，知らない誰かがアドレスを乗っ取って知らない誰かへ「流出」したということであれば&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
\[
    COIN : E[a] \xrightarrow{T(c)} E[b]
\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;という図式も成り立つ。&lt;/p&gt;

&lt;p&gt;しかし実態がどのようなものであれ&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;の元帳には $a \xrightarrow{c} b$ という記録が事実として残るのみで，それが望んだ取引なのか何らかの不正を含んでいるのかといった点について&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;は一切関知しない。&lt;/p&gt;

&lt;h2 id=&#34;仮想通貨-は-p2p-を前提とする&#34;&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;は P2P を前提とする&lt;/h2&gt;

&lt;p&gt;アドレスの帰属先を証明できないというのは実際の取引において致命的な問題となるが，それでもそれなりにまわっているのは&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;がユーザ同士の P2P (peer-to-peer) な関係を前提にしているからである。
つまり「$a$ の帰属先は $A$ である」であり「$b$ の帰属先は $B$ である」であることを $A,B$ 相互に「信用」していることが取引の前提になっている。&lt;/p&gt;

&lt;p&gt;しかし，見知った者同士の取引ならともかく，不特定の誰かを何の担保もなく「信用」するのは無理だし，その「信用」そのものを数学的に示す方法は存在しない。
存在しないのであれば，それに代わる「運用でカバー」するしかない。&lt;/p&gt;

&lt;p&gt;この「運用」のロジックのことを「信用モデル（trust model）」と呼ぶ。
&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;自体はアドレスに対する信用モデルを持たないが，&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;を利用するサービスが何らかの信用モデルと組み合わせることによりアドレスの帰属先を証明することが可能になる。
また，出来のよい信用モデルを導入することにより不正取引を働くインセンティブが低下することも期待できるだろう。&lt;/p&gt;

&lt;p&gt;おそらく&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;を利用するユーザの多くはウォレット・サービスや通貨交換所が信用モデルを組み込むことを期待しているんじゃないかと思うが（投機目的で&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;を運用している人はどうでもいいと思ってるかも知れない），実際にそれらのサービスがアドレスをどうやって「運用」してるのかは（私は現在の&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;への興味が薄いので）知らない。&lt;/p&gt;

&lt;h2 id=&#34;公開鍵基盤の信用モデル&#34;&gt;公開鍵基盤の信用モデル&lt;/h2&gt;

&lt;p&gt;ここで少し目先を変えて公開鍵基盤（Public Key Infrastructure; PKI）の信用モデルを2つほど紹介してみる。
公開鍵基盤というのは公開鍵が誰に帰属するかをサービスを横断して証明するための技術基盤である。&lt;/p&gt;

&lt;p&gt;なぜ公開鍵基盤かというと，公開鍵を使った暗号通信の要件が&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;による取引の要件によく似ていると考えられるからだ。
公開鍵を使った暗号通信には以下の4つの要件がある。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;機密性（Confidentiality）&lt;/li&gt;
&lt;li&gt;完全性（Integrity）&lt;/li&gt;
&lt;li&gt;認証（Authentication）&lt;/li&gt;
&lt;li&gt;否認防止（Non-repudiation）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;暗号なので1番目は言わずもがなだが，2番目は電子署名によって達成できる。
そして3番目を達成する手段として公開鍵基盤がある。&lt;/p&gt;

&lt;p&gt;ちなみに2番目と3番目が達成できれば4番目も達成可能なのだが，否認防止の重要性は前節までを見ればお分かりいただけるだろう。&lt;/p&gt;

&lt;h3 id=&#34;x-509-の信用モデル&#34;&gt;X.509 の信用モデル&lt;/h3&gt;

&lt;p&gt;典型的な hierarchical PKI として有名なのが X.509 である。
Web の HTTPS 通信で必要な「電子証明書」は X.509 下で運用されている。&lt;/p&gt;

&lt;p&gt;X.509 では認証局（Certification Authority; CA）が公開鍵（の帰属先）を証明する電子証明書を発行する。
電子証明書は具体的には，ユーザの公開鍵に対して認証局の鍵で電子署名を付与したものである。
では，認証局の鍵はどうやって証明するかというと，さらに上位の認証局が証明する。
ただし最上位のルート認証局は誰も証明してくれない（自己証明のみ）。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph TD
  CA1[&#34;root CA&#34;]-- Digital Sign --&gt;CA2
  CA1-- Digital Sign --&gt;CA3

  CA2-- Digital Sign --&gt;Aa((&#34;A[a]&#34;))
  CA3-- Digital Sign --&gt;Bb((&#34;B[b]&#34;))
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;X.509 は「認証局は信用できる」という前提に立った信用モデルと言える。
言い方を変えると，ある認証局が信用できるのであれば配下の認証局やユーザは総て信用できる。&lt;/p&gt;

&lt;p&gt;X.509 は大規模かつ安定的な運用に向いているが，いったん認証局の信用が崩れると配下の認証局やユーザの信用が一気に崩れることになる。
そのため，認証局，特にルート認証局では高いセキュリティが要求される。&lt;/p&gt;

&lt;h3 id=&#34;openpgp-の信用モデル&#34;&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; における典型的な信用モデルは「信用の輪（web of trust）」と呼ばれている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tm1&#34;&gt;&lt;a href=&#34;#fn:tm1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
信用の輪はユーザ間の P2P な関係がベースになっている。&lt;/p&gt;

&lt;p&gt;信用の輪ではユーザ同士がお互いの公開鍵に電子署名を付与する。
たとえば $A$ と $B$ に面識があるなら，相互に電子署名を付与することができる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Aa((&#34;A[a]&#34;))
  Bb((&#34;B[b]&#34;))

  Aa-- Digital Sign --&gt;Bb
  Bb-- Digital Sign --&gt;Aa
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;ここで3人目の $D$ に登場してもらおう。
$B$ と $D$ は面識があって電子署名を交わしているが， $A$ と $D$ は面識がないものとする。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Aa((&#34;A[a]&#34;))
  Bb((&#34;B[b]&#34;))
  Dd((&#34;D[d]&#34;))

  Aa-- Digital Sign --&gt;Bb
  Bb-- Digital Sign --&gt;Aa

  Bb-- Digital Sign --&gt;Dd
  Dd-- Digital Sign --&gt;Bb
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;この場合でも $A$ と $B$ との関係， $B$ と $D$ との関係をもとに $A$ から見て $D$ も信用できるとみなすのだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Aa((&#34;A[a]&#34;))
  Bb((&#34;B[b]&#34;))
  Dd((&#34;D[d]&#34;))

  Aa-- Digital Sign --&gt;Bb
  Aa-. validate! .-&gt;Dd
  Aa-. trust .-&gt;Bb
  Bb-- Digital Sign --&gt;Aa

  Bb-- Digital Sign --&gt;Dd
  Bb-. trust .-&gt;Dd
  Dd-- Digital Sign --&gt;Bb
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;信用の輪はコミュニティ内のアドホックな鍵管理に向いているが，全く関係のない第3者を証明するのは難しい。&lt;/p&gt;

&lt;h3 id=&#34;x-509-と-openpgp&#34;&gt;X.509 と &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;山根信二さん等の「&lt;span&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/PGP-001.pdf&#34;&gt;OpenPGPとPKI &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;」では X.509 と OpenPGP の PKI の比較を行っている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:pki1&#34;&gt;&lt;a href=&#34;#fn:pki1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
以下に比較表を示す。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;特徴&lt;/th&gt;
&lt;th&gt;X.509&lt;/th&gt;
&lt;th&gt;OpenPGP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;PKI の形態&lt;/td&gt;
&lt;td&gt;hierarchical PKI&lt;/td&gt;
&lt;td&gt;trust-file PKI&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;公開鍵の認証者&lt;/td&gt;
&lt;td&gt;専門機関（CA）&lt;/td&gt;
&lt;td&gt;各ユーザ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;信頼点&lt;/td&gt;
&lt;td&gt;ルート CA&lt;/td&gt;
&lt;td&gt;利用者自身（面識）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;認証の連鎖構造&lt;/td&gt;
&lt;td&gt;ツリー型&lt;/td&gt;
&lt;td&gt;ユーザ中心型&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;認証者を認証する根拠&lt;/td&gt;
&lt;td&gt;利用者による選択&lt;/td&gt;
&lt;td&gt;利用者自身&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;証明書の破棄と管理&lt;/td&gt;
&lt;td&gt;あり&lt;/td&gt;
&lt;td&gt;不完全&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;コスト&lt;/td&gt;
&lt;td&gt;高い&lt;/td&gt;
&lt;td&gt;低い&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;X.509 と &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; の信用モデルはコンセプトが直交しているためどちらが正解とは言えない。
また相互補完的に運用することも可能である。&lt;/p&gt;

&lt;h2 id=&#34;仮想通貨-の信用モデルは&#34;&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;の信用モデルは？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;のアドレスの運用についても，おそらく正解はひとつではなく，さまざまな信用モデルがありうると思う。
また信用モデルを&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;システム自体に埋め込むのか周辺の（ウォレットや交換所などの）サービスで提供するのかというのも議論の余地があると思う。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;が単なる投機物件ではなく generative な経済活動の技術基盤として生き残っていくことを期待したい。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51AT2LqRIsL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;UNDERGROUND MARKET　ヒステリアン・ケース&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;藤井太洋 &lt;/dd&gt;&lt;dd&gt;朝日新聞出版 2013-11-07&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00H91YQGW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00H91YQGW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDERGROUND MARKET　アービトレーター&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00V7Y7DUS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00V7Y7DUS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビッグデータ・コネクト (文春文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00B71TZ9S/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00B71TZ9S.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDER GROUND MARKET&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01IGR0TA4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01IGR0TA4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アンダーグラウンド・マーケット (朝日文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00CHIFA1M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00CHIFA1M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Gene Mapper -full build-&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0753H9CDS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0753H9CDS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;公正的戦闘規範 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSMC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSMC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 下 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSP4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSP4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 上 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B078JT42J7/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B078JT42J7.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アリスマ王の愛した魔物 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B077Q9WM8M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B077Q9WM8M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;SF飯：宇宙港デルタ３の食料事情 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;日本で「仮想通貨」が流行る前に登場した傑作。つかエンジニアは全員「UNDERGROUND MARKET」シリーズを読め！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-02-04&#34;&gt;2018-02-04&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:t1&#34;&gt;$A$ から見ると $B$ への「出金」， $B$ からみると $A$ からの「入金」と言える。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:t1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:math1&#34;&gt;数式じゃなくて図式。数式記号を使ってるけどあくまで図式と言い張ってみる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:math1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tm1&#34;&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; の実装である &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では信用の輪以外にも &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34; title=&#34;Trust on first use - Wikipedia&#34;&gt;TOFU (Trust On First Use)&lt;/a&gt; などの信用モデルを実装している（参考： “&lt;span&gt;&lt;a href=&#34;#ZgotmplZ&#34;&gt;TOFU for OpenPGP &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;”）。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:pki1&#34;&gt;この論文は2002年に旧 OpenPKSD.org で公開されたが，サイトそのものが消失したため &lt;a href=&#34;https://web.archive.org/web/20110907063003/http://www.openpksd.org/&#34;&gt;Internet Archive&lt;/a&gt; からサルベージした。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:pki1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： 2019年の暦象，他 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/02/04-stories/" />
		<id>tag:text.Baldanders.info,2018-02-04:/remark/2018/02/04-stories/</id>
		<published>2018-02-04T02:44:22+09:00</published>
		<updated>2018-12-12T15:48:49+09:00</updated>
		<summary>2019年の暦象 / Coincheck のアレ / インフルエンザ過敏症とトリアージ / 「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;久しぶり，週末の戯れ言特集。
今回は Facebook の TL に書き散らしたものを中心にお送りします。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#calendar&#34;&gt;2019年の暦象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coincheck&#34;&gt;Coincheck のアレ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#triage&#34;&gt;インフルエンザ過敏症とトリアージ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wireless&#34;&gt;「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;calendar&#34;&gt;2019年の暦象&lt;/h2&gt;

&lt;p&gt;今年も予定通り国立天文台から来年（2019年）の暦象が公開された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/news/topics/2018/20180201-rekiyoko.html&#34;&gt;平成31（2019）年暦要項の発表 | 国立天文台(NAOJ)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;祝日から解説すると，12月23日の天皇誕生日がなくなる。
これは新しい天皇が即位されるのが2019年5月で，その時点から「天皇誕生日」が2月23日に変わるため2019年中は天皇誕生日はないということらしい。
また即位による祝日が5月1日になった場合は前後の平日も祝日になるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nlab.itmedia.co.jp/nl/articles/1802/02/news108.html&#34;&gt;天皇陛下の退位に伴い2019年は祝日「天皇誕生日」がなくなる　翌年から2月23日が新たな祝日に - ねとらぼ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;暦象については2019年は水星の日面経過がある。
ただし日本では見られない。
また金環日食もあるが日本では部分日食になる。&lt;/p&gt;

&lt;h2 id=&#34;coincheck&#34;&gt;Coincheck のアレ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20180126/1517012654&#34;&gt;Coincheckで発生した暗号通貨NEMの不正送金事案についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kusunokimasanori/20180128-00080965/&#34;&gt;コインチェックからのNEM流出、なぜ安全対策が遅れたのか(楠正憲) - 個人 - Yahoo!ニュース&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kusunokimasanori/20180204-00081229/&#34;&gt;コインチェック事件から1週間、よく聞かれた疑問と今後の論点(楠正憲) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2018/02/02/fsa-coincheck/&#34;&gt;金融庁がコインチェックへの立入検査、CAMPFIREなどみなし仮想通貨交換業者15社にも報告徴求命令  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一応，重大なセキュリティ・インシデント（かつ現在進行形）なんで挙げておくけど，個人的には&lt;a href=&#34;http://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34; title=&#34;「暗号通貨」ってゆーな！&#34;&gt;「仮想通貨」&lt;/a&gt;の投機には小指の先ほども興味が無いので完全に他人事である。
だいたい，あんな短期間に価値が乱高下する通貨なんか取引に使えないだろ。
もはやこれを「通貨（currency）」と呼ぶことさえ疑問に感じてしまう。
もう「チューリップ」でいいぢゃん。&lt;/p&gt;

&lt;p&gt;以上，終わり。&lt;/p&gt;

&lt;h2 id=&#34;triage&#34;&gt;インフルエンザ過敏症とトリアージ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://medg.jp/mt/?p=8111&#34;&gt;Vol.021 インフルエンザで「早めの受診」は間違いです！  |  MRIC by 医療ガバナンス学会&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fsight.jp/articles/-/43278&#34;&gt;インフルエンザで「早めの受診」は間違いです！：医療ガバナンス学会 | MRICの部屋 | 新潮社　Foresight(フォーサイト) | 会員制国際情報サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://k3c.hatenablog.com/entry/2018/02/01/230354&#34;&gt;インフルエンザの予防と治療について考える - 18 til i die (another phase)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これね、結局リスク・マネジメントの問題なのよ。&lt;/p&gt;

&lt;p&gt;インフルエンザに対してリスクの高い（重症化しやすい）人はいる。
例えば循環器系にリスクがある人，子供や老人，等々&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:inf1&#34;&gt;&lt;a href=&#34;#fn:inf1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
あるいは受験等の重要なイベントを控えている人などは出来るだけ避けたいと思うだろう。
そういった人（あるいはその家族）がリスクを下げるために予防接種や罹患時に早めの措置を行なうことは意味がある。&lt;/p&gt;

&lt;p&gt;でもリスクというのは系（system）全体で最小になるように再配分（trade-off）しなければならない。
医療ってのは一種の公共サービスなんだから個人の思惑が通らないこともある。
リソースは有限なのだから。&lt;/p&gt;

&lt;p&gt;で，（急変など）予測を超える事態が起きた場合に備えて（救急車の手配や医師やベッドの確保など）医療機関側の体制を整えておかなきゃいけないのに，実際には医療機関側のリソースは軽症者に使い潰されているわけ。
そこが問題で，そのことを（正しくリスクを再配分すべき）国が全く分かってないというのが批判の核心なのである。&lt;/p&gt;

&lt;p&gt;もうね，インフルエンザだからって診断証明を要求するのは止めなよ。
日本の悪しき慣習。
“&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01LYTKUPM/baldandersinf-22/&#34; title=&#34;Amazon.co.jp： THIS IS JAPAN 英国保育士が見た日本 eBook: ブレイディみかこ: Kindleストア&#34;&gt;This Is Japan&lt;/a&gt;” って奴。
病院をバイオ・ハザードにするつもりか。&lt;/p&gt;

&lt;p&gt;そろそろ日本人は「インフルエンザ過敏症」から卒業して正しいリスク感覚を身に着けるべきなんじゃないのか。
何度おなじ失敗を繰り返したら懲りるんだ。&lt;/p&gt;

&lt;p&gt;まぁあとは「てうが」ね。&lt;/p&gt;

&lt;h2 id=&#34;wireless&#34;&gt;「公衆無線LANセキュリティ分科会報告書（案）に対する意見募集」&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.soumu.go.jp/menu_news/s-news/01ryutsu03_02000137.html&#34;&gt;総務省｜公衆無線LANセキュリティ分科会報告書（案）に対する意見募集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;途中まで読んで「公衆無線 LAN 版安全・安心マーク」という語句を見た瞬間に読む気が失せた。
これが日本のネットワーク・セキュリティの現状である。&lt;/p&gt;

&lt;p&gt;海外から来られる皆さん，日本政府はあてにならないのでぜひ自衛してください。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51AT2LqRIsL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00FONW2V8/baldandersinf-22/&#34;&gt;UNDERGROUND MARKET　ヒステリアン・ケース&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;藤井太洋 &lt;/dd&gt;&lt;dd&gt;朝日新聞出版 2013-11-07&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00H91YQGW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00H91YQGW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDERGROUND MARKET　アービトレーター&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00V7Y7DUS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00V7Y7DUS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビッグデータ・コネクト (文春文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00B71TZ9S/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00B71TZ9S.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;UNDER GROUND MARKET&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01IGR0TA4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01IGR0TA4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アンダーグラウンド・マーケット (朝日文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00CHIFA1M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00CHIFA1M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Gene Mapper -full build-&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0753H9CDS/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0753H9CDS.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;公正的戦闘規範 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSMC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSMC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 下 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01FFKMSP4/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01FFKMSP4.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オービタル・クラウド 上 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B078JT42J7/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B078JT42J7.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アリスマ王の愛した魔物 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B077Q9WM8M/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B077Q9WM8M.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;SF飯：宇宙港デルタ３の食料事情 (ハヤカワ文庫JA)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;日本で「仮想通貨」が流行る前に登場した傑作。つかエンジニアは全員「UNDERGROUND MARKET」シリーズを読め！&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-02-04&#34;&gt;2018-02-04&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:inf1&#34;&gt;それ以外では劇症型または劇症型が予測されるウイルスの場合とか。これは「新型インフルエンザ」のときに大騒ぎしたのでみんな覚えてると思う。でも劇症型のインフルエンザなんてそうそうないのよ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:inf1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな - openpgp</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/openpgp/using-ecc-with-gnupg/" />
		<id>tag:text.Baldanders.info,2017-12-02:/openpgp/using-ecc-with-gnupg/</id>
		<published>2017-12-02T16:20:26+09:00</published>
		<updated>2018-01-28T18:00:19+09:00</updated>
		<summary>手っ取り早く ECC 鍵を作りたいなら --quick-generate-key コマンドでアルゴリズムに future-default を指定すればよい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="openpgp" label="openpgp" scheme="http://text.baldanders.info/openpgp" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;最初に言っておくと &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; では（秘密鍵の漏洩や暗号アルゴリズム等の危殆化がない限り）永続的に使われるのがよい鍵とされている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:km1&#34;&gt;&lt;a href=&#34;#fn:km1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
なので，無理に新しい鍵に切り替える必要はないのだが，もし &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で新しい鍵を作るのであれば ECC (Elliptic Curve Cryptography; 楕円曲線暗号) を選択するのがいいんじゃないかな？ という提案である。&lt;/p&gt;

&lt;h2 id=&#34;手っ取り早く-ecc-鍵を作る&#34;&gt;手っ取り早く ECC 鍵を作る&lt;/h2&gt;

&lt;p&gt;手っ取り早く ECC 鍵を作りたいなら &lt;code&gt;--quick-generate-key&lt;/code&gt; コマンドでアルゴリズムに &lt;code&gt;future-default&lt;/code&gt; を指定すればよい。
（以下は有効期限を2年で指定する場合。無期限でいいなら &lt;code&gt;0&lt;/code&gt; を指定する）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-gen-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; future-default - 2y
たくさんのランダム・バイトの生成が必要です。キーボードを打つ、マウスを動か
す、ディスクにアクセスするなどの他の操作を素数生成の間に行うことで、乱数生
成器に十分なエントロピーを供給する機会を与えることができます。

たくさんのランダム・バイトの生成が必要です。キーボードを打つ、マウスを動か
す、ディスクにアクセスするなどの他の操作を素数生成の間に行うことで、乱数生
成器に十分なエントロピーを供給する機会を与えることができます。
gpg: 失効証明書を &amp;#39;C:/Users/slice/AppData/Roaming/gnupg/openpgp-revocs.d\F79B411717B86902177EA08200693613E2B68F5A.rev&amp;#39; に保管しました。
公開鍵と秘密鍵を作成し、署名しました。

pub   ed25519 2017-12-02 [SC] [有効期限: 2019-12-02]
      F79B411717B86902177EA08200693613E2B68F5A
uid                      Alice &amp;lt;alice@example.com&amp;gt;
sub   cv25519 2017-12-02 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成した鍵を私作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpd&#34;&gt;&lt;a href=&#34;#fn:gpd&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; で見てみるとこんな感じになっている。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -a --export alice | gpgpdump
&lt;span class=&#34;hl&#34;&gt;Public-Key Packet (tag 6) (51 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Version: 4 (current)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public key creation time: 2017-12-02T10:37:17+09:00
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        5a 22 03 cd
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public-key Algorithm: EdDSA (pub 22)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECC Curve OID: ed25519
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        2b 06 01 04 01 da 47 0f 01
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    EdDSA EC point (04 || X || Y) (263 bits)
&lt;/span&gt;User ID Packet (tag 13) (25 bytes)
    User ID: Alice &amp;lt;alice@example.com&amp;gt;
Signature Packet (tag 2) (150 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: EdDSA (pub 22)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (62 bytes)
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                f7 9b 41 17 17 b8 69 02 17 7e a0 82 00 69 36 13 e2 b6 8f 5a
        Signature Creation Time (sub 2): 2017-12-02T10:37:17+09:00
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 730 days after (2019-12-02T10:37:17+09:00)
        Preferred Symmetric Algorithms (sub 11) (4 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
            Hash Algorithm: SHA-1 (hash 2)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x00693613e2b68f5a
    Hash left 2 bytes
        7e b5
    EdDSA compressed value r (253 bits)
    EdDSA compressed value s (251 bits)
&lt;span class=&#34;hl&#34;&gt;Public-Subkey Packet (tag 14) (56 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Version: 4 (current)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public key creation time: 2017-12-02T10:37:17+09:00
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        5a 22 03 cd
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Public-key Algorithm: ECDH public key algorithm (pub 18)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECC Curve OID: cv25519
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        2b 06 01 04 01 97 55 01 05 01
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    ECDH EC point (04 || X || Y) (263 bits)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    KDF parameters (3 bytes)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        Hash Algorithm: SHA2-256 (hash 8)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;        Symmetric Algorithm: AES with 128-bit key (sym 7)
&lt;/span&gt;Signature Packet (tag 2) (120 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: EdDSA (pub 22)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (32 bytes)
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                f7 9b 41 17 17 b8 69 02 17 7e a0 82 00 69 36 13 e2 b6 8f 5a
        Signature Creation Time (sub 2): 2017-12-02T10:37:17+09:00
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x00693613e2b68f5a
    Hash left 2 bytes
        29 27
    EdDSA compressed value r (254 bits)
    EdDSA compressed value s (254 bits)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;長々とした出力で申し訳ないが &lt;code&gt;Public-Key Packet&lt;/code&gt; と &lt;code&gt;Public-Subkey Packet&lt;/code&gt; の項目に注目していただくと，電子署名用に EdDSA (ed25519)，暗号用に ECDH (cv25519) が使われているのが分かる。
鍵長はいずれも 256bits である。&lt;/p&gt;

&lt;p&gt;通常はこれで問題ない。&lt;/p&gt;

&lt;h2 id=&#34;楕円曲線と鍵長&#34;&gt;楕円曲線と鍵長&lt;/h2&gt;

&lt;p&gt;ここでちょっと横道に逸れて鍵長の話をしておく。&lt;/p&gt;

&lt;p&gt;たとえば RSA の（平文 $M$ から暗号文 $C$ への）暗号化は以下の式で表される。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;
\[
    C = M^e \bmod n
\]
&lt;/div&gt;

&lt;p&gt;$(e, n)$ のセットが公開鍵で， $n$ のサイズが鍵長に相当する。
実際の計算はともかく，感覚としては分かりやすいよね。&lt;/p&gt;

&lt;p&gt;ECC の場合は暗号化の前に，まずベースとなる楕円曲線の（素数 $q$ で決められる）素体（prime fields）を決めなければならない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:pf1&#34;&gt;&lt;a href=&#34;#fn:pf1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
これは以下の式で表される。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;
\[
    E : y^2 \equiv x^3 + ax + b \pmod{q}
\]
&lt;/div&gt;

&lt;p&gt;この素体上の有理点の数（位数）を $\#E$ とした時の $\#E$ のサイズが鍵長に相当する。
$(a,b,q)$ といったパラメータを眺めただけでは鍵長が分からないというのが面倒臭い感じである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ecc1&#34;&gt;&lt;a href=&#34;#fn:ecc1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;そこで ECC の場合は楕円曲線を表すパラメータのセットが標準化されていて，そのセットを識別する ECC Curve OID (Object IDentifier) も決められている。
先程書いた &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; 出力結果の &amp;quot;&lt;code&gt;ECC Curve OID&lt;/code&gt;” の項目がそれに該当する。&lt;/p&gt;

&lt;p&gt;つまり ECC Curve OID から楕円曲線の種類を特定し，そこから鍵長も分かる，というわけだ。&lt;/p&gt;

&lt;h2 id=&#34;gnupg-で利用できる楕円曲線&#34;&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線&lt;/h2&gt;

&lt;p&gt;そこで， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線をリストアップしておく。&lt;/p&gt;

&lt;p&gt;表の左端列の「GnuPG」は &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で表示される楕円曲線名を示す。
楕円曲線名に鍵長が含まれている（ただし &lt;code&gt;cv25519&lt;/code&gt; と &lt;code&gt;ed25519&lt;/code&gt; は 256bits）。
右端列の「強度」は鍵長ではなく，セキュリティ強度なのでご注意を。&lt;/p&gt;

&lt;h3 id=&#34;secg-nist-推奨パラメータ&#34;&gt;SECG/NIST 推奨パラメータ&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;SECG&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;NIST&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp256r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-256&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp384r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-384&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;nistp521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp521r1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NIST curve P-521&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;secp256k1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;SECG/NIST の楕円曲線名とのマッピングは &lt;a href=&#34;https://tools.ietf.org/html/rfc4492&#34; title=&#34;RFC 4492 - Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)&#34;&gt;RFC 4492&lt;/a&gt; を参考にした。
&lt;code&gt;nistp256&lt;/code&gt;, &lt;code&gt;nistp384&lt;/code&gt;, &lt;code&gt;nistp521&lt;/code&gt; は既に &lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; で定義済みなので正式に使える。
&lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; では NIST curve P-256 については &amp;quot;MUST implement”， NIST curve P-521 については &amp;quot;SHOULD implement”， NIST curve P-384 については &amp;quot;MAY implement” となっている。&lt;/p&gt;

&lt;h3 id=&#34;brainpool&#34;&gt;Brainpool&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP256r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP384r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;brainpoolP512r1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH, ECDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Brainpool については &lt;a href=&#34;https://tools.ietf.org/html/rfc5639&#34; title=&#34;RFC 5639 - Elliptic Curve Cryptography (ECC) Brainpool Standard Curves and Curve Generation&#34;&gt;RFC 5639&lt;/a&gt; を参照のこと。
&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; では &lt;code&gt;brainpoolP256r1&lt;/code&gt; および &lt;code&gt;brainpoolP512r1&lt;/code&gt; については &amp;quot;MAY implement” となっている。&lt;/p&gt;

&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;GnuPG&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;アルゴリズム&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bits&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;cv25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ECDH&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ed25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;EdDSA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;EdDSA については &lt;a href=&#34;https://tools.ietf.org/html/rfc8032&#34; title=&#34;RFC 8032 - Edwards-Curve Digital Signature Algorithm (EdDSA)&#34;&gt;RFC 8032&lt;/a&gt; を参照のこと。
&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; では Curve25519 (&lt;code&gt;cv25519&lt;/code&gt;) および Ed25519 (&lt;code&gt;ed25519&lt;/code&gt;) については &amp;quot;SHOULD implement” となっている。&lt;/p&gt;

&lt;h2 id=&#34;セキュリティ強度と楕円曲線&#34;&gt;セキュリティ強度と楕円曲線&lt;/h2&gt;

&lt;p&gt;セキュリティ強度と暗号アルゴリズムと鍵長の関係は以下の表の通り（単位は全てbit）。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;style&gt;
main table.nist2 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist2 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist2&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security&lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Symmetric&lt;br&gt; key&lt;br&gt; algorithms&lt;/th&gt;
&lt;th&gt;FFC&lt;br&gt;(e.g., DSA, D-H)&lt;/th&gt;
&lt;th&gt;IFC&lt;br&gt;(e.g., RSA)&lt;/th&gt;
&lt;th&gt;ECC&lt;br&gt;(e.g., ECDSA)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;$\le 80$&lt;/td&gt;&lt;td&gt;2TDEA&lt;/td&gt;&lt;td&gt;$L=1024$&lt;br&gt;$N=160$&lt;/td&gt;&lt;td&gt;$k=1024$&lt;/td&gt; &lt;td&gt;$f = 160\text{ - }223$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$112$&lt;/td&gt;&lt;td&gt;3TDEA&lt;/td&gt;&lt;td&gt;$L=2048$&lt;br&gt;$N=224$&lt;/td&gt; &lt;td&gt;$k=2048$&lt;/td&gt; &lt;td&gt;$f = 224\text{ - }255$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;&lt;td&gt;AES-128&lt;/td&gt;&lt;td&gt;$L=3072$&lt;br&gt;$N=256$&lt;/td&gt; &lt;td&gt;$k=3072$&lt;/td&gt; &lt;td&gt;$f = 256\text{ - }383$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;&lt;td&gt;AES-192&lt;/td&gt;&lt;td&gt;$L=7680$&lt;br&gt;$N=384$&lt;/td&gt; &lt;td&gt;$k=7680$&lt;/td&gt; &lt;td&gt;$f = 384\text{ - }511$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;&lt;td&gt;AES-256&lt;/td&gt;&lt;td&gt;$L=15360$&lt;br&gt;$N=512$&lt;/td&gt;&lt;td&gt;$k=15360$&lt;/td&gt;&lt;td&gt;$f=512+$&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Comparable strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;2030年以降も Acceptable な鍵が要件なら 128bits 以上のセキュリティ強度が必要だが， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で利用できる楕円曲線は全て問題ないことが分かるだろう。&lt;/p&gt;

&lt;h2 id=&#34;付録-対話モードによる-ecc-鍵の選択&#34;&gt;【付録】 対話モードによる ECC 鍵の選択&lt;/h2&gt;

&lt;p&gt;対話モードで ECC 鍵を選択して作成するには以下のコマンドラインで起動する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --full-gen-key --expert&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このうち ECC 鍵を作成できるのは，以下の選択肢の内 (9) から (11) を選択した場合である。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ご希望の鍵の種類を選択してください:
   (1) RSA と RSA (デフォルト)
   (2) DSA と Elgamal
   (3) DSA (署名のみ)
   (4) RSA (署名のみ)
   (7) DSA (機能をあなた自身で設定)
   (8) RSA (機能をあなた自身で設定)
&lt;span class=&#34;hl&#34;&gt;   (9) ECC と ECC
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  (10) ECC (署名のみ)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  (11) ECC (機能をあなた自身で設定)
&lt;/span&gt;  (13) 既存の鍵
あなたの選択は? &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(9) を選択すると電子署名用の主鍵と暗号化用の副鍵をセットで作成する。
(10) と (11) を選択すると電子署名用の主鍵のみ作成する（(11) では主鍵の機能を選択できる） 。&lt;/p&gt;

&lt;p&gt;いずれを選択した場合でも以下の楕円曲線の選択肢が表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ご希望の楕円曲線を選択してください:
   (1) Curve 25519
   (3) NIST P-256
   (4) NIST P-384
   (5) NIST P-521
   (6) Brainpool P-256
   (7) Brainpool P-384
   (8) Brainpool P-512
   (9) secp256k1
あなたの選択は? &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際にどのような鍵が作成されるか以下に示す。&lt;/p&gt;

&lt;h3 id=&#34;ecc-と-ecc-を選んだ場合&#34;&gt;「ECC と ECC」を選んだ場合&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;選択した楕円曲線&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;主鍵（電子署名用）&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;副鍵（暗号化用）&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Curve 25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;EdDSA (&lt;code&gt;ed25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;cv25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-512&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDH (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;ecc-署名のみ-を選んだ場合&#34;&gt;「ECC (署名のみ)」を選んだ場合&lt;/h3&gt;

&lt;p&gt;「ECC (機能をあなた自身で設定)」でも同じ。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;選択した楕円曲線&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;主鍵（電子署名用）&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;副鍵&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;強度 bit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Curve 25519&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;EdDSA (&lt;code&gt;ed25519&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp256&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp384&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;NIST P-521&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;nistp521&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-256&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP256r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-384&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP384r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;192&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Brainpool P-512&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;brainpoolP512r1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;256&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;secp256k1&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ECDSA (&lt;code&gt;secp256k1&lt;/code&gt;)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;なし&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://www.jnsa.org/seminar/pki-day/2011/data/02_kanaoka.pdf&#34;&gt;楕円曲線暗号の整備動向＋楕円暗号の実装状況 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.maidsphere.jp/archive/%E6%A5%95%E5%86%86%E6%9B%B2%E7%B7%9A%E6%9A%97%E5%8F%B7%E3%81%AE%E9%8D%B5%E9%95%B7%E3%81%AB512bit%E3%81%8C%E3%81%AA%E3%81%8F521bit%E3%81%8C%E3%81%82%E3%82%8B%E7%90%86%E7%94%B1&#34;&gt;楕円曲線暗号の鍵長に512bitがなく521bitがある理由 | maidsphere&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/algorithms-for-openpgp/&#34;&gt;OpenPGP で利用可能なアルゴリズム（RFC 4880bis 対応版）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート（鍵作成から失効まで）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:km1&#34;&gt;この辺については「&lt;a href=&#34;http://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;」を参照のこと。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:km1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gpd&#34;&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; v0.3.4 以降なら多分大丈夫。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpd&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:pf1&#34;&gt;素体ではなく「標数2の体（binary fields）」を使う場合もあるが，ここでは割愛する。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:pf1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ecc1&#34;&gt;楕円曲線と楕円曲線暗号については結城浩さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版&lt;/a&gt;』の付録に比較的分かりやすい解説が載っている。同じく結城浩さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00L0PDMK4/baldandersinf-22/&#34;&gt;数学ガール ガロア理論&lt;/a&gt;』が何となく分かれば楕円曲線についても何となく分かると思う。大丈夫。私も何となくしか分かっていない（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ecc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>OpenPGP 鍵管理に関する考察 - openpgp</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/openpgp/openpgp-key-management/" />
		<id>tag:text.Baldanders.info,2017-12-01:/openpgp/openpgp-key-management/</id>
		<published>2017-12-01T17:51:59+09:00</published>
		<updated>2017-12-02T16:20:26+09:00</updated>
		<summary>OpenPGP 鍵の管理について考えてみるテスト。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="openpgp" label="openpgp" scheme="http://text.baldanders.info/openpgp" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;(move from &lt;a href=&#34;http://text.baldanders.info/remark/2017/11/openpgp-key-management/&#34; title=&#34;OpenPGP 鍵管理に関する考察&#34;&gt;http://text.baldanders.info/remark/2017/11/openpgp-key-management/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;たまたま以下の記事を見かけたのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/moutend/items/5c22d6e57a74845578f6&#34;&gt;gpg (GNU Privacy Guard)の使い方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このやり方も良さそうだけど，もう少し簡単に運用できないか考えてみる。
なお &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理は目的別にアドホック（ad hoc）な運用も可能なので「これ！」という正解はない。
自分にあったやり方を考えるのも面白いと思う。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の信用モデル&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル&lt;/h2&gt;

&lt;p&gt;鍵の管理について考える前に &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデルについておさらいしておこう。&lt;/p&gt;

&lt;p&gt;最初の登場人物は Alice と Bob。
2人はそれぞれ &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵を持っていて，これを使って秘密のやり取りをしようと考えている。
持っている鍵が信用できることを証明するために，お互い相手の公開鍵に自身の鍵で電子署名を施した。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Bob-- Digital Sign --&gt;Alice
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;鍵に施されている電子署名を確認することでコンテンツに対する暗号文や電子署名が正しい鍵で行われていることが証明できるわけだ。
これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の基本。
公開鍵への電子署名を使って peer-to-peer で信用関係を結ぶ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ksp1&#34;&gt;&lt;a href=&#34;#fn:ksp1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ここで3人目の人物 Chris に登場してもらおう。
Bob と Chris は面識があり既にお互いの公開鍵で電子署名を交わしている。
しかし Alice と Chris は面識がなく電子署名を交わす機会がないとする。
Alice から見て Chris の鍵は信用できるだろうか？&lt;/p&gt;

&lt;p&gt;（念のために言うと，ここで言う「信用」は「あなたは人として信用できる」の信用ではなく「この鍵は正しく本人のものであると信用できる」の信用である）&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. trust? .-&gt;Chris
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;まず Alice から見て直接電子署名を交わした Bob の鍵が信用できるのは明らかである。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
 graph LR
   Alice[&#34;Alice&#39;s Public Key&#34;]
   Bob[&#34;Bob&#39;s Public Key&#34;]
   Chris[&#34;Chris&#39;s Public Key&#34;]

   Alice-- Digital Sign --&gt;Bob
   Alice-. trust .-&gt;Bob
   Bob-- Digital Sign --&gt;Alice
   Bob-- Digital Sign --&gt;Chris
   Chris-- Digital Sign --&gt;Bob

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Alice は Chris の公開鍵に信用できる Bob の公開鍵による電子署名を見つけたため， Bob の公開鍵と同じく Chris の公開鍵も有効であると見なすことができる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. validate! .-&gt;Chris
  Alice-. trust .-&gt;Bob
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な信用モデル “web of trust” の基本的な考え方である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tm1&#34;&gt;&lt;a href=&#34;#fn:tm1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
このことから &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理ににおいて「信用できる鍵」の条件は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;多くの電子署名（とできれば信用）が集まっていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;だと分かる。
更にこのことから派生的に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;同じ鍵が永続的に使われ続けていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;も「信用できる鍵」の条件となる。
何故なら，鍵が頻繁に変わるとその度に電子署名をやり直すことになり，鍵に署名（＝信用）が集まりにくくなるからである。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の鍵管理&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理&lt;/h2&gt;

&lt;p&gt;以上を踏まえて &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵の管理について考えてみよう。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵で運用する場合&#34;&gt;ひとつの鍵で運用する場合&lt;/h3&gt;

&lt;p&gt;一番簡単なケースで，ひとつの &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵で全てをまかなう場合を考える。
たとえば，ふだん暗号化ツールなんて全然使わないけど git commit に電子署名するためだけに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を使いたい，など。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な実装である &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の最新バージョンでは，以下に示すように，鍵の作成処理が（昔と比べて）大幅に簡略化できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵02C94DC57527A786を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d\9416E477EBA825CD1694573102C94DC57527A786.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--batch&lt;/code&gt; オプション&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gk1&#34;&gt;&lt;a href=&#34;#fn:gk1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;（または &lt;code&gt;--pinentry-mode&lt;/code&gt; オプションに &lt;code&gt;loopback&lt;/code&gt; を指定）と &lt;code&gt;--passphrase&lt;/code&gt; オプションを組み合わせて Pinentry によるパスフレーズ入力を回避できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--quick-generate-key&lt;/code&gt; コマンドの第1引数にユーザID，第2引数にアルゴリズム，第3引数に使用目的，第4引数に有効期限を指定する

&lt;ul&gt;
&lt;li&gt;アルゴリズムに &lt;code&gt;default&lt;/code&gt; を指定するか指定しない場合は既定のアルゴリズム（RSA/2048ビット）で鍵を作成する&lt;/li&gt;
&lt;li&gt;使用目的には主鍵&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:k1&#34;&gt;&lt;a href=&#34;#fn:k1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; の種類を指定する。通常は &lt;code&gt;default&lt;/code&gt; のまま（署名と証明）でよい（指定しなければ &lt;code&gt;default&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;有効期限には期間（1週間なら &lt;code&gt;7d&lt;/code&gt; または &lt;code&gt;1w&lt;/code&gt;，1年なら &lt;code&gt;12m&lt;/code&gt; または &lt;code&gt;1y&lt;/code&gt; など）を指定する。 &lt;code&gt;0&lt;/code&gt; を指定すると無期限になる（指定しないと有効期限が当日になる）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生成された鍵の状態は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成した鍵の公開鍵を配布するには&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice &amp;gt; alice-key.asc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として &lt;code&gt;alice-key.asc&lt;/code&gt; を直接配布するか&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --keyserver keys.gnupg.net --send-key alice&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として鍵サーバ（ここでは &lt;a href=&#34;http://keys.gnupg.net/&#34;&gt;&lt;code&gt;keys.gnupg.net&lt;/code&gt;&lt;/a&gt;）にアップロードすればいい。&lt;/p&gt;

&lt;p&gt;注意する点としてはパスフレーズと失効証明書を紛失・漏洩しないよう管理することであろう。
できれば失効証明書は普段使う PC や携帯端末とは別に管理しておくのが望ましい。
ちなみに &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; ではパスフレーズは何処にも保存されないので，パスフレーズを忘れてしまうと全くリカバリできなくなる（だからといってパスフレーズを設定しないというのは通常運用ではあり得ないが）。&lt;/p&gt;

&lt;p&gt;ノートPCや携帯端末には常に紛失・盗難のリスクが付きまとうが，予防に注力しすぎて現実的でない対策を執るよりも，これはもう「起こり得ること」として「事後」がスムーズに行われるようバックアップ等の準備しておくほうが賢明である。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵に複数のユーザidを付与する場合&#34;&gt;ひとつの鍵に複数のユーザIDを付与する場合&lt;/h3&gt;

&lt;p&gt;ユーザIDというのは鍵の名前 “&lt;code&gt;Alice &amp;lt;alice@examle.com&amp;gt;&lt;/code&gt;” の部分である。&lt;/p&gt;

&lt;p&gt;たとえば，以下の鍵があったとき&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これに新しいユーザID “&lt;code&gt;Alice &amp;lt;alice@examle2.com&amp;gt;&lt;/code&gt;” を付加するには &lt;code&gt;--quick-add-uid&lt;/code&gt; コマンドを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-add-uid alice &amp;#34;Alice &amp;lt;alice@examle2.com&amp;gt;&amp;#34;
$ gpg --update-trustdb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:updtd1&#34;&gt;&lt;a href=&#34;#fn:updtd1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
これで新しいユーザIDが付加された。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@examle2.com&amp;gt;
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに，この鍵を &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; にかけると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice | pgpdump -u
Old: Public Key Packet(tag 6)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@example.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 05 21
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@examle2.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:33:28 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 7d 5a
        RSA m^d mod n(2048 bits) - ...
                -&amp;gt; PKCS-1
Old: Public Subkey Packet(tag 14)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: Signature Packet(tag 2)(310 bytes)
        Ver 4 - new
        Sig type - Subkey Binding Signature(0x18).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to encrypt communications
                Flag - This key may be used to encrypt storage
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 3a a7
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ユーザID毎に電子署名（自己署名）が付与されているのがお分かりだろうか。&lt;/p&gt;

&lt;p&gt;ひとつの鍵に複数のユーザIDを付与することに関しては昔から賛否あるのだが，手段が提供されていることは覚えておいて損はないだろう。&lt;/p&gt;

&lt;h3 id=&#34;用途によって鍵を使い分けたい場合&#34;&gt;用途によって鍵を使い分けたい場合&lt;/h3&gt;

&lt;p&gt;たとえば，暗号化メール，リリースファイルの電子署名， git commit 時の電子署名といった用途毎に異なる鍵を使いたいことがある。
その場合でもそれぞれ鍵を生成して運用すればいいのだが，新しい鍵を作る度にそれぞれの鍵とやり取りを行うユーザが毎度電子署名を行うのは相当に煩雑な作業である。&lt;/p&gt;

&lt;p&gt;そこで「ルート鍵」と「運用鍵」の2種類の鍵を作って運用する。
具体的にはルート鍵と各運用鍵との間で電子署名を交わす。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  rt[Root Key]-- Digital Sign --&gt;op1[Operation Key 1]
  op1-- Digital Sign --&gt;rt

  rt-- Digital Sign --&gt;op2[Operation Key 2]
  op2-- Digital Sign --&gt;rt
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;運用鍵とやり取りするユーザは，各運用鍵ではなく，ルート鍵と署名を交わし信用度を設定することによって各運用鍵の有効性を確認できる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  usr[User&#39;s Key]
  rt[Root Key]
  op1[Operation Key 1]
  op2[Operation Key 2]

  usr-- Digital Sign --&gt;rt
  usr-. trust .-&gt;rt
  rt-- Digital Sign --&gt;usr

  usr-. validate .-&gt;op1
  rt-- Digital Sign --&gt;op1

  rt-- Digital Sign --&gt;op2
  usr-. validate .-&gt;op2

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;この方法ならユーザも各運用鍵もルート鍵とのみ信用関係を構築すればいいので柔軟な運用が可能になる。
欠点としてはルート鍵の管理が煩雑になりがちで信用に関する責務も重くなるため，かなり慎重な運用が求められることであろう。&lt;/p&gt;

&lt;h4 id=&#34;alice-のルート鍵と運用鍵&#34;&gt;Alice のルート鍵と運用鍵&lt;/h4&gt;

&lt;p&gt;では実際にやってみよう。&lt;/p&gt;

&lt;p&gt;まず Alice がルート鍵と運用鍵の運用を行うとする。
ルート鍵は電子署名を行うだけの鍵なので，以下のように署名専用鍵として作成する（アルゴリズムは DSA/3072ビット にしてみた）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34; dsa3072 default 0
gpg: *警告*: いくつかのOpenPGPプログラムはこのダイジェスト長のDSA鍵を扱うことができません
gpg: 鍵B965D53DB907EF0Eを究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;もうひとつ。
運用鍵も作っておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (commit) &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵DFFC3F67BBB3C083を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\A3CEFEEEDA222024F325C403DFFC3F67BBB3C083.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この2つの鍵でお互いに電子署名を交わす（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -u 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E --quick-sign-key A3CEFEEEDA222024F325C403DFFC3F67BBB3C083

sec  rsa2048/DFFC3F67BBB3C083
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: A3CE FEEE DA22 2024 F325  C403 DFFC 3F67 BBB3 C083

     Alice (commit) &amp;lt;alice@example.com&amp;gt;

$ gpg -u A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

sec  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで Alice の2つの鍵の署名状態はこんな感じになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-sigs alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  究極  ] Alice (root) &amp;lt;alice@example.com&amp;gt;
sig 3        B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig 3        DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig          B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一方の主鍵に他方の鍵の電子署名が付与されているのが分かるだろうか。&lt;/p&gt;

&lt;h4 id=&#34;bob-鍵で-alice-のルート鍵に電子署名する&#34;&gt;Bob 鍵で Alice のルート鍵に電子署名する&lt;/h4&gt;

&lt;p&gt;今度は Bob の側である。
まずは Bob の公開鍵をこんな感じで作ってみた（作成操作は省略）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys bob
pub   rsa2048 2017-11-23 [SC]
      B4E708652A1E81445B328A3D93F496726CBE8335
uid           [  究極  ] Bob &amp;lt;bob@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この環境に先程の Alice の公開鍵をインポートしてみる。
まずはルート鍵から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import alice-root.asc
gpg: key B965D53DB907EF0E: 鍵がないため1個の署名は検査しません
gpg: 鍵B965D53DB907EF0E: 公開鍵&amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;をインポートしました
gpg:           処理数の合計: 1
gpg:             インポート: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然ながら，この時点では読み込んだルート鍵の有効性は不明である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  不明  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では，ルート鍵に Bob の鍵で署名しよう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lsign1&#34;&gt;&lt;a href=&#34;#fn:lsign1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

pub  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 不明の        有効性: 不明の
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでルート鍵の有効性は「充分」になった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さらに信用データベースを更新して信用度も設定する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --update-trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   1  信用: 0-, 0q, 0n, 0m, 0f, 1u
信用度が指定されていません:
pub   dsa3072 2017-11-23 [SC]
      &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

他のユーザの鍵を正しく検証するために、このユーザの信用度を決めてください
(パスポートを見せてもらったり、他から得たフィンガープリントを検査したり、などなど)

  1 = 知らない、または何とも言えない
  2 = 信用し ない
  3 = まぁまぁ信用する
  4 = 充分に信用する
  s = この鍵はとばす
  q = 終了

あなたの決定は? 4
gpg: 深さ: 1  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 1f, 0u
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここでは「充分に信用する」を選択した。&lt;/p&gt;

&lt;p&gt;次に運用鍵もインポートする（操作は同じなので省略）。
この時点で Alice の公開鍵の状態を見ると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  充分  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性も既に「充分」になっていることが分かると思う。
ちなみにルート鍵の信用度を「まぁまぁ信用する」にすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [まぁまぁ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性が「まぁまぁ」になる。&lt;/p&gt;

&lt;p&gt;独りでこうした運用をやるメリットは殆どないが，プロジェクト・チーム等で一括して鍵管理を行いたい場合は有効な手段だと思う。&lt;/p&gt;

&lt;h2 id=&#34;有効期限について&#34;&gt;有効期限について&lt;/h2&gt;

&lt;p&gt;この記事ではすべての鍵を「無期限」で設定している。
公開鍵の有効期限をどのようにするかは意見が別れるところだと思うが，私個人としては原則として「無期限」にすることをお薦めする。
何故なら &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は永続性と一貫性が重要だからである。&lt;/p&gt;

&lt;p&gt;公開鍵に有効期限を設ける理由としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;期間の決まったプロジェクト内でのみ使用する鍵である&lt;/li&gt;
&lt;li&gt;チーム・メンバの出入りが激しく無期限では却って管理が煩雑になる&lt;/li&gt;
&lt;li&gt;鍵のセキュリティ強度の問題から期限を切って運用したい（たとえば RSA/2048ビット鍵が acceptable なのは2030年までである）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったところだろうか。
これならば，これまで述べたようにルート鍵と運用鍵を分けて，ルート鍵の方で永続性と一貫性を担保するように運用していくのがよいだろう。&lt;/p&gt;

&lt;p&gt;自分の鍵であれば有効期限はいつでも変更できる（変更時にパスフレーズ入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]

$ gpg --quick-set-expire A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 2y

$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC] [有効期限: 2019-11-23]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E] [有効期限: 2019-11-23]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかし，有効期限を随時延長していく運用は鍵のオーナーもそれを使うユーザも手間が増えるだけであまりメリットがない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:own1&#34;&gt;&lt;a href=&#34;#fn:own1&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は（今のところ）利用するユーザに公開鍵の変更を自動的に通知・配信する仕組みがないので（それとも cron で鍵サーバへアクセスする？），ユーザ側の手間の多い運用では取りこぼしが出る可能性が大きくなる。&lt;/p&gt;

&lt;h2 id=&#34;鍵を失効させる&#34;&gt;鍵を失効させる&lt;/h2&gt;

&lt;p&gt;秘密鍵が漏洩するなどして鍵の失効が必要になった場合には，鍵作成時に作られた失効証明書を使って失効させる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rvk1&#34;&gt;&lt;a href=&#34;#fn:rvk1&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;。
鍵作成時に作られた失効証明書の中身はこんな感じになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d

$ cat 9416E477EBA825CD1694573102C94DC57527A786.rev
これは失効証明書でこちらのOpenPGP鍵に対するものです:

pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid          Alice &amp;lt;alice@example.com&amp;gt;

失効証明書は &amp;#34;殺すスイッチ&amp;#34; のようなもので、鍵がそれ以上使えない
ように公に宣言するものです。一度発行されると、そのような失効証明書は
撤回することはできません。

秘密鍵のコンプロマイズや紛失の場合、これを使ってこの鍵を失効させます。
しかし、秘密鍵がまだアクセス可能である場合、新しい失効証明書を生成し、
失効の理由をつける方がよいでしょう。詳細は、GnuPGマニュアルのgpgコマン
ド &amp;#34;--generate-revocation&amp;#34;の記述をご覧ください。

このファイルを誤って使うのを避けるため、以下ではコロンが5つのダッシュ
の前に挿入されます。この失効証明書をインポートして公開する前に、テク
スト・エディタでこのコロンを削除してください。

:-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: This is a revocation certificate

iQE2BCABCAAgFiEElBbkd+uoJc0WlFcxAslNxXUnp4YFAloWYkcCHQAACgkQAslN
xXUnp4aG1wf/XoyxQPks2JlJ93ghQALdqCIxFPh015q21K53u0rVwTsMocwdGowR
l+/UppyBxnGyU1uIba68D787INlruMzsOyUTuruCUZ5XJpiuYYVXcRuovUmCREWF
EbW1DGd1lzmrO8cr70qu3yVCMYjGOQ6NA0fh1lpKTpFqHc3GC+ue19RDoVY1KnCC
YsWuNom4PAuUyHlH3uJLM9+F9J2Qec+0PIedxHyxuIStWOSg+/TGjD4cP3FEItIt
giRxx6qLWcK+bfg6WXv7I3+FA2J8eRKjLoD/vsZX+FpxG7T+c4mvfTUgxn0+bZD9
gxTKlFWg2bhKTcxi0EsJ9XAEmocvOolwPQ==
=ShPY
-----END PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際に使う場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;:-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;の先頭のコロンを削除して使う。
失効処理を行うには &lt;code&gt;--import&lt;/code&gt; コマンドで失効証明書をインポートすればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import 9416E477EBA825CD1694573102C94DC57527A786.rev
gpg: 鍵02C94DC57527A786:&amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34;失効証明書をインポートしました
gpg:           処理数の合計: 1
gpg:         新しい鍵の失効: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで鍵の状態は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC] [失効: 2017-11-23]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  失効  ] Alice &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり失効したことが分かる。
&lt;strong&gt;失効した公開鍵を配布するのを忘れずに！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/OpenPGP-Key-Management.html&#34;&gt;Using the GNU Privacy Guard: OpenPGP Key Management&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-1/&#34;&gt;GnuPG for Windows ― インストール編&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-2/&#34;&gt;GnuPG for Windows ― gpg-agent について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ksp1&#34;&gt;相手の公開鍵に電子署名するには (1) 相手の公開鍵を貰って &lt;code&gt;--import&lt;/code&gt; （または鍵サーバから &lt;code&gt;--recv-keys&lt;/code&gt;）する (2) インポートした鍵に &lt;code&gt;--sign-key&lt;/code&gt; する (3) 署名した公開鍵を &lt;code&gt;--export&lt;/code&gt; して相手に返す（または鍵サーバへ &lt;code&gt;--send-keys&lt;/code&gt;） といった手順を踏む。これをひとりひとりやるのは割と面倒なので，複数人が一度に電子署名を交わすために「&lt;a href=&#34;https://en.wikipedia.org/wiki/Key_signing_party&#34; title=&#34;Key signing party - Wikipedia&#34;&gt;キーサイン・パーティ（key signing party）&lt;/a&gt;」が行われることがある。日本ではあまり聞かないけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ksp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tm1&#34;&gt;もう少し詳しく言うと，公開鍵への電子署名の際に「信用度」を設定し，集まった「信用度」の累積から公開鍵の「有効性」を機械的に判定する。なので（信用度が分からない）全く未知の人の電子署名がいくらあっても「有効性」は上がりにくい。また公開鍵に電子署名を施すことは相手の鍵をある程度以上信用していることになるため，よく分からない鍵に対して安易に電子署名を行うことは避けるべきである。なお，現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では web of trust 以外にも X.509 や &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34; title=&#34;Trust on first use - Wikipedia&#34;&gt;Tofu (Trust on first use)&lt;/a&gt; といった信用モデルもサポートしている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gk1&#34;&gt;&lt;code&gt;--gen-key&lt;/code&gt; コマンドに &lt;code&gt;--batch&lt;/code&gt; オプションを組み合わせて設定ファイルから鍵を作成することも可能である。詳しい方法は “&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/Unattended-GPG-key-generation.html&#34;&gt;Unattended GPG key generation&lt;/a&gt;” が参考になるだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:k1&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵は1つの主鍵（primary key）と0個以上の副鍵（subkey）で構成されている。主鍵は必ず電子署名用の鍵になっていて，この主鍵にユーザID（とその自己署名）や他の鍵からの電子署名が付与される。副鍵は暗号化または電子署名用の鍵である。たとえば，データの暗号化と復号は実際にはこの副鍵を使って行う。副鍵は個別に追加したり失効したりできる。ちなみに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では通常のやり方では暗号化機能のみの鍵は作れない。電子署名機能のみの鍵は作ることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:k1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:updtd1&#34;&gt;&lt;code&gt;--update-trustdb&lt;/code&gt; コマンドは信用データベース（trustdb）の更新コマンドである。現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では信用度は &lt;code&gt;trustdb.gpg&lt;/code&gt; ファイルを使って鍵束とは独立に管理される。通常は鍵の状態が変わると自動的に信用データベースが更新されるのだが，自動更新しない場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドで更新できる。なお，他ユーザの公開鍵に電子署名を施した場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドを起動して署名した鍵の信用度を設定する。信用度の設定は &lt;code&gt;--edit-key&lt;/code&gt; コマンドの編集モードでも設定・変更が可能である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:updtd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:lsign1&#34;&gt;公開鍵に電子署名したことを公開したくない場合は &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで署名する。 &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで付与した署名はエクスポートされないため他ユーザには公開されない。公開鍵に関する確証はないけど取り敢えず使いたいという場合には有効な手だろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lsign1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:own1&#34;&gt;公開鍵の更新を鍵オーナーの存在証明に使うのは，あまり筋のいい運用とは思えない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:own1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:rvk1&#34;&gt;または &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで失効証明書を作成する。 &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで作成した場合は失効理由も含めることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rvk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>暗号鍵関連の各種変数について - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/key-parameters/" />
		<id>tag:text.Baldanders.info,2017-10-17:/remark/2017/10/key-parameters/</id>
		<published>2017-10-17T16:32:03+09:00</published>
		<updated>2018-12-16T14:07:16+09:00</updated>
		<summary>この記事は将来の記事で再利用するための snippet 置き場として使うことにする。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;「&lt;a href=&#34;https://qiita.com/darai0512/items/c7b47d1b3fe06c4dea7d&#34;&gt;ECDSA鍵をGitHubで使う方法&lt;/a&gt;」で SP 800-56 が Rev.4 になってるのを見て一瞬「ふぁ！」となったが，よく考えたら今年始めに書いた「&lt;a href=&#34;http://text.baldanders.info/remark/2017/02/sha-1-collision/&#34;&gt;最初の SHA-1 衝突例&lt;/a&gt;」では既に Rev.4 を参照していたのだった。
でも古い記事を見返したら結構 Rev.3 のままになってるので，このさい全部アップデートすることにした。&lt;/p&gt;

&lt;p&gt;この記事は将来の記事で再利用するための snippet 置き場として使うことにする。
表のレイアウトの関係で携帯端末で見ている人は見づらいかもしれないけど，そこはご容赦。&lt;/p&gt;

&lt;h2 id=&#34;参照資料&#34;&gt;参照資料&lt;/h2&gt;

&lt;p&gt;ここで参照する資料は，米国 &lt;a href=&#34;https://www.nist.gov/&#34; title=&#34;National Institute of Standards and Technology | NIST&#34;&gt;NIST&lt;/a&gt; の Special Publication (SP) 800-57 Part 1 で正式タイトルは「Recommendation for Key Management Part 1: General （鍵管理における推奨事項 第一部：一般事項）」となっている（日本語訳は IPA によるもの）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-4/final&#34;&gt; SP 800-57 Part 1 Rev. 4 Recommendation for Key Management, Part 1: General&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#34;&gt;NIST Special Publication 800-57 Part 1; Revision 4; Recommendation for Key Management Part 1: General &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; （&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000055490.pdf&#34;&gt;IPA による日本語版 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;セキュリティ強度と鍵長の関係&#34;&gt;セキュリティ強度と鍵長の関係&lt;/h2&gt;

&lt;p&gt;最初はセキュリティ強度と鍵長の関係を示す表。
単位は全て bit である。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;style&gt;
main table.nist2 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist2 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist2&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security&lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Symmetric&lt;br&gt; key&lt;br&gt; algorithms&lt;/th&gt;
&lt;th&gt;FFC&lt;br&gt;(e.g., DSA, D-H)&lt;/th&gt;
&lt;th&gt;IFC&lt;br&gt;(e.g., RSA)&lt;/th&gt;
&lt;th&gt;ECC&lt;br&gt;(e.g., ECDSA)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;$\le 80$&lt;/td&gt;&lt;td&gt;2TDEA&lt;/td&gt;&lt;td&gt;$L=1024$&lt;br&gt;$N=160$&lt;/td&gt;&lt;td&gt;$k=1024$&lt;/td&gt; &lt;td&gt;$f = 160\text{ - }223$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$112$&lt;/td&gt;&lt;td&gt;3TDEA&lt;/td&gt;&lt;td&gt;$L=2048$&lt;br&gt;$N=224$&lt;/td&gt; &lt;td&gt;$k=2048$&lt;/td&gt; &lt;td&gt;$f = 224\text{ - }255$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;&lt;td&gt;AES-128&lt;/td&gt;&lt;td&gt;$L=3072$&lt;br&gt;$N=256$&lt;/td&gt; &lt;td&gt;$k=3072$&lt;/td&gt; &lt;td&gt;$f = 256\text{ - }383$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;&lt;td&gt;AES-192&lt;/td&gt;&lt;td&gt;$L=7680$&lt;br&gt;$N=384$&lt;/td&gt; &lt;td&gt;$k=7680$&lt;/td&gt; &lt;td&gt;$f = 384\text{ - }511$&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;&lt;td&gt;AES-256&lt;/td&gt;&lt;td&gt;$L=15360$&lt;br&gt;$N=512$&lt;/td&gt;&lt;td&gt;$k=15360$&lt;/td&gt;&lt;td&gt;$f=512+$&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Comparable strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Symmetric key algorithms は共通鍵暗号アルゴリズム全般を指す。
たとえば AES とか。
IFC (Integer Factorization Cryptosystems) は素因数分解問題ベースの公開鍵暗号アルゴリズムで RSA がこれに該当する。
FFC (Finite Field Cryptosystems) は離散対数問題ベースの公開鍵暗号アルゴリズムで Diffie-Hellman や ElGamal, DSA などがこれに該当する。
ECC (Elliptic Curve Cryptosystems) は離散対数問題でも特に楕円曲線上の離散対数問題ベースの公開鍵暗号アルゴリズムを指す。
たとえば ECDH や ECDSA など。&lt;/p&gt;

&lt;p&gt;IFC では $k$，FFC では $L$，ECC では $f$ が鍵長を示す。
たとえばセキュリティ強度が 128bit なら&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AES 128bit&lt;/li&gt;
&lt;li&gt;ElGamal, DSA 3072bit&lt;/li&gt;
&lt;li&gt;RSA 3072bit&lt;/li&gt;
&lt;li&gt;ECDH, ECDSA 256bit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の組み合わせで「&lt;a href=&#34;https://dic.pixiv.net/a/%E3%83%93%E3%83%AB%E3%83%89%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%83%BC&#34;&gt;ベストマッチ&lt;/a&gt; キター！」となる。&lt;/p&gt;

&lt;h2 id=&#34;セキュリティ強度と-hash-関数の関係&#34;&gt;セキュリティ強度と Hash 関数の関係&lt;/h2&gt;

&lt;p&gt;次はセキュリティ強度とHash 関数の関係を示す表。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#39;en&#39;&gt;
&lt;style&gt;
main table.nist3 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist3 td  {
  //vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist3&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security &lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Digital Signatures and &lt;br&gt;hash-only applications&lt;/th&gt;
&lt;th&gt;HMAC,&lt;br&gt;Key Derivation Functions,&lt;br&gt;Random Number Generation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; $\le 8$0&lt;/td&gt;
&lt;td&gt;SHA-1&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$112$&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA3-224&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$128$&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA3-256&lt;/td&gt;
&lt;td&gt;SHA-1&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$192$&lt;/td&gt;
&lt;td&gt;SHA-384, SHA3-384&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td&gt;$\ge 256$&lt;/td&gt;
&lt;td&gt;SHA-512, SHA3-512&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256,&lt;br&gt; SHA-384,&lt;br&gt; SHA-512, SHA3-512&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Hash functions that can be used to provide the targeted security strengths (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;考え方は先程の暗号鍵長のときと同じ。
ただし Hash 関数の場合は使用目的ごとに要求されるアルゴリズムが異なるので注意が必要である。&lt;/p&gt;

&lt;h2 id=&#34;セキュリティ強度と有効期限&#34;&gt;セキュリティ強度と有効期限&lt;/h2&gt;

&lt;p&gt;こちらはセキュリティ強度の有効期限を表したものだ。&lt;/p&gt;

&lt;div&gt;
&lt;figure lang=&#39;en&#39;&gt;
&lt;style&gt;
main table.nist4 th  {
  vertical-align:middle;
  text-align: center;
}
main table.nist4 td  {
  vertical-align:middle;
  text-align: center;
}
&lt;/style&gt;
&lt;table class=&#34;nist4&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;2&#39;&gt;Security Strength&lt;/th&gt;
&lt;th&gt;Through&lt;br&gt; 2030&lt;/th&gt;
&lt;th&gt;2031 and&lt;br&gt; Beyond&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td rowspan=&#39;2&#39;&gt;$\lt 112$&lt;/td&gt;&lt;td&gt;Applying&lt;/td&gt;  &lt;td colspan=&#39;2&#39;&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                              &lt;td&gt;Processing&lt;/td&gt;&lt;td colspan=&#39;2&#39;&gt;Legacy-use&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td rowspan=&#39;2&#39;&gt;$112$&lt;/td&gt;    &lt;td&gt;Applying&lt;/td&gt;  &lt;td rowspan=&#39;2&#39;&gt;Acceptable&lt;/td&gt;&lt;td&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                              &lt;td&gt;Processing&lt;/td&gt;                               &lt;td&gt;Legacy use&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td&gt;$128$&lt;/td&gt;                &lt;td rowspan=&#39;3&#39;&gt;Applying/Processing&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$192$&lt;/td&gt;                                   &lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;$256$&lt;/td&gt;                                   &lt;td&gt;Acceptable&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Security-strength time frames (via &lt;q&gt;&lt;a href=&#39;https://doi.org/10.6028/NIST.SP.800-57pt1r4&#39;&gt;SP800-57 Part 1 Revision 4 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;各用語はそれぞれ&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;用語&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Applying&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;適用&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Processing&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;処理&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Acceptable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;許容&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Legacy-use&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;許容（レガシー使用のみ）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Disallowed&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;禁止&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;という意味だ。
例を挙げると，セキュリティ強度 112bit の暗号スイート（Cipher Suites）を適用する場合は2030年までは許容するけど2031年以降は禁止。
すでに暗号化されているデータを復号したい場合でも，2031年以降はレガシー・システムしか許容しない，ということになる。&lt;/p&gt;

&lt;p&gt;たとえば ssh 認証は「適用」なので多くの人が使ってる RSA 2048bit の鍵は2031年以降は使用禁止となるわけだ。
まぁ，そんな先まで同じシステムで同じ鍵を使い続けるかどうかは分からないが（なので今使ってる鍵を慌てて新調する必要はない。新規に作成するなら 128bit 強度の鍵をお勧めするが）。&lt;/p&gt;

&lt;p&gt;なおこれは各アルゴリズムに危殆化要因となる脆弱性等がない場合の話である。
したがって暗号製品を使うシステムの管理者やセキュリティ管理者は常に暗号関係のトピックに耳を澄ませておくべきであろう。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-で利用可能なアルゴリズム&#34;&gt;OpenPGP で利用可能なアルゴリズム&lt;/h2&gt;

&lt;p&gt;この項は「&lt;a href=&#34;http://text.baldanders.info/openpgp/algorithms-for-openpgp/&#34;&gt;OpenPGP で利用可能なアルゴリズム&lt;/a&gt;」に移動した。&lt;/p&gt;

&lt;h2 id=&#34;パスワードの強度&#34;&gt;パスワードの強度&lt;/h2&gt;

&lt;p&gt;これは &lt;a href=&#34;https://www.nist.gov/&#34; title=&#34;National Institute of Standards and Technology | NIST&#34;&gt;NIST&lt;/a&gt; ではなく IPA の資料だが，文字種と文字数の組み合わせによるパスワードの強度についても上げておこう。
出典は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ipg/documents/dev_setting_crypt.html&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.ipa.go.jp/files/000026760.pdf&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;4&#39;&gt;利用する文字種類数と内訳&lt;/th&gt;
&lt;th colspan=&#39;4&#39;&gt;パスワード長&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;種類数&lt;/th&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;文字&lt;/th&gt;
&lt;th&gt;シンボル&lt;/th&gt;
&lt;th&gt;4文字&lt;/th&gt;
&lt;th&gt;8文字&lt;/th&gt;
&lt;th&gt;12文字&lt;/th&gt;
&lt;th&gt;16文字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;10種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;      &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{13.3}$）&lt;/td&gt;&lt;td&gt;1円未満（$2^{26.6}$）&lt;/td&gt;  &lt;td&gt;約35円（$2^{39.9}$）&lt;/td&gt;     &lt;td&gt;約35万円（$2^{53.2}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;36種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;/td&gt;       &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{20.7}$）&lt;/td&gt;&lt;td&gt;約100円（$2^{41.4}$）&lt;/td&gt;  &lt;td&gt;約1.65億円（$2^{62.0}$）&lt;/td&gt; &lt;td&gt;約276兆円（$2^{82.7}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;62種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{23.8}$）&lt;/td&gt;&lt;td&gt;約7,500円（$2^{47.6}$）&lt;/td&gt;&lt;td&gt;約1,120億円（$2^{71.5}$）&lt;/td&gt;&lt;td&gt;約165京円（$2^{95.3}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;94種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;&lt;code style=&#39;font-size:smaller;&#39;&gt;! &#34; # $ %&lt;br&gt;&amp;amp; &#39; ( ) =&lt;br&gt;~ | - ^ `&lt;br&gt;¥ { @ [&lt;br&gt;+ * ] ; :&lt;br&gt;} &amp;lt; &amp;gt; ? _&lt;br&gt;, . /&lt;/code&gt;&lt;/td&gt;
                                                             &lt;td&gt;1円未満（$2^{26.2}$）&lt;/td&gt;&lt;td&gt;約21万円（$2^{52.4}$）&lt;/td&gt; &lt;td&gt;約16.5兆円（$2^{78.7}$）&lt;/td&gt; &lt;td&gt;約129,000京円（$2^{104.9}$）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;パスワード解読の想定コスト例（&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より）&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;測定基準は以下の通り。&lt;/p&gt;

&lt;div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;利用できる文字種類すべてを完全にランダムに選択して作ったパスワードを一つ一つ調べる全数探索により1日で解読しようとした際にかかるおおまかな想定攻撃コストを示しています。ここでは、全数探索(暗号鍵の総数256)でDES10を1日で解読するためのコストを約250万円と仮定します。また、パスワードを1つ検査するのとDESの暗号鍵を1つ検査するコストは同じであるとし、パスワードを求めるのに必要な計算量(検査する個数)が半分になればコストも半分、2倍になればコストも2倍になるものとしています。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000740.shtml&#34;&gt;CRYPTREC Report 2013 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000810.shtml&#34;&gt;Prohibiting RC4 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cryptrec.go.jp/topics/cryptrec_20151218_sha1_cryptanalysis.html&#34;&gt;CRYPTREC | SHA-1の安全性について&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://www.cryptrec.go.jp/report/c13_tech_guideline_SHA-1_web.pdf&#34;&gt;CRYPTREC暗号技術ガイドライン(SHA-1) &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://blog.visvirial.com/articles/519&#34;&gt;scryptがGPUに破られる時 | びりあるの研究ノート&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/02/sha-1-collision/&#34;&gt;最初の SHA-1 衝突例&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/10/changes-in-password-best-practices/&#34;&gt;「パスワードのベストプラクティス」が変わる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; height=&#34;160&#34; alt=&#34;暗号技術入門 第3版　秘密の国のアリス&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018.12.15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; &gt;Amakuri&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; height=&#34;160&#34; alt=&#34;暗号化 プライバシーを救った反乱者たち&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4314009071/baldandersinf-22&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018.12.16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://dadadadone.com/amakuri/&#34; &gt;Amakuri&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
