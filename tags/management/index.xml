<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of management - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/management/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/management/index.xml" />
	<id>tag:text.Baldanders.info,2022-10-15:/tags</id>
	<updated>2022-10-15T11:43:48+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>「識別、認証、許可」</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/10/identification-authentication-authorization/" />
		<id>tag:text.Baldanders.info,2022-10-15:/remark/2022/10/identification-authentication-authorization/</id>
		<published>2022-10-15T02:43:48+00:00</published>
		<updated>2022-10-15T02:47:38+00:00</updated>
		<summary>セキュリティ・システムを組む場合の肝は識別，認証，許可の3つをきちんと分離し上手く組み合わせることである。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;セキュリティ・システムを組む場合の肝は識別（identification），認証（authentication），許可（authorization）の3つを（設計概念上）きちんと分離し，かつそれらを上手く組み合わせることである。&lt;/p&gt;
&lt;p&gt;この辺の話は Bruce Schneier さんの名著『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;（原著名 “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Beyond Fear&lt;/a&gt;”）』の13章で詳しく解説されている。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;p&gt;これによると 識別・認証・許可 の各機能は以下の通り。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;識別&lt;/strong&gt;： あなたは誰？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;認証&lt;/strong&gt;： 証明しろ&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;許可&lt;/strong&gt;： この範囲のことはしてもよい&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『セキュリティはなぜやぶられたのか』 p269&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;さらに言うと，コンピュータ・システムでは 識別・認証・許可 はそれぞれ「トークン」として符号化されることが多く，そのトークンを認証（certification）する機能も要求される。&lt;/p&gt;
&lt;p&gt;たとえば映画館の入場券は純粋に許可トークンである。
このトークンがあれば誰が入場しようと問題ない。
たとえそれが他者から奪い取ったものだとしても。&lt;/p&gt;
&lt;p&gt;ライブチケットも同様に許可トークンだが，近年では転売屋対策で，「誰」が購入したものか特定するために識別トークンを兼ねていることが多い。
この場合，入場時にチケットを持っているのが本人かどうか証明する必要があるため何らかの認証トークンと紐付けることになる。&lt;/p&gt;
&lt;p&gt;これで 識別・認証・許可 について何となくイメージできただろうか。
では本題へ。&lt;/p&gt;
&lt;p&gt;昨今，「&lt;ruby&gt;&lt;rb&gt;個人番号&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;マイナンバー&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」が某日本政府の無茶振りによりまたぞろ話題になっているが，個人番号自体はただの識別トークンであり，それ単体では何も認証しないし何も許可されない。
個人番号はお役所などの窓口で提示することで（主にお役所側の都合で）各種業務フローを簡素化できると期待されている。
つまり個人番号と本人がセットになることではじめて認証も許可も機能し始めるのだ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;私も&lt;a href=&#34;https://text.baldanders.info/remark/2022/02/moving-2022/&#34; title=&#34;引っ越し 2022&#34;&gt;引っ越し&lt;/a&gt;をした時に個人番号カードを提示するだけで各種届け出を全部やってもらったので有り難かった記憶がある。
もっとも引っ越すたびに個人番号カードを書き換えないといけないので，利用者にとってホンマに便利か微妙なところであるが（笑）&lt;/p&gt;
&lt;p&gt;その個人番号カードであるが，これには「利用者証明用電子証明書」が組み込まれている。
また希望者には住基ネットの「署名用電子証明書」を組み込むこともできる。
署名用電子証明書は，確定申告をネットで行う人にはおなじみのやつだ。
つまり「個人番号カード」のほうは認証トークンを兼ねているのである。
これは非常に重要な機能である。&lt;/p&gt;
&lt;p&gt;署名用電子証明書はある程度長いパスワードで秘匿できるが&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，利用者証明用電子証明書のほうは4桁の暗証番号のみでロックされている。
さらに言うと昨今では個人番号カードの&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/my-number-card/&#34; title=&#34;引っ越ししたら個人番号カードを更新しましょう&#34;&gt;3つの暗証番号を同一にするよう勧められる&lt;/a&gt;らしい。&lt;/p&gt;
&lt;p&gt;認証トークンとしての個人番号カードが（住基周りを除いて）こんなに緩いのは「個人番号」自体が所詮はお役所サービスのためのシステムに過ぎないからだと認識しているのだが，どうだろう。&lt;/p&gt;
&lt;p&gt;でも，ここで個人番号カードに健康保険証や運転免許証を統合し，これによって個人番号カード所持を事実上強制しようという動きがある。
健康保険や運転免許のシステムを個人番号の下に統合しようというのなら分かる（実装の仕方にもよるが）。
しかし個人番号カードは単なる情報（数字列）ではなく物理媒体であり，かつ行政サービス向けの重要な（割に運用の緩い）認証トークンである点が問題である。&lt;/p&gt;
&lt;p&gt;私は個人番号カードは普段持ち歩かないようにしている（当然だよね）。
一方で持病持ちの私は健康保険証は肌身離さず持ち歩かざるを得ない。
運転免許証についても身分証明証代わりに持ち歩いている人もいればクルマのダッシュボードに入れっぱなしの人もいるだろう。
また紛失・盗難が起きた際のインパクトも「事後」の取り扱いも利用者およびサービスによって全く異なる。&lt;/p&gt;
&lt;p&gt;たとえば個人番号カードに健康保険証を組み込んだ場合，個人番号カード紛失時の再取得に手間と時間がかかるし（平日に有給休暇を取ってお役所詣で），その上で健康保険証機能も再発行してもらわないといけない。
私のような持病持ちには無視できないインパクトだ。
年に1回利用するかしないか程度のお役所サービスを受けるために日常的に使っているサービスが巻き添えになるのである。&lt;/p&gt;
&lt;p&gt;まとめよう。&lt;/p&gt;
&lt;p&gt;カード媒体は紛失・盗難リスクが高い。
付随するサービスによって扱いは異なるし，可能であれば「所持しない」のが最善と言える。
それを「お買い物ポイント」で釣って運用リスクやコストの高いものを所持させるとかどこの詐欺師かって感じだし，ましてや利用ドメインの異なるサービスを抱き合わせにしようとか鬼畜としか言いようがない。&lt;/p&gt;
&lt;p&gt;できれば勘弁して欲しいところであるが，どうなるやら。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.hyuki.com/techinfo/uniqid.html&#34;&gt;固有IDのシンプル・シナリオ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/bottleneck/&#34;&gt;「特別定額給付金」申請のナニがダメだったのか&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/06/bottleneck2/&#34;&gt;「特別定額給付金」申請のナニがダメだったのか（その2）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/09/my-number-and-my-number-card/&#34;&gt;個人番号と個人番号カード&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;個人番号は秘密情報ではないが重要な個人情報のひとつではある。個人番号がもたらすプライバシー上のリスクは当然あるが，この記事で書くとカオスになるので言及しない。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;住基関連の機能を使う場合は専用の暗証番号でアンロックし，その上で署名のためのパスワードを入力する必要がある。つまり二重にロックされているわけだ。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>命のリスク・トレードオフ</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/09/risk-management/" />
		<id>tag:text.Baldanders.info,2022-09-10:/remark/2022/09/risk-management/</id>
		<published>2022-09-10T00:40:40+00:00</published>
		<updated>2022-09-10T02:08:36+00:00</updated>
		<summary>大抵は自分の主張に都合のいいリスクに対しては声高に叫ぶが，リスク間のトレードオフについては口を閉ざす</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;久しぶりに11年前に書いてた自ブログ記事を眺めていたが「&lt;a href=&#34;https://baldanders.info/blog/000546/&#34;&gt;日本学術学会は原発に批判的？&lt;/a&gt;」に&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
リスクにおける「基準値」はリスク評価に対して特定の条件を加えたもので，その条件は政治的な判断にならざるをえない場合が多い。 放射線量の基準値が平時と有事で異なるのはそのためだ。 リスクは系全体で最小となるようにマネジメントされなければならない。 だから「条件」を巡って議論が起きるのは不思議なことではない。 ただ傍で見てて「それって科学なの？」という思いはあるけど
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://baldanders.info/blog/000546/&#34;&gt;日本学術学会は原発に批判的？&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という記述を見つけて「日本てば10年経っても何も進歩しなかったんだな」と暗澹たる気持ちになった。
もちろん「コロナ」の話だよ。&lt;/p&gt;
&lt;p&gt;リスクに関して細かい話は色々あるが，大雑把には&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;リスクは定量評価である&lt;/li&gt;
&lt;li&gt;リスクはリスクとしかトレードオフできない&lt;/li&gt;
&lt;li&gt;リスクは系全体で最小（ゼロではない）となるようマネジメントされなければならない&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といった辺りが重要である。&lt;/p&gt;
&lt;p&gt;たとえば疾病関連のリスクは基本的には「損失余命リスク」で評価する。
これ自体は妥当だと思う。
問題は疾病関連リスクしか見ないことにある。
たとえば社会的な経済活動が減退して困窮したり絶望したりする人が増えれば，これまもた「損失余命リスク」と言える。
つまり，感染症の大規模感染を抑える行動とそれによる経済活動の減退とのトレードオフは「損失余命リスク」評価の下に議論することもできる。&lt;/p&gt;
&lt;p&gt;でも実際には，あるリスクを減らすための行動を他のリスクと絡めて考えている人は（専門家も含めて）少ないように見える。
大抵は自分の主張に都合のいいリスクに対しては声高に叫ぶが，リスク間のトレードオフについては口を閉ざす。
これでは正しい「政治判断」はできないのではないか。
浪花節で社会は回らない。&lt;/p&gt;
&lt;p&gt;お金は大事だし，実のところリスクはお金（の量）に換算できる。
身も蓋もないことを言えば感染症リスクも不況の影響もお金持ちなら解決できる。
でも，政治決断としてリスクに対してお金を出すのなら（社会全体で）きちんと抑制効果が出るものでなければ意味がない。
考えなしにお金やポイント・クーポン券をばら撒くのはただの政治腐敗である。&lt;/p&gt;
&lt;p&gt;それとも「不況だからマイナポイントをばら撒く」というのが令和時代のトレンドなのだろうか。&lt;/p&gt;
</content>
	</entry><entry>
		<title>アクセス制御状態の4分類</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/08/taxonomy-of-access-control/" />
		<id>tag:text.Baldanders.info,2022-08-16:/remark/2022/08/taxonomy-of-access-control/</id>
		<published>2022-08-16T03:41:39+00:00</published>
		<updated>2022-08-16T03:42:36+00:00</updated>
		<summary>Bruce Schneier 先生の記事より</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://www.schneier.com/&#34;&gt;Bruce Schneier&lt;/a&gt; 先生の記事より：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/08/a-taxonomy-of-access-control.html&#34;&gt;A Taxonomy of Access Control - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;元ネタは Cryptocurrency Wallet (何となく嫌なので日本語で書いてやらんw) に関する以下の論文：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://eprint.iacr.org/2021/1522.pdf&#34;&gt;On Cryptocurrency Wallet Design &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abstract には&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;The security of individual keys was widely studied with practical solutions available, from mnemonic phrases to dedicated hardware. There are also techniques for securing funds by requiring combinations of multiple keys. However, to the best of our knowledge, a crucial question was never addressed: How is wallet security affected by the number of keys, their types, and how they are combined? This is the focus of this work.&lt;/p&gt;
&lt;p&gt;We present a model where each key has certain probabilities for being &lt;em&gt;safe&lt;/em&gt;, &lt;em&gt;lost&lt;/em&gt;, &lt;em&gt;leaked&lt;/em&gt;, or &lt;em&gt;stolen&lt;/em&gt; (available only to an attacker). The number of possible wallets for a given number of keys is the Dedekind number, prohibiting an exhaustive search with many keys. Nonetheless, we bound optimal-wallet failure probabilities with an evolutionary algorithm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://eprint.iacr.org/2021/1522.pdf&#34;&gt;On Cryptocurrency Wallet Design&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とあるが， Bruce Schneier さんが&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/08/a-taxonomy-of-access-control.html&#34; title=&#34;A Taxonomy of Access Control - Schneier on Security&#34;&gt;指摘&lt;/a&gt;される通り，これはもっと一般的なアクセス制御に関わるアカウント情報や暗号鍵の状態についても応用可能となる。
すなわち：&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34;&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;safe&lt;/th&gt;&lt;td&gt;Only the user has access,&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;loss&lt;/th&gt;&lt;td&gt;No one has access,&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;leak&lt;/th&gt;&lt;td&gt;Both the user and the adversary have access, or&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;theft&lt;/th&gt;&lt;td&gt;Only the adversary has access&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://eprint.iacr.org/2021/1522.pdf&#34;&gt;On Cryptocurrency Wallet Design&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;の4つの状態を定義することで&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Once you know these states, you can assign probabilities of transitioning from one state to another (someone hacks your account and locks you out, you forgot your own password, etc.) and then build optimal security and reliability to deal with it.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/08/a-taxonomy-of-access-control.html&#34;&gt;A Taxonomy of Access Control&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;というわけだ。
件の論文はこの4状態とその関係を定量的に評価している点で素晴らしく，他のセキュリティ評価にも使えるため “&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/08/a-taxonomy-of-access-control.html&#34; title=&#34;A Taxonomy of Access Control - Schneier on Security&#34;&gt;It’s a truly elegant way of conceptualizing the problem&lt;/a&gt;” と絶賛されているのだろう。&lt;/p&gt;
&lt;p&gt;というわけで，覚え書きとして記しておく。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
</content>
	</entry><entry>
		<title>オープンソース製品とソフトウェア部品表</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/08/software-bills-of-materials/" />
		<id>tag:text.Baldanders.info,2022-08-09:/remark/2022/08/software-bills-of-materials/</id>
		<published>2022-08-09T11:31:46+00:00</published>
		<updated>2022-08-11T04:06:27+00:00</updated>
		<summary>ブログってのはこういう粗結合連鎖が面白いと思うのだけどねぇ</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;拙作の &lt;a href=&#34;https://github.com/goark/depm&#34; title=&#34;goark/depm: Visualize depndency packages and modules&#34;&gt;depm&lt;/a&gt; で利用している &lt;a href=&#34;https://github.com/google/licenseclassifier&#34; title=&#34;google/licenseclassifier: A License Classifier&#34;&gt;github.com/google/licenseclassifier&lt;/a&gt; パッケージの v2 系モジュールがいい感じにバージョンが上がってきたので，どのくらい使えるようになったのか試してみた記事がこれ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20220806-licenseclassifier&#34;&gt;ライセンスファイルからライセンスを推定する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で，この記事について有り難くも「&lt;a href=&#34;https://twitter.com/fu7mu4/status/1556141959755886593&#34;&gt;SPDX License identifier にも触れて欲しい&lt;/a&gt;」というリクエストを頂いたので &lt;a href=&#34;https://spdx.dev/&#34; title=&#34;International Open Standard (ISO/IEC 5962:2021) - Software Package Data Exchange (SPDX)&#34;&gt;SPDX (Software Package Data Exchange)&lt;/a&gt; についてちょろんと紹介する文章を追記した。
これを書くためにサイトを眺めて初めて気がついたのだが &lt;a href=&#34;https://spdx.dev/&#34; title=&#34;International Open Standard (ISO/IEC 5962:2021) - Software Package Data Exchange (SPDX)&#34;&gt;SPDX&lt;/a&gt; が &lt;a href=&#34;https://www.iso.org/standard/81870.html&#34; title=&#34;ISO - ISO/IEC 5962:2021 - Information technology — SPDX® Specification V2.2.1&#34;&gt;ISO/IEC 5962:2021&lt;/a&gt; として標準化されていたらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linuxfoundation.org/featured/spdx-becomes-internationally-recognized-standard-for-software-bill-of-materials/&#34;&gt;SPDX Becomes Internationally Recognized Standard for Software Bill of Materials - Linux Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Between eighty and ninety percent (80%-90%) of a modern application is assembled from open source software components. An SBOM accounts for the software components contained in an application — open source, proprietary, or third-party — and details their provenance, license, and security attributes. SBOMs are used as a part of a foundational practice to track and trace components across software supply chains. SBOMs also help to proactively identify software issues and risks and establish a starting point for their remediation.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.linuxfoundation.org/featured/spdx-becomes-internationally-recognized-standard-for-software-bill-of-materials/&#34;&gt;SPDX Becomes Internationally Recognized Standard for Software Bill of Materials&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://www.iso.org/standard/81870.html&#34; title=&#34;ISO - ISO/IEC 5962:2021 - Information technology — SPDX® Specification V2.2.1&#34;&gt;ISO/IEC 5962:2021&lt;/a&gt; がリリースされたのが2021年8月。
その年の年末に例の &lt;a href=&#34;https://text.baldanders.info/remark/2021/12/log4j-vulnerability/&#34; title=&#34;ava 製 Logger “Log4j” の脆弱性について&#34;&gt;Apache Log4j の脆弱性&lt;/a&gt;に端を発したソフトウェア・サプライチェーン脆弱性の問題が大きく取り上げられることになった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20211222/apache-log4j&#34;&gt;Apache Log4jの脆弱性とともに浮かび上がったオープンソースのメンテナの責任範囲の問題 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;どーりで今年（2022年）に入ってやたらと「ソフトウェア部品表（Software Bill of Materials; SBOM）」の話を聞くようになったわけだ。&lt;/p&gt;
&lt;p&gt;更にタイミングのいいことに7月下旬に以下の記事が公開されていたのを yomoyomo さんの記事で知った。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lawfareblog.com/open-source-security-how-digital-infrastructure-built-house-cards&#34;&gt;Open-Source Security: How Digital Infrastructure Is Built on a House of Cards  - Lawfare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/07/securing-open-source-software.html&#34;&gt;Securing Open-Source Software - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220808/open-source-security&#34;&gt;オープンソースのセキュリティ：デジタルインフラは砂上の楼閣に築かれている？ - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Importantly, the culprit was not the developers of the code but the company that &lt;a href=&#34;https://techcrunch.com/2018/12/10/equifax-breach-preventable-house-oversight-report/&#34;&gt;failed to implement a patch&lt;/a&gt; that promised to prevent the very thing that happened. Many observers complain that Equifax has suffered little consequence for its negligence, highlighting weak oversight and accountability structures.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.lawfareblog.com/open-source-security-how-digital-infrastructure-built-house-cards&#34;&gt;Open-Source Security: How Digital Infrastructure Is Built on a House of Cards&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;これに対し、最近では連邦取引委員会が Log4Shell の対応パッチの適用が遅い企業を強制措置をかますなど、政府がオープンソースのセキュリティ問題に介入する姿勢を見せつつある。著者はその一環としての SBOM（Software Bill Of Materials：ソフトウェア部品表）を評価するが、それだけでは不十分と断じる。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220808/open-source-security&#34;&gt;オープンソースのセキュリティ：デジタルインフラは砂上の楼閣に築かれている？&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;An SBOM is simply a list of the ingredients, or codebases, that comprise software you purchased. It does not provide a list of vulnerabilities nor does it impose any minimum security requirements on the vendor generating the SBOM. Comparable to a list of ingredients on a snack or medication you purchase, the information is only as useful as your ability to parse it.&lt;/p&gt;
&lt;p&gt;To operationalize an SBOM, a company must be able to read it, which is a challenge as there is no mandated standard format for an SBOM, and actually use it to check databases such as the &lt;a href=&#34;https://nvd.nist.gov/&#34;&gt;National Vulnerability Database (NVD)&lt;/a&gt; for new vulnerabilities found in the software components the SBOM lists. These activities are costly and cumbersome. While Google and Intel might have the resources and security maturity to demand machine-readable SBOMs and regularly scan databases for new vulnerabilities that impact their systems, there are countless small businesses using open source that cannot.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.lawfareblog.com/open-source-security-how-digital-infrastructure-built-house-cards&#34;&gt;Open-Source Security: How Digital Infrastructure Is Built on a House of Cards&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;著者は、もはや公共財の性質を持つオープンソースを維持する制度的構造を構築する必要があると訴える。そして、それ自体は目新しい主張ではない。それには効率的な資源配分を確保し、最低基準を課すことが必要になるが、果たしてそれをオープンソースプロジェクトに適用するのはうまくいくかねというのがワタシの感想になる。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220808/open-source-security&#34;&gt;オープンソースのセキュリティ：デジタルインフラは砂上の楼閣に築かれている？&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;個人的には FOSS 製品を「公共財」と見なす向きには違和感や危うさを感じてしまうのだが，もはや四の五の言ってられねー，って感じなのだろう。
せめて &lt;a href=&#34;https://spdx.dev/&#34; title=&#34;International Open Standard (ISO/IEC 5962:2021) - Software Package Data Exchange (SPDX)&#34;&gt;SPDX&lt;/a&gt; が SBOM の標準としてセキュリティ・リスク管理に上手く組み込まれることを期待したい。&lt;/p&gt;
&lt;p&gt;報告される脆弱性の量的評価としての CVSS，ソフトウェア・サプライチェーンの構成を可視化する &lt;a href=&#34;https://spdx.dev/&#34; title=&#34;International Open Standard (ISO/IEC 5962:2021) - Software Package Data Exchange (SPDX)&#34;&gt;SPDX&lt;/a&gt;/SBOM，脆弱性が報告された際のアクションを支援する SSVC&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; といった道具・手段を組み合わせて，脆弱性報告から対応までのワークフローがスムーズに流れるようになるといいなぁ，と思ったり。
まぁ，そのワークフロー自体がソフトウェア・サプライチェーンだったりするのだが（笑）&lt;/p&gt;
&lt;p&gt;しかし，ブログってのはこういう粗結合連鎖が面白いと思うのだが「&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220808/pc-crash&#34; title=&#34;恥さらし文章「ある「パソコンの大先生」の死」に寄せられたありがたいコメントの数々 - YAMDAS現更新履歴&#34;&gt;ブログの退潮&lt;/a&gt;」はもはや避けられぬか（笑）&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://snyk.io/&#34; title=&#34;Snyk | Developer security | Develop fast. Stay secure.&#34;&gt;Synk&lt;/a&gt; と SBOM&lt;/h2&gt;
&lt;p&gt;開発者向けのセキュリティ関連サービスを提供している &lt;a href=&#34;https://snyk.io/&#34; title=&#34;Snyk | Developer security | Develop fast. Stay secure.&#34;&gt;Synk&lt;/a&gt; は &lt;a href=&#34;https://spdx.dev/&#34; title=&#34;International Open Standard (ISO/IEC 5962:2021) - Software Package Data Exchange (SPDX)&#34;&gt;SPDX&lt;/a&gt;/SBOM について以下のように述べている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Snyk integrates with a wide range of different package managers and developer tools to help identify vulnerabilities in the software components used. In doing that we need to build up a SBOM under the hood, normalising the list of software and augmenting that list with additional metadata from other sources. The Snyk tooling mainly focuses on presenting that information alongside information about vulnerabilities, but Snyk customers can access that raw SBOM via our built-in reporting or &lt;a href=&#34;https://snyk.docs.apiary.io/#reference/dependencies/dependencies-by-organization/list-all-dependencies&#34;&gt;powerful API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In fact, you can think of Snyk client tools like the CLI and CI/CD plugins as generating an SBOM, while Snyk’s backend takes an SBOM and returns vulnerability data, or provides automation around that data to help you fix issues. It’s this extensive experience that leads to our interest in emerging standards in this space.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://snyk.io/blog/advancing-sbom-standards-snyk-spdx/&#34;&gt;Advancing SBOM standards: Snyk and SPDX | Snyk&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;Microsoft と SBOM&lt;/h2&gt;
&lt;p&gt;忘れていたが Microsoft も SBOM を自動生成するツールを OSS で出してたんだっけ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/engineering-at-microsoft/microsoft-open-sources-software-bill-of-materials-sbom-generation-tool/&#34;&gt;Microsoft open sources its software bill of materials (SBOM) generation tool - Engineering@Microsoft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/22/sbomsbom_tool.html&#34;&gt;マイクロソフト、ビルド時にソフトウェアの部品表（SBOM）を自動生成する「SBOM Tool」、オープンソースで公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;p&gt;具体的には、ソフトウェア名やライセンス、作成者、バージョン、個々のファイルのハッシュ値などの情報を、SBOMのフォーマットとしての標準の1つである「SPDX」（Software Package Data Exchange）形式で出力してくれます。&lt;/p&gt;
&lt;p&gt;また、ビルドの対象となるソフトウェアにSBOMが用意されている場合、新たに生成されるSBOMにはそのSBOMの情報をきちんととりまとめて生成することが可能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/22/sbomsbom_tool.html&#34;&gt;マイクロソフト、ビルド時にソフトウェアの部品表（SBOM）を自動生成する「SBOM Tool」、オープンソースで公開&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まぁ，メインの文章でも紹介したように「SBOM をどう使うか」が重要なんだけどね。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pwc.com/jp/ja/knowledge/column/awareness-cyber-security/stakeholder-specific-vulnerability-categorization.html&#34;&gt;SSVC（Stakeholder-Specific Vulnerability Categorization）を活用した脆弱性管理 | PwC Japanグループ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20220402-how-go-mitigates-supply-chain-attacks&#34;&gt;Go はどのようにしてサプライチェーン攻撃を低減しているか&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/07/slow-motion-car-crash/&#34;&gt;「ブログはやはり『死に続けている』」&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;SSVC (Stakeholder-Specific Vulnerability Categorization) については “&lt;span&gt;&lt;a href=&#34;https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=653459&#34;&gt;Prioritizing Vulnerability Response: A Stakeholder-Specific Vulnerability Categorization (Version 2.0) &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;” あたりを参照のこと。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>悪意のコードを含む多数の分岐リポジトリが見つかった話</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/08/malicious-code-in-many-forked-repositories/" />
		<id>tag:text.Baldanders.info,2022-08-04:/remark/2022/08/malicious-code-in-many-forked-repositories/</id>
		<published>2022-08-03T23:12:52+00:00</published>
		<updated>2022-08-04T10:37:19+00:00</updated>
		<summary>今回の件は spam の一種とみなすこともできる</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;2022-08-03 頃の Twitter TL でちょっとした騒ぎを見かけたのだが，詳細記事が出たらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;35,000 code repos not hacked—but clones flood GitHub to serve malware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最初は各リポジトリに悪意のコードがねじ込まれたのか？ とリポジトリ・アクセスの認証周りを疑ったが，実はそうではなく&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Rather, the thousands of backdoored projects are copies (forks or clones) of legitimate projects purportedly made by threat actors to push malware.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;35,000 code repos not hacked—but clones flood GitHub to serve malware&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ということらしい。
GitHub の公式 tweet にも&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;GitHub is investigating the Tweet published Wed, Aug. 3, 2022:&lt;br&gt;* No repositories were compromised&lt;br&gt;* Malicious code was posted to cloned repositories, not the repositories themselves&lt;br&gt;* The clones were quarantined and there was no evident compromise of GitHub or maintainer accounts&lt;/p&gt;&amp;mdash; GitHub Security (@GitHubSecurity) &lt;a href=&#34;https://twitter.com/GitHubSecurity/status/1554843443200806913?ref_src=twsrc%5Etfw&#34;&gt;August 3, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;/figure&gt;
&lt;p&gt;とあり，ひと安心といったところ。&lt;/p&gt;
&lt;p&gt;知らない人のために一応解説しておくと GitHub には pull request という仕組みがあり，他者のリポジトリにコードを貢献したい場合に自身のリポジトリに分岐（fork）させた上でコードを変更・追加し，そのコードを対象のリポジトリにマージするよう提案を行うことができる。
提案を受けた側は，そのコードのレビューを行った上で明示的な操作でコードを受け入れることができる。
もちろんダメなら拒否もできる。&lt;/p&gt;
&lt;p&gt;Pull request は GitHub アカウントを持つユーザなら誰でも可能であり，その過程で悪意のコードを忍ばせることは形式上は可能である。
まぁ，普通は「そういう PR はレビューで拒否しましょうね」となるだろうし，一度そんなコードを送りつけた相手を二度と信用することはないだろう。
なので今回の件は spam の一種とみなすこともできる。
実際，アホみたいな数だしね。&lt;/p&gt;
&lt;p&gt;気をつける点があるとすれば「悪意の PR」を送りつけるために作った分岐リポジトリのコードをうっかり取り込んでしまう場合だろう。
最初に紹介した記事では&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;As a best practice, remember to consume software from the official project repos and watch out for potential typosquats or repository forks/clones that may appear identical to the original project but hide malware.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;35,000 code repos not hacked—but clones flood GitHub to serve malware&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と述べている。
言われんでも（笑）&lt;/p&gt;
&lt;p&gt;それに続けて&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Open source code commits signed with GPG keys of authentic project authors are one way of verifying the authenticity of code.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/35-000-code-repos-not-hacked-but-clones-flood-github-to-serve-malware/&#34;&gt;35,000 code repos not hacked—but clones flood GitHub to serve malware&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれているが，ぶっちゃけプロジェクトの外側にいる人から見てコミットに OpenPGP 署名があることは大した保証にはならない。
この辺は以前書いた&lt;a href=&#34;https://text.baldanders.info/openpgp/web-of-trust/&#34; title=&#34;OpenPGP の電子署名は「ユーザーの身元を保証し」ない&#34;&gt;拙文&lt;/a&gt;を参考にしてほしい。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;じゃあ git commit で OpenPGP 署名を付与することにどんな意義があるかというと，それはチーム運営で威力を発揮する。
つまり公開鍵や電子署名で「ユーザーの身元を保証」するのではなく「身元の保証されたユーザ」同士で鍵と電子署名を運用するのである。
これでチーム以外からのなりすまし commit を検知（防止ではない）しやすくなる。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/web-of-trust/&#34;&gt;OpenPGP の電子署名は「ユーザーの身元を保証し」ない&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;オープンソース・プロジェクトであれば pull request を受け付けるメンテナの技量と判断が試されるところだろう。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757143044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/413qoSjODUL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757143044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;信頼と裏切りの社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 山形 浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;NTT出版 2013-12-24&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4757143044 (ASIN), 9784757143043 (EAN), 4757143044 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;社会における「信頼」とは。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-11-28&#34;&gt;2015-11-28&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 信頼と裏切りの社会 --&gt;
</content>
	</entry><entry>
		<title>クラウドストレージのアカウント情報がクラウドストレージにある罠</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/07/midsummer-horror/" />
		<id>tag:text.Baldanders.info,2022-07-29:/remark/2022/07/midsummer-horror/</id>
		<published>2022-07-29T11:41:52+00:00</published>
		<updated>2022-08-08T10:41:06+00:00</updated>
		<summary>真夏のホラー</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;久しぶりにぞんぞがさばる（出雲弁）記事を見た。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2022/07/82884/&#34;&gt;ある「パソコンの大先生」の死 – WirelessWire News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;今回のお題&lt;/h2&gt;
&lt;p&gt;今回の条件は割とありがちではないだろうか。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows パソコン1台のみ&lt;/li&gt;
&lt;li&gt;パスワード管理ツールあり
&lt;ul&gt;
&lt;li&gt;ただし Windows 専用プロプライエタリ・ツール&lt;/li&gt;
&lt;li&gt;パスワード情報はクラウド・ストレージにバックアップあり&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ローカル NAS はなし&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;この唯一のパソコンが故障して復旧不能となった場合にどうなるかという話。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;しかし、そのフリーウェアはWindows用のプロプライエタリソフトウエアのため、ワタシのスマホではデータを閲覧できません。それに気付いたのは、スマホで新しいPCを購入する手続きを進め、最後にクレジットカードの会員向けサービスのパスワードを聞かれ、途方に暮れたときです。これでは新しいPCが調達できないじゃないか！&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://wirelesswire.jp/2022/07/82884/&#34;&gt;ある「パソコンの大先生」の死&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ぞんぞがさばる！&lt;/p&gt;
&lt;h2&gt;NAS とクラウドストレージ&lt;/h2&gt;
&lt;p&gt;最近は「クラウドストレージがあるならローカルの NAS とかいらなくね？」という向きも多いようだ。&lt;/p&gt;
&lt;p&gt;でもクラウドストレージにアクセスするためにはアカウント情報が必要で，更に多要素認証を使うのであればその分だけ認証手段を確保しておく必要がある。
それをどこに保持しておくか。&lt;/p&gt;
&lt;p&gt;個人的にはローカルに NAS を置いておくのはまだ意味があると思う。
もっと言えばローカル NAS とクラウドストレージを連携できるならなおよし。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/10/nas/&#34;&gt;秋 NAS は俺に喰わせろ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私もクラウドストレージは機密保持の観点からはあまり信用してない。
個人向けのクラウドストレージ・サービスの多くは他者と情報共有しやすいよう設計されているため「うっかり漏洩」してしまう可能性も排除できない。
法人向けならユーザごとに細かく権限を設定できるので逆に安心なんだけどね。&lt;/p&gt;
&lt;p&gt;そういう意味じゃ信用してないのはクラウドサービスではなくて自分自身か（笑）&lt;/p&gt;
&lt;p&gt;まぁ，クラウドストレージは「バックアップ用」と割り切って sensitive な情報については置かないようにするか暗号化するのがいいんだろうね。&lt;/p&gt;
&lt;h2&gt;マルチプラットフォームは重要&lt;/h2&gt;
&lt;p&gt;今回のもうひとつのポイントはパスワード管理ツールが Windows 専用だったことだろう。
プロプライエタリなツールであることは今回のケースでは問題ではない。&lt;/p&gt;
&lt;p&gt;最近はセキュリティ企業も独自のパスワード管理ツールを出しているが，これがもし特定 OS 専用なら考え直したほうがいいかもしれない（実際のところは知らない）。&lt;/p&gt;
&lt;p&gt;私は昔から &lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; 派なのだが，最近は派生ツールである &lt;a href=&#34;https://keepassxc.org/&#34; title=&#34;KeePassXC Password Manager&#34;&gt;KeePassXC&lt;/a&gt; および Android 版の &lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&#34; title=&#34;Keepass2Android Password Safe - Apps on Google Play&#34;&gt;Keepass2Android&lt;/a&gt; を愛用している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;KeePassXC Password Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/keepassxreboot/keepassxc&#34;&gt;GitHub - keepassxreboot/keepassxc: KeePassXC is a cross-platform community-driven port of the Windows application “Keepass Password Safe”.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;amp;hl=en_US&amp;amp;gl=JP&#34;&gt;Keepass2Android Password Safe - Apps on Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;パスワードを紙に書くのは案外悪くない&lt;/h2&gt;
&lt;p&gt;（特に同居人が居る場合は）管理に気を使う必要はあるが，パスワード情報を紙に書き出すというのは案外悪くないと思っている。
もちろん全て書き出す必要はなくて，いざというときに最低限必要な情報のみに厳選する。&lt;/p&gt;
&lt;p&gt;私の自宅環境はパソコン（Linux 機），NAS，スマホの3機構成でこれらが同時に使えなくなる事態は真面目に考えてなかったのだが，今回の記事を読んで，考えを改めた。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
起こる可能性のあることは，いつか実際に起こる（If it can happen, it will happen）
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;マーフィーの法則&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;作業記録は大事&lt;/h2&gt;
&lt;p&gt;上述のようにパスワードを紙に書き出すとしても，どのアカウント情報を書き出すべきかはよくよく検討しないといけない。
その一環としてスマホやパソコンのセットアップ時の作業記録を録っておくことをおすすめする。&lt;/p&gt;
&lt;p&gt;以下はスマホの機種変更した際の作業記録の概要。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/changing-smartphone/&#34;&gt;ついカッとなって機種変した，反省はしない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それを見れば必要な情報が分かるはず。
Android 機のセットアップには Google アカウントが絶対に必要とか。&lt;/p&gt;
&lt;p&gt;今回の記事を書かれた yomoyomo さんにはご愁傷さまとしか言いようがないが，私としてはこれを好機として自宅環境を見直すとしようか。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220808/pc-crash&#34;&gt;恥さらし文章「ある「パソコンの大先生」の死」に寄せられたありがたいコメントの数々 - YAMDAS現更新履歴&lt;/a&gt; : ブログの退潮&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0855LMP81?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31Jy8IwFHwL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0855LMP81?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Synology NASキット 2ベイ DS220j クアッドコアCPU 512MBメモリ搭載 ライトユーザー向け 国内正規代理店品 電話サポート対応品 DiskStation&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Synology (Release 2020-03-12)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B0855LMP81 (ASIN), 4537694279369 (EAN), 0846504003440 (EAN), 846504003440 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.dospara.co.jp/&#34;&gt;ドスパラ&lt;/a&gt;で HDD 2基と3点セットで購入。家庭内 LAN で使うなら必要十分な性能。各種クラウド・ストレージ・サービスと連携可能。 Tailscale を含む各種 VPN と組み合わせることも可能。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-10-26&#34;&gt;2021-10-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Synology DS220j --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08V8LNR2H?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41&amp;#43;wOkdJItL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08V8LNR2H?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Western Digital ウエスタンデジタル 内蔵 HDD WD Red Plus NAS RAID (CMR) 3.5インチ WD40EFZX-EC 【国内正規代理店品】&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ウエスタンデジタル(Western Digital) (Release 2021-02-05)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B08V8LNR2H (ASIN), 4988755057738 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.synology.com/ja-jp/products/DS220j&#34;&gt;Synology DS220j&lt;/a&gt; と併せて購入。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-10-26&#34;&gt;2021-10-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- HDD WD Red Plus --&gt;
</content>
	</entry><entry>
		<title>『ユニコーン企業のひみつ』読書会（2）</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/06/competing-with-unicorns-2/" />
		<id>tag:text.Baldanders.info,2022-06-18:/remark/2022/06/competing-with-unicorns-2/</id>
		<published>2022-06-18T12:37:06+00:00</published>
		<updated>2022-06-18T12:37:25+00:00</updated>
		<summary>トライブ，チャプター，ギルド，そしてカンパニーベット</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先月から始まった『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』読書会の2回目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technical-book-reading.connpass.com/event/248923/&#34;&gt;第2回『ユニコーン企業のひみつ』オンライン読書会 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は4章から9.4章までだったが，内容盛り沢山なので複数回に分けて紹介する。&lt;/p&gt;
&lt;p&gt;ところでヘッドセットのマイクの調子が悪いのよ。
自分の声は聞こえないので分からなかったが，過剰にノイキャンが効いてる感じらしい。
観念して USB 接続のマイクを発注した。
とほほ&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00T5ANN00?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31umrghJaJL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00T5ANN00?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;audio-technica USBコンデンサーマイク 在宅勤務/録音/動画配信/ポッドキャスト AT9933USB&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Audio Technica(オーディオテクニカ) (Release 2015-02-13)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B00T5ANN00 (ASIN), 4961310129798 (EAN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Bluetooth 接続のヘッドセットの調子が悪いので，マイクだけ USB 接続のものを買ってみた。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-06-18&#34;&gt;2022-06-18&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- USBコンデンサーマイク --&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/competing-with-unicorns/&#34;&gt;『ユニコーン企業のひみつ』読書会（1）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/06/competing-with-unicorns-2/&#34;&gt;『ユニコーン企業のひみつ』読書会（2）&lt;/a&gt; ← イマココ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;“There is No Spotify Model”&lt;/h2&gt;
&lt;p&gt;今回の範囲からは外れるが，読書会で以下の記事が紹介されていたので共有する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jeremiahlee.com/posts/failed-squad-goals/&#34;&gt;Spotify’s Failed #SquadGoals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://agile.quora.com/Spotify%E3%81%AF-Spotify%E3%83%A2%E3%83%87%E3%83%AB-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84&#34;&gt;Spotifyは &amp;lsquo;Spotifyモデル &amp;lsquo;を使っていない  - アジャイルよろず相談室&lt;/a&gt;（日本語訳）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実はこの辺の話は「訳者あとがき」で少し言及されている。
「訳者あとがき」によると&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;Spotify でのスクワッドやトライブ、ギルドといった少し変わった名前のエンジニアリング組織編成、いわゆる「Spotify モデル」は、アジャイルコーチの Henrik Kniberg らの記事や動画をきっかけに英語圏のアジャイル界隈では広く認知されました。本文での説明も、初出である &amp;ldquo;Scaling@Spotify&amp;rdquo;（2012年）、&amp;ldquo;Spotify Engineering Culture&amp;rdquo;（2014 年）&amp;ldquo;Spotify Rythm&amp;rdquo;（2016 年）を踏まえたものになっています。とはいえこれも、あくまで著者の在籍時の経験にもとづいたスナップショットです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』訳者あとがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とある。
&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/competing-with-unicorns/&#34; title=&#34;『ユニコーン企業のひみつ』読書会（1）]&#34;&gt;前回&lt;/a&gt;紹介したようにスタートアップが「学習する機械」であり「失敗はゲームの一部」であるなら，マネジメントそのものも同様にイテレーションしているだろうと想像できる。&lt;/p&gt;
&lt;p&gt;じゃあ『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』はもう古くて使えないのかというと，さにあらずで&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;繰り返しますが、大切なのはスクラムか Spotify モデルかというプラクティスではありません。重要なのはプラクティスを支える原則や、それを生みだす価値観のあり方、すなわち文化です。「文化が重要」なのです。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』訳者あとがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と記されている。&lt;/p&gt;
&lt;p&gt;「訳者あとがき」ではこの辺の話を含め『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』以外の本も紹介されているので「いまさら Spotify モデルかよ！」という人は「訳者あとがき」を立ち読みするところから始めてもいいかも知れない（笑） ちなみに『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』で「文化」の話は9章で登場する。&lt;/p&gt;
&lt;p&gt;前説おわり。&lt;/p&gt;
&lt;h2&gt;トライブ（Tribe），チャプター（Chapter），ギルド（Guild）&lt;/h2&gt;
&lt;p&gt;トライブ，チャプター，ギルドは Spotify が考案した組織の概念で，スクワッドの機能を全社レベルにスケールするための構造化と言える。
ひとつずつ見ていこう。&lt;/p&gt;
&lt;h3&gt;トライブ&lt;/h3&gt;
&lt;p&gt;トライブは&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/competing-with-unicorns/&#34; title=&#34;『ユニコーン企業のひみつ』読書会（1）]&#34;&gt;前回&lt;/a&gt;紹介したスクワッドを束ねたものだ。
といってもトライブはスクワッドの上位組織ではなく&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;スクワッド以外の組織構造（トライブ、チャプター、ギルド）はどれも、スクワッドの支援と調整のために組まれた「足場」&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.2章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;であり，あくまでも自律（フルスタック）した小さなチームである「スクワッド第一」で&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;スクワッドとトライブのどちらも、どんな顧客に向けたものなのかがきちんと特定された、明快なミッションを持っていなければならない。ミッションには成功を示す明確な指標が必要であり、トライブはその達成に責任がある。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.2章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ということらしい。&lt;/p&gt;
&lt;h3&gt;チャプター&lt;/h3&gt;
&lt;p&gt;チャプターはトライブ内のスクワッドを横断し，同じ専門性を持つメンバーで構成されるグループだ。
スクワッドを縦串とするならチャプターは横串と考えてもいいかも知れない。
ただし，いわゆる「マトリクス組織」構造における「人材プール」ではないらしい（私はいまいちピンとこなかったが）。&lt;/p&gt;
&lt;h3&gt;ギルド&lt;/h3&gt;
&lt;p&gt;ギルドは&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;同じ専門分野に興味のあるメンバーからなるグループで、組織を横断して形成される。
[&amp;hellip;]
チャプターとは異なり、ギルドは正式な組織ではない。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.6章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;だそうな。
緩い技術交流コミュニティ，あるいはもっと緩い勉強会みたいなイメージだろうか。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;このことを過小評価してはいけない。学ぶことの持つ力、すなわち、自分自身が成長していると感じ続けられることは、勤勉でスマートな、知性豊かな人たちにとってはこの上ない魅力だ。これこそ、最も優秀で素晴らしいメンバーを惹きつけ続けるための秘訣だ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.6章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;スクワッド・トライブの自己組織化&lt;/h3&gt;
&lt;p&gt;4.7章でトライブの面白い例が紹介されている。
多めの引用はご容赦。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;Spotify の組織改編がいつもこうだったというわけではないが、ある大規模なトライブの組織再編にあたり、アジャイルコーチをファシリテーターとしたワークショップを開催したことがあった。そのワークショップではリーダー陣が一堂に会して、共同で新しいトライブの編成を考えた。といっても、その時点では新しいトライブに具体的なメンバーをアサインしなかった。Spotify はメンバーに自分で自分の所属をサインアップさせることにした。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.7章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;この一連の流れが特筆に値すると思ったのは、テック企業の本気を目のあたりにしたからだ。テック企業は意思決定を現場に任せて、メンバーの自己組織化を促すためなら、どこまでも突き進む。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.7章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;Spotify や他のテック企業が発見したのは、メンバーが転職せずにすぐれた仕事を続けてくれる可能性が高くなるのは、内容をよく理解した仕事を自分で選び、気に入った人たちと一緒に働いている場合だということだ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』4.7章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なんとなく「スクワッドが寄り集まってトライブを形成する」みたいなイメージで考えていたのだが，最初から構造化されたスクワッド・トライブを構成して，そこに向かって各々サインアップするって感じなのね。&lt;/p&gt;
&lt;p&gt;ここまで読み進めるとチャプターが「人材プール」ではないと述べられていることの意味が少し分かる。
上から辞令が降りてくるわけではないのだ。
スタートアップ内では自分の仕事は自分で見つけないといけないらしい（笑） 言い方を変えるなら，それができる「人材」こそがスタートアップでは求められているわけだ。&lt;/p&gt;
&lt;h2&gt;カンパニーベット（Company Bet）&lt;/h2&gt;
&lt;p&gt;「カンパニーベット」も Spotify の用語だそうで&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;カンパニーベットは、会社が取り組みたい重要事項を、終わらせたい順に並べたリスト&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』5.2章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;を指すらしい。
もちろん，ただ漫然と優先順位を決めるのではなく DIBB (Data, Insight, Belief, Bet) と呼ばれる意思決定フレームワークに基づいて決定していく。&lt;/p&gt;
&lt;p&gt;前節の「スクワッド・トライブの自己組織化」とは異なりカンパニーベットは上から降りてくるメッセージだ。
とはいえ，これは業務命令ではない。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;念を押しておくが、自分たちの時間を何に費やすべきかの最終的な決定権はあくまでスクワッドにある。スクワッドの自律性は揺らがない。スクワッドはベットや DIBB を参照することで、自分たちが会社全体の役に立っていることと、利己的な部分最適に陥っていないことを自分たちで点検する。ベットもDIBB もスクワッドの判断を支援することに存在意義があるのだ。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』5.5章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;カンパニーベットは，喩えるなら，現場のエンジニアの向きを揃える整流器のようなものだろうか。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;大きなチャンスに狙いを絞ったベットに向けて「部隊」を集結させ、総力をあげてこれに取り組む。やり遂げたら、次の大がかりなベットが始まるまでの間、各自はそれぞれ普段の業務に戻る。Spotify のようなテック企業はそうやって物事を進めている。&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』5.5章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;というわけで&amp;hellip;&lt;/h2&gt;
&lt;p&gt;次回へ続く。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cE5EmeezL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2021-04-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;版元より&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34;&gt;電子版&lt;/a&gt;も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ユニコーン企業のひみつ --&gt;
</content>
	</entry><entry>
		<title>『ユニコーン企業のひみつ』読書会（1）</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/05/competing-with-unicorns/" />
		<id>tag:text.Baldanders.info,2022-05-21:/remark/2022/05/competing-with-unicorns/</id>
		<published>2022-05-21T11:28:24+00:00</published>
		<updated>2022-06-18T12:37:25+00:00</updated>
		<summary>アレな GAFA 礼賛本を読むくらいならこっちの方をお勧めする。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;前にどっかで書いたような気がするが，遅まきながらプロジェクト・マネジメントの勉強を始めている。
といっても別にプロマネになりたいわけではなく，単に職場でマネジメントの観点で意見を求められることがあったので，そういう観点で見る目も養おうということで。
つっても PMBOK の基礎的な内容に留まっているが。
身も蓋もない言い方をするなら興味本位（笑）&lt;/p&gt;
&lt;p&gt;で，今回『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』という本を題材にした読書会を開催するというので，これまた興味本位で参加してみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technical-book-reading.connpass.com/event/245551/&#34;&gt;第1回『ユニコーン企業のひみつ』オンライン読書会 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この本は知らなくても原著者の Jonathan Rasmusson&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; という名前を聞いたら「あぁ『&lt;a href=&#34;https://www.amazon.co.jp/dp/B00J1XKB6K?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;アジャイルサムライ&lt;/a&gt;』の人か」と思う人もいるかも知れない。
いや，私は読んでないけど。
ちなみに原書 “&lt;a href=&#34;https://www.amazon.co.jp/dp/B088PBCWBZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Competing with Unicorns&lt;/a&gt;” は2020年，今回の翻訳本『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』は2021年に出版されている。&lt;/p&gt;
&lt;h2&gt;目次&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/competing-with-unicorns/&#34;&gt;『ユニコーン企業のひみつ』読書会（1）&lt;/a&gt; ← イマココ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/06/competing-with-unicorns-2/&#34;&gt;『ユニコーン企業のひみつ』読書会（2）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;「ユニコーン企業」とは&lt;/h2&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』の訳注によると，「ユニコーン企業」とは&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;2013年にベンチャーキャリタリストの Aileen Lee が「ユニコーン企業」という概念を提唱したときの定義は、創業10年以内、評価額10億ドル以上、非上場、米国拠点のテック企業（当時は39社）。ユニコーンと呼ぶのは、その統計上の希少性を神話的な幻獣になぞらえたもの&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』まえがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;だそうな。
ただ，この本ではもう少し緩い定義で&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;本書で「ユニコーン企業」と言うとき、それは評価額が10億ドル規模の企業でありながら、スタートアップみたいに運営されている企業のことだと思ってほしい&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』まえがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;としている。
この定義なら「Google、Amazon、Facebook、Spotify なんかがこれに該当する」（まえがき）と言えるだろう。&lt;/p&gt;
&lt;p&gt;なお「スタートアップ」の定義も&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;本書においてスタートアップとは、50名未満の小さな企業を想定している&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』まえがき&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とだいぶ緩い。&lt;/p&gt;
&lt;h2&gt;「スタートアップはプロダクトがすべて」&lt;/h2&gt;
&lt;p&gt;スタートアップを特徴づける説明がこれ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;スタートアップはプロダクトがすべてだ。デモで見せるのはプロダクトだ。新しい顧客をひきつけるのもプロダクトだ。資金調達するのもプロダクトだし、学習するのもプロダクトを通じてだ&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』1.1章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;故に「スタートアップはイテレーションを重ねる」（1.2章）ことになる。
これが既存のエンタープライズ企業との最大の違いだろう。
『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』ではエンタープライズを「期待に応じる機械」（1.4章）と呼びスタートアップを「学習する機械」（1.2章）と呼んでいる。&lt;/p&gt;
&lt;p&gt;「期待に応じる」ためには「プロジェクト駆動」が望ましい。
期待に応じる目標を掲げ，目標を達成するための KGI/KPI を評価しゴールを設定する。
コストを計上し期日を決め作業分割を行いリソース（予算や人員を含む）を確保してスケジュールやリスクの変動を管理（監視）する。
プロジェクトが設定するゴールへ計画通りに到達できたら成功だ。&lt;/p&gt;
&lt;p&gt;でもプロダクトを中心に据えるなら「プロジェクト駆動」はうまく行かない。
PDCA や OODA といったサイクルを回すにしても活動がプロジェクト単位で途切れてしまうので，とてもじゃないが「イテレーションを重ねる」ことはできない。
そこでスタートアップはチームに権限と自律性を与える「ミッション」で仕事を進める。&lt;/p&gt;
&lt;h2&gt;「失敗はゲームの一部」&lt;/h2&gt;
&lt;p&gt;「プロジェクトとミッションってなにがちゃうねん」と思うだろう（実際に読書会でもそういう疑問は出た）。
『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』ではプロジェクトとミッションの違いを以下のようにまとめている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;プロジェクト&lt;/th&gt;
&lt;th&gt;ミッション&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;予算がある&lt;/td&gt;
&lt;td&gt;チームの人数が予算&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;終わりがある&lt;/td&gt;
&lt;td&gt;期間に定めがない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;短期間&lt;/td&gt;
&lt;td&gt;長期間&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;プロジェクトマネージャーがいる&lt;/td&gt;
&lt;td&gt;プロジェクトマネージャーがいない&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;開発だけして引き継ぐ&lt;/td&gt;
&lt;td&gt;開発もメンテナンスもする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;完成したら解散する&lt;/td&gt;
&lt;td&gt;チームは一緒のまま&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;計画にフォーカス&lt;/td&gt;
&lt;td&gt;顧客にフォーカス&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;期待に応じることが価値&lt;/td&gt;
&lt;td&gt;インパクトが価値&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;トップダウン&lt;/td&gt;
&lt;td&gt;ボトムアップ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』2.5章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;もしプロジェクトからミッションへ切り替えたいならプロダクトに対する「成功」の定義も書き換える必要がある。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;プロダクト開発における成功とは「発見と学習」だ。最初のプロダクトをとにかく早く世に出すのもそのためだ。そしてこれを素早く、何度も何度も繰り返す。失策をおかすこともあるだろう。だが、リリースを重ねるごとにプロダクトは良くなっていく&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』1.5章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;プロダクト開発では失敗はゲームの一部だ。 [&amp;hellip;] プロダクト開発は一発勝負じゃない。初回のリリースは始まりに過ぎない&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』1.5章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;プロジェクトマネージャーなどいない&lt;/h2&gt;
&lt;p&gt;ところで「プロジェクトマネージャーがいない」のにどうやって管理するねん，って思わなかった？ 私は思った。
でもプロジェクトじゃないんだからプロジェクトマネージャーがいないのは当たり前だよな。
その代わり重要なのが「プロダクトマネージャー」と「データサイエンティスト」だ。&lt;/p&gt;
&lt;p&gt;データサイエンティストは8章で詳しく説明されるらしいので，とりあえずプロダクトマネージャーについて紹介すると&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;プロダクトマネージャーは「このプロダクトは何をすべきか」について、信頼のおける情報源になることでプロダクトのデリバリーを導く。スクワッドと協力して戦略を定義し、ロードマップを策定し、機能の定義を考える。マーケティング、売上予測、損益計算の責任にも何らかの関わりを持つ&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』3.3章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;だそうな。
「スクワッドと協力して」というのがポイントだろう。
つまりプロダクトマネージャーはスクワッドの管理者ではないということだ。
故にプロダクトマネージャーはスクワッドに対して「指示」は行わない（アドバイスや提案はあり）。&lt;/p&gt;
&lt;p&gt;ちなみに，この本で「スクワッド（Squad）」とは&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;少人数で、職能横断（Cross-Function）の、自己組織化されたチームだ。
[&amp;hellip;]
自律した小さなチームはテック企業のあらゆる活動の中心だ。新規プロダクトの開発、新たな市場への参入、株式公開の準備。どの場合であっても、テック企業では自律した小さなチームがその中心にいる&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;『ユニコーン企業のひみつ』3.1章&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と定義・解説されている&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
この定義を見て「公安9課」を連想したのは私だけじゃない筈（と思いたいw）。&lt;/p&gt;
&lt;p&gt;スクワッドが所属する企業に対して自律的に振る舞うためには，お互いに対等な信頼関係が必要だ。
この辺が一番難しいんじゃないかな，と個人的には思う。
そのためのヒントは3.7章に書かれている。&lt;/p&gt;
&lt;h2&gt;GAFA 礼賛本を読むくらいなら&lt;/h2&gt;
&lt;p&gt;というわけで，今回は3章まで読了。
ページ数が少ないので，多分あと2回ほどで終わると思う。
もしこの拙文を見て興味が湧いたなら手にとって読んでみてもいいだろう。&lt;/p&gt;
&lt;p&gt;買うなら&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34; title=&#34;O&#39;Reilly Japan - ユニコーン企業のひみつ&#34;&gt;版元で扱っている電子版&lt;/a&gt;がお勧め。
「&lt;a href=&#34;https://gpl-reading.connpass.com/&#34;&gt;プログラミング言語Go読書会&lt;/a&gt;」では紙の本にびっしり書き込みをしているが PDF なら書き込みもデジタルでできる&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;（笑）&lt;/p&gt;
&lt;p&gt;この本を読んで「お父さん，明日からミッションを掲げてプロダクト駆動で頑張るぞ！」とは行かないかも知れないが，アレな GAFA 礼賛本を読むくらいならこっちの方をお勧めする。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41cE5EmeezL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2021-04-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;版元より&lt;a href=&#34;https://www.oreilly.co.jp/books/9784873119465/&#34;&gt;電子版&lt;/a&gt;も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ユニコーン企業のひみつ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01JMEDX8A?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/512LcoC3R8L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01JMEDX8A?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;攻殻機動隊 STAND ALONE COMPLEX&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;田中敦子 (出演), 阪脩 (出演), 大塚明夫 (出演), 山寺宏一 (出演), 仲野裕 (出演), 大川透 (出演), 山口太郎 (出演), 小野塚貴志 (出演), 玉川紗己子 (出演), 神山健治 (監督)&lt;/dd&gt;
    &lt;dd&gt; (Release 2016-08-05)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B01JMEDX8A (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「&lt;a href=&#34;https://www.amazon.co.jp/dp/B06XCRQQZF?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;GHOST IN THE SHELL&lt;/a&gt;」とどっちが好きかと言われれば悩むところだが，アニメ版「攻殻機動隊」シリーズでは好きな作品。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-05-21&#34;&gt;2022-05-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 攻殻機動隊 STAND ALONE COMPLEX (SAC) --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Amazon に書かれている著者の経歴によると「世界最大級の革新的なテック企業が世界中にソフトウェアを届けることを支援してきた。エンジニアとしては、Spotifyのインテグレーションを支援した。対象プラットフォームはSony PlayStation、Facebook Messenger、Google Chromecast、iMessage。同様にBMW、Tesla、Fordの自動車にも統合した」とある。『&lt;a href=&#34;https://www.amazon.co.jp/dp/4873119464?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 | Jonathan Rasmusson, 島田 浩二, 角谷 信太郎 |本 | 通販 - Amazon.co.jp&#34;&gt;ユニコーン企業のひみつ&lt;/a&gt;』では Spotify での経験が色濃く反映されている。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;スクワッドはかなり重要な概念なので3章を丸々使って解説されている。 Spotify においてスクワッドがどう機能しているかについて&lt;a href=&#34;https://youtu.be/Yvfz4HGtoPc&#34;&gt;これ&lt;/a&gt;とか&lt;a href=&#34;https://youtu.be/vOt4BbWLWQw&#34;&gt;これ&lt;/a&gt;で紹介されている（いずれも15分弱の動画）。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;Ubuntu に標準で付いている &lt;a href=&#34;https://wiki.gnome.org/action/show/Apps/Evince&#34; title=&#34;Apps/Evince - GNOME Wiki!&#34;&gt;Evince&lt;/a&gt; は PDF の任意の場所にメモを追加する程度はできる。このくらいの機能で十分だろう。&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>ついに apt-key コマンドに「非推奨」のワーニングが</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/05/apt-key-is-deprecated/" />
		<id>tag:text.Baldanders.info,2022-05-06:/remark/2022/05/apt-key-is-deprecated/</id>
		<published>2022-05-06T09:10:02+00:00</published>
		<updated>2022-05-18T19:39:07+00:00</updated>
		<summary>しょうがない。 この機会に対応するか。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/upgrade-ubuntu-22_04-lts/&#34; title=&#34;Ubuntu 22.04 LTS へのアップグレード&#34;&gt;前回&lt;/a&gt;の続き。
&lt;a href=&#34;https://www.docker.com/&#34; title=&#34;Empowering App Development for Developers | Docker&#34;&gt;Docker&lt;/a&gt; を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; にインストールするには以下の拙文が参考になる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/12/installing-docker-in-ubuntu/&#34;&gt;Ubuntu に Docker を入れる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;簡単に説明すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と電子署名検証用の OpenPGP 鍵をインポートした上で&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo add-apt-repository &amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば (&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 22.04 LTS であれば) jammy 用のリポジトリが追加される。
実際には &lt;code&gt;/etc/apt/sources.list.d/&lt;/code&gt; ディレクトリにある &lt;code&gt;archive_uri-https_download_docker_com_linux_ubuntu-jammy.list&lt;/code&gt; ファイルに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という内容が書かれている（筈）。&lt;/p&gt;
&lt;p&gt;ところが今回 &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 22.04 LTS では，この状態で &lt;code&gt;apt update&lt;/code&gt; すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ヒット:5 https://download.docker.com/linux/ubuntu jammy InRelease
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;パッケージリストを読み込んでいます... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;依存関係ツリーを作成しています... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;状態情報を読み取っています... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;パッケージはすべて最新です。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;W: https://download.docker.com/linux/ubuntu/dists/jammy/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とワーニングが出る。
あぁ，ついに &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でもこのワーニングが出るようになったか。
今まで先延ばしにしてたからなぁ。
しょうがない。
この機会に対応するか。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;code&gt;apt-key(8)&lt;/code&gt; のマニュアルには&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Except for using &lt;code&gt;apt-key del&lt;/code&gt; in maintainer scripts, the use of &lt;code&gt;apt-key&lt;/code&gt; is deprecated. This section shows how to replace existing use of &lt;code&gt;apt-key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your existing use of &lt;code&gt;apt-key add&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -qO- https://myrepo.example/myrepo.asc | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then you can directly replace this with (though note the recommendation below):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -qO- https://myrepo.example/myrepo.asc | sudo tee /etc/apt/trusted.gpg.d/myrepo.asc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Make sure to use the &amp;ldquo;&lt;code&gt;asc&lt;/code&gt;&amp;rdquo; extension for ASCII armored keys and the &amp;ldquo;&lt;code&gt;gpg&lt;/code&gt;&amp;rdquo; extension for the binary OpenPGP format (also known as &amp;ldquo;GPG key public ring&amp;rdquo;). The binary OpenPGP format works for all apt versions, while the ASCII armored format works for apt version &amp;gt;= 1.4.&lt;/p&gt;
&lt;p&gt;Recommended: Instead of placing keys into the &lt;code&gt;/etc/apt/trusted.gpg.d&lt;/code&gt; directory, you can place them anywhere on your filesystem by using the &lt;code&gt;Signed-By&lt;/code&gt; option in your &lt;code&gt;sources.list&lt;/code&gt; and pointing to the filename of the key. See sources.list(5) for details. Since APT 2.4, &lt;code&gt;/etc/apt/keyrings&lt;/code&gt; is provided as the recommended location for keys not managed by packages. When using a deb822-style sources.list, and with apt version &amp;gt;= 2.4, the &lt;code&gt;Signed-By&lt;/code&gt; option can also be used to include the full ASCII armored keyring directly in the &lt;code&gt;sources.list&lt;/code&gt; without an additional file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;apt-key(8)&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;などと書かれている。
要するに &lt;code&gt;/etc/apt/keyrings&lt;/code&gt; ディレクトリに公開鍵を ASCII Armor 形式のまま放り込んでしまえばいいのか？&lt;/p&gt;
&lt;p&gt;んー。
こんな感じかな。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cd /etc/apt/keyrings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o docker-key.asc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ファイル名は適当。
念のため出力した &lt;code&gt;docker-key.asc&lt;/code&gt; ファイルの中身を拙作 &lt;a href=&#34;https://github.com/goark/gpgpdump&#34; title=&#34;goark/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; で覗いてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ gpgpdump -u -f docker-key.asc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Public-Key Packet (tag 6) (525 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Version: 4 (current)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public key creation time: 2017-02-22T18:36:26Z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA public modulus n (4096 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA public encryption exponent e (17 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User ID Packet (tag 13) (43 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  User ID: Docker Release (CE deb) &amp;lt;docker@docker.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Signature Packet (tag 2) (567 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Version: 4 (current)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hash Algorithm: SHA2-512 (hash 10)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hashed Subpacket (33 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Signature Creation Time (sub 2): 2017-02-22T19:34:24Z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Key Flags (sub 27) (1 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used to certify other keys.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used to sign data.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used to encrypt communications.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used to encrypt storage.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used for authentication.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Preferred Symmetric Algorithms (sub 11) (4 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Symmetric Algorithm: AES with 256-bit key (sym 9)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Symmetric Algorithm: AES with 192-bit key (sym 8)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Symmetric Algorithm: AES with 128-bit key (sym 7)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Preferred Hash Algorithms (sub 21) (4 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Hash Algorithm: SHA2-512 (hash 10)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Hash Algorithm: SHA2-384 (hash 9)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Hash Algorithm: SHA2-256 (hash 8)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Hash Algorithm: SHA2-224 (hash 11)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Preferred Compression Algorithms (sub 22) (4 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Compression Algorithm: BZip2 (comp 3)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Compression Algorithm: Uncompressed (comp 0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Features (sub 30) (1 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: Modification Detection (packets 18 and 19)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Key Server Preferences (sub 23) (1 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: No-modify
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Unhashed Subpacket (10 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Issuer (sub 16): 0x8d81803c0ebfcd88
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hash left 2 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    b2 c9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA signature value m^d mod n (4094 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Public-Subkey Packet (tag 14) (525 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Version: 4 (current)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public key creation time: 2017-02-22T18:36:26Z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA public modulus n (4096 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA public encryption exponent e (17 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Signature Packet (tag 2) (1086 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Version: 4 (current)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Signiture Type: Subkey Binding Signature (0x18)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hash Algorithm: SHA2-256 (hash 8)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hashed Subpacket (9 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Signature Creation Time (sub 2): 2017-02-22T18:36:26Z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Key Flags (sub 27) (1 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Flag: This key may be used to sign data.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Unhashed Subpacket (553 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Issuer (sub 16): 0x8d81803c0ebfcd88
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Embedded Signature (sub 32) (540 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Signature Packet (tag 2) (540 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Version: 4 (current)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Signiture Type: Primary Key Binding Signature (0x19)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Hash Algorithm: SHA2-256 (hash 8)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Hashed Subpacket (6 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          Signature Creation Time (sub 2): 2017-02-22T18:36:26Z
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Unhashed Subpacket (10 bytes)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          Issuer (sub 16): 0x7ea0a9c3f273fcd8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Hash left 2 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          d5 60
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        RSA signature value m^d mod n (4095 bits)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Hash left 2 bytes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    f2 b8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  RSA signature value m^d mod n (4095 bits)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;もともと &lt;code&gt;/etc/apt/trusted.gpg&lt;/code&gt; ファイルに入ってる公開鍵は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ apt-key list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/apt/trusted.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pub   rsa4096 2017-02-22 [SCEA]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;uid           [  不明  ] Docker Release (CE deb) &amp;lt;docker@docker.com&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sub   rsa4096 2017-02-22 [S]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となっているので，同じ鍵ということでいいよね。&lt;/p&gt;
&lt;p&gt;ここで &lt;code&gt;/etc/apt/sources.list.d/&lt;/code&gt; ディレクトリにある &lt;code&gt;archive_uri-https_download_docker_com_linux_ubuntu-jammy.list&lt;/code&gt; ファイルの中身を以下のように書き換える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-key.asc] https://download.docker.com/linux/ubuntu jammy stable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ポイントは &lt;code&gt;signed-by&lt;/code&gt; オプション。
このオプションに先程の公開鍵ファイルをフルパスで指定する。
&lt;code&gt;add-apt-repository&lt;/code&gt; コマンドを使うなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo add-apt-repository &amp;#34;deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-key.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じだろうか。これでもう一度 &lt;code&gt;apt update&lt;/code&gt; すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ヒット:5 https://download.docker.com/linux/ubuntu jammy InRelease
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;パッケージリストを読み込んでいます... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;依存関係ツリーを作成しています... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;状態情報を読み取っています... 完了
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;パッケージはすべて最新です。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;よし。
ワーニングは出なくなったな。&lt;/p&gt;
&lt;p&gt;なんでこんな面倒くさいことをするかというと，もし秘密鍵が漏洩したサードパーティの公開鍵がひとつでも APT の鍵束に入っていると，その鍵を使って malware 入れ放題になる可能性があるからだ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
サードパーティの公開鍵を分離し &lt;code&gt;signed-by&lt;/code&gt; オプションで公開鍵が作用するパッケージを限定することでリスクが低減されることを狙っている。
簡単に言うと「もうサードパーティの公開鍵は APT で管理しないから自分でやれ！ 管理する仕組みは提供するから」ということである。
まぁ，苦肉の策って感じだけどね（笑）&lt;/p&gt;
&lt;p&gt;最後に &lt;code&gt;/etc/apt/trusted.gpg&lt;/code&gt; ファイルを削除するか他所に退避させておけば問題ないであろう。&lt;/p&gt;
&lt;h2&gt;【2022-05-19 追記】 &lt;a href=&#34;https://www.pgadmin.org/&#34; title=&#34;pgAdmin - PostgreSQL Tools&#34;&gt;pgAdmin&lt;/a&gt; のアップグレード&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pgadmin.org/&#34; title=&#34;pgAdmin - PostgreSQL Tools&#34;&gt;pgAdmin&lt;/a&gt; も &lt;a href=&#34;https://www.docker.com/&#34; title=&#34;Empowering App Development for Developers | Docker&#34;&gt;Docker&lt;/a&gt; と同じくサード・パーティ公開鍵の登録が必要なので以下の手順で公開鍵とリポジトリの登録を行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo curl -fsSL https://www.pgadmin.org/static/packages_pgadmin_org.pub -o /etc/apt/keyrings/pgadmin-4-key.asc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo sh -c &amp;#39;echo &amp;#34;deb [signed-by=/etc/apt/keyrings/pgadmin-4-key.asc] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main&amp;#34; &amp;gt; /etc/apt/sources.list.d/pgadmin4.list&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで無問題。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://manpages.ubuntu.com/manpages/trusty/ja/man8/apt-key.8.html&#34;&gt;Ubuntu Manpage: apt-key - APT キー管理ユーティリティ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.clear-code.com/blog/2021/5/5.html&#34;&gt;非推奨となったapt-keyの代わりにsigned-byとgnupgを使う方法 - 2021-05-05 - ククログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/5132396FFQL._SL160_.jpg&#34; width=&#34;124&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;PGP―暗号メールと電子署名&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シムソン ガーフィンケル (著), Garfinkel,Simson (原著), ユニテック (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 1996-04-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4900900028 (ASIN), 9784900900028 (EAN), 4900900028 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-16&#34;&gt;2014-10-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PGP―暗号メールと電子署名 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;OpenPGP 鍵の信用モデルは「信用の輪（web of trust）」と呼ばれるもので，ユーザ同士の peer で直接的な関係が鍵管理の前提になっている。このため不特定のユーザの間ではどうしても鍵管理が緩くなってしまう。この辺は不特定ユーザを前提にした X.509 とは思想が異なる。 OpenPGP 鍵の信用モデルについては拙文「&lt;a href=&#34;https://text.baldanders.info/openpgp/web-of-trust/&#34;&gt;OpenPGP の電子署名は「ユーザーの身元を保証し」ない&lt;/a&gt;」あたりを参考にしていただけるとありがたい。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu 22.04 LTS へのアップグレード</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/05/upgrade-ubuntu-22_04-lts/" />
		<id>tag:text.Baldanders.info,2022-05-06:/remark/2022/05/upgrade-ubuntu-22_04-lts/</id>
		<published>2022-05-06T09:07:48+00:00</published>
		<updated>2022-05-22T07:36:51+00:00</updated>
		<summary>今回は特に大きな問題はなし。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; が「22.04 LTS にアップグレードせんのん？（← 超意訳）」と煩いので GW で余裕のある間にアップグレードすることにした。
今回は特に（少なくとも最近の機械では）日本語周りで不具合の話も聞かなかったし。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./release-note.png&#34;&gt;&lt;img src=&#34;./release-note.png&#34; srcset=&#34;./release-note.png 620w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Ubuntu 22.04 リリースノート&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./release-note.png&#34;&gt;Ubuntu 22.04 リリースノート&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;今回は特に大きな問題はなし。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;日本語入力周りは問題なく動いている。 &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; コミュニティのご尽力に感謝&lt;/li&gt;
&lt;li&gt;21.10 から Firefox は Snap 版になっているのに何故か言語パッケージが APT で提供されているというチグハグな状態だったが，今回で統一された？&lt;/li&gt;
&lt;li&gt;Thunderbird は相変わらず &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の鍵束を認識してくれない。そろそろ捨てようか&lt;/li&gt;
&lt;li&gt;LibreOffice は 7.3 系。 OpenPGP 鍵で暗号化したファイルもちゃんと開けるし，問題ないだろう。 Snap 版は相変わらず評判が悪いようだ（笑）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://keepassxc.org/&#34; title=&#34;KeePassXC Password Manager&#34;&gt;KeePassXC&lt;/a&gt; は既に jammy リポジトリがある。依存ライブラリのバージョンが違うらしい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pgadmin.org/&#34; title=&#34;pgAdmin - PostgreSQL Tools&#34;&gt;pgAdmin4&lt;/a&gt; は jammy リポジトリがまだ用意されてない模様。こちらはしばらく様子見か&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; は &lt;a href=&#34;https://github.com/nodesource/distributions&#34;&gt;NodeSource&lt;/a&gt; で v18 系をインストールしてみた。今のところは問題なし。なにかあれば v16 (LTS) に戻すつもり&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;いつものように GnuPG が古い&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ gpg --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gpg (GnuPG) 2.2.27
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;libgcrypt 1.9.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Copyright (C) 2021 Free Software Foundation, Inc.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;License GNU GPL-3.0-or-later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;This is free software: you are free to change and redistribute it.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;There is NO WARRANTY, to the extent permitted by law.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Home: /home/username/.gnupg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;サポートしているアルゴリズム:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;圧縮: 無圧縮, ZIP, ZLIB, BZIP2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まぁ v2.3 系でないのはしょうがないにしても，せめて今の LTS 最新版（&lt;a href=&#34;https://text.baldanders.info/release/2022/02/gnupg-2_2_34-lts-is-released/&#34; title=&#34;GnuPG 2.2.34 (LTS) がリリースされた&#34;&gt;v2.2.34&lt;/a&gt;）にしてくれよ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://www.openssh.com/&#34;&gt;OpenSSH&lt;/a&gt; と &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh -V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;OpenSSH_8.9p1 Ubuntu-3, OpenSSL 3.0.2 15 Mar 2022
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; は v3.0.3 の&lt;a href=&#34;https://www.openssl.org/news/secadv/20220503.txt&#34;&gt;セキュリティ・アップデート&lt;/a&gt;に対応した&lt;a href=&#34;https://ubuntu.com/security/notices/USN-5402-1&#34; title=&#34;USN-5402-1: OpenSSL vulnerabilities | Ubuntu security notices | Ubuntu&#34;&gt;バックポート・パッチ&lt;/a&gt;が出ているようだ。
相変わらず分かりにくい。
普通にバージョンを上げてくれんもんかねぇ。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の &lt;code&gt;gpg-agent&lt;/code&gt; との連携は問題なかった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/ssh-key-management-with-gnupg/&#34;&gt;OpenSSH の認証鍵を GunPG で作成・管理する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/gpg-agent-in-ubuntu/&#34;&gt;gpg-agent の設定： GnuPG in Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://www.docker.com/&#34; title=&#34;Empowering App Development for Developers | Docker&#34;&gt;Docker&lt;/a&gt; と apt-key&lt;/h2&gt;
&lt;p&gt;これに関しては記事を分けた。
&lt;a href=&#34;https://text.baldanders.info/remark/2022/05/apt-key-is-deprecated/&#34;&gt;後半&lt;/a&gt;へ続く（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-58-ubuntu-2204-lts.html&#34;&gt;Ubuntu 22.04 その58 - Ubuntu 22.04 LTSがリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-59-ubuntu-2204-lts.html&#34;&gt;Ubuntu 22.04 その59 - Ubuntu 22.04 LTSの新機能と変更点 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-60-ubuntu-2204-lts.html&#34;&gt;Ubuntu 22.04 その60 - Ubuntu 22.04 LTSの既知の問題 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2110-89-ubuntu-2204-lts.html&#34;&gt;Ubuntu 21.10 その89 - Ubuntu 22.04 LTSへのアップグレードは数日中に提供予定 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2004-240-ubuntu-2204-lts.html&#34;&gt;Ubuntu 20.04 その240 - Ubuntu 22.04 LTSへのアップグレード提供時期について - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1405022.html&#34;&gt;Canonical、「Ubuntu 22.04 LTS」の提供を開始 ～WSLパッケージもストアに登場 - 窓の杜&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/sprout2000/articles/8ea4a77d81583a&#34;&gt;Ubuntu 22.04 をインストールしたら設定すること 10 ヶ条&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04-ja&#34;&gt;Ubuntu 20.04にNode.jsをインストールする方法  | DigitalOcean&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2110-90-ubuntu-2204-lts.html&#34;&gt;Ubuntu 21.10 その90 - Ubuntu 22.04 LTSへアップグレードするには・アップグレードの注意事項 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-63-ubuntu-2204-ltsraspberry.html&#34;&gt;Ubuntu 22.04 その63 - Ubuntu 22.04 LTSで行われたRaspberry Piのサポート改善 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-104-1224.html&#34;&gt;Ubuntu 22.04 その104 - 日付やタイムゾーンを自動設定するには・時間の12時間制と24時間制を切り替えるには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-102.html&#34;&gt;Ubuntu 22.04 その102 - ユーザーアカウントを追加するには・ユーザーアカウントを削除するには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-101.html&#34;&gt;Ubuntu 22.04 その101 - ユーザーアカウントの各種設定を変更するには・ユーザーアカウントのパスワードや自動ログイン設定を変更するには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-100-ui.html&#34;&gt;Ubuntu 22.04 その100 - UIの言語を変更するには・言語環境に足りないソフトウェアがないかチェックするには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-99-mozc.html&#34;&gt;Ubuntu 22.04 その99 - 日本語入力（Mozc）の設定をカスタマイズして作業効率を上げよう - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-95-xorgwayland.html&#34;&gt;Ubuntu 22.04 その95 - ディスプレイサーバーを切り替えるには・XorgとWayland - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-91.html&#34;&gt;Ubuntu 22.04 その91 - 目への負担を軽減する夜間モードを設定するには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-90-hidpi.html&#34;&gt;Ubuntu 22.04 その90 - ディスプレイの解像度やHiDPIの設定をカスタマイズする・マルチディスプレイを設定する - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-89.html&#34;&gt;Ubuntu 22.04 その89 - デバイスのバッテリー残量の確認やパフォーマンスを調整するには・その他電源に関する設定を変更するには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-67-active-directoryadsys.html&#34;&gt;Ubuntu 22.04 その67 - Active Directoryのサポート強化とADsys - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/04/ubuntu-2204-lts-7-uefi-mok.html&#34;&gt;Ubuntu 22.04 LTSのインストール その7 - UEFIブートマネージャーの確認 〜 MOKの登録 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;ubuntu2204-ja-remix&#34;&gt;Ubuntu 22.04 LTS 日本語 Remix リリース | Ubuntu Japanese Team&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-106-ubuntu-2204-lts-remix.html&#34;&gt;Ubuntu 22.04 その106 - Ubuntu 22.04 LTS 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-120-ubuntuboot-repairubuntu.html&#34;&gt;Ubuntu 22.04 その120 - UbuntuのブートローダーをBoot Repairで修復するには・Ubuntuが起動しないトラブルを解決 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-125.html&#34;&gt;Ubuntu 22.04 その125 - 強化されたスクリーンキャプチャー機能・スクリーンキャストも利用可能に - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-133-dropboxdropbox.html&#34;&gt;Ubuntu 22.04 その133 - ファイルアプリとDropboxを連携させてDropboxを便利に活用しよう - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-136.html&#34;&gt;Ubuntu 22.04 その136 - 画面からはみ出して移動できなくなったウィンドウを移動するには・サイズが小さすぎてサイズ調整できなくなったウィンドウのサイズを調整するには - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-138-gnome-shellextension.html&#34;&gt;Ubuntu 22.04 その138 - インジケーターからGNOME Shell拡張を管理するには・Extension Listの使い方 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-139-removable-drive-menu.html&#34;&gt;Ubuntu 22.04 その139 - インジケーターからマウントされたボリュームを開いたりアンマウントするには・Removable Drive Menuの使い方 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-140-sound-input-output.html&#34;&gt;Ubuntu 22.04 その140 - インジケーターからサウンドデバイスやオーディオプロファイルを切り替えるには・Sound Input &amp;amp; Output Device Chooserの使い方 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-141-clipboard-indicator.html&#34;&gt;Ubuntu 22.04 その141 - クリップボードの履歴を取りクリップボードの内容を再利用するには・Clipboard Indicatorの使い方 - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2022/05/ubuntu-2204-144.html&#34;&gt;Ubuntu 22.04 その144 - デスクトップアイコンをもっと細かくカスタマイズするには・ボリュームやアイコン表示のカスタマイズなど - kledgeb&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
</feed>
