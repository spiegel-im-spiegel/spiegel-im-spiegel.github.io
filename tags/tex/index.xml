<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Tex - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/tex/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/tex/index.xml" />
	<id>tag:text.Baldanders.info,2015-09-27T01:32:49&#43;09:00:/</id>
	<updated>2015-09-27T01:32:49+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15-DEV</generator>

	
	<entry>
		<title>LuaTeX-ja に関する覚え書き - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/luatex-ja/" />
		<id>tag:text.Baldanders.info,2015-09-27T01:32:49&#43;09:00:/remark/2015/luatex-ja/</id>
		<published>2015-09-27T01:32:49+09:00</published>
		<updated>2015-09-28T20:35:00+09:00</updated>
		<summary>LuaTeX では pdfTeX と同等のことができ， DVI ファイルではなく PDF ファイルを直接出力する。なおかつ callback を記述することにより内部処理に割り込みをかけ機能拡張することが可能になっている。LuaTeX-ja はこの機能拡張を使って日本語組版を LuaTeX の上で実現する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（これは&lt;a href=&#34;http://www.baldanders.info/mdwiki/#!luatexja.md&#34;&gt;2014年9月12日に公開した記事&lt;/a&gt;を再構成したものです）&lt;/p&gt;

&lt;p&gt;LuaTeX では pdfTeX と同等のことができ， DVI ファイルではなく PDF ファイルを直接出力する。
なおかつ callback を記述することにより内部処理に割り込みをかけ機能拡張することが可能になっている。
LuaTeX-ja はこの機能拡張を使って日本語組版を LuaTeX の上で実現する。&lt;/p&gt;

&lt;h2 id=&#34;参考:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sourceforge.jp/projects/luatex-ja/wiki/FrontPage&#34;&gt;LuaTeX-ja Wiki - LuaTeX-ja - SourceForge.JP&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sourceforge.jp/projects/luatex-ja/wiki/LuaTeX-ja%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9&#34;&gt;LuaTeX-jaの使い方 - LuaTeX-ja Wiki - LuaTeX-ja - SourceForge.JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.antenna.co.jp/xml/xmllist/XMP/AboutXMP.htm&#34;&gt;XMP™ (Extensible Metadata Platform)仕様についてのメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ptex-からの主な変更点:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;pTeX からの主な変更点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;和文フォントは(小塚明朝,IPA 明朝などの)実際のフォント,和文フォントメトリック(JFMと呼ぶ )の組である&lt;/li&gt;
&lt;li&gt;日本語の文書中では改行はほとんどどこでも許されるので, pTeX では和文文字直後の改行は無視される(スペースが入らない)ようになっていた. しかし, LuaTeX-ja では LuaTeX の仕様のためにこの機能は完全には実装されていない&lt;/li&gt;
&lt;li&gt;2 つの和文文字の間や, 和文文字と欧文文字の間に入るグルー/カーン(両者をあわせて JAglueと呼ぶ)の挿入処理が 0 から書き直されている&lt;/li&gt;
&lt;li&gt;LuaTeX-ja では, pTeX と同様に漢字・仮名を制御綴内に用いることができ,\西暦 などが正しく動作するようにしている.但し, 制御綴中に使える和文文字が pTeX・upTeX と全く同じではないことに注意すること&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;luatex-のバージョン-in-tex-live-2014:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;LuaTeX のバージョン（in TeX Live 2014）&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; lualatex -v
This is LuaTeX, Version beta-0.79.1 (TeX Live 2014/W32TeX) (rev 4971)

Execute  &#39;luatex --credits&#39;  for credits and version details.

There is NO warranty. Redistribution of this software is covered by
the terms of the GNU General Public License, version 2 or (at your option)
any later version. For more information about these matters, see the file
named COPYING and the LuaTeX source.

Copyright 2014 Taco Hoekwater, the LuaTeX Team.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;TeX Live で最新版を取得するには&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; tlmgr update --self --all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などとする。&lt;/p&gt;

&lt;h2 id=&#34;大雑把な解説:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;大雑把な解説&lt;/h2&gt;

&lt;h3 id=&#34;最初の一歩:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;最初の一歩&lt;/h3&gt;

&lt;p&gt;最低限の LaTeX 文書ファイルはこんな感じ。入力は UTF-8 で行う。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\documentclass{ltjsarticle}

\begin{document}

\section{はじめてのLua\TeX-ja}

ちゃんとLua\TeX-jaで日本語が出るかな？

\subsection{出たかな？}

長い文章を入力するとちゃんと右端のところで折り返されるかな？
大丈夫そうな気がするけど．ちょっと不安だけど何事も挑戦だよね。

\end{document}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; luatatex hoge.tex
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で問題なく処理できる。&lt;/p&gt;

&lt;p&gt;ltjsarticle クラス（jsarticle クラス互換，jsbook クラス互換の ltjsbook クラスもある）を用いるのであれば &lt;code&gt;\usepackage{luatexja}&lt;/code&gt; の記述はなくても問題ない。
ただしこの時点では PDF に和文フォントが埋め込まれない。&lt;/p&gt;

&lt;h3 id=&#34;和文フォントの埋め込み:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;和文フォントの埋め込み&lt;/h3&gt;

&lt;p&gt;和文フォントを埋め込むにはフォントを指定する必要がある。
和文フォントの場合は luatexja-preset パッケージでまとめてフォントを指定できる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[no-math]{fontspec} %欧文フォント設定（和文フォント設定より先に行う）
\usepackage[ipaex]{luatexja-preset} %和文フォントに IPAex フォントを指定する
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プリセットオプションは以下のとおり&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;kozuka-pro&lt;/li&gt;
&lt;li&gt;kozuka-pr6&lt;/li&gt;
&lt;li&gt;kozuka-pr6n&lt;/li&gt;
&lt;li&gt;hiragino-pro&lt;/li&gt;
&lt;li&gt;hiragino-pron&lt;/li&gt;
&lt;li&gt;morisawa-pro&lt;/li&gt;
&lt;li&gt;morisawa-pr6n&lt;/li&gt;
&lt;li&gt;yu-win （&lt;a href=&#34;http://blog.petitboys.com/archives/yugothic-yumincho-jiyukobo.html&#34;&gt;游明朝/游ゴシック&lt;/a&gt;; Win8.1）&lt;/li&gt;
&lt;li&gt;yu-osx （&lt;a href=&#34;http://blog.petitboys.com/archives/yugothic-yumincho-jiyukobo.html&#34;&gt;游明朝/游ゴシック&lt;/a&gt;; OSX）&lt;/li&gt;
&lt;li&gt;ipa, ipaex, ms&lt;/li&gt;
&lt;li&gt;ipa-hg, ipaex-hg, ms-hg （Office 付属フォントを利用）&lt;/li&gt;
&lt;li&gt;noembed （フォントを埋め込まない）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;追加で以下のオプションも使用できる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;nodeluxe: 明朝体・ゴシック体を各 1 ウェイトで使用する（規定値）&lt;/li&gt;
&lt;li&gt;deluxe: 明朝体2ウェイト・ゴシック体3ウェイトと，丸ゴシック体を使用可能にする（otf パッケージ互換）&lt;/li&gt;
&lt;li&gt;expert: 横組専用仮名を用いる（otf パッケージ互換）&lt;/li&gt;
&lt;li&gt;bold 「明朝の太字」をゴシック体の太字によって代替する（otf パッケージ互換）&lt;/li&gt;
&lt;li&gt;90jis: 可能ならば 90JIS 字形を使う&lt;/li&gt;
&lt;li&gt;jis2004: 可能ならば JIS2004 字形を使う&lt;/li&gt;
&lt;li&gt;jis: jfm-jis.lua を JFM として用いる（JIS フォントメトリックに近い結果が得られる）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;luatexja-preset パッケージのプリセットオプションは luatexja-preset.sty 内にハードコーディングされているため，任意のプリセットを自作する場合は luatexja-preset.sty を参考に別名でパッケージを作ったほうがいいかも。&lt;/p&gt;

&lt;p&gt;luatexja-fontspec パッケージを使うと個別にフォントを指定できる。
luatexja-fontspec パッケージは luatexja-preset パッケージ内で呼び出されるため&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[no-math]{fontspec} %欧文フォント設定（和文フォント設定より先に行う）
\usepackage[ipaex]{luatexja-preset} %和文フォントに IPAex フォントを指定する
\setmainjfont[BoldFont=IPAexGothic]{KBMinchoM} %メインの和文フォントを KB明朝M に変更
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;といったこともできる。&lt;/p&gt;

&lt;h3 id=&#34;graphicx-および-xcolor-パッケージ:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;graphicx および xcolor パッケージ&lt;/h3&gt;

&lt;p&gt;graphicx および xcolor パッケージはドライバ指定なしでOK。（自動検出される）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage{graphicx,xcolor}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;明示的に指定するのであれば pdftex を指定する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[pdftex]{graphicx,xcolor}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hyperref-パッケージ:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;hyperref パッケージ&lt;/h3&gt;

&lt;p&gt;hyperref パッケージも同様だが，そのままでは PDF の目次等が文字化けしてしまうので以下のパラメータを指定する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[pdfencoding=auto]{hyperref}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;または&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[unicode=true]{hyperref}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また pdfa オプションをつけると PDF/A-1b 準拠の PDF を出力する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[pdfencoding=auto,pdfa]{hyperref}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hyperref パッケージでは PDF metadata 用に以下のオプションが指定できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;baseurl&lt;/li&gt;
&lt;li&gt;pdfauthor&lt;/li&gt;
&lt;li&gt;pdfkeywords&lt;/li&gt;
&lt;li&gt;pdflang&lt;/li&gt;
&lt;li&gt;pdfproducer&lt;/li&gt;
&lt;li&gt;pdfsubject&lt;/li&gt;
&lt;li&gt;pdftitle&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hyperxmp-パッケージ:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;hyperxmp パッケージ&lt;/h3&gt;

&lt;p&gt;hyperxmp パッケージを使うと XMP（Extensible Metadata Platform）によるメタデータを埋め込むことができる。
これは hyperref パッケージと組み合わせて使う。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage{hyperxmp} % XMP support with hyperref
\usepackage[pdfencoding=auto,pdfa]{hyperref} % PDF/A compatible

\hypersetup{% hyperref options (and metadata)
    pdflang={jp},
    pdftitle={はじめての LuaTeX-ja},
    pdfsubject={ちゃんとLuaTeX-jaで日本語が出るかな？},
    pdfauthor={Spiegel},
    pdfkeywords={LuaTeX-ja, PDF/A},
    pdfcopyright={Written by Spiegel on 2014, and licensed under CC-BY.},
    pdflicenseurl={http://creativecommons.org/licenses/by/4.0/},
    pdfcontacturl={http://www.baldanders.info/},
    pdfcontactcity={Hiroshima},
    pdfcontactcountry={Japan},
    pdfcontactregion={JA},
    pdfcaptionwriter={Spiegel},
    baseurl={http://www.baldanders.info/},
    draft=false,
    bookmarks=true,
    bookmarksnumbered=true,
    bookmarksopen=false,
    colorlinks=true,
    linkcolor=red,
    citecolor=green,
    filecolor=magenta,
    urlcolor=cyan
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hyperxmp パッケージで追加されるパラメータは以下のとおり&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pdfauthortitle&lt;/li&gt;
&lt;li&gt;pdfcaptionwriter&lt;/li&gt;
&lt;li&gt;pdfcontactaddress&lt;/li&gt;
&lt;li&gt;pdfcontactcity&lt;/li&gt;
&lt;li&gt;pdfcontactcountry&lt;/li&gt;
&lt;li&gt;pdfcontactemail&lt;/li&gt;
&lt;li&gt;pdfcontactphone&lt;/li&gt;
&lt;li&gt;pdfcontactpostcode&lt;/li&gt;
&lt;li&gt;pdfcontactregion&lt;/li&gt;
&lt;li&gt;pdfcontacturl&lt;/li&gt;
&lt;li&gt;pdfcopyright&lt;/li&gt;
&lt;li&gt;pdflicenseurl&lt;/li&gt;
&lt;li&gt;pdfmetalang （ない場合は pdflang を参照する）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どういうわけか hyperxmp パッケージを使ってもいわゆる「タグ入り PDF」として Adobe Reader で認識されない。
&lt;a href=&#34;https://wiki.gnome.org/Apps/Evince&#34;&gt;Evince&lt;/a&gt; では著作権情報は読み取れているみたい。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://farm1.staticflickr.com/756/21544622778_b7fa689c47_o.png&#34; alt=&#34;property&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考文献:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;参考文献&lt;/h3&gt;

&lt;p&gt;bibTeX, bibLaTeX は pTeX, upTeX で使っていたものを流用できる。
ただし，入出力は UTF-8 になること。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\usepackage[backend=biber, style=numeric]{biblatex}
\addbibresource{refer.bib}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;latexmkrc:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;.latexmkrc&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/env perl

# LaTeX commands
$pdflatex            = &#39;lualatex %O -synctex=1 %S&#39;;
$latex               = &#39;uplatex %O -synctex=1 %S&#39;;
$latex_silent_switch = &#39;-interaction=batchmode -c-style-errors&#39;;

# bibTeX commands
$bibtex    = &#39;upbibtex %O %B&#39;;
$biber     = &#39;biber %O --bblencoding=utf8 -u -U --output_safechars %B&#39;;
$makeindex = &#39;mendex %O -o %D %S&#39;;

# Device Driver
$dvipdf = &#39;dvipdfmx %O -z9 -V 7 -o %D %S&#39;;
$dvips = &#39;dvips %O -z -f %S | convbkmk -u &amp;gt; %D&#39;;
$ps2pdf = &#39;ps2pdf14 -dPDFA -dPDFACompatibilityPolicy=1 -sProcessColorModel=DeviceCMYK %O %S %D&#39;;

# Typeset mode (generate a PDF)
$pdf_mode = 1; # 0: do not generate a pdf , 1: using $pdflatex , 2: using $ps2pdf , 3: using $dvipdf

# Other configuration
$pvc_view_file_via_temporary = 0;
$max_repeat                  = 5;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;最終形:43c16ad652bfaa5c0f6d59f785758844&#34;&gt;最終形&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\documentclass{ltjsarticle}
\usepackage[no-math]{fontspec} % 欧文フォント設定（和文フォント設定より先に行う）
\setmonofont[AutoFakeSlant,BoldItalicFeatures={FakeSlant}]{Inconsolatazi4} % Inoconsolataフォントを使用
\usepackage{upquote}
\usepackage[ipaex]{luatexja-preset} % 和文フォントに IPAex フォントを指定する（jis2004 オプションは IPAex フォントでは対応してないみたい）
\usepackage{graphicx,xcolor}
\usepackage{hyperxmp} % XMP support with hyperref
\usepackage[pdfencoding=auto,pdfa]{hyperref} % PDF/A compatible

%% 参考文献
\usepackage[backend=biber,style=numeric]{biblatex}
\addbibresource{refer.bib}

%% その他
\renewcommand{\emph}[1]{\textsf{\textgt{#1}}} % 強調をゴシック体と Sans Serif に変更する

%% Kindle 用の設定 %%
%\setmainjfont[BoldFont=IPAexGothic]{KBMinchoM} % メインのフォントを KB明朝M に変更
%\usepackage[paperwidth=13.5cm, paperheight=17.25cm, top=0.5cm, left=0.5cm, right=0.5cm, bottom=0.5cm]{geometry} % Kindle layout

%% 文書情報
\title{\emph{はじめてのLua\TeX-ja}}
\author{Spiegel}
\date{2014-09-20}

\hypersetup{% hyperref options (and metadata)
    pdflang={jp},
    pdftitle={はじめての LuaTeX-ja},
    pdfsubject={ちゃんとLuaTeX-jaで日本語が出るかな？},
    pdfauthor={Spiegel},
    pdfkeywords={LuaTeX-ja, PDF/A},
    pdfcopyright={Written by Spiegel on 2014, and licensed under CC-BY.},
    pdflicenseurl={http://creativecommons.org/licenses/by/4.0/},
    pdfcontacturl={http://www.baldanders.info/},
    pdfcontactcity={Hiroshima},
    pdfcontactcountry={Japan},
    pdfcontactregion={JA},
    pdfcaptionwriter={Spiegel},
    baseurl={http://www.baldanders.info/mdwiki/},
    draft=false,
    bookmarks=true,
    bookmarksnumbered=true,
    bookmarksopen=false,
    colorlinks=true,
    linkcolor=red,
    citecolor=green,
    filecolor=magenta,
    urlcolor=cyan
}

\begin{document}

\maketitle
\tableofcontents

\section{はじめてのLua\TeX-ja}

ちゃんとLua\TeX-jaで日本語が出るかな？

\subsection{出たかな？}

長い文章を入力するとちゃんと右端のところで折り返されるかな？
大丈夫そうな気がするけど．ちょっと不安だけど何事も挑戦だよね．

\nocite{Book:JISHandbook}\nocite{Book:CharCode}\nocite{Book:CharCode2}
\printbibliography[title=参考文献]

\end{document}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
</feed>
