<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of  linux - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/linux/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/linux/index.xml" />
	<id>tag:text.Baldanders.info,2019-04-20:/tags</id>
	<updated>2019-04-20T19:14:30+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Ubuntu 19.04 へのアップグレードを試す</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/upgrade-ubuntu-19_04/" />
		<id>tag:text.Baldanders.info,2019-04-20:/remark/2019/04/upgrade-ubuntu-19_04/</id>
		<published>2019-04-20T10:14:30+00:00</published>
		<updated>2019-04-20T10:14:58+00:00</updated>
		<summary>こういうアップグレードとかやると，いかに Windows がシステムとして駄目か分かるよな。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 19.04 がリリースされたようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/04/ubuntu-1904-15-ubuntu-1904.html&#34;&gt;Ubuntu 19.04 その15 - Ubuntu 19.04がリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;私が検証中の仮想環境&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vb1&#34;&gt;&lt;a href=&#34;#fn:vb1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; でもソフトウェアの更新&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:upgrd1&#34;&gt;&lt;a href=&#34;#fn:upgrd1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; 後に以下のメッセージが出た。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-esign.png&#34;&gt;&lt;img src=&#34;./upgrade-sign.png&#34; srcset=&#34;./upgrade-sign.png 645w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;折角なのでアップグレードを試してみるとするか（仕事用のマシンじゃないので LTS バージョンを使う気は更々ない）。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; のアップグレード&lt;/h2&gt;

&lt;p&gt;「アップグレード」ボタンを押すとリリースノートが表示される。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-relnote.png&#34;&gt;&lt;img src=&#34;./upgrade-relnote.png&#34; srcset=&#34;./upgrade-relnote.png 600w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;文章中の空白文字が詰められていて「なんじゃこりゃ」な画面だが（何かの署名かと思ったぜ&lt;code&gt;w&lt;/code&gt;），気にせず「アップグレード」ボタンを押す。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-prepare.png&#34;&gt;&lt;img src=&#34;./upgrade-prepare.png&#34; srcset=&#34;./upgrade-prepare.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;これでしばらく経過を眺めていると以下のワーニングが出る。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-warning1.png&#34;&gt;&lt;img src=&#34;./upgrade-warning1.png&#34; srcset=&#34;./upgrade-warning1.png 1533w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;どうも &lt;a href=&#34;http://www.ubuntulinux.jp/&#34;&gt;Ubuntu Japanese Team&lt;/a&gt; や他のサードパーティのリポジトリは外されてしまうらしい。
まぁ，これはしょうがない。
&lt;a href=&#34;#srclist&#34;&gt;あとで繋げばいいし&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;処理を続けると確認画面が表示されるので追加・変更・削除されるソフトウェアを確認しておく。
どうやら &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt;, &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;, &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; といったセキュリティ関連のツールもアップグレードされるようだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-confirm2.png&#34;&gt;&lt;img src=&#34;./upgrade-confirm2.png&#34; srcset=&#34;./upgrade-confirm2.png 1026w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-confirm3.png&#34;&gt;&lt;img src=&#34;./upgrade-confirm3.png&#34; srcset=&#34;./upgrade-confirm3.png 1026w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;確認して問題ないようなら「アップグレードを開始」ボタンを押して処理を続行する。
アップグレードは時間がかかるのでお茶でも淹れてこよう。&lt;/p&gt;

&lt;p&gt;途中でワーニングが出たりもしたが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:w1&#34;&gt;&lt;a href=&#34;#fn:w1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-warning2.png&#34;&gt;&lt;img src=&#34;./upgrade-warning2.png&#34; srcset=&#34;./upgrade-warning2.png 1190w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;気にせず最後まで終わらせる。
終わったら（再起動しろとは言われなかったが）一応再起動しておく。&lt;/p&gt;

&lt;p&gt;再起動後，気になっていたセキュリティ・ツールのバージョンをチェックしてみた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.12
libgcrypt 1.8.4
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: /home/username/.gnupg
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256,
      TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2

$ openssl version
OpenSSL 1.1.1b  26 Feb 2019

$ ssh -V
OpenSSH_7.9p1 Ubuntu-10, OpenSSL 1.1.1b  26 Feb 2019&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;おおっ。
&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; はまだちょっと古いが &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; と &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; は最新になっている。
まぁこのくらいなら許容範囲だろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ver1&#34;&gt;&lt;a href=&#34;#fn:ver1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;srclist&#34;&gt;サードパーティのリポジトリを再び有効にする&lt;/h2&gt;

&lt;p&gt;アップグレード時に外されたサードパーティのリポジトリをチェックしておく。
「ソフトウェアとアップデート」を開いて「他のソフトウェア」タブを見てみる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-srclist.png&#34;&gt;&lt;img src=&#34;./upgrade-srclist.png&#34; srcset=&#34;./upgrade-srclist.png 972w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;うん，外れてるね。
&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; のリポジトリは有効にしておく。
&lt;a href=&#34;http://www.ubuntulinux.jp/&#34;&gt;Ubuntu Japanese Team&lt;/a&gt; のリポジトリも有効にしておけばいいかな。&lt;/p&gt;

&lt;p&gt;これで &lt;code&gt;apt update&lt;/code&gt; と，必要に応じて &lt;code&gt;apt upgrade&lt;/code&gt; や &lt;code&gt;apt autoremove&lt;/code&gt; を行えば OK。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;しかし，なんだな。&lt;/h2&gt;

&lt;p&gt;こういうアップグレードとかやると，いかに Windows がシステムとして駄目か分かるよな。
パソコンでもスマホのような携帯端末でも定期的にアップデートされることを前提にハードウェアもソフトウェアも構成しないと駄目だということだよねぇ。&lt;/p&gt;

&lt;p&gt;いまや Office ツールは Microsoft の独占というほどでもないし，大抵のことは Web インタフェースがあるのでブラウザがあればなんとかなる。
と考えるとやはり Windows を捨てる選択は正解だなと改めて思う。
他人に薦められるかと言えば，それは別問題だが（笑）&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-git-from-ppa/&#34;&gt;PPA から Git をインストールする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34;&gt;Ubuntu に Mono を導入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:vb1&#34;&gt;余談だが &lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; でも 6.0.6 がリリースされている。アップデートは計画的に。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:vb1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:upgrd1&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では「ソフトウェアの更新」で GUI によるソフトウェアのアップデートが可能である。また「ソフトウェアとアップデート」を使って更新の自動化や LivePatch の設定も可能だ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:upgrd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:w1&#34;&gt;あとで確認したが，ちゃんと最新版が入ってるっぽい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:w1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ver1&#34;&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; は 1.1.1 系の最新， &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; は 7.9 系の最新になっていた。 Facebook の TL で教えてもらったが， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; はパッケージマネージャでパッケージの完全性検証に使われるため特に保守的な管理になっているらしい。まぁ脆弱性や不具合等は随時バックポートされているそうなので，バージョン番号であまり神経質にならないほうがいいのかも知れない。ただ &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の動向を追いかけている身としては何とか改善したい。でもそれは後々のお楽しみということで。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ver1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu に ATOM エディタを導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/atom-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-15:/remark/2019/04/atom-in-ubuntu/</id>
		<published>2019-04-15T14:32:39+00:00</published>
		<updated>2019-04-20T10:04:28+00:00</updated>
		<summary>この記事は随時更新します。 悪しからずご了承の程を。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;さて，そろそろ &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に入れようか。&lt;/p&gt;

&lt;p&gt;なお，この記事は随時更新します。
悪しからずご了承の程を。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;前準備&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; の&lt;a href=&#34;https://github.com/atom/atom/&#34; title=&#34;atom/atom: The hackable text editor&#34;&gt;リポジトリ&lt;/a&gt;に各バージョンの &lt;code&gt;atom-amd64.deb&lt;/code&gt; ファイルが公開されているので，これを使う。&lt;/p&gt;

&lt;p&gt;deb ファイルを使ってインストールを行うには &lt;code&gt;gdebi&lt;/code&gt; というコマンドを使うらしい。
これは APT で取得可能だ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show gdebi-core
Package: gdebi-core
Version: 0.9.5.7+nmu2
Priority: optional
Section: universe/admin
Source: gdebi
Origin: Ubuntu
Maintainer: Ubuntu Developers &amp;lt;ubuntu-devel-discuss@lists.ubuntu.com&amp;gt;
Original-Maintainer: Ubuntu Developers &amp;lt;ubuntu-dev-team@lists.alioth.debian.org&amp;gt;
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 876 kB
Depends: python3:any (&amp;gt;= 3.3.2-2~), python3-apt, python3-debian, file
Suggests: xz-utils | xz-lzma
Task: ubuntu-mate-core, ubuntu-mate-desktop
Download-Size: 116 kB
APT-Sources: http://jp.archive.ubuntu.com/ubuntu cosmic/universe amd64 Packages
Description: simple tool to install deb files
 gdebi を使うと、ローカルの deb パッケージをその依存関係を解決しながらインス トールできます。apt
 は同じ動作をしますが、インストールできるのはリモート (http, ftp) にあるパッケージのみです。
 .
 It can also resolve build-depends of local debian/control files.
 .
 This package contains the libraries and command-line utility.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ふむむ。
なるほど。&lt;/p&gt;

&lt;p&gt;ではインストールしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install gdebi-core&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールできたら動作確認しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gdebi --version
0.9.5.7+nmu2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よしよし。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/releases&#34; title=&#34;Releases · atom/atom&#34;&gt;リリースページ&lt;/a&gt; から最新版の &lt;code&gt;atom-amd64.deb&lt;/code&gt; ファイルをダウンロードし &lt;code&gt;gdebi&lt;/code&gt; コマンドでインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdebi atom-amd64.deb
Reading package lists... Done
Building dependency tree        
Reading state information... Done
Reading state information... Done
以下のパッケージのインストールが必要です: gconf-service gconf-service-backend gconf2 gconf2-common libgconf-2-4 libpython-stdlib libpython2-stdlib python python-minimal python2 python2-minimal python2.7 python2.7-minimal 

A hackable text editor for the 21st Century.
 Atom is a free and open source text editor that is modern, approachable, and hackable to the core.
ソフトウェアパッケージをインストールしますか? [y/N]:y

[...snip...]

atom-amd64.deb を展開する準備をしています ...
atom (1.36.0) を展開しています...
atom (1.36.0) を設定しています ...
desktop-file-utils (0.23-3ubuntu3) のトリガを処理しています ...
gnome-menus (3.13.3-11ubuntu2) のトリガを処理しています ...
mime-support (3.60ubuntu1) のトリガを処理しています ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールが完了するとドックのアプリボタンで表示されるアプリ一覧にアイコンが追加される。
もちろんターミナルからも起動できる。
1.36 から単一のファイルのみを指定して起動することが可能になった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ atom ~/work/foo.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./open-single-file-by-atom.png&#34;&gt;&lt;img src=&#34;./open-single-file-by-atom.png&#34; srcset=&#34;./open-single-file-by-atom.png 790w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;善き哉。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 用にフォントを導入する。&lt;/h2&gt;

&lt;p&gt;個人的にテキストエディタのフォントは &lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt;，そして日本語は明朝体に限る。
日本語は標準の NOTO フォントを使うとして &lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt; はネットから取ってこないと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; ではフォントの置き場所は以下の3箇所になるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/share/fonts&lt;/code&gt; : システムフォント&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/share/fonts&lt;/code&gt; : 追加フォントをマシンで共有する場合&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.fonts&lt;/code&gt; : 個人で導入する場合&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのディレクトリのいずれかに入れたらキャッシュを更新しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-cache -fv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちゃんと導入できたか確認しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-list | grep Inconsolata
/home/username/.fonts/Inconsolata.otf: Inconsolata:style=Medium&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; でフォントを指定する場合には Settings → Editor Settings の Font Family の項目で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Inconsolata, Noto Serif CJK JP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などと指定しておけばよい。
ちなみに NOTO フォントは以下のように配置されている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-list | grep Noto | grep JP
/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans CJK JP,Noto Sans CJK JP Bold:style=Bold,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc: Noto Serif CJK JP:style=Bold
/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Bold:style=Bold,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Medium.ttc: Noto Sans CJK JP,Noto Sans CJK JP Medium:style=Medium,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Black.ttc: Noto Serif CJK JP,Noto Serif CJK JP Black:style=Black,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans CJK JP,Noto Sans CJK JP Regular:style=Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Light.ttc: Noto Serif CJK JP,Noto Serif CJK JP Light:style=Light,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc: Noto Serif CJK JP:style=Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Regular:style=Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-DemiLight.ttc: Noto Sans CJK JP,Noto Sans CJK JP DemiLight:style=DemiLight,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Thin.ttc: Noto Sans CJK JP,Noto Sans CJK JP Thin:style=Thin,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Light.ttc: Noto Sans CJK JP,Noto Sans CJK JP Light:style=Light,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-SemiBold.ttc: Noto Serif CJK JP,Noto Serif CJK JP SemiBold:style=SemiBold,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Black.ttc: Noto Sans CJK JP,Noto Sans CJK JP Black:style=Black,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-ExtraLight.ttc: Noto Serif CJK JP,Noto Serif CJK JP ExtraLight:style=ExtraLight,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Medium.ttc: Noto Serif CJK JP,Noto Serif CJK JP Medium:style=Medium,Regular&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_3&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxconfig.org/install-atom-on-ubuntu-18-04-bionic-beaver-linux&#34;&gt;Install Atom on Ubuntu 18.04 Bionic Beaver Linux - LinuxConfig.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.leo-leo.uno/2018/08/18/392/&#34;&gt;ubuntu18.04にAtomをインストール – v0.0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxfan.info/ubuntu-18-04-change-ja-font&#34;&gt;Ubuntu 18.04 LTSの日本語フォントを変更する！【詳細解説】 | LFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.ubuntulinux.jp/UbuntuTips/Desktop/InstallFont&#34;&gt;UbuntuTips/Desktop/InstallFont - Ubuntu Japanese Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://orebibou.com/2017/01/centosubuntu%E3%81%A7%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/&#34;&gt;CentOS/Ubuntuでフォントを追加する方法 | 俺的備忘録 〜なんかいろいろ〜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1180090.html&#34;&gt;GitHub、フリーのコードエディター「Atom 1.36」を正式公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/issues/18535&#34;&gt;Items in the Menu Bar are invisible on Ubuntu 18.10 when atom window is focused. · Issue #18535 · atom/atom · GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/atom-editor/&#34;&gt;ATOM Editor に関するメモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Ubuntu に Mono を導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-14:/remark/2019/04/mono-in-ubuntu/</id>
		<published>2019-04-14T10:36:23+00:00</published>
		<updated>2019-04-20T10:04:28+00:00</updated>
		<summary>今回は Mono および Mono で動くアプリケーションを導入する。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;今回は &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; および &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; で動くアプリケーションを導入する。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を導入するにはリポジトリの登録から始める必要がある。
&lt;code&gt;gnupg&lt;/code&gt; と &lt;code&gt;ca-certificates&lt;/code&gt; は既に入ってるみたいなので公開鍵のインポートとソースリストの追加から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
$ echo &amp;#34;deb https://download.mono-project.com/repo/ubuntu stable-bionic main&amp;#34; | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
$ sudo apt update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;続いて &lt;code&gt;mono-devel&lt;/code&gt; を導入する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install mono-devel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストール処理が完了したら念のため動作確認をしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mono -V
Mono JIT compiler version 5.20.1.19 (tarball Thu Apr 11 09:02:17 UTC 2019)
Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           __thread
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	Interpreter:   yes
	LLVM:          yes(600)
	Suspend:       hybrid
	GC:            sgen (concurrent by default)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; は OSS のパスワード管理ツールで，基本的には Windows 用だが各種プラットフォーム用のバージョンが公開されている。
&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では APT で導入可能である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show keepass2
Package: keepass2
Version: 2.39.1+dfsg-1
Priority: optional
Section: universe/utils
Origin: Ubuntu
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちょっとバージョンが古いがプラットフォームが違うし，まぁいいだろう。
インストールしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install keepass2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールが完了するとドックのアプリボタンで表示されるアプリ一覧にアイコンが追加される。
あとは Windows 版と同じように使える。&lt;/p&gt;

&lt;p&gt;パスワードを覚えるなんて脳みその無駄遣い。
適切な管理ツールでパスワード管理を行いましょう。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; は .NET Framework 上で動く &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 用の GUI フロントエンドだが， &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版もあって他プラットフォームでも利用できる。
ただし &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版はバージョン 2 系までしか対応していないので注意が必要である。&lt;/p&gt;

&lt;p&gt;ダウンロードページから &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版の&lt;a href=&#34;https://github.com/gitextensions/gitextensions/releases/tag/v2.51.05&#34; title=&#34;Release Version 2.51.05 · gitextensions/gitextensions&#34;&gt;最新バージョン&lt;/a&gt;をダウンロードする。&lt;/p&gt;

&lt;p&gt;適当なディレクトリにダウンロードした zip ファイルを &lt;code&gt;unzip&lt;/code&gt; コマンドで展開する。
&lt;code&gt;GitExtensions&lt;/code&gt; ディレクトリが作成されてファイルが展開されている筈である。&lt;/p&gt;

&lt;p&gt;展開されたファイルの中に &lt;code&gt;gitext.sh&lt;/code&gt; があるので，これに実行権限を付与して起動する。
今後のためにパスを通しておいたほうがいいだろう。&lt;/p&gt;

&lt;p&gt;最初に &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を起動すると言語の選択ウィンドウが表示される。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./language.png&#34;&gt;&lt;img src=&#34;./language.png&#34; srcset=&#34;./language.png 642w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;日本語があってよかったね。
あとは Windows 版と同じ。&lt;/p&gt;

&lt;p&gt;けど Windows 版と比べて操作感がイマイチなんだよなぁ。
まぁ &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; をメインに作業するわけではないので，これでもいいか。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;【追記 2019-04-20】 &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; が落ちる&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; を &lt;a href=&#34;{{ ref&#34; title=&#34;/remark/2019/04/upgrade-ubuntu-19_04.md&amp;quot; }} &amp;quot;Ubuntu 19.04 へのアップグレードを試す&#34;&gt;19.04 にアップグレード&lt;/a&gt;したら &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; が落ちるようになってしまった。
似た事例がないかと探してみたら &lt;code&gt;GitExtensions/Plugins/Bitbucket.dll&lt;/code&gt; を削除したら行けるみたいな記述を見かけたので試してみたら上手く行ったっぽい？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codeofclimber.ru/2015/how-to-install-gitextensions-in-ubuntu/&#34;&gt;How to install GitExtensions in Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やれやれだぜ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; の代わりになるような GUI フロントエンドを探しているのだがいいのがない。
コミットやタギングで電子署名を付与できて結果を検証できればいいのだが，特にタギングに署名できる製品がない。
&lt;a href=&#34;https://blog.axosoft.com/gitkraken-v5-0/&#34;&gt;GitKraken v5.0&lt;/a&gt; ならいけると思ったのだが設定画面が分かりにくい上にフリー版だと署名の検証ができないっぽい？&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;.NET Framework と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と .NET Core&lt;/h2&gt;

&lt;p&gt;.NET Framework と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と .NET Core の関係がいまひとつ分からなかったのでちょろんと調べてみた。
かなり大雑把な説明なのはご容赦。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;.NET Framework&lt;/h3&gt;

&lt;p&gt;.NET Framework が最初に公開されたのは2001年。
基盤となる CLI (Common Language Infrastructure) や CLR (Common Language Runtime) は標準化され Windows 以外のプラットフォームでも実装可能となるよう設計されたが，実際にはリファレンス実装である .NET Framework は Windows 以外には対応しなかった。
まぁ，当時の Microsoft は FOSS に敵対的だったし，それもやむなしというところだろうか。&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と Xamarin&lt;/h3&gt;

&lt;p&gt;当然ながら，.NET Framework に対抗する OSS 製品を作ろうという動きがあり，そのうちのひとつが &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; Project であった。
&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; はマルチプラットフォームで動作するアプリケーション基盤として実装されているのが特徴である。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を巡っては紆余曲折があったが（生臭い話は省略），最終的に Xamarin が開発母体となった。&lt;/p&gt;

&lt;p&gt;Xamarin は  &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; Project のオーナー企業であると同時に &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を基盤とした製品群を指すようだ。
なので今後は &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin と一括りにしてしまおう。&lt;/p&gt;

&lt;p&gt;企業としての Xamarin は後に Microsoft に買収され &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin は Microsoft 傘下である &lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; において今も開発が続けられている。&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;.NET Core&lt;/h3&gt;

&lt;p&gt;一方，実質 Windows でしか動作しない .NET Framework の派生として .NET Core が Microsoft からリリースされた。
.NET Core はマルチプラットフォームで動作する OSS 製品として，こちらも &lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; で開発が行われている。&lt;/p&gt;

&lt;p&gt;ここに於いて Microsoft は経営方針の大転換を果たしたわけだ。&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;.NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin&lt;/h3&gt;

&lt;p&gt;現在 Microsoft は OSS の .NET シリーズとして .NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin の2系統の製品を持っている。
両者の棲み分けは以下のような感じらしい。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156949/img.html&#34;&gt;&lt;img src=&#34;https://ascii.jp/elem/000/001/156/1156949/ph07_2000x1125.jpg&#34; srcset=&#34;https://ascii.jp/elem/000/001/156/1156949/ph07_2000x1125.jpg 2000w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;つまり Linux や macOS，あるいは iOS や Android の GUI アプリケーションとしては &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin，サーバ・サイドあるいはクラウド向けには .NET Core ということのようだ。
さらに将来的には Windows アプリケーション向けの .NET Framework，マルチプラットフォーム向けの .NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin の基盤を共通化すると表明されている。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156951/img.html&#34;&gt;&lt;img src=&#34;https://ascii.jp/elem/000/001/156/1156951/ph09_2000x1125.jpg&#34; srcset=&#34;https://ascii.jp/elem/000/001/156/1156951/ph09_2000x1125.jpg 2000w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;そうなったら &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; も役目を終える感じになるのかねぇ。&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mag.osdn.jp/17/05/22/150000&#34;&gt;C#7に完全対応した「Mono 5.0」が公開 | OSDN Magazine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する (1/3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/dotnet/core/about&#34;&gt;.NET Core について | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/jp/articles/varieties-dotnet&#34;&gt;.NETの派生を理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ossnews.jp/compare/Mono/dotNET_Core&#34;&gt;オープンソースのMonoと.NET Coreを比較&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/amay077/items/399002a02c1abf9d620b&#34;&gt;Xamarin 最近どうよ？ - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/gitextensions/gitextensions/wiki/How-To%3A-run-Git-Extensions-on-Linux&#34;&gt;How To: run Git Extensions on Linux · gitextensions/gitextensions Wiki&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Go 1.12.4 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/04/go-1_12_4-is-released/" />
		<id>tag:text.Baldanders.info,2019-04-13:/release/2019/04/go-1_12_4-is-released/</id>
		<published>2019-04-13T10:25:08+00:00</published>
		<updated>2019-04-13T10:31:24+00:00</updated>
		<summary>なんか 1.12.3 がちゃんと直ってなかったみたい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;なんか 1.12.3 がちゃんと直ってなかったみたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/_lOiGyQR5Fs&#34;&gt;Go 1.12.4 and Go 1.11.9 are released - Google Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;go1.12.3 (released 2019/04/08) was accidentally released without its intended fix. It is identical to go1.12.2, except for its version number. The intended fix is in go1.12.4.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.12.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで Linux 環境の方は 1.12.4 にアップデートしましょう。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go 1.12.3 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/04/go-1_12_3-is-released/" />
		<id>tag:text.Baldanders.info,2019-04-09:/release/2019/04/go-1_12_3-is-released/</id>
		<published>2019-04-09T12:32:01+00:00</published>
		<updated>2019-04-09T12:49:03+00:00</updated>
		<summary>この前 1.12.2 が出たばかりなんだけどね。 Linux 環境の方は要アップデート。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;この前 1.12.2 が出たばかりだが &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.12.3 リリースされた。
セキュリティ・アップデートはなし。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/o8f9J4WQhKs&#34;&gt;Go 1.12.3 and Go 1.11.8 are released - Google Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;go1.12.3 (released 2019/04/08) fixes an issue where using the prebuilt binary releases on older versions of GNU/Linux &lt;a href=&#34;https://golang.org/issue/31293&#34;&gt;led to failures&lt;/a&gt; when linking programs that used cgo. Only Linux users who hit this issue need to update. &lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.12.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで Linux 環境の方はアップデートしたほうがいいだろう。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>PPA から Git をインストールする</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/install-git-from-ppa/" />
		<id>tag:text.Baldanders.info,2019-04-08:/remark/2019/04/install-git-from-ppa/</id>
		<published>2019-04-07T15:12:49+00:00</published>
		<updated>2019-04-20T10:04:28+00:00</updated>
		<summary>Git に関しては PPA (Personal Package Archive) で最新版のビルドを提供されている方がいるらしい。ありがたや。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/move-gpg-keyring/&#34; title=&#34;Windows 環境で作った GnuPG の鍵束を Ubuntu に移行する&#34;&gt;前回&lt;/a&gt;で &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; と &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を連携させたのでようやく &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; で遊べるようになった。&lt;/p&gt;

&lt;p&gt;しかし，実際にコマンドを叩いてみたら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git version

Command &amp;#39;git&amp;#39; not found, but can be installed with:

sudo apt install git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;またかよ。
嫌な予感しかしない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show git
Package: git
Version: 1:2.19.1-1ubuntu1.1
Priority: optional
Section: vcs
Origin: Ubuntu
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;やっぱり。
2.21.0 が出たのってだいぶ前だよな。&lt;/p&gt;

&lt;p&gt;いろいろ調べてみたら &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; に関しては &lt;a href=&#34;https://launchpad.net/ubuntu/+ppas&#34;&gt;PPA (Personal Package Archive)&lt;/a&gt; で最新版のビルドを提供されている方がいるらしい。
ありがたや。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://launchpad.net/~git-core/+archive/ubuntu/ppa&#34;&gt;Git stable releases : “Ubuntu Git Maintainers” team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;何故か &lt;code&gt;add-apt-repository&lt;/code&gt; は既に入ってるぽかったので，まずはリポジトリを導入しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo add-apt-repository ppa:git-core/ppa
 The most current stable version of Git for Ubuntu.

For release candidates, go to https://launchpad.net/~git-core/+archive/candidate .
 詳しい情報: https://launchpad.net/~git-core/+archive/ubuntu/ppa
[ENTER] を押すと続行します。Ctrl-c で追加をキャンセルできます。

ヒット:1 http://jp.archive.ubuntu.com/ubuntu cosmic InRelease
取得:2 http://jp.archive.ubuntu.com/ubuntu cosmic-updates InRelease [88.7 kB]
ヒット:3 http://archive.ubuntulinux.jp/ubuntu cosmic InRelease
取得:4 http://jp.archive.ubuntu.com/ubuntu cosmic-backports InRelease [74.6 kB]
ヒット:5 http://archive.ubuntulinux.jp/ubuntu-ja-non-free cosmic InRelease
取得:6 http://security.ubuntu.com/ubuntu cosmic-security InRelease [88.7 kB]
取得:7 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic InRelease [20.7 kB]
取得:8 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main i386 Packages [3,032 B]
取得:9 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main amd64 Packages [3,032 B]
取得:10 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main Translation-en [2,248 B]
281 kB を 3秒 で取得しました (81.9 kB/s)
パッケージリストを読み込んでいます... 完了

$ sudo apt update
ヒット:1 http://archive.ubuntulinux.jp/ubuntu cosmic InRelease
ヒット:2 http://jp.archive.ubuntu.com/ubuntu cosmic InRelease
ヒット:3 http://archive.ubuntulinux.jp/ubuntu-ja-non-free cosmic InRelease
取得:4 http://jp.archive.ubuntu.com/ubuntu cosmic-updates InRelease [88.7 kB]
取得:5 http://jp.archive.ubuntu.com/ubuntu cosmic-backports InRelease [74.6 kB]
取得:6 http://security.ubuntu.com/ubuntu cosmic-security InRelease [88.7 kB]
ヒット:7 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic InRelease
252 kB を 2秒 で取得しました (155 kB/s)
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
パッケージはすべて最新です。

$ sudo apt upgrade
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
アップグレードパッケージを検出しています... 完了
アップグレード: 0 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。

$ sudo apt show git
Package: git
Version: 1:2.21.0-0ppa1~ubuntu18.10.1
Priority: optional
Section: vcs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よし。
最新版が入ってるな。
インストールっと。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでインストール完了。
動作確認してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git version
git version 2.21.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よしよし。
おっと，初期設定しないと。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global user.name &amp;#34;Alice&amp;#34;
$ git config --global user.email &amp;#34;alice@example.com&amp;#34;
$ git config --global user.signingkey 697CDD8A
$ git config --global commit.gpgsign true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_0&#34;&gt;SSH 経由で git clone する&lt;/h2&gt;

&lt;p&gt;まずは適当なリポジトリを SSH 経由で git clone してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git clone git@github.com:spiegel-im-spiegel/gocli.git github.com/spiegel-im-spiegel/gocli
Cloning into &amp;#39;github.com/spiegel-im-spiegel/gocli&amp;#39;...
The authenticity of host &amp;#39;github.com (192.30.255.112)&amp;#39; can&amp;#39;t be established.
RSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &amp;#39;github.com,192.30.255.112&amp;#39; (RSA) to the list of known hosts.
remote: Enumerating objects: 71, done.
remote: Counting objects: 100% (71/71), done.
remote: Compressing objects: 100% (52/52), done.
remote: Total 246 (delta 31), reused 53 (delta 16), pack-reused 175
Receiving objects: 100% (246/246), 53.99 KiB | 431.00 KiB/s, done.
Resolving deltas: 100% (107/107), done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/move-gpg-keyring/&#34; title=&#34;Windows 環境で作った GnuPG の鍵束を Ubuntu に移行する&#34;&gt;前回&lt;/a&gt;で &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; と &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を連携させたので認証時に Pinentry が起動する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;../move-gpg-keyring/ssh-login.png&#34;&gt;&lt;img src=&#34;../move-gpg-keyring/ssh-login.png&#34; srcset=&#34;../move-gpg-keyring/ssh-login.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;git-credential による認証管理&lt;/h2&gt;

&lt;p&gt;SSH 経由でリポジトリにアクセスする場合はこれでいいのだが HTTPS 経由でアクセスする場合はアクセスするたびに毎回パスワードを訊かれるため鬱陶しい。
この場合は git-credential による認証管理を行うのがいいようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では gnome-keyring を使った認証管理が使える。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shugo/git-credential-gnomekeyring&#34;&gt;shugo/git-credential-gnomekeyring: A git credential helper for GNOME keyring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これによると&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;There is a git package that includes all of contrib sources in /usr/share/doc/git/contrib/. Users who want to use git-credential-gnomekeyring should copy source from /usr/share/doc/git/contrib/credential/gnome-keyring to their working directory, then users can make and install it.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/shugo/git-credential-gnomekeyring&#34;&gt;shugo/git-credential-gnomekeyring&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということらしい。
さっそくやってみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cp -r /usr/share/doc/git/contrib/credential/gnome-keyring ~/work
$ cd ~/work/gnome-keyring
$ make
gcc -c -g -O2 -Wall -o git-credential-gnome-keyring.o git-credential-gnome-keyring.c
git-credential-gnome-keyring.c:28:10: fatal error: glib.h: そのようなファイルやディレクトリはありません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まじすか。
まぁ，入れればいいか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install libglib2.0-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では再開。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ make
gcc -c -g -O2 -Wall -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -o git-credential-gnome-keyring.o git-credential-gnome-keyring.c
git-credential-gnome-keyring.c:29:10: fatal error: gnome-keyring.h: そのようなファイルやディレクトリはありません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ええい。
これも入れればいいのね。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install libgnome-keyring-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ make
gcc -g -O2 -Wall  -I/usr/include/gnome-keyring-1 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -o git-credential-gnome-keyring.o -c git-credential-gnome-keyring.c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ワーニングいっぱい出たけどようやく通ったよ。
これで作成された &lt;code&gt;git-credential-gnome-keyring&lt;/code&gt; をパスの通ったディレクトリに入れれば完了。
&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 側が認識しているか確認してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git help -a | grep credential-
   credential-cache     Helper to temporarily store passwords in memory
   credential-store     Helper to store credentials on disk
   credential-gnome-keyring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よしよし。
認識しているな。&lt;/p&gt;

&lt;p&gt;これで &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 設定に以下を加えれば完了となる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global credential.helper gnome-keyring&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;適当なリポジトリで確かめてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git clone https://github.com/spiegel-im-spiegel/private-repos.git aaa
Cloning into &amp;#39;aaa&amp;#39;...
Username for &amp;#39;https://github.com&amp;#39;: alice@example.com
Password for &amp;#39;https://alice@example.com@github.com&amp;#39;: 
remote: Enumerating objects: 51, done.
remote: Counting objects: 100% (51/51), done.
remote: Compressing objects: 100% (41/41), done.
remote: Total 51 (delta 8), reused 47 (delta 8), pack-reused 0
Unpacking objects: 100% (51/51), done.

$ git clone https://github.com/spiegel-im-spiegel/private-repos.git bbb
Cloning into &amp;#39;bbb&amp;#39;...
remote: Enumerating objects: 51, done.
remote: Counting objects: 100% (51/51), done.
remote: Compressing objects: 100% (41/41), done.
remote: Total 51 (delta 8), reused 47 (delta 8), pack-reused 0
Unpacking objects: 100% (51/51), done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よし。
2回目からは訊いてこないな。&lt;/p&gt;

&lt;p&gt;ちなみにこのときのパスワードは Web ページにサインインするときのパスワードじゃなくて，設定画面で振り出した personal access token を使うのでご注意を（つか，私がすっかり忘れててハマったのだが&lt;code&gt;w&lt;/code&gt;）。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://allabout.co.jp/gm/gc/438675/&#34;&gt;UbuntuのPPAて何？ [Linuxの使い方] All About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://spangled-shalalala.hatenablog.com/entry/2017/09/05/060106&#34;&gt;ubuntuのapt-getで最新版のgitをインストールする方法 - spangled shalalala blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/ja/v1/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB&#34;&gt;Git - Gitのインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://note.kurodigi.com/linux-gitclient/&#34;&gt;Linuxで使えるGitクライアントを集めてみた&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/solmin719/items/f174aab0fc73ddbc9cdf&#34;&gt;Ubuntu/Linuxで使えるGitのGUIクライアント(無料)まとめ - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/git-commit-with-openpgp-signature/&#34;&gt;Git Commit で OpenPGP 署名を行う&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>NYAGOS 4.4.2 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/04/nyagos-4_4_2-is-released/" />
		<id>tag:text.Baldanders.info,2019-04-07:/release/2019/04/nyagos-4_4_2-is-released/</id>
		<published>2019-04-07T00:16:12+00:00</published>
		<updated>2019-04-19T14:35:17+00:00</updated>
		<summary>今回は盛り沢山だぞ！</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.4.2_0 がリリースされた。
つか，もたもたしてたら 4.4.2_1 も出てたよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.2_0&#34;&gt;Release 4.4.2_0 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.2_1&#34;&gt;Release 4.4.2_1 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;変更点は以下の通り。
盛り沢山だぞ！&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;OLEオブジェクトからLuaオブジェクトへの変換が日付型などでパニックを起こす不具合を修正&lt;/li&gt;
&lt;li&gt;Luaの数値が実数として OLE に渡されるべきだったのに、整数として渡されていた。&lt;/li&gt;
&lt;li&gt;Lua: 関数: &lt;code&gt;nyagos.to_ole_integer(n)&lt;/code&gt; (数値を OLE 向けの整数に変換)を追加(trash.lua用)&lt;/li&gt;
&lt;li&gt;Lua: OLEObject に列挙用オブジェクトを得るメソッド &lt;code&gt;_iter()&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;Lua: OLEObject を開放するメソッド &lt;code&gt;OLEObject:_release()&lt;/code&gt; を追加&lt;/li&gt;
&lt;li&gt;trash.lua が COM の解放漏れを起こしていた問題を修正&lt;/li&gt;
&lt;li&gt;Lua: &lt;code&gt;create_object&lt;/code&gt;生成された IUnkown インスタンスが解放されていなかった不具合を修正&lt;/li&gt;
&lt;li&gt;「~ユーザ名」の展開を実装&lt;/li&gt;
&lt;li&gt;バッチファイル以外の実行ファイルの exit status が表示されなくなっていた不具合を修正&lt;/li&gt;
&lt;li&gt;%COMSPEC% が未定義の時に CMD.EXE を用いるエイリアス(ren,mklink,dir,...)が動かなくなっていた不具合を修正&lt;/li&gt;
&lt;li&gt;全角空白(%U+3000%)がパラメータの区切り文字と認識されていた点を修正&lt;/li&gt;
&lt;li&gt;(#359) -c,-k オプションで CMD.EXE のように複数の引数をとれるようにした&lt;/li&gt;
&lt;li&gt;「存在しないディレクトリ\何か」を補完しようとすると「The system cannot find the path specified.」と表示される不具合を修正 (Thx! tsuyoshicho)&lt;/li&gt;
&lt;li&gt;(#360) 幅ゼロやサロゲートペアな Unicode は&lt;code&gt;&amp;lt;NNNNN&amp;gt;&lt;/code&gt; と表示するようにした (Thx! tsuyoshicho)&lt;/li&gt;
&lt;li&gt;サロゲートペアな Unicode をそのまま出力するオプション --output-surrogate-pair を追加&lt;/li&gt;
&lt;li&gt;suコマンドで、ネットワークドライブが失なわれないようにした&lt;/li&gt;
&lt;li&gt;(#197) ソースがディレクトリで -s がない時、&lt;code&gt;ln&lt;/code&gt; はジャンクションを作成するようにした&lt;/li&gt;
&lt;li&gt;内蔵の mklink コマンドを実装し、&lt;code&gt;CMD.exe /c mklink&lt;/code&gt; のエイリアス &lt;code&gt;mklink&lt;/code&gt; を削除&lt;/li&gt;
&lt;li&gt;ゼロバイトの Lua ファイルを削除(cdlnk.lua, open.lua, su.lua, swapstdfunc.lua )&lt;/li&gt;
&lt;li&gt;(#262) &lt;code&gt;diskfree&lt;/code&gt; でボリュームラベルとファイルシステムを表示するようにした&lt;/li&gt;
&lt;li&gt;UNCパスがカレントディレクトリでもバッチファイルを実行できるようにした。&lt;/li&gt;
&lt;li&gt;UNCパスがカレントディレクトリの時、ren,assoc,dir,for が動作しない不具合を修正&lt;/li&gt;
&lt;li&gt;(#363) nyagos.alias.COMMAND=&amp;quot;string&amp;quot; 中では逆クォート置換が機能しない問題を修正 (Thx! tostos5963 &amp;amp; sambatriste )&lt;/li&gt;
&lt;li&gt;(#259) アプリケーションをダイアログで選んでファイルを開くコマンド &lt;code&gt;select&lt;/code&gt; を実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diskfree&lt;/code&gt; の出力フォーマットを修正&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.2_0&#34;&gt;Release 4.4.2_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;diskfree: 行末の空白を削除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&amp;quot;\Program Files&amp;quot;&lt;/code&gt; の最初の引用符が消えて、&lt;code&gt;Files&lt;/code&gt; が引数に含まれない不具合を修正&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.2_1&#34;&gt;Release 4.4.2_1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;新たに追加された &lt;code&gt;select&lt;/code&gt; コマンドはエクスプローラのコンテキストメニュー「プログラムから開く」に近い機能を提供していて，たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ select index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか打てば&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./select.png&#34;&gt;&lt;img src=&#34;./select.png&#34; srcset=&#34;./select.png 672w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;てな感じでファイルを開くプログラムの選択ダイアログが開く。
なにそれ素敵！&lt;/p&gt;

&lt;p&gt;まるきし余談だが，先々月に &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.4.1 が出てて，私も Issue 上げてたのに記事にしてなかった。
1月2月はホンマに余裕がなかったからなぁ。
まぁ今は余裕があるかと言われればそうでもないんだけど...&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;【2019-04-13 追記】 NYAGOS 4.4.2_2 がリリースされた&lt;/h2&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Ctrl-RIGHT,ALT-F(次の単語へ), Ctrl-LEFT,ALT-B(前の単語へ)を実装&lt;/li&gt;
&lt;li&gt;インクリメンタルサーチ開始時にトップへ移動する時のバックスペースの数が間違っていた不具合を修正&lt;/li&gt;
&lt;li&gt;(#364) &lt;code&gt;ESC[0A&lt;/code&gt; というエスケープシーケンスが使われていた不具合を修正&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.2_2&#34;&gt;Release 4.4.2_2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
	</entry><entry>
		<title>Windows 環境で作った GnuPG の鍵束を Ubuntu に移行する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/move-gpg-keyring/" />
		<id>tag:text.Baldanders.info,2019-04-07:/remark/2019/04/move-gpg-keyring/</id>
		<published>2019-04-06T15:01:53+00:00</published>
		<updated>2019-04-07T09:49:46+00:00</updated>
		<summary>鍵束を Ubuntu 環境にコピーして OpenSSH 連携を確認するところまで。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;さて NAS に接続できてファイルのバックアップや移動が楽にできるようになった。
次は &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で遊んでみよう。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;なんぼなんでも古すぎるじゃろ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; のディストリビューションには最初から &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; が入っているのだが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.8
libgcrypt 1.8.3
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: /home/username/.gnupg
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256,
      TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;いやいや。
なんぼなんでも古すぎるじゃろ。
確かに最後にセキュリティアップデートが行われたのは&lt;a href=&#34;https://text.baldanders.info/release/2018/06/gnupg-2_2_8-and-libgcrypt-1_8_3-are-released/&#34; title=&#34;GnuPG 2.2.8 および Libgcrypt 1.8.3 がリリース（セキュリティ・アップデート）&#34;&gt;2018年の 2.2.8 のとき&lt;/a&gt;だけどさ。
あれから不具合の修正とかも結構あったのよ。&lt;/p&gt;

&lt;p&gt;調べてみたら &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; や &lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; では &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のアップデートに積極的ではない様子。
まぁ使えないことはないので，最新版の導入は&lt;del&gt;諦めて&lt;/del&gt;もとい後々のお楽しみにとっておいて，今回はこの 2.2.8 を使っていろいろやってみることにする。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;なにはともあれ鍵を作らないと&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の使い方の概要は拙文「&lt;a href=&#34;https://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート&lt;/a&gt;」を参考にどうぞ。
さっそく鍵を作ってみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-gen-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; future-default - 1w
gpg: ディレクトリ&amp;#39;/home/username/.gnupg&amp;#39;が作成されました
gpg: keybox&amp;#39;/home/username/.gnupg/pubring.kbx&amp;#39;が作成されました
たくさんのランダム・バイトの生成が必要です。キーボードを打つ、マウスを動か
す、ディスクにアクセスするなどの他の操作を素数生成の間に行うことで、乱数生
成器に十分なエントロピーを供給する機会を与えることができます。
gpg: /home/username/.gnupg/trustdb.gpg: 信用データベースができました
gpg: 鍵7979662E697CDD8Aを究極的に信用するよう記録しました
gpg: ディレクトリ&amp;#39;/home/username/.gnupg/openpgp-revocs.d&amp;#39;が作成されました
gpg: 失効証明書を &amp;#39;/home/username/.gnupg/openpgp-revocs.d/E23197776C20290F831D97747979662E697CDD8A.rev&amp;#39; に保管しました。
公開鍵と秘密鍵を作成し、署名しました。

pub   ed25519 2019-04-04 [SC] [有効期限: 2019-04-11]
      E23197776C20290F831D97747979662E697CDD8A
uid                      Alice &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;途中でパスフレーズを定義するために Pinentry が起動する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./new-passphrase.png&#34;&gt;&lt;img src=&#34;./new-passphrase.png&#34; srcset=&#34;./new-passphrase.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;おおっ。
これが &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の Pinentry か。
シンプルでよろしい。&lt;/p&gt;

&lt;p&gt;鍵作成後の &lt;code&gt;~/.gnupg&lt;/code&gt; ディレクトリの中身はこうなっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ls -al .gnupg/
合計 28
drwx------  4 username users 4096  4月  4 21:23 .
drwxr-xr-x 16 username users 4096  4月  4 21:23 ..
drwx------  2 username users 4096  4月  4 21:23 openpgp-revocs.d
drwx------  2 username users 4096  4月  4 21:23 private-keys-v1.d
-rw-r--r--  1 username users  634  4月  4 21:23 pubring.kbx
-rw-------  1 username users   32  4月  4 21:23 pubring.kbx~
-rw-------  1 username users 1240  4月  4 21:23 trustdb.gpg

$ ls -al .gnupg/private-keys-v1.d/
合計 16
drwx------ 2 username users 4096  4月  4 21:23 .
drwx------ 4 username users 4096  4月  4 21:23 ..
-rw------- 1 username users  340  4月  4 21:23 6103D260692806ECD8FF194DD5A42A166ECFCA7C.key
-rw------- 1 username users  332  4月  4 21:23 D08B6C062AC8FA95D4526EDADBDA906A74D26D77.key

$ ls -al .gnupg/openpgp-revocs.d/
合計 12
drwx------ 2 username users 4096  4月  4 21:23 .
drwx------ 4 username users 4096  4月  4 21:23 ..
-rw------- 1 username users 1401  4月  4 21:23 E23197776C20290F831D97747979662E697CDD8A.rev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに &lt;code&gt;openpgp-revocs.d&lt;/code&gt; ディレクトリには秘密鍵が， &lt;code&gt;openpgp-revocs.d&lt;/code&gt; ディレクトリには鍵の失効証明書が入っている。
失効証明書は作った鍵を執行させるために使うもので，重要なデータなので取り扱いは慎重に。&lt;/p&gt;

&lt;p&gt;これを見ると &lt;code&gt;~/.gnupg&lt;/code&gt; ディレクトリ以下のファイル・ディレクトリは他ユーザから見えないようにするのがいいみたいだね。&lt;/p&gt;

&lt;p&gt;作った鍵を使って試しに適当なテキストを署名してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ echo Hello world | gpg -u alice --clear-sign
-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Hello world
-----BEGIN PGP SIGNATURE-----

iIgEARYIADAWIQTiMZd3bCApD4Mdl3R5eWYuaXzdigUCXKX4dBIcYWxpY2VAZXhh
bXBsZS5jb20ACgkQeXlmLml83YogagD6A6tRm+uEgphlYrORJBZ9oRmFpRzImXO6
22I/HeiXTGkBALU1QLnv/xcPf1pMQRjpxM9SO/IupO/Zt9lryx4lFOAC
=8DRi
-----END PGP SIGNATURE-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このときも Pinentry が起動する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./unlock-private-key.png&#34;&gt;&lt;img src=&#34;./unlock-private-key.png&#34; srcset=&#34;./unlock-private-key.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の環境変数&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の環境変数は以下のコマンドで取得できるようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgconf --list-dirs
sysconfdir:/etc/gnupg
bindir:/usr/bin
libexecdir:/usr/lib/gnupg
libdir:/usr/lib/x86_64-linux-gnu/gnupg
datadir:/usr/share/gnupg
localedir:/usr/share/locale
socketdir:/run/user/1000/gnupg
dirmngr-socket:/run/user/1000/gnupg/S.dirmngr
agent-ssh-socket:/run/user/1000/gnupg/S.gpg-agent.ssh
agent-extra-socket:/run/user/1000/gnupg/S.gpg-agent.extra
agent-browser-socket:/run/user/1000/gnupg/S.gpg-agent.browser
agent-socket:/run/user/1000/gnupg/S.gpg-agent
homedir:/home/username/.gnupg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また shell 側の環境変数は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ env | grep GPG
GPG_AGENT_INFO=/run/user/1000/gnupg/S.gpg-agent:0:1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となっていて &lt;code&gt;GPG_AGENT_INFO&lt;/code&gt; に &lt;code&gt;agent-socket&lt;/code&gt; の値がセットされているのが分かる。
古いバージョンで要ると言われた &lt;code&gt;GPG_TTY&lt;/code&gt; 環境変数は要らなそうである。&lt;/p&gt;

&lt;p&gt;もし &lt;code&gt;GPG_AGENT_INFO&lt;/code&gt; に手動で値をセットするなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ export GPG_AGENT_INFO=$(gpgconf --list-dirs agent-socket):0:1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;って感じでいいかな。&lt;/p&gt;

&lt;p&gt;通信ソケットが置かれている &lt;code&gt;/run/user/1000/gnupg/&lt;/code&gt; ディレクトリはどうやら &lt;a href=&#34;https://specifications.freedesktop.org/basedir-spec/latest/&#34;&gt;XDG Base Directory Specification&lt;/a&gt; に準拠したディレクトリらしい。
&lt;code&gt;XDG_RUNTIME_DIR&lt;/code&gt; 環境変数が&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ env | grep XDG_RUNTIME_DIR
XDG_RUNTIME_DIR=/run/user/1000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と定義されているので多分そうだろう（&lt;code&gt;1000&lt;/code&gt; は &lt;code&gt;username&lt;/code&gt; ユーザの UID）。
環境変数 &lt;code&gt;XDG_RUNTIME_DIR&lt;/code&gt; で示されるディレクトリはユーザがログインしている間のみ存在が保証されているそうだ。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Pinentry の定義&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では Pinentry として &lt;code&gt;pinentry-gnome3&lt;/code&gt; と &lt;code&gt;pinentry-curses&lt;/code&gt; が組み込まれているようだ。
&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; インストール直後の既定は &lt;code&gt;pinentry-gnome3&lt;/code&gt; のようだが，これを切り替えるには&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo update-alternatives --config pinentry
alternative pinentry (/usr/bin/pinentry を提供) には 2 個の選択肢があります。

  選択肢    パス                    優先度  状態
------------------------------------------------------------
* 0            /usr/bin/pinentry-gnome3   90        自動モード
  1            /usr/bin/pinentry-curses   50        手動モード
  2            /usr/bin/pinentry-gnome3   90        手動モード

現在の選択 [*] を保持するには &amp;lt;Enter&amp;gt;、さもなければ選択肢の番号のキーを押してください: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればいいらしい。
実際には&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ls -lF /usr/bin/pinentry* 
lrwxrwxrwx 1 root root    26  4月  2 21:13 /usr/bin/pinentry -&amp;gt; /etc/alternatives/pinentry*
-rwxr-xr-x 1 root root 63992  7月  6  2018 /usr/bin/pinentry-curses*
-rwxr-xr-x 1 root root 72184  7月  6  2018 /usr/bin/pinentry-gnome3*
lrwxrwxrwx 1 root root    30  4月  2 21:13 /usr/bin/pinentry-x11 -&amp;gt; /etc/alternatives/pinentry-x11*

$ ls -lF /etc/alternatives/pinentry*
lrwxrwxrwx 1 root root 24  4月  2 21:13 /etc/alternatives/pinentry -&amp;gt; /usr/bin/pinentry-gnome3*
lrwxrwxrwx 1 root root 24  4月  2 21:13 /etc/alternatives/pinentry-x11 -&amp;gt; /usr/bin/pinentry-gnome3*
lrwxrwxrwx 1 root root 40  4月  2 21:13 /etc/alternatives/pinentry-x11.1.gz -&amp;gt; /usr/share/man/man1/pinentry-gnome3.1.gz
lrwxrwxrwx 1 root root 40  4月  2 21:13 /etc/alternatives/pinentry.1.gz -&amp;gt; /usr/share/man/man1/pinentry-gnome3.1.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな構成になっているみたい。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Windows 環境で作った &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の鍵束を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; にコピーする&lt;/h2&gt;

&lt;p&gt;では Windows 環境で作成・運用している &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の鍵束を Unintu にコピーしてみよう。&lt;/p&gt;

&lt;p&gt;必要なファイルは以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pubring.kbx&lt;/code&gt;： 公開鍵の鍵束&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trustdb.gpg&lt;/code&gt;： &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 用の信用データベース・ファイル&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private-keys-v1.d/*.rev&lt;/code&gt;： 秘密鍵ファイル&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openpgp-revocs.d/*.key&lt;/code&gt;： 失効証明書&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tofu.db&lt;/code&gt;： &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34; title=&#34;Trust on first use - Wikipedia&#34;&gt;TOFU&lt;/a&gt; 用の信用データベース・ファイル（もしあれば）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpg.conf&lt;/code&gt;： &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 用の設定ファイル（もしあれば）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpg-agent.conf&lt;/code&gt;： &lt;code&gt;gpg-agent&lt;/code&gt; 用の設定ファイル（もしあれば）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sshcontrol&lt;/code&gt;： &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; 認証用鍵の定義ファイル（もしあれば）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのファイルを &lt;code&gt;~/.gnupg&lt;/code&gt; ディレクトリにディレクトリ構造ごとコピーする（以前のファイルは削除しておいてね）。
&lt;code&gt;chmod&lt;/code&gt; コマンドでアクセス権を設定するのも忘れずに。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gpg.conf&lt;/code&gt;, &lt;code&gt;gpg-agent.conf&lt;/code&gt;, &lt;code&gt;sshcontrol&lt;/code&gt; 各ファイルの中身はテキストなのだが，改行コードが &lt;code&gt;CRLF&lt;/code&gt; になっているかもしれないのであらかじめ始末しておくこと&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gnkf1&#34;&gt;&lt;a href=&#34;#fn:gnkf1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;これで完了。
試しに私の鍵束に入っている &lt;a href=&#34;https://www.jpcert.or.jp/jpcert-pgp.html&#34; title=&#34;JPCERT コーディネーションセンター PGP公開鍵&#34;&gt;JPCERT/CC の公開鍵&lt;/a&gt;を表示してみた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys jpcert
pub   rsa2048 2009-06-02 [SCE]
      FC8953BBDC65BD974BDAD1BD317D97A469ECE048
uid           [  充分  ] JPCERT/CC &amp;lt;info@jpcert.or.jp&amp;gt;
sub   rsa2048 2009-06-02 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;&lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; との連携&lt;/h2&gt;

&lt;p&gt;Windows 環境では &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; の認証用鍵を &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; にインポートして &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34;&gt;PuTTY&lt;/a&gt; と連携させていたが，もちろん &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; とも連携できる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; と連携させるには &lt;code&gt;gpg-agent.conf&lt;/code&gt; ファイルに &lt;code&gt;enable-ssh-support&lt;/code&gt; オプションをセットすればいいのだが，これだけでは上手くいかないようだ。&lt;/p&gt;

&lt;p&gt;いろいろ試行錯誤した挙げ句，なんの気なしに環境変数を見てみたら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ env | grep SSH_AUTH_SOCK
SSH_AUTH_SOCK=/run/user/1000/keyring/ssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と定義されていた。
原因はお前かよ！ もっと早く気付け，自分 &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;環境変数 &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; を &lt;code&gt;gpg-agent&lt;/code&gt; のソケットに置き換えるには以下のコマンドラインを叩く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; の値は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ env | grep SSH_AUTH_SOCK
SSH_AUTH_SOCK=/run/user/1000/gnupg/S.gpg-agent.ssh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となった。&lt;/p&gt;

&lt;p&gt;この状態でリモートホストに ssh 接続してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ssh username@remotehost&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで Pinentry が起動して&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./ssh-login.png&#34;&gt;&lt;img src=&#34;./ssh-login.png&#34; srcset=&#34;./ssh-login.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;パスフレーズを入力後ログインできれば成功。
&lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; 値の書き換えコマンドは &lt;code&gt;~/.bashrc&lt;/code&gt; ファイルにでも書いておけばいいだろうか。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;gpg-agent.conf&lt;/code&gt; ファイルに設定できる &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; 連携関連のオプションは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション名&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;enable-ssh-support&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ssh-agent&lt;/code&gt; 互換プロトコルを有効にする&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;default-cache-ttl-ssh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1800&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;直前にアクセスしたキャッシュ・エントリの有効期間を秒単位で指定する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;max-cache-ttl-ssh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;7200&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;キャッシュ・エントリの有効期間の最大値を秒単位で指定する。 アクセスの有無にかかわらずこの期間が過ぎるとキャッシュがクリアされる&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; との連携を調べ始め，試行錯誤してここまでたどり着くまでに3時間くらいかかっちまったよ。
&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の公式サイトも含めて資料がなさすぎるんだよ。
特に日本語の記事は内容が古すぎて壊滅状態。
いかに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; が使われてないか分かるよなぁ。&lt;/p&gt;

&lt;p&gt;まっ，とにかく， &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でも（バージョンの問題に目をつぶれば）普通に &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; が使えることが分かったので今回はよしとする。&lt;/p&gt;

&lt;p&gt;これでようやく git を使う準備ができた。
まだまだ道のりは遠い。&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2013/04/ubuntu-10-xdg-base-directory.html&#34;&gt;Ubuntu フォルダー構造 その10 - XDG Base Directory Specificationについて - kledgeb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://unix.stackexchange.com/questions/236746/change-pinentry-program-temporarily-with-gpg-agent&#34;&gt;Change pinentry program temporarily with gpg-agent - Unix &amp;amp; Linux Stack Exchange&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://incenp.org/notes/2015/gnupg-for-ssh-authentication.html&#34;&gt;Using GnuPG (2.1) for SSH authentication&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-gnupg-for-windows-1/&#34;&gt;GnuPG for Windows インストール編&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-gnupg-for-windows-2/&#34;&gt;GnuPG for Windows : gpg-agent について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート（鍵作成から失効まで）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B015643CPE&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:gnkf1&#34;&gt;改行コードを始末するなら拙作の「&lt;a href=&#34;https://github.com/spiegel-im-spiegel/text&#34; title=&#34;spiegel-im-spiegel/text: Encoding/Decoding Text Package by Golang&#34;&gt;nkf っぽいなにか&lt;/a&gt;」をどうぞ。コマンドラインで &lt;code&gt;gonkf nwline gpg.conf&lt;/code&gt; とすれば改行コードを LF に変換してくれる。以上宣伝でした（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gnkf1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>CIFS 経由で NAS に接続する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/03/common-internet-file-system/" />
		<id>tag:text.Baldanders.info,2019-03-31:/remark/2019/03/common-internet-file-system/</id>
		<published>2019-03-31T11:24:45+00:00</published>
		<updated>2019-04-03T13:45:11+00:00</updated>
		<summary>今回は CIFS (Common Internet File System) クライアントを使って NAS に接続を試みる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; から&lt;a href=&#34;https://text.baldanders.info/remark/2018/04/nas/&#34; title=&#34;NAS を導入した&#34;&gt;自宅の簡易 NAS&lt;/a&gt; に接続することを考える。&lt;/p&gt;

&lt;p&gt;相手の NAS には &lt;a href=&#34;https://www.samba.org/&#34; title=&#34;Samba - opening windows to a wider world&#34;&gt;Samba&lt;/a&gt; サーバとして接続できることは分かっているので，こちらは対応するクライアント・ツールを用意すればいいわけだ。&lt;/p&gt;

&lt;p&gt;というわけで今回は CIFS (Common Internet File System) クライアントを使って接続を試みる。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;CIFS クライアントの導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; であれば APT (Advanced Package Tool) で導入できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install cifs-utils
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています                
状態情報を読み取っています... 完了
提案パッケージ:
  keyutils smbclient winbind
以下のパッケージが新たにインストールされます:
  cifs-utils
アップグレード: 0 個、新規インストール: 1 個、削除: 0 個、保留: 0 個。
71.5 kB のアーカイブを取得する必要があります。
この操作後に追加で 231 kB のディスク容量が消費されます。
取得:1 http://jp.archive.ubuntu.com/ubuntu cosmic/main amd64 cifs-utils amd64 2:6.8-2 [71.5 kB]
71.5 kB を 1秒 で取得しました (104 kB/s)
以前に未選択のパッケージ cifs-utils を選択しています。
(データベースを読み込んでいます ... 現在 167532 個のファイルとディレクトリがインストールされています。)
.../cifs-utils_2%3a6.8-2_amd64.deb を展開する準備をしています ...
cifs-utils (2:6.8-2) を展開しています...
cifs-utils (2:6.8-2) を設定しています ...
update-alternatives: /etc/cifs-utils/idmap-plugin (idmap-plugin) を提供するために自動モードで /usr/lib/x86_64-linux-gnu/cifs-utils/idmapwb.so を使います
man-db (2.8.4-2) のトリガを処理しています ...

$ mount.cifs -V
mount.cifs version: 6.8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;バージョンは 6.8 か。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;事前準備（2019-04-03 追記）&lt;/h2&gt;

&lt;p&gt;実際に作業に入る前にいくつか事前設定をしておく。&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;ホスト名の解決&lt;/h3&gt;

&lt;p&gt;IP アドレス指定のままでもいいのだが，もし LAN 内で NAS の名前解決が出来ないなら &lt;code&gt;/etc/hosts&lt;/code&gt; ファイルで名前を定義しておくといいだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;10.0.0.100  nas01&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;toc_3&#34;&gt;Samba グループを作成する&lt;/h3&gt;

&lt;p&gt;共有ディレクトリをマウントできるグループを作成する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo groupadd samba&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さらに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo visudo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で &lt;code&gt;sudo&lt;/code&gt; 用の設定ファイルを開き以下の行を追加する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;%samba  ALL=(ALL) /bin/mount,/bin/umount,/sbin/mount.cifs,/sbin/umount.cifs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;samba&lt;/code&gt; グループに追加したユーザは自身のホーム・ディレクトリ以下に NAS の共有ディレクトリをマウントできる。
さっそく追加しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo adduser username samba&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで準備完了。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;一時的な接続&lt;/h2&gt;

&lt;p&gt;まずマウント先のディレクトリを作成する（ディレクトリの場所や名前は他と被らなければなんでもいい）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mkdir ~/nas&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この &lt;code&gt;~/nas&lt;/code&gt; ディレクトリに対して以下のコマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo mount -t cifs //nas01/shared ~/nas -o username=sambauser,noexec,nosuid,nodev
[sudo] username のパスワード: 
Password for sambauser@//nas01/shared:  ********&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;~/nas&lt;/code&gt; ディレクトリに対して共有ディレクトリ &lt;code&gt;//nas01/shared&lt;/code&gt; を一時的にマウントできる。
マウント時に指定できる主なパラメータ（値がある場合は &lt;code&gt;param=value&lt;/code&gt; 形式で指定）は以下の通り&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:cifs1&#34;&gt;&lt;a href=&#34;#fn:cifs1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;パラメータ名&lt;/th&gt;
&lt;th&gt;既定値&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;username&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;root&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;接続先のユーザ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;接続先ユーザのパスワード。指定しない場合は接続時に訊いてくる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;接続先のドメイン名またはワークグループ名（必要な場合のみ）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;接続情報が書かれたファイル（詳しくは後述する）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;root&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有ディレクトリ・ファイルの（見かけの）オーナー名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;root&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有ディレクトリ・ファイルの（見かけの）グループ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file_mode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0755&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有ファイルの（見かけの）ファイルモード&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dir_mode&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0755&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;共有ディレクトリの（見かけの）ディレクトリモード&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3.0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SMB プロトコル・バージョン（&lt;code&gt;1.0&lt;/code&gt;/&lt;code&gt;2.0&lt;/code&gt;/&lt;code&gt;3.0&lt;/code&gt;/&lt;code&gt;3.1.1&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ntlmssp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;セキュリティ・モード (&lt;code&gt;none&lt;/code&gt;/&lt;code&gt;krb5&lt;/code&gt;/&lt;code&gt;krb5i&lt;/code&gt;/&lt;code&gt;ntlm&lt;/code&gt;/&lt;code&gt;ntlmi&lt;/code&gt;/&lt;code&gt;ntlmv2&lt;/code&gt;/&lt;code&gt;ntlmv2i&lt;/code&gt;/&lt;code&gt;ntlmssp&lt;/code&gt;/&lt;code&gt;ntlmsspi&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;noexec&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;共有ディレクトリ上のファイルの実行をさせない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nosuid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;共有ディレクトリ・ファイルの SUID ビットを認識しない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nodev&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;共有ディレクトリ上のデバイスファイルを作用させない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ro&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;読み込み専用でマウントする&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;rw&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;―&lt;/td&gt;
&lt;td&gt;読み書き可でマウントする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;コマンドラインでマウントする際は絶対に &lt;code&gt;password&lt;/code&gt; オプションを付けないこと（履歴に残っちゃうからね）。
あるいは以下の内容の接続情報ファイル &lt;code&gt;~/.nascred&lt;/code&gt; を作って（ファイル名は適当）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;username=sambauser
password=password_string
domain=domainname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ファイルモードを &lt;code&gt;0400&lt;/code&gt; に設定して他ユーザから見られないようにし&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo chamod 0400 ~/.nascred&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;credentials&lt;/code&gt; オプションで指定してマウントする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo mount -t cifs //nas01/shared ~/nas -o credentials=~/.nascred,noexec,nosuid,nodev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;他ユーザから見えなくてもパスワードを平文で保存するのはちょっと... という人は &lt;code&gt;password&lt;/code&gt; の指定行を外してしまえばコマンド実行時にパスワードを訊いてくる。&lt;/p&gt;

&lt;p&gt;マウントを解除するには&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo umount ~/nas&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で OK。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;/etc/fstab を使って起動時にマウントする&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/fstab&lt;/code&gt; ファイルに以下の行を追加することで起動時に共有ファイルをマウントできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;      &amp;lt;type&amp;gt; &amp;lt;options&amp;gt;                                                 &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;
//nas01/shared  /home/username/nas cifs   _netdev,credentials=/home/username/.nascred,noexec,nosuid 0      0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに &lt;code&gt;_netdev&lt;/code&gt; はネットワークの設定が終わったあとにマウントするよう指示するオプションである（先頭のアンダーバーを忘れずに）。&lt;/p&gt;

&lt;p&gt;起動時のマウントではないが以下の2つのオプションを追加する手もある。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;パラメータ名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;noauto&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;起動時にはマウントを行わない&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;user&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一般ユーザもマウントできる&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;      &amp;lt;type&amp;gt; &amp;lt;options&amp;gt;                                                     &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt;
//nas01/shared  /home/username/nas cifs   noauto,user,credentials=/home/username/.nascred,noexec,nosuid 0      0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これなら管理者モードでなくともログイン後に任意のタイミングで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mount ~/nas&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じにコマンドラインを少し簡略化してマウントできる（&lt;code&gt;umount&lt;/code&gt; も同様）。&lt;/p&gt;

&lt;p&gt;よし。
これで次に進める。
次は &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; かな。&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.samba.gr.jp/project/translation/3.5/htmldocs/manpages-3/mount.cifs.8.html&#34;&gt;mount.cifs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.ubuntu.com/community/Samba/SambaClientGuide&#34;&gt;Samba/SambaClientGuide - Community Help Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.profaim.jp/tools/soft/linux/mnt_cifs.php&#34;&gt;mountコマンドでCIFSをファイル共有 - profaim.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/kakinaguru_zo/items/af0122f79af0aa0913b7&#34;&gt;mount.cifsに付けるオプション - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/mdstoy/items/54925cdcbca6d558b666&#34;&gt;Ubuntu から Windows の共有フォルダをマウントして利用する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/You_name_is_YU/items/85ffbffee744f6f494ed&#34;&gt;samba-client／cifs-utilsを使ってWindowsの共有フォルダをマウントする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/office-itou/items/0f8df0c5f8c7022b7fad&#34;&gt;Windows 10 に cifs 接続する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/1502/13/news042.html&#34;&gt;Linuxはサンバ（Samba）で踊る――WindowsとLinuxのファイル共有のいま (1/2)：その知識、ホントに正しい？ Windowsにまつわる都市伝説（25） - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.jp/index.php/Fstab&#34;&gt;fstab - ArchWiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%80%90%E6%94%B9%E8%A8%82%E6%96%B0%E7%89%88%E3%80%91%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89%E3%81%AE%E5%AE%9F%E4%BE%8B%E3%81%8C%E3%82%8F%E3%81%8B%E3%82%8BSamba%EF%BC%BB%E5%AE%9F%E8%B7%B5%EF%BC%BD%E5%85%A5%E9%96%80-%E9%AB%99%E6%A9%8B%E5%9F%BA%E4%BF%A1-ebook/dp/B01CXL8NL6?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01CXL8NL6&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51zK0JJz6ZL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%80%90%E6%94%B9%E8%A8%82%E6%96%B0%E7%89%88%E3%80%91%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89%E3%81%AE%E5%AE%9F%E4%BE%8B%E3%81%8C%E3%82%8F%E3%81%8B%E3%82%8BSamba%EF%BC%BB%E5%AE%9F%E8%B7%B5%EF%BC%BD%E5%85%A5%E9%96%80-%E9%AB%99%E6%A9%8B%E5%9F%BA%E4%BF%A1-ebook/dp/B01CXL8NL6?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01CXL8NL6&#34;&gt;【改訂新版】サーバ構築の実例がわかるSamba［実践］入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;髙橋基信&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2016-03-04 (Release 2016-03-04)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B01CXL8NL6&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Samba4/Windows10 対応。昔に比べたら Samba もずいぶん変わったんだねぇ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-31&#34;&gt;2019-03-31&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:cifs1&#34;&gt;オプションの詳細は &lt;code&gt;man mount.cifs&lt;/code&gt; でマニュアルを参照するとよい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:cifs1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu で遊ぶ</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/03/using-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-03-31:/remark/2019/03/using-ubuntu/</id>
		<published>2019-03-31T01:14:36+00:00</published>
		<updated>2019-04-19T14:35:17+00:00</updated>
		<summary>この記事は覚え書きとして随時更新していく予定。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;さて&lt;a href=&#34;https://text.baldanders.info/remark/2019/03/the-window-the-window/&#34; title=&#34;Windows に Ubuntu を入れる&#34;&gt;インストールも完了した&lt;/a&gt;し，さっそく遊ぼうか。&lt;/p&gt;

&lt;p&gt;なお，この記事は覚え書きとして随時更新していく予定なので悪しからず。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; との連携&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;クリップボードの内容を共有する&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の動作確認はテキストファイルでメモを取りながら行っているのだが，ホスト OS とゲスト OS との間でクリップボードが共有できないか調べてみたら簡単にできるようだ。&lt;/p&gt;

&lt;p&gt;インストール後の &lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; マネージャは以下の通り。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;../the-window-the-window/end-of-setup.png&#34;&gt;&lt;img src=&#34;../the-window-the-window/end-of-setup.png&#34; srcset=&#34;../the-window-the-window/end-of-setup.png 976w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;この画面から「設定」アイコンをクリックすると以下の画面が開く。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./setting-clipboard.png&#34;&gt;&lt;img src=&#34;./setting-clipboard.png&#34; srcset=&#34;./setting-clipboard.png 831w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;この画面の「一般」カテゴリの「高度」タブに「クリップボードの共有」の項目がある。
ここを「双方向」にすればホスト OS とゲスト OS との間でクリップボードを共有できる。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に関する雑多なこと&lt;/h2&gt;

&lt;p&gt;そもそも &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でターミナルってどうやって開くんだろうと思ったが，デスクトップを右クリックして「端末を開く」でよかった。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Advanced Package Tool&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; は &lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; 系のディストリビューションなのでパッケージやシステムの管理には APT (Advanced Package Tool) を使う。
&lt;code&gt;apt-get&lt;/code&gt; 等が &lt;code&gt;apt&lt;/code&gt; コマンドに統合されているとは知らなかったよ。
&lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; 系は古いバージョンしか使ったことなかったからなぁ （笑）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34;&gt;第 6 章 メンテナンスと更新、APT ツール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/SUZUKI_Masaya/items/1fd9489e631c78e5b007&#34;&gt;aptコマンドチートシート - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;パッケージリストを更新するには &lt;code&gt;apt update&lt;/code&gt; コマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt update
[sudo] username のパスワード: 
ヒット:1 http://archive.ubuntulinux.jp/ubuntu cosmic InRelease
ヒット:2 http://jp.archive.ubuntu.com/ubuntu cosmic InRelease
取得:3 http://jp.archive.ubuntu.com/ubuntu cosmic-updates InRelease [88.7 kB]
ヒット:4 http://archive.ubuntulinux.jp/ubuntu-ja-non-free cosmic InRelease
取得:5 http://jp.archive.ubuntu.com/ubuntu cosmic-backports InRelease [74.6 kB]
取得:6 http://security.ubuntu.com/ubuntu cosmic-security InRelease [88.7 kB]
252 kB を 2秒 で取得しました (129 kB/s)
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
パッケージはすべて最新です。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;パッケージリストを更新したらパッケージをアップグレードする。
パッケージをアップグレードするには &lt;code&gt;apt upgrade&lt;/code&gt; コマンドを実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt upgrade
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
アップグレードパッケージを検出しています... 完了
以下のパッケージが自動でインストールされましたが、もう必要とされていません:
  libncursesw5 libtinfo5
これを削除するには &amp;#39;sudo apt autoremove&amp;#39; を利用してください。
アップグレード: 0 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;おっと削除を推奨するパッケージがあるようだ。
&lt;code&gt;apt autoremove&lt;/code&gt; で削除してしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt autoremove
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています
状態情報を読み取っています... 完了
以下のパッケージは「削除」されます:
  libncursesw5 libtinfo5
アップグレード: 0 個、新規インストール: 0 個、削除: 2 個、保留: 0 個。
この操作後に 856 kB のディスク容量が解放されます。
続行しますか? [Y/n] y
(データベースを読み込んでいます ... 現在 167547 個のファイルとディレクトリがインストールされています。)
libncursesw5:amd64 (6.1+20180210-4ubuntu1) を削除しています ...
libtinfo5:amd64 (6.1+20180210-4ubuntu1) を削除しています ...
libc-bin (2.28-0ubuntu1) のトリガを処理しています ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでオッケ。&lt;/p&gt;

&lt;p&gt;今回はなかったが保留パッケージを含めて更新する場合は &lt;code&gt;apt full-upgrade&lt;/code&gt; を実行する。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;セキュリティ情報をチェックする&lt;/h3&gt;

&lt;p&gt;本家の &lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; ディストリビューションのセキュリティ情報は以下から取得できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.debian.org/security/&#34;&gt;Debian -- Security Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の方は以下から。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://usn.ubuntu.com/&#34;&gt;Ubuntu security notices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フィードも提供されているので巡回先に加えることにしよう。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;えっ ifconfig って入ってないの？&lt;/h3&gt;

&lt;p&gt;なにはともあれネットワーク設定を見ようと &lt;code&gt;ifconfig&lt;/code&gt; コマンドを叩いてみたが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ifconfig -a -v

Command &amp;#39;ifconfig&amp;#39; not found, but can be installed with:

sudo apt install net-tools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか言われる。
まじすか！&lt;/p&gt;

&lt;p&gt;まぁ，なければ入れればいい話なので言われたとおりインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install net-tools&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ifconfig -a -v
enp0s3: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
        inet6 xxxx::xxxx:xxxx:xxxx:xxxx  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;
        ether **:**:**:**:**:**  txqueuelen 1000  (イーサネット)
        RX packets 20  bytes 2764 (2.7 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 82  bytes 8466 (8.4 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10&amp;lt;host&amp;gt;
        loop  txqueuelen 1000  (ローカルループバック)
        RX packets 151  bytes 11745 (11.7 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 151  bytes 11745 (11.7 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;おー，動いた動いた。&lt;/p&gt;

&lt;p&gt;ちなみに IP アドレスの &lt;code&gt;10.0.2.xx&lt;/code&gt; は &lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; 側の仮想 DHCP ネットワークらしい。&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;gcc もないのかよ！&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; って gcc とかって後から入れるの？ 最近の UNIX 系ディストリビューションってそんな感じ？ まぁいいや。
ないなら入れればいいよね。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install build-essential&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで gcc と make 等の開発ツールチェーンが入った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/8/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion=&amp;#39;Ubuntu 8.2.0-7ubuntu1&amp;#39; --with-bugurl=file:///usr/share/doc/gcc-8/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-8 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 8.2.0 (Ubuntu 8.2.0-7ubuntu1) 

$ make -v
GNU Make 4.2.1
このプログラムは x86_64-pc-linux-gnu 用にビルドされました
Copyright (C) 1988-2016 Free Software Foundation, Inc.
ライセンス GPLv3+: GNU GPL バージョン 3 以降 &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
これはフリーソフトウェアです: 自由に変更および配布できます.
法律の許す限り、　無保証　です.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;toc_7&#34;&gt;&lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt; の導入&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt; は普通に APT からインストールできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show kdiff3
Package: kdiff3
Version: 0.9.98-4
Priority: optional
Section: universe/kde
Origin: Ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よし，最新版があるな。
ではインストールしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install kdiff3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールが完了するとドックのアプリボタンで表示されるアプリ一覧にアイコンが追加される。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;/usr/bin/kdiff3&lt;/code&gt; にインストールされるので，たとえば &lt;code&gt;~/.gitconfig&lt;/code&gt; に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[merge]
    tool = kdiff3
[diff]
    guitool = kdiff3
[difftool &amp;#34;kdiff3&amp;#34;]
    path = /usr/bin/kdiff3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と設定しておけば &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; のマージ等で &lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt; が呼び出される。&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラを導入する&lt;/h3&gt;

&lt;p&gt;APT で &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;コンパイラを入れれるかなぁ，と思ったが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show golang
[sudo] spiegel のパスワード: 
Package: golang
Version: 2:1.10~4ubuntu1
Priority: optional
Section: devel
Source: golang-defaults
Origin: Ubuntu
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なんだこれ。
2世代も前じゃん。
やる気がなさすぎる &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラは APT を使わず自前で入れたほうがいいようだ。
それなら &lt;code&gt;/usr/local&lt;/code&gt; とかじゃなくてユーザのホームディレクトリ下に入れようか。
私は標準ライブラリのソースコードも頻繁に見るし，そのほうがいいだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mkdir ~/local
$ cd local
$ curl https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -O

Command &amp;#39;curl&amp;#39; not found, but can be installed with:

sudo apt install curl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まじすか。
&lt;a href=&#34;https://curl.haxx.se/&#34;&gt;curl&lt;/a&gt; が入ってないとか。
しょうがない入れるか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install curl

$ curl -V
curl 7.61.0 (x86_64-pc-linux-gnu) libcurl/7.61.0 OpenSSL/1.1.1 zlib/1.2.11 libidn2/2.0.5 libpsl/0.20.2 (+libidn2/2.0.4) nghttp2/1.32.1 librtmp/2.3
Release-Date: 2018-07-11
Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp smb smbs smtp smtps telnet tftp 
Features: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;うーん？ 微妙にバージョンが古い気がするが... まぁいいか。&lt;/p&gt;

&lt;p&gt;では気を取り直して。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl https://dl.google.com/go/go1.12.4.linux-amd64.tar.gz -O
$ tar -xvf go1.12.4.linux-amd64.tar.gz
$ cd go/bin
$ ./go version
go version go1.12.4 linux/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よし。
ちゃんと動く。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;go env&lt;/code&gt; で環境周りを見てみると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go env
GOARCH=&amp;#34;amd64&amp;#34;
GOBIN=&amp;#34;&amp;#34;
GOCACHE=&amp;#34;/home/username/.cache/go-build&amp;#34;
GOEXE=&amp;#34;&amp;#34;
GOFLAGS=&amp;#34;&amp;#34;
GOHOSTARCH=&amp;#34;amd64&amp;#34;
GOHOSTOS=&amp;#34;linux&amp;#34;
GOOS=&amp;#34;linux&amp;#34;
GOPATH=&amp;#34;/home/username/go&amp;#34;
GOPROXY=&amp;#34;&amp;#34;
GORACE=&amp;#34;&amp;#34;
GOROOT=&amp;#34;/home/username/local/go&amp;#34;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで環境変数 &lt;code&gt;GOPATH&lt;/code&gt; には &lt;code&gt;~/go&lt;/code&gt; ディレクトリがセットされているようだ。
設定はこのまま使うとして &lt;code&gt;~/.profile&lt;/code&gt; に以下の記述を追加しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;# set PATH so it includes user&amp;#39;s private bin if it exists
if [ -d &amp;#34;$HOME/local/go/bin&amp;#34; ] ; then
    PATH=&amp;#34;$PATH:$HOME/local/go/bin:$HOME/go/bin&amp;#34;
    export GO111MODULE=on
fi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで再ログインすれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go version
go version go1.12.4 linux/amd64

$ env | grep GO111MODULE
GO111MODULE=on&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と設定が反映されているのが分かる。&lt;/p&gt;

&lt;p&gt;一応動作確認をしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get github.com/spiegel-im-spiegel/gpgpdump/cli/gpgpdump@latest
go: finding github.com/spiegel-im-spiegel/gpgpdump/cli/gpgpdump latest
go: finding github.com/spiegel-im-spiegel/gpgpdump/cli latest
go: finding github.com/spiegel-im-spiegel/gpgpdump v0.5.0
go: downloading github.com/spiegel-im-spiegel/gpgpdump v0.5.0
go: extracting github.com/spiegel-im-spiegel/gpgpdump v0.5.0
go: finding github.com/inconshreveable/mousetrap v1.0.0
go: finding github.com/BurntSushi/toml v0.3.1
go: finding github.com/spf13/pflag v1.0.3
go: finding github.com/spiegel-im-spiegel/gocli v0.9.4
go: finding github.com/spf13/cobra v0.0.3
go: finding golang.org/x/crypto v0.0.0-20190320223903-b7391e95e576
go: finding golang.org/x/xerrors v0.0.0-20190315151331-d61658bd2e18
go: finding github.com/mattn/go-isatty v0.0.7
go: finding golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a
go: finding golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223
go: downloading github.com/spiegel-im-spiegel/gocli v0.9.4
go: downloading github.com/spf13/cobra v0.0.3
go: downloading golang.org/x/xerrors v0.0.0-20190315151331-d61658bd2e18
go: downloading golang.org/x/crypto v0.0.0-20190320223903-b7391e95e576
go: downloading github.com/BurntSushi/toml v0.3.1
go: extracting github.com/spiegel-im-spiegel/gocli v0.9.4
go: extracting golang.org/x/xerrors v0.0.0-20190315151331-d61658bd2e18
go: extracting github.com/BurntSushi/toml v0.3.1
go: extracting github.com/spf13/cobra v0.0.3
go: downloading github.com/spf13/pflag v1.0.3
go: extracting github.com/spf13/pflag v1.0.3
go: extracting golang.org/x/crypto v0.0.0-20190320223903-b7391e95e576

$ ~/go/bin/gpgpdump -v
gpgpdump dev-version
Copyright 2016-2019 Spiegel (based on pgpdump by kazu-yamamoto)
Licensed under Apache License, Version 2.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よしよし。
ちゃんとビルドできてるな。&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.documentfoundation.org/Documentation/Install/Linux&#34;&gt;Installing LibreOffice on Linux - The Document Foundation Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_10&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/Ubuntu-18-04-Remix-%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%8C%E5%85%A8%E9%83%A8%E3%82%8F%E3%81%8B%E3%82%8B%E6%9C%AC-%E6%97%A5%E7%B5%8CBP%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%83%99%E3%82%B9%E3%83%88%E3%83%A0%E3%83%83%E3%82%AF/dp/4296100742?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4296100742&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/519EJD1-MXL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/Ubuntu-18-04-Remix-%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%8C%E5%85%A8%E9%83%A8%E3%82%8F%E3%81%8B%E3%82%8B%E6%9C%AC-%E6%97%A5%E7%B5%8CBP%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%83%99%E3%82%B9%E3%83%88%E3%83%A0%E3%83%83%E3%82%AF/dp/4296100742?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4296100742&#34;&gt;Ubuntu 18.04 LTS 日本語 Remix 使い方が全部わかる本 (日経BPパソコンベストムック)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;日経Linux (編集)&lt;/dd&gt;
    &lt;dd&gt;日経BP社 2018-10-02 (Release 2018-10-02)&lt;/dd&gt;
    &lt;dd&gt;Book ムック&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4296100742, EAN: 9784296100743&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版もあるが紙のほうなら DVD が付録でついてくる。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-31&#34;&gt;2019-03-31&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
