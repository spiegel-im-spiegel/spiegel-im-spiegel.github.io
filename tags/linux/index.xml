<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of  linux - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/linux/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/linux/index.xml" />
	<id>tag:text.Baldanders.info,2019-05-10:/tags</id>
	<updated>2019-05-10T18:32:34+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Advanced Package Tool に関する覚え書き</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/advanced-package-tool/" />
		<id>tag:text.Baldanders.info,2019-05-10:/remark/2019/05/advanced-package-tool/</id>
		<published>2019-05-10T09:32:34+00:00</published>
		<updated>2019-05-11T12:24:54+00:00</updated>
		<summary>今回の件で自機でのアプリケーションあるいはパッケージ管理について，ちょっと考えてしまった。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;先日 Firefox がやらしたじゃないですか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.mozilla.org/t/thread-add-ons-not-working-due-to-certificate-expiration/38968&#34;&gt;Thread: Add-ons not working due to certificate expiration - Add-on Support - Mozilla Discourse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;証明書の期限切れでアドオンが全部排除されるというバグとしてはありがちなやつなんだけど， Mozilla が改修版（v66.0.4）を出してから &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; でアップデートできるようになるまで概ね2日ほどかかってるのよ。&lt;/p&gt;

&lt;p&gt;今回の件で自機でのアプリケーションあるいはパッケージ管理について，ちょっと考えてしまった。
そこでまずは &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; について調べ直すところから始めることにした。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;dpkg と Advanced Package Tool&lt;/h2&gt;

&lt;p&gt;皆さんご存知の通り &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; は &lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; から fork したディストリビューションでアプリケーション管理も &lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt; のものを踏襲している。&lt;/p&gt;

&lt;p&gt;アプリケーションのビルド済みバイナリや関連ファイルにバージョン情報や依存情報等のメタデータを付加したものを（ar/tar/gzip/bzip2 などで）ひとまとめにしたものを「&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/packaging-system.html&#34; title=&#34;第 5 章 パッケージシステム、ツールと基本原則&#34;&gt;パッケージ&lt;/a&gt;」と呼ぶ。
&lt;a href=&#34;https://www.debian.org/&#34; title=&#34;Debian -- The Universal Operating System&#34;&gt;Debian&lt;/a&gt;/&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では &lt;code&gt;.deb&lt;/code&gt; の拡張子が付いたファイルがそのパッケージファイルで，パッケージファイルを利用するためのツールが &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/sect.manipulating-packages-with-dpkg.html&#34; title=&#34;5.4. dpkg を用いたパッケージの操作&#34;&gt;dpkg&lt;/a&gt; である。&lt;/p&gt;

&lt;p&gt;ただし &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/sect.manipulating-packages-with-dpkg.html&#34; title=&#34;5.4. dpkg を用いたパッケージの操作&#34;&gt;dpkg&lt;/a&gt; にはプリミティブな機能しかないため一般のユーザが &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/sect.manipulating-packages-with-dpkg.html&#34; title=&#34;5.4. dpkg を用いたパッケージの操作&#34;&gt;dpkg&lt;/a&gt; をそのまま使うことはまずない。
一般ユーザ用のフロントエンド（のひとつ）が &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; (Advanced Package Tool) ということになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; はバックエンドにパッケージ管理用のデータベースを持っていて&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sl1&#34;&gt;&lt;a href=&#34;#fn:sl1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，このデータベースをもとにパッケージ間の依存関係を維持しながら可能な限り自動で導入や削除を行おうとする。&lt;/p&gt;

&lt;p&gt;したがってデータベースにないパッケージは &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; では導入できない。
この場合は以下の3つの手段をとることができる。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;サードパーティのリポジトリを登録して &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; から導入できるようにする&lt;/li&gt;
&lt;li&gt;deb ファイルを使って直接インストールする&lt;/li&gt;
&lt;li&gt;ビルド済みバイナリを直接展開して導入する。またはソースファイルから直接ビルドを行う&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; パッケージのリリースサイクル&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; は概ね半年ごとにアップグレードされ，リリース時の年月がそのままバージョン番号になっている。
たとえば先日2019年4月にリリースされたバージョンには 19.04 が振られている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に収録されるパッケージは OS リリース時にバージョンが固定され重大な不具合や脆弱性が発覚しない限り更新されることはないようだ。
先日の Firefox の件はむしろ例外的に早い対応だったということになる。&lt;/p&gt;

&lt;p&gt;しかし，昨今は活況なソフトウェアほどリリースサイクルが短い傾向があり半年というタイムスケールでは追いつかないことも多い。
自身でリスクを引き受けてでも &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; による管理を離れて自前で最新バージョンを維持したいという要求もあると思う。&lt;/p&gt;

&lt;p&gt;つまり &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; で管理可能なパッケージについても&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; で導入する&lt;/li&gt;
&lt;li&gt;deb ファイルを使って直接インストールする&lt;/li&gt;
&lt;li&gt;ビルド済みバイナリを直接展開して導入する。またはソースファイルから直接ビルドを行う&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という3つの手段をとり得るわけだ。&lt;/p&gt;

&lt;p&gt;そこで以降からは管理方法毎によく使うパッケージを分類してみる。
なお，この分類は私の独断と偏見に依る部分が大きいので，他の人にはあまり参考にならないであろう点は先に誤っておく。
ゴメンペコン。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;公式リポジトリから &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; を使って管理するパッケージ&lt;/h2&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;セキュリティ関連ツールなのでしょうがない&lt;/h3&gt;

&lt;p&gt;以下のパッケージはセキュリティ関連ツールで，これらに依存するパッケーも多く，特に保守的な運用になっているようだ。
したがって安定的な運用を優先し &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; による管理とする。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;製品名&lt;/th&gt;
&lt;th&gt;パッケージ名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnupg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定でインストール済&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.openssh.com/&#34;&gt;OpenSSH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssh-client&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クライアント側。既定でインストール済&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openssl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定でインストール済&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以下も参考にどうぞ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/move-gpg-keyring/&#34;&gt;Windows 環境で作った GnuPG の鍵束を Ubuntu に移行する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; に任せて安心なパッケージ&lt;/h3&gt;

&lt;p&gt;以下は何も考えずに &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; に任せても大丈夫だろう。
不具合や脆弱性への対応はどうしても遅れるが今のところは許容範囲ということで。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;製品名&lt;/th&gt;
&lt;th&gt;パッケージ名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.mozilla.org/&#34; title=&#34;Internet for people, not profit — Mozilla&#34;&gt;Firefox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;firefox&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定でインストール済&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.thunderbird.net/&#34; title=&#34;Thunderbird — Software made to make email easier. — Mozilla&#34;&gt;Thunderbird&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;thunderbird&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定でインストール済&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.libreoffice.org/&#34; title=&#34;LibreOffice - Free Office Suite - Fun Project - Fantastic People&#34;&gt;LibreOffice&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;libreoffice&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定でインストール済&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ifconfig&lt;/td&gt;
&lt;td&gt;&lt;code&gt;net-tools&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:nt1&#34;&gt;&lt;a href=&#34;#fn:nt1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;何故か既定で入ってなかった&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://curl.haxx.se/&#34;&gt;curl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;何故か既定で入ってなかった&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://openjdk.java.net/&#34;&gt;OpenJDK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;openjdk-12-jre&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JRE のみの場合。バージョンごとにパッケージ名が異なるので注意（左は Java 12 の場合）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://kdiff3.sourceforge.net/&#34;&gt;KDiff3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;kdiff3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;graphviz&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.vim.org/&#34;&gt;vim&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;vim&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;既定で入ってるのは &lt;code&gt;vim-tiny&lt;/code&gt; で &lt;code&gt;vim&lt;/code&gt; を入れると置き換わる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://boinc.berkeley.edu/&#34;&gt;BOINC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boinc-client&lt;/code&gt;, &lt;code&gt;boinc-manager&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;クライアント側&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;keepass2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;あらかじめ &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; がインストールされていること&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mozilla.org/&#34; title=&#34;Internet for people, not profit — Mozilla&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://www.libreoffice.org/&#34; title=&#34;LibreOffice - Free Office Suite - Fun Project - Fantastic People&#34;&gt;LibreOffice&lt;/a&gt;, &lt;a href=&#34;https://www.thunderbird.net/&#34; title=&#34;Thunderbird — Software made to make email easier. — Mozilla&#34;&gt;Thunderbird&lt;/a&gt; については公式サイトで実行イメージがダウンロード可能になっていて，そちらを取ってきて使うこともできるが，完全に APT の管理を離れてしまい，かつ APT で管理されるバージョンと混在になってしまうので考えどころではある。
&lt;a href=&#34;https://www.mozilla.org/firefox/developer/&#34;&gt;Firefox Developer Edition&lt;/a&gt; を使うなら混在もありかも。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;その他&lt;/h3&gt;

&lt;p&gt;依存関係とか導入手順とかが複雑で自前で管理するのが面倒くさい，て感じのパッケージ。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;製品名&lt;/th&gt;
&lt;th&gt;パッケージ名&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://gcc.gnu.org/&#34; title=&#34;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&#34;&gt;GCC&lt;/a&gt; 等&lt;/td&gt;
&lt;td&gt;&lt;code&gt;build-essential&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;何故か 18.10 には既定で入ってなかった&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;CIFS Client&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cifs-utils&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;導入方法は&lt;a href=&#34;https://text.baldanders.info/remark/2019/03/common-internet-file-system/&#34;&gt;拙文を参照&lt;/a&gt;のこと&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;clamav&lt;/code&gt;, &lt;code&gt;clamav-daemon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;導入方法は&lt;a href=&#34;https://text.baldanders.info/remark/2019/05/clamav-for-ubuntu/&#34;&gt;拙文を参照&lt;/a&gt;のこと&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;サードパーティ・リポジトリから &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; を使って管理するパッケージ&lt;/h2&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;公式リポジトリでも導入可能だが最新版が欲しかったので &lt;a href=&#34;https://launchpad.net/ubuntu/+ppas&#34; title=&#34;Personal Package Archives : Ubuntu&#34;&gt;PPA&lt;/a&gt; のリポジトリを使うことにした。
詳しくは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-git-from-ppa/&#34;&gt;PPA から Git をインストールする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参照のこと。&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;インストールにはサードパーティ・リポジトリの登録と署名検証用の公開鍵の取得が必要。
詳しくは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34;&gt;Ubuntu に Mono を導入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;deb ファイルを使って直接インストールする&lt;/h2&gt;

&lt;p&gt;deb ファイルを使って直接インストールするには gdebi を使うのがオススメである。
導入は &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; からできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install gdebi-core&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdebi foo.deb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば依存パッケージも含めてインストールしてくれる。
内部で &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; のデータベースを使ってるのかな。&lt;/p&gt;

&lt;p&gt;自前で導入する場合は最新バージョンに常に注意すること。&lt;/p&gt;

&lt;h3 id=&#34;toc_10&#34;&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; エディタ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/releases&#34; title=&#34;Releases · atom/atom&#34;&gt;リリースページ&lt;/a&gt; から最新版の &lt;code&gt;atom-amd64.deb&lt;/code&gt; ファイルをダウンロードしてインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdebi ./atom-amd64.deb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;詳しくは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/atom-in-ubuntu/&#34;&gt;Ubuntu に ATOM エディタを導入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参照のこと。&lt;/p&gt;

&lt;h3 id=&#34;toc_11&#34;&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;いや，シングルバイナリで依存関係も殆どないので deb ファイルからインストールする必然性は微塵もないのだが，どうも &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; からインストールできるパッケージが全く追従できてないみたいなので。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; title=&#34;Releases · gohugoio/hugo&#34;&gt;リリースページ&lt;/a&gt;から最新版の deb ファイルを取ってきてインストールすればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdebi ./hugo_0.55.5_Linux-64bit.deb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_12&#34;&gt;ビルド済みバイナリを直接展開して導入する&lt;/h2&gt;

&lt;p&gt;自前で導入する場合は最新バージョンに常に注意すること。&lt;/p&gt;

&lt;h3 id=&#34;toc_13&#34;&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラ自体は &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; でも導入可能だが，お互いのリリースタイミングが悪いのか2世代もバージョンが古い。
これでは使いものにならないので（&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラの公式サポートは1世代前まで），&lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Downloads - The Go Programming Language&#34;&gt;ダウンロードページ&lt;/a&gt;から &lt;code&gt;go1.xx.x.linux-amd64.tar.gz&lt;/code&gt; ファイルを取ってきて任意の場所に展開して使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/src
$ sudo curl https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz -O
$ cd ..
$ unlink go # 以前の Go が入っている場合
$ sudo tar xvf src/go1.12.5.linux-amd64.tar.gz
$ sudo mv go go1.12.5
$ sudo ln -s go1.12.5 go
$ ./go/bin/go version
go version go1.12.5 linux/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;bin/&lt;/code&gt; ディレクトリにはパスを通しておけば大丈夫。&lt;/p&gt;

&lt;h3 id=&#34;toc_14&#34;&gt;&lt;a href=&#34;https://filezilla-project.org/&#34; title=&#34;FileZilla - The free FTP solution&#34;&gt;FileZilla&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;これも &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; で導入可能なのだが，だいぶバージョンが古いので，&lt;a href=&#34;https://filezilla-project.org/download.php&#34; title=&#34;Download FileZilla Client for Linux&#34;&gt;ダウンロードページ&lt;/a&gt;から取ってきたファイルを展開して使うことにする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/
$ sudo tar xvf src/FileZilla_3.42.1_x86_64-linux-gnu.tar.bz2
$ sudo chown -R root:root FileZilla3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;chown&lt;/code&gt; でオーナーを変えるのを忘れないように。&lt;/p&gt;

&lt;h3 id=&#34;toc_15&#34;&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; がインストールされていることが前提。
詳しくは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34;&gt;Ubuntu に Mono を導入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参照のこと。&lt;/p&gt;

&lt;h3 id=&#34;toc_16&#34;&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; に関しては（大量のパッケージがあるため）最新の環境が必要ないのであれば &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; を使うほうがオススメである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apt show texlive
Package: texlive
Version: 2018.20190227-1
Priority: optional
Section: universe/tex
Source: texlive-base
Origin: Ubuntu
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;が，やっぱり最新の環境がほしいので手動でインストールすることにした。&lt;/p&gt;

&lt;p&gt;手動でインストールする場合はインストーラ &lt;code&gt;install-tl&lt;/code&gt; を使う。
&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 内の各パッケージの更新には tlmgr を使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr update --self --all&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;詳しくは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-texlive-in-ubuntu/&#34;&gt;TeX Live を Ubuntu に（&lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; を使わずに）導入する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;toc_17&#34;&gt;ソースファイルから直接ビルドを行う&lt;/h2&gt;

&lt;p&gt;自前で導入する場合は最新バージョンに常に注意すること。&lt;/p&gt;

&lt;h3 id=&#34;toc_18&#34;&gt;&lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34;&gt;pgpdump&lt;/a&gt; のビルド&lt;/h3&gt;

&lt;p&gt;実は &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; で導入できるっぽいのだが，自作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の動作確認用にリファレンス実装として最新版が必要なのよ。
&lt;a href=&#34;https://gcc.gnu.org/&#34; title=&#34;GCC, the GNU Compiler Collection - GNU Project - Free Software Foundation (FSF)&#34;&gt;GCC&lt;/a&gt; 等のツールチェーンがあれば簡単にビルドできる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kazu-yamamoto/pgpdump&#34; title=&#34;kazu-yamamoto/pgpdump: A PGP packet visualizer&#34;&gt;リポジトリ&lt;/a&gt;からソースコードを取ってきて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ./configure 
$ make&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でビルドできる。
なお圧縮パケットの解凍に bz2 が必要な場合は &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; でパッケージ &lt;code&gt;libbz2-dev&lt;/code&gt; をあらかじめインストールしておくこと。&lt;/p&gt;

&lt;h3 id=&#34;toc_19&#34;&gt;git-credential-libsecret のビルド&lt;/h3&gt;

&lt;p&gt;git-credential 用に git-credential-libsecret をビルドする。&lt;/p&gt;

&lt;p&gt;libsecret 自体のインストールは &lt;a href=&#34;https://debian-handbook.info/browse/ja-JP/stable/apt.html&#34; title=&#34;第 6 章 メンテナンスと更新、APT ツール&#34;&gt;APT&lt;/a&gt; で行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install libsecret-1-dev libgnome-keyring-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで展開されるソースコードを適当な場所にコピーしてビルドする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cp -r /usr/share/doc/git/contrib/credential/libsecret ~/work
$ cd ~/work/libsecret
$ make
gcc -g -O2 -Wall  -pthread -I/usr/include/libsecret-1 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -o git-credential-libsecret.o -c git-credential-libsecret.c
gcc -o git-credential-libsecret  git-credential-libsecret.o -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ビルドした git-credential-libsecret をパスの通ったディレクトリに入れれば完了。&lt;/p&gt;

&lt;h2 id=&#34;toc_20&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://usn.ubuntu.com/&#34;&gt;Ubuntu security notices&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.debian.org/security/&#34;&gt;Debian -- Security Information&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://linuxfan.info/package-management-ubuntu&#34;&gt;「apt-get」はもう古い？新しい「apt」コマンドを使ったUbuntuのパッケージ管理 | LFI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://itsfoss.com/gdebi-default-ubuntu-software-center/&#34;&gt;Use GDebi for Quickly Installing DEB Packages in Ubuntu - It&#39;s FOSS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://linuxfan.info/post-1881&#34;&gt;【Linux FAQ】.debファイルをダウンロードしたのですが、どうやってインストールすればいいですか？ | LFI&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://wiki.documentfoundation.org/Documentation/Install/Linux&#34;&gt;Installing LibreOffice on Linux - The Document Foundation Wiki&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:sl1&#34;&gt;&lt;code&gt;/etc/apt/&lt;/code&gt; ディレクトリ以下のファイル群がそれ。このうち &lt;code&gt;sources.list&lt;/code&gt; が &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 公式のパッケージ・リポジトリを定義したファイルである。またサードパーティのリポジトリは &lt;code&gt;/etc/apt/sources.list.d/&lt;/code&gt; ディレクトリに &lt;code&gt;*.list&lt;/code&gt; ファイルで設定可能である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:nt1&#34;&gt;パッケージ &lt;code&gt;net-tools&lt;/code&gt; をインストールすると ifconfig のほかに arp, netstat, rarp, nameif, route といったツールがインストールされる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:nt1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ununtu に ClamAV を導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/clamav-for-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-05-06:/remark/2019/05/clamav-for-ubuntu/</id>
		<published>2019-05-06T08:39:20+00:00</published>
		<updated>2019-05-07T13:05:32+00:00</updated>
		<summary>こんなに面倒臭いとは思わなかった。もうしばらく運用してから評価してみるですよ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に導入したのだが，思いのほか面倒臭かったので，覚え書きとして記しておく。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; をインストールする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; のインストール自体は APT (Advanced Package Tool) で簡単にできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install clamav clamav-daemon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なお &lt;code&gt;clamav-daemon&lt;/code&gt; は &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; をサービス化するためのパッケージである。&lt;/p&gt;

&lt;p&gt;現時点（2019年5月）で &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; の最新は 0.101.x なのだが APT で提供されているバージョンは 0.100.x の古いバージョンのようだ。
一応，以下の脆弱性への対応はしてあるみたいだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.clamav.net/2019/03/clamav-01012-and-01003-patches-have.html&#34;&gt;ClamAV® blog: ClamAV 0.101.2 and 0.100.3 patches have been released!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このバージョンの古さは後々に影響を及ぼすかもしれない。
Debian には最新の&lt;a href=&#34;https://packages.debian.org/source/unstable/clamav&#34;&gt;ソースパッケージがある&lt;/a&gt;ようだが，セキュリティ製品だしソースコードからビルドするのは流石に...&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;データベースを更新する&lt;/h2&gt;

&lt;p&gt;まずは手動でデータベースを更新する。&lt;/p&gt;

&lt;p&gt;設定ファイル &lt;code&gt;/etc/clamav/freshclam.conf&lt;/code&gt; から &lt;code&gt;NotifyClamd&lt;/code&gt; の行をコメントアウトした上で &lt;code&gt;freshclam&lt;/code&gt; コマンドを実行する。
コマンドラインで書くとこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo systemctl stop clamav-freshclam

$ sudo sed -i -e &amp;#34;s/^NotifyClamd/#NotifyClamd/g&amp;#34; /etc/clamav/freshclam.conf

$ sudo freshclam
Sun May  5 13:36:34 2019 -&amp;gt; ClamAV update process started at Sun May  5 13:36:34 2019
Sun May  5 13:36:34 2019 -&amp;gt; ^Your ClamAV installation is OUTDATED!
Sun May  5 13:36:34 2019 -&amp;gt; ^Local version: 0.100.3 Recommended version: 0.101.2
Sun May  5 13:36:34 2019 -&amp;gt; DON&amp;#39;T PANIC! Read https://www.clamav.net/documents/upgrading-clamav
Sun May  5 13:36:34 2019 -&amp;gt; main.cvd is up to date (version: 58, sigs: 4566249, f-level: 60, builder: sigmgr)
Sun May  5 13:36:34 2019 -&amp;gt; daily.cvd is up to date (version: 25439, sigs: 1562310, f-level: 63, builder: raynman)
Sun May  5 13:36:34 2019 -&amp;gt; bytecode.cvd is up to date (version: 328, sigs: 94, f-level: 63, builder: neo)

$ sudo sed -i -e &amp;#34;s/^#NotifyClamd/NotifyClamd/g&amp;#34; /etc/clamav/freshclam.conf

$ sudo systemctl start clamav-freshclam&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;データベースの更新自体はうまく行ってるようだが &lt;code&gt;OUTDATED&lt;/code&gt; とか言われてるよ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;...見なかったことにしよう。&lt;/p&gt;

&lt;p&gt;なお &lt;code&gt;clamav-freshclam.service&lt;/code&gt; の状態を確認するには以下のコマンドを起動すればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo systemctl status clamav-freshclam.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_2&#34;&gt;手動で動作確認&lt;/h2&gt;

&lt;p&gt;Malware 対策ソフト用の無害なウイルス（笑）があるので，これを使って &lt;code&gt;clamscan&lt;/code&gt; コマンドで動作確認する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl http://www.eicar.org/download/eicar.com -O

$ clamscan --infected --remove ./eicar.com
./eicar.com: Eicar-Test-Signature FOUND
./eicar.com: Removed.

----------- SCAN SUMMARY -----------
Known viruses: 6120222
Engine version: 0.100.3
Scanned directories: 0
Scanned files: 1
Infected files: 1
Data scanned: 0.00 MB
Data read: 0.00 MB (ratio 0.00:1)
Time: 20.181 sec (0 m 20 s)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Scan On-Access の設定&lt;/h2&gt;

&lt;p&gt;ファイルアクセスへの常時監視を行う Scan On-Access を有効にするために &lt;code&gt;/etc/clamav/clamd.conf&lt;/code&gt; ファイルを修正する。
本当は &lt;code&gt;ScanOnAccess&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; にするだけでいい筈なのだが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rs1&#34;&gt;&lt;a href=&#34;#fn:rs1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，以下のコマンドで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo systemctl status clamav-daemon.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;サービスの状態を確認すると以下のログを吐いて停止していた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ERROR: ScanOnAccess: fanotify_init failed: Operation not permitted
ScanOnAccess: clamd must be started by root&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;/etc/clamav/clamd.conf&lt;/code&gt; ファイルの他の部分にも手を入れる必要があるようだ。
以下に変更・追記が必要な項目を挙げておく。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;hl&#34;&gt;LocalSocketGroup root
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;User root
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;ScanOnAccess true
&lt;/span&gt;OnAccessMountPath /home/username
OnAccessExcludePath /home/username/nocheck
# VirusEvent /usr/local/bin/clamd-response
OnAccessPrevention false
OnAccessExtraScanning true
OnAccessExcludeUID 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最初の3行が変更が必要な項目，以降が追加項目である。
&lt;code&gt;OnAccessMountPath&lt;/code&gt; でスキャン対象のディレクトリを &lt;code&gt;OnAccessExcludePath&lt;/code&gt; で除外対象を指定する。
どちらも複数指定できる。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;VirusEvent が効かない！？&lt;/h3&gt;

&lt;p&gt;上の設定で &lt;code&gt;VirusEvent&lt;/code&gt; をコメントアウトしているが，どうやら 0.100 では Scan On-Access を有効にしても &lt;code&gt;VirusEvent&lt;/code&gt; の設定が効かないようなのだ（0.101 はどうなんだろう）。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;VirusEvent&lt;/code&gt; には malware を発見した際に起動するコマンドを指定するのだが，これが動かないってかなり致命的じゃないのか？&lt;/p&gt;

&lt;p&gt;次善の策として以下のスクリプトを書いて cron で回すことにした。
Malware を検出すれば画面に通知が表示されるはずである。
cron で回してるだけなのでタイムラグが発生する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;logfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/home/username/.local/log/clamd-found.log&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -r &lt;span class=&#34;nv&#34;&gt;$logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;PRV_CNT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$logfile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;PRV_CNT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;CNT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;grep ScanOnAccess /var/log/syslog &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep FOUND &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;(null)&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tee &lt;span class=&#34;nv&#34;&gt;$logfile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CNT&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$PRV_CNT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;nv&#34;&gt;DATESTR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  sudo -u username &lt;span class=&#34;nv&#34;&gt;DISPLAY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;:0 &lt;span class=&#34;nv&#34;&gt;DBUS_SESSION_BUS_ADDRESS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;unix:path&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/run/user/1000/bus /usr/bin/notify-send -t &lt;span class=&#34;m&#34;&gt;10000&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DATESTR&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Virus Found &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$CNT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ダサいけどしょうがない。
ちなみに &lt;code&gt;username&lt;/code&gt; の部分には cron を回すログインユーザ名を， &lt;code&gt;1000&lt;/code&gt; の部分にはそのユーザ ID をセットする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:uid1&#34;&gt;&lt;a href=&#34;#fn:uid1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;もう一度，動作確認&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;clamav-daemon.service&lt;/code&gt; がうまく機能するか試してみよう。&lt;/p&gt;

&lt;p&gt;先ほどの無害なウイルス（笑）をダウンロードする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl http://www.eicar.org/download/eicar.com -O&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでログ等を見て検知しているか確認する（上の通知も出れば完璧）。
確認できたらとっとと削除すること。&lt;/p&gt;

&lt;p&gt;今回は &lt;code&gt;clamdscan&lt;/code&gt; のほうを使ってみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ clamdscan --infected --remove ./eicar.com
/home/spiegel/work/./eicar.com: Eicar-Test-Signature FOUND
/home/spiegel/work/./eicar.com: Removed.

----------- SCAN SUMMARY -----------
Infected files: 1
Time: 0.365 sec (0 m 0 s)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;圧倒的に速くなった。
まぁ，バックグラウンドにサービスがいるんだから当たり前だが（笑）&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;Thunderbird と連携したかったが...&lt;/h2&gt;

&lt;p&gt;MUA である Thunderbird と連携できるアドオンがあると聞いたのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://addons.thunderbird.net/ja/thunderbird/addon/clamdrib-lin/&#34;&gt;clamdrib LIN :: Thunderbird 向けアドオン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;うまくインストールできない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://addons.thunderbird.net/ja/thunderbird/addon/clamdrib-lin/&#34; title=&#34;clamdrib LIN :: Thunderbird 向けアドオン&#34;&gt;clamdrib LIN&lt;/a&gt; の最新バージョンは2017年のもので最近のバージョン 60 以降には対応してないっぽい（互換性チェック回避のオプションも試したがうまく行かなかった）。
諦めるしかないようだ。&lt;/p&gt;

&lt;p&gt;こんなんばっかだな ＞ &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;「ウイルス対策ソフト」は必要か？&lt;/h2&gt;

&lt;p&gt;なんだか知らないが「Linux にウイルス対策ソフトは必要か？」などという頭の悪い議論があるそうで，しかも「必要ない」という人の主張は「Linux ユーザは Windows や macOS に比べて規模が小さいから狙われにくい」という，これまた頭が悪いとしか言いようがないものらしい。&lt;/p&gt;

&lt;p&gt;「ウイルス」という表現は古臭くて的を得ていないので，この記事では色々ひっくるめて malware (malicious software) という表現に統一させてもらうが，ぶっちゃけて言うなら使っている OS にかかわらず「&lt;strong&gt;ユーザレベルでは malware 対策はセキュリティ管理の中核ではない&lt;/strong&gt;」というのが多分正しい。&lt;/p&gt;

&lt;p&gt;じゃあ malware 対策は必要ないのかと言えば「さにあらず」で，しかしそういったものは外部化され不可視になっている。
今どきの言葉で言うなら “Security as a Service” とでもいうような状況である。
そしてそのプラットフォーム OS として Linux 等のセキュリティ要件はむしろ高まっていると言えるだろう。
今回 &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; を触ってみて感じたことだが，一般ユーザにとって &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; がちょっと残念な感じになっているのはサーバ用途に最適化されつつあるからではないかと思うのだ。&lt;/p&gt;

&lt;p&gt;セキュリティのトレンドは「防衛」中心から「監視」中心にシフトしていて，単純に malware をバラ撒いただけではすぐに検知され対策されてしまう。
故に攻撃側も時間をかけてでも密やかに確実にターゲットを追い詰める social engineering を駆使した各種ターゲティング攻撃へとシフトしている。&lt;/p&gt;

&lt;p&gt;Phishing メールやそれに含まれる malware 検知などはサービスプロバイダが（有料のものも含めて）やってくれるし， Web についても Phishing サイトやマイニング・コード等を含んだサイトはブラウザレベルでかなりいい感じにブロックできるようになりつつある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ps1&#34;&gt;&lt;a href=&#34;#fn:ps1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
そういう意味で私にとって malware 対策ソフトは「うっかり転んだときのための少額保険」みたいなもので，それ以外ではあまり出しゃばって欲しくなかったりする。&lt;/p&gt;

&lt;p&gt;実際にそれまで使ってた Windows 7 でも “Microsoft Security Essentials” で必要十分な性能だったし &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; でも同程度の性能を満たしていれば，今回はそれでよかったのだ。
それがこんなに面倒臭いとは思わなかった。&lt;/p&gt;

&lt;p&gt;かといって malware 対策ソフトそのものに金銭は払いたくないし&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:fd1&#34;&gt;&lt;a href=&#34;#fn:fd1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;，もうしばらく運用してから評価してみるですよ。&lt;/p&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tecmint.com/best-antivirus-programs-for-linux/&#34;&gt;The 8 Best Free Anti-Virus Programs for Linux&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20170420-a074/&#34;&gt;Linux向けアンチウイルスソフト8選 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://clamav-jp.osdn.jp/jdoc/clamav.html&#34;&gt;Clam Antivirusに関するメモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.ubuntu.com/community/ClamAV&#34;&gt;ClamAV - Community Help Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hnakamur.github.io/blog/2018/05/21/setup-clamav-on-ubuntu-mate-18.04-lts/&#34;&gt;ClamAVをUbuntu MATE 18.04 LTSにセットアップ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lab4ict.com/system/archives/934&#34;&gt;Ubuntu 18.04 LTS DesktopでClamAVによるウィルスチェックを実行 – LAB4ICT&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/ClamAV&#34;&gt;ClamAV - ArchWiki&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.sophos.com/en-us/products/free-tools/sophos-antivirus-for-linux.aspx&#34;&gt;Free Linux Malware Scanner | Lightweight Agent for Linux Malware Detection and Removal | Sophos&lt;/a&gt; : &lt;a href=&#34;https://www.clamav.net/&#34; title=&#34;ClamavNet&#34;&gt;ClamAV&lt;/a&gt; がダメそうならこっちにする（笑）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/gano/items/802519add83c524e3019&#34;&gt;Ubuntu16.04(さくらVPS)で１からcronの設定をし、pythonプログラムを定期実行する - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:rs1&#34;&gt;サービスのリスタートには &lt;code&gt;sudo systemctl restart clamav-daemon.service&lt;/code&gt; とすればよい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rs1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:uid1&#34;&gt;ユーザ ID が分からない場合は &lt;code&gt;id username&lt;/code&gt; とコマンドを打てば分かるだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:uid1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ps1&#34;&gt;はっきり言ってフェイク・ニュースなんかより Phishing ページなどセキュリティ・リスクの高いコンテンツに対する監視の方にもっとリソースを割いてほしいのだけど。かといって中間車攻撃で暗号通信を覗き見るなんてのは論外だが。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ps1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:fd1&#34;&gt;Android 端末には &lt;a href=&#34;https://www.f-secure.com/en/home/products/freedome&#34;&gt;F-Secure 社の FREEDOME&lt;/a&gt; を入れている。 FREEDOME 自体は VPN ソフトだが malware 対策機能も付いていて追跡コードもある程度ブロックしてくれる優れもの。実はこれの Linux 版があれば買ってもよかったのだがなかったのだ。仮想ネットワークについては I2P を試してみるか，と思っていたりする。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:fd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>BOINC による学術分散コンピューティング・プロジェクトでの活動を再開した</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/academic-distributed-computing-projects-by-boinc/" />
		<id>tag:text.Baldanders.info,2019-04-30:/remark/2019/04/academic-distributed-computing-projects-by-boinc/</id>
		<published>2019-04-30T11:13:42+00:00</published>
		<updated>2019-04-30T11:14:08+00:00</updated>
		<summary>「計算機・ネットワークは有益な目的に使おう」</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;OS 移行の準備のためにこの一ヶ月ほど &lt;a href=&#34;https://boinc.berkeley.edu/&#34;&gt;BOINC (Berkeley Open Infrastructure for Network Computing)&lt;/a&gt; での活動を中断していたのだが，換装した &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; も安定的に稼働しているようだし，再開することにした。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/33863325058/&#34;&gt;&lt;img src=&#34;./boinc-manager.jpg&#34; srcset=&#34;./boinc-manager.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OS 移行のため中断していたが BOINC による学術分散コンピューティング・プロジェクトの活動を再開した&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/33863325058/&#34;&gt;OS 移行のため中断していたが BOINC による学術分散コンピューティング・プロジェクトの活動を再開した&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Linux 版の BOINC クライアントのインストールは&lt;a href=&#34;https://boinc.berkeley.edu/wiki/Installing_BOINC&#34; title=&#34;Installing BOINC - BOINC]&#34;&gt;パッケージ管理ツールを使うことを推奨&lt;/a&gt;しているようで &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でも APT (Advanced Package Tool) を使うのがいいようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apt show boinc-client
Package: boinc-client
Version: 7.14.2+dfsg-3
Priority: optional
Section: universe/net
Source: boinc
Origin: Ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで早速インストール。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install boinc-client boinc-manager
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています                
状態情報を読み取っています... 完了
以下の追加パッケージがインストールされます:
  libboinc7 libwxbase3.0-0v5 libwxgtk-webview3.0-gtk3-0v5 libwxgtk3.0-gtk3-0v5
提案パッケージ:
  boinc-client-opencl boinc-client-nvidia-cuda libgl1-mesa-glx
以下のパッケージが新たにインストールされます:
  boinc-client boinc-manager libboinc7 libwxbase3.0-0v5 libwxgtk-webview3.0-gtk3-0v5 libwxgtk3.0-gtk3-0v5
アップグレード: 0 個、新規インストール: 6 個、削除: 0 個、保留: 0 個。
7,421 kB のアーカイブを取得する必要があります。
この操作後に追加で 29.5 MB のディスク容量が消費されます。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まずは計算リソースの割り当てを少なめにして様子を見る予定だ。&lt;/p&gt;

&lt;p&gt;私としては &lt;a href=&#34;https://setiathome.berkeley.edu/&#34;&gt;SETI@home&lt;/a&gt; を通じて学んだ&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://baldanders.info/spiegel/log2/000581.shtml&#34;&gt;&lt;strong&gt;計算機・ネットワークは有益な目的に使おう&lt;/strong&gt;&lt;/a&gt;」&lt;/p&gt;

&lt;p&gt;という教えを胸に刻みつつ，今後も活動を継続していく所存である。&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/SETI-home%E3%83%95%E3%82%A1%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E2%80%95%E3%81%8A%E3%81%86%E3%81%A1%E3%81%AE%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A7%E5%AE%87%E5%AE%99%E4%BA%BA%E6%8E%A2%E3%81%97-%E9%87%8E%E5%B0%BB-%E6%8A%B1%E4%BB%8B/dp/4898140866?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4898140866&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51A74XV7MDL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/SETI-home%E3%83%95%E3%82%A1%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E2%80%95%E3%81%8A%E3%81%86%E3%81%A1%E3%81%AE%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A7%E5%AE%87%E5%AE%99%E4%BA%BA%E6%8E%A2%E3%81%97-%E9%87%8E%E5%B0%BB-%E6%8A%B1%E4%BB%8B/dp/4898140866?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4898140866&#34;&gt;SETI@homeファンブック―おうちのパソコンで宇宙人探し&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;野尻 抱介&lt;/dd&gt;
    &lt;dd&gt;ローカス 2000-01&lt;/dd&gt;
    &lt;dd&gt;Book 単行本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4898140866, EAN: 9784898140864&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;内容は古いけど当時の「熱」を伝えた名著だと思うけどなぁ。著者の方が自己出版で Kindle で出してくれたらいいのに。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-28&#34;&gt;2019-03-28&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>TeX Live を Ubuntu に（APT を使わずに）導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/install-texlive-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-30:/remark/2019/04/install-texlive-in-ubuntu/</id>
		<published>2019-04-30T08:49:27+00:00</published>
		<updated>2019-04-30T09:09:17+00:00</updated>
		<summary>Windows と異なり，設定用の各コマンドは管理者権限（sudo）で起動する点に気をつける必要がある。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 環境に &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; を導入するには APT (Advanced Package Tool) を使う方法と &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; が提供する &lt;code&gt;install-tl&lt;/code&gt; を使う方法がある。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;前者の場合は，他のパッケージと同様に統一的な管理ができますが，ディストリビューションによっては提供されているパッケージのバージョンが古いことがあります．後者の場合は，パッケージ管理システムによる管理からは外れてしまいますが，tlmgr を使って最新の状態にアップデートし続けることが可能です．&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://texwiki.texjp.org/?Linux&#34;&gt;Linux - TeX Wiki&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なかなか悩ましい選択だが，今回は &lt;code&gt;install-tl&lt;/code&gt; を使って導入と運用をしてみよう。
なお，対象は &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2018 で（2019 はまだリリースされていない）。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2018 のインストール&lt;/h2&gt;

&lt;p&gt;今回は初めてのインストールなので関係ないが，以前の環境があれば削除しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ rm -rf /usr/local/texlive/2018
$ rm -rf ~/.texlive2018&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ダウンロードページから &lt;code&gt;install-tl-unx.tar.gz&lt;/code&gt; をダウンロードし中身を展開する。
その後 &lt;code&gt;install-tl&lt;/code&gt; を管理者権限で起動する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ tar xvf install-tl-unx.tar.gz

$ ls install-tl*
install-tl-unx.tar.gz

install-tl-20190227:
LICENSE.CTAN  LICENSE.TL  install-tl  release-texlive.txt  texmf-dist  tlpkg

$ cd install-tl-20190227

$ sudo ./install-tl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ミラーサイトのリポジトリを使うなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo ./install-tl --repository http://mirror.ctan.org/systems/texlive/tlnet/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とするらしい（後で気がついた）。&lt;/p&gt;

&lt;p&gt;起動直後の画面はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;======================&amp;gt; TeX Live installation procedure &amp;lt;=====================

======&amp;gt;   Letters/digits in &amp;lt;angle brackets&amp;gt; indicate   &amp;lt;=======
======&amp;gt;   menu items for actions or customizations      &amp;lt;=======

 Detected platform: GNU/Linux on x86_64
 
 &amp;lt;B&amp;gt; set binary platforms: 1 out of 17

 &amp;lt;S&amp;gt; set installation scheme: scheme-full

 &amp;lt;C&amp;gt; set installation collections:
     40 collections out of 41, disk space required: 5806 MB

 &amp;lt;D&amp;gt; set directories:
   TEXDIR (the main TeX directory):
     !! default location: /usr/local/texlive/2018
     !! is not writable or not allowed, please select a different one!
   TEXMFLOCAL (directory for site-wide local files):
     /usr/local/texlive/texmf-local
   TEXMFSYSVAR (directory for variable and automatically generated data):
     /usr/local/texlive/2018/texmf-var
   TEXMFSYSCONFIG (directory for local config):
     /usr/local/texlive/2018/texmf-config
   TEXMFVAR (personal directory for variable and automatically generated data):
     ~/.texlive2018/texmf-var
   TEXMFCONFIG (personal directory for local config):
     ~/.texlive2018/texmf-config
   TEXMFHOME (directory for user-specific files):
     ~/texmf

 &amp;lt;O&amp;gt; options:
   [ ] use letter size instead of A4 by default
   [X] allow execution of restricted list of programs via \write18
   [X] create all format files
   [X] install macro/font doc tree
   [X] install macro/font source tree
   [ ] create symlinks to standard directories

 &amp;lt;V&amp;gt; set up for portable installation

Actions:
 &amp;lt;I&amp;gt; start installation to hard disk
 &amp;lt;P&amp;gt; save installation profile to &amp;#39;texlive.profile&amp;#39; and exit
 &amp;lt;H&amp;gt; help
 &amp;lt;Q&amp;gt; quit

Enter command: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;オプション等を見て問題なければ &lt;code&gt;I&lt;/code&gt; を入力してインストールを開始する。
おそらく既定のままで大丈夫。&lt;/p&gt;

&lt;p&gt;さてここからは長いのでしばらく放置で大丈夫だろう。
今回は（&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/install-tex-live-2017-for-windows/&#34; title=&#34;そうだ， TeX Live 2017 をインストールしよう！&#34;&gt;前回の経験&lt;/a&gt;を活かし）寝る直前にインストーラを仕掛けた。
私はやればできる子なのだ（自画自賛）。&lt;/p&gt;

&lt;p&gt;インストールが無事に完了すれば最後に以下のメッセージが表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Welcome to TeX Live!


See /usr/local/texlive/2018/index.html for links to documentation.
The TeX Live web site (https://tug.org/texlive/) contains any updates and
corrections. TeX Live is a joint project of the TeX user groups around the
world; please consider supporting it by joining the group best for you. The
list of groups is available on the web at https://tug.org/usergroups.html.


Add /usr/local/texlive/2018/texmf-dist/doc/man to MANPATH.
Add /usr/local/texlive/2018/texmf-dist/doc/info to INFOPATH.
Most importantly, add /usr/local/texlive/2018/bin/x86_64-linux
to your PATH for current and future sessions.
Logfile: /usr/local/texlive/2018/install-tl.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_1&#34;&gt;パス設定&lt;/h2&gt;

&lt;p&gt;パス設定については手動で行ってもいいのだが &lt;code&gt;tlmgr&lt;/code&gt; コマンドを使うほうが簡単である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo /usr/local/texlive/2018/bin/x86_64-linux/tlmgr path add&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体的には &lt;code&gt;/usr/local/texlive/2018/&lt;/code&gt; 以下の各種ファイルに対して &lt;code&gt;/usr/local/bin/&lt;/code&gt; 等へシンボリック・リンクを張っているらしい。
逆にリンクを削除する場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr path remove&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば安全に処理できる。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;h3&gt;環境変数の指定&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; は1年毎にアップグレードされるし，その度にリンクを切った張ったは微妙に嫌だったので， &lt;code&gt;/etc/profile.d/&lt;/code&gt; ディレクトリに以下の内容を書いたファイル &lt;code&gt;texlive-paths.sh&lt;/code&gt; を置いてみた（ファイル名は適当）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# shellcheck shell=sh&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Expand $PATH to include the directory where TeX Live applications go.&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/local/texlive/2018&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin/x86_64-linux&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -a -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MANPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MANPATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/texmf-dist/doc/man
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;INFOPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;INFOPATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/texmf-dist/doc/info
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ログイン時にこのファイルが実行され環境変数がセットされる。
この方法の欠点は管理者権限での実行時にはパスが通らないため&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr version
sudo: tlmgr: コマンドが見つかりません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と言われてしまう点だろう。
普段使いなら問題ないんだけどね。
結局，シンボリック・リンクを張ったほうがいいみたい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; を削除する際は &lt;code&gt;tlmgr path remove&lt;/code&gt; でリンクを削除するのを忘れずに。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; をアップデートしようとしたが...&lt;/h2&gt;

&lt;p&gt;まずは参照するリポジトリを指定をしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet
tlmgr: setting default package repository to http://mirror.ctan.org/systems/texlive/tlnet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このあと &lt;code&gt;tlmgr&lt;/code&gt; でアップデートを行おうとしたが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr update --self --all
TeX Live 2018 is frozen forever and will no
longer be updated.  This happens in preparation for a new release.

If you&amp;#39;re interested in helping to pretest the new release (when
pretests are available), please read https://tug.org/texlive/pretest.html.
Otherwise, just wait, and the new release will be ready in due time.
tlmgr: package repository http://ctan.math.washington.edu/tex-archive/systems/texlive/tlnet (verified)
tlmgr: saving backups to /usr/local/texlive/2018/tlpkg/backups&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と言われてしまった。
そうか。
夏には 2019 が出るから現行版の更新は既に凍結されているのか。
迂闊だった &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;各種設定変更&lt;/h2&gt;

&lt;p&gt;Windows と異なり，設定用の各コマンドは管理者権限（&lt;code&gt;sudo&lt;/code&gt;）で起動する点に気をつける必要がある。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;自動実行可能な外部コマンドの指定&lt;/h3&gt;

&lt;p&gt;まずは &lt;code&gt;shell_escape_commands&lt;/code&gt; の値を変更する。
インストール直後は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,extractbb,gregorio,kpsewhich,makeindex,repstopdf,texosquery-jre8,&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となっているので &lt;code&gt;/usr/ocal/texlive/texmf-local/web2c/texmf.cnf&lt;/code&gt; ファイルを作成し以下を記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;shell_escape_commands = \
bibtex,bibtex8,pbibtex,jbibtex,\
extractbb,\
gregorio,\
kpsewhich,\
makeindex,mendex,\
repstopdf,epspdf,\
texosquery-jre8,\&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;shell_escape_commands&lt;/code&gt; の値が上書きされて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,pbibtex,jbibtex,extractbb,gregorio,kpsewhich,makeindex,mendex,repstopdf,epspdf,texosquery-jre8,&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;設定を変更したら &lt;code&gt;mktexlsr&lt;/code&gt; で状態を更新しておくこと。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo mktexlsr
mktexlsr: Updating /usr/local/texlive/2018/texmf-config/ls-R... 
mktexlsr: Updating /usr/local/texlive/2018/texmf-dist/ls-R... 
mktexlsr: Updating /usr/local/texlive/2018/texmf-var/ls-R... 
mktexlsr: Updating /usr/local/texlive/texmf-local/ls-R... 
mktexlsr: Done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;toc_5&#34;&gt;日本語フォントの埋め込み設定&lt;/h3&gt;

&lt;p&gt;日本語フォントの埋め込み設定はどうなってるんだろうと思ったが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kanji-config-updmap status
CURRENT family for ja: ipaex
Standby family : ipa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ありゃりゃ， IPA フォントしかないのか。
そりゃそうか。
Linux だもんな。&lt;/p&gt;

&lt;p&gt;ちなみに日本語フォントの埋め込みを行わない（非推奨）場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kanji-config-updmap --user nofont&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする。
変更結果は &lt;code&gt;~/.texlive2018/&lt;/code&gt; ディレクトリに反映される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--user&lt;/code&gt; ではなく &lt;code&gt;--sys&lt;/code&gt; オプションをつけてシステム全体の設定を変更する場合は管理者権限で起動すること&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:kanji1&#34;&gt;&lt;a href=&#34;#fn:kanji1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;そういえば &lt;a href=&#34;https://ipafont.ipa.go.jp/&#34; title=&#34;IPAexフォント/IPAフォント | IPAフォントのダウンロードサイトです&#34;&gt;IPAex&lt;/a&gt; フォントの Ver.004.01 がリリースされている。
あの&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/character-of-the-new-era-name/&#34; title=&#34;新元号「文字」という技術的負債&#34;&gt;負の遺産&lt;/a&gt;のひとつ「元号の合成文字」である「令和（U+32FF “SQUARE ERA NAME REIWA”）」が追加されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ipafont.ipa.go.jp/node21&#34;&gt;リリースノート(Release Note) | IPAexフォント/IPAフォント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1182604.html&#34;&gt;情報処理推進機構、新元号“令和”の合字に対応した「IPAexフォント」v004.01を公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず &lt;code&gt;/usr/local/texlive/2018/texmf-dist/fonts/truetype/public/ipaex&lt;/code&gt; ディレクトリにあるフォントファイルを差し替えればいいかな。
たぶん 2019 かその次の 2020 あたりで正式にアップデートされるだろう。&lt;/p&gt;

&lt;p&gt;その他フォントの設定については以下の拙文を参照のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/using-source-han-fonts-by-japanese-tex/&#34;&gt;TeX 日本語環境で「源ノ」フォントを使ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/math-fonts/&#34;&gt;数式用フォントで遊ぶ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;試しに何かタイプセットしてみる&lt;/h2&gt;

&lt;p&gt;ちうわけでいつものあの文書ですね。
20世紀な内容でゴメン。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/charset_document&#34;&gt;spiegel-im-spiegel/charset_document: 「文字コードとその実装」 upLaTeX ドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ latexmk charset.tex
...
Latexmk: All targets (charset.pdf charset.dvi) are up-to-date
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よし。
ちゃんと動いた。
Lunux 環境でも問題なさそうだな。
ついでに PDF/A への変換もやっておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ps2pdf14 -dPDFA -dPDFACompatibilityPolicy=1 -sProcessColorModel=DeviceCMYK charset.pdf charset-pdfa.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これもちゃんと動いた。
フォントも正しく埋め込まれているようだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./font-property.png&#34;&gt;&lt;img src=&#34;./font-property.png&#34; srcset=&#34;./font-property.png 570w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;もうひとつ， $\mathrm{Lua\LaTeX}$ で以下のタイプセットも試してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/writing-code-with-lualatex/&#34;&gt;LuaLaTeX でコードを書いてみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;結果はこんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./output.png&#34;&gt;&lt;img src=&#34;./output.png&#34; srcset=&#34;./output.png 686w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tug.org/texlive/quickinstall.html&#34;&gt;Quick install - TeX Live - TeX Users Group&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://xartaky.hatenablog.jp/entry/2016-12-27-texlive-on-ubuntu&#34;&gt;Ubuntu 16.04 に TeX Live を入れる - 毎日もくもく&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/install-tex-live-2017-for-windows/&#34;&gt;そうだ， TeX Live 2017 (for Windows) をインストールしよう！&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦, 黒木 裕介&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;Book 大型本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4774187054, EAN: 9784774187051&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:kanji1&#34;&gt;&lt;code&gt;kanji-config-updmap-sys&lt;/code&gt; コマンドでも同様。つか &lt;code&gt;kanji-config-updmap-sys&lt;/code&gt; コマンドは内部で &lt;code&gt;kanji-config-updmap --sys&lt;/code&gt; を起動しているだけなんだけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:kanji1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu インストール用のブート可能 USB メモリを作成する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/bootable-usb/" />
		<id>tag:text.Baldanders.info,2019-04-21:/remark/2019/04/bootable-usb/</id>
		<published>2019-04-21T13:20:33+00:00</published>
		<updated>2019-05-11T12:24:54+00:00</updated>
		<summary>まずは USB メモリを買うところから（笑）</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;自宅 PC を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に換装するためにインストール用の DVD を作ったのだが絶望的に遅いので USB メモリを使おうと思ったのだが，ここ10年くらい USB メモリなんか使ったことがなかったので，まずは USB メモリを買うところから（笑）&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40690049803/&#34;&gt;&lt;img src=&#34;./usb-memory.jpg&#34; srcset=&#34;./usb-memory.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OS 移行用に購入。&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/40690049803/&#34;&gt;OS 移行用に購入。&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ブート可能な USB メモリってどうやって作ろうかと思ってたら &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; にツールがあった。&lt;/p&gt;

&lt;p&gt;USB メモリを挿してメニューから「ブータブルUSBの作成」を起動する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./tool-make-bootable-usb-memory.png&#34;&gt;&lt;img src=&#34;./tool-make-bootable-usb-memory.png&#34; srcset=&#34;./tool-make-bootable-usb-memory.png 818w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;「書き込み元のディスクイメージ」に &lt;a href=&#34;http://www.ubuntulinux.jp/download/ja-remix&#34; title=&#34;Ubuntu Desktop 日本語 Remixのダウンロード | Ubuntu Japanese Team&#34;&gt;ISO イメージファイル&lt;/a&gt;を指定して「ブータブルUSBの作成」ボタンを押す。
確認プロンプトが出るので「はい」で書き込みを開始する。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./tool-confirm.png&#34;&gt;&lt;img src=&#34;./tool-confirm.png&#34; srcset=&#34;./tool-confirm.png 611w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;書き込みが完了したら以下のプロンプトが出ておしまい。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./tool-conplete.png&#34;&gt;&lt;img src=&#34;./tool-conplete.png&#34; srcset=&#34;./tool-conplete.png 1010w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; を使って USB メモリからのインストールを試す&lt;/h2&gt;

&lt;p&gt;とりあえず &lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; で USB メモリからのインストールを試そうと思ったが， USB からの仮想ブートの仕方が分からない。
どうやらちょっと特殊な方法があるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://agnipulse.com/2009/07/boot-your-usb-drive-in-virtualbox/&#34;&gt;Boot your USB Drive in VirtualBox - AgniPulse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ta_b0_/items/6946f6e62b6a8c5bb4bc&#34;&gt;Windows版VirtualBoxでUSBブートをする方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事のとおりに USB ドライブに接続する vmdk ファイルを作って仮想ディスクとして追加すれば，この仮想ディスクからブートできる。&lt;/p&gt;

&lt;p&gt;で，実際に試してみたら上手く行ったんだけどインストールの最後の最後で失敗するんだよなぁ。
まぁ DVD よりはアクセスが速いし本番で使えればいいか。&lt;/p&gt;

&lt;p&gt;さて， GW に入ったらいよいよ OS を換装するんだ（フラグ）&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2018/04/ubuntu-1804-85-ubuntuusbubuntugnome.html&#34;&gt;Ubuntu 18.04 その85 - UbuntuのライブUSBメモリーを作成するには（Ubuntu/GNOME Disks編） - kledgeb&lt;/a&gt; : 「ディスク」ツールを使ってブータブル USB を作成する方法。 19.04 でもできることを確認済み&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%82%B7%E3%83%AA%E3%82%B3%E3%83%B3%E3%83%91%E3%83%AF%E3%83%BC-USB%E3%83%A1%E3%83%A2%E3%83%AA-%E4%BA%9C%E9%89%9B%E5%90%88%E9%87%91%E3%83%9C%E3%83%87%E3%82%A3-PS4%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E6%B8%88-SP032GBUF3J80V1TJA/dp/B01NBU1OS5?psc=1&amp;SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01NBU1OS5&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/317fsDSqG8L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%82%B7%E3%83%AA%E3%82%B3%E3%83%B3%E3%83%91%E3%83%AF%E3%83%BC-USB%E3%83%A1%E3%83%A2%E3%83%AA-%E4%BA%9C%E9%89%9B%E5%90%88%E9%87%91%E3%83%9C%E3%83%87%E3%82%A3-PS4%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D%E6%B8%88-SP032GBUF3J80V1TJA/dp/B01NBU1OS5?psc=1&amp;SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01NBU1OS5&#34;&gt;シリコンパワー USBメモリ 32GB USB3.0  亜鉛合金ボディ 防水 防塵 耐衝撃  永久保証 PS4動作確認済 Jewel J80 SP032GBUF3J80V1TJA&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シリコンパワー (Release 2017-02-01)&lt;/dd&gt;
    &lt;dd&gt;Personal Computer Personal Computers&lt;/dd&gt;
    &lt;dd&gt;ASIN: B01NBU1OS5, EAN: 4712702655292&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;OS 移行用に購入。ひたすらデザインで決めた（笑） よく考えたら32GBも要らなかった。まぁ，何か使い道があるだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-04-21&#34;&gt;2019-04-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Git GUI フロントエンドをたずねて三千里</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/searching-for-git-gui-front-end/" />
		<id>tag:text.Baldanders.info,2019-04-21:/remark/2019/04/searching-for-git-gui-front-end/</id>
		<published>2019-04-21T05:37:37+00:00</published>
		<updated>2019-04-21T06:05:36+00:00</updated>
		<summary>ブランチやタグや履歴を見ながらちょっと込み入った処理をする際はやはり GUI があるといいよねってことで。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;私は &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; の GUI フロントエンドに &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を使っている。
個人的には FOSS の GUI フロントエンドではこれ以上のものはないと思っているが，残念なことに .NET Framework 上で動く製品なのである。
Windows プラットフォームではこれで何の問題もなかったが，どうにも&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34; title=&#34;Ubuntu に Mono を導入する&#34;&gt;（.NET Framework の別実装である） Mono&lt;/a&gt; と相性が悪いようで，メジャーバージョンは上げられないしチョットしたことで落っこちてしまう。&lt;/p&gt;

&lt;p&gt;というわけで Linux/&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; で動作する GUI フロントエンドを探してみることした。
今回の評価ポイントは以下の通り。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;コミット履歴をブランチ込みでツリー表示でき，簡単に操作できること&lt;/li&gt;
&lt;li&gt;コミットやタグに対して電子署名を付与でき，かつ署名の検証ができること&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; や &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; を適切に扱えること&lt;/li&gt;
&lt;li&gt;サブモジュールを簡単に扱えること&lt;/li&gt;
&lt;li&gt;できれば FOSS 製品であること&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;VS Code や &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; など最近はテキストエディタや IDE でグラフィカルに &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; を扱える製品も多く &lt;code&gt;commit&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt; といった基本機能を扱うだけなら GUI フロントエンドを別途用意する必要はないのだが，ブランチやタグや履歴を見ながらちょっと込み入った処理をする際はやはり GUI があるといいよねってことで。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;GUI フロントエンドいろいろ&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;-gui&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; の&lt;a href=&#34;https://git-scm.com/docs/git-gui&#34; title=&#34;Git - git-gui Documentation&#34;&gt;公式フロントエンド&lt;/a&gt;らしい。
APT でインストールできる。&lt;/p&gt;

&lt;p&gt;Look&amp;amp;Feel は微妙だが機能的には悪くない。
ただ，タグへの署名と署名検証ができないっぽいんだよなぁ。&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://wiki.gnome.org/Apps/giggle/&#34; title=&#34;Apps/giggle - GNOME Wiki!&#34;&gt;Giggle&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;APT でインストールできる。&lt;/p&gt;

&lt;p&gt;GNOME 用ということで Look&amp;amp;Feel は悪くないが，あまり複雑なことはできないようだ。
残念。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;&lt;a href=&#34;https://wiki.gnome.org/Apps/Gitg/&#34; title=&#34;Apps/Gitg - GNOME Wiki!&#34;&gt;Gitg&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;APT でインストールできる。&lt;/p&gt;

&lt;p&gt;これも GNOME 用の製品だが，やっぱり複雑なことはできない感じ。
GNOME 用の製品ってみんなこんな感じなのか？&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;&lt;a href=&#34;https://desktop.github.com/&#34; title=&#34;GitHub Desktop | Simple collaboration from your desktop&#34;&gt;GitHub Desktop&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;あまり複雑なことはできなくて残念という意味では &lt;a href=&#34;https://desktop.github.com/&#34; title=&#34;GitHub Desktop | Simple collaboration from your desktop&#34;&gt;GitHub Desktop&lt;/a&gt; もそうか。
元々は Windows および macOS 用だが Linux 向けの fork を公開している方がいるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shiftkey/desktop&#34;&gt;shiftkey/desktop: Simple collaboration from your desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://desktop.github.com/&#34; title=&#34;GitHub Desktop | Simple collaboration from your desktop&#34;&gt;GitHub Desktop&lt;/a&gt; は GitHub 上の Issue や pull request が使いやすくなるよう設計されている。
なので &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 機能自体のサポートについてはイマイチな感じである。
「初心者向け」と言われるのも宜なるかなというところであろうか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://desktop.github.com/&#34; title=&#34;GitHub Desktop | Simple collaboration from your desktop&#34;&gt;GitHub Desktop&lt;/a&gt; の今後には期待している。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;&lt;a href=&#34;https://www.collab.net/products/giteye&#34; title=&#34;Free Git Client - GitEye | CollabNet VersionOne&#34;&gt;GitEye&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;FOSS ではないが「無料」で利用できる。
動作には別途 Java ランタイム（JRE）を用意する必要がある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:java1&#34;&gt;&lt;a href=&#34;#fn:java1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;Eclipse を連想させるプロジェクトベースの構成。
でも，これならいっそ Eclipse もしくは &lt;a href=&#34;https://www.jetbrains.com/idea/&#34; title=&#34;IntelliJ IDEA: The Java IDE for Professional Developers by JetBrains&#34;&gt;IntelliJ IDEA&lt;/a&gt; を使ったほうがいいんじゃないのか。&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;&lt;a href=&#34;https://www.gitkraken.com/&#34; title=&#34;Git Client - Glo Boards | GitKraken&#34;&gt;GitKraken&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;プロプライエタリ・ライセンスで非商用のみ「無料」で利用できる。
Pro 版であれば4.08USD/月のサブスクリプション制で利用できる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; の GUI フロントエンドといえば大抵これが挙がるくらい有名。
てことは皆これにお金払ってるってことか？&lt;/p&gt;

&lt;p&gt;Look&amp;amp;Feel は好みがあるので言及しないとして，機能自体は悪くないのだが &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の扱いが雑。
なんでパスフレーズを入力させるのに自前の入力窓を使うかな。
独自の Pinentry を使ってるってわけでもないようだし，まさかパスフレーズをメモリ上に保持ってないよね？&lt;/p&gt;

&lt;p&gt;あと，私の環境ではコミットやタグの署名検証ができなかった。
購入すれば見れるのかな？&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;&lt;a href=&#34;https://www.syntevo.com/smartgit/&#34; title=&#34;SmartGit – Git Client for Windows, macOS, Linux&#34;&gt;SmartGit&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;こちらもプロプライエタリ・ライセンスで非商用のみ「無料」で利用できる。
フルサポートで買うとかなり高い。
サブスクリプションを利用するなら5.99USD/月。&lt;/p&gt;

&lt;p&gt;Look&amp;amp;Feel や機能は申し分ないのだが，一点だけ &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; の扱いが駄目すぎる。
あと署名検証ができないぽい？&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.syntevo.com/smartgit/&#34; title=&#34;SmartGit – Git Client for Windows, macOS, Linux&#34;&gt;SmartGit&lt;/a&gt; では内臓の SSH クライアントを使うか &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; を使うか選択できる。
内臓の SSH クライアントを使う場合は自前で秘密鍵を管理しようとするが，どういうロジックで管理しているか不明。
&lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; を使う場合は更に駄目で，勝手に &lt;code&gt;ssh-agent&lt;/code&gt; を起動してくれやがるのだ（無効にするオプションが見当たらない）。
ちゃんと &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; 環境変数でソケットを指定してるだろ。
見ろよ！&lt;/p&gt;

&lt;p&gt;私は SSH 鍵の管理を &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; で&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/move-gpg-keyring/&#34; title=&#34;Windows 環境で作った GnuPG の鍵束を Ubuntu に移行する&#34;&gt;行ってる&lt;/a&gt;。
&lt;a href=&#34;https://www.syntevo.com/smartgit/&#34; title=&#34;SmartGit – Git Client for Windows, macOS, Linux&#34;&gt;SmartGit&lt;/a&gt; は &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; をまともに扱えないという理由で却下&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpg1&#34;&gt;&lt;a href=&#34;#fn:gpg1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
残念！&lt;/p&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;というわけで&lt;/h2&gt;

&lt;p&gt;どれもイマイチな出来。
それなら曲がりなりにも機能が揃っていて FOSS な &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; のほうがマシだな。
Linux ってホンマに GUI が弱いよな。
文化的なものかも知れないが。&lt;/p&gt;

&lt;p&gt;というわけで，もうしばらくは &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を騙し騙し使うか。&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;【おまけ】 CUI な &lt;a href=&#34;https://jonas.github.io/tig/&#34; title=&#34;Introduction · Tig - Text-mode interface for Git&#34;&gt;Tig&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;GUI ではないがキャラクタベースの &lt;a href=&#34;https://jonas.github.io/tig/&#34; title=&#34;Introduction · Tig - Text-mode interface for Git&#34;&gt;tig&lt;/a&gt; というのがあるらしい。
あちこちページを眺めていると，これを推す記事が結構多い。&lt;/p&gt;

&lt;p&gt;サーバ等のリモートホストに対してキャラクタ端末でリポジトリにアクセスする場合は便利かもしれない。&lt;/p&gt;

&lt;h2 id=&#34;toc_10&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads/guis&#34;&gt;Git - GUI Clients&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git.wiki.kernel.org/index.php/Interfaces,_frontends,_and_tools&#34;&gt;Interfaces, frontends, and tools - Git SCM Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://note.kurodigi.com/linux-gitclient/&#34;&gt;Linuxで使えるGitクライアントを集めてみた&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/solmin719/items/f174aab0fc73ddbc9cdf&#34;&gt;Ubuntu/Linuxで使えるGitのGUIクライアント(無料)まとめ - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/git-commit-with-openpgp-signature/&#34;&gt;Git Commit で OpenPGP 署名を行う&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:java1&#34;&gt;JRE のインストールについては&lt;a href=&#34;https://text.baldanders.info/remark/2019/03/using-ubuntu/#jdk&#34;&gt;「Ubuntu で遊ぶ」の OpenJDK インストールの項&lt;/a&gt;を参照のこと。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:java1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gpg1&#34;&gt;そもそも &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; で署名を行うということは &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; とセットで使うということなんだから &lt;code&gt;ssh-agent&lt;/code&gt; なんか使う選択肢はないと思うのだが。鍵管理は &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; に任せて &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; や &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; は本来の機能に集中するのが吉である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpg1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu 19.04 へのアップグレードを試す</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/upgrade-ubuntu-19_04/" />
		<id>tag:text.Baldanders.info,2019-04-20:/remark/2019/04/upgrade-ubuntu-19_04/</id>
		<published>2019-04-20T10:14:30+00:00</published>
		<updated>2019-05-10T10:23:00+00:00</updated>
		<summary>こういうアップグレードとかやると，いかに Windows がシステムとして駄目か分かるよな。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 19.04 がリリースされたようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/04/ubuntu-1904-15-ubuntu-1904.html&#34;&gt;Ubuntu 19.04 その15 - Ubuntu 19.04がリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;私が検証中の仮想環境&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:vb1&#34;&gt;&lt;a href=&#34;#fn:vb1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; でもソフトウェアの更新&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:upgrd1&#34;&gt;&lt;a href=&#34;#fn:upgrd1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; 後に以下のメッセージが出た。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-esign.png&#34;&gt;&lt;img src=&#34;./upgrade-sign.png&#34; srcset=&#34;./upgrade-sign.png 645w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;折角なのでアップグレードを試してみるとするか（仕事用のマシンじゃないので LTS バージョンを使う気は更々ない）。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; のアップグレード&lt;/h2&gt;

&lt;p&gt;「アップグレード」ボタンを押すとリリースノートが表示される。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-relnote.png&#34;&gt;&lt;img src=&#34;./upgrade-relnote.png&#34; srcset=&#34;./upgrade-relnote.png 600w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;文章中の空白文字が詰められていて「なんじゃこりゃ」な画面だが（何かの署名かと思ったぜ&lt;code&gt;w&lt;/code&gt;），気にせず「アップグレード」ボタンを押す。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-prepare.png&#34;&gt;&lt;img src=&#34;./upgrade-prepare.png&#34; srcset=&#34;./upgrade-prepare.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;これでしばらく経過を眺めていると以下のワーニングが出る。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-warning1.png&#34;&gt;&lt;img src=&#34;./upgrade-warning1.png&#34; srcset=&#34;./upgrade-warning1.png 1533w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;どうも &lt;a href=&#34;http://www.ubuntulinux.jp/&#34;&gt;Ubuntu Japanese Team&lt;/a&gt; や他のサードパーティのリポジトリは外されてしまうらしい。
まぁ，これはしょうがない。
&lt;a href=&#34;#srclist&#34;&gt;あとで繋げばいいし&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;処理を続けると確認画面が表示されるので追加・変更・削除されるソフトウェアを確認しておく。
どうやら &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt;, &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;, &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; といったセキュリティ関連のツールもアップグレードされるようだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-confirm2.png&#34;&gt;&lt;img src=&#34;./upgrade-confirm2.png&#34; srcset=&#34;./upgrade-confirm2.png 1026w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-confirm3.png&#34;&gt;&lt;img src=&#34;./upgrade-confirm3.png&#34; srcset=&#34;./upgrade-confirm3.png 1026w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;確認して問題ないようなら「アップグレードを開始」ボタンを押して処理を続行する。
アップグレードは時間がかかるのでお茶でも淹れてこよう。&lt;/p&gt;

&lt;p&gt;途中でワーニングが出たりもしたが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:w1&#34;&gt;&lt;a href=&#34;#fn:w1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-warning2.png&#34;&gt;&lt;img src=&#34;./upgrade-warning2.png&#34; srcset=&#34;./upgrade-warning2.png 1190w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;気にせず最後まで終わらせる。
終わったら（再起動しろとは言われなかったが）一応再起動しておく。&lt;/p&gt;

&lt;p&gt;再起動後，気になっていたセキュリティ・ツールのバージョンをチェックしてみた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.12
libgcrypt 1.8.4
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: /home/username/.gnupg
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256,
      TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2

$ openssl version
OpenSSL 1.1.1b  26 Feb 2019

$ ssh -V
OpenSSH_7.9p1 Ubuntu-10, OpenSSL 1.1.1b  26 Feb 2019&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;おおっ。
&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; はまだちょっと古いが &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; と &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; は最新になっている。
まぁこのくらいなら許容範囲だろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ver1&#34;&gt;&lt;a href=&#34;#fn:ver1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;srclist&#34;&gt;サードパーティのリポジトリを再び有効にする&lt;/h2&gt;

&lt;p&gt;アップグレード時に外されたサードパーティのリポジトリをチェックしておく。
「ソフトウェアとアップデート」を開いて「他のソフトウェア」タブを見てみる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./upgrade-srclist.png&#34;&gt;&lt;img src=&#34;./upgrade-srclist.png&#34; srcset=&#34;./upgrade-srclist.png 972w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;うん，外れてるね。
&lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; のリポジトリは有効にしておく。
&lt;a href=&#34;http://www.ubuntulinux.jp/&#34;&gt;Ubuntu Japanese Team&lt;/a&gt; のリポジトリも有効にしておけばいいかな。&lt;/p&gt;

&lt;p&gt;これで &lt;code&gt;apt update&lt;/code&gt; と，必要に応じて &lt;code&gt;apt upgrade&lt;/code&gt; や &lt;code&gt;apt autoremove&lt;/code&gt; を行えば OK。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;しかし，なんだな。&lt;/h2&gt;

&lt;p&gt;こういうアップグレードとかやると，いかに Windows がシステムとして駄目か分かるよな。
パソコンでもスマホのような携帯端末でも定期的にアップデートされることを前提にハードウェアもソフトウェアも構成しないと駄目だということだよねぇ。&lt;/p&gt;

&lt;p&gt;いまや Office ツールは Microsoft の独占というほどでもないし，大抵のことは Web インタフェースがあるのでブラウザがあればなんとかなる。
と考えるとやはり Windows を捨てる選択は正解だなと改めて思う。
他人に薦められるかと言えば，それは別問題だが（笑）&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/04/ubuntu-1810-172-ubuntu-1904.html&#34;&gt;Ubuntu 18.10 その172 - Ubuntu 19.04へアップグレードするには・アップグレードの注意事項 - kledgeb&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.ubuntulinux.jp/News/ubuntu1904-ja-remix&#34;&gt;Ubuntu 19.04 日本語 Remix リリース | Ubuntu Japanese Team&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxfan.info/ubuntu-19-04-basic-settings&#34;&gt;Ubuntu 19.04のインストール直後にやっておきたいことまとめ | LFI&lt;/a&gt; : 「言語サポートの設定」はやっておいたほうがいいかも&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-git-from-ppa/&#34;&gt;PPA から Git をインストールする&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34;&gt;Ubuntu に Mono を導入する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;既に &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 19.10 の話題が&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/04/ubuntu-1910-2-libreofficesnap.html&#34;&gt;Ubuntu 19.10 その2 - LibreOfficeをSnapで提供する提案 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/04/ubuntu-1910-3-geary.html&#34;&gt;Ubuntu 19.10 その3 - デフォルトのメールクライアントをGearyに変更する提案 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:vb1&#34;&gt;余談だが &lt;a href=&#34;https://www.virtualbox.org/&#34; title=&#34;Oracle VM VirtualBox&#34;&gt;VirtualBox&lt;/a&gt; でも 6.0.6 がリリースされている。アップデートは計画的に。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:vb1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:upgrd1&#34;&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では「ソフトウェアの更新」で GUI によるソフトウェアのアップデートが可能である。また「ソフトウェアとアップデート」を使って更新の自動化や LivePatch の設定も可能だ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:upgrd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:w1&#34;&gt;あとで確認したが，ちゃんと最新版が入ってるっぽい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:w1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ver1&#34;&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; は 1.1.1 系の最新， &lt;a href=&#34;http://www.openssh.com/&#34; title=&#34;OpenSSH&#34;&gt;OpenSSH&lt;/a&gt; は 7.9 系の最新になっていた。 Facebook の TL で教えてもらったが， &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; はパッケージマネージャでパッケージの完全性検証に使われるため特に保守的な管理になっているらしい。まぁ脆弱性や不具合等は随時バックポートされているそうなので，バージョン番号であまり神経質にならないほうがいいのかも知れない。ただ &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の動向を追いかけている身としては何とか改善したい。でもそれは後々のお楽しみということで。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ver1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Ubuntu に ATOM エディタを導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/atom-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-15:/remark/2019/04/atom-in-ubuntu/</id>
		<published>2019-04-15T14:32:39+00:00</published>
		<updated>2019-04-30T08:50:34+00:00</updated>
		<summary>この記事は随時更新します。 悪しからずご了承の程を。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;さて，そろそろ &lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; を &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に入れようか。&lt;/p&gt;

&lt;p&gt;なお，この記事は随時更新します。
悪しからずご了承の程を。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;前準備&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; の&lt;a href=&#34;https://github.com/atom/atom/&#34; title=&#34;atom/atom: The hackable text editor&#34;&gt;リポジトリ&lt;/a&gt;に各バージョンの &lt;code&gt;atom-amd64.deb&lt;/code&gt; ファイルが公開されているので，これを使う。&lt;/p&gt;

&lt;p&gt;deb ファイルを使ってインストールを行うには &lt;code&gt;gdebi&lt;/code&gt; というコマンドを使うらしい。
これは APT で取得可能だ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show gdebi-core
Package: gdebi-core
Version: 0.9.5.7+nmu2
Priority: optional
Section: universe/admin
Source: gdebi
Origin: Ubuntu
Maintainer: Ubuntu Developers &amp;lt;ubuntu-devel-discuss@lists.ubuntu.com&amp;gt;
Original-Maintainer: Ubuntu Developers &amp;lt;ubuntu-dev-team@lists.alioth.debian.org&amp;gt;
Bugs: https://bugs.launchpad.net/ubuntu/+filebug
Installed-Size: 876 kB
Depends: python3:any (&amp;gt;= 3.3.2-2~), python3-apt, python3-debian, file
Suggests: xz-utils | xz-lzma
Task: ubuntu-mate-core, ubuntu-mate-desktop
Download-Size: 116 kB
APT-Sources: http://jp.archive.ubuntu.com/ubuntu cosmic/universe amd64 Packages
Description: simple tool to install deb files
 gdebi を使うと、ローカルの deb パッケージをその依存関係を解決しながらインス トールできます。apt
 は同じ動作をしますが、インストールできるのはリモート (http, ftp) にあるパッケージのみです。
 .
 It can also resolve build-depends of local debian/control files.
 .
 This package contains the libraries and command-line utility.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ふむむ。
なるほど。&lt;/p&gt;

&lt;p&gt;ではインストールしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install gdebi-core&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールできたら動作確認しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gdebi --version
0.9.5.7+nmu2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よしよし。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/releases&#34; title=&#34;Releases · atom/atom&#34;&gt;リリースページ&lt;/a&gt; から最新版の &lt;code&gt;atom-amd64.deb&lt;/code&gt; ファイルをダウンロードし &lt;code&gt;gdebi&lt;/code&gt; コマンドでインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo gdebi atom-amd64.deb
Reading package lists... Done
Building dependency tree        
Reading state information... Done
Reading state information... Done
以下のパッケージのインストールが必要です: gconf-service gconf-service-backend gconf2 gconf2-common libgconf-2-4 libpython-stdlib libpython2-stdlib python python-minimal python2 python2-minimal python2.7 python2.7-minimal 

A hackable text editor for the 21st Century.
 Atom is a free and open source text editor that is modern, approachable, and hackable to the core.
ソフトウェアパッケージをインストールしますか? [y/N]:y

[...snip...]

atom-amd64.deb を展開する準備をしています ...
atom (1.36.0) を展開しています...
atom (1.36.0) を設定しています ...
desktop-file-utils (0.23-3ubuntu3) のトリガを処理しています ...
gnome-menus (3.13.3-11ubuntu2) のトリガを処理しています ...
mime-support (3.60ubuntu1) のトリガを処理しています ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールが完了するとドックのアプリボタンで表示されるアプリ一覧にアイコンが追加される。
もちろんターミナルからも起動できる。
1.36 から単一のファイルのみを指定して起動することが可能になった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ atom ~/work/foo.txt &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./open-single-file-by-atom.png&#34;&gt;&lt;img src=&#34;./open-single-file-by-atom.png&#34; srcset=&#34;./open-single-file-by-atom.png 790w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;善き哉。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; 用にフォントを導入する。&lt;/h2&gt;

&lt;p&gt;個人的にテキストエディタのフォントは &lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt;，そして日本語は明朝体に限る。
日本語は標準の NOTO フォントを使うとして &lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt; はネットから取ってこないと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; ではフォントの置き場所は以下の3箇所になるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/usr/share/fonts&lt;/code&gt; : システムフォント&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/local/share/fonts&lt;/code&gt; : 追加フォントをマシンで共有する場合&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.fonts&lt;/code&gt; : 個人で導入する場合&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのディレクトリのいずれかに入れたらキャッシュを更新しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-cache -fv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちゃんと導入できたか確認しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-list | grep Inconsolata
/home/username/.fonts/Inconsolata.otf: Inconsolata:style=Medium&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;ATOM&lt;/a&gt; でフォントを指定する場合には Settings → Editor Settings の Font Family の項目で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Inconsolata, Noto Serif CJK JP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などと指定しておけばよい。
ちなみに NOTO フォントは以下のように配置されている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ fc-list | grep Noto | grep JP
/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans CJK JP,Noto Sans CJK JP Bold:style=Bold,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc: Noto Serif CJK JP:style=Bold
/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Bold:style=Bold,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Medium.ttc: Noto Sans CJK JP,Noto Sans CJK JP Medium:style=Medium,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Black.ttc: Noto Serif CJK JP,Noto Serif CJK JP Black:style=Black,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans CJK JP,Noto Sans CJK JP Regular:style=Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Light.ttc: Noto Serif CJK JP,Noto Serif CJK JP Light:style=Light,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc: Noto Serif CJK JP:style=Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc: Noto Sans Mono CJK JP,Noto Sans Mono CJK JP Regular:style=Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-DemiLight.ttc: Noto Sans CJK JP,Noto Sans CJK JP DemiLight:style=DemiLight,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Thin.ttc: Noto Sans CJK JP,Noto Sans CJK JP Thin:style=Thin,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Light.ttc: Noto Sans CJK JP,Noto Sans CJK JP Light:style=Light,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-SemiBold.ttc: Noto Serif CJK JP,Noto Serif CJK JP SemiBold:style=SemiBold,Regular
/usr/share/fonts/opentype/noto/NotoSansCJK-Black.ttc: Noto Sans CJK JP,Noto Sans CJK JP Black:style=Black,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-ExtraLight.ttc: Noto Serif CJK JP,Noto Serif CJK JP ExtraLight:style=ExtraLight,Regular
/usr/share/fonts/opentype/noto/NotoSerifCJK-Medium.ttc: Noto Serif CJK JP,Noto Serif CJK JP Medium:style=Medium,Regular&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_3&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxconfig.org/install-atom-on-ubuntu-18-04-bionic-beaver-linux&#34;&gt;Install Atom on Ubuntu 18.04 Bionic Beaver Linux - LinuxConfig.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.leo-leo.uno/2018/08/18/392/&#34;&gt;ubuntu18.04にAtomをインストール – v0.0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxfan.info/ubuntu-18-04-change-ja-font&#34;&gt;Ubuntu 18.04 LTSの日本語フォントを変更する！【詳細解説】 | LFI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.ubuntulinux.jp/UbuntuTips/Desktop/InstallFont&#34;&gt;UbuntuTips/Desktop/InstallFont - Ubuntu Japanese Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://orebibou.com/2017/01/centosubuntu%E3%81%A7%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/&#34;&gt;CentOS/Ubuntuでフォントを追加する方法 | 俺的備忘録 〜なんかいろいろ〜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1180090.html&#34;&gt;GitHub、フリーのコードエディター「Atom 1.36」を正式公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/atom/atom/issues/18535&#34;&gt;Items in the Menu Bar are invisible on Ubuntu 18.10 when atom window is focused. · Issue #18535 · atom/atom · GitHub&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/atom-editor/&#34;&gt;ATOM Editor に関するメモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Ubuntu に Mono を導入する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-14:/remark/2019/04/mono-in-ubuntu/</id>
		<published>2019-04-14T10:36:23+00:00</published>
		<updated>2019-04-30T08:50:34+00:00</updated>
		<summary>今回は Mono および Mono で動くアプリケーションを導入する。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;今回は &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; および &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; で動くアプリケーションを導入する。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を導入するにはリポジトリの登録から始める必要がある。
&lt;code&gt;gnupg&lt;/code&gt; と &lt;code&gt;ca-certificates&lt;/code&gt; は既に入ってるみたいなので公開鍵のインポートとソースリストの追加から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
$ echo &amp;#34;deb https://download.mono-project.com/repo/ubuntu stable-bionic main&amp;#34; | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
$ sudo apt update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;続いて &lt;code&gt;mono-devel&lt;/code&gt; を導入する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install mono-devel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストール処理が完了したら念のため動作確認をしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mono -V
Mono JIT compiler version 5.20.1.19 (tarball Thu Apr 11 09:02:17 UTC 2019)
Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           __thread
	SIGSEGV:       altstack
	Notifications: epoll
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	Interpreter:   yes
	LLVM:          yes(600)
	Suspend:       hybrid
	GC:            sgen (concurrent by default)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; は OSS のパスワード管理ツールで，基本的には Windows 用だが各種プラットフォーム用のバージョンが公開されている。
&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; では APT で導入可能である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt show keepass2
Package: keepass2
Version: 2.39.1+dfsg-1
Priority: optional
Section: universe/utils
Origin: Ubuntu
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちょっとバージョンが古いがプラットフォームが違うし，まぁいいだろう。
インストールしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install keepass2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;インストールが完了するとドックのアプリボタンで表示されるアプリ一覧にアイコンが追加される。
あとは Windows 版と同じように使える。&lt;/p&gt;

&lt;p&gt;パスワードを覚えるなんて脳みその無駄遣い。
適切な管理ツールでパスワード管理を行いましょう。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; は .NET Framework 上で動く &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; 用の GUI フロントエンドだが， &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版もあって他プラットフォームでも利用できる。
ただし &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版はバージョン 2 系までしか対応していないので注意が必要である。&lt;/p&gt;

&lt;p&gt;ダウンロードページから &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; 版の&lt;a href=&#34;https://github.com/gitextensions/gitextensions/releases/tag/v2.51.05&#34; title=&#34;Release Version 2.51.05 · gitextensions/gitextensions&#34;&gt;最新バージョン&lt;/a&gt;をダウンロードする。&lt;/p&gt;

&lt;p&gt;適当なディレクトリにダウンロードした zip ファイルを &lt;code&gt;unzip&lt;/code&gt; コマンドで展開する。
&lt;code&gt;GitExtensions&lt;/code&gt; ディレクトリが作成されてファイルが展開されている筈である。&lt;/p&gt;

&lt;p&gt;展開されたファイルの中に &lt;code&gt;gitext.sh&lt;/code&gt; があるので，これに実行権限を付与して起動する。
今後のためにパスを通しておいたほうがいいだろう。&lt;/p&gt;

&lt;p&gt;最初に &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; を起動すると言語の選択ウィンドウが表示される。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./language.png&#34;&gt;&lt;img src=&#34;./language.png&#34; srcset=&#34;./language.png 642w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;日本語があってよかったね。
あとは Windows 版と同じ。&lt;/p&gt;

&lt;p&gt;けど Windows 版と比べて操作感がイマイチなんだよなぁ。
まぁ &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; をメインに作業するわけではないので，これでもいいか。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;【追記 2019-04-20】 &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; が落ちる&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; を &lt;a href=&#34;{{ ref&#34; title=&#34;/remark/2019/04/upgrade-ubuntu-19_04.md&amp;quot; }} &amp;quot;Ubuntu 19.04 へのアップグレードを試す&#34;&gt;19.04 にアップグレード&lt;/a&gt;したら &lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; が落ちるようになってしまった。
似た事例がないかと探してみたら &lt;code&gt;GitExtensions/Plugins/Bitbucket.dll&lt;/code&gt; を削除したら行けるみたいな記述を見かけたので試してみたら上手く行ったっぽい？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codeofclimber.ru/2015/how-to-install-gitextensions-in-ubuntu/&#34;&gt;How to install GitExtensions in Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やれやれだぜ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitextensions.github.io/&#34; title=&#34;Git Extensions | Git Extensions is a graphical user interface for Git that allows you to control Git without using the commandline&#34;&gt;Git Extensions&lt;/a&gt; の代わりになるような GUI フロントエンドを探しているのだがいいのがない。
コミットやタギングで電子署名を付与できて結果を検証できればいいのだが，特にタギングに署名できる製品がない。
&lt;a href=&#34;https://blog.axosoft.com/gitkraken-v5-0/&#34;&gt;GitKraken v5.0&lt;/a&gt; ならいけると思ったのだが設定画面が分かりにくい上にフリー版だと署名の検証ができないっぽい？&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;.NET Framework と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と .NET Core&lt;/h2&gt;

&lt;p&gt;.NET Framework と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と .NET Core の関係がいまひとつ分からなかったのでちょろんと調べてみた。
かなり大雑把な説明なのはご容赦。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;.NET Framework&lt;/h3&gt;

&lt;p&gt;.NET Framework が最初に公開されたのは2001年。
基盤となる CLI (Common Language Infrastructure) や CLR (Common Language Runtime) は標準化され Windows 以外のプラットフォームでも実装可能となるよう設計されたが，実際にはリファレンス実装である .NET Framework は Windows 以外には対応しなかった。
まぁ，当時の Microsoft は FOSS に敵対的だったし，それもやむなしというところだろうか。&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; と Xamarin&lt;/h3&gt;

&lt;p&gt;当然ながら，.NET Framework に対抗する OSS 製品を作ろうという動きがあり，そのうちのひとつが &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; Project であった。
&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; はマルチプラットフォームで動作するアプリケーション基盤として実装されているのが特徴である。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を巡っては紆余曲折があったが（生臭い話は省略），最終的に Xamarin が開発母体となった。&lt;/p&gt;

&lt;p&gt;Xamarin は  &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; Project のオーナー企業であると同時に &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; を基盤とした製品群を指すようだ。
なので今後は &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin と一括りにしてしまおう。&lt;/p&gt;

&lt;p&gt;企業としての Xamarin は後に Microsoft に買収され &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin は Microsoft 傘下である &lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; において今も開発が続けられている。&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;.NET Core&lt;/h3&gt;

&lt;p&gt;一方，実質 Windows でしか動作しない .NET Framework の派生として .NET Core が Microsoft からリリースされた。
.NET Core はマルチプラットフォームで動作する OSS 製品として，こちらも &lt;a href=&#34;https://www.dotnetfoundation.org/&#34;&gt;.NET Foundation&lt;/a&gt; で開発が行われている。&lt;/p&gt;

&lt;p&gt;ここに於いて Microsoft は経営方針の大転換を果たしたわけだ。&lt;/p&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;.NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin&lt;/h3&gt;

&lt;p&gt;現在 Microsoft は OSS の .NET シリーズとして .NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin の2系統の製品を持っている。
両者の棲み分けは以下のような感じらしい。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156949/img.html&#34;&gt;&lt;img src=&#34;https://ascii.jp/elem/000/001/156/1156949/ph07_2000x1125.jpg&#34; srcset=&#34;https://ascii.jp/elem/000/001/156/1156949/ph07_2000x1125.jpg 2000w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;つまり Linux や macOS，あるいは iOS や Android の GUI アプリケーションとしては &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin，サーバ・サイドあるいはクラウド向けには .NET Core ということのようだ。
さらに将来的には Windows アプリケーション向けの .NET Framework，マルチプラットフォーム向けの .NET Core と &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;/Xamarin の基盤を共通化すると表明されている。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156951/img.html&#34;&gt;&lt;img src=&#34;https://ascii.jp/elem/000/001/156/1156951/ph09_2000x1125.jpg&#34; srcset=&#34;https://ascii.jp/elem/000/001/156/1156951/ph09_2000x1125.jpg 2000w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;そうなったら &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt; も役目を終える感じになるのかねぇ。&lt;/p&gt;

&lt;h2 id=&#34;toc_9&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mag.osdn.jp/17/05/22/150000&#34;&gt;C#7に完全対応した「Mono 5.0」が公開 | OSDN Magazine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ascii.jp/elem/000/001/156/1156721/&#34;&gt;ASCII.jp：.NET Core / .NET Framework / Xamarin / Monoの関係を整理する (1/3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/dotnet/core/about&#34;&gt;.NET Core について | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.com/jp/articles/varieties-dotnet&#34;&gt;.NETの派生を理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ossnews.jp/compare/Mono/dotNET_Core&#34;&gt;オープンソースのMonoと.NET Coreを比較&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/amay077/items/399002a02c1abf9d620b&#34;&gt;Xamarin 最近どうよ？ - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/gitextensions/gitextensions/wiki/How-To%3A-run-Git-Extensions-on-Linux&#34;&gt;How To: run Git Extensions on Linux · gitextensions/gitextensions Wiki&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Go 1.12.4 がリリースされた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/04/go-1_12_4-is-released/" />
		<id>tag:text.Baldanders.info,2019-04-13:/release/2019/04/go-1_12_4-is-released/</id>
		<published>2019-04-13T10:25:08+00:00</published>
		<updated>2019-04-13T10:31:24+00:00</updated>
		<summary>なんか 1.12.3 がちゃんと直ってなかったみたい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;なんか 1.12.3 がちゃんと直ってなかったみたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/_lOiGyQR5Fs&#34;&gt;Go 1.12.4 and Go 1.11.9 are released - Google Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;go1.12.3 (released 2019/04/08) was accidentally released without its intended fix. It is identical to go1.12.2, except for its version number. The intended fix is in go1.12.4.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.12.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで Linux 環境の方は 1.12.4 にアップデートしましょう。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
