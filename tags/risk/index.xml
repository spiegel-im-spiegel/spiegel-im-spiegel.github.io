<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of risk - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/risk/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/risk/index.xml" />
	<id>tag:text.Baldanders.info,2022-08-03:/tags</id>
	<updated>2022-08-03T21:28:36+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Go 1.19 で os/exec パッケージの挙動が変わった話</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/exec-package-in-go119/" />
		<id>tag:text.Baldanders.info,2022-08-03:/golang/exec-package-in-go119/</id>
		<published>2022-08-03T12:28:36+00:00</published>
		<updated>2022-08-03T17:52:37+00:00</updated>
		<summary>Windows 環境でコマンドを起動する際の脆弱性の回避</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 1.19 の&lt;a href=&#34;https://go.dev/doc/go1.19&#34; title=&#34;Go 1.19 Release Notes - The Go Programming Language&#34;&gt;リリースノート&lt;/a&gt;を眺めてみると&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;a href=&#34;https://go.dev/pkg/os/exec/#Command&#34;&gt;&lt;code&gt;Command&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://go.dev/pkg/os/exec/#LookPath&#34;&gt;&lt;code&gt;LookPath&lt;/code&gt;&lt;/a&gt; no longer allow results from a PATH search to be found relative to the current directory. This removes a &lt;a href=&#34;https://go.dev/blog/path-security&#34;&gt;common source of security problems&lt;/a&gt; but may also break existing programs that depend on using, say, &lt;code&gt;exec.Command(&amp;quot;prog&amp;quot;)&lt;/code&gt; to run a binary named &lt;code&gt;prog&lt;/code&gt; (or, on Windows, &lt;code&gt;prog.exe&lt;/code&gt;) in the current directory. See the &lt;a href=&#34;https://go.dev/pkg/os/exec/&#34;&gt;&lt;code&gt;os/exec&lt;/code&gt;&lt;/a&gt; package documentation for information about how best to update such programs.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://go.dev/doc/go1.19&#34;&gt;Go 1.19 Release Notes - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とある。
さっそく試してみよう。&lt;/p&gt;
&lt;p&gt;まず Windows 環境で &lt;a href=&#34;https://github.com/goark/gpgpdump&#34; title=&#34;goark/gpgpdump: OpenPGP packet visualizer&#34;&gt;&lt;code&gt;gpgpdump.exe&lt;/code&gt;&lt;/a&gt; コマンドを PATH で指定されたフォルダ以外，具体的には以下のソースファイルと同じフォルダに置く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os/exec&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gpgpdump.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;CombinedOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;output by %v:\n%v\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 1.19 コンパイル環境下で実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; go run sample.go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exec: &amp;#34;gpgpdump.exe&amp;#34;: cannot run executable found relative to current directory
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;「カレントディレクトリに指定の実行ファイルあるけど起動してやらん（←超意訳）」とエラーになった。&lt;/p&gt;
&lt;p&gt;Windows ではパス指定なしでコマンドを起動する際に，カレントフォルダに同名の実行ファイルが存在すると優先的にそれを起動してしまう。
&lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 標準の &lt;a href=&#34;https://pkg.go.dev/os/exec&#34; title=&#34;exec package - os/exec - Go Packages&#34;&gt;&lt;code&gt;os/exec&lt;/code&gt;&lt;/a&gt; パッケージもこの挙動に合わせていたのだが，2020年の &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-27955&#34;&gt;CVE-2020-27955&lt;/a&gt; で問題になった。
この挙動を悪用して悪意のコマンドを実行される可能性があるというわけだ。&lt;/p&gt;
&lt;p&gt;この脆弱性を回避するために，様々な試行錯誤が行われたが &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 1.19 の改修が決定打になるだろう。
カレントフォルダにある同名の実行ファイルを無視するのではなく，エラーとして「起動させない」というのがポイント。&lt;/p&gt;
&lt;p&gt;なお，今まで通りパスなしのコマンド指定時にカレントフォルダの実行ファイルを起動したいなら &lt;a href=&#34;https://pkg.go.dev/os/exec&#34; title=&#34;exec package - os/exec - Go Packages&#34;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.ErrDot&lt;/code&gt; エラーを明示的に潰すことで実現できる。
こんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;errors&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os/exec&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;gpgpdump.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Is&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ErrDot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;CombinedOutput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;output by %v:\n%v\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; go run sample2.go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exec: &amp;#34;gpgpdump.exe&amp;#34;: cannot run executable found relative to current directory
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;output by .\gpgpdump.exe version:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gpgpdump v0.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;repository: https://github.com/goark/gpgpdump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となる。
エラーを無視してカレントディレクトリ &lt;code&gt;.&lt;/code&gt; を付加した状態で実行されているのがお分かりだろうか。&lt;/p&gt;
&lt;p&gt;ちなみに，同じコードを Windows 以外の環境で実行すると（&lt;code&gt;.exe&lt;/code&gt; の拡張子は外してね）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample2b.go 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exec: &amp;#34;gpgpdump&amp;#34;: executable file not found in $PATH
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と PATH 上に実行ファイルが見つからない旨の普通のエラーが表示される。
これでアプリケーション側は OS ごとに処理を分ける必要がなくなったわけだ。
めでたい！&lt;/p&gt;
&lt;p&gt;ところで Windows には &lt;code&gt;NoDefaultCurrentDirectoryInExePath&lt;/code&gt; なる環境変数があるそうで，これが有効になっているとパスなしのコマンド指定時にカレントフォルダの同名実行ファイルを無視するらしい。&lt;/p&gt;
&lt;p&gt;で &lt;a href=&#34;https://pkg.go.dev/os/exec&#34; title=&#34;exec package - os/exec - Go Packages&#34;&gt;&lt;code&gt;os/exec&lt;/code&gt;&lt;/a&gt; パッケージは律儀にこの環境変数にも対応している。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;On Windows, &lt;code&gt;Command&lt;/code&gt; and &lt;code&gt;LookPath&lt;/code&gt; now respect the &lt;code&gt;NoDefaultCurrentDirectoryInExePath&lt;/code&gt; environment variable, making it possible to disable the default implicit search of “&lt;code&gt;.&lt;/code&gt;” in PATH lookups on Windows systems.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://go.dev/doc/go1.19&#34;&gt;Go 1.19 Release Notes - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;標準パッケージのソースコード &lt;code&gt;os/exec/lp_windows.go&lt;/code&gt; を眺めると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// LookPath searches for an executable named file in the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// directories named by the PATH environment variable.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// LookPath also uses PATHEXT environment variable to match
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// a suitable candidate.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// If file contains a slash, it is tried directly and the PATH is not consulted.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Otherwise, on success, the result is an absolute path.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// In older versions of Go, LookPath could return a path relative to the current directory.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// As of Go 1.19, LookPath will instead return that path along with an error satisfying
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// errors.Is(err, ErrDot). See the package documentation for more details.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LookPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;`PATHEXT`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ToLower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.exe&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.bat&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ContainsAny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`:\/`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findExecutable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// On Windows, creating the NoDefaultCurrentDirectoryInExePath
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// environment variable (with any value or no value!) signals that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// path lookups should skip the current directory.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// In theory we are supposed to call NeedCurrentDirectoryForExePathW
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// &amp;#34;as the registry location of this environment variable can change&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// but that seems exceedingly unlikely: it would break all users who
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// have configured their environment this way!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// https://docs.microsoft.com/en-us/windows/win32/api/processenv/nf-processenv-needcurrentdirectoryforexepathw
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// See also go.dev/issue/43947.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;dotf&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NoDefaultCurrentDirectoryInExePath&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findExecutable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;godebug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;execerrdot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;dotf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ErrDot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Getenv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SplitList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findExecutable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;c1&#34;&gt;// https://go.dev/issue/53536: if we resolved a relative path implicitly,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// and it is the same executable that would be resolved from the explicit %PATH%,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// prefer the explicit name for the executable (and, likely, no error) instead
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// of the equivalent implicit name with ErrDot.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// Otherwise, return the ErrDot for the implicit path as soon as we find
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// out that the explicit one doesn&amp;#39;t match.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;nx&#34;&gt;dotfi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotfiErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Lstat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dotf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nx&#34;&gt;fi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fiErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Lstat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotfiErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fiErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SameFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dotfi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filepath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;IsAbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;godebug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;execerrdot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ErrDot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dotErr&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ErrNotFound&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;NoDefaultCurrentDirectoryInExePath&lt;/code&gt; 環境変数がない場合だけカレントディレクトリ &lt;code&gt;.&lt;/code&gt; を付加してチェックしているのが分かる。
ご苦労さんなことである。&lt;/p&gt;
&lt;p&gt;やっぱ Windows は面倒くさいな（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20201107-lookpath-by-golang&#34;&gt;Go でサブプロセスを起動する際は LookPath に気をつけろ！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/safeexec-packge/&#34;&gt;github.com/cli/safeexec パッケージを使った外部コマンドの安全な起動&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>クラウドストレージのアカウント情報がクラウドストレージにある罠</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/07/midsummer-horror/" />
		<id>tag:text.Baldanders.info,2022-07-29:/remark/2022/07/midsummer-horror/</id>
		<published>2022-07-29T11:41:52+00:00</published>
		<updated>2022-07-29T12:11:51+00:00</updated>
		<summary>真夏のホラー</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;久しぶりにぞんぞがさばる（出雲弁）記事を見た。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2022/07/82884/&#34;&gt;ある「パソコンの大先生」の死 – WirelessWire News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;今回のお題&lt;/h2&gt;
&lt;p&gt;今回の条件は割とありがちではないだろうか。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows パソコン1台のみ&lt;/li&gt;
&lt;li&gt;パスワード管理ツールあり
&lt;ul&gt;
&lt;li&gt;ただし Windows 専用プロプライエタリ・ツール&lt;/li&gt;
&lt;li&gt;パスワード情報はクラウド・ストレージにバックアップあり&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ローカル NAS はなし&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;この唯一のパソコンが故障して復旧不能となった場合にどうなるかという話。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;しかし、そのフリーウェアはWindows用のプロプライエタリソフトウエアのため、ワタシのスマホではデータを閲覧できません。それに気付いたのは、スマホで新しいPCを購入する手続きを進め、最後にクレジットカードの会員向けサービスのパスワードを聞かれ、途方に暮れたときです。これでは新しいPCが調達できないじゃないか！&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://wirelesswire.jp/2022/07/82884/&#34;&gt;ある「パソコンの大先生」の死&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ぞんぞがさばる！&lt;/p&gt;
&lt;h2&gt;NAS とクラウドストレージ&lt;/h2&gt;
&lt;p&gt;最近は「クラウドストレージがあるならローカルの NAS とかいらなくね？」という向きも多いようだ。&lt;/p&gt;
&lt;p&gt;でもクラウドストレージにアクセスするためにはアカウント情報が必要で，更に多要素認証を使うのであればその分だけ認証手段を確保しておく必要がある。
それをどこに保持しておくか。&lt;/p&gt;
&lt;p&gt;個人的にはローカルに NAS を置いておくのはまだ意味があると思う。
もっと言えばローカル NAS とクラウドストレージを連携できるならなおよし。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/10/nas/&#34;&gt;秋 NAS は俺に喰わせろ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私もクラウドストレージは機密保持の観点からはあまり信用してない。
個人向けのクラウドストレージ・サービスの多くは他者と情報共有しやすいよう設計されているため「うっかり漏洩」してしまう可能性も排除できない。
法人向けならユーザごとに細かく権限を設定できるので逆に安心なんだけどね。&lt;/p&gt;
&lt;p&gt;そういう意味じゃ信用してないのはクラウドサービスではなくて自分自身か（笑）&lt;/p&gt;
&lt;p&gt;まぁ，クラウドストレージは「バックアップ用」と割り切って sensitive な情報については置かないようにするか暗号化するのがいいんだろうね。&lt;/p&gt;
&lt;h2&gt;マルチプラットフォームは重要&lt;/h2&gt;
&lt;p&gt;今回のもうひとつのポイントはパスワード管理ツールが Windows 専用だったことだろう。
プロプライエタリなツールであることは今回のケースでは問題ではない。&lt;/p&gt;
&lt;p&gt;最近はセキュリティ企業も独自のパスワード管理ツールを出しているが，これがもし特定 OS 専用なら考え直したほうがいいかもしれない（実際のところは知らない）。&lt;/p&gt;
&lt;p&gt;私は昔から &lt;a href=&#34;https://keepass.info/&#34; title=&#34;KeePass Password Safe&#34;&gt;KeePass&lt;/a&gt; 派なのだが，最近は派生ツールである &lt;a href=&#34;https://keepassxc.org/&#34; title=&#34;KeePassXC Password Manager&#34;&gt;KeePassXC&lt;/a&gt; および Android 版の &lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&#34; title=&#34;Keepass2Android Password Safe - Apps on Google Play&#34;&gt;Keepass2Android&lt;/a&gt; を愛用している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;KeePassXC Password Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/keepassxreboot/keepassxc&#34;&gt;GitHub - keepassxreboot/keepassxc: KeePassXC is a cross-platform community-driven port of the Windows application “Keepass Password Safe”.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&amp;amp;hl=en_US&amp;amp;gl=JP&#34;&gt;Keepass2Android Password Safe - Apps on Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;パスワードを紙に書くのは案外悪くない&lt;/h2&gt;
&lt;p&gt;（特に同居人が居る場合は）管理に気を使う必要はあるが，パスワード情報を紙に書き出すというのは案外悪くないと思っている。
もちろん全て書き出す必要はなくて，いざというときに最低限必要な情報のみに厳選する。&lt;/p&gt;
&lt;p&gt;私の自宅環境はパソコン（Linux 機），NAS，スマホの3機構成でこれらが同時に使えなくなる事態は真面目に考えてなかったのだが，今回の記事を読んで，考えを改めた。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
起こる可能性のあることは，いつか実際に起こる（If it can happen, it will happen）
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;マーフィーの法則&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;作業記録は大事&lt;/h2&gt;
&lt;p&gt;上述のようにパスワードを紙に書き出すとしても，どのアカウント情報を書き出すべきかはよくよく検討しないといけない。
その一環としてスマホやパソコンのセットアップ時の作業記録を録っておくことをおすすめする。&lt;/p&gt;
&lt;p&gt;以下はスマホの機種変更した際の作業記録の概要。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/changing-smartphone/&#34;&gt;ついカッとなって機種変した，反省はしない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それを見れば必要な情報が分かるはず。
Android 機のセットアップには Google アカウントが絶対に必要とか。&lt;/p&gt;
&lt;p&gt;今回の記事を書かれた yomoyomo さんにはご愁傷さまとしか言いようがないが，私としてはこれを好機として自宅環境を見直すとしようか。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0855LMP81?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31Jy8IwFHwL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0855LMP81?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Synology NASキット 2ベイ DS220j クアッドコアCPU 512MBメモリ搭載 ライトユーザー向け 国内正規代理店品 電話サポート対応品 DiskStation&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Synology (Release 2020-03-12)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B0855LMP81 (ASIN), 4537694279369 (EAN), 0846504003440 (EAN), 846504003440 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.dospara.co.jp/&#34;&gt;ドスパラ&lt;/a&gt;で HDD 2基と3点セットで購入。家庭内 LAN で使うなら必要十分な性能。各種クラウド・ストレージ・サービスと連携可能。 Tailscale を含む各種 VPN と組み合わせることも可能。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-10-26&#34;&gt;2021-10-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Synology DS220j --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08V8LNR2H?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41&amp;#43;wOkdJItL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08V8LNR2H?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Western Digital ウエスタンデジタル 内蔵 HDD WD Red Plus NAS RAID (CMR) 3.5インチ WD40EFZX-EC 【国内正規代理店品】&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ウエスタンデジタル(Western Digital) (Release 2021-02-05)&lt;/dd&gt;
    &lt;dd&gt;Personal Computers&lt;/dd&gt;
    &lt;dd&gt;B08V8LNR2H (ASIN), 4988755057738 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://www.synology.com/ja-jp/products/DS220j&#34;&gt;Synology DS220j&lt;/a&gt; と併せて購入。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-10-26&#34;&gt;2021-10-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- HDD WD Red Plus --&gt;
</content>
	</entry><entry>
		<title>「俺が正義だ！」</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/01/mining-codes/" />
		<id>tag:text.Baldanders.info,2022-01-22:/remark/2022/01/mining-codes/</id>
		<published>2022-01-22T04:24:25+00:00</published>
		<updated>2022-01-22T23:14:33+00:00</updated>
		<summary>今回の判決文はなかなか面白いので，特に職業エンジニアの方は読んでおくことをおすすめする。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/28-stories/#gray&#34; title=&#34;サイトオーナーがページの広告掲載の代わりにマイニング・コードを仕込むのはヤクザの「みかじめ料」と同じ&#34;&gt;4年前&lt;/a&gt;にもちょろんと言及しているので，今回も一応言及しておこう。&lt;/p&gt;
&lt;p&gt;例の裁判は最高裁による最終判断が出たようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.courts.go.jp/app/hanrei_jp/detail2?id=90869&#34;&gt;令和2(あ)457 不正指令電磁的記録保管被告事件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.courts.go.jp/app/files/hanrei_jp/869/090869_hanrei.pdf&#34;&gt;判決文 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coinhive が提供する mining code による計算資源搾取は，当時は大騒ぎになったが，今ではブラウザ自身が拒否できるようになった（どこまで効くかは分からないけどw）。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./firefox-settings.png&#34;&gt;&lt;img src=&#34;./firefox-settings.png&#34; srcset=&#34;./firefox-settings.png 676w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Firefox のセキュリティ設定例&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./firefox-settings.png&#34;&gt;Firefox のセキュリティ設定例&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;今は「&lt;a href=&#34;https://ascii.jp/elem/000/004/070/4070140/&#34; title=&#34;ASCII.jp：ネットワークに特化したIPUのMount Evansでシェア拡大を狙うインテル　インテル CPUロードマップ (1/3)&#34;&gt;インフラ処理でCPUを使ったら負け&lt;/a&gt;」などと言われる時代である。
それだけ CPU/GPU 計算資源は価値が高いのだ。
もちろん，それを駆動する&lt;a href=&#34;https://nextmoney.jp/?p=46494&#34; title=&#34;ロシアとウクライナが違法なマイニング施設を閉鎖| NEXTMONEY｜仮想通貨メディア&#34;&gt;電力&lt;/a&gt;もね。&lt;/p&gt;
&lt;p&gt;一方で，こう言っちゃあなんだが，日本は法治国家ではなく，刑罰に於ける法執行は基本的に「見せしめ主義」だ。
何故なら全国民や全法人に対して法を厳密に執行したら罪人や違反者で溢れかえってしまうから。
故に「&lt;a href=&#34;https://dic.nicovideo.jp/a/%E3%83%90%E3%83%AC%E3%81%AA%E3%81%8D%E3%82%83%E7%8A%AF%E7%BD%AA%E3%81%98%E3%82%83%E3%81%AA%E3%81%84%E3%82%93%E3%81%A7%E3%81%99%E3%82%88&#34;&gt;バレなきゃ犯罪じゃないんですよ&lt;/a&gt;」みたいな名言も生み出すことになる（笑）&lt;/p&gt;
&lt;p&gt;しかも日本人は何故か「&lt;ruby&gt;&lt;rb&gt;私刑&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ざまぁ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」に寛容で，積極的に行う輩すらいる野蛮国家である。
日本の法システムは壊れていると言ってもいいかもしれない。&lt;/p&gt;
&lt;p&gt;今回の裁判は最高裁判決文の以下の文言に集約されていると言ってもいいだろう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;原判決は，不正指令電磁的記録の解釈を誤り，その該当性を判断する際に考慮すべき事情を適切に考慮しなかったため，重大な事実誤認をしたものというべきであり，これらが判決に影響を及ぼすことは明らかであって，原判決を破棄しなければ著しく正義に反すると認められる&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.courts.go.jp/app/files/hanrei_jp/869/090869_hanrei.pdf&#34;&gt;判決文&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ここで「原判決」というのは二審の有罪判決を指すが，遠回しに警察の所業も指していると解釈している。
どこぞのガンダムよろしく「俺が正義だ！」とばかりに法解釈を歪めて相手を陥れるというのは，勧善懲悪な時代劇ならスカッとするかもしれないが，リアルでやったら恐怖政治そのものだ。&lt;/p&gt;
&lt;p&gt;個人的には今回の最高裁判決文は妥当なものと納得している。
その上で改めて「&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/28-stories/#gray&#34;&gt;サイトオーナーがページの広告掲載の代わりにマイニング・コードを仕込むのはヤクザの「みかじめ料」と同じ&lt;/a&gt;」であると主張しておこう。&lt;/p&gt;
&lt;ruby&gt;&lt;rb&gt;閑話休題&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;それはさておき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;
&lt;p&gt;今回の&lt;span&gt;&lt;a href=&#34;https://www.courts.go.jp/app/files/hanrei_jp/869/090869_hanrei.pdf&#34;&gt;判決文 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; はなかなか面白いので，特に職業エンジニアの方は読んでおくことをおすすめする。&lt;/p&gt;
&lt;p&gt;今回の最高裁判決文のポイント（判示事項）は2つあるそうで&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;刑法１６８条の２第１項にいう「その意図に沿うべき動作をさせず，又はその意図に反する動作をさせるべき不正な指令を与える電磁的記録」に当たるか否かの判断方法&lt;/li&gt;
&lt;li&gt;ウェブサイトの閲覧者の同意を得ることなくその電子計算機を使用して仮想通貨のマイニングを行わせるプログラムコードが不正指令電磁的記録に当たらないとされた事例&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.courts.go.jp/app/hanrei_jp/detail2?id=90869&#34;&gt;令和2(あ)457 不正指令電磁的記録保管被告事件&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この中の「意図に反する動作」と「不正な指令」がキーワードになっているのが分かるだろう。
この2つについて判決文には&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;p&gt;すなわち，反意図性は，当該プログラムについて&lt;strong&gt;一般の使用者が認識すべき動作と実際の動作が異なる場合&lt;/strong&gt;に肯定されるものと解するのが相当であり，一般の使用者が認識すべき動作の認定に当たっては，当該プログラムの動作の内容に加え，プログラムに付された名称，動作に関する説明の内容，想定される当該プログラムの利用方法等を考慮する必要がある。&lt;/p&gt;
&lt;p&gt;また，不正性は，電子計算機による情報処理に対する社会一般の信頼を保護し，&lt;strong&gt;電子計算機の社会的機能を保護するという観点から，社会的に許容し得ないプログラム&lt;/strong&gt;について肯定されるものと解するのが相当であり，その判断に当たっては，当該プログラムの動作の内容に加え，その動作が電子計算機の機能や電子計算機による情報処理に与える影響の有無・程度，当該プログラムの利用方法等を考慮する必要がある。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.courts.go.jp/app/files/hanrei_jp/869/090869_hanrei.pdf&#34;&gt;判決文&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;（強調は私がやりました）&lt;/p&gt;
&lt;p&gt;とアンダーライン付きで記されている（大事なことらしい）。
これを踏まえて&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;本件プログラムコードは，反意図性は認められるが，不正性は認められないため，不正指令電磁的記録とは認められない&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.courts.go.jp/app/files/hanrei_jp/869/090869_hanrei.pdf&#34;&gt;判決文&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;となったわけだ。
「反意図性」だけでは「不正指令電磁的記録」の要件を満たさないということだろう。
例えば，プログラムのバグや脆弱性を指して，いちいち「不正指令電磁的記録」などと訴訟を起こされては堪らないからな。&lt;/p&gt;
&lt;p&gt;実際，4年前に Coinhive の mining code が登場した当初から，これを malware (malicious software) と見なすかどうかには戸惑いがあった。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;しかし、現実としてはトレンドマイクロのウイルスバスターはCoinhiveをブロックしている。CoinhiveのJavaScriptが埋め込まれたWebサイトにアクセスすると、警告メッセージを表示してスクリプトの実行を止める。シマンテックなどほかのベンダーのセキュリティソフトも同様だ。&lt;br&gt;
マルウエアには当たらないが、好ましくない動作を行う可能性がある「グレーウエア」に分類されているためだ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/column/14/346926/110801194/&#34;&gt;FinTech？マルウエア？無断でスマホCPU使う謎のサービス&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;もっとも今ではウイルス対策ツールにすら mining code が仕込まれる有様だけどね（笑）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://krebsonsecurity.com/2022/01/norton-360-now-comes-with-a-cryptominer/&#34;&gt;Norton 360 Now Comes With a Cryptominer – Krebs on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitaltrends.com/computing/no-easy-way-to-uninstall-norton-crypto/&#34;&gt;Once Opted Into Norton Crypto, You Can&amp;rsquo;t Easily Uninstall | Digital Trends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theregister.com/2022/01/05/norton_360_cryptominer_deletion/&#34;&gt;Yes, Norton 360 has a built in cryptominer. Deletion is easy • The Register&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2022/01/nortons-antivirus-product-now-includes-an-ethereum-miner.html&#34;&gt;Norton’s Antivirus Product Now Includes an Ethereum Miner - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回の最高裁判決文を読む限り「不正性」の証明はなかなかに難しい印象を受ける。
今後もこの境界を巡って法的な議論があるだろうが，&lt;ruby&gt;&lt;rb&gt;独善&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;孤独な正義&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;を振りかざして真っ当なエンジニアを陥れるのは勘弁していただきたいところである。&lt;/p&gt;
&lt;p&gt;一方で私は，エンジニアは「善を実装する者」であると認識している。
なにを以って「善」とするかは難しいところだが，この一点に於いて「&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/hacker-ethic/&#34;&gt;エンジニアこそ『狂狷の徒』たれ&lt;/a&gt;」と思うのである。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;理学は、真理の探究であり、工学は善の実現である。そして、藝術は美の表現である－－これで所謂「真美善」が揃う&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4344980158?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;はやぶさ―不死身の探査機と宇宙研の物語&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;おあとがよろしいようで &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;&amp;#x1f647;&lt;/abbr&gt;&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bengo4.com/c_1009/n_14033/&#34;&gt;コインハイブ事件の有罪判決、破棄自判で「無罪」に　最高裁 - 弁護士ドットコム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hillelwayne.com/post/are-we-really-engineers/&#34;&gt;Are We Really Engineers? • Hillel Wayne&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01ESA9R5Q?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51N0NM5gtrL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01ESA9R5Q?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;機動戦士ガンダム00　ファーストシーズン&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;宮野真守 (出演), 三木眞一郎 (出演), 吉野裕行 (出演), 神谷浩史 (出演), 本名陽子 (出演), 松本保典 (出演), 真堂圭 (出演), 高垣彩陽 (出演), 佐藤有世 (出演), 東地宏樹 (出演), 我妻正崇 (出演), 中村悠一 (出演), 浜田賢二 (出演), 入野自由 (出演), 斎藤千和 (出演), 恒松あゆみ (出演), 石塚運昇 (出演), 小笠原亜里沙 (出演), 藤原啓治 (出演), 古谷徹 (出演), 水島精二 (監督), --- (プロデュース)&lt;/dd&gt;
    &lt;dd&gt; (Release 2016-04-28)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B01ESA9R5Q (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「俺がガンダムだ」&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-01-22&#34;&gt;2022-01-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 機動戦士ガンダム00 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07K356C43?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ENgxWO4IL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07K356C43?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Another colony&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;TRUE (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;Lantis 2018-11-07 (Release 2018-11-07)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B07K356C43 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「転生したらスライムだった件」第1期 ED 曲。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-01-22&#34;&gt;2022-01-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 転スラ Another Colony --&gt;
</content>
	</entry><entry>
		<title>CC Licenses を悪用した新手の著作権トロルについて</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2022/01/new-copyright-trolls/" />
		<id>tag:text.Baldanders.info,2022-01-05:/remark/2022/01/new-copyright-trolls/</id>
		<published>2022-01-05T12:23:50+00:00</published>
		<updated>2022-02-11T10:22:15+00:00</updated>
		<summary>このリスクを事前に回避したいのであれば「クレジットを明記する」に限る。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;いつものように yomoyomo さんの記事から：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://onezero.medium.com/beware-the-copyleft-trolls-a8b85c66b7eb&#34;&gt;Beware the Copyleft Trolls | by Chip Stewart | OneZero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3844180&#34;&gt;Rise of the Copyleft Trolls: When Photographers Sue After Creative Commons Licenses Go Awry by Daxton Stewart :: SSRN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220105/copyleft-trolls&#34;&gt;著作権トロールの新種としての「コピーレフト・トロール」 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この記事に Twitter で脊髄反射したときは内容を誤解してたので，改めて簡単に紹介しておく。&lt;/p&gt;
&lt;p&gt;現在，最新の CC Licenses 4.0 では，ライセンスの被許諾者が条件に違反した場合の措置について以下のように書いている。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;p id=&#34;s6&#34;&gt;&lt;strong&gt;第6条　期間および終了&lt;/strong&gt;&lt;/p&gt;
&lt;ol type=&#34;a&#34;&gt;
&lt;li id=&#34;s6a&#34;&gt;本パブリック・ライセンスは、ここでライセンスされた著作権およびそれに類する権利が有効な期間、適用されます。しかし、もしあなたが本パブリック・ライセンスに違反すると、本パブリック・ライセンスに定めるあなたの権利は自動的に終了します。&lt;/li&gt;
&lt;li id=&#34;s6b&#34;&gt;
&lt;p&gt;ライセンス対象物をあなたが利用する権利が&lt;a href=&#34;#s6a&#34;&gt;第6条(a)&lt;/a&gt;の事由により終了した場合でも：&lt;/p&gt;
&lt;ol&gt;
&lt;li id=&#34;s6b1&#34;&gt;あなたが違反を発見してから30日以内に違反を是正した場合に限り、違反を是正したその日に、自動的に復活します。または、&lt;/li&gt;
&lt;li id=&#34;s6b2&#34;&gt;許諾者により権利の復活を明示された場合に、復活します。&lt;/li&gt;
&lt;/ol&gt;
誤解を避けるために記すと、&lt;a href=&#34;#s6b&#34;&gt;本第6条(b)&lt;/a&gt;は、許諾者が、あなたの本パブリック・ライセンスに関する違反に対する救済を求めるために有するであろういかなる権利にも影響を及ぼしません。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/4.0/legalcode.ja&#34;&gt;クリエイティブ・コモンズ (Creative Commons) — 表示 4.0 国際 — CC BY 4.0&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この30日の猶予期間は 4.0 になってから付加されたもので，それより前のバージョンには書かれていない。
たとえば，写真共有サービスの &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; では公開した写真に CC Licenses を付与できるが，そのバージョンは 2.0 であり “Termination” の条項には以下のように書かれているのみだ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;7. Termination&lt;/strong&gt; &lt;/p&gt;
&lt;ol type=&#34;a&#34;&gt;
&lt;li&gt;
This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Derivative Works or Collective Works from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/legalcode&#34;&gt;Creative Commons Legal Code -- Attribution 2.0&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;いわゆる「著作権トロル」はバージョン間のこの差異を悪用して善良でうっかりな利用者から金を巻き上げているらしい。
具体的には&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;I became interested in this topic because it happened to me — or at least, to people I try to help, the students in the non-profit online news publication here at my university. A student posted a stock image from a German photographer named Marco Verch that was under a CC-BY (version 2.0) license. They used it as a thumbnail to link to a news story without the attribution. Months later, they got a demand letter requesting $750 to retroactively license the photo, ending with the line, “failure to resolve this matter of unlicensed use within 21 days will result in escalation to one of our partner attorneys for legal proceedings.”&lt;/p&gt;
&lt;p&gt;I checked and, indeed, Verch had filed dozens of lawsuits in U.S. federal courts in recent years, including 41 cases in 2019 and 2020 alone. He employed Pixsy, a company that aids photographers in extracting cash from users who posted their photos online. Pixsy, in the demand letter, noted that taking the photo down or correcting the attribution wasn’t enough: “Removal of the image from your website does not resolve the period of unlicensed use, and it remains that our client be compensated for the previous use of their work.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://onezero.medium.com/beware-the-copyleft-trolls-a8b85c66b7eb&#34;&gt;Beware the Copyleft Trolls&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という感じ。
訴えられてからクレジットを追記したり該当の写真を削除しても「掲載した期間の損害分を払いやがれ！」と迫るわけだ。&lt;/p&gt;
&lt;p&gt;ただ，実際に裁判まで行っても賠償金を払うとは限らないようで&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Courts are also suggesting that Philpot doesn’t suffer economic harm because his photos have no value outside of litigation; he once testified that he had made “tens of thousands of dollars” from his Willie Nelson photo, but admitted that it was entirely from “settlements he had extracted” for failing to attribute under the CC-BY license. As Western District of Texas Judge Andrew Austin noted in a 2019 case, Philpot “is more in the business of litigation (or threatening litigation) than selling his product or licensing his photograph to third parties” who “seems to want to use the courts as a blunt object with which to coerce nuisance value settlements from unsuspecting parties.”&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://onezero.medium.com/beware-the-copyleft-trolls-a8b85c66b7eb&#34;&gt;Beware the Copyleft Trolls&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれている。
公正な利用（fair use）として回避できるものもあるということだ。
“his photos have no value outside of litigation” の部分でバカウケしてしまったよ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;In the paper, I look at three issues in particular: (1) expansive fair use arguments courts are entertaining to make copyright litigation harder for copyleft trolls like Philpot; (2) the limited damages courts are awarding in these cases; and (3) the general distaste they express for this kind of litigation. In short, courts are finding “transformative purposes” by secondary users (instead of “transformative uses”) under the first factor of the fair use analysis, and they are finding little to no economic harm under the fourth factor, expressing skepticism that lack of attribution is the equivalent of financial loss, thus requiring Philpot and his ilk to make a more robust showing on the record of actual economic harm outside of nuisance lawsuits. Courts are also pushing back at automatic awards of attorney fees when Philpot has won his infringement lawsuits, finding enough merit in defendants’ fair use claims that they do not want to deter such arguments in the future.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://onezero.medium.com/beware-the-copyleft-trolls-a8b85c66b7eb&#34;&gt;Beware the Copyleft Trolls&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;このリスクを事前に回避したいのであれば「クレジットを明記する」に限る。
もしクレジットを書く余白がないのであればクレジットが明記されている URI を指示するだけでもいい。
たとえば &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; なら写真が掲載されているページに全ての情報が表示されている。&lt;/p&gt;
&lt;p&gt;あとは SaaS の運営者側がとっとと 4.0 にアップグレードしてくれることを祈る。
今回は「写真」だったけど，たとえば Wikipedia 上のコンテンツにだって同様のリスクがある。
Wikipedia の内容をそのままパクって論文に掲載している学生は多そうだ（笑）&lt;/p&gt;
&lt;p&gt;yomoyomo さんも&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20220105/copyleft-trolls&#34; title=&#34;著作権トロールの新種としての「コピーレフト・トロール」 - YAMDAS現更新履歴&#34;&gt;苦言&lt;/a&gt;を呈しておられるが “Copyleft Trolls” という言い回しは止めたほうがいいんじゃないかなぁ。
キャッチーな名前が横滑りして元々の意味が乖離してしまう現象にはウンザリである。
たとえば&lt;a href=&#34;https://community.norton.com/en/blogs/product-service-announcements/introducing-norton-crypto&#34; title=&#34;Introducing Norton Crypto! | Norton Community&#34;&gt;ノートン先生まで Crypto を某デジタル資産の意味で使い始めてる&lt;/a&gt;みたいで，ホンマ &lt;code&gt;orz&lt;/code&gt; な気分だよ。&lt;/p&gt;
&lt;h2&gt;余談だが&amp;hellip;&lt;/h2&gt;
&lt;p&gt;私が勘違いしたのは CC Licenses 1.0 から 2.0 あたりで議論になったいわゆる「Creative Commons 実施権」である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;http://k.lenz.name/j/r/CC.pdf&#34;&gt;著作権と Creative Commons 実施権 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただし，これはライセンスの（被許諾者ではなく）許諾者側のリスクの話。
ちなみに「Creative Commons 実施権」に絡む条項は 4.0 ではまるっと削除されている。
また日本版 2.1 にも存在しない。&lt;/p&gt;
&lt;p&gt;いやぁ，私の英語不得手っぷりがまたもや露呈してしまいましたねぇ。
とほほ&amp;hellip;&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://doctorow.medium.com/a-bug-in-early-creative-commons-licenses-has-enabled-a-new-breed-of-superpredator-5f6360713299&#34;&gt;A Bug in Early Creative Commons Licenses Has Enabled a New Breed of Superpredator | by Cory Doctorow | Jan, 2022 | Medium&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/cc-licenses/&#34;&gt;改訂3版： CC Licenses について&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2015/cc-by-sa-4-now-one-way-compatible-with-gplv3/&#34;&gt;CC BY-SA 4.0 now one-way compatible with GPLv3&lt;/a&gt; : CC Licenses のうち GNU GPL (copyleft) と互換であると認められているのは BY-SA 4.0 のみである&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/475710152X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41WPNBY7HZL._SL160_.jpg&#34; width=&#34;110&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/475710152X?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;クリエイティブ・コモンズ―デジタル時代の知的財産権&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;レッシグ,ローレンス (著), 敬士, 椙山 (著), 圭介, 上村 (著), 紘一郎, 林 (著), 絵美, 若槻 (著), 大洋, 土屋 (著), クリエイティブコモンズジャパン (編集), Lessig,Lawrence (原著)&lt;/dd&gt;
    &lt;dd&gt;NTT出版 2005-03-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;475710152X (ASIN), 9784757101524 (EAN), 475710152X (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;残念ながら紙の本は実質的に絶版なんですよねぇ。是非デジタル化を希望します。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-02&#34;&gt;2014-08-02&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- クリエイティブ・コモンズ―デジタル時代の知的財産権 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4641243336?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51LanI5bgAL._SL160_.jpg&#34; width=&#34;117&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4641243336?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;著作権法 第3版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;中山 信弘 (著)&lt;/dd&gt;
    &lt;dd&gt;有斐閣 2020-09-04&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4641243336 (ASIN), 9784641243330 (EAN), 4641243336 (ISBN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;第3版が出てた。第2版は図書館で借りて読んだが，途中でギブアップした。個人が興味本位で読める本ではないらしい（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-10-12&#34;&gt;2020-10-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 著作権法 第3版 --&gt;
</content>
	</entry><entry>
		<title>安全なデジタルライフのために</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/11/securing-our-digital-life/" />
		<id>tag:text.Baldanders.info,2021-11-14:/remark/2021/11/securing-our-digital-life/</id>
		<published>2021-11-14T07:12:34+00:00</published>
		<updated>2021-11-21T04:44:47+00:00</updated>
		<summary>例によって Bruce Schneier 先生の記事経由なのだが，なかなか面白かったので，かいつまんで紹介してみる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;例によって &lt;a href=&#34;https://www.schneier.com/blog/archives/2021/11/advice-for-personal-digital-security.html&#34; title=&#34;Advice for Personal Digital Security - Schneier on Security&#34;&gt;Bruce Schneier 先生の記事&lt;/a&gt;経由なのだが，なかなか面白かったので，かいつまんで紹介してみる。&lt;/p&gt;
&lt;p&gt;ちなみに私は「安心」を主観評価，「安全」を量的評価として区別している。
この記事では項目を列挙するだけに留めているが，本来はこの先に「量的評価」が存在する，という点を踏まえて読んでいただければ幸いである。
リスクは系全体で最小となるよう配分すべきである。&lt;/p&gt;
&lt;h2&gt;携帯端末について&lt;/h2&gt;
&lt;p&gt;まずは前半の記事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;携帯端末は常に紛失・盗難のリスクがつきまとう。
紛失・盗難が起きないよう気をつけることはもちろんだが，万一そうなった場合でも最小限の被害で済むよう備えておく必要がある。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;First, if you’re not at home, you should always lock your device before you put it down, no exceptions. Your phone should be locked with the most secure method you’re comfortable with—as long as it’s not a 4-digit PIN, which isn’t exactly useless but is definitely adjacent to uselessness. For better security, use a password or a passcode that’s at least six characters long—and preferably longer. If you’re using facial recognition or a fingerprint unlock on your phone, this shouldn’t be too inconvenient&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;きょうび PIN コードは6桁なんよねー。
携帯端末のアンロックが6桁なのに，いまだ銀行 ATM の暗証番号が4桁なのは何故だろう（笑）&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Second, set your device to require a password immediately after it’s been locked. Delays mean someone who snatches your phone can get to your data if they bring up the screen in time&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;えっ，最近のケータイってそんな要らん機能があるの？ 困るなぁ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Additionally, make sure your device is set to erase its contents after 10 bad password attempts at maximum. This is especially important if you haven’t set a longer passcode&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これは，そうだね。
心配なら&lt;a href=&#34;https://text.baldanders.info/remark/2021/10/glossary-about-face/&#34; title=&#34;「顔」に関する用語集&#34;&gt;顔認識（facial recognition）&lt;/a&gt;や指紋を使ったアンロックを普段使いにする手もある。&lt;/p&gt;
&lt;p&gt;端末の紛失・盗難に備えてバックアップもしとけよ，って話だが&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Also, regularly back up your phone. The safest way to back up data if you’re concerned about privacy is an encrypted backup to your personal computer; however, most iOS device owners can back up their data to iCloud with confidence that it is end-to-end encrypted (as long as they have iOS 13 or later)&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書いてあるけど &lt;a href=&#34;https://text.baldanders.info/remark/2021/08/apples-mass-surveillance-plans/&#34; title=&#34;Apple 監視社会化計画（裏口を穿つ）&#34;&gt;iCloud へのバックアップは（プライバシー的には）安全とは言えない&lt;/a&gt;からね。
私みたいに &lt;a href=&#34;https://text.baldanders.info/remark/2021/10/nas/&#34; title=&#34;秋 NAS は俺に喰わせろ！&#34;&gt;NAS 経由でクラウド・ストレージとの間でデータ暗号化&lt;/a&gt;する手もあるが&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，あまり一般的じゃないよねぇ。
一番いいのは，メールにせよ写真にせよ動画にせよ，プライバシー的にヤバいものはケータイで扱わないことやね。
その上でクラウド・ストレージなりにバックアップしましょう，と。&lt;/p&gt;
&lt;p&gt;携帯端末の OS を最新にしましょうという話。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Along the same lines, make sure you have installed the most recent version of the phone OS available to prevent someone from taking advantage of known security bypasses&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これに続いて &lt;q lang=&#34;en&#34;&gt;For iOS, this is generally simple&lt;/q&gt; とあるが，私は OS のアップデートを渋る iPhone ユーザを結構知っている。
Apple は機能追加や変更のついでみたいにセキュリティ・アップデートを行うが，これによって端末動作に不具合が起きることがままあるからだ。
まぁ Android の場合はキャリアや端末機器メーカーがアップデートを渋る場合があるので，さらに質が悪いのだが（笑） セキュリティ・リスクを減らすために OS を最新に保ってほしいのなら，ユーザがそのように行動するよう工夫すべきだと思うけどね。&lt;/p&gt;
&lt;p&gt;これはいわゆる「野良アプリ」かな。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Side-loaded apps can also lead to security issues. Never side-load an app from an untrusted source or allow an iOS app that requires a “profile” to be installed on your device if the app isn’t one you’ve created or one provided to you by your employer’s mobile device management (MDM) platform&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まぁ，これはそのとおり。
そして，こっちはアプリの「権限」の話。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;To mitigate such vulnerabilities via apps, regularly review the permissions that applications request from the device. […] Avoid apps with sketchy permission asks, and deny anything that seems like overreach—like when Facebook Messenger asks to be your SMS client and then logs all your phone calls to your Facebook account so it can find “friends” for you more efficiently. (Also, for the love of God, don’t use Facebook Messenger.) And if there are apps that you don’t use, delete them&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Facebook Messenger めった切りだな（笑） まぁ，私は随分前に Facebook Messenger は捨てたけど。&lt;/p&gt;
&lt;p&gt;次は， Wi-Fi や Bluetooth を点けっぱにすんなって話。ちょっと長いけど重要なのでそのまま挙げておく。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Besides issues that arise from questionable app behavior, mobile devices can be vulnerable through normal functions like Wi-Fi or Bluetooth. Consider turning off Wi-Fi when you’re away from home. Your device may otherwise be constantly polling for the network SSIDs in its history to reconnect automatically or to connect to anything that looks like a carrier’s Wi-Fi network. When this happens, your device gives away information about networks you’ve seen and might allow a hostile network access point to connect. Also, your phone&amp;rsquo;s Wi-Fi MAC address could be used to fingerprint your device and track it. (Apple randomizes the MAC address of its iOS devices’ Wi-Fi adapters while scanning for networks—but if your home Wi-Fi network’s name is particularly memorable, that may not matter.) When your phone tells you to turn on Wi-Fi to improve location accuracy, ignore it.&lt;/p&gt;
&lt;p&gt;The same goes for Bluetooth. If your device has Bluetooth turned on, it’s broadcasting information that could identify it—and you. (I have demonstrated this to journalism classes by calling out students&amp;rsquo; names that I picked out from the default names of their iPhones.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これ，分かってるけどつい忘れちゃうんだよねぇ。
本当は移動中にワイヤレスのヘッドセットを付けるのも止めたほうがいいんだろうけど。&lt;/p&gt;
&lt;h2&gt;パソコンとか&lt;/h2&gt;
&lt;p&gt;パソコン OS や Web ブラウザの最新化は言わずもがなだろう。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;I have found several common themes when things go wrong; the biggest is that malware protection is frequently not up to date or, worse, is disabled. Even allowing Windows Defender to run in the background provides a significant bump in protection over nothing, and disabling it without a very good reason is a very bad idea&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最低でも Windows Defender は有効にしておけ，ってことやね。&lt;/p&gt;
&lt;p&gt;このあと具体的な脅威が列挙されているが，それは本文を見てもらうとして&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;The basic fixes for these threats are straightforward but require some behavior modification. And one of the easiest behaviors to modify is how we browse the web. We need to treat this the same way we would a walk home in the dark—with extra, active attention to our surroundings&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と続く。
面倒な時代になったよねぇ。
Web ブラウジングについては以下のような緩和措置もある。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Another helpful trick for keeping laptops safe is using a privacy browser plugin such as the &lt;a href=&#34;https://privacybadger.org/&#34;&gt;EFF’s Privacy Badger&lt;/a&gt; and being very selective about which sites are allowed to use tracking cookies. This will reduce the threat of &lt;a href=&#34;https://news.sophos.com/en-us/2020/09/09/faking-it-the-thriving-business-of-fake-alert-web-scams/&#34;&gt;malicious ads&lt;/a&gt;&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://privacybadger.org/&#34;&gt;Privacy Badger&lt;/a&gt; 自体は昔からあるようで，以下の記事でも紹介されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gizmodo.jp/2020/09/untracking-browser-extensions.html&#34;&gt;監視されているウェブ閲覧の足跡、ブラウザ拡張機能で対策を | ギズモード・ジャパン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3425&#34;&gt;Doxxing（晒し）からあなたを守るための手引き | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;単純な広告ブロックではない点がポイントかな。
んー， Android 端末の Firefox でしばらく使ってみようかな。&lt;/p&gt;
&lt;p&gt;そして更に以下に続く。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Another easy way to minimize threats to your PC, first and foremost, is running the most recent fully updated version of the operating system of your choice. I’m not going to advocate for any particular flavor of operating system here, but if you’re on an older release of any OS and connected to the Internet, you’re increasing your risk of compromise. Turn on automatic updates and leave them on. When an update is pending, stop what you’re doing and install it immediately. Yes, this can often be inconvenient. Welcome to the modern world of malware. Suck it up and install your updates or risk compromise. (This applies to your web browser, too—stop putting off that Chrome update prompt and do it right now.)&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;今世紀に入って可用性（availablity）へのインパクトがセキュリティ・リスクとして取り上げられるようになって，迂闊に「すぐに更新しろ」とか言えなくなってしまったが，個人で使ってる携帯端末やパソコンは&lt;strong&gt;可及的速やかに&lt;/strong&gt;更新するという考え方でいいだろう。
アップデートは計画的に。&lt;/p&gt;
&lt;p&gt;パソコンも携帯端末と同じようにちゃんとパスワードロックしておけよ，という話。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Just as a phone’s solid unlock password prevents data theft, the same is true of enabling password or PIN protection on your notebook computer for sleep mode. When traveling in high-risk areas like airports, power-down your computer when it’s not in use so that the risk of someone playing “&lt;a href=&#34;https://en.wikipedia.org/wiki/Evil_maid_attack&#34;&gt;Evil Maid&lt;/a&gt;” or surreptitiously gaining access in some other physical way is reduced&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;“&lt;a href=&#34;https://en.wikipedia.org/wiki/Evil_maid_attack&#34;&gt;Evil maid attack&lt;/a&gt;” なんてな名前があるのか。
知らんかった（笑）&lt;/p&gt;
&lt;p&gt;パスワード・マネージャについても言及されている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;And, finally, use a password manager. An easy-to-guess password renders all other security efforts moot. Whether it’s a password built into your web browser of choice or a standalone program, use one. Chrome, Firefox, and Safari all have reasonably secure password managers, and you can replicate passwords for web accounts across devices. If you don’t like the idea of a password manager because you’re one of those folks who just uses letmein123! as your password everywhere, you need to decide if the convenience is worth the price you’ll eventually pay when you’re compromised. (Spoiler alert: it’s not.)&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/features/2021/10/securing-your-digital-life-part-1/&#34;&gt;Securing your digital life, part one: The basics&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この辺は改めて言うことはない。
「&lt;a href=&#34;https://baldanders.info/blog/000739/&#34; title=&#34;「パスワードを覚える」なんて脳みその無駄遣い — Baldanders.info&#34;&gt;パスワードを覚えるなんて脳みその無駄遣い&lt;/a&gt;」である。&lt;/p&gt;
&lt;h2&gt;情報管理の Best Practices&lt;/h2&gt;
&lt;p&gt;それでは後半の記事を見てみよう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/10/securing-your-digital-life-part-2/&#34;&gt;Securing your digital life, part two: The bigger picture—and special circumstances | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最初のほうでは “These are some best practices to consider” として箇条書されている。
見出しだけ抜き出して番号をつけてみよう。&lt;/p&gt;
&lt;div lang=&#34;en&#34;&gt;&lt;ol&gt;
&lt;li&gt;Use a password manager that generates strong passwords you don’t have to remember.&lt;/li&gt;
&lt;li&gt;When possible, use two-factor or multi-factor authentication (&amp;ldquo;2FA&amp;rdquo; or &amp;ldquo;MFA&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Set up a separate email address or email alias for your high-value web accounts so that all email regarding them is segmented off from your usual email address.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re a US resident, make sure to &lt;a href=&#34;https://www.irs.gov/payments/view-your-tax-account&#34;&gt;claim an account for your Social Security number&lt;/a&gt; from the IRS for tax information access and other purposes.&lt;/li&gt;
&lt;li&gt;Register for account breach checkups, either through the service provided through your browser (Firefox or Chrome) or through Troy Hunt’s &lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;haveIbeenpwned.com&lt;/a&gt; (or both!).&lt;/li&gt;
&lt;li&gt;Consider locking your credit reports to reduce identity theft risks.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;4番目は分かりにくいが，以下の記事が参考になるかも知れない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://krebsonsecurity.com/2018/06/plant-your-flag-mark-your-territory/&#34;&gt;Plant Your Flag, Mark Your Territory —  Krebs on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;つまり，なりすましなどに遭う前に「旗を立て」て証明しろというわけだ。
日本で類似の話としては JP の「e転居」を悪用した事例がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2020/07/17/174628&#34;&gt;日本郵便のe転居を悪用したストーカー事件についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まぁ，これは「e転居」の仕組みが ad hoc 過ぎるのが問題だと思うが。&lt;/p&gt;
&lt;p&gt;これで連想するのが日本の「個人番号カード」だ。
今はあまり表面化してないが，日本政府が無駄にを推進しようとしているせいで今後「個人番号カード」そのものがセキュリティ・リスクになると思う。&lt;/p&gt;
&lt;p&gt;今からでも「個人番号カード」を取得しようという人は「とっとと手続きしなはれ」と言えばいいが，特に年寄りは「個人番号カードなんか分からんし使いこなせん」と思う人もいると思う。
私は役所に「絶対に個人番号カードを発行しない」手続きを行える仕組みを提案したい。&lt;/p&gt;
&lt;h2&gt;2要素認証で不十分なとき&lt;/h2&gt;
&lt;p&gt;“When 2FA is not enough” については似た話を&lt;a href=&#34;https://text.baldanders.info/remark/2021/11/out-of-band-devices/&#34; title=&#34;それはワンタイム・パスワードの問題ではない&#34;&gt;先日書いた&lt;/a&gt;ので，今回は割愛する。&lt;/p&gt;
&lt;h2&gt;公衆への暴露&lt;/h2&gt;
&lt;p&gt;標的型攻撃の（文字通り）ターゲットにならないようにするには個人活動の露出を抑える必要がある。
これも箇条書きにして抜き出しておこう。&lt;/p&gt;
&lt;div lang=&#34;en&#34;&gt;&lt;ol&gt;
&lt;li&gt;don’t post unredacted pictures of driver&amp;rsquo;s licenses, vaccination cards, credit cards, passports, or other documents with PII on social media.&lt;/li&gt;
&lt;li&gt;Lock down access to your social media accounts with 2FA and unique, strong passwords to prevent &amp;ldquo;brute force&amp;rdquo; breaches and &amp;ldquo;password reuse&amp;rdquo; hacks.&lt;/li&gt;
&lt;li&gt;On Facebook, set the default privacy for posts to “friends only.&amp;quot;&lt;/li&gt;
&lt;li&gt;Do not use “precise location” information on posts that can be used to locate you in realtime.&lt;/li&gt;
&lt;li&gt;Don’t post pictures with your home address or other identifying information about your residence clearly visible.&lt;/li&gt;
&lt;li&gt;Don’t drop personal email addresses or phone numbers into public online conversations.&lt;/li&gt;
&lt;li&gt;Don’t allow dating apps, ride-sharing apps, or any other apps that use your location data to collect that data while you’re not actively using them.&lt;/li&gt;
&lt;li&gt;If you are sending your location to someone in one of these apps, make sure it is a public place and that a friend or family member is in sight of that location, or at least knows to check in with you shortly after the appointed meeting time.&lt;/li&gt;
&lt;li&gt;Never take a conversation in one app over to another—say, from a dating app to WhatsApp—before you’ve met a person in person and feel safe.&lt;/li&gt;
&lt;li&gt;Be aware of links sent in Facebook Messenger and of friend requests claiming to be from people you already know—but coming from new accounts.&lt;/li&gt;
&lt;li&gt;Don’t download and run anything from Discord without a malware scan.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;実はこのあとオチがあって&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Or, instead of trying to follow all these suggestions, you could mitigate this entire category of risks by never using social media again&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/10/securing-your-digital-life-part-2/&#34;&gt;Securing your digital life, part two: The bigger picture—and special circumstances&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と結んでいる。
いや，まぁ，それはそうだけどさ（笑）&lt;/p&gt;
&lt;h2&gt;特殊ケース&lt;/h2&gt;
&lt;p&gt;最後に “Special cases” として VPN (Virtual Private Network) や暗号化コミュニケーションについて以下のように述べている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;But for everyday Internetting, you just don’t need VPNs that much anymore. Transport Layer Security now encrypts a vast majority of Internet traffic, and it’s unlikely that someone is going to grab your credit card data or other personal information off a public Wi-Fi network.&lt;/p&gt;
&lt;p&gt;The same is true of the Tor protocol for anonymizing Internet traffic—odds are you won’t need it daily, but there are times when it’s good to have. Tor and VPNs are most useful when you&amp;rsquo;re outside of your home and on a potentially hostile network (or on the Internet in a potentially hostile country).&lt;/p&gt;
&lt;p&gt;You’ll also want Tor or a VPN in situations where you’re on a network that has a TLS proxy that breaks traditional HTTPS encryption by using proxy certificates to decrypt traffic in the middle. At least in those scenarios, the worst that can happen is you can’t get an outbound connection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/10/securing-your-digital-life-part-2/&#34;&gt;Securing your digital life, part two: The bigger picture—and special circumstances&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;For encrypted and verified communications with another specific person, &lt;a href=&#34;https://signal.org/en/&#34;&gt;Signal&lt;/a&gt; is the current standard—it’s cross-platform and doesn’t even have an option for unencrypted storage or transmission of text and voice. Lesser-known platforms such as &lt;a href=&#34;https://keybase.io/&#34;&gt;Keybase&lt;/a&gt; and &lt;a href=&#34;https://wire.com/&#34;&gt;Wire&lt;/a&gt; offer encrypted text communications as well, but a full discussion of encrypted voice and text communications is a subject for another time&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/10/securing-your-digital-life-part-2/&#34;&gt;Securing your digital life, part two: The bigger picture—and special circumstances&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ところで，最後の “Peanut Butter Sandwich Anonymization Protocol” ちうのが分からんのだが，どなたか教えてください。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;p&gt;&lt;strong&gt;【2021-11-15 追記】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/atsushieno/status/1459971971299479556&#34;&gt;Twitter で教えてもらった&lt;/a&gt;が “Peanut Butter Sandwich Anonymization Protocol” ってのは以下の話のことらしい？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thrillist.com/news/nation/couple-arrested-after-spreading-us-navy-secrets-via-a-peanut-butter-sandwich&#34;&gt;Couple Arrested After Spreading U.S. Navy Secrets Via a Peanut Butter Sandwich - Thrillist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;情報感謝！&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;【あとで整理するかも】&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/11/securing-your-digital-life-part-3/&#34;&gt;Securing your digital life, part three: How smartphones make us vulnerable | Ars Technica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/11/securing-your-smartphone.html&#34;&gt;Securing Your Smartphone - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51T6PBdGbyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;超監視社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 池村 千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2016-12-13 (Release 2017-02-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01MZGVHOA (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 超監視社会 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;ちなみに Synology NAS の Cloud Sync は iCloud に対応してない。まぁ iCloud は可能な限り使わんことやね。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>それはワンタイム・パスワードの問題ではない</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/11/out-of-band-devices/" />
		<id>tag:text.Baldanders.info,2021-11-07:/remark/2021/11/out-of-band-devices/</id>
		<published>2021-11-07T09:28:00+00:00</published>
		<updated>2022-05-04T05:22:29+00:00</updated>
		<summary>道具は適切に組み合わせないと所定の性能を発揮できない。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;いやさ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2111/05/news052.html&#34;&gt;狙われるワンタイムパスワード、多要素認証を破る闇サービスが浮上：この頃、セキュリティ界隈で（1/2 ページ） - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;て酷い釣りタイトルだよな，と思いつつモニタにツッコんでしまったよ（笑）&lt;/p&gt;
&lt;p&gt;ハッキリ言おう。
それはワンタイム・パスワードの問題ではない。&lt;/p&gt;
&lt;p&gt;ワンタイム・パスワードに問題がないわけではない。
&lt;a href=&#34;https://pages.nist.gov/800-63-3/sp800-63b.html&#34; title=&#34;NIST Special Publication 800-63B&#34;&gt;NIST SP 800-63B&lt;/a&gt; によればスマホの TOTP アプリや専用のワンタイム・パスワード機器は「単要素 OTP デバイス（Single-Factor One-Time Password (OTP) Device）」と呼ばれる。
これはタイプとしては「知識」ではなく「所有」に分類される。
所有型の Authenticator には紛失・盗難のリスクが伴う。
また，基本的に OTP は認証する側とされる側との間で最初にシークレットを共有する必要があり（特にアプリでは）シークレットの受け渡しと管理の問題が発生するが，認証の段階でこのシークレットをやり取りすることはない。&lt;/p&gt;
&lt;p&gt;しかし，上の記事の「ワンタイムパスワード」はこれとは異なる。
SMS やチャット・アプリ等を通してサービスプロバイダから使い捨てシークレットを通知し，シークレットをもらったユーザは通知を受けたチャネルとは別のチャネル（大抵はスマホ・アプリかブラウザで表示される Web ページ）でシークレットを返す。
送ったシークレットと返ってきたシークレットを比較して認証を行うわけだ。
こうした仕組みは &lt;a href=&#34;https://pages.nist.gov/800-63-3/sp800-63b.html&#34; title=&#34;NIST Special Publication 800-63B&#34;&gt;NIST SP 800-63B&lt;/a&gt; の分類では「経路外デバイス（Out-of-Band Devices）」と呼ばれている。&lt;/p&gt;
&lt;p&gt;経路外デバイスが筋が悪いのは攻撃者から見て攻撃ポイントが多いことだ。
上の記事で示される事例はまさにそこを突かれて認証を突破されている。&lt;/p&gt;
&lt;p&gt;以前に拙文「&lt;a href=&#34;https://text.baldanders.info/remark/2020/09/authenticator-and-aal/&#34;&gt;Authenticator と AAL&lt;/a&gt;」で紹介したが，元々 NIST は SMS を使った認証を非推奨（または禁止）にするつもりだった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2016/07/25/nist-declares-the-age-of-sms-based-2-factor-authentication-over/&#34;&gt;SMSを使った二要素認証を非推奨〜禁止へ、米国立技術規格研究所NISTの新ガイダンス案 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;しかしその後，色々あったようで，最終的には “&lt;a href=&#34;https://pages.nist.gov/800-63-3/sp800-63b.html#restricted&#34;&gt;RESTRICTED Authenticator&lt;/a&gt;” という位置づけまで緩和されてしまった。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;The use of a RESTRICTED authenticator requires that the implementing organization assess, understand, and accept the risks associated with that RESTRICTED authenticator and acknowledge that risk will likely increase over time. It is the responsibility of the organization to determine the level of acceptable risk for their system(s) and associated data and to define any methods for mitigating excessive risks. If at any time the organization determines that the risk to any party is unacceptable, then that authenticator SHALL NOT be used&lt;/q&gt;.
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://pages.nist.gov/800-63-3/sp800-63b.html#restricted&#34;&gt;NIST Special Publication 800-63B&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;でも，結局その「温情措置」が重大なセキュリティ・インシデントを招いているのだから「なんだかなぁ」という感じである。
電子メールや VoIP が経路外デバイスとして NG なら SMS だって NG だろう。&lt;/p&gt;
&lt;p&gt;Authenticator による認証には3つのレベル（Authenticator Assurance Level; AAL）があるが，最初の記事の事例にあるような「&lt;a href=&#34;https://text.baldanders.info/remark/2018/12/crypto-assets/&#34; title=&#34;暗号資産」とやら&#34;&gt;暗号資産&lt;/a&gt;」を扱う重要な決済システムなら AAL3 は必須だろうし，そうであるなら認証手段として経路外デバイスを選択するのはあり得ない。
これは「闇」でも何でもなく，単にサービス・プロバイダが間抜けで迂闊だったというだけの話である。&lt;/p&gt;
&lt;p&gt;道具は適切に組み合わせないと所定の性能を発揮できない。
私達エンジニアはこのことを肝に銘じておくべきだし，利用者としても「利便性はセキュリティとトレードオフできない」ことは知っておくべきだろう。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757143044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/413qoSjODUL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757143044?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;信頼と裏切りの社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 山形 浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;NTT出版 2013-12-24&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4757143044 (ASIN), 9784757143043 (EAN), 4757143044 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;社会における「信頼」とは。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-11-28&#34;&gt;2015-11-28&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 信頼と裏切りの社会 --&gt;
</content>
	</entry><entry>
		<title>人の靭性</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/10/toughness-of-system/" />
		<id>tag:text.Baldanders.info,2021-10-23:/remark/2021/10/toughness-of-system/</id>
		<published>2021-10-23T10:43:26+00:00</published>
		<updated>2021-10-23T10:44:14+00:00</updated>
		<summary>本の紹介を兼ねてちょろんと書いておく。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Twitter での脊髄反射 tweet に微妙に反応があったみたいなので，本の紹介を兼ねてちょろんと書いておく。&lt;/p&gt;
&lt;p&gt;セキュリティ・システムにおける「&lt;ruby&gt;&lt;rb&gt;靭性&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;じんせい&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」への言及を見かけたのは我らが Bruce Schneier 先生の『&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;セキュリティはなぜやぶられたのか | ブルース・シュナイアー, 井口 耕二 |本 | 通販 | Amazon&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;』第9章である。
ちょっと引用してみよう。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;セキュリティシステムには障害がよくおきるので、障害の性質を理解することが大事である。硬直し剛性が高いシステムは悲惨な障害がおき、靭性が高くねばり強いシステムはうまく壊れていく。靭性の高いシステムは変化することができる。障害が一部にとどまったり、少しずつ劣化したりする。あるいは環境の変化に対応できる。自動化されたシステムは、基本的に剛性が高く、ひとつのことしかできない。部分的な障害や想定外の攻撃、新しい攻撃方法、ずるい攻撃者などに対応できないのだ。画一的や秘密に強く依存するシステムも剛性が高くなりがちで、その秘密が漏れると一気に潰れたりする&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;このように「システムの壊れ方」について 剛性⇔靭性 という対比で説明している。
具体例については書籍を見ていただきたいが，この説明の後，第10章「セキュリティの中心は人である」に続くわけだ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;システムを機能させるためには一部の人を信頼しなければならない。そのような人々—信頼を託される人々—は、セキュリティシステムの一部だといえる。重要な構成要素、いや要となる要素だといえるだろう。システムで最も靭性が高い部分であり、臨機応変の対応や即断即決ができる部分であり、攻撃者の存在を感じとる能力が最も高い部分だからだ。しかし一方、セキュリティシステムの構成要素として考えたとき、人間な両刃の剣である。居眠りもすれば気がそれることもある。だまされることもある。敵側に寝返ることさえある。すぐれたセキュリティシステムとするためには信頼を託す人の長所を活用するとともに、信用が乱用されない防止策を講じなければならない&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;「人はセキュリティの最弱点」とはよく言われるが，システムの 剛性⇔靭性 の対比で考えた場合は，人はセキュリティの最強点にもなり得る。
ある意味で最後の切り札（ace in the hole）と言ってもいいかも知れない。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;最近は、技術力でセキュリティ問題を解決できると信じ、技術によって人を減らそうという傾向がある […] しかし人を技術で置き換えると、人が持つ創造性や創意工夫、適応力が利用できなくなる。人間がすることに制限を加えすぎると、人は無気力となり、同じ状況が生まれる。技術側では、人とその行動を非現実的なほどに理想化してしまう傾向がある。人は同じことしかしない、するはずのことを必ずして、するはずのないことはしないと仮定してしまうのだ。しかし実際には、そんな一定の行動を人がするはずがない。同時に、そんな融通が利かないこともない。技術的な対策は剛性が高く、障害がおきると大変なことになることが多い&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;どうだ，耳が痛かろう（笑） これが2003年に（原書が）出版された本の内容だよ。&lt;/p&gt;
&lt;p&gt;Twitter でも書いたが，人の靭性を軽視すると，いったん破られたときに止める手段がなくなり class break を引き起こしやすい。
かといって人に依存しすぎて「運用でカバー」でも人が疲弊するだけだけど。
お互いが有機的に連携できる落とし所を探すのが「改善」というやつである。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/09/nist-sp-800-207-zero-trust-architecture/&#34;&gt;NIST SP 800-207: “Zero Trust Architecture”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51-pZ52JsUL._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4822283100?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;セキュリティはなぜやぶられたのか&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 井口 耕二 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;日経BP 2007-02-15&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;原書のタイトルが “&lt;a href=&#34;https://www.amazon.co.jp/dp/B000PY3NB4?tag=baldandersinf-22&amp;linkCode=ogi&amp;th=1&amp;psc=1&#34;&gt;Beyond Fear: Thinking Sensibly About Security in an Uncertain World&lt;/a&gt;” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-11&#34;&gt;2019-02-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- セキュリティはなぜやぶられたのか --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07ND6QTN4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51NHngUGOFL._SL160_.jpg&#34; width=&#34;103&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07ND6QTN4?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ＯＯＤＡ　ＬＯＯＰ（ウーダループ）―次世代の最強組織に進化する意思決定スキル&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;チェット リチャーズ (著), 原田 勉 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;東洋経済新報社 2019-02-22 (Release 2019-02-22)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07ND6QTN4 (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;買ったはいいが，実はまだ読んでない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-07-02&#34;&gt;2019-07-02&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- OODA LOOP --&gt;
</content>
	</entry><entry>
		<title>「顔」に関する用語集</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/10/glossary-about-face/" />
		<id>tag:text.Baldanders.info,2021-10-09:/remark/2021/10/glossary-about-face/</id>
		<published>2021-10-08T19:27:29+00:00</published>
		<updated>2021-10-09T01:54:17+00:00</updated>
		<summary>エンジニアの端くれとして用語をきちんと押さえておくことは重要</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://p2ptk.org/&#34; title=&#34;P2Pとかその辺のお話R | Sharing is Caring&#34;&gt;P2Ptk.org&lt;/a&gt; で面白い記事が翻訳されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/10/face-recognition-technology-commonly-used-terms&#34;&gt;Face Recognition Technology: Commonly Used Terms | Electronic Frontier Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3413&#34;&gt;顔認識テクノロジーの用語集 | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;エンジニアの端くれとして用語をきちんと押さえておくことは重要だと思うので，覚え書きとしてまとめておく。
各用語に関する（リスクを含む）詳しい解説は上述のリンク先か末尾のブックマークを参照のこと。&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;顔検出（&lt;span lang=&#34;en&#34;&gt;Face detection&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;画像の中に人間の顔が含まれているかどうかを判断する&lt;/dd&gt;
&lt;dt&gt;フェイスプリンティング（&lt;span lang=&#34;en&#34;&gt;Faceprinting&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔の特徴を分析し数学的表現（&lt;span lang=&#34;en&#34;&gt;mathematical representation&lt;/span&gt;）に変換すること&lt;/dd&gt;
&lt;dt&gt;顔認識（&lt;span lang=&#34;en&#34;&gt;Face recognition&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔照合および顔分析を含むフェイスプリントの収集・処理を指す。処理のための収集も含まれている点に注意&lt;/dd&gt;
&lt;dt&gt;顔照合（&lt;span lang=&#34;en&#34;&gt;Face matching&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔認識のひとつ。2つ以上のフェイスプリントを比較すること。具体的には顔識別，顔認証，フェイス・クラスタリング，フェイス・トラッキング等を指す。比較は単純な等値・等価性（equality）ではなく推論を含んでいる点に注意&lt;/dd&gt;
&lt;dt&gt;顔識別（&lt;span lang=&#34;en&#34;&gt;Face identification&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔照合のひとつ。未知の人物の単一のフェイスプリントと既知の人物のフェイスプリントのセットとの比較。比較結果は「確信度（&lt;span lang=&#34;en&#34;&gt;confidence&lt;/span&gt;）」として示されることが多い&lt;/dd&gt;
&lt;dt&gt;顔認証（&lt;span lang=&#34;en&#34;&gt;Face verification&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔照合のひとつ。認証を求める人物の単一のフェイスプリントと認証された人物のひとつまたは複数のフェイスプリントとの比較。個人の識別は必要条件ではないが，顔識別と組み合わせることは可能&lt;/dd&gt;
&lt;dt&gt;フェイス・クラスタリング（&lt;span lang=&#34;en&#34;&gt;Face clustering&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔照合のひとつ。画像コレクションに含まれる全ての人物のフェイスプリントを抽出・比較し，人物およびその集団をグループ化すること。個人の識別は必要条件ではないが，顔識別と組み合わせることは可能&lt;/dd&gt;
&lt;dt&gt;フェイス・トラッキング（&lt;span lang=&#34;en&#34;&gt;Face tracking&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔照合のひとつ。（複数の）監視カメラ等を使って物理空間における特定人物の移動をフェイスプリントを用いて追跡すること。個人の識別は必要条件ではないが，顔識別と組み合わせることは可能&lt;/dd&gt;
&lt;dt&gt;顔分析（&lt;span lang=&#34;en&#34;&gt;Face analysis&lt;/span&gt;） aka. 顔推論（&lt;span lang=&#34;en&#34;&gt;Face inference&lt;/span&gt;）&lt;/dt&gt;
&lt;dd&gt;顔認識のひとつ。特定の人物の分析・推論のためにフェイスプリントを抽出・利用すること。他のフェイスプリントとの直接的な比較は不要。例として対象の人物の人種・性別・感情・行動的特徴などの推論がある&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;セキュリティやプライバシーのリスクという観点で考えると「推論の実行は AI など機械が行うにしても，そのアルゴリズムには必ず『ヒト』の恣意が紛れ込む」という点が重要なんだろうね。&lt;/p&gt;
&lt;p&gt;大昔に生体情報が名寄せに使えると言ったら一笑に付されたものだが，いまや「顔」はそこら中に溢れかえり「オープンソース・インテリジェンス」の格好の情報源にもなっている。
しかもアルゴリズム次第で自分たちに都合のいいデータをいくらでも作り出せる。
見知らぬ誰かのプライバシーをでっち上げることさえ可能な時代なわけだ。
気ぃつけなはれや！&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/10/face-recognition-isnt-just-face-identification-and-verification&#34;&gt;Face Recognition Isn’t Just Face Identification and Verification: It’s Also Photo Clustering, Race Analysis, Real-time Tracking, and More | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3410&#34;&gt;顔認識技術の問題は“識別”と“認証”だけではない：写真クラスタリング、人種分析、リアルタイム追跡などなど…… | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/aboutface&#34;&gt;About Face | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/06/facial-recognition-system/&#34;&gt;「顔認識」に関するブックマーク&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51T6PBdGbyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;超監視社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 池村 千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2016-12-13 (Release 2017-02-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01MZGVHOA (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 超監視社会 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B093KFTV53?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/512tneLgY8S._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B093KFTV53?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;監視資本主義―人類の未来を賭けた闘い&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ショシャナ・ズボフ (著), 野中 香方子 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;東洋経済新報社 2021-06-25 (Release 2021-06-25)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B093KFTV53 (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;夏休みの課題図書として買ったが，全く読めてない orz&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-08-08&#34;&gt;2021-08-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 監視資本主義 --&gt;
</content>
	</entry><entry>
		<title>Apple 監視社会化計画（裏口を穿つ）</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/08/apples-mass-surveillance-plans/" />
		<id>tag:text.Baldanders.info,2021-08-22:/remark/2021/08/apples-mass-surveillance-plans/</id>
		<published>2021-08-22T03:47:46+00:00</published>
		<updated>2022-05-04T05:22:29+00:00</updated>
		<summary>この件が恐ろしいのは Apple が end-to-end 暗号通信の定義を都合よく書き換えている点だ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;毎度のことながら感度が低くてゴメンペコン。
起点は EFF のこの記事でいいかな。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/apples-plan-think-different-about-encryption-opens-backdoor-your-private-life&#34;&gt;Apple&amp;rsquo;s Plan to &amp;ldquo;Think Different&amp;rdquo; About Encryption Opens a Backdoor to Your Private Life | Electronic Frontier Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3329&#34;&gt;暗号化の「見方を変えた」Appleが監視社会へのバックドアを開く | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この件に関しては Bruce Schneier 先生も反応されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/08/apple-adds-a-backdoor-to-imesssage-and-icloud-storage.html&#34;&gt;Apple Adds a Backdoor to iMessage and iCloud Storage - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/08/apples-neuralhash-algorithm-has-been-reverse-engineered.html&#34;&gt;Apple’s NeuralHash Algorithm Has Been Reverse-Engineered - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/08/more-on-apples-iphone-backdoor.html&#34;&gt;More on Apple’s iPhone Backdoor - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この件が恐ろしいのは Apple が end-to-end 暗号通信の定義を都合よく書き換えている点だ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Does this break end-to-end encryption in Messages?&lt;/p&gt;
&lt;p&gt;No. This doesn’t change the privacy assurances of Messages, and Apple never gains access to communications as a result of this feature. Any user of Messages, including those with communication safety enabled, retains control over what is sent and to whom. &lt;strong&gt;If the feature is enabled for the child account, the device will evaluate images in Messages and present an intervention if the image is determined to be sexually explicit&lt;/strong&gt;. For accounts of children age 12 and under, parents can set up parental notifications which will be sent if the child confirms and sends or views an image that has been determined to be sexually explicit. None of the communications, image evaluation, interventions, or notifications are available to Apple.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.apple.com/child-safety/pdf/Expanded_Protections_for_Children_Frequently_Asked_Questions.pdf&#34;&gt;Expanded Protections for Children - Frequently Asked Questions v1.1&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;強調部分は私がやりました。
いや，それはもう “end-to-end encryption” じゃないから！ ある意味で（自製品に E2E 暗号機能を組み込もうとしない） Google よりも邪悪だよ。&lt;/p&gt;
&lt;p&gt;これだけ見ても Apple が個人のプライバシーに対して敵対的な企業であることが分かる。
こういうことをやらかす企業がいるから &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; や &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のような製品で自衛せざるを得ない。
まぁ，私は Apple 信者じゃないので Apple 製品を使うことはないけど GAFA はだいたい似たり寄ったりだからなぁ。&lt;/p&gt;
&lt;p&gt;ちうわけで，この件は注視しておこう。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.apple.com/child-safety/&#34;&gt;Child Safety - Apple&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/if-you-build-it-they-will-come-apple-has-opened-backdoor-increased-surveillance&#34;&gt;If You Build It, They Will Come: Apple Has Opened the Backdoor to Increased Surveillance and Censorship Around the World | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3334&#34;&gt;それを作れば彼らはやってくる：Appleが開く世界的な監視・検閲へのバックドア | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/speak-out-against-apples-mass-surveillance-plans&#34;&gt;Speak Out Against Apple’s Mass Surveillance Plans | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3340&#34;&gt;Appleの監視社会化計画にNOの声をあげよう | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/how-lgbtq-content-censored-under-guise-sexually-explicit&#34;&gt;How LGBTQ+ Content is Censored Under the Guise of &amp;ldquo;Sexually Explicit&amp;rdquo; | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3336&#34;&gt;「性的に露骨」と称して検閲されるLGBTQ+コンテンツ | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/eff-joins-global-coalition-asking-apple-ceo-tim-cook-stop-phone-scanning&#34;&gt;EFF Joins Global Coalition Asking Apple CEO Tim Cook to Stop Phone-Scanning | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://appleprivacyletter.com&#34;&gt;Apple Privacy Letter: An Open Letter Against Apple&amp;rsquo;s Privacy-Invasive Content Scanning Technology&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3349&#34;&gt;プライバシーを侵害するAppleのコンテンツスキャン技術に反対するオープンレター | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/apples-plan-scan-photos-messages-turns-young-people-privacy-pawns&#34;&gt;Apple’s Plan to Scan Photos in Messages Turns Young People Into Privacy Pawns | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3352&#34;&gt;子どものプライバシーを犠牲するAppleがもたらす悲劇 | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cdt.org/insights/outside-looking-in-approaches-to-content-moderation-in-end-to-end-encrypted-systems/&#34;&gt;Outside Looking In: Approaches to Content Moderation in End-to-End Encrypted Systems - Center for Democracy and Technology&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3354&#34;&gt;外側から見るということ：エンド・ツー・エンド暗号化システムにおけるコンテンツ・モデレーションのアプローチ | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.hackerfactor.com/blog/index.php?/archives/929-One-Bad-Apple.html&#34;&gt;One Bad Apple - The Hacker Factor Blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://9to5mac.com/2021/08/06/apple-internal-memo-icloud-photo-scanning-concerns/&#34;&gt;In internal memo, Apple addresses concerns around new Photo scanning features, doubles down on the need to protect children - 9to5Mac&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210806-apple-csam-icloud-photo-scan/&#34;&gt;AppleがiPhoneの写真やメッセージをスキャンして児童の性的搾取を防ぐと発表、電子フロンティア財団などから「ユーザーのセキュリティとプライバシーを損なう」という抗議の声も - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.google.com/document/d/1aBooqLlOuzIeKw5qCJgnAHrCli91c6x8SKCXjjiNsyY/edit&#34;&gt;国際的な連合は、アップル社にiPhone、iPad等製品への監視機能組み込み計画の中止を求める のコピー - Google ドキュメント&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/08/24/speak-out-against-apple-surveillance/&#34;&gt;電子フロンティア財団が「アップルの大規模な監視計画に反対」と声明発表、請願書への署名を呼びかけ  |  TechCrunch Japan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.theverge.com/22648265/apple-employee-privacy-icloud-id&#34;&gt;Apple cares about privacy, unless you work at Apple - The Verge&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/11/apple-has-listened-and-will-retract-some-harmful-phone-scanning&#34;&gt;Apple Has Listened And Will Retract Some Harmful Phone-Scanning | Electronic Frontier Foundation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/privacy/3456&#34;&gt;Appleが子どものメッセージ監視計画を軌道修正、次はクラウド写真スキャンの中止を | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://techcrunch.com/2021/12/15/apple-removes-csam-detection-website/&#34;&gt;アップル、プライバシー保護の懸念を受けて児童性的虐待コンテンツへの言及をひっそり取り止め  |  TechCrunch Japan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/04/handling-privacy/&#34;&gt;誰がプライバシーを支配するのか&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/01/privacy/&#34;&gt;プライバシーなどク◯喰らえ&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51T6PBdGbyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;超監視社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 池村 千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2016-12-13 (Release 2017-02-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01MZGVHOA (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 超監視社会 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B093KFTV53?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/512tneLgY8S._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B093KFTV53?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;監視資本主義―人類の未来を賭けた闘い&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ショシャナ・ズボフ (著), 野中 香方子 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;東洋経済新報社 2021-06-25 (Release 2021-06-25)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B093KFTV53 (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;夏休みの課題図書として買ったが，全く読めてない orz&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-08-08&#34;&gt;2021-08-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 監視資本主義 --&gt;
</content>
	</entry><entry>
		<title>技術的負債と FOSS</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/07/technical-debt-and-foss/" />
		<id>tag:text.Baldanders.info,2021-07-26:/remark/2021/07/technical-debt-and-foss/</id>
		<published>2021-07-26T12:13:02+00:00</published>
		<updated>2022-05-04T05:22:29+00:00</updated>
		<summary>不完全でおｋ</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今回の戯れ言の起点はここから。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2021/07/18/the-end-of-open-source/&#34;&gt;The end of open source? – TechCrunch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210726/the-end-of-open-source&#34;&gt;オープンソースの終焉？ ではなく次代の（技術、ガバナンス）モデルに移るべきという話 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;発端は2021年春頃に発覚した話で，知っている人は知っていると思うが簡単に言うと，どこぞの大学関係者が論文のネタに Linux Kernel にわざと脆弱性を含むパッチを提供し，それがどのように解消されていくか（あるいはされないのか）を観察するという，なかなかに鬼畜なことをやらかしたらしい。&lt;/p&gt;
&lt;p&gt;私もこの話は知っていたが，あまり重視していなかった（&lt;a href=&#34;https://text.baldanders.info/bookmarks/&#34;&gt;ブックマーク&lt;/a&gt;にも入れてなかったし）。
いや，これって大学関係者がやらかしたから物珍しかっただけで&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，脆弱性のあるコードの混入自体は別に珍しくないだろ。
悪意や害意はないにしても Ubuntu の APT ベースで月に何回 Kernel を更新してるんだって話である。&lt;/p&gt;
&lt;p&gt;伽藍であれバザールであれ，隠された悪意や悪意なき害意を見つけるのは困難である。
こういうのは人的な統制をしても無駄で，結局はコードで証明していくしかない。
まぁ，昔に比べれば典型的なバグや脆弱性の検出についてはずいぶん楽になったけどね。&lt;/p&gt;
&lt;p&gt;大昔にソフトウェアを「&lt;a href=&#34;https://baldanders.info/spiegel/log/200511.html#d20_t1&#34;&gt;大量生産される一品もの&lt;/a&gt;」と評したことがある。
当時は XaaS とか考慮してなかったので当てはまらないことも多いと思うが，私は製品を作るときは「開発」と「製造」を分けるべきだと思っている。
何故ならそれぞれに要求される技術要素が異なるからだ。
でもソフトウェアはしばしば「開発」と「製造」が混濁する。&lt;/p&gt;
&lt;p&gt;Linux Kernel の場合は（営利企業を主体とする）ディストリビュータが「製造」で要求される品質を担保していると思っていたが，そういうわけでもないらしい。&lt;/p&gt;
&lt;p&gt;ところで，上の記事を見て連想したのが「技術的負債」というフレーズだ。
「技術的負債」については，同じく yomoyomo さんの記事が参考になる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20201210/technical-debt&#34;&gt;お前も技術的負債にしてやろうか！ もしくは技術的負債と和田卓人さんをめぐるシンクロニシティ - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「技術的負債」を，お金を前借りするように「より早く実現するために引き換えにするもの」とするなら， FOSS と「技術的負債」は本来は相性がいいと言える。
ただ，負債の清算（＝リファクタリング）が上手く回らないのであれば，何らかの見直しが必要だろう。
これは FOSS 全体というよりは個々の製品・サービス毎に考えるべきことだ。&lt;/p&gt;
&lt;p&gt;FOSS 最大の特徴は「&lt;em&gt;不完全でおｋ&lt;/em&gt;」という点だと思う。
不完全さを埋めようとする限り，その製品には伸びしろがある。
その変化のプロセスが重要なのである。&lt;/p&gt;
&lt;p&gt;さて，最初に挙げた記事では進化する「オープンソースへの脅威」への対応策として&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Limit the spread of monocultures. Stuff like Alva Linux and AWS’ Open Distribution of ElasticSearch are good, partly because they keep widely used FOSS solutions free and open source, but also because they inject technical diversity.&lt;/li&gt;
&lt;li&gt;Reevaluate project governance, organization and funding with an eye toward mitigating complete reliance on the human factor, as well as incentivizing for-profit companies to contribute their expertise and other resources. Most for-profit companies would be happy to contribute to open source because of its openness, and not despite it, but within many communities, this may require a culture change for existing contributors.&lt;/li&gt;
&lt;li&gt;Accelerate commodification by simplifying the stack and verifying the components. Push appropriate responsibility for security up into the application layers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://techcrunch.com/2021/07/18/the-end-of-open-source/&#34;&gt;The end of open source?&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;モノカルチャーの広がりを制限する。オープンソースであるというだけでなく、技術的多様性（technical diversity）の導入が重要&lt;/li&gt;
&lt;li&gt;プロジェクトのガバナンス、組織、資金を見直し、特定の人に完全に依存しないようにしながら、営利企業が専門知識などのリソースを提供する動機付けを行う&lt;/li&gt;
&lt;li&gt;スタックを単純化し、コンポーネントを検証してコモディティ化を促進。セキュリティ面のしかるべき責任をアプリケーション層に押し上げる&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210726/the-end-of-open-source&#34;&gt;オープンソースの終焉？ ではなく次代の（技術、ガバナンス）モデルに移るべきという話&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書かれているが FOSS 関係なくね？ yomoyomo さんも「タイトルはいくらなんでも釣り」と呆れているが，そのとーり（by 財津一郎）だと思う。
最後のやつとか，普通にアーキテクチャ設計の基本の話だよね。&lt;/p&gt;
&lt;p&gt;ちうわけで，そろそろ『&lt;a href=&#34;https://www.amazon.co.jp/dp/B07FSBHS2V?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;Clean Architecture　達人に学ぶソフトウェアの構造と設計 (アスキードワンゴ) | Ｒｏｂｅｒｔ Ｃ．Ｍａｒｔｉｎ, 角 征典, 高木 正弘 | 工学 | Kindleストア | Amazon&#34;&gt;Clean Architecture&lt;/a&gt;』の読書感想文を書かなあかんかなぁ，と思ったりする（予定は未定）。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://techcrunch.com/2021/07/18/the-end-of-open-source/&#34;&gt;【コラム】オープンソースの終焉が来ているのだろうか？  |  TechCrunch Japan&lt;/a&gt; : よーやく日本語記事が（笑）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://cruel.org/freeware/cathedral.html&#34;&gt;伽藍とバザール（The Cathedral and the Bazaar）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/12/technical-debt-and-hacker/&#34;&gt;技術的負債とハッカー&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考文献&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4309242456?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51KXSMMSTFL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4309242456?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;リナックスの革命 ― ハッカー倫理とネット社会の精神&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ペッカ ヒマネン (著), リーナス トーバルズ (著), マニュエル カステル (著), 安原 和見 (翻訳), 山形 浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;河出書房新社 2001-05-26&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4309242456 (ASIN), 9784309242453 (EAN), 4309242456 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;大昔に買ったんだけどうろ覚え。買い直そうかと思ったが邦訳は Kindle ではないのか。それにしても「リナックスの革命」とかいう頭の悪いタイトルはどうにかならなかったのだろうか。副題だけで十分ぢゃん。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-12-12&#34;&gt;2020-12-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- リナックスの革命 Hacker Ethic --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07FSBHS2V?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51mQrYTahJL._SL160_.jpg&#34; width=&#34;121&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07FSBHS2V?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Clean Architecture　達人に学ぶソフトウェアの構造と設計 (アスキードワンゴ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Ｒｏｂｅｒｔ Ｃ．Ｍａｒｔｉｎ (著), 角 征典 (著), 高木 正弘 (著)&lt;/dd&gt;
    &lt;dd&gt;ドワンゴ 2018-08-01 (Release 2018-08-01)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07FSBHS2V (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実務に即効性のある技術解説書というわけではないが，ものの「考え方」を示す本としてはよく出来ている。ソフトウェア技術史の読み物としても面白い。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-03&#34;&gt;2021-04-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Clean Architecture --&gt;
&lt;!-- eof --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;今回の話を聞いて私はむしろ「ありがち」と思ったよ。大学が「善」なわけない。真理に善悪はないのだから。たとえば1990年代の米国暗号シーンに於いて大学は何をしてたのかってことだし，もっと言うと，ゼロ年代の Winny 狂躁は（お上による弾圧のほうがクローズアップされるが）明らかに「余計なこと」で，日本はアレで P2P に関して周回遅れになったし，日本企業が「リモートワーク」に及び腰なのはゼロ年代のこの悪夢が尾を引いてるよね。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
