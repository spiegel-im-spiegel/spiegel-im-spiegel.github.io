<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of certification - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/certification/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/certification/index.xml" />
	<id>tag:text.Baldanders.info,2020-01-25:/tags</id>
	<updated>2020-01-25T16:46:13+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Go 1.13.7 リリース予告と CVE-2020-0601</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/01/pre-announcement-of-go-1_13_7/" />
		<id>tag:text.Baldanders.info,2020-01-25:/remark/2020/01/pre-announcement-of-go-1_13_7/</id>
		<published>2020-01-25T07:46:13+00:00</published>
		<updated>2020-01-25T07:52:06+00:00</updated>
		<summary>来週1月28日（日本時間では1月29日かな）に Go 1.13.7 のリリースがあるようだ（予定は未定）。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;来週1月28日（日本時間では1月29日かな）に &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.13.7 のリリースがあるようだ（予定は未定）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/-sdUB4VEQkA&#34;&gt;[security] Go 1.12.16 and Go 1.13.7 pre-announcement - Google group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.13.7 にはセキュリティ・アップデートが含まれる。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;These are minor releases that include two security fixes.
One &lt;a href=&#34;https://golang.org/cl/215905&#34;&gt;mitigates the CVE-2020-0601 certificate verification bypass&lt;/a&gt; on Windows.
The other affects only 32-bit architectures&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/-sdUB4VEQkA&#34;&gt;Go 1.12.16 and Go 1.13.7 pre-announcement&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-0601&#34;&gt;CVE-2020-0601&lt;/a&gt; は Windows CryptoAPI の不備で楕円曲線暗号（ECC）を使った証明書の検証がバイパスされてしまうというもの。
これによって証明書の偽装ができてしまう。
あとは分かるね。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0601&#34;&gt;CVE-2020-0601 | Windows CryptoAPI Spoofing Vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CVSSv3 の評価は以下の通り。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;深刻度は 8.1 (重要)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;ただし，この脆弱性は1月の Windows Update で修正されている筈である。
つか，私はもう関係ないので完全にスルーしていた（笑）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msrc-blog.microsoft.com/2020/01/14/january-2020-security-updates-cve-2020-0601/&#34;&gt;January 2020 Security Updates: CVE-2020-0601 - Microsoft Security Response Center&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回の &lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-0601&#34;&gt;CVE-2020-0601&lt;/a&gt; の特徴は NSA が絡んでいる点である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://media.defense.gov/2020/Jan/14/2002234275/-1/-1/0/CSA-WINDOWS-10-CRYPT-LIB-20190114.PDF&#34;&gt;Patch Critical Cryptographic Vulnerability in Microsoft Windows Clients and Servers &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NSA の思惑は分からない。
しかし&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;She did not answer when asked how long ago the NSA discovered the vulnerability. She said that this is not the first time the NSA sent Microsoft a vulnerability to fix, but it was the first time it has publicly taken credit for the discovery&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/01/critical_window.html&#34;&gt;Critical Windows Vulnerability Discovered by NSA - Schneier on Security&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とある通り（どこぞの馬鹿メディアが言ってたみたいな）別に NSA の「お手柄」でもなんでもなく，政治的な思惑があって色々と天秤にかけた結果「公表」したということだろう。
まっ，国家の諜報機関なのだから当たり前だが（笑）&lt;/p&gt;
&lt;p&gt;というわけで，自前で防衛手段を持つというのは悪い話ではない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/01/critical_window.html&#34;&gt;Critical Windows Vulnerability Discovered by NSA - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1229173.html&#34;&gt;Windowsの暗号化機能に致命的な脆弱性、証明書偽装の恐れ ～米国家安全保障局が警告 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015SAFU42?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51Xgkj7WNdL._SL160_.jpg&#34; width=&#34;120&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015SAFU42?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;イミテーション・ゲーム／エニグマと天才数学者の秘密(字幕版)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ベネディクト・カンバーバッチ (出演), キーラ・ナイトレイ (出演), マシュー・グード (出演), ロリー・キニア (出演), モルテン・ティルドゥム (監督), グラハム・ムーア (Writer)&lt;/dd&gt;
    &lt;dd&gt; (Release 2015-10-02)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B015SAFU42 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;主人公であるアラン・チューリングは今もなお「天才」と称される数学者であり，「コンピュータの父」と呼ばれるほどの偉人である。そしてチューリングの偉業のひとつが，旧ナチス・ドイツの暗号機械「エニグマ」の解読である。作品はそのエニグマの解読を主軸に物語を展開していく。感想は&lt;a href=&#34;https://baldanders.info/blog/000833/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-04-19&#34;&gt;2015-04-19&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- イミテーション・ゲーム --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;CVSSv3 では深刻度7.0以上なら速やかな対応が求められる。アップデートは計画的に（笑） &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>GnuPG 2.2.17 リリース： 公開鍵サーバ・アクセスに関する過激な変更あり</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/07/gnupg-2_2_17-is-released/" />
		<id>tag:text.Baldanders.info,2019-07-10:/release/2019/07/gnupg-2_2_17-is-released/</id>
		<published>2019-07-10T12:29:53+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>今回の変更で公開鍵サーバ上の公開鍵について付帯する電子署名は（自己署名を除いて）捨てられることになった。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;くっそー。
Gmail の野郎が &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; からのアナウンスを迷惑メールとして処理してくれやがったので気づくのが遅れた。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 のリリースである。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2019q3/000439.html&#34;&gt;[Announce] GnuPG 2.2.17 released to mitigate attacks on keyservers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先日紹介した「&lt;a href=&#34;https://text.baldanders.info/remark/2019/07/openpgp-certificate-flooding/&#34;&gt;OpenPGP 公開鍵サーバにおける公開鍵の汚染問題&lt;/a&gt;」を受けて公開鍵サーバからのインポートをかなり制限することにしたようだ。&lt;/p&gt;
&lt;p&gt;詳細はこちら。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;gpg: Ignore all key-signatures received from keyservers.  This change is required to mitigate a DoS due to keys flooded with faked key-signatures.  The old behaviour can be achieved by adding &lt;code&gt;keyserver-options no-self-sigs-only,no-import-clean&lt;/code&gt; to your &lt;code&gt;gpg.conf&lt;/code&gt;.  [#4607]&lt;/li&gt;
&lt;li&gt;gpg: If an imported keyblocks is too large to be stored in the keybox (&lt;code&gt;pubring.kbx&lt;/code&gt;) do not error out but fallback to an import using the options &amp;ldquo;&lt;code&gt;self-sigs-only,import-clean&lt;/code&gt;&amp;rdquo;.  [#4591]&lt;/li&gt;
&lt;li&gt;gpg: New command &lt;code&gt;--locate-external-key&lt;/code&gt; which can be used to refresh keys from the Web Key Directory or via other methods configured with &lt;code&gt;--auto-key-locate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;gpg: New import option &amp;ldquo;&lt;code&gt;self-sigs-only&lt;/code&gt;&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;gpg: In &lt;code&gt;--auto-key-retrieve&lt;/code&gt; prefer WKD over keyservers.  [#4595]&lt;/li&gt;
&lt;li&gt;dirmngr: Support the &amp;ldquo;&lt;code&gt;openpgpkey&lt;/code&gt;&amp;rdquo; subdomain feature from &lt;code&gt;draft-koch-openpgp-webkey-service-07&lt;/code&gt;. [#4590].&lt;/li&gt;
&lt;li&gt;dirmngr: Add an exception for the &amp;ldquo;&lt;code&gt;openpgpkey&lt;/code&gt;&amp;rdquo; subdomain to the CSRF protection.  [#4603]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix endless loop due to http errors 503 and 504.  [#4600]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix TLS bug during redirection of HKP requests.  [#4566]&lt;/li&gt;
&lt;li&gt;gpgconf: Fix a race condition when killing components.  [#4577]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Release-info: &lt;a href=&#34;https://dev.gnupg.org/T4606&#34;&gt;https://dev.gnupg.org/T4606&lt;/a&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2019q3/000439.html&#34;&gt;GnuPG 2.2.17 released to mitigate attacks on keyservers&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;今回の変更で公開鍵サーバ上の公開鍵について付帯する電子署名は（自己署名を除いて）捨てられることになった。
以前の動作に戻したければ &lt;code&gt;gpg.conf&lt;/code&gt; に以下のオプションを追加する。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;keyserver-options no-self-sigs-only,no-import-clean
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;しかし現時点でこれはおすすめできない。&lt;/p&gt;
&lt;p&gt;また公開鍵のインポートで &lt;code&gt;--self-sigs-only&lt;/code&gt; オプションが使えるようだ。
状況に応じて使い分けるといいだろう。&lt;/p&gt;
&lt;p&gt;ちなみに拙作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; を使って，公開鍵をインポートする前に鍵の構成をチェックできる。
v0.6.0 から公開鍵サーバ上の公開鍵を直接チェックできるようにしたので上手く使っていただけるとありがたい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gpgpdump-v0_6_0-is-released/&#34;&gt;gpgpdump v0.6.0 をリリースした&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;後半の WKD (Web Key Directory) は 2019-07-10 現在ドラフト08が出ている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-koch-openpgp-webkey-service-07&#34;&gt;OpenPGP Web Key Directory draft-koch-openpgp-webkey-service-07&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-koch-openpgp-webkey-service-08&#34;&gt;OpenPGP Web Key Directory draft-koch-openpgp-webkey-service-08&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回の一連を受けて標準化と実装が早まるかもしれない。
私もちょっと検討してみようかな。
OpenPGP のメーリングリストでも議論が行われているんだけどスルーしてたんだよなぁ。&lt;/p&gt;
&lt;p&gt;さて &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; が今回のバージョンをちゃんとリリースしてくれるといいんだけど。
しないのなら本気で私的ビルドを&lt;ruby&gt;&lt;rb&gt;検討&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;どげんか&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;せんといけんかもしれん。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>OpenPGP 公開鍵サーバにおける公開鍵の汚染問題</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/07/openpgp-certificate-flooding/" />
		<id>tag:text.Baldanders.info,2019-07-05:/remark/2019/07/openpgp-certificate-flooding/</id>
		<published>2019-07-05T14:46:33+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>新しい OpenPGP 公開鍵サーバや Autocrypt について調査したほうがいいかしらん。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;7pay のセキュリティ事故があまりにバカすぎるのでブログネタにしてやろうかと思っていたが，個人的にもっと重大な案件が出てきたので，先にこちらの話を書くことにする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139514/&#34;&gt;PGPのSKSキーサーバーネットワークへの証明書ポイズニング&amp;ndash;攻撃を受け開発者らが警鐘 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;かなりヤバいというか「ついにやっちゃったか」って感じの話なのだが，記事の後半に書かれている&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;キーサーバーはPGPと、PGPプロトコルにおけるユーザー認証の要となるコンポーネントだ&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139514/&#34;&gt;PGPのSKSキーサーバーネットワークへの証明書ポイズニング--攻撃を受け開発者らが警鐘&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;というのはかなり言い過ぎである。&lt;/p&gt;
&lt;p&gt;というのも，そもそも &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の元祖である &lt;a href=&#34;https://tools.ietf.org/html/rfc1991&#34; title=&#34;RFC 1991 - PGP Message Exchange Formats&#34;&gt;PGP&lt;/a&gt; は必ずしも公開鍵サーバを要件としていたわけではなく（&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4900900028/baldandersinf-22/&#34;&gt;PGP 本&lt;/a&gt;を読めば分かるが，当時はフロッピー運用とか当たり前の時代だった），後継である &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; においてもそのコンセプトが踏襲されているからだ。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル（web of trust; 信用の輪）については拙文ながら以下を参考にしてほしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この信用モデルの下では&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多くの電子署名が集まっていること&lt;/li&gt;
&lt;li&gt;同じ鍵が永続的に使われ続けていること&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が鍵の信用を高める条件となっている&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバにおいて鍵や署名の追記しかできないのにはちゃんと理由があるのだ。&lt;/p&gt;
&lt;p&gt;とは言え &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバが鍵運用において大きなウエイトを占めているのは間違いないことで，鍵の所有者が（電子署名や鍵そのものの削除を含めて）制御できないというのはちょっと，いやだいぶ困った事態となっているのも確かである。&lt;/p&gt;
&lt;p&gt;たとえば APT などのパッケージ管理ツールでは，パッケージへの電子署名に &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵を使うが，鍵のインポートの際に公開鍵サーバを利用するようだ。&lt;/p&gt;
&lt;p&gt;この前紹介した [Mono のインストール](https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/ &amp;ldquo;Ubuntu に Mono を導入する
&amp;ldquo;)でも&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;といった感じで鍵サーバから公開鍵をインポートしている&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;なので，鍵サーバに登録されている公開鍵が汚染されている（可能性がある）というのは拙いのである。&lt;/p&gt;
&lt;h2&gt;回避策1： &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使わない&lt;/h2&gt;
&lt;p&gt;今回のリスクを確実に回避したいのであれば &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使わないのが手っ取り早い。
以下のように，いったんテキストデータとして吐き出して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -a --export alice@example.com
-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBFofiskBCADjUvPHA3PNscg0K74/Uwxj46+oLsyIy7fYIp/4C4dHejcbbPjx
VFeic9wQ4aQFp3VKjYgONgQrRo/9p40Ei1+PtMAV7D6Oy6dxlV8zyCJcSf74ahpB
B15GyA7v4uvTf0Py+Ujyt241ik0fXeLEuwt7p4SIbgJnQs1Fb+61wo8UcCFOLJO5
An6HjXNgNs6fFoiTad+T4PfaTbRHLfFPkoqmDUKWy40hjWl+Ui0QborXH+PUeUm9
vgHbqZzS0QRDGI7rO9AeJ6LweBkP1A2qbDLyexS/F+WUEcY0b76IQM5XH0txwnnl
uCPYcQfIGWce3US1GWJhChF9s/bMGVXOEJbvABEBAAG0GUFsaWNlIDxhbGljZUBl
eGFtcGxlLmNvbT6JAVQEEwEIAD4CGwMFCwkIBwIGFQgJCgsCBBYCAwECHgECF4AW
IQR5/SuZ88YtLTuFC7yTs1CUdYINXQUCWh+LMAUJA8JnZwAKCRCTs1CUdYINXcKT
B/4tLFaPRe289GcX91yLJ/yPS0JvvJKyZzjpNqLbKHuQHPEqGromMGlP4LcaGdFL
rVZ36W3kVk+75q8JFkld0eRS22vftjz6lA9lyb3W9lU1CayF5s3IsC/Ehj55uaHc
OHnp6rl7zEeIdvca6yV0gwySs3j9VPHy58zNrpN/clHoB4Zozy6vCXFMShyLc/wF
brPySf/5LP/642Uro92M2lbkIvZpDhZCVG7s7Ilz3BzsTTNMPkPd5yvdGa5lHQzK
OmXHaxydOYbEWBgqRGqzEIIoLbEd8KHxJVIVDfcAQCjSWRUjAUSDLpBokGsKoQfp
41NjWwjkIsfyJ2tDUeRPGYRbuQENBFofiskBCACzyYfIB+/ZwJBJXw7WMDlEKdnz
L4abwVpw9rBGAWGXjaC/cu7l0svNilXyTgZNq4uKddJ6aYjs7of0SaBl20I8aj5G
nbw0pG+KkoYhfpZaAZc+bcb+6SprSbAsRhrZ810XNIBUMa8XWsUDn1uv70vGBWBv
keKZZ7FJ4kuQe0nTONmvQ4EwFekV+IXT5LwdgmPWF0QR7cO8jqeb6psHYauktuzZ
2ul4nMLmLLf/m4DwiCAbEdToBXqRA30KshtgBYYQwL1YkWYgknnAdhHyeu6ybJvv
Y57JYzotjFOlnFhtcGITESEWv+pnj0RJUUrlVwLkJhUOKMwL+sbhw0s5+m27ABEB
AAGJATwEGAEIACYCGwwWIQR5/SuZ88YtLTuFC7yTs1CUdYINXQUCWh+LhAUJA8Jn
uwAKCRCTs1CUdYINXXuvB/9IKK3SLgJ6lOc2Vq73rGYsrDqfjYt5rCDXhjIaFRE7
LYmFJcGL5CHJTae438XtAixa+mu6PYG28eknjZs58Cx/bSj9uS6NiLAPCgyTAtvg
ao6usECOm9Y0xf2+ZcZ9Uji+wsCAFmxRC9je0yUErVyuyQRqzNtdqytnszoTzvb9
iOP8sX/YNrjC83BtZ4Vg3fzAu8qvwbObgSbws5M8TBwIKd4WFTjOtSU6F8aioJ1g
mpfd8KGljHkzC0oG8l8fZiTNYqkIMbfyfPpVwsSqsysLKofifFT+mNs79DJdqNFO
HA2W4WzekYmWWmgK7J8kXHYkxUJA6VpSmNAKwUKqXbNV
=hneF
-----END PGP PUBLIC KEY BLOCK-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このテキストデータで運用すればいいのだ。&lt;/p&gt;
&lt;p&gt;たとえば私の公開鍵は&lt;a href=&#34;https://baldanders.info/pubkeys/&#34; title=&#34;OpenPGP 公開鍵リスト | Baldanders.info&#34;&gt;本家サイトで公開している&lt;/a&gt;が&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --fetch-keys https://baldanders.info/pubkeys/spiegel.asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば簡単に鍵束にインポートできる。&lt;/p&gt;
&lt;p&gt;メールの暗号化や署名検証については &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; のような仕組みを使えば鍵サーバを経由せずに鍵のやりとりができるらしい（実はよく知らない）。
ちなみに Thunderbird の &lt;a href=&#34;https://addons.thunderbird.net/thunderbird/addon/enigmail/&#34;&gt;Enigmail&lt;/a&gt; は &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; に対応している。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; についてはちゃんと調べていつか記事にする予定である。&lt;/p&gt;
&lt;h2&gt;回避策2： &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵をいきなりインポートしない&lt;/h2&gt;
&lt;p&gt;APT のように &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使った鍵運用が必須の場合でも，いきなり鍵束にインポートするのではなく，事前に公開鍵をチェックして問題がないか調べたほうがよさそうである。&lt;/p&gt;
&lt;p&gt;公開鍵をチェックするのであれば &lt;a href=&#34;https://github.com/kazu-yamamoto/pgpdump&#34; title=&#34;kazu-yamamoto/pgpdump: A PGP packet visualizer&#34;&gt;pgpdump&lt;/a&gt; か（手前味噌でナニだが）その &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;版である &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; を使うことをオススメする。&lt;/p&gt;
&lt;p&gt;先ほどの&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;であれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ wget -O - &amp;#34;http://keyserver.ubuntu.com/pks/lookup?search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&amp;amp;op=get&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;などとすればとすれば Armor テキストでダウンロードできる。
汚染されている公開鍵であればかなり巨大になっているだろうから，ある程度の判断はできそうである。&lt;/p&gt;
&lt;h3&gt;【追記 2019-07-06】 &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; に HKP アクセスモードを追加した&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の v0.6.0 をリリースしたが，このバージョンから HKP アクセスモードを追加した。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gpgpdump-v0_6_0-is-released/&#34;&gt;gpgpdump v0.6.0 をリリースした&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この機能を使えば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump hkp --keyserver keyserver.ubuntu.com --port 80 0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
Public-Key Packet (tag 6) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2014-08-04T15:35:03Z
        53 df a8 27
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
User ID Packet (tag 13) (58 bytes)
    User ID: Xamarin Public Jenkins (auto-signing) &amp;lt;releng@xamarin.com&amp;gt;
Signature Packet (tag 2) (284 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2014-09-04T15:26:28Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xc90f9cb90e1fad0c
    Hash left 2 bytes
        9c d7
    RSA signature value m^d mod n (2046 bits)
Signature Packet (tag 2) (284 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2016-12-11T01:14:48Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x01150a655bbd8102
    Hash left 2 bytes
        7f cf
    RSA signature value m^d mod n (2048 bits)
Signature Packet (tag 2) (312 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (34 bytes)
        Signature Creation Time (sub 2): 2014-08-04T15:35:03Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Preferred Symmetric Algorithms (sub 11) (5 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xa6a19b38d3d831ef
    Hash left 2 bytes
        90 e8
    RSA signature value m^d mod n (2047 bits)
Public-Subkey Packet (tag 14) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2014-08-04T15:35:03Z
        53 df a8 27
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
Signature Packet (tag 2) (287 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (9 bytes)
        Signature Creation Time (sub 2): 2014-08-04T15:35:03Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xa6a19b38d3d831ef
    Hash left 2 bytes
        ac 35
    RSA signature value m^d mod n (2048 bits)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;といった感じに &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵を直接検査できる。
これなら最悪でも &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; がコケるだけなので &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵束にはダメージがいかないだろう。&lt;/p&gt;
&lt;h2&gt;回避策3： &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 以降を使って電子署名のインポートを拒否する（2019-07-10 追記）&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 から公開鍵サーバ上の公開鍵について付帯する電子署名を（自己署名を除いて）捨てることにしたようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gnupg-2_2_17-is-released/&#34;&gt;GnuPG 2.2.17 リリース： 公開鍵サーバ・アクセスに関する過激な変更あり&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これなら最悪は免れるかな。
公開鍵の管理の仕方が大幅に変わるかもしれないけど。&lt;/p&gt;
&lt;h2&gt;新しい keys.openpgp.org を使う&lt;/h2&gt;
&lt;p&gt;今後の話になるだろうが，新しい &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバが登場したので，公開鍵の運用をそちらに移行する手もある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/06/launching-a-new-openpgp-key-server/&#34;&gt;新しい OpenPGP 鍵サーバが Launch したらしい&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「まだベータ運用だし，しばらくは様子見かなぁ」と思っていたが，ちょっと前倒しして調査したほうがいいかしらん。
先ほどの &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; の調査も併せて色々調べてみるつもりである。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vice.com/en_us/article/8xzj45/someone-is-spamming-and-breaking-a-core-component-of-pgps-ecosystem&#34;&gt;Someone Is Spamming and Breaking a Core Component of PGP’s Ecosystem - VICE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f&#34;&gt;SKS Keyserver Network Under Attack · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dkg.fifthhorseman.net/blog/openpgp-certificate-flooding.html&#34;&gt;dkg&amp;rsquo;s blog - OpenPGP Certificate Flooding&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gentoo.org/news/2019/07/03/sks-key-poisoning.html&#34;&gt;Impact of SKS keyserver poisoning on Gentoo – Gentoo Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート（鍵作成から失効まで）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/5132396FFQL._SL160_.jpg&#34; width=&#34;124&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;PGP―暗号メールと電子署名&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シムソン ガーフィンケル (著), Garfinkel,Simson (原著), ユニテック (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 1996-04-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4900900028 (ASIN), 9784900900028 (EAN), 4900900028 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-16&#34;&gt;2014-10-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PGP―暗号メールと電子署名 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;そういう意味で &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵への電子署名は厳密な「証明（certification）」というよりは小切手の裏書きのようなものを連想してもらうのがいいだろう。つまり今回の「公開鍵の汚染問題」は「裏書き spam」と考えると分かりやすい。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ちなみに &lt;code&gt;--keyserver&lt;/code&gt; とか &lt;code&gt;--recv-keys&lt;/code&gt; とかは &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のオプションである。おそらくこれらのオプションをそのまま &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; に引き渡しているのだろう。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>OpenPGP の電子署名は「ユーザーの身元を保証し」ない</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/openpgp/web-of-trust/" />
		<id>tag:text.Baldanders.info,2019-03-21:/openpgp/web-of-trust/</id>
		<published>2019-03-20T15:28:40+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>つまり公開鍵や電子署名で「ユーザーの身元を保証」するのではなく「身元の保証されたユーザ」同士で鍵と電子署名を運用するのである。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;重箱の隅を突っつくような内容で申し訳ないのだが&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1175019.html&#34;&gt;「GitKraken 5.0」がリリース ～GPGコミットや“Interactive Rebase”をサポート - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という記事で&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;メジャーアップデートとなる本バージョンでは、“GNU Privacy Guard (GPG)”による署名付きのコミットがサポートされた。ユーザーの身元を保証し、他のユーザーによるなりすましを防止することができる。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1175019.html&#34;&gt;「GitKraken 5.0」がリリース ～GPGコミットや“Interactive Rebase”をサポート&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;などと書いてあって「それはちゃうやろ」という話。&lt;/p&gt;
&lt;h2&gt;暗号機能の4要素&lt;/h2&gt;
&lt;p&gt;昔からよく言われる暗号機能の4要件は以下の通り。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;機密性（Confidentiality）&lt;/li&gt;
&lt;li&gt;完全性（Integrity）&lt;/li&gt;
&lt;li&gt;認証（Authentication）&lt;/li&gt;
&lt;li&gt;否認防止（Non-repudiation）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このうちデータへの電子署名では主に完全性と否認防止を行う。
否認防止という言葉はちょっと耳慣れないかもしれないが，要するに「あなたはこのデータに署名した」という事実を否認することが出来ない，という意味である&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;これらを達成するためには電子署名に使う公開鍵が鍵オーナーと正しく紐付いている必要がある&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
おそらく最初の記事は「公開鍵が鍵オーナーと正しく紐付いている」という前提で「ユーザーの身元を保証」などと書いているのかもしれないが，話はそう簡単ではないのだ。&lt;/p&gt;
&lt;h2&gt;公開鍵基盤&lt;/h2&gt;
&lt;h3&gt;X.509&lt;/h3&gt;
&lt;p&gt;「公開鍵が鍵オーナーと正しく紐付いている」ことを証明するために必要なのが「公開鍵基盤（Public-Key Infrastructure; PKI）」である。
公開鍵基盤として最も有名なのは HTTPS 接続で使われている X.509 であろう。
X.509 の「信用モデル（trust model）」では hierarchical な「認証局（Certification Authority; CA）」を構成し，その認証局が公開鍵を証明することで成り立っている。&lt;/p&gt;
&lt;p&gt;でも実は認証局が証明しているのは「公開鍵が鍵オーナーと正しく紐付いている」ことだけで，鍵オーナーの「身元を保証」しているわけではない。&lt;/p&gt;
&lt;p&gt;そこで HTTPS には &lt;a href=&#34;https://baldanders.info/blog/000277/&#34; title=&#34;Extended Validation SSL — Baldanders.info&#34;&gt;EV SSL (Extended Validation SSL) なる奇っ怪な仕組み&lt;/a&gt;が組み込まれた。
これは鍵オーナーの「身元を保証」するための仕組みで，鍵オーナーは認証局に対して自身の身元を証明するものを提出し認証局は公開鍵の管理をより厳格に行う，ということらしい。&lt;/p&gt;
&lt;p&gt;正直に言って「屋上屋を架す」仕組みであり認証局の責務を逸脱していると思うのだが，まぁ深くは突っ込むまい。&lt;/p&gt;
&lt;h3&gt;Web of Trust&lt;/h3&gt;
&lt;p&gt;これに対して PGP/&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; が伝統的に執っている信用モデルは「信用の輪（web of trust）」と呼ばれている。&lt;/p&gt;
&lt;p&gt;これは要するに「友達の友達は友達」というやつで，ユーザ同士がお互いの鍵を相互に認証することで信用を構成する仕組みである。&lt;/p&gt;
&lt;p&gt;何故 PGP/&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; が X.509 のような「権威による認証」を採用しなかったかというと，それは PGP の出自に関係がある。
PGP の作者である Phil Zimmermann は，当時は反核運動家であり国家等の「権威」に依らない信用モデルを必要としていたと言われている&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;OpenPGP は名前だけならどんな鍵でも作れる。
たとえば Bitcoin の作者と言われる Satoshi Nakamoto の公開鍵は&lt;a href=&#34;https://text.baldanders.info/remark/2016/05/openpgp-key-of-satoshi-nakamoto/&#34;&gt;公開鍵サーバを探せば簡単に見つかる&lt;/a&gt;が，それが「あの」 Satoshi Nakamoto 本人であると示す証拠は（少なくとも公開鍵自体には）存在しない。
OpenPGP 公開鍵やその電子署名で赤の他人の「身元を保証」することは出来ないのだ。&lt;/p&gt;
&lt;h2&gt;Git を中心としたチーム運営に &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; を利用する&lt;/h2&gt;
&lt;p&gt;じゃあ git commit で OpenPGP 署名を付与することにどんな意義があるかというと，それはチーム運営で威力を発揮する。
つまり公開鍵や電子署名で「ユーザーの身元を保証」するのではなく「身元の保証されたユーザ」同士で鍵と電子署名を運用するのである。
これでチーム以外からのなりすまし commit を検知（防止ではない&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;）しやすくなる。&lt;/p&gt;
&lt;p&gt;この辺について詳しくは，拙文「&lt;a href=&#34;https://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;」を書いたので興味があれば参照してほしい。&lt;/p&gt;
&lt;p&gt;また GitHub のようにアカウントと公開鍵を紐つけることによってサービス内における強力なポートフォリオとして機能している点は見逃せないだろう。
GitHub 上の&lt;ruby&gt;&lt;rb&gt;活動&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;contribution&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;がそのまま「エンジニアとしてのユーザ」の身元を保証しているわけだ。&lt;/p&gt;
&lt;p&gt;ホンマ git ってよく出来たシステムだよなぁ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/git-commit-with-openpgp-signature/&#34;&gt;Git Commit で OpenPGP 署名を行う&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://baldanders.info/spiegel/cc-license/&#34;&gt;わかる！ OpenPGP 暗号 — Baldanders.info&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34;&gt;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&lt;/a&gt; : OpenPGP 鍵や電子署名のダンプには拙作をどうぞ（宣伝&lt;code&gt;w&lt;/code&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/5132396FFQL._SL160_.jpg&#34; width=&#34;124&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4900900028?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;PGP―暗号メールと電子署名&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シムソン ガーフィンケル (著), Garfinkel,Simson (原著), ユニテック (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 1996-04-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4900900028 (ASIN), 9784900900028 (EAN), 4900900028 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-16&#34;&gt;2014-10-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PGP―暗号メールと電子署名 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;メッセージング・システムを含む暗号通信においては「否認防止」よりむしろ「否認可能 (Deniability)」が要求される場合がある。詳しくは拙文「&lt;a href=&#34;https://baldanders.info/blog/000787/&#34; title=&#34;OTR over XMPP — Baldanders.info&#34;&gt;OTR over XMPP&lt;/a&gt;」を参考にどうぞ。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;たとえば Bitcoin/Blockchain は公開鍵と鍵オーナーとの紐づけを行わない。元帳である Blockchain に記載された取引自体は改竄もなく正しいとしても誰がそれを行ったかを証明する術がない。証明するためには別の仕組みが必要となる。あるいは Bitcoin/Blockchain は「信用」を極力排除することでシステム自体の「正しさ」を担保しているとも言える。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本当のことろ，作者である Phil Zimmermann がどこまで企図していたのかは知らないが， PGP の登場によって暗号は初めて（国家や大企業のものではなく）一般の人も「使える」ものになったことは確かである。なお &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; 実装のひとつである &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では伝統的な「信用の輪」以外にも X.509 の信用モデルや &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34;&gt;TOFU (Trust On First Use)&lt;/a&gt; と呼ばれる信用モデルもサポートしている。 &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;なりすましの防止はできなくとも，きちんと鍵と電子署名を運用しているのであれば，抑止にはなるだろう。 &lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>Git Commit で OpenPGP 署名を行う</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/openpgp/git-commit-with-openpgp-signature/" />
		<id>tag:text.Baldanders.info,2017-12-01:/openpgp/git-commit-with-openpgp-signature/</id>
		<published>2017-12-01T08:51:38+00:00</published>
		<updated>2019-07-03T11:55:57+00:00</updated>
		<summary>Git で commit する際に OpenPGP 署名を付加できるらしい。いやぁ，今まで知らなかったよ。物知らずでごめん。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;Git&lt;/a&gt; で commit する際に OpenPGP 署名を付加できるらしい。
いやぁ，今まで知らなかったよ。
物知らずでごめん。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/uz/v2/Git-Tools-Signing-Your-Work&#34;&gt;Git - Signing Your Work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/prince_0203/items/ef0e12f2f6d150ff0485&#34;&gt;GitHubでGPGにより署名されたコミットにバッジが表示されるようになったので設定してみる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;OpenPGP 鍵の登録&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; title=&#34;Git&#34;&gt;Git&lt;/a&gt; に OpenPGP 鍵を設定するには以下のコマンドでいいようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global user.signingkey 7E20B81C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;“&lt;code&gt;7E20B81C&lt;/code&gt;” は OpenPGP 鍵の鍵 ID である。
鍵ごとに異なる値になるので注意。
今回は「&lt;a href=&#34;https://baldanders.info/pubkeys/&#34;&gt;OpenPGP 公開鍵リスト&lt;/a&gt;」で公開している鍵の鍵 ID を登録している。
この設定で &lt;code&gt;.gitconfig&lt;/code&gt; ファイルに以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[user]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;signingkey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;7E20B81C&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Gpg を直接指定する場合&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://git-for-windows.github.io/&#34; title=&#34;Git for Windows&#34;&gt;Git for Windows&lt;/a&gt; の場合， &lt;code&gt;git bash&lt;/code&gt; に同梱されている &lt;code&gt;gpg.exe&lt;/code&gt; を使うのだが，困ったことにこれが classic version なのである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 1.4.20
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
Supported algorithms:
Pubkey: RSA, RSA-E, RSA-S, ELG-E, DSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;既に &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の Windows 版をインストールしているのであれば，以下の設定で &lt;code&gt;gpg.exe&lt;/code&gt; をフルパス指定できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global gpg.program C:/path/to/GnuPG/bin/gpg.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちなみに &lt;code&gt;.gitconfig&lt;/code&gt; ファイルには以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[gpg]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;program&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;C:/path/to/GnuPG/bin/gpg.exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお Windows 環境であれば，特に理由がないかぎり， stable/modern version を使うことをお薦めする。
Windows 環境以外でも &lt;a href=&#34;https://www.gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を classic version と stable/modern version で使い分けている場合は，この設定が役に立つだろう。&lt;/p&gt;
&lt;h2&gt;Commit に OpenPGP 署名を付加する&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt; 時に OpenPGP 署名を付加したい場合は， version 2 以降なら，以下の設定で常時署名を行うようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git config --global commit.gpgsign true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;.gitconfig&lt;/code&gt; ファイルには以下の記述が追加される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;k&#34;&gt;[commit]&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;gpgsign&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この状態で逆に commit 時に署名を付加してほしくない場合は &lt;code&gt;--no-gpg-sign&lt;/code&gt; オプションを付加すればいいようだ。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; エディタの &lt;a href=&#34;https://atom.io/packages/git-plus&#34; title=&#34;git-plus&#34;&gt;git-plus&lt;/a&gt; パッケージで commit してみたが，きちんと署名もできていた。
&lt;a href=&#34;http://gitextensions.github.io/&#34; title=&#34;Git Extensions&#34;&gt;Git Extensions&lt;/a&gt; でも問題ないようだ。
「&lt;a href=&#34;http://qiita.com/prince_0203/items/ef0e12f2f6d150ff0485&#34;&gt;GitHubでGPGにより署名されたコミットにバッジが表示されるようになったので設定してみる&lt;/a&gt;」には「GitHub DesktopはGPGによる署名をサポートしていません」とあるが， Facebook で教えてもらった話によれば， &lt;code&gt;gpg-agent&lt;/code&gt; と Pinentry が正しく設定されていれば使えるそうだ。&lt;/p&gt;
&lt;p&gt;きちんと署名されているか確認するには &lt;code&gt;git log&lt;/code&gt; コマンドに &lt;code&gt;--show-signature&lt;/code&gt; オプションを付けるとよい。&lt;/p&gt;
&lt;h3&gt;Tag にも Merge にも署名できる&lt;/h3&gt;
&lt;p&gt;タグに署名を付加する場合は &lt;code&gt;-s&lt;/code&gt; オプションを付けて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git tag -s -a v0.1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすればいい。
同様に merge でも &lt;code&gt;-S&lt;/code&gt; オプションを付けて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git merge -S branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でいいようだ。&lt;/p&gt;
&lt;h2&gt;GitHub が OpenPGP 署名に対応した&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; で commit や tag に対する署名を表示できるようになったらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blog/2144-gpg-signature-verification&#34;&gt;GPG signature verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;たとえばこんな感じに表示される。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26315000570/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26315000570_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26315000570_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (4)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26315000570/&#34;&gt;OpenPGP Key in GitHub (4)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これを有効にするには &lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; に OpenPGP 公開鍵を登録して署名検証可能にしなければならない。
公開鍵の登録は設定画面で行う。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26494073882/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26494073882_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26494073882_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (1)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26494073882/&#34;&gt;OpenPGP Key in GitHub (1)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この画面で「New GPG key」ボタンを押すと以下の入力画面になる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26520705641/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26520705641_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26520705641_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (2)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26520705641/&#34;&gt;OpenPGP Key in GitHub (2)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ここに公開鍵の armor テキストを貼り付けて「Add GPG key」ボタンを押せばよい。
これで OpenPGP 公開鍵の登録は完了である。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/26586667165/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/26586667165_m.png&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/26586667165_m.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OpenPGP Key in GitHub (3)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/26586667165/&#34;&gt;OpenPGP Key in GitHub (3)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;なお公開鍵の armor テキストは以下のコマンドで取得できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --armor --export 7E20B81C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;“&lt;code&gt;7E20B81C&lt;/code&gt;” は先ほど説明した鍵 ID である。&lt;/p&gt;
&lt;p&gt;Tag や commit に署名することで「なりすまし」に対する抑止になる。
これは特にチームで開発を行う場合に威力を発揮するだろう。
ぜひ習慣付けていきたいものである。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/pontago/items/5867b6492e09c34084fe&#34;&gt;git(GitHub)でGPGを使った署名をおこなう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/akashima/items/4b40ccb13ad13dee5cdb&#34;&gt;Yubikeyを使って、Githubのcommitをverifyする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/wktk/items/acf641bbbf2b82ff7275&#34;&gt;Git のタグやコミットを (PGP ではなく) S/MIME で署名する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/batch9703/items/f6959ba51bb9bb32ef93&#34;&gt;git cryptを導入する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Satoshi Nakamoto の OpenPGP 鍵</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2016/05/openpgp-key-of-satoshi-nakamoto/" />
		<id>tag:text.Baldanders.info,2016-05-04:/remark/2016/05/openpgp-key-of-satoshi-nakamoto/</id>
		<published>2016-05-04T14:28:56+00:00</published>
		<updated>2020-01-05T11:59:50+00:00</updated>
		<summary>“Satoshi Nakamoto” の OpenPGP 鍵について。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;色々話題になっているようで。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/03/20160502major-questions-arise-over-craig-wrights-claim-to-be-satoshi-nakamoto/&#34;&gt;オーストラリア人起業家、Craig WrightがBitcoinの発明者、Satoshi Nakamotoなのか？ | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cpplover.blogspot.jp/2016/05/craig-wrightsatoshi-nakamoto.html&#34;&gt;本の虫: Craig WrightがSatoshi Nakamotoだとする証明はない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/2015/12/bitcoins-creator-satoshi-nakamoto-is-probably-this-unknown-australian-genius/&#34;&gt;Bitcoin’s Creator Satoshi Nakamoto Is Probably This Unknown Australian Genius | WIRED&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2016/05/03/bitcoins-creator-satoshi-nakamoto-is-1/&#34;&gt;この無名の天才がビットコイン発明者「サトシ・ナカモト」である証拠（1）｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2016/05/04/bitcoins-creator-satoshi-nakamoto-is-2/&#34;&gt;この無名の天才がビットコイン発明者「サトシ・ナカモト」である証拠（2）｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2016/05/05/bitcoins-creator-satoshi-nakamoto-is-3/&#34;&gt;この無名の天才がビットコイン発明者「サトシ・ナカモト」である証拠（3）｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この中で&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;保管先のMITサーヴァーのデータベースをチェックしてみると、この公開鍵は〈satoshin@vistomail.com〉というメールアドレスに紐づけられているのがわかる。これはビットコインを紹介する白書を暗号研究メーリングリストに投稿する際にナカモトが使用したアドレス、〈satoshi@vistomail.com〉によく似ている。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://wired.jp/2016/05/04/bitcoins-creator-satoshi-nakamoto-is-2/&#34;&gt;この無名の天才がビットコイン発明者「サトシ・ナカモト」である証拠（2）&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とあるが，おそらく&lt;a href=&#34;https://sks-keyservers.net/pks/lookup?op=vindex&amp;amp;search=0x491F9BDF0F7BD4AD&#34;&gt;これ&lt;/a&gt;を指していると思われる&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: SKS 1.1.5+
Comment: Hostname: keys2.kfwebs.net

mQGNBEkJIQMBDADjtKw8NGu8XpU9WgxfiF5O9AkmBO7D9sBeIuNR4ULFLbzdD6MRQOyRYi9G
OxsSHohRgZpG146slEpASDdD//TJCH72yTtModYKWI7z6WWgXSNQvwKb+q2G9SeJ2N+2t1Bk
FuM+WOGstGTQiEB+Oj6OlJPI9I3YoE8T2VC8m5BrHdIi2W4R1vbuCGry0To7L9MygtuxmGfl
qrUiG0teiKNy0mpZaMDXJHAyLLaamHj25HXcHhq8LyyQHCE6iCcXY8iD/Dma98+ZcEEEQDfO
rmK7HVSU/Rh29VNJ2fgnJM+hhsmJnIPpxt6NIwhtY66U0lKWozOHnJSc1xIMv562NMxQUs3P
Vzrqyd5I/3gSnU+dhoHTSkbjNKWvAhIpEHNNYQ/4lub5bEblGhtvVYp67DUgjYrQmxscK3da
svXhegiCRrQ2qSTqH160NMxe/ycF/KlPeRlnPoWmDEEAz4tWxgZOMK/bUyleS5MaU128J1hY
SS9gGME0COycN/2ygCEQOm8AEQEAAbQpQnVaeiBzcGFjZWRvdXQgICA8c2F0b3NoaW5Admlz
dG9tYWlsLmNvbT6JAb8EEwECACkFAkkJIQMCGwMFCRSvv40HCwkIBwMCAQYVCAIJCgsEFgID
AQIeAQIXgAAKCRBJH5vfD3vUrfWXC/9arLWyt3zRKU7RMr8sGtD2Uh2gBsk2okqTgdWF+wn3
z8IPLER7zQ/sLPklTHtwi0lNzY7DS+w5NJTPSF4NbqcM8UOXOrQvqCatlLNHftbOuPCNoJpI
SxEAQygkJIJcsBpmGxJadnnjDZNkAFHJEY8PPHyxm9CBpI2vowCifrEAoYB5lV39YEbY9ur8
mIdJfsvW5HhKEUydvJCQn8Pm1i69MHB1Pv4ZLzbf/3iiH+/2A9Ug5upwB4+QJPBE7mC+88xn
YPWRNVCuGF6Bny0Q+b+MPvnD9rFxCzyQUlPhM229cDnVjwDRWSapEVvC2VDAki93x9fzOOiE
96sINhal0atie/9jwkMqAMIlgWCoVBX+4IrION2k0N562JSzwv1+TfpIURLu1dNuxK20uVWT
E1ltVJqkGVyK4JUKluXeDJORr9pDvkr2GLgLDCx/9ynZK/cR54Tt78d0RfYKzwPnTzTU0V5f
5lfHfHwhA4kuoGMdp9a/dmomq71RZ1SfQgeiPae0KVNhdG9zaGkgTmFrYW1vdG8gPHNhdG9z
aGluQHZpc3RvbWFpbC5jb20+iQG/BBMBAgApBQJJCSEDAhsDBQkUr7+NBwsJCAcDAgEGFQgC
CQoLBBYCAwECHgECF4AACgkQSR+b3w971K31lwv/Wqy1srd80SlO0TK/LBrQ9lIdoAbJNqJK
k4HVhfsJ98/CDyxEe80P7Cz5JUx7cItJTc2Ow0vsOTSUz0heDW6nDPFDlzq0L6gmrZSzR37W
zrjwjaCaSEsRAEMoJCSCXLAaZhsSWnZ54w2TZABRyRGPDzx8sZvQgaSNr6MAon6xAKGAeZVd
/WBG2Pbq/JiHSX7L1uR4ShFMnbyQkJ/D5tYuvTBwdT7+GS823/94oh/v9gPVIObqcAePkCTw
RO5gvvPMZ2D1kTVQrhhegZ8tEPm/jD75w/axcQs8kFJT4TNtvXA51Y8A0VkmqRFbwtlQwJIv
d8fX8zjohPerCDYWpdGrYnv/Y8JDKgDCJYFgqFQV/uCKyDjdpNDeetiUs8L9fk36SFES7tXT
bsSttLlVkxNZbVSapBlciuCVCpbl3gyTka/aQ75K9hi4Cwwsf/cp2Sv3EeeE7e/HdEX2Cs8D
50801NFeX+ZXx3x8IQOJLqBjHafWv3ZqJqu9UWdUn0IHoj2nuQGNBEkJIQMBDADCL3vhbxGE
dtVn1jyzEajYm2Cto1JKGqGVCBU0v3kPYDfhdlHGjeJ3HYfWZABUgeYSzUPVGrS3++j4sxxS
m3peNg8nybmo8aMwrGHJmeP+xerN29Pxra1TNxz/nndM1wZYN+hHA+zrIQiyYQ9IiUROvRSu
z5CSTRYh5P0JdfezuaTFktRMMINizBkSOKNM2Kz/O4e0J7FIIC5oM/uIthAMuwYuivDTR618
nCo0KObuyd4Eak7UxvYlA8L3Da/Vt2Q2zgtq9kmRZNoChfzljBRQb+z4xI/13OV7RmIHjadG
nC/ZJd8OXyln+SWbBPpiJmQ39vZOmxAY4z8M2wkto7ILtlUyL+3DSUjXScYFJVq8VDW55k5W
vKIdBjipXONi9/55LZnJPKhlt5Ip/azFQnZ5ZcVDFK6db257wvLojLqBEHNFhuVuYz3ANmPe
jlsjU4wJi3nNfjcHAzBODzhdvg5kmdaiSQ/mhGE2gzzW7e9jyrNrdxXp8tiARwB4Ke3F/rkA
EQEAAYkBpQQYAQIADwUCSQkhAwIbDAUJFK+/jQAKCRBJH5vfD3vUrVdIDACaghW/bj0njw64
ar1JqtG7QDsTcakTZHIuN62X3ewLqUO/3t2bWgC7YMZqX4IA3Iqz3Z0l2rLYbISFx0Ur19a+
xAA8uUhe400UfVLyPLNlvAL6Qzw3QGokOF45bKuX8Tjd/t0prJF3IBcbHih/bH6tAzLQEj8A
3p9/vkW5pezmQqyemaJaEEE75fDGmgiB/nxGPfL8mS4R2LmgUadqquSqhWXk0S9U9Y2z+vFU
LBFt4/M57YWOzryLO/MOPVDFUe604zCXy7s6LVRdjRI8V0h/WzskmEFE9UBwNDpM6jExl9xo
8M1M2ICOewrxE33HoF0dbbW+QFIH2mCWXt8bzfdOvhMTYzaQWOHvYIKPLZqFVDfFC7TBGdY4
mNx2/kxQ5GARUcd1zKI6RoKD60mq1KciTJdJSp5xdCNNfatGgiSFEcYRn8NsWr9nT+5H/yjz
VVFPo9kHgEuxnT8TTeOj189tiLItQUBx/3ZYkAjhIt/hYpo9wif7KSgqjlF6K1n7ZVA=
=LSEt
-----END PGP PUBLIC KEY BLOCK-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを &lt;a href=&#34;(http://www.mew.org/~kazu/proj/pgpdump/&#34;&gt;&lt;code&gt;pgpdump&lt;/code&gt;&lt;/a&gt; にかけるとこうなる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Old: Public Key Packet(tag 6)(397 bytes)
        Ver 4 - new
        Public key creation time - Thu Oct 30 11:50:43 東京 (標準時) 2008
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(3072 bits) - ...
        RSA e(17 bits) - ...
Old: User ID Packet(tag 13)(41 bytes)
        User ID - BuZz spacedout   &amp;lt;satoshin@vistomail.com&amp;gt;
Old: Signature Packet(tag 2)(447 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA1(hash 2)
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Oct 30 11:50:43 東京 (標準時) 2008
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: key expiration time(sub 9)(4 bytes)
                Time - Wed Oct 30 10:00:00 東京 (標準時) 2019
        Hashed Sub: preferred symmetric algorithms(sub 11)(6 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - CAST5(sym 3)
                Sym alg - Triple-DES(sym 2)
                Sym alg - IDEA(sym 1)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA1(hash 2)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x491F9BDF0F7BD4AD
        Hash left 2 bytes - f5 97
        RSA m^d mod n(3071 bits) - ...
                -&amp;gt; PKCS-1
Old: User ID Packet(tag 13)(41 bytes)
        User ID - Satoshi Nakamoto &amp;lt;satoshin@vistomail.com&amp;gt;
Old: Signature Packet(tag 2)(447 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA1(hash 2)
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Oct 30 11:50:43 東京 (標準時) 2008
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: key expiration time(sub 9)(4 bytes)
                Time - Wed Oct 30 10:00:00 東京 (標準時) 2019
        Hashed Sub: preferred symmetric algorithms(sub 11)(6 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - CAST5(sym 3)
                Sym alg - Triple-DES(sym 2)
                Sym alg - IDEA(sym 1)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA1(hash 2)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x491F9BDF0F7BD4AD
        Hash left 2 bytes - f5 97
        RSA m^d mod n(3071 bits) - ...
                -&amp;gt; PKCS-1
Old: Public Subkey Packet(tag 14)(397 bytes)
        Ver 4 - new
        Public key creation time - Thu Oct 30 11:50:43 東京 (標準時) 2008
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(3072 bits) - ...
        RSA e(17 bits) - ...
Old: Signature Packet(tag 2)(421 bytes)
        Ver 4 - new
        Sig type - Subkey Binding Signature(0x18).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA1(hash 2)
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Oct 30 11:50:43 東京 (標準時) 2008
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to encrypt communications
                Flag - This key may be used to encrypt storage
        Hashed Sub: key expiration time(sub 9)(4 bytes)
                Time - Wed Oct 30 10:00:00 東京 (標準時) 2019
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x491F9BDF0F7BD4AD
        Hash left 2 bytes - 57 48
        RSA m^d mod n(3072 bits) - ...
                -&amp;gt; PKCS-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;というわけで，時期的にはそれっぽいが，よく見ると本人以外の署名がない。
これではこの鍵が本人かどうか確かめようがない。&lt;/p&gt;
&lt;p&gt;同じ日に作られた “Satoshi Nakamoto” 名義の鍵は他にもあって， &lt;a href=&#34;https://sks-keyservers.net/pks/lookup?op=vindex&amp;amp;search=0xD2D59294CDD2C21C&#34;&gt;&lt;code&gt;satoshi@vistomail.com&lt;/code&gt; の鍵&lt;/a&gt;もあるのだが，これもやはり本人の署名しかない。
更に &lt;a href=&#34;https://sks-keyservers.net/pks/lookup?op=vindex&amp;amp;search=0x18C09E865EC948A1&#34;&gt;&lt;code&gt;satoshin@gmx.com&lt;/code&gt; の鍵&lt;/a&gt;もあって，こちらには2009年の署名がいくつかある。&lt;/p&gt;
&lt;p&gt;御存知の通り OpenPGP の信用モデルは “web of trust” と呼ばれるもので，ユーザ間の相互署名によって信用度と有効性が担保される&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
故に自己署名しかない鍵では有効性を担保できない。
もっとも “Satoshi Nakamoto” は匿名で活動していたらしいので，他者の署名を得られなかった可能性もある。&lt;/p&gt;
&lt;p&gt;巷では否定的な意見が多いようだが，真相はわからない。
もっとも，今更名乗り出られてもねぇ。
本当に本人なら税務署が押し寄せてきて大変なことになりそうだが。&lt;/p&gt;
&lt;p&gt;そういえば昔，電子メールに署名する際に，メッセージに差出人や宛先の情報がない場合，それを使って第三者がいくらでも悪用できるって話題があったな。
この議論以降，電子メールの本文には必ず宛先の名前と自分自身を示す情報を含めるようにしている。&lt;/p&gt;
&lt;h2&gt;参考ページ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/spiegel/cc-license/&#34;&gt;わかる！ OpenPGP 暗号 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/06/20160505craig-wright-backs-out-and-wont-prove-that-he-is-bitcoin-creator-satoshi-nakamoto/&#34;&gt;Craig Wright、「証拠は公表したくない」―オーストラリア人起業家、Bitcoinを発明したとの主張から後退 | TechCrunch Japan&lt;/a&gt; : この話はどうやら収束したらしい。やれやれ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;OpenPGP 鍵サーバは互いに peer-to-peer で繋がり同期している。今回は MIT の鍵サーバではなく &lt;a href=&#34;https://sks-keyservers.net/&#34;&gt;&lt;code&gt;sks-keyservers.net&lt;/code&gt;&lt;/a&gt; から取得した。内容は同じである。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;公開鍵の相互署名を行うために &lt;a href=&#34;https://en.wikipedia.org/wiki/Key_signing_party&#34;&gt;key signing party&lt;/a&gt; を行ったりする。もし，件の鍵が &lt;a href=&#34;https://en.wikipedia.org/wiki/Key_signing_party&#34;&gt;key signing party&lt;/a&gt; によって署名されていたなら，そのときの証言を以って本人の鍵かどうか証明できたわけだ。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>個人番号カードを発行してもらいました</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2016/02/my-number-card/" />
		<id>tag:text.Baldanders.info,2016-02-16:/remark/2016/02/my-number-card/</id>
		<published>2016-02-16T03:47:08+00:00</published>
		<updated>2019-07-01T13:48:09+00:00</updated>
		<summary>実は昨年末に申請したのにさっぱり音沙汰なしで私も忘れてたんだけど，先日交付の案内が来たので区役所に行ってきた。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;実は昨年末に申請したのにさっぱり音沙汰なしで私も忘れてたんだけど，先日交付の案内が来たので区役所に行ってきた。&lt;/p&gt;
&lt;p&gt;申請は Web でできる。
顔写真を提出しないといけないが，スマホの自撮りで大丈夫なようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kojinbango-card.go.jp/kofushinse/pc.html&#34;&gt;マイナンバーカード総合サイト／パソコンによる申請方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kojinbango-card.go.jp/kofushinse/checkpoint.html&#34;&gt;マイナンバーカード総合サイト／顔写真のチェックポイント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;交付に際して準備するもの&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;個人番号通知カード（あの紙ペラのやつ）&lt;/li&gt;
&lt;li&gt;交付案内のハガキ&lt;/li&gt;
&lt;li&gt;身分を証明するもの（運転免許証等）&lt;/li&gt;
&lt;li&gt;住基カード（既に持っている人のみ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一応，印鑑も持って行ったのだが不要だった。&lt;/p&gt;
&lt;p&gt;未成年の場合は法定代理人と同伴する必要があり，法定代理人の身分証明も必要。
自分で受け取りに行けない場合&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; は代理人を立てることができる。
この場合は委任状（交付案内のハガキに書く欄がある）が必要で，事前にパスワード等を決めておく必要がある。&lt;/p&gt;
&lt;p&gt;既に住基カードを持っている人は個人番号カードと交換になるようだ。
なお，この作業により場合によっては即日交付できないことがあるそうな。&lt;/p&gt;
&lt;h2&gt;暗証番号およびパスワードを決める&lt;/h2&gt;
&lt;p&gt;交付に際し，3つの暗証番号と1つのパスワードを決める必要がある。
これは役所で説明してくれる。
それぞれ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;住基関連の事務に必要な暗証番号&lt;/li&gt;
&lt;li&gt;電子申請等において個人番号や氏名等の情報をカード（の IC チップ）から読み出すための暗証番号&lt;/li&gt;
&lt;li&gt;利用者証明用電子証明書を利用するための暗証番号&lt;/li&gt;
&lt;li&gt;署名用電子証明書&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; を利用するためのパスワード&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と役割が異なっているため，全て異なる値にしたほうがよい（役所では3つの暗証番号は同じでもよいと説明されたが，特に3番目は民間利用も想定しているようなので別にしておいたほうが安全）。
当然ながらスマホやキャッシュカードの暗証番号を流用するのはダメ。
自分や家族の誕生日もダメだよ！&lt;/p&gt;
&lt;p&gt;パスワードは英数字で6～16文字で設定できる。
ただし英小文字は使えないので文字が36種しか使えない。&lt;/p&gt;
&lt;p&gt;IPA の「&lt;a href=&#34;https://www.ipa.go.jp/security/ipg/documents/dev_setting_crypt.html&#34; title=&#34;IPA 独立行政法人 情報処理推進機構：情報漏えいを防ぐためのモバイルデバイス等設定マニュアル&#34;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル&lt;/a&gt;」にパスワードの解読しやすさについて説明した表があるので以下に引用する&lt;/p&gt;
&lt;figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;4&#39;&gt;利用する文字種類数と内訳&lt;/th&gt;
&lt;th colspan=&#39;4&#39;&gt;パスワード長&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;種類数&lt;/th&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;文字&lt;/th&gt;
&lt;th&gt;シンボル&lt;/th&gt;
&lt;th&gt;4文字&lt;/th&gt;
&lt;th&gt;8文字&lt;/th&gt;
&lt;th&gt;12文字&lt;/th&gt;
&lt;th&gt;16文字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;10種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;      &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{13.3}$）&lt;/td&gt;&lt;td&gt;1円未満（$2^{26.6}$）&lt;/td&gt;  &lt;td&gt;約35円（$2^{39.9}$）&lt;/td&gt;     &lt;td&gt;約35万円（$2^{53.2}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;36種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;/td&gt;       &lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{20.7}$）&lt;/td&gt;&lt;td&gt;約100円（$2^{41.4}$）&lt;/td&gt;  &lt;td&gt;約1.65億円（$2^{62.0}$）&lt;/td&gt; &lt;td&gt;約276兆円（$2^{82.7}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;62種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;なし&lt;/td&gt;&lt;td&gt;1円未満（$2^{23.8}$）&lt;/td&gt;&lt;td&gt;約7,500円（$2^{47.6}$）&lt;/td&gt;&lt;td&gt;約1,120億円（$2^{71.5}$）&lt;/td&gt;&lt;td&gt;約165京円（$2^{95.3}$）&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;94種&lt;/td&gt;&lt;td&gt;0-9&lt;/td&gt;&lt;td&gt;a-z&lt;br&gt;A-Z&lt;/td&gt;&lt;td&gt;&lt;code style=&#39;font-size:smaller;&#39;&gt;! &#34; # $ %&lt;br&gt;&amp;amp; &#39; ( ) =&lt;br&gt;~ | - ^ `&lt;br&gt;¥ { @ [&lt;br&gt;+ * ] ; :&lt;br&gt;} &amp;lt; &amp;gt; ? _&lt;br&gt;, . /&lt;/code&gt;&lt;/td&gt;
                                                             &lt;td&gt;1円未満（$2^{26.2}$）&lt;/td&gt;&lt;td&gt;約21万円（$2^{52.4}$）&lt;/td&gt; &lt;td&gt;約16.5兆円（$2^{78.7}$）&lt;/td&gt; &lt;td&gt;約129,000京円（$2^{104.9}$）&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;パスワード解読の想定コスト例（&lt;q&gt;&lt;a href=&#39;https://www.ipa.go.jp/files/000026760.pdf&#39;&gt;情報漏えいを防ぐためのモバイルデバイス等設定マニュアル 解説編 &lt;sup&gt;&lt;i class=&#39;far fa-file-pdf&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt; 2.4.2.2項より）&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これは完全にランダムな文字列のパスワードを brute-force 攻撃によって1日で解読する際にかかるコストである。
36種の文字列の場合，8文字のパスワードでもたかだか100円のコストで破れてしまう点に注意して欲しい&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h3&gt;パスワードを覚えるなんて脳味噌の無駄遣い&lt;/h3&gt;
&lt;p&gt;これはいつも言っていることだが「&lt;a href=&#34;https://baldanders.info/blog/000739/&#34;&gt;パスワードを覚えるなんて脳味噌の無駄遣い&lt;/a&gt;」である。
人間の頭で考えるパスワードなんてたかが知れている。
brute-force を使うまでもなくもっと簡単に解読できる。&lt;/p&gt;
&lt;p&gt;個人番号カードの交付を受ける際は，パスワード管理ツール等を使って事前に3つの暗証番号と1つのパスワードを決めておくとよい。
私は &lt;a href=&#34;https://play.google.com/store/apps/details?id=keepass2android.keepass2android&#34; title=&#34;Keepass2Android Password Safe - Google Play の Android アプリ&#34;&gt;Keepass2Android&lt;/a&gt; を愛用しているので，交付までの待ち時間で暗証番号とパスワードを生成して登録しておいた。
（言うまでもないことだが，パスワード管理ツールのデータベースは確実に暗号化しておくんだよ）&lt;/p&gt;
&lt;h2&gt;個人番号カードの有効期限&lt;/h2&gt;
&lt;p&gt;個人番号カード自体は身分証明としても使え，10年の有効期限がある&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
厳密には交付から10回目の誕生日まで。
たとえば誕生日が12月31日の人が今日2016年2月16日に交付を受けたとしたら，2025年12月31日が有効期限となる。
そこからさらに延長するのであれば顔写真を撮り直して再交付してもらう必要がある。&lt;/p&gt;
&lt;p&gt;ただし署名用電子証明書および利用者証明用電子証明書については有効期限が5年となっている。
先程の例でいけば2020年12月31日が有効期限。&lt;/p&gt;
&lt;p&gt;役所等から有効期限について事前にアナウンスされることはない（詐欺防止のため？）。
したがってカードおよび証明書の管理は自分で行う必要がある。
ちなみにカードの有効期限（10年）はカードに印刷されているが&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;，電子証明書の有効期限は空欄になっている。
これって自分で書けってことなのかなぁ？&lt;/p&gt;
&lt;h2&gt;再交付&lt;/h2&gt;
&lt;p&gt;もちろん個人番号カードの紛失・盗難の際には再交付してもらえる&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。
ちなみに有料（800円＋200円）。
その前に一時停止してもらわないといけないが。
個人番号カードの裏にコールセンター（24時間受け付け）の番号が書いてあるので控えておくといいだろう。&lt;/p&gt;
&lt;p&gt;暗証番号やパスワードの変更も受けつけているそうな。
また暗証番号は3回，パスワードは5回間違うとロックアウトされるが，ロックアウトの解除は役所で申請書を書かせられるらしい。
面倒だがしょうがないか。&lt;/p&gt;
&lt;p&gt;また，氏名・生年月日・性別・住所が変更になった場合（記述間違いの更新を含む）は署名用電子証明書を更新する必要がある。
これも有料かな。&lt;/p&gt;
&lt;p&gt;個人番号カードにかぎらずカード状のものは紛失・盗難リスクが高いので，むやみに持ち歩かないほうがいいんだけどね。&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;「仕事が忙しい」は代理を立てる理由にならないらしい。役所によっては土日も受け付けてくれる場合がある。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;署名用電子証明書は15歳未満には発行されない。なお，電子証明書を個人番号カードに格納しない選択もできる。これは申請時に選択する。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;実際にはこんなに単純ではないのだが，8文字と12文字で解読しにくさが格段にアップするというのは覚えておいていいだろう。 &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;未成年者は5年。 &lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;面白いことに有効期限は元号ではなく西暦で書かれている。これって10年後も「平成」とは限らないってことなのかねぇ。 &lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;本当は個人番号自体も変更すべきだろうけど。情報漏洩等の場合は変更可能らしいが，現場では抵抗されるだろうなぁ。 &lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry>
</feed>
