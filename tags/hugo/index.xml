<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>List of hugo - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/tags/hugo/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/tags/hugo/index.xml" />
	<id>tag:text.Baldanders.info,2019-04-13:/tags</id>
	<updated>2019-04-13T19:05:15+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Hugo 0.55 リリースでまた後方互換性が壊れた</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/hugo/broken-backward-compatibility-by-hugo-0_55/" />
		<id>tag:text.Baldanders.info,2019-04-13:/hugo/broken-backward-compatibility-by-hugo-0_55/</id>
		<published>2019-04-13T10:05:15+00:00</published>
		<updated>2019-04-25T13:18:49+00:00</updated>
		<summary>しょうがないので shortcode を設計し直したですよ orz</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;h2 id=&#34;toc_0&#34;&gt;Shortcode の仕様変更&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.45 のときは組み込み &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; である &lt;a href=&#34;https://text.baldanders.info/hugo/cross-references-with-shortcodes/&#34;&gt;&lt;code&gt;ref&lt;/code&gt;/&lt;code&gt;relref&lt;/code&gt; の仕様変更&lt;/a&gt;だったが，今回は &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; そのものの仕様が変更になった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.0-relnotes/&#34;&gt;Hugo 0.55.0: The early Easter Egg Edition! | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Shortcodes using the &lt;code&gt;{{% %}}&lt;/code&gt; as the outer-most delimiter will now be fully rendered when sent to the content renderer (e.g. Blackfriday for Markdown), meaning they can be part of the generated table of contents, footnotes, etc.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.0-relnotes/&#34;&gt;Hugo 0.55.0: The early Easter Egg Edition!&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;具体的な例を挙げたほうが分かりやすいだろう。&lt;/p&gt;

&lt;p&gt;たとえば記述内容を &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 要素で囲むだけの簡単な &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; “&lt;code&gt;div-box&lt;/code&gt;” を作ってみる。
コードはこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この &lt;code&gt;div-box&lt;/code&gt; を使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; div-box &amp;gt;}}**Hello world!**{{&amp;lt; /div-box &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と書けば &lt;code&gt;.Inner&lt;/code&gt; 変数の内容がそのまま展開されて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;**Hello world!**&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となる。
ここで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{% div-box %}}**Hello world!**{{% /div-box %}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と書き換えると，以前のバージョンでは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;strong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hello world!&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;strong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように &lt;code&gt;.Inner&lt;/code&gt; 変数の内容が markdown の文法に従って変換されていたのが， 0.55 からは &lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; と同じように&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;**Hello world!**&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と素通ししてしまうのだ。
もし markdown として処理したければ &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; 側で&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner | markdownify }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と &lt;code&gt;.Inner&lt;/code&gt; 変数の内容を &lt;code&gt;markdownify&lt;/code&gt; 関数に渡して明示的に変換する必要がある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c1&#34;&gt;&lt;a href=&#34;#fn:c1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;なんでこんなことになったかというと &lt;code&gt;{{% %}}&lt;/code&gt; での処理は地の記述と連動しているらしい。
たとえば &lt;code&gt;span&lt;/code&gt; という名前で以下の内容の &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; をつくり&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを markdown の表の中で使うと&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;| 強調したい |
| ---------- |
| {{&amp;lt; span &amp;gt;}}**強調**{{&amp;lt; /span &amp;gt;}} |
| {{% span %}}**強調**{{% /span %}} |&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;強調したい&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span&gt;**強調**&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;span&gt;&lt;strong&gt;強調&lt;/strong&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;という感じに &lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; と &lt;code&gt;{{% %}}&lt;/code&gt; で違いが生じる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; のテンプレート処理は文脈依存になっていて，同じ記述でもどの要素の中で書かれるか（&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素か &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 要素か，あるいは JavaScript か CSS か）で出力が違ったりする。
おそらく &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; の &lt;code&gt;{{% %}}&lt;/code&gt; 記述でも同じように文脈依存で出力が変わるようにしたかったのだろう。&lt;/p&gt;

&lt;p&gt;でも，私は &lt;code&gt;.Inner&lt;/code&gt; 変数の展開を &lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; か &lt;code&gt;{{% %}}&lt;/code&gt; かで使い分けていたので，今回のアップデートで大ダメージを食らってしまったですよ。
しょうがないので &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; を設計し直したけどね &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;今後の &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; の運用方針は以下のような感じだろうか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Inner&lt;/code&gt; の内容を markdown ドキュメントとして処理するかどうか明示的に制御する場合は &lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; を使う&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.Inner&lt;/code&gt; の処理を文脈依存で行う（&lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; を入れ子にするなどの）場合は &lt;code&gt;{{% %}}&lt;/code&gt; を使う&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;後方互換性が壊れる変更は，少なくとも最初はオプトアウトではなくオプトインで組み込めるようにして欲しい。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Shortcode の入れ子ができてる&lt;/h2&gt;

&lt;p&gt;今回いろいろ弄っていて気がついたのだが，いつの間にか &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; の入れ子ができるようになってたんだね。
いつのバージョンからだろう。&lt;/p&gt;

&lt;p&gt;たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{% div-box %}}{{% ruby &amp;#34;Hello world!&amp;#34; %}}こんにちは世界{{% /ruby %}}{{% /div-box %}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と書くと&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;box&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ruby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;こんにちは世界&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Hello world!&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;) &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ruby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;box&#34;&gt;&lt;ruby&gt;&lt;rb&gt;こんにちは世界&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Hello world!&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;&lt;/div&gt;

&lt;p&gt;などとできるようになっていた。
入れ子記述は &lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; でも &lt;code&gt;{{% %}}&lt;/code&gt; でもできる。
&lt;code&gt;{{&amp;lt; &amp;gt;}}&lt;/code&gt; と &lt;code&gt;{{% %}}&lt;/code&gt; 混在でもOK。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;ruby&lt;/code&gt; は自作の &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; で中身はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ruby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Inner }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; (&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ index .Params 0 }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;) &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ruby&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;特に権利は主張しないので（するほどの内容じゃないし）自由に使ってください。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Deprecated な変数・関数&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.55 を起動すると以下のワーニングが出るようになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ hugo
WARN 2019/04/13 09:00:00 Page&amp;#39;s .Hugo is deprecated and will be removed in a future release. Use the global hugo function.
WARN 2019/04/13 09:00:00 Page&amp;#39;s .RSSLink is deprecated and will be removed in a future release. Use the Output Format&amp;#39;s link, e.g. something like:
    {{ with .OutputFormats.Get &amp;#34;RSS&amp;#34; }}{{ .RelPermalink }}{{ end }}.
WARN 2019/04/13 09:00:00 Page&amp;#39;s .GetParam is deprecated and will be removed in a future release. Use .Param or .Params.myParam.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;テンプレート内で &lt;code&gt;.Hugo&lt;/code&gt;, &lt;code&gt;.RSSLink&lt;/code&gt; 変数および &lt;code&gt;.GetParam&lt;/code&gt; 関数が使われていると上記ワーニングが出る。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;.Hugo の廃止と代替手段&lt;/h3&gt;

&lt;p&gt;（以前の内容を書き換えた）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.Hugo&lt;/code&gt; 変数は将来バージョンで削除されるようだ。
代替として（変数ではなく） &lt;code&gt;hugo&lt;/code&gt; 関数が用意されている（Thanx &lt;a href=&#34;https://twitter.com/piris314/status/1117092823159853057&#34;&gt;@peaceiris&lt;/a&gt;）。
出力例は以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
	&lt;th&gt;テンプレート&lt;/th&gt;
	&lt;th&gt;出力内容&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;
	&lt;td&gt;&lt;code&gt;{{ hugo.Generator }}&lt;/code&gt;&lt;/td&gt;
	&lt;td&gt;&lt;code&gt;&amp;lt;meta name=&amp;#34;generator&amp;#34; content=&amp;#34;Hugo 0.55.5&amp;#34; /&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
	&lt;td&gt;&lt;code&gt;{{ hugo.Version }}&lt;/code&gt;&lt;/td&gt;
	&lt;td&gt;&lt;code&gt;0.55.5&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
	&lt;td&gt;&lt;code&gt;{{ hugo.CommitHash }}&lt;/code&gt;&lt;/td&gt;
	&lt;td&gt;&lt;code&gt;a83256b9&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
	&lt;td&gt;&lt;code&gt;{{ hugo.BuildDate }}&lt;/code&gt;&lt;/td&gt;
	&lt;td&gt;&lt;code&gt;2019-05-02T13:03:36Z&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
	&lt;td&gt;&lt;code&gt;{{ hugo.Environment }}&lt;/code&gt;&lt;/td&gt;
	&lt;td&gt;&lt;code&gt;production&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;この手が使えるなら &lt;code&gt;.Site&lt;/code&gt; 変数も関数で用意してほしいものである。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;.RSSLink の廃止と代替手段&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.RSSLink&lt;/code&gt; 変数も将来バージョンで削除されるようだ。
代替として &lt;code&gt;.AlternativeOutputFormats&lt;/code&gt; および &lt;code&gt;.OutputFormats&lt;/code&gt; 変数が使える。
たとえば &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素内なら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ with .Site.Home.AlternativeOutputFormats.Get &amp;#34;RSS&amp;#34; }}
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;alternate&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .Permalink }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/rss+xml&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ $.Site.Title | plainify }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と書けばいいし &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素以外なら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ with .OutputFormats.Get &amp;#34;RSS&amp;#34; }}
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;{{ .RelPermalink }}&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;Feed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Feed&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などと書ける。
&lt;code&gt;.AlternativeOutputFormats&lt;/code&gt; および &lt;code&gt;.OutputFormats&lt;/code&gt; 変数はかなり応用範囲が広くて，たとえば私は&lt;a href=&#34;https://text.baldanders.info/hugo/feed-with-json-format/&#34; title=&#34;JSON 形式で Feed を出力する&#34;&gt;フィードを JSON 形式でも用意&lt;/a&gt;しているが，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ with .Site.Home.AlternativeOutputFormats.Get &amp;#34;JSON&amp;#34; }}
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;alternate&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .Permalink }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ $.Site.Title | plainify }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と書けば簡単に &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素に組み込める。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;.GetParam の廃止と代替手段&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.GetParam&lt;/code&gt; 関数については随分前からアナウンスがあったので使っている人はいないと思うが &lt;code&gt;.Param&lt;/code&gt; 関数で代替できる。&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.1-relnotes/&#34;&gt;0.55.1: 3 Bug Fixes | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.2-relnotes/&#34;&gt;Hugo 0.55.2: Some Important Bug Fixes | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.3-relnotes/&#34;&gt;Hugo 0.55.3: A Few More Bug Fixes! | Hugo&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/news/0.55.4-relnotes/&#34;&gt;Hugo 0.55.4: Some Bug Fixes | Hugo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/peaceiris/items/b6d611e184b2f28cc0ab&#34;&gt;.Hugo.Generator は廃止されるので hugo.Generator を使おう - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/hugo/shortcodes/&#34;&gt;Shortcodes で HTML コードを埋め込む&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:c1&#34;&gt;もうひとつの方法としてはテンプレート・ファイルの先頭で &lt;code&gt;{{ $_hugo_config := `{ &amp;quot;version&amp;quot;: 1 }` }}&lt;/code&gt; と呪文を唱えることで 0.55 以前の動作に戻る。が，これ将来バージョンで無効になるよなぁ，多分。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>JSON 形式で Feed を出力する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/hugo/feed-with-json-format/" />
		<id>tag:text.Baldanders.info,2019-02-19:/hugo/feed-with-json-format/</id>
		<published>2019-02-19T13:54:05+00:00</published>
		<updated>2019-04-13T05:11:15+00:00</updated>
		<summary>Hugo では JSON 形式のファイルも出力できる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;今回も小ネタ。&lt;/p&gt;

&lt;p&gt;サイトの feed は RSS や Atom といった XML 形式を使うのが普通だが，他サイトの連携を考えるなら JSON 形式で出力できれば色々と便利そうである。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; では JSON 形式のファイルも出力できる。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;JSON 形式のファイルを出力するよう設定する。&lt;/h2&gt;

&lt;p&gt;まずは JSON 形式のファイルを出力できるよう設定ファイル（&lt;code&gt;config.toml&lt;/code&gt; など）に以下の記述を追加する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;home&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;HTML&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;RSS&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;JSON&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでサイトのルートディレクトリに &lt;code&gt;index.html&lt;/code&gt;, &lt;code&gt;index.xml&lt;/code&gt;, そして &lt;code&gt;index.json&lt;/code&gt; ファイルを出力できるようになった。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;JSON ファイルのテンプレートを作成する&lt;/h2&gt;

&lt;p&gt;テンプレートファイルを格納する &lt;code&gt;layouts/&lt;/code&gt; フォルダの直下または &lt;code&gt;layouts/_default/&lt;/code&gt; フォルダに &lt;code&gt;index.json&lt;/code&gt; または &lt;code&gt;home.json&lt;/code&gt; ファイルを作成する。
中身は例えばこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
  &amp;#34;title&amp;#34;: {{ .Site.Title | jsonify }},
  &amp;#34;url&amp;#34;: {{ .Permalink | jsonify }},{{ with .OutputFormats.Get &amp;#34;RSS&amp;#34; }}
  &amp;#34;feed&amp;#34;: {{ .Permalink | jsonify }},{{ end }}
  &amp;#34;entry&amp;#34;: [{{ range $i, $v := first 3 .Data.Pages }}{{ if ne $i 0 }},{{ end }}{{ with $v }}
    {
      &amp;#34;title&amp;#34;: {{ .Title | jsonify }},{{ with .Section }}
      &amp;#34;section&amp;#34;: {{ . | jsonify }},{{ end }}{{ with .Description }}
      &amp;#34;description&amp;#34;: {{ . | jsonify }},{{ end }}
      &amp;#34;url&amp;#34;: {{ .Permalink | jsonify }},
      &amp;#34;published&amp;#34;: {{ .Date.UTC.Format &amp;#34;2006-01-02T15:04:05-07:00&amp;#34; | jsonify }},
      &amp;#34;update&amp;#34;: {{ .Lastmod.UTC.Format &amp;#34;2006-01-02T15:04:05-07:00&amp;#34; | jsonify }}
    }{{ end }}{{ end }}
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでコンパイルを行うと以下のような内容で &lt;code&gt;index.json&lt;/code&gt; ファイルが出力される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://text.baldanders.info/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;feed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://text.baldanders.info/index.xml&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;#34;entry&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;“Article 13” に関するブックマーク&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;section&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;remark&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;英語不得手の私としては難儀していたが，ようやく日本語の記事を見かけるようになった。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://text.baldanders.info/remark/2019/02/bookmarks-for-article-13/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;published&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-19T13:04:51+00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-19T13:05:49+00:00&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-17 のブックマーク&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;section&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;bookmarks&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;「火星ローバー「オポチュニティ」ミッション終了、15年の活動に幕」他&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://text.baldanders.info/bookmarks/2019/02/17-bookmarks/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;published&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-17T12:25:23+00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-17T12:25:48+00:00&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hugo で Git 情報を取得する&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;section&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hugo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hugo の環境を git で管理している場合はコミット情報等をテンプレートに組み込むことができる。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Spiegel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://creativecommons.org/licenses/by-sa/4.0/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://text.baldanders.info/hugo/gitinfo/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;published&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-16T13:15:35+00:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nt&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2019-02-16T13:20:26+00:00&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; では出力ファイルについてかなり細かく制御することが出来るが，今回はこのくらいにしておこう（笑） そのうち詳しい記事を書くこともあるかも知れない。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/output-formats/&#34;&gt;Custom Output Formats | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hugojapan/hugoDocs&#34;&gt;GitHub - hugojapan/hugoDocs: Hugo 日本語ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Hugo で Git 情報を取得する</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/hugo/gitinfo/" />
		<id>tag:text.Baldanders.info,2019-02-16:/hugo/gitinfo/</id>
		<published>2019-02-16T13:15:35+00:00</published>
		<updated>2019-02-16T13:20:26+00:00</updated>
		<summary>Hugo の環境を git で管理している場合はコミット情報等をテンプレートに組み込むことができる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;を改装するにあたって &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の環境を見直している。
この作業でやったことをこのセクションで少しずつ紹介していこうと思う。&lt;/p&gt;

&lt;p&gt;今回は &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; との連携の話。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;.GitInfo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の環境を &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; で管理している場合は以下のコミット情報等をテンプレートに組み込むことができる。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;テンプレート変数&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザ名&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorEmail&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ユーザのメールアドレス&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AuthorDate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コミット時刻&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.Hash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リビジョン値&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.AbbreviatedHash&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;リビジョン値（短縮値）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;.GitInfo.Subject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;コミット・メッセージ&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;.GitInfo&lt;/code&gt; を有効にするには &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; コマンド起動時に &lt;code&gt;--enableGitInfo&lt;/code&gt; オプションを付加するか設定ファイル（&lt;code&gt;config.toml&lt;/code&gt; など）に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;enableGitInfo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と設定すればよい。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;ページ更新時刻 .Lastmod をコミット時刻にする&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;.GitInfo&lt;/code&gt; が有効であればページの更新時刻を示すテンプレート変数 &lt;code&gt;.Lastmod&lt;/code&gt; の値がコミット時刻になる。&lt;/p&gt;

&lt;p&gt;テンプレート変数 &lt;code&gt;.Lastmod&lt;/code&gt; は，既定ではページの front matter 内の以下の変数にマッピングされている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:git&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lastmod&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;publishDate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配列の順番がそのまま優先順位になっている。
つまり &lt;code&gt;&amp;quot;:git&amp;quot;&lt;/code&gt; がコミット時刻 &lt;code&gt;.GitInfo.AuthorDate&lt;/code&gt; に対応する。&lt;/p&gt;

&lt;p&gt;この設定は設定ファイルで変更可能なので，たとえば &lt;code&gt;.GitInfo&lt;/code&gt; を有効にしたいがコミット時刻を更新時刻に使いたくない場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;lastmod&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;publishDate&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとしてしまってもよい。&lt;/p&gt;

&lt;p&gt;ちなみに入力ファイルのタイムスタンプを更新時刻にする場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;frontmatter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;lastmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:fileModTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとする。
まぁ今どきファイルのタイムスタンプを更新時刻にするのはオススメではないが。&lt;/p&gt;
</content>
	</entry><entry>
		<title>さくらのレンタルサーバ上で Hugo によるサイト管理を行う</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/01/sakura-and-hugo/" />
		<id>tag:text.Baldanders.info,2019-01-21:/remark/2019/01/sakura-and-hugo/</id>
		<published>2019-01-21T14:03:56+00:00</published>
		<updated>2019-01-21T14:07:47+00:00</updated>
		<summary>サーバ側で動く CMS なんか今さら使う気にもならないし，でもこれで多少は楽にサイト管理ができそうである。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;前回， &lt;a href=&#34;https://text.baldanders.info/remark/2019/01/escape-from-flickr/&#34; title=&#34;Flickr から写真を引き揚げました&#34;&gt;Flickr から引き揚げた写真を展示するためにサイトを公開した話&lt;/a&gt;をしたが，&lt;a href=&#34;https://photo.baldanders.info/&#34; title=&#34;photo.Baldanders.info&#34;&gt;このサイト&lt;/a&gt;は静的サイト・ジェネレータである &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; で管理を行っている。
今回は「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上で &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; によるサイト管理を行う手順について覚え書きとして記しておく。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」について&lt;/h2&gt;

&lt;p&gt;まず「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」でサイトを公開するまでの手順については以下のページが参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rinopo/sakura-init&#34;&gt;rinopo/sakura-init: さくらのレンタルサーバを借りたとき最初にすること&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;リンク先の記事は特にマルチドメインでサイトを運用する際に有用な情報となるだろう。
今回の記事では &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ直下にサイトを公開する場合の手順について書くが，マルチドメインでもそれほど変わらないはずである。&lt;/p&gt;

&lt;p&gt;前提として「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上で &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; が動作する必要がある。
昔は自前で &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; をインストールする必要があったが，今は予め用意されているようである。
ただし，私が利用しているサーバではエラく古いバージョンだった（なんで？）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ which git
/usr/local/bin/git

$ git version
git version 2.7.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかも git-submodule すら入っていない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git submodule version
fatal: git was built without support for git-submodule (NO_PERL=1).&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで，サイト管理用のリポジトリを構成する場合には注意が必要である。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用にベア・リポジトリを作成する&lt;/h2&gt;

&lt;p&gt;まずは &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用にベア・リポジトリを「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上に作成する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git init --bare ~/repos/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;~/repos/hugo-env.git&lt;/code&gt; ディレクトリに &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用のベア・リポジトリが作成される。
当然ながら &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ以下には作らないこと。&lt;/p&gt;

&lt;p&gt;このベア・リポジトリをリモートから clone するには以下のコマンドラインでよい（&lt;code&gt;example.com&lt;/code&gt; ドメインで構成している場合&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sakura1&#34;&gt;&lt;a href=&#34;#fn:sakura1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[client] $ git clone ssh://example.com/home/username/repos/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは任意の環境でコンテンツを記述できる。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; にはサーバモード（簡易サーバとして構成することも可能）があるので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[client] $ hugo server -D -w&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとするとよい。
&lt;code&gt;-D&lt;/code&gt; (または &lt;code&gt;--buildDrafts&lt;/code&gt;) オプションはドラフト・ページを含めてビルドしてくれる。
また &lt;code&gt;-w&lt;/code&gt; (または &lt;code&gt;--watch&lt;/code&gt;) オプションを付けておけば &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 環境内のファイルが更新されるたびに自動的にリビルドしてくれる。&lt;/p&gt;

&lt;p&gt;サーバモードは本当に便利で，特に &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; のサーバモードは一瞬でサイトを更新してくれるので，ブラウザで出来上がりをリアルタイムで見ながら編集できる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ll1&#34;&gt;&lt;a href=&#34;#fn:ll1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
これのおかげでテキスト・エディタの markdown previewer 機能が要らなくなりました（笑）&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;サーバ側に Deploy 用のリポジトリを作成する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; でビルドしたコンテンツを deploy できるように，サーバ側でリポジトリを clone する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git clone ~/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これも当然だが &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ以下には作らないこと。&lt;/p&gt;

&lt;p&gt;更に &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の実行バイナリを &lt;code&gt;$PATH&lt;/code&gt; の通っているディレクトリに入れる。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の実行バイナリは&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; title=&#34;Releases · gohugoio/hugo&#34;&gt;リリースページ&lt;/a&gt;で取得できる。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」は FreeBSD で構成されているので &lt;code&gt;hugo_x.xx_FreeBSD-64bit.tar.gz&lt;/code&gt; (&lt;code&gt;x.xx&lt;/code&gt; はバージョン番号) をダウンロードし中にある &lt;code&gt;hugo&lt;/code&gt; ファイルを使えばよい。
Go 製ツールはシングル・バイナリで動くのが素敵。&lt;/p&gt;

&lt;p&gt;Build &amp;amp; deploy は &lt;code&gt;hugo&lt;/code&gt; コマンド一発でできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd ~/hugo-env
$ hugo -d ~/www&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでビルドした結果をまるっと &lt;code&gt;~/www/&lt;/code&gt; ディレクトリに出力してくれる。&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Deploy の自動化&lt;/h2&gt;

&lt;p&gt;コンテンツを修正するたびにサーバに入って手動で pull &amp;amp; build &amp;amp; deploy というのも芸がないので，ベア・リポジトリに対して自動化の設定を行う。&lt;/p&gt;

&lt;p&gt;具体的にはベア・リポジトリの &lt;code&gt;hooks/&lt;/code&gt; ディレクトリに以下の内容で &lt;code&gt;post-update&lt;/code&gt; を追加する（実行権限の付与を忘れないこと）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/username/hugo-env &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;unset&lt;/span&gt; GIT_DIR
git pull origin master &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
hugo -d /home/username/www&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでリモートからの push でベア・リポジトリの内容が更新されるたびに上の shell スクリプトが走って deploy まで自動的に行ってくれる。
今回作成した &lt;a href=&#34;https://photo.baldanders.info/&#34;&gt;photo.Baldanders.info&lt;/a&gt; は regular page で2,900ページ余りあるのだが，上書き更新なら5秒前後でビルドが完了する。
不安なら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -d /home/username/www &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/nul &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とかでもいいかも。&lt;/p&gt;

&lt;p&gt;本当はコンテナを起動して云々とかやれば CI (Continuous Integration) ぽくてカッコよかったかも知れないが，この構成でも特に不自由しないし，問題ないだろう。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」はスタンダード・プランでもストレージが100GBもあるので「もっとリッチに使えれば」と常々思っていたが，&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/cms/&#34;&gt;サーバ側で動く CMS なんか今さら使う気にもならない&lt;/a&gt;し，でもこれで多少は楽にサイト管理ができそうである。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の基本的な使い方はこちらがオススメ&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/hugo/&#34;&gt;ゼロから始める Hugo&lt;/a&gt; : 拙文ご容赦&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://utwang.io/2013/01/04/jekyll-on-sakura/&#34;&gt;さくらのレンタルサーバ上でJekyllブログを公開 | Dev SandBox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- eof --&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:sakura1&#34;&gt;独自ドメインを使わない場合は &lt;code&gt;ssh://username@username.sakura.ne.jp/home/...&lt;/code&gt; のようにドメイン名の前に必ず「ユーザ名@」を付記すること。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sakura1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ll1&#34;&gt;ブラウザ側は &lt;a href=&#34;https://github.com/livereload/livereload-js&#34; title=&#34;livereload/livereload-js: LiveReload JavaScript code that communicates with the server and implements reloading&#34;&gt;livereload-js&lt;/a&gt; で自動的に更新しているようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ll1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Hugo におけるサイト内相互参照</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/hugo/cross-references-with-shortcodes/" />
		<id>tag:text.Baldanders.info,2018-08-18:/hugo/cross-references-with-shortcodes/</id>
		<published>2018-08-18T05:46:11+00:00</published>
		<updated>2019-01-07T04:28:43+00:00</updated>
		<summary>Hugo 0.45 から ref/relref の仕様が変わったので紹介する。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; ではサイト内の相互参照（リンク）を表現するために組み込み &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes | Hugo&#34;&gt;shortcode&lt;/a&gt; である &lt;code&gt;ref&lt;/code&gt; や &lt;code&gt;relref&lt;/code&gt; を使うのだが &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.45 から &lt;code&gt;ref&lt;/code&gt;/&lt;code&gt;relref&lt;/code&gt; の仕様が変わったので紹介する。&lt;/p&gt;

&lt;p&gt;例えば参照したい記事を &lt;code&gt;content/blog/entry.md&lt;/code&gt; とする。
他の記事からこの記事を参照したい場合， &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.45 より前のバージョンでは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; ref &amp;#34;blog/entry.md&amp;#34; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;または&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; relref &amp;#34;blog/entry.md&amp;#34; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように作業環境の &lt;code&gt;content&lt;/code&gt; フォルダ以下の相対パスを指定すればよかった。
これにより &lt;code&gt;ref&lt;/code&gt; コマンドなら &lt;code&gt;http(s)://site.name/blog/entry/&lt;/code&gt; に， &lt;code&gt;relref&lt;/code&gt; コマンドなら &lt;code&gt;/blog/entry/&lt;/code&gt; に展開されていた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.45 からは ビルド後のディレクトリ構成で考える。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; ref &amp;#34;/blog/entry.md&amp;#34; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あるいは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{&amp;lt; relref &amp;#34;entry.md&amp;#34; &amp;gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった感じ（サイトのルート・ディレクトリからの絶対パスを指定する場合 &lt;code&gt;blog/...&lt;/code&gt; ではなく &lt;code&gt;/blog/...&lt;/code&gt; となる点に注目）。
したがって &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 0.45 より前の古い表記では warning が発生するので注意が必要である。
また  &lt;code&gt;relref&lt;/code&gt; コマンドを使う際に絶対パスを指定した場合も warning になる。&lt;/p&gt;

&lt;p&gt;なお，このルールはテンプレートにも適用される。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{{ with .Site.GetPage &amp;#34;/blog/entry.md&amp;#34; }}{{ .Title }}{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとすれば任意の記事の情報を取得できる。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.45-relnotes/&#34;&gt;Hugo 0.45: Revival of ref, relref and GetPage | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content-management/cross-references/&#34;&gt;Links and Cross References | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Hugo v0.42 がリリース</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/06/hugo-v0_42-is-released/" />
		<id>tag:text.Baldanders.info,2018-06-24:/release/2018/06/hugo-v0_42-is-released/</id>
		<published>2018-06-24T09:50:58+00:00</published>
		<updated>2019-04-13T05:11:15+00:00</updated>
		<summary>テーマをコンポーネント化できるようになったらしい。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.42 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42&#34;&gt;Release v0.42 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Hugo 0.42 adds Theme Components. This is a really powerful new way of building your Hugo sites with reusable components. This is both Theme Composition and Theme Inheritance.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42&#34;&gt;Release v0.42&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで，テーマをコンポーネント化できるようになったらしい。
こんな感じに複数のテーマを指定できる（従来の単一指定でも問題ないようだ）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;my-shortcodes&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;base-theme&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hyde&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;確かに shortcodes だけを集めたテーマとか作ったら面白いかな？&lt;/p&gt;

&lt;p&gt;詳しくは以下のドキュメントを参考のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/themes/theme-components/&#34;&gt;Theme Components | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;【追記 2018-06-24】 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.42 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42.1&#34;&gt;Release v0.42.1 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合修正版。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Reset the global pages cache on server rebuilds 128f14ef @bep #4845&lt;/li&gt;
&lt;li&gt;Do not fail server build when /static is missing 34ee27a7 @bep #4846&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.42.1&#34;&gt;Release v0.42.1 · gohugoio/hugo&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;だそうな。&lt;/p&gt;
</content>
	</entry><entry>
		<title>Hugo v0.41 がリリース</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/05/hugo-v0_41-is-released/" />
		<id>tag:text.Baldanders.info,2018-05-28:/release/2018/05/hugo-v0_41-is-released/</id>
		<published>2018-05-28T11:15:30+00:00</published>
		<updated>2019-01-07T04:28:43+00:00</updated>
		<summary>プライバシー関連の設定項目が追加されたらしいのだが使い方がサッパリ分からん。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.41 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.41-relnotes/&#34;&gt;Hugo 0.41: Privacy Configuration for GDPR | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.41&#34;&gt;Release v0.41 · gohugoio/hugo · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;In Hugo 0.41 we add a new Privacy Configuration section to meet the new regulations in the new General Data Protection Regulation (GDPR). Many have contributed work on this project, but a special thanks to @onedrawingperday, @jhabdas, and @it-gro.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.41&#34;&gt;Release v0.41&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;てぇことらしいのだが使い方がサッパリ分からん。
まぁ，個人サイトはあんまり関係ないだろう。&lt;/p&gt;
</content>
	</entry><entry>
		<title>Hugo v0.40 がリリース</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/04/hugo-v0_40-is-released/" />
		<id>tag:text.Baldanders.info,2018-04-23:/release/2018/04/hugo-v0_40-is-released/</id>
		<published>2018-04-23T12:45:35+00:00</published>
		<updated>2019-04-13T05:11:15+00:00</updated>
		<summary>ちうわけで，マジお疲れ様です。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.40 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.40-relnotes/&#34;&gt;The Revival of the Shortcodes | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40&#34;&gt;Release v0.40 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Hugo 0.40 is The Revival of the Shortcodes. Shortcodes is one of the prime features in Hugo. Really useful, but it has had some known shortcomings. &lt;a href=&#34;https://github.com/bep&#34;&gt;@bep&lt;/a&gt; has been really busy the last week to address those.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40&#34;&gt;Release v0.40&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ちうわけで，マジお疲れ様です。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Content&lt;/code&gt; for a page retrieved in a query in a shortcode is now almost always available. Note that shortcodes can include content that can include shortcodes that can include content... It is possible to bite your tail. See more below.&lt;/li&gt;
&lt;li&gt;Shortcodes are now processed and rendered in their order of appearance.&lt;/li&gt;
&lt;li&gt;Related to the above, we have now added a zero-based &lt;code&gt;.Ordinal&lt;/code&gt; to the shortcode.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40&#34;&gt;Release v0.40&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;【追記 2018-04-28】 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.40.1 がリリース&lt;/h2&gt;

&lt;p&gt;不具合修正版。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This release fixes some shortcode vs &lt;code&gt;.Content &lt;/code&gt; corner cases introduced in Hugo 0.40&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40.1&#34;&gt;Release v0.40.1 · gohugoio/hugo&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;だそうな。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;【追記 2018-04-30】 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.40.2 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40.2&#34;&gt;Release v0.40.2 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.40.2-relnotes/&#34;&gt;Hugo 0.40.2: Two Bug fixes | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回も不具合の修正のみ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This release fixes some regressions introduced in Hugo 0.40. See the &lt;a href=&#34;https://github.com/gohugoio/hugo/milestone/62?closed=1&#34;&gt;milestone&lt;/a&gt; for an issue list.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40.2&#34;&gt;Release v0.40.2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;【追記 2018-05-10】 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.40.3 がリリース&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.40.3-relnotes/&#34;&gt;Hugo 0.40.3: One Bug Fix | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40.3&#34;&gt;Release v0.40.3 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回も不具合の修正。
レアケースのようだ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Hugo 0.40.3 fixes a possible .Content truncation issue introduced in 0.40.1 90d0d830 @bep #4706. This should be very rare. It has been reported by only one user on a synthetic site. We have tested a number of big sites that does not show this problem with 0.40.2, but this is serious enough to warrant a patch release.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.40.3&#34;&gt;Release v0.40.3&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/hugo/&#34;&gt;ゼロから始める Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Hugo v0.39 がリリース</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/04/hugo-v0_39-is-released/" />
		<id>tag:text.Baldanders.info,2018-04-18:/release/2018/04/hugo-v0_39-is-released/</id>
		<published>2018-04-18T10:56:28+00:00</published>
		<updated>2019-01-07T04:28:43+00:00</updated>
		<summary>かなり派手にリファクタリングが行われている模様。他にもテンプレート関数の追加など。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.39 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.39&#34;&gt;Release v0.39 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このバージョンでは &lt;code&gt;commands&lt;/code&gt; パッケージを中心にかなりのリファクタリングが行われたようだ。
そのほかにも&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;But this release isn&#39;t all boring and technical: It includes several important bug fixes, several useful new template functions, and Resource.Content allows you to get any resource&#39;s content without having to fiddle with file paths and readFile.&lt;br&gt;
The main.Execute function now returns a Response object and the global Hugo variable is removed. This is only relevant for people building some kind of API around Hugo.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.39&#34;&gt;Release v0.39&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;という感じでいろいろ変わっている。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/hugo/&#34;&gt;ゼロから始める Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Hugo v0.38.2 がリリース</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2018/04/hugo-v0_38_2-is-released/" />
		<id>tag:text.Baldanders.info,2018-04-10:/release/2018/04/hugo-v0_38_2-is-released/</id>
		<published>2018-04-10T11:28:59+00:00</published>
		<updated>2019-04-13T05:11:15+00:00</updated>
		<summary>不具合の修正がメイン。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;このブログのサイト・ジェネレータでもある &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.38.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.38.2-relnotes/&#34;&gt;Hugo 0.38.2: Two Bugfixes | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.38.2&#34;&gt;Release v0.38.2 · gohugoio/hugo · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不具合の修正がメインのようだ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;This is a bug-fix release with a couple of important fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix handling of the &lt;code&gt;--contentDir&lt;/code&gt; and possibly other related flags 080302eb @bep #4589&lt;/li&gt;
&lt;li&gt;Fix handling of content files with &amp;quot;.&amp;quot; in them 2817e842 @bep #4559&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also in this release:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set .Parent in bundled pages to its owner 6792d86a @bep #4582&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.38.2&#34;&gt;Release v0.38.2&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
</content>
	</entry>
</feed>
