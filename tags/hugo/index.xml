<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>Hugo - text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/tags/hugo/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/tags/hugo/index.xml" />
	<id>tag:text.Baldanders.info,2017-09-21:/tags</id>
	<updated>2017-09-21T16:54:32+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.27.1</generator>

	
	<entry>
		<title>そうだ，シーケンス図を描こう！ （一応クラス図も描けるよ） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/09/sequence-diagram/" />
		<id>tag:text.Baldanders.info,2017-09-21:/remark/2017/09/sequence-diagram/</id>
		<published>2017-09-21T16:54:32+09:00</published>
		<updated>2017-09-21T20:18:33+09:00</updated>
		<summary>久しぶりに本ブログをいじくって mermaid でシーケンス図を描けるようにしてみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;久しぶりに&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;をいじくって &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; でシーケンス図を描けるようにしてみる。&lt;/p&gt;

&lt;h2 id=&#34;シーケンス図とは&#34;&gt;シーケンス図とは&lt;/h2&gt;

&lt;p&gt;一応説明しておくと，シーケンス図というのは複数の「もの」の間でのやり取りを時系列で表現したものである。
「もの」は相互作用するものなら何でもよく，以下のような会話も表現できる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
sequenceDiagram
    カバ-&gt;&gt;+カバン: あなた，泳げまして？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;+カバン: 空は飛べるんですの？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;+カバン: じゃあ，足が速いとか？
    カバン--&gt;&gt;-カバ: いえ
    カバ-&gt;&gt;カバン: あなた，何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&gt;&gt;カバン: ううっ
    end
&lt;/div&gt;
&lt;figcaption&gt;カバとカバン&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;縦のラインを「ライフライン&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ll&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ll&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;」と呼び（上から下に時間が流れる），横向きの矢印を「メッセージ」と呼ぶ。
“loop” で囲まれている部分は「複合フラグメント」と呼ばれるもので，シーケンス内の処理のかたまりを指す。
“loop” は文字通り繰り返し処理のこと。
カバンはカバに「何もできない」と言われて悶々としてしまったわけですね（笑）&lt;/p&gt;

&lt;p&gt;シーケンス図はオブジェクト指向設計ではとても重宝されている。
クラス間の相互作用を記述するだけじゃなくて，要件定義で「登場人物（人間とは限らない）」の関係を記述するのにも使われる（もちろん UML で使われる図はシーケンス図だけじゃないけどね）。&lt;/p&gt;

&lt;p&gt;ただ，これを手描きで作図するのは結構面倒くさい（図を描きながら試行錯誤するし）。
企業向けなら &lt;a href=&#34;http://astah.change-vision.com/&#34; title=&#34;astah システム設計、ソフトウェア開発支援ツール | Astah&#34;&gt;Astah*&lt;/a&gt; のような開発支援ツールを使う手もあるけれど，個人では手にあまるものだし，どうせ描くならテキスト入力でサクッとやりたいよね。&lt;/p&gt;

&lt;h2 id=&#34;mermaid-記法と-mermaid-js&#34;&gt;Mermaid 記法と  mermaid.js&lt;/h2&gt;

&lt;p&gt;そうした需要に応えてくれるのが &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; である。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/knsv/mermaid&#34;&gt;knsv/mermaid: Generation of diagram and flowchart from text in a similar manner as markdown&lt;/a&gt; ： こちらのドキュメントのほうが詳しい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえば，先程の「カバとカバン」のやり取りは  &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法で以下のように表せる。
直感的で分かりやすいでしょ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sd1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:sd1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた、泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ、足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた、何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この記述をもとに Web ページ上で描画を行うには mermaid.js を使う。&lt;/p&gt;

&lt;h3 id=&#34;mermaid-js-の設定&#34;&gt;mermaid.js の設定&lt;/h3&gt;

&lt;p&gt;まず mermaid.js のセットアップは以下の通り。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;https://unpkg.com/mermaid/dist/mermaid.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  mermaid.initialize({startOnLoad: true, theme: &#39;neutral&#39;});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この記述を HTML の末尾（&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; タグの直前）に記述する。&lt;/p&gt;

&lt;p&gt;mermaid.js は &lt;a href=&#34;https://unpkg.com/mermaid/&#34;&gt;CDN (Content Delivery Network) が用意されている&lt;/a&gt;ので利用することをお勧めする。
バージョンを指定する場合は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unpkg.com/mermaid@7.1.0/dist/mermaid.min.js&#34;&gt;https://unpkg.com/mermaid@7.1.0/dist/mermaid.min.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のように記述する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mermaid.initialize()&lt;/code&gt; 関数は初期化と描画を行う。
ページロード時に描画を行う場合は &lt;code&gt;startOnLoad&lt;/code&gt; を true にする。
また &lt;code&gt;theme&lt;/code&gt; は今（v7.1.0）のところ以下の4つが用意されている。
お好みでどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;neutral&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さらに mermaid.js に記述部分を認識させるために &lt;code&gt;&amp;lt;div class=&amp;quot;mermaid&amp;quot;&amp;gt; ... &amp;lt;/div&amp;gt;&lt;/code&gt; で囲む。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;mermaid&amp;quot;&amp;gt;
sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた、泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ、足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた、何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで最初に挙げたシーケンス図を描画してくれる。&lt;/p&gt;

&lt;h3 id=&#34;hugo-用の-shortcode&#34;&gt;Hugo 用の shortcode&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo | A Fast and Flexible Website Generator&#34;&gt;Hugo&lt;/a&gt; 用に &lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env/blob/master/layouts/shortcodes/fig-mermaid.html&#34;&gt;shortcode を作ってみた&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&amp;gt;
&amp;lt;div class=&amp;quot;mermaid&amp;quot;&amp;gt;{{ .Inner }}&amp;lt;/div&amp;gt;
{{ if .Get &amp;quot;title&amp;quot;}}&amp;lt;figcaption&amp;gt;{{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}{{ .Get &amp;quot;title&amp;quot; }}{{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/figcaption&amp;gt;{{ end }}
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この shortcode を使うなら以下のように記述すればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;{{&amp;lt; fig-mermaid title=&amp;quot;カバとカバン&amp;quot; &amp;gt;}}
sequenceDiagram
    カバ-&amp;gt;&amp;gt;+カバン: あなた，泳げまして？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: 空は飛べるんですの？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;+カバン: じゃあ，足が速いとか？
    カバン--&amp;gt;&amp;gt;-カバ: いえ
    カバ-&amp;gt;&amp;gt;カバン: あなた，何にもできないのねぇ
    loop ひとりヘコむ
        カバン-&amp;gt;&amp;gt;カバン: ううっ
    end
{{&amp;lt; /fig-mermaid &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo | A Fast and Flexible Website Generator&#34;&gt;Hugo&lt;/a&gt; を使っておられる方は参考にどうぞ。&lt;/p&gt;

&lt;h2 id=&#34;複雑な関係を分かりやすくする&#34;&gt;複雑な関係を分かりやすくする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;にシーケンス図を組み込もうと思ったのは徳島県のチケット売買詐欺事件のシーケンスが分かりにくかったからだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20170910/1505065248&#34;&gt;徳島県警察の誤認逮捕事件についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で，リンク先の図を元にしてシーケンス図を起こしてみたのがこれ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
sequenceDiagram
    participant A as 愛知県女性A
    participant Tw as Twitter
    participant B as 京都女子中学生B
    participant C as 徳島県女子高生C
    participant D as 和歌山県女性D
    participant Tk as チケット売買サイト
    participant E as 関東女性E
    A-&gt;&gt;Tw: チケット売ります
    C-&gt;&gt;Tw: 購入希望
    D-&gt;&gt;Tw: 購入希望
    B-&gt;&gt;+Tw: 
    Tw--&gt;&gt;-B: A,B,Cのやり取りを発見
    B-&gt;&gt;+A: 売買交渉：8万円で購入希望
    B-&gt;&gt;+C: Aとして売買交渉：Aの口座に4万円送金指示
    B-&gt;&gt;+D: Aとして売買交渉：Aの口座に4万円送金指示
    B-&gt;&gt;+Tk: A名義でチケット出品
    C--&gt;&gt;-A: 4万円振込
    D--&gt;&gt;-A: 4万円振込
    E-&gt;&gt;Tk: 6万5千円で落札，送金
    B-&gt;&gt;A: 送付先をEの住所へ指示
    A--&gt;&gt;-E: チケット送付
    Tk--&gt;&gt;-B: 約6万円入金
&lt;/div&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20170910/1505065248&#34;&gt;「[徳島県警察の誤認逮捕事件についてまとめてみた」より&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法ではこんな感じになる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;sequenceDiagram
    participant A as 愛知県女性A
    participant Tw as Twitter
    participant B as 京都女子中学生B
    participant C as 徳島県女子高生C
    participant D as 和歌山県女性D
    participant Tk as チケット売買サイト
    participant E as 関東女性E
    A-&amp;gt;&amp;gt;Tw: チケット売ります
    C-&amp;gt;&amp;gt;Tw: 購入希望
    D-&amp;gt;&amp;gt;Tw: 購入希望
    B-&amp;gt;&amp;gt;+Tw: 
    Tw--&amp;gt;&amp;gt;-B: A,B,Cのやり取りを発見
    B-&amp;gt;&amp;gt;+A: 売買交渉：8万円で購入希望
    B-&amp;gt;&amp;gt;+C: Aとして売買交渉：Aの口座に4万円送金指示
    B-&amp;gt;&amp;gt;+D: Aとして売買交渉：Aの口座に4万円送金指示
    B-&amp;gt;&amp;gt;+Tk: A名義でチケット出品
    C--&amp;gt;&amp;gt;-A: 4万円振込
    D--&amp;gt;&amp;gt;-A: 4万円振込
    E-&amp;gt;&amp;gt;Tk: 6万5千円で落札，送金
    B-&amp;gt;&amp;gt;A: 送付先をEの住所へ指示
    A--&amp;gt;&amp;gt;-E: チケット送付
    Tk--&amp;gt;&amp;gt;-B: 約6万円入金
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし，改めて見るとホンマ凄いよねぇ。
これを本当に一人で考えて実行したのならちょとした天才かもしれん。&lt;/p&gt;

&lt;h2 id=&#34;シーケンス図以外の図も描けるよ&#34;&gt;シーケンス図以外の図も描けるよ&lt;/h2&gt;

&lt;p&gt;さて，今（v7.1.0）のところ  &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; 記法および mermaid.js は以下の図をサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;フローチャート&lt;/li&gt;
&lt;li&gt;シーケンス図&lt;/li&gt;
&lt;li&gt;ガント図&lt;/li&gt;
&lt;li&gt;クラス図（experimental）&lt;/li&gt;
&lt;li&gt;Git グラフ（experimental）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;たとえば，クラス図は以下のように記述する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;classDiagram
    friends&amp;lt;|--serval
    friends&amp;lt;|--raccoon
    friends&amp;lt;|--fennec
    serval : +Waai()
    raccoon : +Omakase-nanoda()
    fennec : +Haiyo()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを mermaid.js で描画すると以下のようになる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
classDiagram
    friends&lt;|--serval
    friends&lt;|--raccoon
    friends&lt;|--fennec
    serval : +Waai()
    raccoon : +Omakase-nanoda()
    fennec : +Haiyo()
&lt;/div&gt;
&lt;figcaption&gt;フレンズ&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;んー。
クラス図を描くなら多重度は必須なんだがなぁ（たとえば多対多の関係は実装できないため「設計が間違っている」と断言できる）。
これに関しては「これからに期待」といったところか。&lt;/p&gt;

&lt;h2 id=&#34;考えながら描く&#34;&gt;考えながら描く&lt;/h2&gt;

&lt;p&gt;クラス図やシーケンス図といったものは試行錯誤しながら描いていくものなので，切ったり貼ったりあるいは結合を変えたりといったことが簡単にできないと意味がない。
したがって，とにかく記述が簡単で見た目が直感的であるというのが大事になってくるわけだ，多少は機能を落としてでも。&lt;/p&gt;

&lt;p&gt;そういう意味で &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; はバランスのいい製品と言える。
まぁ，&lt;a href=&#34;http://text.baldanders.info/&#34; title=&#34;text.Baldanders.info&#34;&gt;本ブログ&lt;/a&gt;では頻繁に使うものではないかもしれないが，使える道具はあるに越したことはないだろう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itsenka.com/contents/development/uml/sequence.html&#34;&gt;シーケンス図(Sequence Diagram) - UML入門 - IT専科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itsenka.com/contents/development/uml/class.html&#34;&gt;クラス図(Class Diagram) - UML入門 - IT専科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/rana_kualu/items/da394fd33ce019bf0ba7&#34;&gt;簡単にガントチャートとかクラス図とか書けるやつ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ririli/items/64320ed2918b1982f89d&#34;&gt;ちょっとしたシーケンス図を書くのにatom-mermaidが便利すぎる話 - Qiita&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.tonyballantyne.com/graphs.html&#34;&gt;Drawing Graphs using Dot and Graphviz&lt;/a&gt; : 図にこだわるのであれば &lt;a href=&#34;http://www.graphviz.org/&#34; title=&#34;Graphviz | Graphviz - Graph Visualization Software&#34;&gt;Graphviz&lt;/a&gt; の DOT 言語を使う手もある&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/rubytomato@github/items/51779135bc4b77c8c20d&#34;&gt;Graphvizとdot言語でグラフを描く方法のまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/04/hackmd/&#34;&gt;エディタ以上ワープロ未満の HackMD&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ll&#34;&gt;UML 的にはライフラインは破線じゃないといけないのだけど，どういうわけか &lt;a href=&#34;https://mermaidjs.github.io/&#34;&gt;mermaid&lt;/a&gt; では実線になっている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ll&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sd1&#34;&gt;複合フラグメントは loop 以外には alt, opt, par のみサポートされているようだ。個人的には ref と  critical （par があるなら critical は必要）くらいは入れて欲しいところであるが&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo 0.15 が Apache License 2.0 下でリリース - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/hugo-0_15-released-under-apache2/" />
		<id>tag:text.Baldanders.info,2015-11-26:/hugo/hugo-0_15-released-under-apache2/</id>
		<published>2015-11-26T20:26:45+09:00</published>
		<updated>2017-06-21T16:10:38+09:00</updated>
		<summary>追加された機能が盛りだくさんあり詳しくは上のリンク先を確認していただくとして，実は今回の目玉はライセンスのアップグレードである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/&#34;&gt;Repository&lt;/a&gt; ではしばらく前からリリース準備が行われていて wktk 状態で待っていたのだが，ようやくリリースの運びとなった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.15&#34;&gt;Release v0.15 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt; hugo version
Hugo Static Site Generator v0.15 BuildDate: 2015-11-25T14:35:20+09:00
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;追加された機能が盛りだくさんあり詳しくは上のリンク先を確認していただくとして，実は今回の目玉はライセンスのアップグレードである。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のライセンスは &lt;a href=&#34;https://opensource.org/licenses/Simple-2.0&#34;&gt;Simple Public License (SimPL) 2.0&lt;/a&gt; だったのだが，これを企業ユーザでも利用しやすい一般的なライセンスにしてくれという要望というか議論は随分前からあったらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/201&#34;&gt;Upgrade the license to an open one · Issue #201 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/Simple-2.0&#34; title=&#34;Simple Public License (SimPL-2.0) | Open Source Initiative&#34;&gt;SimPL-2.0&lt;/a&gt; はオープンソース・ライセンスのひとつで GPLv2 を（文字通り）よりシンプルに記述したもののようである。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This Simple Public License 2.0 (SimPL-2.0 for short) is a plain language implementation of GPL 2.0.  The words are different, but the goal is the same - to guarantee for all users the freedom to share and change software.  If anyone wonders about the meaning of the SimPL, they should interpret it as consistent with GPL 2.0.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://opensource.org/licenses/Simple-2.0&#34;&gt;Simple Public License (SimPL-2.0)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;当初は GPL や MIT ライセンスなどが候補に挙がっていたようだが，最終的には &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt; （&lt;a href=&#34;https://osdn.jp/projects/opensource/wiki/licenses%2FApache_License_2.0&#34;&gt;日本語訳&lt;/a&gt;）に決まった。
&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34; title=&#34;Apache License, Version 2.0&#34;&gt;Apache-2.0&lt;/a&gt; は copyleft ではないがオープンソース・ライセンスのひとつであり，特許の終了規定やコード等の寄与（contribution）に関する規定があるのが特徴。
さらに &lt;a href=&#34;http://www.gnu.org/licenses/license-list.ja.html#apache2&#34;&gt;GPLv3 と互換性のあるライセンス&lt;/a&gt;として認められている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; ではユーザによるコードの寄与が結構あるため，この点が &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34; title=&#34;Apache License, Version 2.0&#34;&gt;Apache-2.0&lt;/a&gt; を選択する決め手になったようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; などは pull request で気軽にコードを寄与できるメリットがあるが，寄与されたコードの扱いが問題になることもある。
Copyleft であれば寄与されたコードも自動的に元のライセンスに従うため混乱は少ないが，そうでない場合は &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34; title=&#34;Apache License, Version 2.0&#34;&gt;Apache-2.0&lt;/a&gt; のような明示的な規定が必要になるだろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;更に言うと， &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;では気軽にパッケージを import できるが，最終的な製品のライセンスをどうするかは結構重要な問題である。 &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のライセンス・アップグレードの際には，この辺の確認でも時間がかかった感じだ。事ほど左様にライセンスの互換性とは重要な問題なのである。ちなみに &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のようなコード・ジェネレータあるいはもっと広く CASE (Computer Aided Software Engineering) ツールが生成するコードが誰に帰属するのかは，また別の問題である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Shortcodes で HTML コードを埋め込む - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/shortcodes/" />
		<id>tag:text.Baldanders.info,2015-10-24:/hugo/shortcodes/</id>
		<published>2015-10-24T16:36:04+09:00</published>
		<updated>2015-10-24T16:36:04+09:00</updated>
		<summary>たとえば記事の中に YouTube の動画や SlideShare の HTML コードを埋め込みたいとする。こういうときは Shortcodes の機能を使うと便利だ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今回は &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; の話。&lt;/p&gt;

&lt;p&gt;たとえば記事の中に &lt;a href=&#34;https://www.youtube.com/&#34; title=&#34;YouTube&#34;&gt;YouTube&lt;/a&gt; の動画や &lt;a href=&#34;http://www.slideshare.net/&#34; title=&#34;Share and Discover Knowledge on LinkedIn SlideShare&#34;&gt;SlideShare&lt;/a&gt; の HTML コードを埋め込みたいとする。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では段落単位に HTML コードを記述するとそのまま出力してくれるけど，頻繁に使うコードはテンプレート化して再利用したいだろう。
こういうときは &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; の機能を使うと便利だ。&lt;/p&gt;

&lt;h2 id=&#34;shortcodes-の使い方&#34;&gt;Shortcodes の使い方&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; は partial template の一種だけど，テンプレートの中に埋め込むのではなく，記事（markdown）ファイルに埋め込むことができる。
書式は以下のとおりである。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{&amp;lt; shortcodename &amp;gt;}} ... {{&amp;lt; /shortcodename &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; の実体は &lt;code&gt;layouts/shortcodes&lt;/code&gt; フォルダに &lt;code&gt;shortcodename.hml&lt;/code&gt; などとコード名をそのままファイル名にしてで配置する。
たとえば &lt;code&gt;layouts/shortcodes/fig-quote.html&lt;/code&gt; というファイルを作成し，以下のコードを書く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ with .Get &amp;quot;lang&amp;quot; }}&amp;lt;figure lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;figure&amp;gt;{{ end }}
&amp;lt;blockquote&amp;gt;{{ .Inner }}&amp;lt;/blockquote&amp;gt;
{{ if .Get &amp;quot;title&amp;quot;}}&amp;lt;figcaption&amp;gt;via &amp;lt;q&amp;gt;{{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}{{ .Get &amp;quot;title&amp;quot; }}{{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/q&amp;gt;&amp;lt;/figcaption&amp;gt;{{ end }}
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを使って&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{&amp;lt; fig-quote title=&amp;quot;Compatible Licenses - Creative Commons&amp;quot; link=&amp;quot;https://creativecommons.org/compatiblelicenses&amp;quot; lang=&amp;quot;en&amp;quot; &amp;gt;}}
&amp;lt;q&amp;gt;The &amp;lt;a href=&amp;quot;https://www.gnu.org/copyleft/gpl.html&amp;quot;&amp;gt;GNU General Public License version 3 &amp;lt;/a&amp;gt; was declared a &amp;lt;q&amp;gt;BY-SA–Compatible License&amp;lt;/q&amp;gt; for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;special considerations&amp;lt;/a&amp;gt; apply.
See the full &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3&amp;quot;&amp;gt;analysis&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL&amp;quot;&amp;gt;comparison&amp;lt;/a&amp;gt; for more information.&amp;lt;/q&amp;gt;
{{&amp;lt; /fig-quote &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように記述すると，以下のように展開される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;blockquote&amp;gt;
&amp;lt;q&amp;gt;The &amp;lt;a href=&amp;quot;https://www.gnu.org/copyleft/gpl.html&amp;quot;&amp;gt;GNU General Public License version 3 &amp;lt;/a&amp;gt; was declared a &amp;lt;q&amp;gt;BY-SA–Compatible License&amp;lt;/q&amp;gt; for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;special considerations&amp;lt;/a&amp;gt; apply.
See the full &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3&amp;quot;&amp;gt;analysis&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL&amp;quot;&amp;gt;comparison&amp;lt;/a&amp;gt; for more information.&amp;lt;/q&amp;gt;
&amp;lt;/blockquote&amp;gt;
&amp;lt;figcaption&amp;gt;via &amp;lt;q&amp;gt;&amp;lt;a href=&amp;quot;https://creativecommons.org/compatiblelicenses&amp;quot;&amp;gt;Compatible Licenses - Creative Commons&amp;lt;/a&amp;gt;&amp;lt;/q&amp;gt;&amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;The &lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;GNU General Public License version 3 &lt;/a&gt; was declared a &lt;q&gt;BY-SA–Compatible License&lt;/q&gt; for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3&#34; target=&#34;_blank&#34;&gt;special considerations&lt;/a&gt; apply.
See the full &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3&#34;&gt;analysis&lt;/a&gt; and &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL&#34;&gt;comparison&lt;/a&gt; for more information.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://creativecommons.org/compatiblelicenses&#34;&gt;Compatible Licenses - Creative Commons&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;{{&amp;lt; fig-quote &amp;gt;}} ... {{&amp;lt; /fig-quote &amp;gt;}}&lt;/code&gt; で囲まれている部分が &lt;code&gt;{{ .Inner }}&lt;/code&gt; として展開されているのがお分かりだろうか。
&lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; では &lt;code&gt;{{ .Inner }}&lt;/code&gt; 以外に任意のパラメータを持たせることができる。
上の例で言うなら &lt;code&gt;lang&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt; が &lt;code&gt;{{&amp;lt; fig-quote &amp;gt;}}&lt;/code&gt; に対するパラメータである。&lt;/p&gt;

&lt;p&gt;更に &lt;code&gt;{{% fig-quote %}} ... {{% /fig-quote %}}&lt;/code&gt; と表記すると，囲まれた部分を Markdown と解釈する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{% fig-quote title=&amp;quot;Compatible Licenses - Creative Commons&amp;quot; link=&amp;quot;https://creativecommons.org/compatiblelicenses&amp;quot; lang=&amp;quot;en&amp;quot; %}}
“The [GNU General Public License version 3](https://www.gnu.org/copyleft/gpl.html) was declared a “BY-SA–Compatible License” for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other [special considerations](https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3) apply.
See the full [analysis](https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3) and [comparison](https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL) for more information.”
{{% /fig-quote %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;blockquote&amp;gt;&amp;lt;p&amp;gt;“The &amp;lt;a href=&amp;quot;https://www.gnu.org/copyleft/gpl.html&amp;quot;&amp;gt;GNU General Public License version 3&amp;lt;/a&amp;gt; was declared a “BY-SA–Compatible License” for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3&amp;quot;&amp;gt;special considerations&amp;lt;/a&amp;gt; apply.
See the full &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3&amp;quot;&amp;gt;analysis&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL&amp;quot;&amp;gt;comparison&amp;lt;/a&amp;gt; for more information.”&amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;
&amp;lt;figcaption&amp;gt;via &amp;lt;q&amp;gt;&amp;lt;a href=&amp;quot;https://creativecommons.org/compatiblelicenses&amp;quot;&amp;gt;Compatible Licenses - Creative Commons&amp;lt;/a&amp;gt;&amp;lt;/q&amp;gt;&amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;“The &lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;GNU General Public License version 3&lt;/a&gt; was declared a “BY-SA–Compatible License” for version 4.0 on 8 October 2015.
Note that compatibility with the GPLv3 is one-way only, which means you may license your contributions to adaptations of BY-SA 4.0 materials under GPLv3, but you may not license your contributions to adaptations of GPLv3 projects under BY-SA 4.0.
Other &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3#Considerations_for_adapters_applying_the_GPLv3&#34;&gt;special considerations&lt;/a&gt; apply.
See the full &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility:_GPLv3&#34;&gt;analysis&lt;/a&gt; and &lt;a href=&#34;https://wiki.creativecommons.org/wiki/ShareAlike_compatibility_analysis:_GPL&#34;&gt;comparison&lt;/a&gt; for more information.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://creativecommons.org/compatiblelicenses&#34;&gt;Compatible Licenses - Creative Commons&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;{{&amp;lt; shortcodename &amp;gt;}}&lt;/code&gt; のみ，または &lt;code&gt;{{&amp;lt; shortcodename /&amp;gt;}}&lt;/code&gt; で表記すると &lt;code&gt;{{ .Inner }}&lt;/code&gt; を持たない &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; を表現できる。
たとえば &lt;code&gt;layouts/shortcodes/fig-youtube.html&lt;/code&gt; というファイルを作成し，以下のコードを書く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&amp;gt;
&amp;lt;iframe class=&amp;quot;youtube-player&amp;quot;{{ with .Get &amp;quot;width&amp;quot;}} width=&amp;quot;{{ . }}&amp;quot;{{ end }}{{ with .Get &amp;quot;height&amp;quot;}}  height=&amp;quot;{{ . }}&amp;quot;{{ end }} src=&amp;quot;https://www.youtube-nocookie.com/embed/{{ .Get &amp;quot;id&amp;quot; }}&amp;quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
{{ if .Get &amp;quot;title&amp;quot;}}&amp;lt;figcaption&amp;gt;&amp;lt;a href=&amp;quot;https://www.youtube.com/watch?v={{ .Get &amp;quot;id&amp;quot; }}&amp;quot;&amp;gt;{{ .Get &amp;quot;title&amp;quot; }}&amp;lt;/a&amp;gt;&amp;lt;/figcaption&amp;gt;{{ end }}
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを使って&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{&amp;lt; fig-youtube id=&amp;quot;Kjqff5bkUrE&amp;quot; width=&amp;quot;500&amp;quot; height=&amp;quot;281&amp;quot; title=&amp;quot;「はやぶさ2」地球スイングバイ解説CG ／ Hayabusa2&#39;s Earth Swing-by CG - YouTube&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように記述すると，以下のように展開される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&amp;gt;
&amp;lt;iframe class=&amp;quot;youtube-player&amp;quot; width=&amp;quot;500&amp;quot;  height=&amp;quot;281&amp;quot; src=&amp;quot;https://www.youtube-nocookie.com/embed/Kjqff5bkUrE&amp;quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&amp;lt;figcaption&amp;gt;&amp;lt;a href=&amp;quot;https://www.youtube.com/watch?v=Kjqff5bkUrE&amp;quot;&amp;gt;「はやぶさ2」地球スイングバイ解説CG ／ Hayabusa2&amp;amp;#39;s Earth Swing-by CG - YouTube&amp;lt;/a&amp;gt;&amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;281&#34; src=&#34;https://www.youtube-nocookie.com/embed/Kjqff5bkUrE&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Kjqff5bkUrE&#34;&gt;「はやぶさ2」地球スイングバイ解説CG ／ Hayabusa2&amp;#39;s Earth Swing-by CG - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;shortcodes-の例&#34;&gt;Shortcodes の例&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt; theme では &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; を収録してないが，この&lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env&#34;&gt;サイトの作業用リポジトリ&lt;/a&gt;には&lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env/tree/master/layouts/shortcodes&#34;&gt;いくつか置いてある&lt;/a&gt;。
再利用はご自由に。&lt;/p&gt;

&lt;h2 id=&#34;組み込みの-shortcodes&#34;&gt;組み込みの Shortcodes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; にはあらかじめ組み込まれた &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; title=&#34;Shortcodes&#34;&gt;Shortcodes&lt;/a&gt; が幾つかある。
この中で一番よく使うのは記事間の相互リンクを張ることのできる &lt;code&gt;ref&lt;/code&gt; および &lt;code&gt;relref&lt;/code&gt; だろう。&lt;/p&gt;

&lt;p&gt;たとえばこの記事の「ブックマーク」節にリンクを張る場合は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[このページのブックマーク]({{&amp;lt; relref &amp;quot;#bookmark&amp;quot; &amp;gt;}})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;#bookmark:10ef41a6c37b90d6a6452868d5ba00ba&amp;quot;&amp;gt;このページのブックマーク&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のように展開される。
ちなみに &lt;code&gt;ref&lt;/code&gt; は絶対パス， &lt;code&gt;relref&lt;/code&gt; は相対パスに展開される。&lt;/p&gt;

&lt;p&gt;相互リンクは &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で管理している記事ならどれでも指定できる。
たとえば&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[「ブックマーク」ページの「公式サイト」節]({{&amp;lt; ref &amp;quot;hugo/bookmark.md#official&amp;quot; &amp;gt;}})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と記述すると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;http://text.baldanders.info/hugo/bookmark/#official:9bacfa348e5fe42acc9342a16675997d&amp;quot;&amp;gt;「ブックマーク」ページの「公式サイト」節&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のように展開される。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Categories や Tags の一覧ページを作る - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/categories-and-tags-list/" />
		<id>tag:text.Baldanders.info,2015-10-04:/hugo/categories-and-tags-list/</id>
		<published>2015-10-04T20:21:54+09:00</published>
		<updated>2016-12-14T10:20:58+09:00</updated>
		<summary>以前の回で紹介してなかったのだが， Categories や Tags の一覧ページを作る機能があるので紹介する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今回は補足なので簡単に。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;http://text.baldanders.info/hugo/section/&#34;&gt;Categories, Tags そして Section&lt;/a&gt;」の回で紹介してなかったのだが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;， Categories や Tags の一覧ページを作る機能があるので紹介する。&lt;/p&gt;

&lt;p&gt;Categories や Tags の一覧ページを作るには &lt;code&gt;layouts/_default&lt;/code&gt; フォルダに &lt;code&gt;terms.html&lt;/code&gt; テンプレートを作成する&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
たとえば中身はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }} Cloud -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
ul.cloud {
    list-style: none;
    padding: 0
}
ul.cloud &amp;gt; li {
    display: inline-block;
    margin: 0 0.5rem;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }} Cloud&amp;lt;/h1&amp;gt;

&amp;lt;ul class=&amp;quot;cloud&amp;quot;&amp;gt;{{ $plural := .Data.Plural }}
{{ range $key, $value := .Data.Terms }}
	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/{{ $plural }}/{{ $key | urlize }}&amp;quot;&amp;gt;{{ $key }}&amp;lt;/a&amp;gt; ({{ len $value }})&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/section/&#34;&gt;以前の記事&lt;/a&gt;の &lt;a href=&#34;http://text.baldanders.info/hugo/section/&#34;&gt;Taxonomy&lt;/a&gt; の記述に似ているので，それほど難しくないだろう。
これをビルドするとこんな感じにファイルが展開される。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 17 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│  └─practice
│          hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  ├─practice
│  │      single.html
│  │
│  ├─section
│  │      practice.html
│  │
│  └─_default
│          list.html
│          single.html
│          terms.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  │  index.html
│  │  │
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─practice
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─hello
│  │          index.html
│  │
│  └─tags
│      │  index.html
│      │
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;public/categories&lt;/code&gt; および &lt;code&gt;public/tags&lt;/code&gt; フォルダの直下に &lt;code&gt;index.html&lt;/code&gt; ファイルが生成されているのがお分かりだろうか。
また &lt;code&gt;public/tags/index.html&lt;/code&gt; ファイルの中身を見てみると以下のように Tags 情報が展開されている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;jp&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Tags Cloud -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
ul.cloud {
    list-style: none;
    padding: 0
}
ul.cloud &amp;gt; li {
    display: inline-block;
    margin: 0 0.5rem;
}
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Tags Cloud&amp;lt;/h1&amp;gt;

&amp;lt;ul class=&amp;quot;cloud&amp;quot;&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/tags/hello&amp;quot;&amp;gt;hello&amp;lt;/a&amp;gt; (1)&amp;lt;/li&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/tags/world&amp;quot;&amp;gt;world&amp;lt;/a&amp;gt; (1)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/terms/&#34;&gt;Taxonomy Terms Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/_shun_sato_/items/87888fa8425e55b1c758&#34;&gt;Hugoでタグやカテゴリのリンク切れが起こる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;というか，今までやり方が分かってなかった。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;Tags や Categories などごとに個別にテンプレートを作りたいのであれば &lt;code&gt;layouts/taxonomy/tag.terms.html&lt;/code&gt; といった感じでファイルを作るとよい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>text.Baldanders.info 正式オープン - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/open-this-site/" />
		<id>tag:text.Baldanders.info,2015-10-03:/remark/2015/open-this-site/</id>
		<published>2015-10-03T00:24:53+09:00</published>
		<updated>2015-10-22T08:35:00+09:00</updated>
		<summary>さて予定通り，正式オープンしました。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;さて&lt;a href=&#34;http://text.baldanders.info/remark/2015/todo-replace-blog/&#34;&gt;予定&lt;/a&gt;通り，正式オープンしました。&lt;/p&gt;

&lt;h2 id=&#34;かえってきた-しっぽのさきっちょ&#34;&gt;かえってきた「しっぽのさきっちょ」&lt;/h2&gt;

&lt;p&gt;「&lt;a href=&#34;http://www.baldanders.info/spiegel/log/&#34;&gt;しっぽのさきっちょ&lt;/a&gt;」は，むかし運営していた日記コンテンツの名前です。
「しっぽ」というのはもちろん &lt;q lang=&#34;en&#34;&gt;long tail&lt;/q&gt; のことで，つまり「しっぽのさきっちょ」とは Web における「辺境」を意味します。
辺境へようこそ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log/200604.html#d27_t2&#34;&gt;以前も書いた&lt;/a&gt;けど，「しっぽ」の部分で谷山浩子ちっくな感受性を，「さきっちょ」の部分でそこはかとないエロスを感じていただければ幸いです。&lt;/p&gt;

&lt;p&gt;私もいい歳ですし，辺境に帰って，これからは慎ましく生きていく所存です。&lt;/p&gt;

&lt;h2 id=&#34;このサイトについて&#34;&gt;このサイトについて&lt;/h2&gt;

&lt;p&gt;このサイトの運営方針は以下を参照して下さい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/site-policy/&#34;&gt;text.Baldanders.info について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的には&lt;a href=&#34;http://www.baldanders.info/policy.shtml&#34;&gt;本家サイト&lt;/a&gt;と同じです。&lt;/p&gt;

&lt;h3 id=&#34;ホスティングについて&#34;&gt;ホスティングについて&lt;/h3&gt;

&lt;p&gt;このサイトは &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; でホスティングしています。
アクセス履歴等は取れないので，現在も将来もこのサイトが流行ってるのか過疎ってるのか分かりません（多分）。
&lt;a href=&#34;https://www.google.com/analytics/&#34;&gt;Google Analytics&lt;/a&gt; 等はやってて虚しくなってきたので本家サイトでもとっくの昔に止めました。
こっちでもやりません。&lt;/p&gt;

&lt;p&gt;ただし Twitter とか Facebook とか Amazon.co.jp などとは連携しているので，そういったサービスに Tracking されている可能性はあります。
あとホスティング・サービスを行っている &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; がプライバシーに関して evil ではないと断言できませんので，その辺も悪しからず。
心配な方は Firefox の&lt;a href=&#34;http://www.mozilla.jp/blog/entry/10504/&#34;&gt;新しい private browsing 機能&lt;/a&gt;を使って下さい。&lt;/p&gt;

&lt;h3 id=&#34;ライセンスについて&#34;&gt;ライセンスについて&lt;/h3&gt;

&lt;p&gt;個々の記事については，原則として， &lt;a href=&#34;http://www.baldanders.info/spiegel/archive/cc-license/&#34;&gt;CC License&lt;/a&gt; の &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; title=&#34;Creative Commons — Attribution-ShareAlike 4.0 International — CC BY-SA 4.0&#34;&gt;by-sa&lt;/a&gt; を設定することにしました。
ここは本家との違い。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000796.shtml&#34;&gt;前にも紹介&lt;/a&gt;しましたが， &lt;a href=&#34;http://creativecommons.org/&#34; title=&#34;Creative Commons&#34;&gt;Creative Commons&lt;/a&gt; が提供しているライセンスツールのうち， Free Culture License に分類されるもの&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; が過半数を超え，更にその中では &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; title=&#34;Creative Commons — Attribution-ShareAlike 4.0 International — CC BY-SA 4.0&#34;&gt;by-sa&lt;/a&gt; が一番多いようです。
これにはいろんな理由があるんでしょうけど，私は &lt;q lang=&#34;en&#34;&gt;copyleft&lt;/q&gt; がプログラム・コード以外にも浸透しつつあると好意的に解釈しています。&lt;/p&gt;

&lt;p&gt;だから，そろそろ自分のコンテンツも copyleft にしてもいいんじゃないかなぁ，ということで。
ただし，古い記事を再掲載する場合などは今まで通り &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/deed.ja&#34; title=&#34;Creative Commons — Attribution 4.0 International — CC BY 4.0&#34;&gt;by&lt;/a&gt; でいきます。&lt;/p&gt;

&lt;p&gt;念の為に書いておきますが，ライセンスの許諾範囲内であれば事前事後の連絡は無用です。
また「リンク」や「引用」といったそもそも許可する必要の無いことについてもうだうだ言わなくていいです&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
それ以外のことで問題点や不明な点があればフィードバックをいただけると助かります。&lt;/p&gt;

&lt;h2 id=&#34;リポジトリの公開&#34;&gt;リポジトリの公開&lt;/h2&gt;

&lt;p&gt;前述したように，このサイトは &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; でホスティングしているため，サイトのリポジトリは公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/spiegel-im-spiegel.github.io&#34;&gt;spiegel-im-spiegel/spiegel-im-spiegel.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;作業環境の公開&#34;&gt;作業環境の公開&lt;/h3&gt;

&lt;p&gt;このサイトは &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で生成しています。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; を使った作業環境についてもリポジトリを公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/github-pages-env&#34;&gt;spiegel-im-spiegel/github-pages-env&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またこのサイト用に theme を作成して，こちらも公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Theme のほうは &lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; title=&#34;Creative Commons — CC0 1.0 Universal&#34;&gt;cc0&lt;/a&gt; で公開しているため自由に利用していただいて構いません。
なお， &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; については Section を立てて&lt;a href=&#34;http://text.baldanders.info/hugo&#34;&gt;連載中&lt;/a&gt;です。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;&lt;a href=&#34;http://creativecommons.org/publicdomain/zero/1.0/deed.ja&#34; title=&#34;Creative Commons — CC0 1.0 Universal&#34;&gt;cc0&lt;/a&gt;, &lt;a href=&#34;http://creativecommons.org/licenses/by/4.0/deed.ja&#34; title=&#34;Creative Commons — Attribution 4.0 International — CC BY 4.0&#34;&gt;by&lt;/a&gt;, &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/deed.ja&#34; title=&#34;Creative Commons — Attribution-ShareAlike 4.0 International — CC BY-SA 4.0&#34;&gt;by-sa&lt;/a&gt;。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;「シェアさせていただきました」とか意味不明の連絡も要りません。リンクも引用もシェアもリブログも勝手にどうぞ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Template の部品化 - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/partial-template/" />
		<id>tag:text.Baldanders.info,2015-09-25:/hugo/partial-template/</id>
		<published>2015-09-25T11:14:44+09:00</published>
		<updated>2015-10-04T19:56:00+09:00</updated>
		<summary>今回は Template について，もう少しだけ詳しく紹介してみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今回は Template について，もう少しだけ詳しく紹介してみる。&lt;/p&gt;

&lt;h2 id=&#34;theme-hugo-theme-text-を導入する&#34;&gt;Theme “hugo-theme-text” を導入する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/theme/&#34; title=&#34;Theme を利用する&#34;&gt;前回&lt;/a&gt;予告した通り，拙作の Theme &lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt; を導入する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;git clone https://github.com/spiegel-im-spiegel/hugo-theme-text.git themes/hugo-theme-text
Cloning into &#39;themes/hugo-theme-text&#39;...
remote: Counting objects: 174, done.
remote: Compressing objects: 100% (133/133), done.
Receiving objecemote: Total 174 (delta 82), reused 123 (delta 35), pack-reused 0
Receiving objects:  49%
Receiving objects: 100% (174/174), 25.34 KiB | 0 bytes/s, done.
Resolving deltas: 100% (82/82), done.
Checking connectivity... done.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作業環境が git 管理下にある場合は submodule として導入するとよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;git submodule add https://github.com/spiegel-im-spiegel/hugo-theme-text.git themes/hugo-theme-text
Cloning into &#39;themes/hugo-theme-text&#39;...
remote: Counting objects: 282, done.
remote: Compressing objects: 100% (11/11), done.
rRemote: Total 282 (delta 4), reused 0 (delta 0), pack-reused 271eceiving object
Receiving objects: 100% (282/282), 37.54 KiB | 0 bytes/s, done.
Resolving deltas: 100% (141/141), done.
Checking connectivity... done.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;では，例によっていきなりビルド。
の前に，作業環境の &lt;code&gt;layouts&lt;/code&gt; フォルダを空っぽにする。&lt;/p&gt;

&lt;p&gt;ではビルド。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo --theme=&amp;quot;hugo-theme-text&amp;quot;
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 21 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでこんな感じの &lt;code&gt;index.html&lt;/code&gt; ファイルができれば成功。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;generator&amp;quot; content=&amp;quot;Hugo 0.15-DEV&amp;quot; /&amp;gt;

&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//fonts.googleapis.com/css?family=Droid+Serif:400,400italic,700,700italic|Open+Sans:400,400italic,700,700italic|Inconsolata:400,700&amp;amp;subset=latin,latin-ext&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/cc-icons/1.2.1/css/cc-icons.min.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/main.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/text-baldanders.css&amp;quot;&amp;gt;

&amp;lt;link rel=&amp;quot;alternate&amp;quot; href=&amp;quot;/index.xml&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; title=&amp;quot;Hello World!&amp;quot;&amp;gt;

&amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;



&amp;lt;div id=&#39;container&#39;&amp;gt;
&amp;lt;header role=&amp;quot;banner&amp;quot;&amp;gt;
&amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/&amp;quot;&amp;gt;Hello World!&amp;lt;/a&amp;gt; &amp;lt;a href=&#39;http://text.baldanders.info/index.xml&#39; title=&#39;Feed&#39;&amp;gt;&amp;lt;i class=&#39;fa fa-rss&#39;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;

&amp;lt;/header&amp;gt;


&amp;lt;main role=&amp;quot;main&amp;quot;&amp;gt;
&amp;lt;article itemscope itemtype=&#39;http://schema.org/Blog&#39; itemref=&#39;maker&#39;&amp;gt;
&amp;lt;h2 itemprop=&#39;name&#39;&amp;gt;All Entries&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;&amp;lt;li itemprop=&#39;blogPost&#39; itemscope itemtype=&#39;http://schema.org/BlogPosting&#39;&amp;gt;
	[&amp;lt;a href=&amp;quot;/practice&amp;quot;&amp;gt;practice&amp;lt;/a&amp;gt;] &amp;lt;a href=&amp;quot;http://hello.example.com/practice/hello/&amp;quot; itemprop=&#39;url&#39;&amp;gt;&amp;lt;strong itemprop=&#39;name&#39;&amp;gt;Hello!&amp;lt;/strong&amp;gt;&amp;lt;/a&amp;gt;
	&amp;lt;span style=&amp;quot;font-size:smaller;&amp;quot;&amp;gt;(&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)
	 #&amp;lt;a href=&amp;quot;/tags/hello&amp;quot;&amp;gt;hello&amp;lt;/a&amp;gt; #&amp;lt;a href=&amp;quot;/tags/world&amp;quot;&amp;gt;world&amp;lt;/a&amp;gt;
	&amp;lt;/span&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/main&amp;gt;

&amp;lt;footer&amp;gt;

&amp;lt;nav role=&amp;quot;navigation&amp;quot;&amp;gt;
&amp;lt;ul class=&#39;cloud center&#39;&amp;gt;
&amp;lt;li&amp;gt;Powered by &amp;lt;a href=&#39;https://gohugo.io/&#39;&amp;gt;Hugo 0.15-DEV&amp;lt;/a&amp;gt; and &amp;lt;a href=&amp;quot;https://github.com/spiegel-im-spiegel/hugo-theme-text&amp;quot;&amp;gt;Text&amp;lt;/a&amp;gt;.&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;/footer&amp;gt;

&amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;だいぶ賑やかになった。&lt;/p&gt;

&lt;p&gt;この &lt;code&gt;index.html&lt;/code&gt; のテンプレートはこんな感じになっている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ partial &amp;quot;top.html&amp;quot; . }}
&amp;lt;head&amp;gt;
{{ partial &amp;quot;header.html&amp;quot; . }}
&amp;lt;title&amp;gt;{{ .Site.Title }}&amp;lt;/title&amp;gt;
{{ with .Site.Params.description }}&amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ end }}
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
{{ partial &amp;quot;prepare.html&amp;quot; . }}
&amp;lt;div id=&#39;container&#39;&amp;gt;&amp;lt;!-- Container Area --&amp;gt;
{{ partial &amp;quot;banner.html&amp;quot; . }}

&amp;lt;main role=&amp;quot;main&amp;quot;&amp;gt;
&amp;lt;article itemscope itemtype=&#39;http://schema.org/Blog&#39; itemref=&#39;maker&#39;&amp;gt;
&amp;lt;h2 itemprop=&#39;name&#39;&amp;gt;All Entries&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;{{ range .Site.Pages }}{{ partial &amp;quot;li.html&amp;quot; . }}{{ end }}&amp;lt;/ul&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/main&amp;gt;

{{ partial &amp;quot;footer.html&amp;quot; . }}
&amp;lt;/div&amp;gt;&amp;lt;!-- Container Area --&amp;gt;
{{ partial &amp;quot;cleanup.html&amp;quot; . }}
&amp;lt;/body&amp;gt;
{{ partial &amp;quot;end.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この中で &lt;code&gt;{{ partial &amp;quot;top.html&amp;quot; . }}&lt;/code&gt; となっている部分が partial template を呼び出している部分で，テンプレートの中にテンプレートを入れ子にすることができる。&lt;/p&gt;

&lt;h3 id=&#34;partial-template&#34;&gt;Partial Template&lt;/h3&gt;

&lt;p&gt;Partial template を格納する場所は決まっている。
では， &lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt; の構成を見てみよう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;tree /f themes\hugo-theme-text
C:\HUGO-ENV\WWW\THEMES\HUGO-THEME-TEXT
│  LICENSE
│  README.md
│  theme.toml
│
├─archetypes
│      default.md
│
├─images
│      screenshot.png
│      tn.png
│
├─layouts
│  │  index.html
│  │  rss.xml
│  │
│  ├─partials
│  │      banner.html
│  │      cc-license.html
│  │      ccl-rss.html
│  │      cleanup.html
│  │      end.html
│  │      feedback.html
│  │      footer.html
│  │      header-include.html
│  │      header.html
│  │      li.html
│  │      navi.html
│  │      prepare.html
│  │      social.html
│  │      top.html
│  │
│  └─_default
│          list.html
│          single.html
│          terms.html
│
└─static
    ├─css
    │      main.css
    │      text-baldanders.css
    │
    └─images
            avatar.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;layouts/partials&lt;/code&gt; フォルダに多くのファイルが格納されているのがお分かりだろうか。
これが partial template である。&lt;/p&gt;

&lt;p&gt;たとえば &lt;code&gt;layouts/partials/top.html&lt;/code&gt; の中身は以下のようになっている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また &lt;code&gt;layouts/partials/header.html&lt;/code&gt; は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;
{{ .Hugo.Generator }}
{{ with .Site.Params.favicon }}&amp;lt;link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/x-icon&amp;quot; href=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ end }}
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//fonts.googleapis.com/css?family=Droid+Serif:400,400italic,700,700italic|Open+Sans:400,400italic,700,700italic|Inconsolata:400,700&amp;amp;subset=latin,latin-ext&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;//cdnjs.cloudflare.com/ajax/libs/cc-icons/1.2.1/css/cc-icons.min.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/main.css&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/text-baldanders.css&amp;quot;&amp;gt;
{{ partial &amp;quot;header-include.html&amp;quot; . }}
&amp;lt;link rel=&amp;quot;alternate&amp;quot; href=&amp;quot;/index.xml&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; title=&amp;quot;{{ .Site.Title }}&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっていて，内部でさらに &lt;code&gt;layouts/partials/header-include.html&lt;/code&gt; を呼び出している。
実は &lt;code&gt;layouts/partials/header-include.html&lt;/code&gt; の中身は空である。
ユーザの作業環境側に &lt;code&gt;layouts/partials/header-include.html&lt;/code&gt; ファイルを設置すればそちらが優先して読み込まれるため，これでユーザ側がカスタマイズできるようになっている。&lt;/p&gt;

&lt;h3 id=&#34;おまけ-author-情報&#34;&gt;【おまけ】 Author 情報&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt; では &lt;code&gt;config.toml&lt;/code&gt; に以下の author 情報を入れるとページに反映される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params.author]
name      = &amp;quot;Spiegel&amp;quot;
url       = &amp;quot;http://www.baldanders.info/spiegel/profile/&amp;quot;
avatar    = &amp;quot;/images/avatar.jpg&amp;quot;
license   = &amp;quot;by-sa&amp;quot;
github    = &amp;quot;spiegel-im-spiegel&amp;quot;
twitter   = &amp;quot;spiegel_2007&amp;quot;
medium    = &amp;quot;@spiegel&amp;quot;
instagram = &amp;quot;spiegel_2007&amp;quot;
facebook  = &amp;quot;spiegel.im.spiegel&amp;quot;
linkedin  = &amp;quot;spiegelimspiegel&amp;quot;
flattr    = &amp;quot;spiegel&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21504929379/&#34;&gt;&lt;img srcset=&#34;https://farm6.staticflickr.com/5779/21504929379_e29706db7c.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Top Page of “hugo-theme-text”&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21504929379/&#34;&gt;Top Page of “hugo-theme-text”&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;記事ページでは front matter に &lt;code&gt;[author]&lt;/code&gt; 項目を加える事で front matter の値が優先して表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;+++
date = &amp;quot;2015-09-05T16:40:41+09:00&amp;quot;
draft = false
title = &amp;quot;Hello!&amp;quot;
categories = [ &amp;quot;hugo&amp;quot; ]
tags = [ &amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot; ]

[author]
  avatar = &amp;quot;/images/avatar.jpg&amp;quot;
  facebook = &amp;quot;spiegel.im.spiegel&amp;quot;
  flattr = &amp;quot;spiegel&amp;quot;
  github = &amp;quot;spiegel-im-spiegel&amp;quot;
  instagram = &amp;quot;spiegel_2007&amp;quot;
  license = &amp;quot;by-sa&amp;quot;
  linkedin = &amp;quot;spiegelimspiegel&amp;quot;
  medium = &amp;quot;@spiegel&amp;quot;
  name = &amp;quot;Spiegel&amp;quot;
  twitter = &amp;quot;spiegel_2007&amp;quot;
  url = &amp;quot;http://www.baldanders.info/spiegel/profile/&amp;quot;
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21069070064/&#34;&gt;&lt;img srcset=&#34;https://farm1.staticflickr.com/718/21069070064_4a0e51cbbd.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Entry Page of “hugo-theme-text”&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21069070064/&#34;&gt;Entry Page of “hugo-theme-text”&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;他にも favicon や Disqus などを設置可能。
詳しくは &lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text#simple-text-hugo-theme&#34;&gt;&lt;code&gt;README.md&lt;/code&gt;&lt;/a&gt; を参照のこと。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Theme を利用する - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/theme/" />
		<id>tag:text.Baldanders.info,2015-09-11:/hugo/theme/</id>
		<published>2015-09-11T17:59:18+09:00</published>
		<updated>2017-06-21T16:17:51+09:00</updated>
		<summary>前々回，前回とちょっと飛ばしすぎたので今回は軽めに theme の話題を。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/hello/&#34; title=&#34;インストールから Hello World まで&#34;&gt;前々回&lt;/a&gt;，&lt;a href=&#34;http://text.baldanders.info/hugo/section/&#34; title=&#34;Categories, Tags そして Section&#34;&gt;前回&lt;/a&gt;とちょっと飛ばしすぎたので今回は軽めに theme の話題を。&lt;/p&gt;

&lt;h2 id=&#34;overview&#34;&gt;Hugo の Theme&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; には theme 機能がある。
Theme 機能の利点はもちろん画面の構成等を共有できる点にある。
また複数人で作業している場合は theme として構成を管理することで作業環境を統一できる利点もある。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の repository には既に多くの theme が寄せられている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugoThemes&#34;&gt;gohugoio/hugoThemes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また repository に登録されているもの以外にも色々なテーマが公開されているようである。&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Theme をインストールして利用する&lt;/h2&gt;

&lt;p&gt;Theme を利用するには作業環境上に repository を &lt;code&gt;git clone&lt;/code&gt; する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;git clone --recursive https://github.com/gohugoio/hugoThemes.git themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この repository ではユーザが公開している theme を git の submodule として結合しているため， &lt;code&gt;--recursive&lt;/code&gt; オプションを付けて clone する。
現時点（2015年9月）で56個の theme が登録されているようである。&lt;/p&gt;

&lt;p&gt;また単独の theme をインストールする場合は，作業環境に &lt;code&gt;themes&lt;/code&gt; フォルダを作り，その下に theme の repository を clone する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;git clone https://github.com/spiegel-im-spiegel/hugo-theme-text.git themes/hugo-theme-text
Cloning into &#39;themes/hugo-theme-text&#39;...
remote: Counting objects: 174, done.
remote: Compressing objects: 100% (133/133), done.
Receiving objecemote: Total 174 (delta 82), reused 123 (delta 35), pack-reused 0
Receiving objects:  49%
Receiving objects: 100% (174/174), 25.34 KiB | 0 bytes/s, done.
Resolving deltas: 100% (82/82), done.
Checking connectivity... done.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Theme を使ってビルドする場合には &lt;code&gt;-t&lt;/code&gt; または &lt;code&gt;--theme&lt;/code&gt; オプションを使って theme 名を指定する。
Theme 名は &lt;code&gt;themes&lt;/code&gt; フォルダ直下のフォルダ名である。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo --theme=&amp;quot;html5&amp;quot;
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 72 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また &lt;code&gt;config.toml&lt;/code&gt; に theme 名を記述する方法もある（ただしコマンドライン・オプションのほうが優先される）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml:config.toml&#34;&gt;baseurl = &amp;quot;http://hello.example.com/&amp;quot;
languageCode = &amp;quot;ja&amp;quot;
title = &amp;quot;Hello World!&amp;quot;
theme = &amp;quot;html5&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;make&#34;&gt;Theme を作成する&lt;/h2&gt;

&lt;p&gt;もちろん Theme は自身で作成することもできる。
作成するには &lt;code&gt;hugo new theme&lt;/code&gt; コマンドを使う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo new theme sample-theme

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  .editorconfig
│  .gitignore
│  config.toml
│  README.md
│
├─archetypes
├─content
│  └─practice
│          hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  ├─practice
│  │      single.html
│  │
│  ├─section
│  │      practice.html
│  │
│  └─_default
│          list.html
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─css
│  │      reset.css
│  │      text.css
│  │
│  ├─practice
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─hello
│  │          index.html
│  │
│  └─tags
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
├─static
└─themes
    └─sample-theme
        │  LICENSE.md
        │  theme.toml
        │
        ├─archetypes
        │      default.md
        │
        ├─layouts
        │  │  index.html
        │  │
        │  ├─partials
        │  │      footer.html
        │  │      header.html
        │  │
        │  └─_default
        │          list.html
        │          single.html
        │
        └─static
            ├─css
            └─js

C:\hugo-env\www&amp;gt;hugo --theme=&amp;quot;sample-theme&amp;quot;
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 37 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;いくつかファイルが作成されているが &lt;code&gt;LICENSE.md&lt;/code&gt; と &lt;code&gt;theme.toml&lt;/code&gt; 以外は空のファイルである。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;LICENSE.md&lt;/code&gt; はライセンスファイルで MIT ライセンスの雛形が出力されている。
そのまま使うのであればライセンス発行者の名前を記述する。
他のライセンスを使うのであれば他のファイルに差し替えるなり削除するなりすればよい。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;theme.toml&lt;/code&gt; には theme の情報を記述する。
初期値は以下のようになっている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml:themes/sample-theme/theme.toml&#34;&gt;# theme.toml template for a Hugo theme
# See https://github.com/gohugoio/hugoThemes#themetoml for an example

name = &amp;quot;Sample Theme&amp;quot;
license = &amp;quot;MIT&amp;quot;
licenselink = &amp;quot;https://github.com/yourname/yourtheme/blob/master/LICENSE.md&amp;quot;
description = &amp;quot;&amp;quot;
homepage = &amp;quot;http://siteforthistheme.com/&amp;quot;
tags = [&amp;quot;&amp;quot;, &amp;quot;&amp;quot;]
features = [&amp;quot;&amp;quot;, &amp;quot;&amp;quot;]
min_version = 0.14

[author]
  name = &amp;quot;&amp;quot;
  homepage = &amp;quot;&amp;quot;

# If porting an existing theme
[original]
  name = &amp;quot;&amp;quot;
  homepage = &amp;quot;&amp;quot;
  repo = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これに必要な項目を書き込めばいい。&lt;/p&gt;

&lt;h2 id=&#34;customaize&#34;&gt;Theme をカスタマイズする&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/hello/&#34; title=&#34;インストールから Hello World まで&#34;&gt;前々回&lt;/a&gt;を読んだ方はピンと来ると思うが， theme のフォルダ構成（&lt;code&gt;archetypes&lt;/code&gt;, &lt;code&gt;layouts&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;）は作業環境のそれとほぼ同じである。
実は theme の構成は作業環境で上書きできる。
従って theme を自サイト用にカスタマイズするのであれば， &lt;code&gt;themes&lt;/code&gt; フォルダ内は触らないようにして，作業環境側で上書きするのがスマートである。&lt;/p&gt;

&lt;h2 id=&#34;mytheme&#34;&gt;拙作 Theme “hugo-theme-text”&lt;/h2&gt;

&lt;p&gt;今回，このサイトを構築するにあたり，シンプルなテキスト・サイト用の theme を作成・公開した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/hugo-theme-text&#34;&gt;spiegel-im-spiegel/hugo-theme-text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;次回からはこの theme をベースに説明をしていきたいと思う。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Categories, Tags そして Section - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/section/" />
		<id>tag:text.Baldanders.info,2015-09-11:/hugo/section/</id>
		<published>2015-09-11T17:58:32+09:00</published>
		<updated>2016-12-14T10:20:58+09:00</updated>
		<summary>前回の続き。今回は Categories, Tags そして Section について書いてみる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（初出： &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/4c5859f7cac877068742&#34;&gt;ゼロから始める Hugo — Categories, Tags そして Section - Qiita&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/hello/&#34; title=&#34;インストールから Hello World まで&#34;&gt;前回&lt;/a&gt;の続き。
今回は Categories, Tags そして Section について書いてみる。&lt;/p&gt;

&lt;h2 id=&#34;categories-tags&#34;&gt;Categories と Tags&lt;/h2&gt;

&lt;p&gt;まずは Categories と Tags について。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では記事に Categories および Tags を設定することができる。
以下のように記述すれば良い。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;+++
date = &amp;quot;2015-09-05T16:40:41+09:00&amp;quot;
draft = false
title = &amp;quot;Hello!&amp;quot;
categories = [ &amp;quot;hugo&amp;quot; ]
tags = [ &amp;quot;hello&amp;quot;, &amp;quot;world&amp;quot; ]
+++

ようこそ， [Hugo](https://gohugo.io/) の世界へ！
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように Categories および Tags のキーワードを配列で列挙する（キーワードがひとつでも配列に入れること）。
これをビルドすると以下のようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 20 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│      hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  └─_default
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─hello
│  │      index.html
│  │
│  └─tags
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出力先に &lt;code&gt;categories&lt;/code&gt; および &lt;code&gt;tags&lt;/code&gt; フォルダが作成され，更にその下にキーワードのフォルダが作成されているのがおわかりだろうか。
キーワードのフォルダの &lt;code&gt;index.xml&lt;/code&gt; は feed である。
つまり &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; ではカテゴリ・タグ毎に自動で feed が作成される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; は（テンプレートがないため）この時点では空である。テンプレートは &lt;code&gt;layouts/_default&lt;/code&gt; フォルダに &lt;code&gt;list.html&lt;/code&gt; ファイルを配置する。
名前からして Categories/Tags 毎に記事を列挙することを期待しているわけやね（笑） とりあえず中身はこんな感じでどうだろう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;List of {{ .Title }} -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;List of {{ .Title }}&amp;lt;/h1&amp;gt;

&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;
{{ range .Data.Pages }}
	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;lt;/time&amp;gt;){{ if .Draft }} #Draft{{ end }}&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ビルド結果はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;List of Hugo -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;List of Hugo&amp;lt;/h1&amp;gt;

&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおう。キーワードの頭文字が勝手に大文字に変換されてるぜ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/hello/&#34; title=&#34;インストールから Hello World まで&#34;&gt;前回&lt;/a&gt;を読んでいる人はトップページのテンプレート &lt;code&gt;layouts/index.html&lt;/code&gt; とほぼ同じ構成であることに気づくと思う。
違うのは &lt;code&gt;{{ .Title }}&lt;/code&gt; には Categories/Tags のキーワードが入ることと &lt;code&gt;{{ range }}&lt;/code&gt; 構文の対象変数が &lt;code&gt;.Site.Pages&lt;/code&gt; ではなく &lt;code&gt;.Data.Pages&lt;/code&gt; であることだ。&lt;/p&gt;

&lt;p&gt;ついでに記事ページで Categories/Tags を表示できるようにしてみよう。
&lt;code&gt;layouts/_default/single.html&lt;/code&gt; を以下のように記述する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }} -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	{{ with .Params.categories }}&amp;lt;div&amp;gt;Categories:{{ range . }} &amp;lt;a href=&amp;quot;/categories/{{ . | urlize }}/&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
	{{ with .Params.tags }}&amp;lt;div&amp;gt;Tags:{{ range . }} &amp;lt;a href=&amp;quot;/tags/{{ . | urlize }}/&amp;quot;&amp;gt;#{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;{{ .Content }}&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下がビルド結果。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	&amp;lt;div&amp;gt;Categories: &amp;lt;a href=&amp;quot;/categories/hugo/&amp;quot;&amp;gt;hugo&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;div&amp;gt;Tags: &amp;lt;a href=&amp;quot;/tags/hello/&amp;quot;&amp;gt;#hello&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;/tags/world/&amp;quot;&amp;gt;#world&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;{{ with }}&lt;/code&gt; 構文の中に &lt;code&gt;{{ range }}&lt;/code&gt; 構文が入ってて分かりにくいが，変数のスコープに注意すれば，それほど難しくはないはず。
注意しないといけないのは， Categories/Tags の変数名が &lt;code&gt;.Categories&lt;/code&gt;, &lt;code&gt;.Tags&lt;/code&gt; ではなく &lt;code&gt;.Params.categories&lt;/code&gt;, &lt;code&gt;.Params.tags&lt;/code&gt; になっている点である。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{{ . | urlize }}&lt;/code&gt; というのはパイプ機能の一種で， &lt;code&gt;urlize&lt;/code&gt; であれば左側の値（文字列）を URL として安全な文字列に変換してくれる。&lt;/p&gt;

&lt;p&gt;Categories と Tags との間に機能上の違いはない。
名前が違うだけである。
おそらく他のブログサービスとの互換性の為にあるのだろうが，「ゼロから始める」のであれば Categories と Tags を併記することに意味はない。
それなら後述する Section と組み合わせるほうが合理的である。&lt;/p&gt;

&lt;h3 id=&#34;params&#34;&gt;.Params のルール&lt;/h3&gt;

&lt;p&gt;Front matter で指定する変数は，「&lt;a href=&#34;https://gohugo.io/templates/variables/&#34;&gt;テンプレート変数&lt;/a&gt;」にある既定のもの以外は &lt;code&gt;.Params&lt;/code&gt; 以下に自動的に組み換えられる。
なおかつ &lt;code&gt;.Params&lt;/code&gt; 以下の変数名は小文字になる決まりである。
Categories/Tags は標準機能なのだが，どういうわけかこれだけ &lt;code&gt;.Params&lt;/code&gt; 以下に組み替えられる。
なんだかなぁ。「歴史的経緯」ってやつだろうか&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;config.toml&lt;/code&gt; によるサイト設定では &lt;code&gt;.Site.Params&lt;/code&gt; への暗黙的な組み換えは行われないため，明示的に記述する必要がある。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
author = &amp;quot;Spiegel&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この非対称性も分かりにくいんだよなぁ。&lt;/p&gt;

&lt;h3 id=&#34;taxonomy&#34;&gt;Taxonomy&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; には Taxonomy と呼ばれる機能があって，標準では Categories/Tags のリストを取り出すことができる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
たとえば， &lt;code&gt;layouts/index.html&lt;/code&gt; をこんな感じに書く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h2&amp;gt;Taxonomy Terms&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;{{ range $taxonomyname, $taxonomy := .Site.Taxonomies }}
    &amp;lt;li&amp;gt;{{ $taxonomyname }}
        &amp;lt;ul&amp;gt;{{ range $key, $value := $taxonomy }}
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/{{ $taxonomyname | urlize }}/{{ $key | urlize }}&amp;quot;&amp;gt;{{ $key }}&amp;lt;/a&amp;gt; ({{ $value.Count }})
                &amp;lt;ul&amp;gt;{{ range $value.Pages }}
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .LinkTitle }}&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                {{ end }}&amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;
        {{ end }}&amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;
{{ end }}&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これをビルドするとこんな感じに展開される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h2&amp;gt;Taxonomy Terms&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;
    &amp;lt;li&amp;gt;categories
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/categories/hugo&amp;quot;&amp;gt;hugo&amp;lt;/a&amp;gt; (1)
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;

    &amp;lt;li&amp;gt;tags
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/tags/hello&amp;quot;&amp;gt;hello&amp;lt;/a&amp;gt; (1)
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;

            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/tags/world&amp;quot;&amp;gt;world&amp;lt;/a&amp;gt; (1)
                &amp;lt;ul&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tags の一覧のみを取得したいのであれば，もっと簡単に&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h2&amp;gt;Tags&amp;lt;/h2&amp;gt;
&amp;lt;ul&amp;gt;{{ range $key, $value := .Site.Taxonomies.tags.ByCount }}
	&amp;lt;li&amp;gt;#&amp;lt;a href=&amp;quot;/tags/{{ $key | urlize }}&amp;quot;&amp;gt;{{ $key }}&amp;lt;/a&amp;gt; ({{ $value.Count }})&amp;lt;/li&amp;gt;
{{ end }}&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でもよい。
ちなみに &lt;code&gt;.Site.Taxonomies.tags.ByCount&lt;/code&gt; は Tags の一覧をタグされている記事数の順で sort したものである。
アルファベット順にするには &lt;code&gt;.Site.Taxonomies.tags.Alphabetical&lt;/code&gt; とする。&lt;/p&gt;

&lt;p&gt;（追記： Categories/Tags の一覧ページを作る方法は&lt;a href=&#34;http://text.baldanders.info/hugo/categories-and-tags-list/&#34;&gt;こちら&lt;/a&gt;）&lt;/p&gt;

&lt;h2 id=&#34;section&#34;&gt;Section&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;content&lt;/code&gt; フォルダの下に &lt;code&gt;practice&lt;/code&gt; というフォルダを作り，ここに &lt;code&gt;hello.md&lt;/code&gt; を移動させてみよう。
新たに作る場合は path 付きで作成すればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo new practice/hello.md
C:\hugo-env\www\content\practice\hello.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでビルドしてみる（ファイルを移動した際は出力フォルダの中をいったんクリーンにしてからビルドするとゴミが残らない）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
1 pages created
0 paginator pages created
2 tags created
1 categories created
in 19 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│  └─practice
│          hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  └─_default
│          list.html
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─practice
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─hello
│  │          index.html
│  │
│  └─tags
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;hello/index.html&lt;/code&gt; が &lt;code&gt;practice/hello/index.html&lt;/code&gt; に配置されるのは予想通りだと思うが， &lt;code&gt;practice&lt;/code&gt; に &lt;code&gt;index.html&lt;/code&gt; と &lt;code&gt;index.xml&lt;/code&gt; が生成されているのがおわかりだろうか。
&lt;code&gt;practice/index.html&lt;/code&gt; の中身はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;List of Practices -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;List of Practices&amp;lt;/h1&amp;gt;

&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/practice/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これは &lt;code&gt;layouts/_default/list.html&lt;/code&gt; テンプレートで生成されたページだ。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; ではフォルダ付きの記事を作成すると，そのフォルダが Section として機能する。&lt;/p&gt;

&lt;p&gt;当然だが，ひとつの記事はひとつの Section にしか帰属できない。
これは先の Categories/Tags との大きな違いである。
Section と Categories/Tags を組み合わせれば縦串と横串で記事を指示できるようになる。&lt;/p&gt;

&lt;p&gt;ついでに記事ページで Section を表示できるようにしてみよう。
たとえば， &lt;code&gt;layouts/_default/single.html&lt;/code&gt; をこんな感じに書く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }}{{ with .Section }} -- {{ . }}{{ end }} -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }}{{ with .Section }} [&amp;lt;a href=&amp;quot;/{{ . | urlize }}/&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;]{{ end }}&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	{{ with .Params.categories }}&amp;lt;div&amp;gt;Categories:{{ range . }} &amp;lt;a href=&amp;quot;/categories/{{ . | urlize }}/&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
	{{ with .Params.tags }}&amp;lt;div&amp;gt;Tags:{{ range . }} &amp;lt;a href=&amp;quot;/tags/{{ . | urlize }}/&amp;quot;&amp;gt;#{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;{{ .Content }}&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下がビルド結果。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! -- practice -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! [&amp;lt;a href=&amp;quot;/practice/&amp;quot;&amp;gt;practice&amp;lt;/a&amp;gt;]&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	&amp;lt;div&amp;gt;Categories: &amp;lt;a href=&amp;quot;/categories/hugo/&amp;quot;&amp;gt;hugo&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;div&amp;gt;Tags: &amp;lt;a href=&amp;quot;/tags/hello/&amp;quot;&amp;gt;#hello&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;/tags/world/&amp;quot;&amp;gt;#world&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;記事のフォルダ階層はいくらでも深くできるが， Section として認識されるのは直下のフォルダのみのようである。
たとえば &lt;code&gt;content/practice/hello.md&lt;/code&gt; を &lt;code&gt;content/practice/firstcode/hello.md&lt;/code&gt; に移動してビルドすると（出力フォルダはクリーンアップしてね）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│  └─practice
│      └─firstcode
│              hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  └─_default
│          list.html
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─practice
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─firstcode
│  │      └─hello
│  │              index.html
│  │
│  └─tags
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! -- practice -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! [&amp;lt;a href=&amp;quot;/practice/&amp;quot;&amp;gt;practice&amp;lt;/a&amp;gt;]&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	&amp;lt;div&amp;gt;Categories: &amp;lt;a href=&amp;quot;/categories/hugo/&amp;quot;&amp;gt;hugo&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;div&amp;gt;Tags: &amp;lt;a href=&amp;quot;/tags/hello/&amp;quot;&amp;gt;#hello&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;/tags/world/&amp;quot;&amp;gt;#world&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;というわけで，あくまでも &lt;code&gt;practice&lt;/code&gt; フォルダが Section になっているのがわかると思う。&lt;/p&gt;

&lt;h3 id=&#34;section-custom&#34;&gt;Section ごとのカスタマイズ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では Section ごとにカスタマイズすることができる。
&lt;code&gt;layouts&lt;/code&gt; フォルダに &lt;code&gt;section&lt;/code&gt; フォルダを作成し，その中に &lt;code&gt;&amp;lt;section name&amp;gt;.html&lt;/code&gt; ファイルを作成すると，そのテンプレートで Section のトップページ（&lt;code&gt;&amp;lt;section name&amp;gt;/index.html&lt;/code&gt;）を作成する。
今回は &lt;code&gt;layouts/section/practice.html&lt;/code&gt; を作成してみる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hugo の練習 -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hugo の練習&amp;lt;/h1&amp;gt;

&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;
{{ range .Data.Pages }}
	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;lt;/time&amp;gt;){{ if .Draft }} #Draft{{ end }}&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ビルド結果。変わり映えしなくてすみません。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hugo の練習 -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hugo の練習&amp;lt;/h1&amp;gt;

&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/practice/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更に Section 内の記事ページもカスタマイズできる。
これは &lt;code&gt;layouts&lt;/code&gt; フォルダに Section 名のフォルダを作成し，その中に &lt;code&gt;single.html&lt;/code&gt; を配置する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }} -- Hugo の練習 | {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }} -- Hugo の練習&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	{{ with .Params.categories }}&amp;lt;div&amp;gt;Categories:{{ range . }} &amp;lt;a href=&amp;quot;/categories/{{ lower . | urlize }}/&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
	{{ with .Params.tags }}&amp;lt;div&amp;gt;Tags:{{ range . }} &amp;lt;a href=&amp;quot;/tags/{{ lower . | urlize }}/&amp;quot;&amp;gt;#{{ . }}&amp;lt;/a&amp;gt;{{ end }}&amp;lt;/div&amp;gt;{{ end }}
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;{{ .Content }}&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! -- Hugo の練習 | Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! -- Hugo の練習&amp;lt;/h1&amp;gt;
&amp;lt;nav&amp;gt;
	&amp;lt;div&amp;gt;Categories: &amp;lt;a href=&amp;quot;/categories/hugo/&amp;quot;&amp;gt;hugo&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;div&amp;gt;Tags: &amp;lt;a href=&amp;quot;/tags/hello/&amp;quot;&amp;gt;#hello&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;/tags/world/&amp;quot;&amp;gt;#world&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これも変わり映えしなくてすみません。&lt;/p&gt;

&lt;p&gt;しかし，なんでこんなテンプレートの構成なんだろう。
これだと &lt;code&gt;section&lt;/code&gt; や &lt;code&gt;_default&lt;/code&gt; という名前のセクションはカスタマイズ出来ないことになる（まだ説明してないが &lt;code&gt;layouts&lt;/code&gt; フォルダには他にも &lt;code&gt;partials&lt;/code&gt; や &lt;code&gt;shortcodes&lt;/code&gt; といったフォルダもある）。
そうではなくて，  &lt;code&gt;layouts/section&lt;/code&gt; フォルダの下にセクション名のフォルダを掘ってその中に &lt;code&gt;list.html&lt;/code&gt; や &lt;code&gt;single.html&lt;/code&gt; を配置すればスッキリするのに。&lt;/p&gt;

&lt;p&gt;さきほどの &lt;code&gt;.Params&lt;/code&gt; の話といい，どうも &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; は名前管理がいきあたりばったりな気がする。&lt;/p&gt;

&lt;h3 id=&#34;conflict&#34;&gt;categories/hugo という名前の記事はどうなるの？&lt;/h3&gt;

&lt;p&gt;これも名前に関する話。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;categories/hugo.md&lt;/code&gt; という名前の記事は &lt;code&gt;categories/hugo/index.html&lt;/code&gt; に展開される。
これって Categories の機能と丸かぶりである。
実は &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では名前が衝突した際の挙動は明文化されていない（筈）。
強いて言うなら実装依存で状況依存である。またビルド時にエラーになることもない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo new categories/hugo.md
C:\hugo-env\www\content\categories\hugo.md created

C:\hugo-env\www&amp;gt;hugo undraft content/categories/hugo.md

C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
2 pages created
0 paginator pages created
2 tags created
1 categories created
in 24 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│  ├─categories
│  │      hugo.md
│  │
│  └─practice
│          hello.md
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  └─_default
│          list.html
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─categories
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─hugo
│  │          index.html
│  │          index.xml
│  │
│  ├─practice
│  │  │  index.html
│  │  │  index.xml
│  │  │
│  │  └─hello
│  │          index.html
│  │
│  └─tags
│      ├─hello
│      │      index.html
│      │      index.xml
│      │
│      └─world
│              index.html
│              index.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上の場合は &lt;code&gt;categories/hugo/index.html&lt;/code&gt; が記事ページになった。
他にも，このフォルダ構成なら &lt;code&gt;practice.md&lt;/code&gt; も名前が衝突する。
このような衝突を避けるにはユーザ側で名前を管理するしかない。
小規模なサイトなら人間が気をつければいいが，中規模以上で複数人が関わるようになると結構危ないかもしれない。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/_shun_sato_/items/87888fa8425e55b1c758&#34;&gt;Hugoでタグやカテゴリのリンク切れが起こる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;Categories/Tags の配置が特殊なのは，これらが &lt;a href=&#34;#taxonomy&#34;&gt;Taxonomy&lt;/a&gt; として実装されているからのようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:b&#34;&gt;Taxonomy の項目は Categories/Tags 以外にも任意に設定することができる（&lt;q lang=&#34;en&#34;&gt;&lt;a href=&#34;https://gohugo.io/taxonomies/usage/&#34;&gt;Using Taxonomies&lt;/a&gt;&lt;/q&gt; 参照）。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>インストールから Hello World まで - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/hello/" />
		<id>tag:text.Baldanders.info,2015-09-11:/hugo/hello/</id>
		<published>2015-09-11T17:58:23+09:00</published>
		<updated>2017-03-14T11:26:54+09:00</updated>
		<summary>自サイトのブログ機能を Hugo で外出しにする作業を行うにあたって，いろいろ試しながら作業している。ここではその時のメモを公開する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（初出： &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/eac7bf2a3c0fc19afcbf&#34;&gt;ゼロから始める Hugo — インストールから Hello World まで - Qiita&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000870.shtml&#34;&gt;私の本家サイトのブログ機能を外出しにする作業&lt;/a&gt;を行うにあたり，ツールとしては &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; を使うことにしたのだが，初めて使うツールなので，いろいろ試しながら作業している。
ここではその時のメモを公開する。&lt;/p&gt;

&lt;h2 id=&#34;install&#34;&gt;Hugo のインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の実行モジュールは公式サイトから取得できるのだが Go 言語環境のある方は是非 &lt;code&gt;go get&lt;/code&gt; から取得することをお勧めする。
&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;Hugo の repository&lt;/a&gt; はサイトのドキュメントのビルド環境も同梱されているため色々と参考になる。&lt;/p&gt;

&lt;p&gt;なお &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では非常に多くのパッケージを利用していて，取得の際には git の他に Mercurial が必要である（参照： 「&lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/a52a47942fd3946bb583&#34;&gt;はじめての Go 言語 (on Windows) その3&lt;/a&gt;」）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\workspace&amp;gt;mkdir hugo

C:\workspace&amp;gt;cd hugo

C:\workspace\hugo&amp;gt;SET GOPATH=C:\workspace\hugo

C:\workspace\hugo&amp;gt;go get -v github.com/spf13/hugo
github.com/spf13/hugo (download)
github.com/kardianos/osext (download)
github.com/spf13/afero (download)
github.com/spf13/cast (download)
github.com/spf13/jwalterweatherman (download)
github.com/spf13/cobra (download)
github.com/cpuguy83/go-md2man (download)
github.com/russross/blackfriday (download)
github.com/shurcooL/sanitized_anchor_name (download)
github.com/inconshreveable/mousetrap (download)
github.com/spf13/pflag (download)
github.com/spf13/fsync (download)
github.com/PuerkitoBio/purell (download)
github.com/opennota/urlesc (download)
github.com/miekg/mmark (download)
github.com/BurntSushi/toml (download)
Fetching https://gopkg.in/yaml.v2?go-get=1
Parsing meta tags from https://gopkg.in/yaml.v2?go-get=1 (status code 200)
get &amp;quot;gopkg.in/yaml.v2&amp;quot;: found meta tag main.metaImport{Prefix:&amp;quot;gopkg.in/yaml.v2&amp;quot;, VCS:&amp;quot;git&amp;quot;, RepoRoot:&amp;quot;https://gopkg.in/yaml.v2&amp;quot;} at https://gopkg.in/yaml.v2?go-get=1
gopkg.in/yaml.v2 (download)
github.com/spf13/viper (download)
github.com/kr/pretty (download)
github.com/kr/text (download)
github.com/magiconair/properties (download)
github.com/mitchellh/mapstructure (download)
Fetching https://golang.org/x/text/transform?go-get=1
Parsing meta tags from https://golang.org/x/text/transform?go-get=1 (status code 200)
get &amp;quot;golang.org/x/text/transform&amp;quot;: found meta tag main.metaImport{Prefix:&amp;quot;golang.org/x/text&amp;quot;, VCS:&amp;quot;git&amp;quot;, RepoRoot:&amp;quot;https://go.googlesource.com/text&amp;quot;} at https://golang.org/x/text/transform?go-get=1
get &amp;quot;golang.org/x/text/transform&amp;quot;: verifying non-authoritative meta tag
Fetching https://golang.org/x/text?go-get=1
Parsing meta tags from https://golang.org/x/text?go-get=1 (status code 200)
golang.org/x/text (download)
Fetching https://golang.org/x/text/unicode/norm?go-get=1
Parsing meta tags from https://golang.org/x/text/unicode/norm?go-get=1 (status code 200)
get &amp;quot;golang.org/x/text/unicode/norm&amp;quot;: found meta tag main.metaImport{Prefix:&amp;quot;golang.org/x/text&amp;quot;, VCS:&amp;quot;git&amp;quot;, RepoRoot:&amp;quot;https://go.googlesource.com/text&amp;quot;} at https://golang.org/x/text/unicode/norm?go-get=1
get &amp;quot;golang.org/x/text/unicode/norm&amp;quot;: verifying non-authoritative meta tag
bitbucket.org/pkg/inflect (download)
github.com/dchest/cssmin (download)
github.com/eknkc/amber (download)
github.com/yosssi/ace (download)
github.com/spf13/nitro (download)
github.com/gorilla/websocket (download)
Fetching https://gopkg.in/fsnotify.v1?go-get=1
Parsing meta tags from https://gopkg.in/fsnotify.v1?go-get=1 (status code 200)
get &amp;quot;gopkg.in/fsnotify.v1&amp;quot;: found meta tag main.metaImport{Prefix:&amp;quot;gopkg.in/fsnotify.v1&amp;quot;, VCS:&amp;quot;git&amp;quot;, RepoRoot:&amp;quot;https://gopkg.in/fsnotify.v1&amp;quot;} at https://gopkg.in/fsnotify.v1?go-get=1
gopkg.in/fsnotify.v1 (download)
github.com/shurcooL/sanitized_anchor_name
github.com/spf13/afero
github.com/inconshreveable/mousetrap
github.com/spf13/hugo/bufferpool
github.com/kr/text
github.com/kardianos/osext
github.com/spf13/jwalterweatherman
github.com/spf13/pflag
github.com/russross/blackfriday
github.com/opennota/urlesc
github.com/BurntSushi/toml
github.com/PuerkitoBio/purell
gopkg.in/yaml.v2
github.com/spf13/cast
github.com/kr/pretty
github.com/magiconair/properties
github.com/spf13/fsync
github.com/cpuguy83/go-md2man/md2man
github.com/spf13/hugo/hugofs
github.com/mitchellh/mapstructure
golang.org/x/text/transform
bitbucket.org/pkg/inflect
github.com/dchest/cssmin
github.com/miekg/mmark
github.com/eknkc/amber/parser
github.com/spf13/cobra
github.com/yosssi/ace
golang.org/x/text/unicode/norm
github.com/spf13/nitro
github.com/spf13/hugo/parser
github.com/spf13/viper
github.com/eknkc/amber
github.com/gorilla/websocket
github.com/spf13/hugo/utils
gopkg.in/fsnotify.v1
github.com/spf13/hugo/transform
github.com/spf13/hugo/watcher
github.com/spf13/hugo/livereload
github.com/spf13/hugo/helpers
github.com/spf13/hugo/source
github.com/spf13/hugo/target
github.com/spf13/hugo/tpl
github.com/spf13/hugo/hugolib
github.com/spf13/hugo/create
github.com/spf13/hugo/commands
github.com/spf13/hugo

C:\workspace\hugo&amp;gt;bin\hugo.exe version
Hugo Static Site Generator v0.15-DEV BuildDate: 2015-09-05T13:45:44+09:00
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した実行モジュールは，作成された場所に &lt;code&gt;PATH&lt;/code&gt; を通すか， &lt;code&gt;PATH&lt;/code&gt; の通った場所にコピーすればよい。&lt;/p&gt;

&lt;h2 id=&#34;env&#34;&gt;作業環境の作成&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; 用の作業環境を作るには &lt;code&gt;hugo new site&lt;/code&gt; コマンドを起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:&amp;gt;hugo new site C:\hugo-env\www

C:&amp;gt;cd C:\hugo-env\www

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
├─data
├─layouts
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ここで &lt;code&gt;config.toml&lt;/code&gt; はサイト設定用のファイルである。初期値は以下のようになっている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml:config.toml&#34;&gt;baseurl = &amp;quot;http://replace-this-with-your-hugo-site.com/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;My New Hugo Site&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なお， TOML 形式のファイルの読み書きは以下が参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/b4b4r07/items/77c327742fc2256d6cbe&#34;&gt;設定ファイル記述言語 TOML - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この中で必須なのは baseurl のみで，これがないとビルドエラーになる（ただし &lt;code&gt;--baseUrl&lt;/code&gt; オプションを付ければ回避できる）。
今回は &lt;code&gt;config.toml&lt;/code&gt; を以下のようにセットする。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml:config.toml&#34;&gt;baseurl = &amp;quot;http://hello.example.com/&amp;quot;
languageCode = &amp;quot;ja&amp;quot;
title = &amp;quot;Hello World!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;では，いきなりビルドしてみよう（えー）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
0 pages created
0 paginator pages created
0 categories created
0 tags created
in 7 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
├─data
├─layouts
├─public
│      404.html
│      index.html
│      index.xml
│      sitemap.xml
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;public&lt;/code&gt; フォルダとその下に4つのファイルが作成されている（ちなみに出力先は &lt;code&gt;-d&lt;/code&gt; または &lt;code&gt;--destination&lt;/code&gt; オプションで変更できる）。
現時点では &lt;code&gt;404.html&lt;/code&gt; と &lt;code&gt;index.html&lt;/code&gt; は空。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;index.xml&lt;/code&gt; は feed 用のファイルで RSS 2.0 形式で書かれている（何故か atom の語彙を使っている）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml:index.xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;
&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;http://hello.example.com/&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content on Hello World!&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;
    &amp;lt;language&amp;gt;jp&amp;lt;/language&amp;gt;
    &amp;lt;atom:link href=&amp;quot;http://hello.example.com/index.xml&amp;quot; rel=&amp;quot;self&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; /&amp;gt;

  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;sitemap.xml&lt;/code&gt; は文字通りサイトマップ記述ファイル（SEO 用？）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml:sitemap.xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;
&amp;lt;urlset xmlns=&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&amp;gt;

  &amp;lt;url&amp;gt;
    &amp;lt;loc&amp;gt;http://hello.example.com/&amp;lt;/loc&amp;gt;
    &amp;lt;priority&amp;gt;0&amp;lt;/priority&amp;gt;
  &amp;lt;/url&amp;gt;

&amp;lt;/urlset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;server-mode&#34;&gt;サーバモード&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では &lt;code&gt;hugo server&lt;/code&gt; コマンドによりサーバモードで起動する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo server
0 draft content
0 future content
0 pages created
0 paginator pages created
0 categories created
0 tags created
in 7 ms
Serving pages from C:\hugo-env\www\public
Web Server is available at http://127.0.0.1:1313/
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この状態で &lt;code&gt;http://127.0.0.1:1313/&lt;/code&gt; をブラウザで開けばいいのだが，現時点では &lt;code&gt;index.html&lt;/code&gt; が空なので何も表示されない。
ちなみに，この状態の &lt;code&gt;index.xml&lt;/code&gt; は&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml:index.xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;
&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;http://localhost:1313/&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content on Hello World!&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;
    &amp;lt;language&amp;gt;jp&amp;lt;/language&amp;gt;
    &amp;lt;atom:link href=&amp;quot;http://localhost:1313/index.xml&amp;quot; rel=&amp;quot;self&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; /&amp;gt;

  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっている。
URL が変更されていることにお気づきだろうか。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; は動作モードによって URL を自動的に書き換えてくれるのでデバッグが容易である。
ただしサーバモードの状態で本番環境に deploy しようとすると大変なことになるのでご注意を。
deploy する前には必ずビルドしよう（またはビルド結果の出力先を分ける）。&lt;/p&gt;

&lt;p&gt;個人で作業する場合はこれで問題ないが，デバッグ用サーバを共有する場合には &lt;code&gt;http://localhost:1313/&lt;/code&gt; では都合が悪いので &lt;code&gt;--bind&lt;/code&gt; および &lt;code&gt;--port&lt;/code&gt; オプションを付加する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo server --bind=&amp;quot;hostname&amp;quot; --port=8080 --watch
0 draft content
0 future content
0 pages created
0 paginator pages created
0 tags created
0 categories created
in 8 ms
Watching for changes in C:\hugo-env\www/{data,content,layouts,static}
Serving pages from C:\hugo-env\www\public
Web Server is available at http://hostname:8080/
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;http://hostname:8080/&lt;/code&gt; でアクセスできるようになる。
ちなみに &lt;code&gt;--watch&lt;/code&gt; オプションを付加すると，入力フォルダを監視して変更があればリコンパイルする。便利！&lt;/p&gt;

&lt;h2 id=&#34;template&#34;&gt;はじめてのテンプレート&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; を生成するにはテンプレートを用意する必要がある。
&lt;code&gt;index.html&lt;/code&gt; のテンプレートは &lt;code&gt;layouts&lt;/code&gt; フォルダに &lt;code&gt;index.html&lt;/code&gt; というファイル名で配置する（安直！）&lt;/p&gt;

&lt;p&gt;それじゃあ，早速テンプレートを組んでみる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:layouts/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Hello Hugo World!&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;{{ }}&lt;/code&gt; で囲まれている部分が埋め込み構文だ。
たとえば &lt;code&gt;{{ .Title }}&lt;/code&gt; にはタイトルが入る。
今回はトップページなので， &lt;code&gt;config.toml&lt;/code&gt; で &lt;code&gt;title&lt;/code&gt; に設定した文字列が入る。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{{ with .Site.LanguageCode }} ... {{ else }} ... {{ end }}&lt;/code&gt; はいわゆる with 構文ってやつ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
これ便利だよね。ちなみに &lt;code&gt;with&lt;/code&gt; で指定する変数が存在しない場合は &lt;code&gt;{{ else }}&lt;/code&gt; 以降が走る。
似た書式で &lt;code&gt;{{ if .Site.LanguageCode }} ... {{ else }} ... {{ end }}&lt;/code&gt; もあるが， &lt;code&gt;with&lt;/code&gt; とは変数のスコープが異なるので注意（慣れるまでは結構ハマった）。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ if .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ .Site.LanguageCode }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これをビルドした結果はこうなる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Hello Hugo World!&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに &lt;code&gt;config.toml&lt;/code&gt; で &lt;code&gt;baseurl&lt;/code&gt; 以外を削除してビルドするとこうなる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Hello Hugo World!&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;埋め込み構文がどのように機能しているか分かると思う。&lt;/p&gt;

&lt;h3 id=&#34;404&#34;&gt;404.html をどうしよう&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;404.html&lt;/code&gt; はページが存在しない場合（404）に代わりに表示するページである。
普通 404 では Web サーバで決められたページを表示するのだが， GitHub Pages のようにサイトのトップページにある &lt;code&gt;404.html&lt;/code&gt; を表示してくれる場合もある。
なら &lt;code&gt;404.html&lt;/code&gt; を空っぽにしておくわけにはいかないよねぇ。&lt;/p&gt;

&lt;p&gt;固定の内容なら &lt;code&gt;static&lt;/code&gt; フォルダ直下に &lt;code&gt;404.html&lt;/code&gt; を置く手もある（&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では &lt;code&gt;static&lt;/code&gt; フォルダ以下のファイルはそのままコピーされるが &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のコントロール外となる）。
また， &lt;code&gt;layouts&lt;/code&gt; フォルダ直下にテンプレートを置く手もある。たとえばこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:layouts/404.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
{{ .Hugo.Generator }}
&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;{{ with .Site.Params.error404 }}&amp;lt;p&amp;gt;{{ . }}&amp;lt;/p&amp;gt;{{ end }}&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これをビルドするとこんな感じになる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/404.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;meta name=&amp;quot;generator&amp;quot; content=&amp;quot;Hugo 0.15-DEV&amp;quot; /&amp;gt;
&amp;lt;title&amp;gt;404 Page not found&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;あると思った？ 残念！ 404 でした。&amp;lt;/p&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;post&#34;&gt;記事を書く&lt;/h2&gt;

&lt;p&gt;さて，いよいよ記事を書いてみる。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; では今どきの流行にのっとって Markdown 形式のファイルを入力ファイルにしている。
自前でファイルを用意してもよいが，新規に作成するなら &lt;code&gt;hugo new&lt;/code&gt; コマンドで作成するのがよいだろう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo new hello.md
C:\hugo-env\www\content\hello.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成されたファイルを見てみると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown:content\hello.md&#34;&gt;+++
date = &amp;quot;2015-09-05T16:40:41+09:00&amp;quot;
draft = true
title = &amp;quot;hello&amp;quot;

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;などとなっている。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;+++&lt;/code&gt; で囲まれている部分は “front matter” と呼ばれている領域で，記事ごとの設定情報を格納する。
&lt;code&gt;+++&lt;/code&gt; の場合は TOML， &lt;code&gt;---&lt;/code&gt; の場合は YAML， &lt;code&gt;{ }&lt;/code&gt; で挟んである場合は JSON として解釈されるようだ。&lt;/p&gt;

&lt;p&gt;このファイルに記事を入力する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown::content\hello.md&#34;&gt;+++
date = &amp;quot;2015-09-05T16:40:41+09:00&amp;quot;
draft = false
title = &amp;quot;Hello!&amp;quot;
+++

ようこそ， [Hugo](https://gohugo.io/) の世界へ！
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;草稿記事の場合は &lt;code&gt;draft&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; のままでよいが，そうでない場合は &lt;code&gt;false&lt;/code&gt; にすること。
ちなみに &lt;code&gt;-D&lt;/code&gt; または &lt;code&gt;--buildDrafts&lt;/code&gt; オプションを付けてビルドすると草稿版も含めて出力される。
先ほどのサーバモードと組み合わせてデバッグに使うとよいだろう。&lt;/p&gt;

&lt;p&gt;草稿（&lt;code&gt;draft&lt;/code&gt;）状態の解除は手動でもいいのだが，&lt;code&gt;hugo undraft&lt;/code&gt; コマンドを使うてもある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo undraft content/hello.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドを使うと &lt;code&gt;date&lt;/code&gt; の値が現在時刻に更新されるので注意。&lt;/p&gt;

&lt;p&gt;では，ここでもいきなりビルドしてみる（えー）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
1 pages created
0 paginator pages created
0 tags created
0 categories created
in 42 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│      hello.md
│
├─data
├─layouts
│      404.html
│      index.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  └─hello
│          index.html
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の標準では &lt;code&gt;hello.md&lt;/code&gt; は &lt;code&gt;hello/index.html&lt;/code&gt; に展開される。
これを deploy すると Web ブラウザからは &lt;code&gt;http://hello.example.com/hello/&lt;/code&gt; でアクセスできることになる。
この path の展開のさせ方はいろいろ設定できるようなのだが，今回は割愛する。&lt;/p&gt;

&lt;p&gt;現時点では &lt;code&gt;hello/index.html&lt;/code&gt; は空。
まぁテンプレートがないから当たり前なのだが。
記事用のテンプレートは &lt;code&gt;layouts&lt;/code&gt; フォルダ以下に &lt;code&gt;_default&lt;/code&gt; フォルダを作成し，さらにその下に &lt;code&gt;single.html&lt;/code&gt; を配置する。&lt;/p&gt;

&lt;p&gt;それじゃあ，早速テンプレートを組んでみる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:layouts/_default/single.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }} -- {{ .Site.Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;{{ .Content }}&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;{{ .Title }}&lt;/code&gt; には（今回は）記事のタイトルが入る。
&lt;code&gt;{{ .Content }}&lt;/code&gt; は実際の記事の中身である。これでビルドすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/hello/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。
Feed はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml:index.xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;
&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;http://hello.example.com/&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content on Hello World!&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;
    &amp;lt;language&amp;gt;jp&amp;lt;/language&amp;gt;
    &amp;lt;lastBuildDate&amp;gt;Sat, 05 Sep 2015 16:40:41 +0900&amp;lt;/lastBuildDate&amp;gt;
    &amp;lt;atom:link href=&amp;quot;http://hello.example.com/index.xml&amp;quot; rel=&amp;quot;self&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; /&amp;gt;

    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;Hello!&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;http://hello.example.com/hello/&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;Sat, 05 Sep 2015 16:40:41 +0900&amp;lt;/pubDate&amp;gt;

      &amp;lt;guid&amp;gt;http://hello.example.com/hello/&amp;lt;/guid&amp;gt;
      &amp;lt;description&amp;gt;&amp;amp;lt;p&amp;amp;gt;ようこそ， &amp;amp;lt;a href=&amp;amp;#34;https://gohugo.io/&amp;amp;#34;&amp;amp;gt;Hugo&amp;amp;lt;/a&amp;amp;gt; の世界へ！&amp;amp;lt;/p&amp;amp;gt;
&amp;lt;/description&amp;gt;
    &amp;lt;/item&amp;gt;

  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに front matter をまるっと削除してビルドすると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/hello/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt; -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;ようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml:index.xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot; ?&amp;gt;
&amp;lt;rss version=&amp;quot;2.0&amp;quot; xmlns:atom=&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&amp;gt;
  &amp;lt;channel&amp;gt;
    &amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
    &amp;lt;link&amp;gt;http://hello.example.com/&amp;lt;/link&amp;gt;
    &amp;lt;description&amp;gt;Recent content on Hello World!&amp;lt;/description&amp;gt;
    &amp;lt;generator&amp;gt;Hugo -- gohugo.io&amp;lt;/generator&amp;gt;
    &amp;lt;language&amp;gt;jp&amp;lt;/language&amp;gt;
    &amp;lt;atom:link href=&amp;quot;http://hello.example.com/index.xml&amp;quot; rel=&amp;quot;self&amp;quot; type=&amp;quot;application/rss+xml&amp;quot; /&amp;gt;

    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;http://hello.example.com/hello/&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;Mon, 01 Jan 0001 00:00:00 +0000&amp;lt;/pubDate&amp;gt;

      &amp;lt;guid&amp;gt;http://hello.example.com/hello/&amp;lt;/guid&amp;gt;
      &amp;lt;description&amp;gt;&amp;amp;lt;p&amp;amp;gt;ようこそ， &amp;amp;lt;a href=&amp;amp;#34;https://gohugo.io/&amp;amp;#34;&amp;amp;gt;Hugo&amp;amp;lt;/a&amp;amp;gt; の世界へ！&amp;amp;lt;/p&amp;amp;gt;
&amp;lt;/description&amp;gt;
    &amp;lt;/item&amp;gt;

  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のような感じになる。
タイトルや日付の情報が欠落するがエラーにはならないようだ。&lt;/p&gt;

&lt;h3 id=&#34;list&#34;&gt;記事の一覧をつくる&lt;/h3&gt;

&lt;p&gt;ついでなので &lt;code&gt;index.html&lt;/code&gt; に記事の一覧を表示するようにしよう。
テンプレートはこんな感じで書く。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:layouts/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
{{ with .Site.LanguageCode }}&amp;lt;html lang=&amp;quot;{{ . }}&amp;quot;&amp;gt;{{ else }}&amp;lt;html&amp;gt;{{ end }}
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;

&amp;lt;h2&amp;gt;What&#39;s New&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;
{{ range first 15 .Site.Pages }}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;{{ .Date.Format &amp;quot;2006-01-02&amp;quot; }}&amp;lt;/time&amp;gt;){{ if .Draft }} #Draft{{ end }}&amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで最新の15記事を列挙できる。
で，ビルド結果はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;

&amp;lt;h2&amp;gt;What&#39;s New&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで大まかなテンプレートのイメージがつかめただろうか。&lt;/p&gt;

&lt;h2 id=&#34;html&#34;&gt;【おまけ】 HTML ファイルをそのまま突っ込んだらどうなるの？&lt;/h2&gt;

&lt;p&gt;というわけで，上で作成した &lt;code&gt;hello/index.html&lt;/code&gt; を &lt;code&gt;hello2.html&lt;/code&gt; として &lt;code&gt;content&lt;/code&gt; フォルダに突っ込んでみた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\hugo-env\www&amp;gt;hugo
0 draft content
0 future content
2 pages created
0 paginator pages created
0 tags created
0 categories created
in 16 ms

C:\hugo-env\www&amp;gt;tree /f .
C:\HUGO-ENV\WWW
│  config.toml
│
├─archetypes
├─content
│      hello.md
│      hello2.html
│
├─data
├─layouts
│  │  404.html
│  │  index.html
│  │
│  └─_default
│          single.html
│
├─public
│  │  404.html
│  │  index.html
│  │  index.xml
│  │  sitemap.xml
│  │
│  ├─hello
│  │      index.html
│  │
│  └─hello2
│          index.html
│
└─static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおう。
&lt;code&gt;hello2/index.html&lt;/code&gt; に変換されている。
ルートの &lt;code&gt;index.html&lt;/code&gt; ファイルはどうなっているだろう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;

&amp;lt;h2&amp;gt;What&#39;s New&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello2/&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;0001-01-01&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおう。
残念な結果に。
でもこれってもしかして front matter つけりゃいいのか。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown:content\hello2.html&#34;&gt;+++
date = &amp;quot;2015-09-05T18:00:00+09:00&amp;quot;
draft = false
title = &amp;quot;Hello! Part 2&amp;quot;
+++

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! Part 2 -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! Part 2&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;再びようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;んで，ビルドしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;

&amp;lt;h2&amp;gt;What&#39;s New&amp;lt;/h2&amp;gt;
&amp;lt;ul style=&amp;quot;list-style:none;&amp;quot;&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello2/&amp;quot;&amp;gt;Hello! Part 2&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

	&amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://hello.example.com/hello/&amp;quot;&amp;gt;Hello!&amp;lt;/a&amp;gt; (&amp;lt;time&amp;gt;2015-09-05&amp;lt;/time&amp;gt;)&amp;lt;/li&amp;gt;

&amp;lt;/ul&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおお！&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/hello2/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! Part 2 -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! Part 2&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! Part 2 -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! Part 2&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;再びようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおう orz なんてこったい。
つまり，元の HTML ファイルからヘッダ等の要素を抜いて  front matter を付加すれば見た目も保持できて &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; からも Controllable な状態になるってことか？&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown:content\hello2.html&#34;&gt;+++
date = &amp;quot;2015-09-05T18:00:00+09:00&amp;quot;
draft = false
title = &amp;quot;Hello! Part 2&amp;quot;
+++

&amp;lt;p&amp;gt;再びようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでビルドしてみると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html:public/hello2/index.html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;ja&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Hello! Part 2 -- Hello World!&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello! Part 2&amp;lt;/h1&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;再びようこそ， &amp;lt;a href=&amp;quot;https://gohugo.io/&amp;quot;&amp;gt;Hugo&amp;lt;/a&amp;gt; の世界へ！&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ふむむむむ。
これは古い資産を &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; に組み入れるのは結構骨かもなぁ。&lt;/p&gt;

&lt;h2 id=&#34;bookmark&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : お勧め！&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/hugo/bookmark/&#34;&gt;Hugo に関するブックマークはこちら&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a&#34;&gt;言語コードの指定の仕方は「&lt;a href=&#34;http://www.kanzaki.com/docs/html/lang.html&#34;&gt;言語コードと国コード&lt;/a&gt;」が参考になる。日本の場合は &lt;code&gt;jp&lt;/code&gt; ではなく &lt;code&gt;ja&lt;/code&gt;。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo に関するブックマーク - hugo</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/hugo/bookmark/" />
		<id>tag:text.Baldanders.info,2015-09-05:/hugo/bookmark/</id>
		<published>2015-09-05T00:00:00+09:00</published>
		<updated>2017-06-21T16:09:16+09:00</updated>
		<summary>当サイトを Hugo で構築するにあたって参考になったページを紹介する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="hugo" label="hugo" scheme="http://text.baldanders.info/hugo" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;当サイトを &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で構築するにあたって参考になったページを紹介する。
日本語の情報が少ないのでホンマに感謝だよ。&lt;/p&gt;

&lt;h2 id=&#34;official&#34;&gt;公式サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo :: A fast and modern static website engine&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo&#34;&gt;gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugoThemes&#34;&gt;gohugoio/hugoThemes&lt;/a&gt; : &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; のテーマ集。スクリーンショットもあるよ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;mostfav&#34;&gt;日本語によるもっとも丁寧な解説&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0714-hugo/&#34;&gt;静的サイトジェネレータHugoの導入 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0715-hugo/&#34;&gt;Hugoのフォルダ構成 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0731-hugo/&#34;&gt;Hugoでサイト構築(1) レイアウトことはじめ | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0807-hugo-config/&#34;&gt;Hugoでサイト構築(2) サイト全体の設定&amp;rsquo;config.toml&amp;rsquo; | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0808-hugo-partial/&#34;&gt;Hugoでサイト構築(3) partialで部品をつくる | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0817-hugo-markdown/&#34;&gt;Hugoでサイト構築(4) markdownで記事を書く | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0818-hugo-static/&#34;&gt;Hugoでサイト構築(5) そのままコピーする&amp;rsquo;static&amp;rsquo;フォルダ | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0824-hugo-public/&#34;&gt;Hugoでサイト構築(6) publicへの記事出力について | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0831-hugo-section/&#34;&gt;Hugoでサイト構築(7) Sectionで記事を分類する | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0914-hugo-section/&#34;&gt;Hugoでwebサイト構築(8) Sectionのリスト | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0915-hugo-pagination/&#34;&gt;Hugoでwebサイト構築(9) リストのページネーション(Pagination) | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/0917-hugo-datafile/&#34;&gt;Hugoでwebサイト構築(10) データファイル(パラメータを作る) | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/1030-hugo-tag/&#34;&gt;Hugoでwebサイト構築(11) タグ | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wdkk.co.jp/note/2015/1112-hugo-tag-enum/&#34;&gt;Hugoでwebサイト構築(12) タグの列挙 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;themes&#34;&gt;テーマなど&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://rakuishi.com/archives/hugo-zen/&#34;&gt;Hugo Zen: これから Hugo を始める人向けのミニマムなテーマを作りました - rakuishi.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tanksuzuki.com/post/hugo-theme-angels-ladder/&#34;&gt;シンプルなHugoのテーマ「Angel&amp;rsquo;s Ladder」を作りました | TANKSUZUKI.COM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ci&#34;&gt;継続的インテグレーション&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yoheimuta/items/8a619cac356bed89a4c9&#34;&gt;Hugo + Github Pages + Wercker CI = ¥0（無料）でコマンド 1 発（自動化）でサイト・ブログを公開・運営・分析・収益化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://hori-ryota.com/blog/create-blog-with-hugo-and-circleci/&#34;&gt;HugoとCircleCIでGitHub PagesにBlogを公開してみたら超簡単だった · Hori Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/juntaki/items/8a905e4d2b9c3bb518d4&#34;&gt;Golang Hugoで高速なブログを作る &amp;ndash; Travis CI, S3, CloudFront Route53 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rel&#34;&gt;関連ドキュメント&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://golang.org/pkg/text/template/&#34;&gt;template - The Go Programming Language&lt;/a&gt; : &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; で使われているテンプレートパッケージ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/b4b4r07/items/77c327742fc2256d6cbe&#34;&gt;設定ファイル記述言語 TOML - Qiita&lt;/a&gt; : &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; の設定は TOML で記述するのがヨサゲ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hashrock/items/939684b9207dbab1d59e&#34;&gt;floatより辛くない「flexbox」でざっくりレイアウト - Qiita&lt;/a&gt; : flex は table より float より直感的で分かりやすい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fortawesome.github.io/Font-Awesome/&#34;&gt;Font Awesome, the iconic font and CSS toolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://syncer.jp/how-to-use-highlightjs&#34;&gt;ソースコードをハイライトする軽量ライブラリ、Highlight.jsの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cc-icons.github.io/&#34;&gt;Creative Commons Icon Font&lt;/a&gt; : CC License 用のアイコン・フォント&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;others&#34;&gt;その他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://t32k.me/mol/log/hugo/&#34;&gt;Jekyllが許されるのは小学生までだよね - MOL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/syui/items/869538099551f24acbbf&#34;&gt;CSS - HUGOを使ってサイトを立ち上げる方法 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://machortz.github.io/posts/usinghugo/&#34;&gt;Hugoを使ってみたときのメモ // machortz blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deeeet.com/writing/2014/12/25/hugo/&#34;&gt;OctopressからHugoへ移行した | SOTA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.jigyakkuma.org/2015/02/11/hugo/&#34;&gt;blogをoctopressからHugoに乗り換えたメモ / 俺よりイケてないエンジニアはいない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keens.github.io/blog/2014/12/30/migration-from-octopress-to-hugo/&#34;&gt;OctopressからHugoに移行した | κeenのHappy Hacκing Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kmry@github/items/01f68550880dcc6d01fe&#34;&gt;静的サイトジェネレーターHugoでgithubページ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yet.unresolved.xyz/blog/2015/01/04/migrate-blog-to-hugo-from-octopress/&#34;&gt;ブログをOctopressからHugoに移行した | Unresolved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://yet.unresolved.xyz/blog/2015/01/07/how-to-use-multibyte-title-in-hugo/&#34;&gt;Hugoでマルチバイトのタイトルをスマートに使う方法 | Unresolved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tamano/items/d3be25027c9b80bbfb7a&#34;&gt;metalsmith - 静的サイトジェネレータを比較してみた - Qiita&lt;/a&gt; : Hugo を含めた比較記事。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/kakkyz81/items/75bcaace6bcaa38373ba&#34;&gt;Hugoではテーマを指定しないとindex.htmlのサイズがゼロで作成される - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/DQNEO/items/7c05252fa434c861d938&#34;&gt;MovableTypeからHugoにブログ記事を移管するために下調べしたのでまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ureta.net/2015/05/hugo-on-windows/&#34;&gt;WindowsでHugoを使う - ureta.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takunagai.github.io/post/hugo/template/&#34;&gt;Hugo のテンプレート 基本 | My Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/_shun_sato_/items/87888fa8425e55b1c758&#34;&gt;Hugoでタグやカテゴリのリンク切れが起こる - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/so1_tsuda/items/c5d375d0b6c5dcb0d0cf&#34;&gt;Hugoと自作シェルスクリプトによるMarkdownメモ環境の構築 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/y_hokkey/items/f9d8b66b3770a82d4c1c&#34;&gt;HUGOで作れるCMSっぽいパーツ:関連記事・目次・JSON-LDなど - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
