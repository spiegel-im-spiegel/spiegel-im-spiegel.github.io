{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "GnuPG 2.2.16 がリリースされた",
      "section": "release",
      "description": "今回もセキュリティ・アップデートはなし。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/05/gnupg-2_2_16-is-released/",
      "published": "2019-05-29T10:11:01+00:00",
      "update": "2019-05-29T10:12:29+00:00",
      "content": " GnuPG 2.2.16 がリリースされた。\n [Announce] GnuPG 2.2.16 released  今回もセキュリティ・アップデートはなし。 主な機能追加・修正点は以下の通り。\n gpg,gpgsm: Fix deadlock on Windows due to a keybox sharing violation. [#4505] gpg: Allow deletion of subkeys with --delete-key. This finally makes the bang-suffix work as expected for that command. [#4457] gpg: Replace SHA-1 by SHA-256 in self-signatures when updating them with --quick-set-expire or --quick-set-primary-uid. [#4508] gpg: Improve the photo image viewer selection. [#4334] gpg: Fix decryption with --use-embedded-filename. [#4500] gpg: Remove hints on using the --keyserver option. [#4512] gpg: Fix export of certain secret keys with comments. [#4490] gpg: Reject too long user-ids in --quick-gen-key. [#4532] gpg: Fix a double free in the best key selection code. [#4462] gpg: Fix the key generation dialog for switching back from EdDSA to ECDSA. gpg: Use AES-192 with SHA-384 to comply with RFC-6637. gpg: Use only the addrspec from the Signer's UID subpacket to mitigate a problem with another implementation. gpg: Skip invalid packets during a keyring listing and sync diagnostics with the output. gpgsm: Avoid confusing diagnostic when signing with the default key. [#4535] agent: Do not delete any secret key in --dry-run mode. agent: Fix failures on 64 bit big-endian boxes related to URIs in a keyfile. [#4501] agent: Stop scdaemon after a reload with disable-scdaemon newly configured. [#4326] dirmngr: Improve caching algorithm for WKD domains. dirmngr: Support other hash algorithms than SHA-1 for OCSP. [#3966] gpgconf: Make --homedir work for --launch. [#4496] gpgconf: Before --launch check for a valid config file. [#4497] wkd: Do not import more than 5 keys from one WKD address. wkd: Accept keys which are stored in armored format in the directory. The installer for Windows now comes with signed binaries.  Release-info: https://dev.gnupg.org/T4509 via GnuPG 2.2.16 released  着々と SHA-1 からの置き換えが進んでる感じだねぇ。\nUbuntu で最新版バイナリを入手する方法を考えないと。 やっぱ自前でビルドするしかないのかなぁ。\nアップデートは計画的に。\nブックマーク  OpenPGP の実装  参考図書  暗号技術入門 第3版　秘密の国のアリス 結城 浩 SBクリエイティブ 2015-08-25 (Release 2015-09-17) eBooks Kindle版 ASIN: B015643CPE 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by amazon-item v0.2.0)\n "
    },
    {
      "title": "Ubuntu でも Kindle 本が読みたい",
      "section": "remark",
      "description": "Linux プラットフォームで動くネイティブな Kindle アプリケーションはないようで Wine 上で Windows 用の Kindle for PC を起動するしかないようだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/05/kindle-for-wine/",
      "published": "2019-05-28T12:41:58+00:00",
      "update": "2019-05-28T12:53:31+00:00",
      "content": " まぁマンガやラノベを読む程度なら Kindle 端末でも十分だし一部のマンガ等は Kindle Cloud Reader を利用する手もあるのだが，やはり Ubuntu のデスクトップ上でも読みたいのである。\nただ Linux プラットフォームで動くネイティブな Kindle アプリケーションはないようで，今のところ Wine 上で Windows 用の Kindle for PC を起動するしかない。\nまぁ Wine はそのうち試してみる予定だったので，このさい試してみるとしよう。\nWine のインストール Wine は APT で導入可能である。\n$ apt show wine Package: wine Version: 4.0-1 Built-Using: khronos-api (= 4.6+git20180514-1), unicode-data (= 11.0.0-1) Priority: optional Section: universe/otherosfs Origin: Ubuntu Maintainer: Ubuntu Developers \u0026lt;ubuntu-devel-discuss@lists.ubuntu.com\u0026gt; Original-Maintainer: Debian Wine Party \u0026lt;debian-wine@lists.debian.org\u0026gt; ... ちなみに wine-stable だと v3 系， wine-development だと v4.2 がインストールされるようだ（2019-05 時点）。 ここは素直に wine をインストールしておこう。\n$ sudo apt install wine 一応，動作確認しておく。\n$ wine --version wine-4.0 (Ubuntu 4.0-1) よしよし。\n日本語フォントのインストール 当然ながら素の Wine には Windows アプリケーション用の日本語フォントが入っていない。 日本語フォントを入れるに Winetricks をインストールする。\n$ sudo apt install winetricks Ubuntu のメニューに Winetricks のアイコンが追加されるのでクリックして起動する。 すると以下の画面が起動する。\n ここで “Select the default wineprefix” を選択して [OK] を押すと以下の画面に遷移する。\n 更にここで “Install a font” を選択して [OK] を押してフォントの選択画面に遷移する。\n “cjkfonts” にチェックを付けて [OK] を押せばフォントのインストールが開始される。\nWinetricks ではワーニングやエラーのプロンプトが出まくるが全部無視しても問題ない（なんだかなぁ）。\nKindle for PC のインストール あとは Kindle for PC のインストーラを取ってきて Wine 上で起動すればいいのだが，どうやら Amazon にある最新版の Kindle for PC はうまく動かないっぽい。\nしょうがないので v1.17 の Kindle for PC のインストーラを使う。\n ダウンロード kindle for pc 無料  こんなん使って大丈夫なのか不安になるが，どの解説ページでもこれを使えって言ってくるんだよなぁ。 頻繁に使うもんじゃないし，いっかぁ（投げやり）。\nインストーラの起動は以下の通り1。\n$ wine kindle-for-pc-1-17-44183.exe これでインストールが行われて Kindle for PC が起動する。 Ubuntu のメニューに Kindle アイコンが登録されるので，他のアプリケーションと同じようにアイコンのクリックでいつでも起動できる。\nWine 内のアプリケーションの削除 Wine 内のアプリケーションを削除するには以下のコマンドを起動する。\n$ wine uninstaller \u0026amp;  ブックマーク  Ubuntu - WineHQ Wiki WineHQ - Amazon Kindle for PC Ubuntu18.04にKindle for PCをインストールした - Qiita Ubuntu18.04.1でWineをインストールして、Kindleを使う方法 | Awesome Blog Ubuntu1604LTSでKindleを使う(PlayOnLinux) - Qiita : 私の環境ではなぜか PlayOnLinux がうまく動かなくて諦めた How to uninstall WINE applications   Kindle Paperwhite 電子書籍リーダー 防水機能搭載 Wi-Fi 32GB Amazon (Release 2018-11-07) Amazon Ereaders エレクトロニクス ASIN: B07HCSL6BN, EAN: 0841667162539 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ストレージ32GBの「マンガ・モデル」。マンガ単行本を大量に読む人はこれじゃないとちょっと厳しい。画質は（白黒である以外は）特に問題なし。\nreviewed by Spiegel on 2019-05-28 (powered by amazon-item 0.2.1)\n  古いインストーラを使うせいかもしれないが Wine 内の Windows バージョンを “Windows 10” にするとインストーラがうまく動かないらしい。 Wine 内の Windows バージョンを設定するには winecfg コマンドで設定ダイアログを起動する。 [return]   "
    },
    {
      "title": "さくらのレンタルサーバの Git が「使える！」ようになっていた",
      "section": "remark",
      "description": "Hugo + Git の組み合わせで git-push から自動デプロイができるところまでは確認済みなので，この構成でのんびりリニューアル作業を行うとしよう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/05/upgrade-sakura/",
      "published": "2019-05-26T13:21:14+00:00",
      "update": "2019-05-26T13:21:46+00:00",
      "content": "自宅マシンの OS 換装も一段落ついたので，そろそろ本家サイトのリニューアルの準備を進めようと思うのだが，その前にホストである「さくらのレンタルサーバ」がどうなったか確認しておかないと。\n「さくらのレンタルサーバ」は今年（2019年）に入ってから大規模な OS アップグレードを行っている。\n FreeBSDのアップデートに伴う変更点 – さくらのサポート情報  私が利用しているサーバは4月にアップグレードが完了していて，ログインすると以下のバージョン表記になった。\nFreeBSD 11.2-RELEASE-p9 (GENERIC) #0: Tue Feb 5 15:30:36 UTC 2019 嬉しいのは git で\n$ git version git version 2.19.2 と，かなりまともになった。 アップグレード前は 2.7 とか巫山戯たバージョンで git-submodule も使えない状態だったのでかなりの進歩と言えよう。\nこれでようやく「さくらのレンタルサーバ」に（自前でビルドせずとも）ベア・リポジトリを置いてコンテンツのバージョン管理や自動デプロイができるようになったよ。 スタンダード・プランですらストレージが100GBもあって持て余してたんだよねぇ。\nそして Go コンパイラが導入された。\n$ go version go version go1.11.1 freebsd/amd64 かなり古くてセキュリティ脆弱性とかちゃんと始末してるのか不安なところもあるが，このバージョンならモジュール・モードも（一応）使えるし，まぁいいか。 バックエンド側の処理を Go で書くこともできるだろう。\nとりあえず photo.Baldanders.info を使って Hugo + Git の組み合わせで git-push から自動デプロイができるところまでは確認済みなので，この構成でのんびりリニューアル作業を行うとしよう。\n"
    },
    {
      "title": "2019-05-26 のブックマーク",
      "section": "bookmarks",
      "description": "「「Firefox 67」が正式公開 ～暗号通貨採掘・フィンガープリンティング防止機能を搭載」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/05/26-bookmarks/",
      "published": "2019-05-26T09:15:28+00:00",
      "update": "2019-05-26T09:20:20+00:00",
      "content": " リリース情報  MathJax v3 beta.4 released | MathJax 「Firefox 67」が正式公開 ～暗号通貨採掘・フィンガープリンティング防止機能を搭載 - 窓の杜 無料メールソフト「Thunderbird」v60.7.0が正式公開 - 窓の杜 The Document Foundation releases LibreOffice 6.2.4 - The Document Foundation Blog TDF、「LibreOffice 6.2.4」を公開 ～オープンソースのオフィス統合環境 - 窓の杜 「Tor Browser 8.5」が正式リリース ～デスクトップ版に加えAndroid版が登場 - 窓の杜  セキュリティ＆プライバシー関連  Stack Overflowがセキュリティ侵害を公表 - ZDNet Japan Microsoft、セキュリティ分析ツール「Attack Surface Analyzer 2.0」を無償公開 - 窓の杜 Return on Data by Noam Kolt :: SSRN  The Concept of \u0026quot;Return on Data\u0026quot; - Schneier on Security  CRYPTREC | 耐量子計算機暗号の研究動向調査報告書の公開 情報処理推進機構：情報セキュリティ：ITセキュリティ評価及び認証制度(JISEC)：入退管理システム　チェックリスト  IPA、入退管理システムにおける情報セキュリティ対策要件チェックリストを公開 - クラウド Watch  Googleが2005年以来G Suiteのパスワードが平文保存されていたことを公表 | TechCrunch Japan ハッシュ化されていなかったG Suiteのパスワード問題についてまとめてみた - piyolog  Googleが2005年以来G Suiteのパスワードが平文保存されていたことを公表 | TechCrunch Japan  SensorID - Sensor Calibration Fingerprinting for Smartphones  Fingerprinting iPhones - Schneier on Security 「Android」端末や「iOS」端末を追跡する新手法--センサーのキャリブレーション情報を利用 - ZDNet Japan  マイクロソフト製品のゼロデイ脆弱性情報、新たに2件がGitHub上で公開 - ZDNet Japan  Windowsタスクスケジューラに未解決の脆弱性、悪用コードも公開 - ITmedia エンタープライズ  第7回：スマホやPCだけじゃない！　Wi-Fiルーターでウイルス対策できない家中のIT機器に安全を【スッキリWi-Fi（ASUS編）】 - INTERNET Watch 米国にもEUのようなプライバシー規制を--MSの法務幹部がGDPRから1年で提言 - ZDNet Japan スマホやPCでも使えるVPNアプリ「Webroot WiFiセキュリティ」提供開始、公衆無線LANでも安全に接続 - INTERNET Watch Germany Talking about Banning End-to-End Encryption - Schneier on Security  知財関連  米国政府、海賊版サイトを摘発し数百万ドル分の現金・暗号通貨を押収 – P2Pとかその辺のお話R Rightscorp Done Anti-Pirating? Stock Worthless, Website Gone - TorrentFreak ジョン・レノンの写真を自社サイトに無断掲載したユニバーサル・ミュージック、写真家から著作権侵害で提訴される – P2Pとかその辺のお話R 表現の自由とフェアユースがSLAPPから匿名言論を守る – P2Pとかその辺のお話R  Linux または Ubuntu に関する話題  Canonicalが統合したインフラストラクチャを提供 インテル「Clear Linux Developer Edition」--あらゆるものがソフトウェアで定義される未来を作るための準備 - ZDNet Japan  その他  ヒューレット・パッカード・エンタープライズがスパコン大手クレイを1430億円で買収 | TechCrunch Japan イスラエルのAIチップメーカーが最新ディープラーニングチップを発表 | TechCrunch Japan MIT Tech Review: AI業界の「白人男性偏重」がなくならない根本的な理由 JavaScriptエンジンのV8、WebAssemblyのコンパイル済みモジュールをキャッシュすることで2度目の訪問からは即実行可能に。V8 r7.5で － Publickey 東京都保健医療公社 多摩北部医療センターの不正アクセスについてまとめてみた - piyolog 人材不足について正直よく分からないこと｜masanork｜note MIT Tech Review: 「あなたの声」のまま翻訳、グーグルが開発した新しいAI GoogleのKubernetes Engineが3種のリリースチャネルとWindows Containerをサポート | TechCrunch Japan Google Kubernetes EngineとAzure Kubernetes Engineが相次いでWindows Serverコンテナのサポートを開始 － Publickey フォーティネット、新OS「FortiOS 6.2」でセキュリティファブリックを拡充――300以上の機能を追加 | ビジネスネットワーク.jp MIT Tech Review: 「AI音声アシスタントは性差別を助長」国連が報告書 GitHub Sponsors · GitHub  GitHubのSponsors機能はオープンソースにお金で支援参加できる新たな寄付形式 | TechCrunch Japan  Amazonが感情を認識するAlexaウェアラブルを開発中 | TechCrunch Japan MIT Tech Review: AIをだます「敵対的攻撃」は防げるか？MIT研究者らが新手法 「Mathematica」や“Wolfram|Alpha”の核「Wolfram Engine」が開発者向けに無償開放 - 窓の杜 ハイライト 本庶佑 氏（京都大学高等研究院副院長・特別教授）「『免疫を利用してがん治療に立ち向かう』―がんとの共存目指して」| SciencePortal 自動車メーカーはデータ会社になる決心を迫られている | TechCrunch Japan  "
    },
    {
      "title": "Firefox 67 がリリースされた",
      "section": "release",
      "description": "今まではマイニング防止に NoCoin を使っていたが，これからは標準機能でいけるかな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/05/firefox-67-is-released/",
      "published": "2019-05-22T07:44:00+00:00",
      "update": "2019-05-22T07:44:27+00:00",
      "content": "Firefox 67 がリリースされた。\n Firefox 67.0, See All New Features, Updates and Fixes 「Firefox 67」が正式公開 ～暗号通貨採掘・フィンガープリンティング防止機能を搭載 - 窓の杜  修正点や変更点は色々あるが個人的には「暗号通貨マイニング」と「フィンガープリント採取」をブロックできるようになったことだろう。\n Firefox 67  今まではマイニング防止に NoCoin を使っていたが，これからは標準機能でいけるかな。 「フィンガープリント採取」をブロックできるようになったことは僥倖だろう。\nUbuntu の場合は APT でアップデートできる。 即時対応で助かったよ。\n"
    },
    {
      "title": "本当のチャイナ・リスク",
      "section": "remark",
      "description": "モノやサービスで溢れかえる時代に生きている私達の自由は意外に貧弱なものである。それを握っているのは「私達」ではないのだから。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/05/china-risk/",
      "published": "2019-05-22T03:52:58+00:00",
      "update": "2019-05-26T09:15:05+00:00",
      "content": " 「チャイナ・リスク」というフレーズが出回ったのはゼロ年代，ブッシュ共和党政権の時である。 その後，オバマ民主党政権に代わって「チャイナ・リスク」というフレーズは聞こえなくなり，むしろ中国を重要なビジネス・パートナーと見做すようになっていく。 それがトランプ共和党政権でまた反転する。 この辺の見事な色分けは流石米国としか言いようがない。 官僚主導で硬直しきった日本の政治状況と比べれば羨ましいことである。\n Googleがファーウェイに対してAndroidのサポートを中止へ | TechCrunch Japan MIT Tech Review: グーグルが一部取引を中止、「ファーウェイ排除」の波紋 既存ファーウェイ端末はGoogle Playストアを継続利用可能とグーグルが声明 | TechCrunch Japan Googleのファーウェイ制裁参加で欧州にショック拡大中、脱米模索も | TechCrunch Japan  Google の思惑は分からない。 「（大統領の）行政命令を遵守するため」というのはいかにも後付けくさい。 ただ Huawei (華為) はこの決定にあまり困らないんじゃないのかなぁ。 そして「あまり困らない」ことこそが本当のリスクと言える。 何故なら Huawei 製端末においてはコントロールの主体が Google から Huawei に移ることを意味するから。 まぁ Google と Huawei のどっちがマシかというリスク・トレードオフの問題でもあるのだが。\n  スマートフォンにおけるEUの反トラスト措置の核心はAndroidデバイスとグーグルのポピュラーなアプリをアンバンドルすることだ。これによりスマートフォンメーカーはグーグルのブランドを維持したまま完全にグーグルの支配下にあるのではないデバイスを販売できる。例えば、Playストアをプレロードするものの、デフォールトの検索エンジンやブラウザにグーグル以外のプロダクトを設定するなどだ。\nしかしグーグルが（現行モデルでは継続されるとしても）ファーウェイに新しいAndroid OSやGoogle Playストアを提供しないとなれば、こうした構想は崩れてしまう。  via Googleのファーウェイ制裁参加で欧州にショック拡大中、脱米模索も  OS ないしはハードウェア・ベンダが「アプリケーション・ストア」を通じてソフトウェア供給を支配下に置く，いわゆる「アプリケーション経済」は故 Steve Jobs の考えたビジネスモデルと聞いたことがあるが，結局のところそれはアプリケーション流通を利用した CRM (Customer Relationship Management) 覇権競争にほかならない。\n「アプリケーション・ストア」は APT (Advanced Package Tool) のようなパッケージ管理ツールとは根本的に異なる。 たとえば APT は簡単にサードパーティのリポジトリを組み込むことができ，その信用モデルは OpenPGP の「信用の輪（web of trust）」で構成されている1。 どちらかというとこれは VRM (Vendor Relationship Management) に近い。\n今回の件をきっかけに「アプリケーション経済」がもっと VRM 寄りになっていくと面白いのだが，流石にそれは夢を見すぎか（笑） 折角の AI 技術も「バーチャル外商」としてしか使われないのなら宝の持ち腐れだよなぁ。\nモノやサービスで溢れかえる時代に生きている私達の自由は意外に貧弱なものである。 それを握っているのは「私達」ではないのだから。\nブックマーク  ARMが米方針に従いファーウェイとの取引を停止 | TechCrunch Japan  参考図書  インテンション・エコノミー～顧客が支配する経済 Doc Searls 栗原潔 (翻訳) 翔泳社 2013-03-14 (Release 2013-06-20) eBooks Kindle版 ASIN: B00DIM6BE6 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  時代はソーシャル CRM から VRM へ。俺達がインターネットだ！ 感想文はこちら。\nreviewed by Spiegel on 2015-04-26 (powered by amazon-item 0.2.1)\n  これまでのビジネスのやり方は終わりだ―あなたの会社を絶滅恐竜にしない95の法則 リック レバイン, ドク サールズ, クリストファー ロック, デビッド ワインバーガー Rick Levine (原著), Doc Searls (原著), Christopher Locke (原著), David Weinberger (原著), 倉骨 彰 (翻訳) 日本経済新聞社 2001-03 Book 単行本 ASIN: 4532149029, EAN: 9784532149024 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  クルートレイン宣言。タイトルがアレ過ぎる（笑） ちなみに今は New Clues が登場している。\nreviewed by Spiegel on 2015-01-14 (powered by amazon-item 0.2.1)\n  「信用の輪」については拙文「OpenPGP 鍵管理に関する考察」で少し紹介しているので参考にどうぞ。 [return]   "
    },
    {
      "title": "時計じかけのプログラミング",
      "section": "remark",
      "description": "むしろ人工知能が書いたコードを人間が読めるように「リバース・エンジニアリング」するのに苦労するんじゃないのかな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/05/clockwork-programming/",
      "published": "2019-05-20T14:09:39+00:00",
      "update": "2019-05-21T12:08:41+00:00",
      "content": " 実家に帰郷 (かえ) って以前と変わったことは色々あるが，そのうちのひとつが「テレビを観ている人」を観察するようになったことだ。 いや，うちの親父殿と甥っ子がどえらテレビっ子になってるのよ。\nテレビ番組というのは視聴者の感情をコントロールすることで成立している。 視聴者は番組が笑ってほしいところで笑い，怒ってほしいところで怒り，驚いてほしいところで驚き，泣いてほしいところで泣く。 そりゃあもう見事にそのとおりに行動するのよ，「テレビを観ている人」は。\n独り暮らしだと「テレビを観ている人」を観ることはないからねぇ。 私自身もそうした視聴者に違いないのだが，「テレビを観ている人」でフィルタリングされたテレビ番組は違う意味で滑稽に見える。\n昭和時代の「知識人」はテレビの台頭を指して「一億総白痴化」と揶揄したが，もしかしたら「白痴化」はテレビのみならず（Web を含む）あらゆるメディアに及んでいるのかもしれない。\nそういったものを観察していると，人工知能の「シンギュラリティ」はひょっとしたら起こるのかもしれない，と思うようになった。 それは「人工知能が人類を凌駕する」という意味ではなく「人工知能が人類を白痴化する」という意味で（「マトリックス」だなw）。 案外，人工知能によって真っ先に職を奪われるのはメディアの「中の人」なのかもねぇ。 人間の感情をコントロールする術が（確率・統計的に）分かっているのなら，それを最もうまく使いこなすのは機械だろうから。\n閑話休題 (それはさておき) 。\n 次世代のプログラミングツール、未来のプログラミング言語の方向性について - YAMDAS現更新履歴  20世紀末の話なのでもう時効だと思うけど，通信機械のシミュレータのプロジェクトに参加してたことがあって，そのプロジェクトが面白かったのはプロトコルスタックを GUI の CASE (Computer Aided Software Engineering) ツールで組むことができるというものだった。\n20世紀末はいわゆる「オブジェクト指向」が産業分野でも台頭し始めた時期であり，その「オブジェクト指向」の究極の夢が図像化したオブジェウトを線でつなぐだけでプログラムができるという CASE ツールだったわけ。\nでも，これらがメインストリームになることは殆どなかった。 私の知ってる範囲だと Yahoo! Pipes くらいなもんじゃないのかな（Yahoo! Pipes が登場し廃れるのはゼロ年代だけど）。 あるいは Astah* のように UML 図からプログラム・コードを生成するツールとか1。\nでも，たとえば UML 図にしたって実際に図を描いてみるとかったるくてやってられないのですよ。 で，結局はテキストで PlantUML で「書いた」ほうが早いという話になり，それならいっそ PlantUML のコードからプログラム・コードを生成すればいいじゃない，という話になってくる。\n「図を描く」ってのは案外に不自由なものである。 何故なら「図を描く」ことによってそれまでの思考が図に固定されてしまうから。 その先はない，やり直さない限り。 だからかったるいのだ。 図像化と符号化には天地ほどのひらきがある。\nテキストデータのプログラムコードが紙テープやパンチカードと決定的に違うのは記述コストが圧倒的に低くてしかも human-readable である点だろう。 考えながら書き，書きながら考えることができる。 これを超える「発明」はそれこそ数十年単位で出てこないんじゃないだろうか。\nたとえば「プログラムコード」を（人間が指示したとおりに）人工知能が書くことができるようになったとしよう。 その場合，コードがテキストや図である必然性は微塵もなく machine-readable でありさえすればいい。 塩基配列でコードを構成したって構わないだろう。 むしろ人工知能が書いたコードを人間が読めるように「リバース・エンジニアリング」するのに苦労するんじゃないのかな。\nグレッグ・イーガンの『万物理論』では「万物理論」を人工知能が書いている。 人間は理論の骨子とデータを入力するだけで，あとは人工知能が論文を書き上げるのをバカンスでもしながら待つだけである。 まさに理想の研究者生活。 未来のプログラマもかく在りたいものである（笑） まぁ，その時代まで私は生きていないだろうけど。\n参考図書  時計じかけのオレンジ (字幕版) スタンリー・キューブリック (プロデュース)  (Release 2013-11-26) Movie Prime Video ASIN: B00FIX664S 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  この映画を観たのって大学生の頃なんだけど，女性の先輩と2人で観に行ったんだよなぁ。後で考えたらものすごいシチュエーションだったんだけど，その時は映画が面白すぎて状況を全く把握してなかった（笑）\nreviewed by Spiegel on 2019-05-20 (powered by amazon-item 0.2.1)\n  社会は情報化の夢を見る (河出文庫) 佐藤俊樹 河出書房新社 2010-09-03 (Release 2016-07-29) eBooks Kindle版 ASIN: B01J1I8PRQ 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  1996年に出版された『ノイマンの夢・近代の欲望―情報化社会を解体する』の改訂新装版。しかし内容はこれまでと変わりなく，繰り返し語られる技術決定論を前提とする安易な未来予測を「情報化」社会論だとして批判する。\nreviewed by Spiegel on 2018-12-31 (powered by amazon-item v0.2.0)\n  Gene Mapper -full build- 藤井 太洋 早川書房 2013-04-25 (Release 2013-04-24) eBooks Kindle版 ASIN: B00CHIFA1M 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SF が特に好きというわけではないのだが（子供の頃は好んで読んでたけど），たまにこうして良質の SF を読むのは楽しいね。日本でEブックによる「自己出版」の魁となったのが作品。\nreviewed by Spiegel on 2019-05-20 (powered by amazon-item 0.2.1)\n  万物理論 (創元SF文庫) グレッグ・イーガン 山岸 真 (翻訳) 東京創元社 2004-10-28 Book 文庫 ASIN: 4488711022, EAN: 9784488711023 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  グレッグ・イーガンの名作。これも singularity を巡る物語だな。\nreviewed by Spiegel on 2017-09-18 (powered by amazon-item v0.2.0)\n  そういや数式を書いたらプログラムに変換してくれるっていうツールもあったな。いや，今もあるか。 AI 絡みならそちらのほうがよほど現実味がある（笑） [return]   "
    },
    {
      "title": "2019-05-18 のブックマーク",
      "section": "bookmarks",
      "description": "「機械学習は「因果性」を発見できるか？ 著名研究者がICLRで提案」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/05/18-bookmarks/",
      "published": "2019-05-18T11:42:58+00:00",
      "update": "2019-05-18T11:48:19+00:00",
      "content": " リリース情報  PostgreSQL 11.3、10.8、9.6.13、9.5.17、9.4.22登場 | マイナビニュース Ubuntu 19.04 その39 - OpenJDKにDoSやサンドボックス回避の脆弱性・今すぐアップデートを - kledgeb Release Version v3.1 · gitextensions/gitextensions · GitHub Ubuntu 19.04 その48 - Ubuntu 19.04 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb Hugo 0.55.6: One Bug Fix! | Hugo  バベルのインターネット  MIT Tech Review: フェイスブック、規約違反ならライブ配信を「即利用禁止」へ  セキュリティ＆プライバシー関連  データを暗号化するフラッシュドライブeyeDiskは簡単にハックできた | TechCrunch Japan China: How Mass Surveillance Works in Xinjiang | Human Rights Watch  Reverse Engineering a Chinese Surveillance App - Schneier on Security  アパートにスマートロックを導入した家主、入居者に提訴される--鍵提供で和解 - CNET Japan 大手ウイルス対策ベンダ3社への不正アクセスについてまとめてみた - piyolog Cryptanalysis of SIMON-32/64 - Schneier on Security WhatsAppの脆弱性CVE-2019-3568についてまとめてみた - piyolog  WhatsApp Vulnerability Fixed - Schneier on Security  「Google Chrome 74」にセキュリティアップデート - 窓の杜 Twitterが一部のユーザーの位置情報がパートナーに共有されたバグを公表 | TechCrunch Japan なぜ「暗号通貨禁止法」はひどいアイデアなのか – P2Pとかその辺のお話R サンフランシスコ市、市当局による監視技術導入を監視し、顔認識技術の使用を禁止へ – P2Pとかその辺のお話R ユニクロ・ジーユーオンラインストアの不正ログインについてまとめてみた - piyolog More Attacks against Computer Automatic Update Systems - Schneier on Security グーグルの新しいプライヴァシー設定は、「ユーザーへの責任転嫁」にすぎない｜WIRED.jp  天文関連  MIT Tech Review: ハッブル宇宙望遠鏡の成果の集大成、26万の銀河を捉えた写真 観測成果 - すばる望遠鏡が写し出す、惑星が隠れた若い惑星系の姿 - すばる望遠鏡 MIT Tech Review: 実は活発だった「月」の地殻活動、地震計データを再分析  知財関連  HDMIの規格仕様書アーカイブ、機密性と著作権侵害を理由にDMCA削除される – P2Pとかその辺のお話R 違法ダウンロードに巻き込まれたTor出口ノード運営者、手続きの不備で（今のところ）難を逃れる – P2Pとかその辺のお話R YouTube User Fights Unfair Takedown Campaign from UFC | Electronic Frontier Foundation 「CS6以降のアプリがいつでもすべて使える」という売り文句のAdobe CCが、事後報告すらなく過去のアプリが使えなくなった件 | Stocker.jp / diary : Adobe はライセンス料を払ってなかったらしい（笑） 米国「著作権侵害警告システム」のその後 – P2Pとかその辺のお話R 著作権侵害を疑われた女性、著作権トロールに情報開示請求で反撃 – P2Pとかその辺のお話R  Linux または Ubuntu に関する話題  Ubuntu 19.04 その37 - Snapストアからインストール可能なSnapアプリ13選 - kledgeb 2019年発売の全てのChromebookがLinux対応に - ZDNet Japan 「Chromebook」で「Windows」を動かす「Project Campfire」、打ち切りか - ZDNet Japan  その他  グループFaceTimeの盗聴バグ訴訟、原告の弁護士が敗訴。アップルの予見可能性が証明されず - Engadget 日本版 理性としての「反緊縮」 - 梶ピエールのブログ MIT Tech Review: ニューラルネットを大幅に「ダウンサイジング」 MIT研究者が提唱 篠房六郎がＶＲと心の救済を描いた2作品『空談師』『ナツノクモ』-フィクションの中のVR【第9回】 | MoguraVR News - VRの「いま」を掘りだすニュースメディア  Thinking Spot: VR社会は痛覚を刺激できない  自由に再配布可能なRed Hat Enterprise Linux 8ベースのコンテナ用OSイメージ「Red Hat Universal Base Image」が公開 － Publickey Slack の特定のチャンネルのメッセージ一覧をスプレッドシートにエクスポートするツールを作ってみた - Qiita MIT Tech Review: 再生可能エネの成長が失速、IEA発表の衝撃 だから抗拒不能はそういう意味じゃねえって言ってんだろ Oracle Databaseは「ポータブルな利用環境」を捨てたのか - ZDNet Japan 「サイゼリヤで1000円あれば最大何kcal摂れるのか」を量子アニーリング計算(Wildqat)で解いてみた。 - Qiita MIT Tech Review: 機械学習は「因果性」を発見できるか？ 著名研究者がICLRで提案 東大松尾研から新たに無償公開されたDeep Learning講座「DL4US」が良い、という話 - Qiita  "
    },
    {
      "title": "For-Range 構文の話",
      "section": "golang",
      "description": "Go 言語においては「参照」は忘れよう。コーディングを行う際はインスタンスの値とアドレッシングに注意しながら進めるとハマりにくい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/for-range-statement/",
      "published": "2019-05-17T15:44:20+00:00",
      "update": "2019-05-18T10:32:13+00:00",
      "content": " 今回は小ネタでお送りします。\nつか，以下の記事\n Big Sky :: Go のポインタの躓きやすい点  の後半部分が何を問題にしているのか分からずしばらく悩んでしまった。 頭が悪くてゴメンペコン。\nまず前提として Go 言語において「参照」のことは忘れよう。 見た目は参照ぽく振る舞う場合もあるしこのブログでも比喩表現として参照という言葉をよく使うが，言語仕様としては Go 言語に「参照」は存在しない。 Go 言語のインスタンスを表すものは「値」と「アドレッシング」であり，その「アドレッシング」の表現として（C 言語ではお馴染みの）ポインタを使うわけだ1。 したがって，コーディングを行う際はインスタンスの値とアドレッシングを常に頭に入れながら進めるとハマりにくい。 分からないならコードを書いてみればいいのだ。\nでは，最初に紹介した記事を参考に実際にコードを書いてみようか。\nまず，以下のような型 A を考える。\ntype A struct { N string } func (a *A) GenFunc() func() { return func() { fmt.Printf(\u0026#34;%s : %p\\n\u0026#34;, a.N, a) } } A.GenFunc() 関数は型 A の内容を標準出力に出力する関数を返す。 Method receiver が A ではなく *A とポインタ型になっているのがポイントである（洒落ちゃったてへぺろ）。\nこれを使って以下のコードを書いてみる。\npackage main import \u0026#34;fmt\u0026#34; type A struct { N string } func (a *A) GenFunc() func() { return func() { fmt.Printf(\u0026#34;%s : %p\\n\u0026#34;, a.N, a) } } func main() { as := []A{ {\u0026#34;foo\u0026#34;}, {\u0026#34;bar\u0026#34;}, } for i := 0; i \u0026lt; len(as); i++ { fmt.Printf(\u0026#34;instance: %s : %p\\n\u0026#34;, as[i].N, \u0026amp;as[i]) as[i].GenFunc()() } } このコードを実行すると\ninstance: foo : 0x40a0e0 foo : 0x40a0e0 instance: bar : 0x40a0e8 bar : 0x40a0e8 などと出力される。 GenFunc() メソッドを呼び出す際に method receiver としての as[i] の型が暗黙的に変換されていることに注意してほしい。 ここまでは OK かな。\nでは for-range 構文を使うとどうなるか。 試しに main 関数に for-range の制御ブロックを追加して比較してみよう。\nfunc main() { as := []A{ {\u0026#34;foo\u0026#34;}, {\u0026#34;bar\u0026#34;}, } for i := 0; i \u0026lt; len(as); i++ { fmt.Printf(\u0026#34;instance: %s : %p\\n\u0026#34;, as[i].N, \u0026amp;as[i]) as[i].GenFunc()() } fmt.Println() for _ , a := range as { fmt.Printf(\u0026#34;instance: %s : %p\\n\u0026#34;, a.N, \u0026amp;a) a.GenFunc()() } } これを実行するとこうなる。\ninstance: foo : 0x40a0e0 foo : 0x40a0e0 instance: bar : 0x40a0e8 bar : 0x40a0e8 instance: foo : 0x40c160 foo : 0x40c160 instance: bar : 0x40c160 bar : 0x40c160 ポインタ値からインスタンス a はインスタンス as[i] そのものではないことが分かる。 しかも a は for-range ループの中で使い回されていていることも分かる。\nつまり上の for-range 構文は\nfor i, a := 0, as[0]; i \u0026lt; len(as); i, a = i+1, as[i+1] { fmt.Printf(\u0026#34;instance: %s : %p\\n\u0026#34;, a.N, \u0026amp;a) a.GenFunc()() } と実質的に同じなのだ2。\nここまで来れば\nfunc main() { as := []A{ {\u0026#34;foo\u0026#34;}, {\u0026#34;bar\u0026#34;}, } fs := []func(){} for _, a := range as { fs = append(fs, a.GenFunc()) } for _, f := range fs { f() } } の実行結果がどうなるか容易に想像がつくだろう。 以下の通りである。\nbar : 0x40c128 bar : 0x40c128 つまり fs に格納される関数は全て前半の for-range の中のインスタンス a に帰属するメソッドであり，そのインスタンス a の値は for-range ループの中で上書きされているのである。\nじゃあどうすればいいかというと，一番簡単で場当たりな対処としては for-range ループの中でインスタンス a のコピーを作ればよい。\nfunc main() { as := []A{ {\u0026#34;foo\u0026#34;}, {\u0026#34;bar\u0026#34;}, } fs := []func(){} for _ , a := range as { aa := a //create copy instance  fs = append(fs, aa.GenFunc())  } for _ , f := range fs { f() } } これで実行結果は\nfoo : 0x40c128 bar : 0x40c140 となる。 あるいは最初から素直に\nfunc main() { as := []A{ {\u0026#34;foo\u0026#34;}, {\u0026#34;bar\u0026#34;}, } fs := []func(){} for i := 0; i \u0026lt; len(as); i++ { fs = append(fs, as[i].GenFunc()) }  for _ , f := range fs { f() } } とすれば要らんコピーも発生せず，実行結果も\nfoo : 0x40a0e0 bar : 0x40a0e8 となる。\n最初に紹介した記事にも書かれている通り，インスタンスの値とポインタを混ぜるから危険なのであって混ぜなければ大丈夫（笑）\nブックマーク  関数とポインタ  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 Book 単行本（ソフトカバー） ASIN: 4621300253, EAN: 9784621300251 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n  プログラミング言語C 第2版 ANSI規格準拠 B.W. カーニハン, D.M. リッチー 石田 晴久 (翻訳) 共立出版 1989-06-15 Book 単行本 ASIN: 4320026926, EAN: 9784320026926 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  通称 “K\u0026amp;R”。その筋の人々には「バイブル」と呼ばれる名著（当時は）。\nreviewed by Spiegel on 2018-12-07 (powered by amazon-item v0.2.0)\n  参照とポインタの決定的な違いは，参照は「機能」だがポインタは「値」である，という点であろう。値なのでポインタ自身をインスタンスとして表現し得るし「ポンタへのポインタ」みたいな記述もできる。この辺の感覚が掴めないと苦労するかもしれない。大昔の C 言語が全盛だった頃もポインタで躓く人は割といたからなぁ。 [return] 厳密には違う。つか，このコードを実際に書いて動かしてみれば分かるが “index out of range” の panic を吐いて落ちる。理由は各自で考えてみよう（笑） [return]   "
    },
    {
      "title": "Ubuntu に LibreOffice をインストールする3つの方法",
      "section": "remark",
      "description": "結論から言うと LibreOffice の全ての機能を支障なく使いたいなら公式サイトのパッケージを使いなはれ，である。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/05/installing-libreoffice-in-ubuntu/",
      "published": "2019-05-16T15:32:45+00:00",
      "update": "2019-05-17T12:41:30+00:00",
      "content": " いやぁ，まいった。 私はただ LibreOffice の文書ファイルに電子署名を付与したかっただけなのに，大事になってしまった。 忘れないうちにメモしておく。\nUbuntu に LibreOffice を導入する方法としては，主に以下の3つがある。\n APT を使ってインストールする Snap を使ってインストールする 公式サイトから deb パッケージ・ファイルを取ってきてインストールする。  これらはそれぞれ管理が独立しているため（あまりオススできないが）混在させることが可能である。\n結論から言うと LibreOffice の全ての機能を支障なく使いたいなら公式サイトのパッケージを使いなはれ，である。\nAPT を使ってインストールする というか Ubuntu をインストールすると最初から入っている LibreOffice がこれである。 Ubuntu のアップデート・ポリシーに則って運用されるため保守的なバージョン管理になっている。 それでも安定的な運用を求めるのであれば，こちらを選択するのは悪くない。\nLibreOffice 6.0 以降では文書ファイルにデジタル署名と暗号化を施すことができるのだが， APT 版は OpenPGP の鍵をうまく認識でいないようだ。 Ubuntu では「パスワードと鍵（Seahorse）」というツールで鍵やパスワードを統合的に管理しているのだが，これとの連携がうまく行っていないように見える。\nちなみに APT 版を削除するには\n$ sudo apt remove libreoffice* でいけるようだ。 パッケージをワイルドカードで指定するのがポイントである。\nSnap を使ってインストールする Snap は最近流行りのパッケージ管理ツールでディストリビューションから独立している点と，きめ細かいバージョン管理が可能である（パッケージによっては nightly ビルド等にも対応している）点が評価されている。 APT のようにローカルにデータベースを保持していないのでシンプルに運用できる。 Ubuntu には Snap が既定で導入されている。\nSnap 版をインストールするには\n$ sudo snap install libreoffice とすればよい。 削除するには\n$ sudo snap remove libreoffice で OK。 ワイルドカード指定は不要である。\nこちらも OpenPGP 鍵を認識できず，電子署名ができなかった。 APT 版も Snap 版も Canonical が運用・管理しているらしいのだが，セキュリティ方面には関心が薄いのだろう。 残念な話である。\n公式サイトから deb パッケージ・ファイルを取ってきてインストールする LibreOffice の公式サイトでは deb パッケージ形式でインストールファイルを公開していて，これをダウンロードしてインストールできる。\nまず公式サイトから deb ファイルが同梱された *.tar.gz ファイルをダウンロードする。 たとえばこんなファイル名になっている。\n LibreOffice_6.2.3_Linux_x86-64_deb.tar.gz  このファイルを適当な場所で展開すると LibreOffice_6.2.3_Linux_x86-64_deb/ ディレクトリが作成される。 LibreOffice_6.2.3_Linux_x86-64_deb/DEBS/ ディレクトリに降りると複数の deb ファイルがあることが分かるだろう。 基本的にはこれを全てインストールする。 全てのファイルに対していちいち gdebi コマンドを使うのはかったるいので\n$ sudo apt install ./*.deb で一気にインストールしてしまおう。 てか，この手が使えたのか。\nこれで導入した LibreOffice では英語とフランス語くらいしか対応していないため日本語パックとヘルプも導入する。 同じく公式サイトから以下の *.tar.gz ファイルをダウンロードする。\n LibreOffice_6.2.3_Linux_x86-64_deb_langpack_ja.tar.gz LibreOffice_6.2.3_Linux_x86-64_deb_helppack_ja.tar.gz  これらのファイルを適当な場所で展開して中に入っている deb ファイルを片っ端からインストールしていく。\n削除する場合は\n$ sudo apt remove libreoffice6.2* libobasis6.2* のようにバージョンとワイルドカードを指定すること。\n分かってますよ。 めがっさ面倒くさいです。 しかしこの公式版ならちゃんと OpenPGP 鍵を認識して電子署名も暗号化もできる。\n日本でもメールにパスワード書くような悪習は早くなくしていきたいものである。\nブックマーク  第507回　さまざまなLibreOfficeのインストール方法：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社\n LibreOffice と OpenPGP （仕切り直し） : Windows 版の LibreOffice 6.0 を対象にしているが機能は同じなので適宜読み替えてください\n  参考図書  暗号技術入門 第3版　秘密の国のアリス 結城 浩 SBクリエイティブ 2015-08-25 (Release 2015-09-17) eBooks Kindle版 ASIN: B015643CPE 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by amazon-item v0.2.0)\n "
    }
  ]
}
