{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "2020-06-07 のブックマーク",
      "section": "bookmarks",
      "description": "「「屋根裏のバイテン」第2話」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/06/07-bookmarks/",
      "published": "2020-06-07T08:50:23+00:00",
      "update": "2020-06-07T08:51:11+00:00",
      "content": "リリース情報  URL rewrites in dev server | Hugo : Hugo 0.72.0 [ANNOUNCE] Git v2.27.0  Release Git for Windows 2.27.0 · git-for-windows/git · GitHub   Announcing Rust 1.44.0 | Rust Blog  バベルのインターネット  Facebook社員がバーチャルストを敢行、トランプ米大統領の投稿に対する会社の態度に抗議 | TechCrunch Japan Twitterが共和党議員の反ファシズムツイートを「暴力賛美」として制限表示に | TechCrunch Japan  セキュリティ＆プライバシー関連  (How) Do People Change Their Passwords After a Breach?   Password Changing After a Breach - Schneier on Security   Apple fixes bug that could have given hackers full access to user accounts | Ars Technica  Critical \u0026lsquo;Sign in with Apple\u0026rsquo; Bug Could Have Let Attackers Hijack Anyone\u0026rsquo;s Account \u0026ldquo;Sign in with Apple\u0026rdquo; Vulnerability - Schneier on Security   GitLab、セキュリティ演習で社員にフィッシングメールを送信。その内容と、20％が引っ掛かったことを公開 － Publickey Facebookが過去投稿を一括削除できるツールを発表、プライバシー管理を強化 | TechCrunch Japan Wallpaper image crashing Android phones  Wallpaper that Crashes Android Phones - Schneier on Security   Googleが「Remove China Apps」をPlay Storeから取り去る | TechCrunch Japan Zoom\u0026rsquo;s Commitment to User Security Depends on Whether you Pay It or Not - Schneier on Security  Bloomberg - Are you a robot?   お名前.com Naviの不具合によるCoincheckとbitbankのドメイン名ハイジャックについてまとめてみた - piyolog VU#636397 - IP-in-IP protocol routes arbitrary traffic by default  PoC-Exploits/cve-2020-10136 at master · CERTCC/PoC-Exploits · GitHub IP-in-IPに対応したデバイスが悪用される問題あり、確認と対処を | マイナビニュース   新手のランサムウェアがWindowsとLinuxを攻撃、Javaイメージファイルを悪用 | TechCrunch Japan  Javaアプリケーション配布方法 ~jlink ランタイム作成~ | tyablog.net : JIMAGE について   国際標準と部品レベルの対応が急務になるIoT機器のセキュリティ対策のこれから - WirelessWire News（ワイヤレスワイヤーニュース） データセンターの電源故障の影響で起きた自治体サイト接続障害についてまとめてみた - piyolog  天文関連  宇宙空間でのCrew Dragonの手動操縦に初成功、同じ操縦をシミュレータで誰でも試せる | TechCrunch Japan Latest Poll Shows 2-1 Margin in Support of TMT on Maunakea | TMT International Observatory 1987年発見のアインシュタインリング、元になった天体までの距離が100億光年と判明 | sorae 宇宙へのポータルサイト  知財関連  Project Gutenberg Public Domain Library Blocked in Italy For Copyright Infringement * TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 20.04 その73 - Ubuntu/LinuxデスクトップOSの市場シェア拡大・LenovoがThinkPadとThinkStationにLinux認定モデルを追加 - kledgeb Ubuntu 20.04 その74 - UbuntuとUEFIセキュアブート - kledgeb  その他  Stack Overflowの調査によると、デベロッパーの5割以上が「フルスタック」エンジニアを自認。最も使われている言語はJavaScript、最も愛されている言語はRust － Publickey Red Hatが「Quarkus」の商用サポートを開始。JavaコードをコンパイルしてLinuxバイナリを生成、省メモリ高速起動でコンテナ環境に最適 － Publickey サイエンスクリップ「米有人宇宙船がISS到着、シャトル廃止以来9年ぶり悲願達成」| SciencePortal 現存する日本最古のカメラ雑誌「アサヒカメラ」が休刊に - デジカメ Watch Swift言語がAWS Lambdaで利用可能に。Swift開発チームが「Swift AWS Lambda Runtime」公開 － Publickey 巨大ブラックホールの種になる星たち―大規模シミュレーションが描く新しい形成メカニズム― | 国立天文台(NAOJ) Linuxカーネルソースコード、80行制限を100行まで緩和 | マイナビニュース Visual Studioの新機能、クラウド上のKubernetesクラスタの一部をローカルマシンに引き込んで開発できる「Local Process with Kubernetes」発表 － Publickey VMware、GPUを仮想化する「Bitfusion」、vSphere 7への統合完了を発表 － Publickey Anvil - Streamline Information Gathering. Automate Workflows.  PDFベースの共同編集・電子署名サービスのAnvilがグーグル系VCから5億円超を調達 | TechCrunch Japan   ブログ: 政府とWHOは、小さな米国企業の疑わしいデータに基づいてCOVID-19の方針を変更 秘匿性の高いメッセージングアプリ「Signal」に顔をぼかす機能が加わる | TechCrunch Japan new.css  sakura: a minimal classless css framework / theme.   Webアクション「屋根裏のバイテン」第2話 : ぽじとろんの竹本泉観察記  "
    },
    {
      "title": "Edwards-curve Digital Signature Algorithm",
      "section": "remark",
      "description": "SP 800-57 Part 1 Rev.5 が正式リリースした記念に EdDSA に関する情報を覚え書きの形で記しておく。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/eddsa/",
      "published": "2020-06-07T08:33:37+00:00",
      "update": "2020-06-07T08:37:33+00:00",
      "content": "ネットであちこち眺めていて気がついたのだが SP 800-57 第一部の Rev.5 最終版が2020年5月にリリースされていた。\n SP 800-57 Part 1 Rev. 5, Recommendation for Key Management: Part 1 – General | CSRC  私はセキュリティや暗号技術の専門家ではないし Rev.5 の変更点が（軽微なものも合わせて）67項目もあって全部は紹介しきれないので，ひとつだけ\n In Section 2.2, EdDSA was added. Modified ECDSA.  via SP 800-57 Part 1 Revision 5  について関連情報を覚え書きの形で記しておく。\nRFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA) EdDSA のオリジナルは2011年に公開された “High-speed high-security signatures ” らしい。 その後も改良版が出たり色々あって，2017年に RFC 8032 として標準化された。\nEdDSA は以下の特徴を持っている。\n EdDSA provides high performance on a variety of platforms; The use of a unique random number for each signature is not required; It is more resilient to side-channel attacks; EdDSA uses small public keys (32 or 57 bytes) and signatures (64 or 114 bytes) for Ed25519 and Ed448, respectively; The formulas are \u0026ldquo;complete\u0026rdquo;, i.e., they are valid for all points on the curve, with no exceptions. This obviates the need for EdDSA to perform expensive point validation on untrusted public values; and EdDSA provides collision resilience, meaning that hash-function collisions do not break this system (only holds for PureEdDSA).   via RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)  特に2番目が重要。\nこれまでの NIST 標準の（ECDSA を含む） DSA は署名の度にランダムな値をひとつ決めないといけないのだが，ここの実装をサボると，最悪の場合，秘密鍵の漏洩に繋がる。 また，かつて SP 800-90A に載っていた疑似乱数生成器 Dual_EC_DRBG に NSA の関与が疑われる欠陥が発覚し SP 800-90A を改訂する騒ぎにまで発展したこともある。\nこのように DSA の具体的な実装について（特に乱数周りで）常に懸念が付きまとっているため，より安全性が高いとされる EdDSA が注目されることとなった。\nEdDSA で使える楕円曲線にはかなりのバリエーションがある  のだが， RFC 8032 に記載されているのは以下の2つである1。\n   楕円曲線名 鍵長（bytes） 強度（bits）     edwards25519 32 128   edwards448 57 224    生成した ECC 鍵を2031年以降も使い続けるにはセキュリティ強度が128ビット以上必要だが，この2つの楕円曲線であれば十分であることが分かる。\nNIST 標準としての EdDSA EdDSA の RFC 化に伴い，以下の NIST 標準文書にも EdDSA が追加されることになった。 ただし今のところはまだドラフト版である。\n FIPS 186-5 (Draft), Digital Signature Standard (DSS) | CSRC SP 800-186 (Draft), Discrete Logarithm-Based Crypto: Elliptic Curve Parameters | CSRC  ちなみに両方共パブリックコメントは2020年初に締め切られている。\nFIPS 186-5 および SP 800-186 が正式リリースされれば，政府調達でもなんでも，大手を振って EdDSA を使えるようになる（笑）\nEdDSA の実装 OpenPGP と GnuPG OpenPGP は RFC 6637 で正式に ECC を組み込んだが，この中に EdDSA は含まれていない。 ただし，次期 OpenPGP となる RFC 4880bis では EdDSA を組み込み済みで GnuPG の最新版では既に EdDSA 鍵を生成し使用することができる。\n そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな  なお，最新の GnuPG では edwards25519 のみサポートしているようだ。\nOpenSSH OpenSSH では EdDSA/edwards25519 鍵を生成・使用できる。 鍵生成は\n$ ssh-keygen -t ed25519 で可能。\nOpenSSL 現在の OpenSSL は EdDSA をサポートしている。 edwards25519 および edwards448 を指定可能。\n【おまけ】 量子コンピュータ耐性 現在，公開鍵暗号の主流である IFC (Integer Factorization Cryptosystems) および FFC (Finite Field Cryptosystems) の各アルゴリズムは量子コンピュータによる攻略法が既にあり，十分な性能を獲得すれば短時間で攻略可能になると考えられている。 ECC も FFC のバリエーションであり，これに含まれる。\nしかし，2020年時点の性能では128ビット以上のセキュリティ強度であれば現実的な脅威には至っていないようだ。\n 例えば、量子コンピュータを用いて2048ビットRSA合成数の素因数分解を行う場合には、量子誤りが一切ないという理想的な環境下でも、4098量子ビットが必要であり、1012～1013回のゲート演算が必要であると見積もられています。また、量子誤りがあるという現実的な環境下では、2000万量子ビットが必要であるという見積もりもあります。 via 現在の量子コンピュータによる暗号技術の安全性への影響   量子コンピュータの性能を測る上での指標（量子ビット数、量子誤りの大きさ、演算可能回数など）や、量子コンピュータの開発状況もあわせて考慮にいれると、近い将来に、2048ビットの素因数分解や256ビットの楕円曲線上の離散対数問題が解かれる可能性は低いと考えます。 via 現在の量子コンピュータによる暗号技術の安全性への影響  ただし，量子コンピュータ開発は成長が著しい分野でもあり，今後も成り行きを注視していく必要がある。\n CRYPTREC Report 2018: 暗号技術評価委員会報告  : 素因数分解問題および楕円曲線上の離散対数問題の困難性に関する計算量評価のレポートあり 耐量子計算機暗号の研究動向調査報告書   ブックマーク   擬似乱数生成アルゴリズム Dual_EC_DRBG について\n  暗号鍵関連の各種変数について\n  OpenSSH 鍵をアップグレードする（さようなら SHA-1）\n  参考図書  暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n   edwards25519 は Curve25519 と双有理同値である。ちなみに Curve25519 は ECDH 用の楕円曲線およびそのライブラリで，公有（public domain）のソフトウェアとして公開されている。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Go 1.14.4 がリリースされた",
      "section": "release",
      "description": "セキュリティ・アップデートはなし。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/06/go-1_14_4-is-released/",
      "published": "2020-06-02T01:33:09+00:00",
      "update": "2020-06-02T01:33:58+00:00",
      "content": "Go 1.14.4 がリリースされた。\n Go 1.14.4 and Go 1.13.12 are released - Google group  セキュリティ・アップデートはなし。\ngo1.14.4 (released 2020/06/01) includes fixes to the go doc command, the runtime, and the encoding/json and os packages. See the Go 1.14.4 milestone on our issue tracker for details. via Release History - The Go Programming Language  例によって Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.14.4.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。\n$ cd /usr/local/src $ sudo curl \u0026#34;https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.14.4.linux-amd64.tar.gz $ sudo mv go go1.14.4 $ sudo ln -s go1.14.4 go $ go version # /usr/local/go/bin にパスが通っている場合 $ go version アップデートは計画的に。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "OpenSSH 鍵をアップグレードする（さようなら SHA-1）",
      "section": "remark",
      "description": "どうせ鍵を新調するのなら楕円曲線暗号で構成するのがいいよね。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/upgrade-openssh-key/",
      "published": "2020-06-01T07:12:32+00:00",
      "update": "2020-06-07T08:37:33+00:00",
      "content": "2020-05-27 に OpenSSH 8.3 がリリースされた。\n OpenSSH 8.3 released (and ssh-rsa deprecation notice) [LWN.net]  この中で “Future deprecation notice” として\nIt is now possible to perform chosen-prefix attacks against the SHA-1 algorithm for less than USD$50K. For this reason, we will be disabling the “ssh-rsa” public key signature algorithm by default in a near-future release. via OpenSSH 8.3 released (and ssh-rsa deprecation notice)  と書かれていて1，クライアント側はそろそろ古い RSA 鍵から交換したほうがよさそうである。 もっとも最近のバージョン2 で作った鍵であれば特に問題ないようだ。\n$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/username/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/username/.ssh/id_rsa Your public key has been saved in /home/username/.ssh/id_rsa.pub The key fingerprint is: SHA256:qufsNjgco3QZNjE4eupwQiT6mD8fr2a7nXmU3ybxFHo username@hostname The key\u0026#39;s randomart image is: +---[RSA 3072]----+ | . | |..o o | |+. . o | |o.. + . | |.* . + S. . . | |* + = .o o E | |o= +.+.. . * | | .+ **+o. o + | | =*XOo o | +----[SHA256]-----+ ハッシュ・アルゴリズムが SHA256 以上になっているか，がポイント。\nでも，まぁ，どうせ鍵を新調するのなら楕円曲線暗号（Elliptic Curve Cryptography; ECC）で構成するのがいいよね。 ちうわけで，ECC 鍵を作って登録するところまでやってみる。 ちゃんとメモっておかないと忘れるので（笑）\n前提条件 今回は Ubuntu 環境下での作業とし鍵管理を GnuPG で行うものとする。 Windows 環境の場合は以下の拙文を参考にどうぞ。\n GnuPG for Windows : gpg-agent について  OpenSSH と GnuPG を連携させるには ~/.gupg/gpg-agent.conf ファイルに enable-ssh-support オプションをセットする。 他に有効なオプションとしては\n   オプション名 内容     default-cache-ttl-ssh 直前にアクセスしたキャッシュ・エントリの有効期間を秒単位で指定する。 既定値は 1800   max-cache-ttl-ssh キャッシュ・エントリの有効期間の最大値を秒単位で指定する。 アクセスの有無にかかわらずこの期間が過ぎるとキャッシュがクリアされる。 既定値は 7200    がある。 たとえばこんな感じで記述すればいいだろう。\nenable-ssh-support default-cache-ttl-ssh 1800 max-cache-ttl-ssh 7200 あとは SSH_AUTH_SOCK 環境変数を以下のように書き換えればOK。\n$ export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket) ~/.bashrc 等に追記しておけばよいだろう。\nOpenSSH 鍵の生成 OpenSSH 鍵を生成するには ssh-keygen コマンドを使う。 たとえばこんな感じ。\n$ ssh-keygen -t ecdsa -b 256 -C \u0026#34;alice@example.com\u0026#34; Generating public/private ecdsa key pair. Enter file in which to save the key (/home/username/.ssh/id_ecdsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/username/.ssh/id_ecdsa Your public key has been saved in /home/username/.ssh/id_ecdsa.pub The key fingerprint is: SHA256:DtXgQm9rz7Dc5M5yWu/CNVo341o1rcfN9UCyYu+SZU4 alice@example.com The key\u0026#39;s randomart image is: +---[ECDSA 256]---+ | . . | | . o o | | . = . . . | | + . + .| | . S + . ..+| | = X oE +*=| | +.*X.+oo*| | .+Bo.... | | .+o+=. | +----[SHA256]-----+ これで作成された id_ecdsa および id_ecdsa.pub ファイルが鍵ファイルである。 ちなみに id_ecdsa ファイルには秘密鍵， id_ecdsa.pub ファイルには公開鍵が格納されている。\n-t オプションで鍵種別を， -b で鍵長（ビット数）をセットする。 鍵種別と鍵長の組み合わせと，それぞれに対するセキュリティ強度（ビット数）は以下の通り。\n   main table.sshkeys th { vertical-align:middle; text-align: center; } main table.sshkeys td { vertical-align:middle; //text-align: center; }    鍵種別 鍵長 強度 楕円曲線名     dsa 3072 128 \u0026mdash;   7680 192   15360 256   ecdsa / ecdsa-sk 256 128 nistp256   384 192 nistp384   521 256 nistp521   ed25519 / ed25519-sk \u0026mdash; 128 ed25519   rsa 3072 128 \u0026mdash;   7680 192   15360 256      この組み合わせのいずれかであれば2031年以降も問題なく使える。 なお ecdsa-sk および ed25519-sk は認証デバイスに登録する際に使うらしい（今回は割愛する）。\n余談だが楕円曲線 ed25519 に対応する電子署名アルゴリズムは EdDSA と呼ばれ RFC 8032 で規定されている3。 なんで鍵種別を eddsa としなかったのかは知らない。 紛らわしかったのかな？\n楕円曲線と鍵長 （「そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな」より抜粋）\nここでちょっと横道に逸れて鍵長の話をしておく。\nたとえば RSA の（平文 $M$ から暗号文 $C$ への）暗号化は以下の式で表される。\n\\[ C = M^e \\bmod n \\]  $(e, n)$ のセットが公開鍵で， $n$ のサイズが鍵長に相当する。 実際の計算はともかく，感覚としては分かりやすいよね。\nECC の場合は暗号化の前に，まずベースとなる楕円曲線の（素数 $q$ で決められる）素体（prime fields）を決めなければならない4。 これは以下の式で表される。\n\\[ E : y^2 \\equiv x^3 + ax + b \\pmod{q} \\]  この素体上の有理点の数（位数）を $\\#E$ とした時の $\\#E$ のサイズが鍵長に相当する。 $(a,b,q)$ といったパラメータを眺めただけでは鍵長が分からないというのが面倒臭い感じである5。\nそこで ECC の場合は楕円曲線を表すパラメータのセットが標準化されている。 OpenSSH の場合は nistp256, nistp384, nistp521, ed25519 といった楕円曲線名に対応している。 つまり楕円曲線名から楕円曲線の種類を特定し，そこから鍵長も分かる，というわけだ。\nOpenSSH 鍵の登録（クライアント側） 本題に戻る。 作成した OpenSSH 鍵ファイル id_ecdsa および id_ecdsa.pub を登録しよう。\nクライアント側は ssh-add コマンドを使って秘密鍵ファイル id_ecdsa の内容を GnuPG の鍵束に永続的に登録できる。\n$ ssh-add ./id_ecdsa Enter passphrase for ./id_ecdsa: Identity added: ./id_ecdsa (alice@example.com) この時 ssh-add コマンドによるパスフレーズ入力とは別に GnuPG の pinentry によるパスフレーズの設定が行われる（確認を含めて2回入力する必要あり）。\n pinentry  Pinentry で設定するパスフレーズは id_ecdsa ファイルに対するものとは管理が異なるので注意。 というか GnuPG の鍵束に登録したら id_ecdsa ファイルは不要になる。\nOpenSSH 秘密鍵が登録できたかどうかは ~/.gnupg/sshcontrol ファイルで確認できる。 ちゃんと登録できていれば以下のような内容が追記される。\n# ECDSA key added on: 2020-06-01 14:05:35 # Fingerprints: MD5:e4:5b:66:a6:03:9a:a4:0e:f2:1b:a5:04:72:93:f3:f0 # SHA256:DtXgQm9rz7Dc5M5yWu/CNVo341o1rcfN9UCyYu+SZU4 A5353D587000D820669B0BD55A0B4AD6897458DB 0 また ssh-add -l コマンドでも登録した鍵を確認できる。\n鍵の実体は ~/.gnupg/private-keys-v1.d/ ディレクトリにある。 上述の鍵の場合は\nA5353D587000D820669B0BD55A0B4AD6897458DB.key というファイル名で格納されているはずである。\nOpenSSH 鍵の登録（サーバ側） ログイン先のサーバに公開鍵ファイル id_ecdsa.pub の中身を登録する。 つっても，どうにかして id_ecdsa.pub ファイルをサーバにアップロードして\n$ cat ./id_ecdsa.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys と authorized_keys ファイルに追記すればよい。 追記ではなく内容を書き換えるなら\n$ cat ./id_ecdsa.pub \u0026gt; ~/.ssh/authorized_keys でもよい。 書き換えるなら以前のファイルのバックアップはとってね。 パーミッションの設定も忘れずに。\n$ chamod 700 ~/.ssh $ chamod 600 ~/.ssh/authorized_keys 老婆心ながら，新しい鍵でログインできることを確認するまでは接続中のセッションは切らないこと。 設定を間違えてログイン不能になったら悲惨だからねぇ。\n各種 Git リポジトリ・サービスに公開鍵を登録する GitHub ではリポジトリのアクセスに OpenSSH 認証が使える。 OpenSSH 認証に使う公開鍵は設定の “SSH and GPG keys” で登録する（複数登録可能）。\nBitbucket や GitLab などの各種 git リポジトリ・サービスでも同様に OpenSSH 公開鍵を登録できる。\nよしゃあ！ これで作業完了。\nブックマーク   ssh-rsa，非推奨のお知らせ\n  OpenSSH、将来のリリースでssh-rsa公開鍵の署名アルゴリズムをデフォルトで無効に - ZDNet Japan\n  暗号鍵関連の各種変数について\n  （何度目かの）さようなら SHA-1\n  参考図書  暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n  暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n   実は同様の問題は GnuPG でも指摘されていて，半年前にリリースされた 2.2.18 で対応済みである（GnuPG 2.2.18 リリース： さようなら SHA-1） \u0026#x21a9;\u0026#xfe0e;\n ちなみに，私は2011年に作った RSA 鍵を使っているが，ハッシュ・アルゴリズムは SHA256 だった。少なくとも10年以内に作った鍵なら問題なさそう？ あとは鍵長かねぇ。 \u0026#x21a9;\u0026#xfe0e;\n ed25519 (edwards25519) は Curve25519 と等価な楕円曲線で，鍵長も Curve25519 と同じく256ビット（セキュリティ強度128ビット）と見積もられている。ちなみに Curve25519 は ECDH 用の楕円曲線およびそのライブラリで，公有（public domain）のソフトウェアとして公開されている。 \u0026#x21a9;\u0026#xfe0e;\n 素体ではなく「標数2の体（binary fields）」を使う場合もあるが，ここでは割愛する。 \u0026#x21a9;\u0026#xfe0e;\n 楕円曲線と楕円曲線暗号については結城浩さんの『暗号技術入門 第3版』の付録に比較的分かりやすい解説が載っている。同じく結城浩さんの『数学ガール ガロア理論』が何となく分かれば楕円曲線についても何となく分かると思う。大丈夫。私も何となくしか分かっていない（笑） \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2020年6月の暦",
      "section": "remark",
      "description": "2020-06-21 の金環日食は日本では見れず部分日食となる",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/ephemeris/",
      "published": "2020-06-01T02:04:00+00:00",
      "update": "2020-06-01T02:09:30+00:00",
      "content": "折角 spiegel-im-spiegel/koyomi パッケージを作ったので，2020年6月の暦を浚ってみよう。\n国立天文台のデータを使っているため，暦象の基準が日本の暦になっている点に注意。\n   日付 内容     2020-06-04 金星が内合   2020-06-04 水星が東方最大離角   2020-06-05 芒種   2020-06-06 望(満月)   2020-06-10 入梅   2020-06-13 下弦   2020-06-18 水星が留   2020-06-21 朔(新月)   2020-06-21 夏至   2020-06-21 金環日食   2020-06-24 海王星が留   2020-06-25 金星が留   2020-06-28 上弦     水星が見頃。夕方の空に注目 2020-06-06 の望に半影月食がある（肉眼ではほぼ分からないけど） 2020-06-21 の金環日食は日本では見れず部分日食となる  各用語の意味は以下の通り。\n 「天象 - 国立天文台暦計算室」より  ちなみに「留」とは「惑星の地心視赤経の時間変化が0、すなわち赤経方向の動きが止まる瞬間」，もっと簡単に言うと天球上の（見かけの）惑星の動きが反転する瞬間を指す。\n気が向いたらシリーズ化する？\nコード 今回使用したコードは以下の通り。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/spiegel-im-spiegel/koyomi\u0026#34; ) func main() { start, _ := koyomi.DateFrom(\u0026#34;2020-06-01\u0026#34;) end, _ := koyomi.DateFrom(\u0026#34;2020-06-30\u0026#34;) k, err := koyomi.NewSource( koyomi.WithCalendarID( koyomi.Holiday, koyomi.MoonPhase, koyomi.SolarTerm, koyomi.Eclipse, koyomi.Planet, ), koyomi.WithStartDate(start), koyomi.WithEndDate(end), ).Get() if err != nil { fmt.Fprintln(os.Stderr, err) return } fmt.Println(\u0026#34;| 日付 | 内容 |\u0026#34;) fmt.Println(\u0026#34;| ---- | ---- |\u0026#34;) for _, e := range k.Events() { fmt.Printf(\u0026#34;| %v | %v |\\n\u0026#34;, e.Date, e.Title) } } ブックマーク  2020年の主な暦象 日本の暦情報を取得するパッケージを作ってみた  参考図書  天文年鑑 2020年版 天文年鑑 編集委員会 (編集) 誠文堂新光社 2019-11-20 単行本 4416719485 (ASIN), 9784416719480 (EAN), 4416719485 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  天文ファン必携。2020年版。\nreviewed by Spiegel on 2019-11-23 (powered by PA-APIv5)\n "
    },
    {
      "title": "2020-05-31 のブックマーク",
      "section": "bookmarks",
      "description": "「OpenSSH、将来のリリースでssh-rsa公開鍵の署名アルゴリズムをデフォルトで無効に」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/05/31-bookmarks/",
      "published": "2020-05-31T00:44:14+00:00",
      "update": "2020-06-05T01:50:46+00:00",
      "content": "リリース情報  Hugo 0.71.1: A couple of Bug Fixes | Hugo  セキュリティ＆プライバシー関連  英政府がファーウェイの5Gネットワ​​ーク参入に関する方針を転換 | TechCrunch Japan SIMスワッピングによるアカウント侵害で情報流出した事案についてまとめてみた - piyolog 0.9.46 Release - Blog - I2P 「Chrome」の深刻なセキュリティ脆弱性、70％はメモリー安全性の問題 - ZDNet Japan アンドロイドは平等なセキュリティの夢を見るか？ - F-Secure  エフセキュア、Android搭載スマートフォンの複数機種が持つセキュリティ上の問題を発見：CodeZine（コードジン）   Websites Conducting Port Scans - Schneier on Security  ブログ: ポートスキャンを実行しているWebサイト   It’s 2020 And Android’s IPv6 Is Still Broken – Daniels Networking Blog  ブログ: 2020年、AndroidのIPv6はまだ壊れています   悪意あるアプリがほぼすべてのアプリを乗っ取れるAndroidの脆弱性「StrandHogg 2.0」 - GIGAZINE 数字11桁で他人の健康状態が把握できたカタールの接触追跡アプリの脆弱性についてまとめてみた - piyolog Thermal Imaging as Security Theater - Schneier on Security 社内にマルウェアが常駐する製造業、セキュリティ対策は何から始めるべきか (1/3) - MONOist（モノイスト） OpenSSH、将来のリリースでssh-rsa公開鍵の署名アルゴリズムをデフォルトで無効に - ZDNet Japan Facebook Announces Messenger Security Features that Don\u0026rsquo;t Compromise Privacy - Schneier on Security  天文関連  SpaceXが民間企業で人類史上初の有人宇宙飛行に成功、歴史にその名を刻む | TechCrunch Japan  Linux または Ubuntu に関する話題  ブログ: リーナス・トーバルズ、個人用PCのCPUをIntelから32コアAMD Ryzenに置き換え 第620回　Ubuntu 20.04 LTSでU2F/FIDOデバイスを使ったSSHの2要素認証を試す：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社 Ubuntu(Wayland) 環境で Alacritty で日本語を入力できるようにする方法 - Qiita Ubuntu Touch その85 - PinePhoneとPineTab・OpenStoreの再設計など - kledgeb 完全な互換性と改善されたI/Oパフォーマンス ～Canonical、「Ubuntu」の「WSL 2」対応を発表 - 窓の杜  その他  「Chromium」ベースの新しい「Microsoft Edge」がWinForms/WPF開発でも利用可能に - 窓の杜 Chrome and Firefox Block Torrent Site YTS over “Phishing” * TorrentFreak 2020年5月25日ニュース「東北大の超高純度鉄、生体になじむ性質を確認 医療用に期待」 | SciencePortal e-TaxがGoogle Chromeに一部対応、Chromiumベースの新しいMicrosoft Edgeでも利用可能に - 窓の杜 セブン‐イレブン マルチコピー / スキャンについて : スマホアプリ : コンビニでのサービス : ソリューション : 富士ゼロックス : コピー機とスマホを Wi-Fi で直結してファイルを受け取るらしい，って怖いわ！ USB メモリのほうがマシか Rewriting the heart of our sync engine - Dropbox  同期エンジンの心臓部を書き換える Testing sync at Dropbox - Dropbox Dropboxが同期エンジンを全面的に改良、新エンジンはどこが改善されているのか？ - GIGAZINE Dropbox、4年をかけてRust言語で再構築された新しい同期エンジン「Nucleus」をリリース - 窓の杜   Google Cloud FunctionsがJava 11をサポート開始。KotlinやScalaも利用可能に － Publickey Thermal Imaging as Security Theater - Schneier on Security ニューヨーク公共図書館125周年を祝い著名人たちがこの一冊をお勧めしている #nypl125 - YAMDAS現更新履歴 2020年5月28日ニュース「『学校閉鎖は流行阻止効果に乏しい』『2歳未満のマスクは危険』と小児科学会」 | SciencePortal ラズベリーパイ財団が8GBメモリー搭載のRaspberry Pi 4を発表 | TechCrunch Japan 「Android Studio 4.0」が正式リリース ～UIの製作がより簡単に - 窓の杜 2020年5月29日ニュース「3年前の九州北部豪雨、線状降水帯の要因は高気圧と日射 九大が解明」 | SciencePortal 【予告編】クリィミーマミグッズ5/30*0:00通販開始(^▽^) | 高田明美オフィシャルブログ「Angel Touch」Powered by Ameba Bogus Security Technology: An Anti-5G USB Stick - Schneier on Security IBMがRustを使ってNode.jsのプロジェクトを書き換え。その背景とは？ | Think IT（シンクイット）  "
    },
    {
      "title": "「安全」と引き換えに「安心」を得る",
      "section": "remark",
      "description": "「行為遂行的発話」に煩わされることなく「情報ハウリング」を上手くフィルタリングして「事実」の上澄みを掬いとる",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/05/safe-trade-off/",
      "published": "2020-05-30T03:11:38+00:00",
      "update": "2020-05-31T10:59:00+00:00",
      "content": "Facebook の TL を眺めてたら\n 根拠なく「緊急事態宣言は要らんかったんや」と言い出す知識人が増えている問題 | 文春オンライン  てな記事が目に入って読もうかと思ったが\n 専門性のある議論は、感染症の研究者や医師に任せましょう via 根拠なく「緊急事態宣言は要らんかったんや」と言い出す知識人が増えている問題  とかいう副題が目に入ったので，内容を無視して脊髄反射記事を書いてみる。\nちなみに，今回の「緊急事態」の是非についての議論は知らない（政治的無関心中なので）が，「たられば」を言っていいのなら，個人的には3月下旬に宣言すべきだったと思っている。 4月の急速な感染拡大はどう考えても年度跨ぎの「異動」がトリガーになってるでしょ。 そういう意味では GW を「緊急事態」期間に含めたのは妥当だったと考えている。\n 日本における COVID-2019 発症確認者のレポート  今回のように時々刻々と事態や知見が推移していく状況では「専門家」が信用されなくて当然である。 「専門家は正しい」などと言うのは幻想に過ぎない。\nだからといって「安全と引き換えに安心を得る」みたいなトレードオフは愚の骨頂だけどね。 私は安全と安心を一緒くたに騙る輩は，専門家だろうが政治家だろうが，信用しないことにしている。\n大昔のダイオキシン騒動や BSE 騒動で「専門家」の限界については既知のものと思っていたが，ヒトとは忘れる生き物ということか。 専門家の発言について重要なのは「正しいか否か」ではなく内容の事実性である。\nリスク評価には\n 科学的評価リスク 意思決定のためのリスク リスク不安  の3つがある（中西準子著『環境リスク学』より）。 前者ほど専門性が高く後者ほど個人の認知や感情に近い。 この3つは独立して存在するのではない。 リスクは系（system）全体で最小となるようチューニングされなければならないからだ。 そして，これらのギャップを埋めるための手法が「リスク・コミュニケーション」である。\n故に最初に挙げた記事の副題は明確に間違いである。一方的な説得や押し付けは「お下知」と同じだ。 江戸時代かってぇの（笑） これって「安全と引き換えに安心を得る」とは逆方向に思考停止だよね。\nテレビ時代のマス・コミュニケーションなら情報の「発信者」と「受信者」は明確に分かれていたが，ネットの時代の「双方向マス・コミュニケーション」は良くも悪くも peer-to-peer である。 しかし，本来コミュニケーションというのは相手との対等な「対話」なのだ。\n旧いメディアによる「行為遂行的発話（performative utterance）」に煩わされることなく，メディア間の「情報ハウリング」を上手くフィルタリングして，上手に「事実（fact）」の上澄みを掬いとるのがこれからのメディア・リテラシーのポイントであり，それができて初めて対等な「対話」ができるようになるのだろう。\nブックマーク  データ・ジャーナリズム・ハンドブック Thermal Imaging as Security Theater - Schneier on Security 2020年5月28日ニュース「『学校閉鎖は流行阻止効果に乏しい』『2歳未満のマスクは危険』と小児科学会」 | SciencePortal 数字11桁で他人の健康状態が把握できたカタールの接触追跡アプリの脆弱性についてまとめてみた - piyolog 「次亜塩素酸水」の空間噴霧について（ファクトシート）   参考図書  環境リスク学 中西準子 (著) 日本評論社 (Release 2013-08-01) Kindle版 B00E7HMI7U (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  環境リスクのみならず「リスク」全体に目配せした良書。著者の自伝的作品でもある。\nreviewed by Spiegel on 2015-07-26 (powered by PA-APIv5)\n  リスクとつきあう―危険な時代のコミュニケーション (有斐閣選書) 吉川 肇子 (著) 有斐閣 2000-03-01 単行本 4641280304 (ASIN), 9784641280304 (EAN), 4641280304 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  リスク・コミュニケーションについて。内容は古いがまだまだ使える。\nreviewed by Spiegel on 2016-02-03 (powered by PA-APIv5)\n  FACTFULNESS（ファクトフルネス）10の思い込みを乗り越え、データを基に世界を正しく見る習慣 ハンス・ロスリング (著), オーラ・ロスリング (著), アンナ・ロスリング・ロンランド (著), 上杉 周作 (翻訳), 関 美和 (翻訳) 日経BP 2019-01-11 (Release 2019-01-01) Kindle版 B07LG7TG5N (ASIN)  Twitter で見かけて衝動買いした。ちょっとだけ読んで積ん読中。\nreviewed by Spiegel on 2019-03-11 (powered by PA-APIv5)\n "
    },
    {
      "title": "Ubuntu に Visual Studio Code を導入する",
      "section": "remark",
      "description": "継続的に使うなら今後も追記するつもり。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/05/installing-vscode-in-ubuntu/",
      "published": "2020-05-28T03:31:57+00:00",
      "update": "2020-05-29T06:28:31+00:00",
      "content": "ちうわけで Visual Studio Codeを導入して試してみることにした。\n継続的に使うなら今後も追記するつもり。\nVS Code のインストール Ubuntu に VS Code をインストールするのであれば Snap を使うのが一番簡単なのだが，うちの環境では何故か Snap 版で日本語入力ができないという致命的な問題があるため，今回は公式サイトから deb ファイルをダウンロードして直接 apt install した。\n$ sudo apt install ./code_1.45.1-1589445302_amd64.deb インストールに成功すれば以下のコマンドでバージョンが取得できるはず。\n$ code -v 1.45.1 5763d909d5f12fe19f215cbfdd29a91c0fa9208a x64 よしよし。 ちゃんと最新バージョンだな。\n実際に VS Code を起動してアプリケーション情報（メニューの Help → About を選択）も確認してみる。\n うむうむ。\nVS Code のカスタマイズ カスタマイズはメニューの File → Preferences から選択できる。\n File → Preferences → Settings で設定画面が開く（または Ctrl+, キー押下） File → Preferences → Keyboard Shortcuts でキー割当の確認・変更ができる  既定のキー割当は ATOM とほとんど同じなので悩むところは少なかった File → Preferences → Keymaps で他エディタの割当を導入することもできる   f1 キー押下でもコマンド・パレット（Show All Commands）が開く  設定の行方 VS Code は $HOME ディレクトリに以下の設定ディレクトリを作成する。\n ~/.vscode/ ~/.config/Code/  このうち，ユーザ設定は ~/.config/Code/User/ ディレクトリ直下の以下のファイルに書き込まれる。\n settings.json keybindings.json  最低でもこれらのファイルを保持っておけば再現しやすくなるだろう。\nとりあえず導入してみた拡張機能 ATOM エディタみたいに印を付けておいて纏めてインストールできるといいんだけどねぇ。\n EditorConfig for VS Code - Visual Studio Marketplace : EditorConfig zenkaku - Visual Studio Marketplace : 全角空白文字を色付きで表示できる Zenkaku-Hankaku - Visual Studio Marketplace : 全角⇔半角文字変換 vscode-icons - Visual Studio Marketplace : file icon theme Insert Date String - Visual Studio Marketplace Power Tools - Visual Studio Marketplace  ブックマーク  Running Visual Studio Code on Linux UbuntuにVSCodeをインストールする3つの方法 - Qiita VS Code でドキュメントの空白文字を見やすくしてみる - Qiita Visual Studio Codeの設定「虎の巻」：IDE編 (1/3)：特集：Visual Studio Codeを使いこなそう！ - ＠IT  "
    },
    {
      "title": "とりあえず ATOM エディタ内ターミナルを x-terminal に乗り換えた",
      "section": "remark",
      "description": "ATOM における Electron の外れっぷりはどうにかならないのかなぁ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/05/x-terminal-with-atom/",
      "published": "2020-05-28T02:23:04+00:00",
      "update": "2020-05-28T02:30:42+00:00",
      "content": "先週， ATOM エディタの 1.47 がリリースされ Electron も v5 ベースに上がったのだが，またもや platformio-ide-terminal が動かなくなった。 今回はちゃんとリビルドできてるのに。\n一週間待ったが platformio-ide-terminal がアップデートされる気配がないので，諦めて他のパッケージを物色することにした。 まぁ，今は Linux/Ubuntu なので Windows の頃よりは選択肢が多いだろう。\nちうわけで幾つか試した結果，以下のパッケージに乗り換えた。\n x-terminal  このパッケージは atom-xterm からの fork らしいのだが，本家はメンテされなくなって久しいようだ。 x-terminal の方はマメにアップデートされているようなので，しばらくはこちらを使ってみることにする。\nしかし ATOM における Electron の外れっぷりはどうにかならないのかなぁ。 v5 なんかとっくの昔にサポートから外れてるっちうねん。 この機会に真剣に VS Code への乗り換えを検討したほうがええかもしらん1。\nブックマーク  アプリフレームワーク「Electron 9」が公開 ～「PDFium」ベースのPDFリーダーが有効化 - 窓の杜    5年前に秀丸から ATOM に乗り換えたのだが，当時 VS Code は登場したばかりでチューニングの仕方とかよく分からなかったのだ。まぁ GitHub は Microsoft に買収されちゃったし ATOM はそのうちなくなって VS Code に一本化されちゃうのかもねぇ。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2020-05-24 のブックマーク",
      "section": "bookmarks",
      "description": "「ISC BIND 9 の脆弱性」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/05/24-bookmarks/",
      "published": "2020-05-24T01:30:25+00:00",
      "update": "2020-05-28T00:12:35+00:00",
      "content": "リリース情報  Announcing Rust 1.43.1 | Rust Blog Markdown Render Hooks for Headings | Hugo : Hugo 0.71.0 Release 4.0.0 · hakimel/reveal.js · GitHub LibreOffice 6.4.4 available for download - The Document Foundation Blog  セキュリティ＆プライバシー関連  マルウェア感染による日経新聞社員らの情報流出についてまとめてみた - piyolog 米国がファーウェイ製品の使用禁止を1年延長 | TechCrunch Japan Samsung Androidに任意コード実行の脆弱性、アップデートを | マイナビニュース : 2020-05-01 版に要更新 欧州で多数のスパコンが乗っ取り、暗号資産マイニングに利用される - ZDNet Japan 「LibreOffice 6.4.3」「LibreOffice 6.3.6」で1件のセキュリティ改善 - 窓の杜 DNS サーバ BIND の脆弱性対策について(CVE-2020-8616)(CVE-2020-8617) ：IPA 独立行政法人 情報処理推進機構  ISC BIND 9 の脆弱性 (CVE-2020-8616, CVE-2020-8617) に関する注意喚起   VU#647177 - Bluetooth devices supporting BR/EDR are vulnerable to impersonation attacks : Bluetooth Impersonation AttackS (BIAS)  Bluetoothでペアリング済み機器になりすませる脆弱性 - PC Watch Bluetooth Vulnerability: BIAS - Schneier on Security    天文関連  「第二の地球」の公転軌道面は傾いていない | 国立天文台(NAOJ) 2020年4月28日ニュース「金星の大気高速周回、原因は熱が生む波 探査機あかつきで解明」 | SciencePortal 2020年4月21日ニュース「ニュートリノ、反粒子と性質異なる可能性高まる T2K実験」 | SciencePortal 天の川銀河中心の超巨大ブラックホール「いて座A*」の「瞬き」を検出 ―ブラックホールごく近傍からの放射か― | 国立天文台(NAOJ) APOD: 2020 May 14 - Comet Halley vs Comet SWAN  知財関連  GitHub Reinstates Popcorn Time Code Despite MPA \u0026lsquo;Threat\u0026rsquo; * TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 20.04 その42 - Canonicalが取り組んできたGNOME Shellのパフォーマンス改良作業 - kledgeb Ubuntu 20.04 その44 - QEMU 4.2とlibvirt 6.0による優れた仮想環境のサポート - kledgeb Ubuntu 20.04 その45 - FIDO及びU2FデバイスによるSSH認証のサポート - kledgeb Ubuntu 20.04 その47 - Ubuntu 20.04 LTSがRaspberry Piを完全にサポート・イメージのダウンロードとインストールガイド - kledgeb  その他  ＰＣＲ検査は必要か？ ずっと無料で使えるクラウドの「Free Tier」主要サービスまとめ。2020年版 － Publickey 【やじうまミニレビュー】テレワークの2画面は、サブPCと「Mouse Without Borders」の組み合わせがベストだ! - PC Watch Google Kubernetes EngineがWindows Serverコンテナを正式サポート。KuberntesでWindowsの本番用アプリケーションを実行可能に － Publickey Raspberry Piと400円のUSBマイクで作れるボイスチェンジャーで子供と遊ぶ - Qiita DNS over HTTPSを初期サポート ～プレビュー版「Windows 10」Build 19628がFastリングに - 窓の杜 グーグル、「Dart 2.8」と「Flutter 1.17」をリリース\u0026ndash;iOS関連機能を大幅強化 - ZDNet Japan レビュー「新型コロナ検査、新段階に 厚労省、抗原検査キットを13日に承認」 | SciencePortal − AtlassianがHalpを買収、JiraやConfluenceとの統合を進める | TechCrunch Japan 「Chrome」、過剰に「重い」広告をブロックへ\u0026ndash;8月から - ZDNet Japan 「Google Cloud VMware Engine」発表。Google自身がVMware環境をGoogle Cloud上に構築、マネージドサービスとして提供 － Publickey HPEがKubernetes対応のコンテナプラットフォーム「HPE Container Platform」を国内で提供開始。大規模なデータ統合基盤の構築が狙い － Publickey Five Years of Rust | Rust Blog Denoの登場でNode.jsの時代は終わるのか？ - Qiita VSCodeでDraw.ioが使えるようになったらしい！ - Qiita ［速報］Windows用パッケージマネージャ「winget」がプレビューリリース。コマンドラインからアプリケーションをインストール。Microsoft Build 2020 － Publickey ［速報］WSL 2が正式版に到達。今後はLinuxのGUIアプリへも対応すると。Microsoft Build 2020 － Publickey ［速報］Windows Terminal 1.0正式リリース。7月からは毎月アップデートへ。Microsoft Build 2020 － Publickey ［速報」Blazor WebAssemblyが正式リリース。C#/.NETでWebアプリケーションを開発可能に。Microsoft Build 2020 － Publickey ［速報］マイクロソフト、新UIフレームワーク「.NET Multi-platform App UI」（.NET MAUI）発表。単一コードでマルチプラットフォーム対応。Microsoft Build 2020 － Publickey Gmailに追加されたGoogle Meetの開始・参加リンク、非表示にするオプションが追加 - 窓の杜 フリーのネットワーク解析ツール「Wireshark」v3.2.4/v3.0.11/v2.6.17が公開 - 窓の杜 わずか1万円のLinux搭載2-in-1タブレットPC「PineTab」まもなく登場！ Microsoft、37年前の「GW-BASIC」をオープンソース化 - 窓の杜 Linuxが主流のカオスエンジニアリングをWindowsで実現するGremlin | TechCrunch Japan 「Google Chrome 83」は“DNS-over-HTTPS”に対応、セキュリティ設定も刷新され使いやすく - 窓の杜  "
    }
  ]
}
