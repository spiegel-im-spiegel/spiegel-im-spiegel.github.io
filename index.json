{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "Java 18 がリリースされた",
      "section": "release",
      "description": "2022-09 までの短期サポート・バージョン",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2022/03/java-18-is-released/",
      "published": "2022-03-23T11:32:56+00:00",
      "update": "2022-03-23T11:34:55+00:00",
      "content": "予定通り Java 18 がリリースされた。 2022-09 までの短期サポート・バージョンである。\n OpenJDK JDK 18 GA Release JDK 18  Java 18 / JDK 18: General Availability   JDK 18 Release Notes Overview (Java SE 18 \u0026amp; JDK 18)  主な内容は以下の通り。\n 400: UTF-8 by Default 408: Simple Web Server 413: Code Snippets in Java API Documentation 416: Reimplement Core Reflection with Method Handles 417: Vector API (Third Incubator) 418: Internet-Address Resolution SPI 419: Foreign Function \u0026amp; Memory API (Second Incubator) 420: Pattern Matching for switch (Second Preview) 421: Deprecate Finalization for Removal   via JDK 18  OpenJDK を APT で管理するメリットはないので，実行バイナリをリリースページから直接ダウンロードして配置する。 以下は完全手動でのインストール（笑）\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://download.java.net/java/GA/jdk18/43f95e8614114aeaa8e8a5fcf20a682d/36/GPL/openjdk-18_linux-x64_bin.tar.gz\u0026#34; -O $ cd .. $ sudo unlink java # 以前のバージョンの Java 環境がある場合 $ sudo tar xvf src/openjdk-18_linux-x64_bin.tar.gz $ sudo ln -s jdk-18 java $ java -version # すでに PATH が通っている場合 openjdk version \u0026#34;18\u0026#34; 2022-03-22 OpenJDK Runtime Environment (build 18+36-2087) OpenJDK 64-Bit Server VM (build 18+36-2087, mixed mode, sharing) 私としては PlantUML が動けばいいので，試しておく1。\nFactory Method Pattern  おりょ？ PlantUML のバージョンが上がったせいか？ 角がちょっぴり丸くなってるな。 まぁ，いいか。 ちゃんと動くし。\nブックマーク  Oracle Java SE Support Roadmap Support | AdoptOpenJDK - Open source, prebuilt OpenJDK binaries  参考図書   Spring Data JPAプログラミング入門 溝口賢司 (著) 秀和システム 2017-08-03 (Release 2018-04-23) Kindle版 B07CKHR8C1 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  JPA のお勉強用に購入。紙のほうはプレミアが付いてるっぽいが Kindle で買えるよ。固定レイアウトだからブラウザの Kindle Cloud Reader で読めるし。真面目に基本を押さえて書いていて分かりやすい。\nreviewed by Spiegel on 2021-08-26 (powered by PA-APIv5)\n   Effective Java 第3版 Joshua Bloch (著), 柴田 芳樹 (翻訳) 丸善出版 2018-10-30 単行本（ソフトカバー） 4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。\nreviewed by Spiegel on 2021-03-17 (powered by PA-APIv5)\n   Spring Boot 2 入門: 基礎から実演まで Webアプリ開発入門 原田 けいと (著), 竹田 甘地 (著), Robert Segawa (著)  2020-05-22 (Release 2020-05-22) Kindle版 B0893LQ5KY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Spring Boot を勉強することになって急遽買った本。めっさ分かりやすかった。 PDF 版が欲しいくらい（笑）\nreviewed by Spiegel on 2021-06-13 (powered by PA-APIv5)\n   2021-03-05 に PlantUML V1.2022.2 がリリースされている。 PlantUML の使い方等については拙文「真面目に PlantUML」シリーズを参考にどうぞ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2022-03-20 のブックマーク",
      "section": "bookmarks",
      "description": "「ウクライナ人・ロシア人がTelegramをできるだけ安全に使う方法（あるいは使うべきでない理由）」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2022/03/20-bookmarks/",
      "published": "2022-03-20T08:33:15+00:00",
      "update": "2022-03-20T08:36:44+00:00",
      "content": "リリース情報  Release v0.95.0 · gohugoio/hugo · GitHub Release v1.0.32 · sonatype-nexus-community/nancy · GitHub Release 1.22.2 · tailscale/tailscale · GitHub Release v1.45.0 · golangci/golangci-lint · GitHub Release v1.0.33 · sonatype-nexus-community/nancy · GitHub  セキュリティ＆プライバシー関連  インテルとARMのCPUに脆弱性「Spectre-v2」の悪夢再び、新たな攻撃手法 | TECH+  AMDの脆弱性「Spectre-v2」緩和策、Intel指摘「機能していない」 | TECH+   Linuxカーネルに特権昇格の脆弱性「Dirty Pipe」、迅速なアップデートが必要 | Think IT（シンクイット）  Ubuntu 21.10 その76 - ファイルを上書き可能なLinux kernelの脆弱性・DirtyPipeとUbuntuの対応方針 - kledgeb   Transparency Org Releases Alleged Leak of Russian Censorship Agency  Leak of Russian Censorship Data - Schneier on Security   ロシア政府、世界規模のインターネットからの切り離しを画策か - ZDNet Japan Hacked US companies to face new reporting requirements | AP News  US Critical Infrastructure Companies Will Have to Report When They Are Hacked - Schneier on Security   OpenSSL version 1.1.1n published  OpenSSLに無限ループの脆弱性、アップデートを | TECH+   Researcher uses 379-year-old algorithm to crack crypto keys found in the wild | Ars Technica  Breaking RSA through Insufficiently Random Primes - Schneier on Security   「1Password」にSSHエージェント機能 ～「1Password 8.6 for Windows」「1Password CLI 2.0」もリリース - 窓の杜 Why Vaccine Cards Are So Easily Forged - Schneier on Security You Should Not Trust Russia’s New “Trusted Root CA” | Electronic Frontier Foundation  ロシア政府の「信頼されたルート証明機関」を信頼してはならない | P2Pとかその辺のお話R   Telegram Harm Reduction for Users in Russia and Ukraine | Electronic Frontier Foundation  ウクライナ人・ロシア人がTelegramをできるだけ安全に使う方法（あるいは使うべきでない理由） | P2Pとかその辺のお話R   Browser In The Browser (BITB) Attack | mr.d0x SP 800-219 (Draft), Automated Secure Configuration Guidance from the mSCP | CSRC VPNs: Russia Forces Google to Delete Masses of Links Amid Ukraine Invasion * TorrentFreak  Google、ロシア当局の要請を受けて検索結果から大量のリンクを削除 | P2Pとかその辺のお話R    知財関連  CC stands in solidarity with Ukraine and supports those safeguarding public collections, educational resources, and cultural heritage sites - Creative Commons  Linux または Ubuntu に関する話題  Ubuntu 22.04 その40 - Ubuntu公式ロゴのデザイン変更 - kledgeb  Azure や Windows に関する話題  Azure Database for PostgreSQL のデータのコピーと変換 - Azure Data Factory \u0026amp; Azure Synapse | Microsoft Docs 外部アクセス可能なディレクトリなどをApp Serviceにマウントする  Go 言語関連  GitHub - gzuidhof/tygo: Generate Typescript types from Golang source code Genericsを使いミスを防ぐSQL Builder「GenORM」  Java 言語関連  Spring Bootでapplication.propertiesを環境ごとに切り替える方法 - 知的好奇心 【Spring Boot】プロパティファイル java - Spring Boot - How to set the default schema for PostgreSQL? - Stack Overflow Spring Boot + MyBatisでapplication.ymlにスキーマを指定する方法 | 株式会社CONFRAGE ITソリューション事業部 Java9から17で入った新機能ピックアップ  その他  GitLabで学んだ最高の働き方。気持ちよく働くための組織と個人のテクニック（前編）。デブサミ2022 － Publickey  GitLabで学んだ最高の働き方。気持ちよく働くための組織と個人のテクニック（後編）。デブサミ2022 － Publickey   PostgreSQL | スキーマを作成する(CREATE SCHEMA) PostgreSQLのDBを複製する方法 - Qiita PostgreSQLでテーブルをコピーする方法 - Qiita テルモ血圧計ES-T3200ZZ｜血圧計｜商品情報｜テルモ　一般のお客様向け情報 “Change Password” - Schneier on Security : www Spotifyが全世界でログインできなくなった3月8日の障害について原因を報告。Google CloudのTraffic Directorの障害がgRPCライブラリのバグを踏んだと － Publickey Sortableを利用したレコードの並び替え – cybozu developer network jQuery UIのsortableでtable並び替え（helperオプションで表示の修正） - kamegu\u0026rsquo;s memo 「秀丸エディタ」がスニペットに対応 ～Windows内蔵エンジンを利用したスペルチェックも可能に - 窓の杜 エフセキュア、BtoBとBtoCに事業を分社化\u0026ndash;BtoB事業の社名は「ウィズセキュア」に - ZDNet Japan : F-Secure → WithSecure へ社名変更，法人向け（BtoB）特化。個人向け市場（BtoC）に対しては改めて F-Secure を設立するとのこと Firefoxは危険なJavaScriptに対応しない - Qiita  "
    },
    {
      "title": "Go パッケージの移行状況",
      "section": "release",
      "description": "ダラダラやってるといつまで経っても終わらないので，移行状況を記しておく",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2022/03/status-of-migrations/",
      "published": "2022-03-19T12:15:27+00:00",
      "update": "2022-03-20T08:29:27+00:00",
      "content": "現在 github.com/goark に Go パッケージを移行中だが，ダラダラやってるといつまで経っても終わらないので，覚え書きとして移行状況を記しておく。 この記事は移行が完了するまで随時更新される。\n   Package Bin goark Blog     gpgpdump: OpenPGP packet visualizer      depm: Visualize depndency packages and modules      books-data: Search for Books Data      gnkf: Network Kanji Filter by Golang      gimei-cli: 姓名・住所データ生成ツール      cov19jpn: COVID-2019 in Japan; Importing Google COVID-19 Public Forecasts      xls2csv: xport CSV Text from Excel Data      ml: Make Link with Markdown Format      pa-api: APIs for Amazon Product Advertising API v5 by Golang      aozora-api: APIs for Aozora-bunko RESTful Service by Golang      openbd-api: APIs for openBD by Golang      errs: Error handling for Golang      gocli: Minimal Packages for Command-Line Interface      mt: Mersenne Twister; Pseudo Random Number Generator, Implemented by Golang      krconv: Convert kana-character to roman-alphabet      kkconv: Hiragana-Katakana Conversion      go-cvss: Common Vulnerability Scoring System (CVSS)      cov19data: Importing WHO COVID-2019 Cases Global Data      csvdata: Reading CSV Data      fetch: Fetch Data from URL      koyomi: 日本のこよみ      jzodiac: Japanese Zodiac       移行しないパッケージ（多分） 最終的に archive にする（多分）\n   パッケージ 理由 Archive     logf rs/zerolog に乗り換えたため    writers 全く使ってない    gcavoc 全く使ってない    emojis 全く使ってない    gprompt nyaosorg/go-readline-ny に乗り換えたため    file 全く使ってない    jpera 全く使ってない    gjq 全く使ってない    jvnman 全く使ってない    go-myjvn 全く使ってない    godump gnkf に組込み済み    gocodic 全く使ってない    icat4json 全く使ってない    gitioapi 全く使ってない     その他の TODO  github.com/spiegel-im-spiegel の Readme を修正する\n Zenn の「Go のエラーハンドリング」の改訂\nブックマーク  独り GitHub Team を作ってみた  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "Go 1.18 と Generics と Linter",
      "section": "remark",
      "description": "Go 1.18 に組み込まれた Generics と既存の lint の間でトラブルが続出しているらしい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/03/linter-troubles-in-go-1_18/",
      "published": "2022-03-19T06:16:40+00:00",
      "update": "2022-03-19T06:29:17+00:00",
      "content": "予測して然るべきであったが Go 1.18 に組み込まれた Generics と既存の linter の間でトラブルが続出しているらしい。\n私も大変お世話になっている Go の代表的な総合 linter である golangci-lint は v1.45 で暫定的な対応を行ったようだ。\nSo I added a new configuration option inside the run section.\nWe will not have to remove this option in the future because we will be able to use it for some linters that have a Go version option.\nAn example:\nrun:go:1.18By default, the supported Go version will be go1.17 because it allows us to run all our tests without a huge rewrite.\nIf you set the version to go1.18, the following linters will be inactive:\n bodyclose contextcheck gosimple nilerr noctx rowserrcheck sqlclosecheck staticcheck stylecheck tparallel unparam unused wastedassign   via Support of go1.18 · Issue #2649 · golangci/golangci-lint  この説明にあるように .golangci.yaml ファイルに\nrun:go:1.18の記述を入れることで Go 1.18 に対応していない linter を無効にしてくれるようだ。 あとは各 lint パッケージが 1.18 に対応してくれることを気長に待つしかないか。\nなお Generics の機能を使わないのなら今回の件は気にしなくてよい（笑）\nあと golangci-lint-action もいつの間にか v3 に上がってるな。 見落としてたかなぁ。 この辺はおいおい検証しよう。\n参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "golang.org/x/crypto/ssh パッケージをアップデートしましょう【セキュリティ・アップデート】",
      "section": "remark",
      "description": "CVE-2022-27191 の改修を含む。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/03/update-ssh-package/",
      "published": "2022-03-19T05:17:32+00:00",
      "update": "2022-03-19T05:22:58+00:00",
      "content": "golang.org/x/crypto/ssh パッケージをアップデートするようアナウンスが出ている。\n An update of golang.org/x/crypto/ssh might be necessary  ひとつは SSH 認証時の問題：\nVersion v0.0.0-20220315160706-3147a52a75dd of golang.org/x/crypto/ssh implements client authentication support for signature algorithms based on SHA-2 for use with existing RSA keys.\nPreviously, a client would fail to authenticate with RSA keys to servers that reject signature algorithms based on SHA-1. This includes OpenSSH 8.8 by default and—starting today March 15, 2022—github.com for recently uploaded keys.\n via An update of golang.org/x/crypto/ssh might be necessary  もうひとつは golang.org/x/crypto/ssh パッケージを使って SSH サービスを構成する場合の脆弱性で CVE-2022-27191 が割り当てられている。\nVersion v0.0.0-20220314234659-1baeb1ce4c0b (included in the version above) also fixes a potential security issue where an attacker could cause a crash in a golang.org/x/crypto/ssh server under these conditions:\n The server has been configured by passing a Signer to ServerConfig.AddHostKey. The Signer passed to AddHostKey does not also implement AlgorithmSigner. The Signer passed to AddHostKey does return a key of type “ssh-rsa” from its PublicKey method.  Servers that only use Signer implementations provided by the ssh package are unaffected.\n via An update of golang.org/x/crypto/ssh might be necessary  golang.org/x/crypto/ssh パッケージを使って SSH サービスを利用している方はアップデートしましょう。\nブックマーク  さようなら SHA-1  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n   暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n "
    },
    {
      "title": "Go 1.18 がリリースされた",
      "section": "release",
      "description": "個人的には workspace mode についてはちゃんと調べて使えるようにしたい",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2022/03/go-1_18-is-released/",
      "published": "2022-03-19T04:38:06+00:00",
      "update": "2022-03-20T08:36:44+00:00",
      "content": "既に Gopher たちの間では話題沸騰ですが（笑）， Go 1.18 がリリースされました。\n Go 1.18 is released Go 1.18 is released! - The Go Programming Language Go 1.18 Release Notes - The Go Programming Language  ブログ記事を参考にポイントを紹介すると\n Generics Fuzzing Workspaces 20% Performance Improvements  といったところか。 個人的には workspace mode についてはちゃんと調べて使えるようにしたいと考えている。\nGo modules have been almost universally adopted, and Go users have reported very high satisfaction scores in our annual surveys. In our 2021 user survey, the most common challenge users identified with modules was working across multiple modules. In Go 1.18, we’ve addressed this with a new Go workspace mode, which makes it simple to work with multiple modules. via Go 1.18 is released!  Generics は自分では積極的に使おうという気は起きないので，他の人のパッケージに含まれていればお世話になる感じかなぁ。 とりあえず，この辺はいじってみたい。\n GavinClarke0/lockless-generic-ring-buffer: Single producer and multi-reader lockless ring buffer in go using generics from the go 1.18beta release. It is significantly faster than channels with the added type safety of generics compared to ring buffers using interfaces.  例によって Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.18.linux-amd64.tar.gz）を取ってきてインストールすることを強く推奨する。 以下は完全手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://go.dev/dl/go1.18.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.18.linux-amd64.tar.gz $ sudo mv go go1.18 $ sudo ln -s go1.18 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.18 linux/amd64 アップデートは計画的に。\nブックマーク  Big Sky :: Go の http パッケージに MaxBytesHandler が入った。 go1.18で入ったhttp.MaxBytesHandlerの中身を見てみた Go1.18から導入されるnetip package/netip-package - Speaker Deck What\u0026rsquo;s new in Go 1.18? - Speaker Deck What Is the Go Workspace Mode - Speaker Deck [shared] 20220218 Go 1.18 Fuzzing - Google スライド Go 1.18で追加されるstrings/bytes.Cutとsync.Mutex.TryLockについて - Google スライド Go言語のジェネリクス入門(1)  Go言語のジェネリクス入門(2) インスタンス化と型推論   strings.Cut と strings.SplitN はどっちが速いか Big Sky :: text/template と html/template に continue/break が入った。 Go言語がGenericsを導入、過去最大の変更となる「Go 1.18」正式版リリース － Publickey Go 1.18で導入されたnet/netip package Go1.18からのWorkspace modeをさっそく使ってみた  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "379年前のアルゴリズムを使って RSA 暗号鍵を破った話",
      "section": "remark",
      "description": "例によって Bruce Schneier さんの記事より",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/03/using-379-year-old-algorithm-to-crack-crypto-keys/",
      "published": "2022-03-19T03:20:03+00:00",
      "update": "2022-03-19T04:09:38+00:00",
      "content": "例によって Bruce Schneier さんの記事経由：\n Fermat Attack on RSA Researcher uses 379-year-old algorithm to crack crypto keys found in the wild | Ars Technica  RSA 公開鍵暗号の仕組みについては結城浩さんの『暗号技術入門』の第5章に分かりやすく解説されているので，まずはそちらを参照のこと。\n今回のポイントとなる部分だけ紹介すると RSA 公開鍵暗号の鍵ペアを生成する際には最初に2つの大きな素数 $(p,q)$ を用意する。 $(p,q)$ を掛け合わせた $N=p \\times q$ は公開鍵にも秘密鍵にも使われる値だが「2つの大きな素数を合成した値を（元の素数を知らずに）因数分解するのは難しい」ため $N$ から秘密鍵を推測するのは難しいとされている。 当然ながら素数 $(p,q)$ の組み合わせは第三者に知られないよう管理する必要がある。\nThe security of RSA keys depends on the difficulty of factoring a key\u0026rsquo;s large composite number (usually denoted as N) to derive its two factors (usually denoted as P and Q). When P and Q are known publicly, the key they make up is broken, meaning anyone can decrypt data protected by the key or use the key to authenticate messages. via Researcher uses 379-year-old algorithm to crack crypto keys found in the wild  ただし，素数 $(p,q)$ が互いに近い値の場合は容易に因数分解できることも大昔から知られている。\nCryptographers have long known that RSA keys that are generated with primes that are too close together can be trivially broken with Fermat\u0026rsquo;s factorization method. French mathematician Pierre de Fermat first described this method in 1643.\nFermat\u0026rsquo;s algorithm was based on the fact that any odd number can be expressed as the difference between two squares. When the factors are near the root of the number, they can be calculated easily and quickly. The method isn\u0026rsquo;t feasible when factors are truly random and hence far apart.\n via Researcher uses 379-year-old algorithm to crack crypto keys found in the wild  で，実際に一部の暗号製品で「鍵サイズは大きいけど容易に破られる暗号鍵」を生成してしまうものがあったそうで，これは CVE-2022-26320 として詳細が公開されている。\nThe Rambus SafeZone Basic Crypto Module before 10.4.0, as used in certain Fujifilm (formerly Fuji Xerox) devices before 2022-03-01, Canon imagePROGRAF and imageRUNNER devices through 2022-03-14, and potentially many other devices, generates RSA keys that can be broken with Fermat’s factorization method. This allows efficient calculation of private RSA keys from the public key of a TLS certificate. via CVE-2022-26320  この脆弱性を報告した Hanno Böck さんは自身の記事の中で，更に SKS PGP 鍵サーバにも今回のような脆弱な RSA 公開鍵があったと言っている（実際に運用している鍵ではなさそうだが）。\nIs PGP/GnuPG/OpenPGP affected?\nI applied the algorithm to a dump of the SKS PGP key servers. I found four vulnerable keys. However all these keys had a user ID that did imply they were created for testing.\nIt is plausible that these keys were not generated by vulnerable implementations, but were manually crafted, possibly by people aware of this attack creating test data.\n via Fermat Attack on RSA  また，破られやすい素数の組み合わせとして\nHow \u0026ldquo;close\u0026rdquo; do primes need to be in order to be vulnerable?\nWith common RSA key sizes (2048 bit) in our tests the Fermat algorithm with 100 rounds reliably factors numbers where p and q differ up to 2^517. In other words it can be said that primes that only differ within the lower 64 bytes (or around half their size) will be vulnerable.\nUp to 2^514 it almost always finds the factorization in the first round of the algorithm. It could be argued that the 100 rounds is therefore excessive, however the algorithm is so fast that it practically does not matter much.\n via Fermat Attack on RSA  と見積もっている。 ちなみに SSH で生成する RSA 鍵については\nIs SSH affected?\nThere are probably no vulnerable SSH implementations creating such keys, though I obviously cannot proove that.\nI checked multiple large collections of both SSH host and user keys. I did not find any vulnerable keys.\n via Fermat Attack on RSA  なんだそうな。 よかったね。\nなお，記事の最後では\nWhat do you recommend?\nIf you are running one of the affected devices you should make sure that you update the devices and regenerate the keys.\nIf you are in a position where external users will supply public RSA keys to you then you might want to implement checks for this vulnerability. A typical case for this are certificate authorities. I shared the exploit code with certificate authorities and are aware that some have implemented checks in their certificate issuance process to avoid accepting keys vulnerable to this attack.\nYou can find Let\u0026rsquo;s Encrypt\u0026rsquo;s implementation of the check in their Boulder software in this pull request.\n via Fermat Attack on RSA  と締めている。 今回のケースは暗号製品や CA など暗号鍵を提供・運用する側の問題でユーザ側でできることは殆どないだろうが，とりあえず怪しげな暗号製品は使うなっちうことやね（笑）\n参考図書   暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n   暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n "
    },
    {
      "title": "お彼岸",
      "section": "remark",
      "description": "宣明暦・貞享暦は「どうしてそうなった」って感じ（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/03/ohigan/",
      "published": "2022-03-18T11:31:47+00:00",
      "update": "2022-03-18T11:32:59+00:00",
      "content": "（2年前に書いた記事から抜粋して再構成した）\n現在の定義では「春分の日」の定義は「太陽黄経が0°になる瞬間を含む日」で「秋分の日」は「太陽黄経が180°になる瞬間を含む日」である。 そして春分・秋分の日を挟む前後3日が「お彼岸」となる。\n  via Explanation about a celestial sphere in Japanese  実は近年まで知らなかったのだが，春分・秋分を「彼岸の中日」と定めたのは天保暦以後のことらしい。 国立天文台の解説によると，天保暦以前はこんな感じだそうな。\n   暦法 -5 -4 -3 -2 -1 春秋分 +1 +2 +3 +4 +5 +6 +7 +8 宣明暦\n貞享暦        入り   中日   明け  宝暦暦\n寛政暦 入り   中日  （春分） 明け             入り （秋分）  中日   明け     天保暦\n現在   入り   中日   明け         暦Wiki/季節/雑節とは？ - 国立天文台暦計算室より  宣明暦・貞享暦は「どうしてそうなった」って感じ（笑）\n\u0026hellip;あー，ぼた餅食べたい。\nブックマーク  2022年の暦  参考図書   天文年鑑 2022年版 天文年鑑編集委員会 (編集) 誠文堂新光社 2021-11-22 単行本 441662140X (ASIN), 9784416621400 (EAN), 441662140X (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  天文ファン必携。2022年版。\nreviewed by Spiegel on 2021-11-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "独り GitHub Team を作ってみた",
      "section": "remark",
      "description": "ついカッとなってやった。今はちょっとだけ反省している。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/03/github-team/",
      "published": "2022-03-13T11:31:26+00:00",
      "update": "2022-03-20T08:29:27+00:00",
      "content": "GitHub のリポジトリで諸々を公開するようになって後悔（駄洒落だよ）してるのは「ユーザ名が長すぎる」ことである。 ユーザ名は（名前が被らなければ）後から変更することもできるのだが（新しい方の URL にリダイレクトされる）， Go の場合はリポジトリの URI がそのままモジュール・パッケージのパスになるので移行が面倒そうだし，このブログ（GitHub Page）の CNAME 変更も面倒が起きそうな気がしたので諦めていた。\nでも，半年ほど前に\nnyaosorg という organization を作って、そちらへ nyagos のレポジトリを引っ越しました。nyagos が依存するパッケージも順次そちらへ移動する予定ですhttps://t.co/yFwrGxdHiP\n\u0026mdash; 𝒏𝒚𝒂𝒐𝒔.𝒐𝒓𝒈 (@NyaosOrg) September 12, 2021  という tweet を見て「なるほど！」と思ったわけよ。 もっとも本業がだんだん忙しくなって何となく先延ばしにしてたのだが，昨日ついカッとなってやってもうた。\n github.com/goark Playing with Go Language  忙しいときほど要らんことをしたくなるよね（部屋の掃除とか）。 今はちょっとだけ反省している。\n“ark” は archive の駄洒落である1。 なので「ごーあーく」とでも呼んでいただければ幸いである。 もしくは更に縮めて「ごらく」とか（読めねーよ）\n用途としては，タイトル通り，個人的な「Go の遊び場」として利用することを考えとりやす。 元の github.com/spiegel-im-spiegel から Go パッケージを徐々に移行する予定。 とりあえず gpgpdump と depm は個人的に使うので（依存パッケージと併せて）真っ先に移行した。 他のアクティブなパッケージもそのうち移行するつもりである。\n移行自体は簡単で，リポジトリの Settings ページの下の方に “Danger Zone” てのがあるのだが\nDanger Zone  その中の “Transfer ownership” で移行先のユーザ名（または組織名）を指定すればよい。\nTransfer ownership  移行するためには移行先にリポジトリの作成権限があることが必要。\n更に Go パッケージについてはソースコード内のインポート・パスを書き換えないといけないのだが，実際にやってみると思ったほど大変ではなかった。 go.mod ファイルに依存パッケージが列挙されているので，これを見ながら一括置換してしまえばいいのだ。\n注意する点としては移行後にバージョンタグを付けてバージョンを上げておくこと。 そうしないと，ひとつのバージョンに対して複数のパスが存在することになり go mod tidy とかでがっつり怒られる。\nそうそう。 今回は Free ではなく，有料の Team にした。 だって Codespace が使いたかったんじゃもん。\n  via Pricing · Plans for every developer  今や IDE やエディタも XaaS の時代ですよ。 まぁ，飽きたらフリーに戻すかも知れんけど。\nブックマーク   GitHub のアカウントの名前を変更したら起きること - 標準愚痴出力\n 続・GitHub のアカウントの名前を変更したら起きること 〈AppVeyor編〉 - 標準愚痴出力 : 結局 GitHub のユーザ名を変えて一番面倒くさいのは OAuth 周りなんだな。やっぱ下手に変えないほうがいいか    パッケージ引っ越し大作戦\n  GitHubセキュリティ Organization運用のベストプラクティス\n  GitHub開発チームでのCodespacesの利用 - GitHubブログ\n  GitHub Codespaces · GitHub\n  GitHub Codespaces Documentation - GitHub Docs\n  Github CodeSpace 触ってみた - Qiita\n  GitHub Codespaces をつかって 3分で始めるサービス開発 | Wantedly, Inc.\n  Codespaces の支払いについて - GitHub Docs\n  Go パッケージの移行状況\n  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n   エンジニアに必要なのはダジャレ力だって Go の偉い人が言ってた（笑）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2022-03-13 のブックマーク",
      "section": "bookmarks",
      "description": "「インターネットへの干渉を「戦時下」の名のもとに正当化させてはならない」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2022/03/13-bookmarks/",
      "published": "2022-03-13T03:53:43+00:00",
      "update": "2022-03-13T03:54:30+00:00",
      "content": "リリース情報  Release v1.2022.2 · plantuml/plantuml · GitHub Release v0.35.0: Bump Wasmtime to 0.35.0 (#3885) · bytecodealliance/wasmtime · GitHub 「Firefox」に致命的な脆弱性、攻撃が野放しに ～Mozilla、修正版のv97.0.2をリリース - 窓の杜 すでに攻撃が開始されている致命的な脆弱性を修正した「Thunderbird 91.6.2」が公開 - 窓の杜 戻る・進む処理を一から作り直した「Visual Studio Code」2022年2月更新（v1.65） - 窓の杜 Release v0.93.3 · gohugoio/hugo · GitHub Release February 2022 Recovery 1 · microsoft/vscode · GitHub Release 1.22.1 · tailscale/tailscale · GitHub Release v0.35.1: Bump Wasmtime to 0.35.1 (#3911) · bytecodealliance/wasmtime · GitHub Release v0.94.0 · gohugoio/hugo · GitHub Release v1.4.0 · spf13/cobra · GitHub Release February 2022 Recovery 2 · microsoft/vscode · GitHub Release v0.94.1 · gohugoio/hugo · GitHub Announcement of LibreOffice 7.2.6 Community - The Document Foundation Blog  「LibreOffice 7.2.6 Community」が公開、安定性とパフォーマンスが向上 - 窓の杜   「Thunderbird 91.7.0」が公開 ～ここ1週間で2回目のバージョンアップ - 窓の杜 Release v0.94.2 · gohugoio/hugo · GitHub  セキュリティ＆プライバシー関連  NSA Releases Network Infrastructure Security Guidance | CISA  米NSA、ネットワークインフラのための新しいセキュリティガイダンスを公開 | TECH+   US-CERT、Ciscoの複数のプロダクトに発見された脆弱性について注意喚起 | Think IT（シンクイット） Attackers can force Amazon Echos to hack themselves with self-issued commands | Ars Technica  Hacking Alexa through Alexa’s Speech - Schneier on Security   Security advisory for the regex crate (CVE-2022-24713) | Rust Blog : Rust Using Radar to Read Body Language - Schneier on Security Microsoft 社 Internet Explorer のサポート終了について：IPA 独立行政法人 情報処理推進機構 Where’s the Russia-Ukraine Cyberwar? - Schneier on Security Intel、一部プロセッサで情報漏洩の恐れがある脆弱性 - PC Watch 「秀丸メール」に添付ファイルを「Windows サンドボックス」で開く機能が追加 - 窓の杜  Linux または Ubuntu に関する話題  RTL8761B搭載Bluetooth 5.0 USBドングルをUbuntuで動かす – Boot macOS : 21.10 には既に入ってた。 hciconfig -a で状態を確認できる  Azure や Windows に関する話題  マイクロソフト「Azure」がAWSしのぐ側面も\u0026ndash;Flexeraのクラウドレポート - ZDNet Japan : 売上の話らしいw  Go 言語関連  Scripting with Go — Bitfield Consulting : あとで遊ぶ Better Go Playground  天文関連  A rogue rocket will crash into the Moon this week, shedding light on cosmic crashes | Astronomy.com Astronomers discover largest molecule yet in a planet-forming disc | ESO  その他  GitHubセキュリティ Organization運用のベストプラクティス CypressでRSSなどのXMLをテストする Perl の Twitter API v2 対応 - 電気ウナギ的○○ Gitコマンド sparse-checkout使ってみた - Qiita The Cyber Social Contract | Foreign Affairs  A New Cybersecurity “Social Contract” - Schneier on Security デジタル世界における信頼構築のために今考えるべき「新たなサイバー社会契約」 - YAMDAS現更新履歴 : 日本語要約ありがたい   GNOMEとMonoとXamarinの開発者Miguel de Icaza（ミゲル・デ・イカザ）氏がマイクロソフト退職を発表 － Publickey PostgreSQL | 取得した別のテーブルのデータをテーブルに追加する(INSERT \u0026hellip; SELECT) スティーブン・ウォルト『同盟の起源』邦訳刊行記念ウェビナー | Peatix インターネットへの干渉を「戦時下」の名のもとに正当化させてはならない | P2Pとかその辺のお話R  「ロシアのインターネットからの排除」要請に関するICANNからウクライナ副首相への回答 | P2Pとかその辺のお話R   マイクロソフト、JavaScriptに型宣言を追加しつつトランスパイラ不要の「Types as Comments」をJavaScript仕様策定会議のTC39に提案へ － Publickey  JavaScriptに「型」を ～Microsoftが新構文を提案へ - 窓の杜   「テキスト校正くん」に「Figma」版が登場 ～「VS Code」で人気の文章校正支援ツール - 窓の杜 時系列ツイート表示にした「Twitter」にスワイプで［ホーム］と［最新］で切り替える機能 - 窓の杜 奈良文化財研究所、文化財データの保管と活用に「Box」採用 - ZDNet Japan Chrome99でshowPickerが使えるようになったので、ブラウザごとのpickerを比べてみた  "
    }
  ]
}
