{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "PGP は30周年だった",
      "section": "remark",
      "description": "PGP の最初のバージョンがリリースされたのが1991年だから，そうか，そうだよな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/06/pgp-30th/",
      "published": "2021-06-09T11:10:47+00:00",
      "update": "2021-06-09T11:11:03+00:00",
      "content": "元祖 PGP (Pretty Good Privacy) の作者である Phil. Zimmermann 氏が30周年の記念ブログ記事（？）を上げている。\n PGP 30th Anniversary ブログ: PGP誕生30周年  PGP の最初のバージョンがリリースされたのが1991年1 だから，そうか，そうだよな。\nPGP にまつわる話については Steven Levy 原著作の『暗号化』を参照するといいだろう。 つっても絶版みたいなので古本を漁るしかないようだが。 PGP に限らず暗号周りについて勉強したいなら，基礎教養としてこの本を読むことを強くお勧めする。\n私が PGP を使い出したのは1990年代後半で，既に PGP 5.x にリリースされていた。 初期の PGP の問題は，作者が暗号特許について迂闊だったこと，当時の暗号技術はまだ軍事物資として輸出制限がかけられていたことにある。 これらの問題が根本的に解消されるには西暦2000年まで待つ必要があったのだ。\nちなみに PGP 5.x 国際版では，特許に抵触する暗号アルゴリズム（RSA や IDEA など）は実装から外され，書籍の形でリリースされていた（書籍は輸出制限の対象外だった）。 メンテナンス・配布・ビルドの一連は世界中のボランティアが行っていた。 こういう経緯があったので，私は今だに RSA 暗号は使いたくないんだよなぁ。\n現在は PGP の設計コンセプトは OpenPGP に継承され RFC 4880/RFC 5581/RFC 6637 として標準化されている。 また AEAD (Authenticated Encryption with Associated Data) 等をサポートする次期 OpenPGP が RFC 4880bis として検討されている。 実装に関しては，事実上のリファレンス実装である GnuPG 以外にも OpenPGP.js や Rust 製の Sequoia-PGP といったものがある。\nそういや Symantec 社って Broadcom 社 → Accenture 社とたらい回しにされてる感じだが PGP はどうなってるんだろう。\nブックマーク  OpenPGP の実装  参考図書   暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n   PGP―暗号メールと電子署名 シムソン ガーフィンケル (著), Garfinkel,Simson (原著), ユニテック (翻訳) オライリー・ジャパン 1996-04-01 単行本 4900900028 (ASIN), 9784900900028 (EAN), 4900900028 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。\nreviewed by Spiegel on 2014-10-16 (powered by PA-APIv5)\n   暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n   当時の PGP の仕様をまとめたものが RFC 1991 として残されている。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "PDF 版『Goならわかるシステムプログラミング』を買うた",
      "section": "remark",
      "description": "この手の技術解説書は「使う」ものなので PDF 版がありがたい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/06/system-programming-with-go-pdf/",
      "published": "2021-06-08T11:22:47+00:00",
      "update": "2021-06-08T11:24:31+00:00",
      "content": "Twiter で\n Kindleは予定ありませんが、PDFはすでに販売中ですので、ご検討ください https://t.co/8MztMyKH8O https://t.co/kctidIKzpj\n\u0026mdash; keiichiro shikano λ♪ (@golden_lucky) June 8, 2021  という tweet をいただいたので該当ページに行ってみた。\n Goならわかるシステムプログラミング（PDF版のみ） – 技術書出版と販売のラムダノート  ありがたや。 ソッコーで買いましたよ。 ちなみに，紙の本を買ったときの感想はこちら。\nKindle 版は「読む」には申し分ないが，この手の技術解説書は「使う」ものなので，デジタル版なら PDF で欲しいところだよね。 こういう出版社さんがもっと増えればいいねぇ。\n参考図書   Goならわかるシステムプログラミング 渋川 よしき (著), ごっちん (イラスト) ラムダノート 2017-10-23 単行本（ソフトカバー） 4908686033 (ASIN), 9784908686030 (EAN), 4908686033 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  PDF 版あり。ファイルやソケットなどに代表される順次アクセスの汎化である io.Reader / io.Writer およびその派生・特化クラス，またプロセスやスレッドに関する解説が秀逸だと思う。さらに Docker コアの libcontainer についても解説がある。\nreviewed by Spiegel on 2018-10-19 (powered by PA-APIv5)\n "
    },
    {
      "title": "Creative Commons 20周年だったよ #CCTurns20",
      "section": "remark",
      "description": "めでたい！",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/06/creative-commons-is-turning-20/",
      "published": "2021-06-04T12:44:47+00:00",
      "update": "2021-06-04T12:45:00+00:00",
      "content": "yomoyomo さんの\n クリエイティブ・コモンズ設立20周年を祝い、久方ぶりに寄付をした #CCTurns20 - YAMDAS現更新履歴  を見るまで Creative Commons 20周年なのをすっかり忘れていたよ。 つか，20年経つんだねぇ。 最初は盛大に dis られたりしたものだが，まぁ，頑張ってるよね。\nTwitter では #CCTurns20 または #BetterSharing のタグで共有できる。\nところで，職場の人に教えてもらったのだが，最近の Excel ではネット上の画像を検索して貼り付ける機能があるらしい。\n で，画像を検索する際に CC Licenses 画像で絞り込むことができるのだ。\n Excel みたいなプロプライエタリ製品でこういうことができる時代になったんだなぁ，と感慨に耽ってしまったよ（笑） Digital Rights Description としての CC Licenses がちゃんと機能しているということだろう。\nうんうん。\nブックマーク   20 Years: Better Sharing, Brighter Future - Creative Commons\n  We’re Turning 20! What’s Happened Since 2001? - Creative Commons\n  Digital Rights Description としての CC ライセンス — 旧メイン・ブログ | Baldanders.info\n  改訂3版： CC Licenses について\n  参考図書   CODE VERSION 2.0 ローレンス・レッシグ (著), 山形浩生 (翻訳) 翔泳社 2007-12-19 (Release 2016-03-14) Kindle版 B01CYDGUV8 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  前著『CODE』改訂版。\nreviewed by Spiegel on 2018-11-17 (powered by PA-APIv5)\n   オープン化する創造の時代　著作権を拡張するクリエイティブ・コモンズの方法論 (カドカワ・ミニッツブック) ドミニク・チェン (著) ブックウォーカー 2013-06-25 (Release 2013-06-27) Kindle版 B00DI8TMPU (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  手軽に読める。お薦め。\nreviewed by Spiegel on 2014-09-13 (powered by PA-APIv5)\n   もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo (著) 達人出版会 2017-12-25 (Release 2019-03-02) デジタル書籍 infoshare2 (tatsu-zine.com) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  WirelessWire News 連載の書籍化。感想はこちら。祝 Kindle 化！\nreviewed by Spiegel on 2018-12-31\n   フリーカルチャーをつくるためのガイドブック クリエイティブ・コモンズによる創造の循環 ドミニク・チェン (著) フィルムアート社 2012-05-25 単行本 4845911744 (ASIN), 9784845911745 (EAN), 4845911744 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  国内における Free Culture の事例が豊富。取っ掛かりとしてはちょうどよい本。\nreviewed by Spiegel on 2015-05-07 (powered by PA-APIv5)\n   クリエイティブ・コモンズ―デジタル時代の知的財産権 レッシグ,ローレンス (著), 敬士, 椙山 (著), 圭介, 上村 (著), 紘一郎, 林 (著), 絵美, 若槻 (著), 大洋, 土屋 (著), クリエイティブコモンズジャパン (編集), Lessig,Lawrence (原著) NTT出版 2005-03-01 単行本 475710152X (ASIN), 9784757101524 (EAN), 475710152X (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  残念ながら紙の本は実質的に絶版なんですよねぇ。是非デジタル化を希望します。\nreviewed by Spiegel on 2014-08-02 (powered by PA-APIv5)\n "
    },
    {
      "title": "Go 1.16.5 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "4件の脆弱性修正を含んでいる。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/06/go-1_16_5-is-released/",
      "published": "2021-06-04T10:46:27+00:00",
      "update": "2021-06-04T10:46:58+00:00",
      "content": "Go 1.16.5 がリリースされた。\n Go 1.16.5 and Go 1.15.13 are released  今回は4件の脆弱性修正を含んでいる。\ngo1.16.5 (released 2021-06-03) includes security fixes to the archive/zip, math/big, net, and net/http/httputil packages, as well as bug fixes to the linker, the go command, and the net/http package. See the Go 1.16.5 milestone on our issue tracker for details. via Release History - The Go Programming Language  CVE-2021-33198 The SetString and UnmarshalText methods of math/big.Rat may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents. via Go 1.16.5 and Go 1.15.13 are released  CVE-2021-33197 ReverseProxy in net/http/httputil could be made to forward certain hop-by-hop headers, including Connection. In case the target of the ReverseProxy was itself a reverse proxy, this would let an attacker drop arbitrary headers, including those set by the ReverseProxy.Director. via Go 1.16.5 and Go 1.15.13 are released  （以下未稿）\nCVE-2021-33195 The LookupCNAME, LookupSRV, LookupMX, LookupNS, and LookupAddr functions in net, and their respective methods on the Resolver type may return arbitrary values retrieved from DNS which do not follow the established RFC 1035 rules for domain names. If these names are used without further sanitization, for instance unsafely included in HTML, they may allow for injection of unexpected content. Note that LookupTXT may still return arbitrary values that could require sanitization before further use. via Go 1.16.5 and Go 1.15.13 are released  （以下未稿）\nCVE-2021-33196 The NewReader and OpenReader functions in archive/zip can cause a panic or an unrecoverable fatal error when reading an archive that claims to contain a large number of files, regardless of its actual size. via Go 1.16.5 and Go 1.15.13 are released  （以下未稿）\n例によって\u0026hellip; Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.16.5.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。 以下は手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://golang.org/dl/go1.16.5.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.16.5.linux-amd64.tar.gz $ sudo mv go go1.16.5 $ sudo ln -s go1.16.5 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.16.5 linux/amd64 アップデートは計画的に。\n参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-05-21) Kindle版 B094PRR7PZ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "Go による Token Bucket 実装",
      "section": "golang",
      "description": "golang.org/x/time/rate パッケージを使う。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/token-bucket/",
      "published": "2021-06-03T11:44:50+00:00",
      "update": "2021-06-03T11:45:07+00:00",
      "content": "Qiita で\n golang.org/x/time/rate でレイトリミット - Qiita  という記事を見かける。\ngolang.org/x/time/rate は，いわゆる「トークンバケット（token bucket）」アルゴリズムを実装するためのパッケージのようだ。 トークンバケット・アルゴリズムとは\n A token is added to the bucket every $1/r$ seconds. The bucket can hold at the most $b$ tokens. If a token arrives when the bucket is full, it is discarded. When a packet (network layer PDU) of $n$ bytes arrives,  if at least $n$ tokens are in the bucket, $n$ tokens are removed from the bucket, and the packet is sent to the network. if fewer than $n$ tokens are available, no tokens are removed from the bucket, and the packet is considered to be non-conformant.     via Token bucket - Wikipedia  といったものらしい。 具体的には\nfunc NewLimiter(r Limit, b int) *Limiter  via rate · pkg.go.dev  で生成される rate.Limiter 型のインスタンスが上の説明の「バケット」に相当するようだ。 引数の r と b も同じ意味かな。\nこれを並行処理のジェネレータ・パターンと組み合わせると面白そうである。\nというわけで，まずは以下のコードを起点としてみよう。\n// +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;sync\u0026#34; ) func generater(wg *sync.WaitGroup, ch chan\u0026lt;- int) { defer func() { close(ch) wg.Done() }() for i := 0; i \u0026lt; 10; i++ { ch \u0026lt;- i + 1 } } func output(wg *sync.WaitGroup, num int, ch \u0026lt;-chan int) { for n := range ch { fmt.Printf(\u0026#34;Worker %d: %v\\n\u0026#34;, num, n) } wg.Done() } func main() { var wg sync.WaitGroup ch := make(chan int, 1) wg.Add(1) go generater(\u0026amp;wg, ch) for i := 0; i \u0026lt; 2; i++ { wg.Add(1) go output(\u0026amp;wg, i+1, ch) } wg.Wait() } generater() 関数はチャネルに対して 1 から 10 までの値を吐き出す。 output() 関数はチャネルから値を取り出して表示するという簡単なお仕事である。 ただし output() 関数は2つの goroutine で起動している。\nこれを実行すると\n$ go run sample1.go Worker 2: 1 Worker 2: 2 Worker 2: 3 Worker 1: 5 Worker 1: 6 Worker 1: 7 Worker 1: 8 Worker 1: 9 Worker 1: 10 Worker 2: 4 という出力になった。 2つの goroutine は並行に走ってるので出力順は不定となる。\nこのコードに golang.org/x/time/rate パッケージを加えて流量の制御を行う。 こんな感じでどうだろう。\n// +build run  package main import ( \u0026#34;context\u0026#34;  \u0026#34;fmt\u0026#34; \u0026#34;sync\u0026#34;  \u0026#34;time\u0026#34; \u0026#34;golang.org/x/time/rate\u0026#34; ) func generater(wg *sync.WaitGroup, ch chan\u0026lt;- int) { defer func() { close(ch) wg.Done() }() l := rate.NewLimiter(rate.Every(time.Second*2), 1)  for i := 0; i \u0026lt; 10; i++ { if err := l.Wait(context.Background()); err != nil { fmt.Printf(\u0026#34;generater: %v\\n\u0026#34;, err) return }  ch \u0026lt;- i + 1 } } func output(wg *sync.WaitGroup, num int, ch \u0026lt;-chan int) { for n := range ch { fmt.Printf(\u0026#34;Worker %d: %v\\n\u0026#34;, num, n) } wg.Done() } func main() { var wg sync.WaitGroup ch := make(chan int, 1) wg.Add(1) go generater(\u0026amp;wg, ch) for i := 0; i \u0026lt; 2; i++ { wg.Add(1) go output(\u0026amp;wg, i+1, ch) } wg.Wait() } これでサイズ 1 のバケットに２秒毎にトークンが挿入される。 トークを取り出すタイミングでチャネルに値を入れるわけだ。 これを実行すると\n$ go run sample2.go Worker 2: 1 Worker 1: 2 Worker 2: 3 Worker 1: 4 Worker 2: 5 Worker 1: 6 Worker 2: 7 Worker 1: 8 Worker 2: 9 Worker 1: 10 という感じに２秒毎に結果が出力される。\nバケットサイズをプロセッサ数と同数にしてみよう。 こんな感じかな。\n// +build run  package main import ( \u0026#34;context\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;runtime\u0026#34; \u0026#34;sync\u0026#34; \u0026#34;time\u0026#34; \u0026#34;golang.org/x/time/rate\u0026#34; ) func generater(wg *sync.WaitGroup, ch chan\u0026lt;- int, max int) {  defer func() { close(ch) wg.Done() }() l := rate.NewLimiter(rate.Every(time.Second*2), max)  for i := 0; i \u0026lt; 10; i++ { if err := l.Wait(context.Background()); err != nil { fmt.Printf(\u0026#34;generater: %v\\n\u0026#34;, err) return } ch \u0026lt;- i + 1 } } func output(wg *sync.WaitGroup, num int, ch \u0026lt;-chan int) { for n := range ch { fmt.Printf(\u0026#34;Worker %d: %v\\n\u0026#34;, num, n) } wg.Done() } func main() { max := runtime.GOMAXPROCS(0)  var wg sync.WaitGroup ch := make(chan int, max) wg.Add(1) go generater(\u0026amp;wg, ch, max) for i := 0; i \u0026lt; max; i++ {  wg.Add(1) go output(\u0026amp;wg, i+1, ch) } wg.Wait() } これを実行すると（プロセッサ数：4）以下のようになった。\n$ go run sample3.go Worker 3: 3 Worker 3: 4 Worker 2: 2 Worker 4: 1 Worker 1: 5 Worker 3: 6 Worker 2: 7 Worker 4: 8 Worker 1: 9 Worker 3: 10 最初の4つは一気に出力されて，以降は2秒ずつの出力。\nといった感じで，処理の制限をワーカ側ではなくジェネレータ側で行うのが特徴と言えるだろうか。 Web クローラとか使い道は色々あるかもしれない。\n参考図書   Go言語による並行処理 Katherine Cox-Buday (著), 山口 能迪 (翻訳) オライリージャパン 2018-10-26 単行本（ソフトカバー） 4873118468 (ASIN), 9784873118468 (EAN), 4873118468 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Eブック版もある。感想はこちら。 Go 言語で並行処理を書くならこの本は必読書になるだろう。\nreviewed by Spiegel on 2020-01-13 (powered by PA-APIv5)\n   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-05-21) Kindle版 B094PRR7PZ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "2021-05-30 のブックマーク",
      "section": "bookmarks",
      "description": "「QUIC is now RFC 9000」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/05/30-bookmarks/",
      "published": "2021-05-30T00:46:27+00:00",
      "update": "2021-05-30T00:46:53+00:00",
      "content": "リリース情報  Release Windows Terminal v1.8.1444.0 · microsoft/terminal · GitHub  セキュリティ＆プライバシー関連  富士通のプロジェクト情報共有ツール「ProjectWEB」への不正アクセスについてまとめてみた - piyolog マッチングアプリ「Omiai」会員情報管理サーバーへの不正アクセスについてまとめてみた - piyolog  婚活アプリ「Omiai」のネットマーケティングがコーポレートサイト「お問い合わせフォーム」で個人情報を閲覧できる状態になっていたと報告 | TechCrunch Japan   Bluetoothになりすましの脆弱性、多くの製品に影響する可能性 | Think IT（シンクイット） VMware vCenter Serverの複数の脆弱性（CVE-2021-21985、CVE-2021-21986）に関する注意喚起 M1RACLES: M1ssing Register Access Controls Leak EL0 State  Apple M1チップに脆弱性「M1RACLES」発見、Linuxの移植中に見つかる | TECH+    Windows に関する話題  できた！うかつにもしゃべってしまう nyagos が 「Visual Studio 2019」v16.10が正式公開 ～コンパイラーとSTLライブラリがC++20に対応 - 窓の杜 「Windows Terminal Preview 1.9」はWindows既定のターミナルエミュレーターとして動作可能 ～「Quake」モードも追加 - 窓の杜  その他  アドビがマイクロソフトの「Microsoft Teams」に「Adobe Document Cloud」を統合 - 窓の杜 旧「Edge」、「IE11」、wmicコマンド……「Windows 10 バージョン 21H1」で削除・非推奨となる機能たち - 窓の杜 「第4次ガザ戦争」が短期間で停戦に向かった背景：バイデン政権の静かな変化とイスラエルの苦い経験：池内恵 | 池内恵の中東通信 | 新潮社　Foresight(フォーサイト) | 会員制国際情報サイト 半導体不足がさらに深刻化し「危険水域」に突入か、MacやiPadの製造にも影響する可能性も | TechCrunch Japan デジタルの世界は人々を傷つけない - 井出草平の研究ノート どうしてもvimを勉強したくない人のための最低限コマンド集 「Microsoft Build of OpenJDK」が一般公開 ～無償で「Java」の長期サポートを提供 - 窓の杜 田んぼの自動抑草ロボットを開発する有機米デザインが2億円を調達し実用化を加速 | TechCrunch Japan Android IDEの最新版「Android Studio Arctic Fox (2020.3.1)」ベータ公開。Wear OS対応では心拍数のエミュレートが可能に － Publickey PoE+に対応した「Raspberry Pi PoE+ HAT」登場、スイッチサイエンスより税込3180円で近日発売 | TechCrunch Japan Ankerが小型AC充電器の新世代モデル「Nano II」シリーズ発表、USB-C端子1ポート設計で30W・45W・65Wの3種類 | TechCrunch Japan QUIC is now RFC 9000 | Fastly  RFC 9000: QUIC: A UDP-Based Multiplexed and Secure Transport    "
    },
    {
      "title": "CAVOC Web API で遊ぶ",
      "section": "remark",
      "description": "CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/05/cavoc-api-client/",
      "published": "2021-05-29T07:58:27+00:00",
      "update": "2021-05-29T08:00:45+00:00",
      "content": "突然だが「共通農業語彙（Common Agricaulturel VOcabulary; CAVOC）」というサイトがあるのだが，この中に農作物の語彙体系を整理したデータベースがある。\n 農作物語彙体系(CVO, Crop VOcabulary)  この CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。\n spiegel-im-spiegel/gcavoc: Common Agricaulturel Vocabulary API Client by Golang  動作例を挙げると「せろり」の標準名は\n$ gcavoc std せろり {\u0026#34;term\u0026#34;:\u0026#34;セロリ\u0026#34;} てな感じに取得できる。 また，セロリの Wikipedia ページを取得したいなら\n$ gcavoc wikipedia セロリ https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%A2%E3%83%83%E3%82%AF という感じ。 いや，なんで「セルリアック」のページなんだ？\nとまぁ微妙なんだよな。\nたとえば，同じ「セロリ」にしても収穫・出荷する部位によって異なる「農作物」になるのだが Web API ではそこまで細かく制御できない感じ。 元データはオープンデータで公開されているので，真面目にやりたいなら自前で何とかしろってことかもしれない。\n"
    },
    {
      "title": "2021-05-23 のブックマーク",
      "section": "bookmarks",
      "description": "「FragAttacks: Security flaws in all Wi-Fi devices」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/05/23-bookmarks/",
      "published": "2021-05-23T05:24:39+00:00",
      "update": "2021-05-30T00:46:53+00:00",
      "content": "リリース情報  Release v1.40.0 · golangci/golangci-lint · GitHub Release 8.10.1 · mermaid-js/mermaid · GitHub Release 1.57.0 · atom/atom · GitHub Release April 2021 Recovery · microsoft/vscode · GitHub Release 0.18.0 · tinygo-org/tinygo · GitHub Firefox 88.0.1, See All New Features, Updates and Fixes Release April 2021 Recovery 2 · microsoft/vscode · GitHub LibreOffice 7.0.6 has been released - The Document Foundation Blog  「LibreOffice 7.0.6」が公開 ～「LibreOffice 7.0」系のリリースはこれが最後 - 窓の杜   Release v1.40.1 · golangci/golangci-lint · GitHub Release v1.0.21 · sonatype-nexus-community/nancy · GitHub Thunderbird — Release Notes (78.10.2) — Thunderbird Release v0.26.1: Update CI on the stable-v0.26 branch (#2921) · bytecodealliance/wasmtime · GitHub Release v0.27.0: Merge pull request #2924 from cfallin/remove-readme-wasi-tokio · bytecodealliance/wasmtime · GitHub Release 4.4.9_7 · zetamatta/nyagos · GitHub  セキュリティ＆プライバシー関連  EC-CUBEのクロスサイトスクリプティングの脆弱性（CVE-2021-20717）に関する注意喚起 The Coming AI Hackers | Belfer Center for Science and International Affairs ブルース・シュナイアーが予言する「AIがハッカーになり人間社会を攻撃する日」 - YAMDAS現更新履歴 米石油パイプライン企業へのサイバー攻撃についてまとめてみた - piyolog SSH越しでのGitHub操作にセキュリティキーが利用可能に\u0026ndash;2021年中にパスワードを廃止へ - ZDNet Japan Microsoft Releases May 2021 Security Updates | CISA  緊急の脆弱性あり、Windows Updateの適用を - 攻撃での悪用確認 | TECH+   FragAttacks: Security flaws in all Wi-Fi devices  事実上ほぼ全てのWi-Fiデバイスに内在する脆弱性「FragAttacks」が公開される、ユーザー名やパスワードの流出、PCの乗っ取りも可能 - GIGAZINE すべてのWi-Fi製品に影響及ぼす可能性ある脆弱性、再び発見 | TECH+   「お前の自慰姿を撮ったぞ」というメールは無視で（笑） - 電気ウナギ的○○ ワクチン予約システムで話題の「SQLインジェクション」って何？　試すと法律違反？　専門家に聞く - ITmedia NEWS macOS版「LibreOffice」に脆弱性 ～修正版のv7.0.6/7.1.3への更新を - 窓の杜 Ransomware’s Dangerous New Trick Is Double-Encrypting Your Data | WIRED  Double-Encrypting Ransomware - Schneier on Security   Inside Apple’s Compromises in China: A Times Investigation - The New York Times  Apple Censorship and Surveillance in China - Schneier on Security    Linux または Ubuntu に関する話題  Ubuntu 21.04 その25 - Ubuntu 21.04 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb 「Vine Linux」のリリースが終了、国内のLinux普及に大きく貢献 - 窓の杜 Ubuntu 20.10 その98 - Ubuntu 21.04へアップグレードするには・アップグレードの注意事項 - kledgeb  Windows に関する話題  WindowsがまたLinuxを取り込む。マイクロソフト、Linuxカーネルが備える拡張機能「eBPF」互換機能をWindowsにもオープンソースで実装へ － Publickey 「Windows 10 バージョン 2004/20H2」に残された最後の非互換性問題が解決 - 窓の杜 「Windows 10 バージョン 21H1」の一般提供が開始 ～年2回の大規模アップデート - 窓の杜 The future of Internet Explorer on Windows 10 is in Microsoft Edge | Windows Experience Blog  Internet Explorerが2022年6月15日にサポート終了、ただしEdgeのIEモードは2029年までを予定 | TechCrunch Japan 新EdgeでIEモードを有効化: Jacket Blog ブログシステム「WordPress」でも7月の「WordPress 5.8」から「IE 11」対応が終了 - 窓の杜    Go 言語関連  Go公式のlinter、Golintが非推奨になった How do I disable GoLang\u0026rsquo;s auto-formatting on file save in VSCode? - DEV Community 『プログラミング言語Go』のKindle版が出ました：柴田 芳樹 (Yoshiki Shibata)：SSブログ Graceful Shutdowns in Golang with signal.NotifyContext · Taliesin Millhouse Go 1.17(?)で入るFuzzingについて調べるぞ！  その他  我々の脳はコンピュータよりもインターネットに近い？ 脳の働きの新しいパラダイムをもたらす新刊 - YAMDAS現更新履歴 電子だけ売れてるマンガなんてもうないよ｜竹村響　Hibiki Takemura｜note ラズパイを使って、iPadをスワイプするよ git gc の仕組みを原理から理解してサイズを 136MB → 7.2MB(95%減)まで削減した時の勉強メモ Zennで途中からGitHubリポジトリ連携をはじめるときの手順 マイクロソフト、「Azure Blockchain Service」を2021年9月に終了 - ZDNet Japan PDFやWord、Excelファイルを読み込み、レイアウトなどはそのまま内容だけを翻訳。Google Translation APIに新機能 － Publickey マイクロソフト「Teams」、ウェビナー機能の提供を開始 - ZDNet Japan jQuery依存を脱した「Bootstrap 5」正式リリース、IEもついにサポート対象外に。右からの横書き「RTL」など新機能 － Publickey COVID-19 Was \u0026lsquo;A Preventable Disaster,\u0026rsquo; WHO-Ordered Report Says : Coronavirus Updates : NPR  ブログ: COVID-19は「予防可能な災害」だった、WHOが報告書を提出   絵文字をファビコンとして表示する簡単な方法 Notion APIのLimit（リクエスト制限）で気になったことまとめ ブラウザ定規,単位測定ツール,実寸WEB定規（物差し） Excelから発展\u0026ndash;「Power Fx」から見えるローコード開発環境の未来 - ZDNet Japan 私的 goawk リポート - 標準愚痴出力 ワクチン予約接種関連のシステムトラブルについてまとめてみた - piyolog ［速報］Google、新デザインフレームワーク「Material You」発表。デバイスからアプリケーションまでGoogleの製品すべてに適用へ。Google I/O 2021 － Publickey ［速報］Google、目の前に相手が実在するかのような「Project Starline」発表。精細な3Dモデルのリアルタイム伝送と裸眼立体視で、Google I/O 2021 － Publickey GitHub Artifact Exporter open source release | The GitHub Blog ［速報］Google、1エクサフロップを超える性能を持つ「TPU v4」発表、Google史上最高性能のシステム。Google I/O 2021 － Publickey グーグルがRSSを復活させる | TechCrunch Japan : 不要w Introducing Site Isolation in Firefox - Mozilla Security Blog  「Firefox」にも新しいサイト分離アーキテクチャー「Fission」が導入へ - 窓の杜   グーグルのアプリ開発プラットフォーム「Firebase」に多数のアップデート - ZDNet Japan グーグル、クロスプラットフォームフレームワーク「Flutter 2.2」発表 - ZDNet Japan Excelの表をパワポにひたすらコピペするだけのマクロ組んだ まつもと泉先生原作の大ブームを巻き起こした人気作！「きまぐれオレンジ☆ロード」より、鮎川まどか、檜山ひかるをイメージした香水が発売です。２人のヒロインの香りは「Like or Love？」｜フェアリーテイル株式会社のプレスリリース GitHub - go-flutter-desktop/go-flutter: Flutter on Windows, MacOS and Linux - based on Flutter Embedding, Go and GLFW. Microsoft Teamsの個人向け無償提供が正式にスタート。友人や家族とのチャット、ToDoリストの共有、当面は300人24時間まで無料のビデオ会議など提供 － Publickey GitHubが動画のアップロード機能に正式対応。バグの再現手順や機能のデモなどの説明が動画で容易に － Publickey 組み込みで般若心経を扱う際の効率的なメモリ配置方法の検討 Go言語でゲームボーイアドバンスのエミュレータを作った話  "
    },
    {
      "title": "GNKF: NKF ぽいなにか の v0.5.0 をリリースした",
      "section": "release",
      "description": "データのハッシュ値を取得・検証する機能を追加した。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/05/gnkf-v0_5_0-is-released/",
      "published": "2021-05-23T05:11:55+00:00",
      "update": "2021-05-23T05:12:31+00:00",
      "content": "Go 言語における文字列処理の習作 gnkf の v0.5.0 をリリースした。\n Release v0.5.0 · spiegel-im-spiegel/gnkf · GitHub  このバージョンでデータのハッシュ値を取得・検証する機能を追加した。\n$ gnkf hash -h Print or check hash value. Support algorithm: MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256 Usage: gnkf hash [flags] [file] Aliases: hash, h Flags: -a, --algorithm string hash algorithm (default \u0026#34;SHA-256\u0026#34;) -c, --check don\u0026#39;t fail or report status for missing files -h, --help help for hash --ignore-missing don\u0026#39;t fail or report status for missing files (with check option) --quiet don\u0026#39;t print OK for each successfully verified file (with check option) Global Flags: --debug for debug MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, および SHA-512/256 各アルゴリズムに対応している1。 既定のアルゴリズムは SHA-256 で，それ以外を使う場合は\n$ echo Hello World | gnkf h -a md5 e59ff97941044f85df5297e1c302d260 - などとアルゴリズム名を指定する。\nまた，リリースファイルに対して gnkf_0.5.0_checksums.txt のようなハッシュ値の情報があれば， -c オプションを使って\n$ curl -L https://github.com/spiegel-im-spiegel/gnkf/releases/download/v0.5.0/gnkf_0.5.0_checksums.txt -O $ curl -L https://github.com/spiegel-im-spiegel/gnkf/releases/download/v0.5.0/gnkf_0.5.0_Linux_64bit.tar.gz -O $ gnkf h --ignore-missing -c gnkf_0.5.0_checksums.txt gnkf_0.5.0_Linux_64bit.tar.gz: OK WARNING in 9 items: no such file or directory といった感じにダウンロードしたファイルの検証を行うことができる。\nまぁ Linux とかなら sha256sum コマンド等を使えばいいのだけど， Windows 環境で互換性のあるコマンドが見当たらなかったので gnkf に組み込んでみたのだった。 以前に BASE64 符号化のサブコマンドを組み込んだことがあったので，これもありかなと（笑）\n余談だが Go で MD5 や SHA-1 アルゴリズムを使うと gosec に叱られる。 これを回避するには G501 および G505 のワーニングを除外すればよい。\nたとえば\n$ golangci-lint run --enable gosec --exclude \u0026#34;G501|G505\u0026#34; みたいな感じ。\nブックマーク  GNKF: Network Kanji Filter by Golang  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-05-21) Kindle版 B094PRR7PZ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n   SHA-3 は標準パッケージにないので今回は見送った。ちなみに golang.org/x/crypto/sha3 パッケージを使えば SHA-3 アルゴリズムも簡単に組み込める。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "golang.org/x/net/html パッケージの脆弱性報告",
      "section": "release",
      "description": "アップデートは計画的に",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/05/vulnerability-in-go-external-package/",
      "published": "2021-05-22T01:51:21+00:00",
      "update": "2021-05-22T01:54:53+00:00",
      "content": "標準ではないが公式の golang.org/x/net パッケージに脆弱性が見つかったそうで，更新を呼びかけている。\nVersion v0.0.0-20210520170846-37e1c6afe023 of golang.org/x/net fixes a vulnerability in the golang.org/x/net/html package which could cause a denial of service.\nAn attacker can craft an input to ParseFragment that would cause it to enter an infinite loop and never return.\n via Vulnerability in golang.org/x/net/html  CVE-2021-33194 （未稿）\nアップデートは計画的に。\n余談だが 『プログラミング言語Go』の Kindle 版がリリースされたそうだ。\n 『プログラミング言語Go』のKindle版が出ました：柴田 芳樹 (Yoshiki Shibata)：SSブログ  もちろん紙の本も持っているが Kindle 版もソッコーでポチった。 この手の本は使い倒してナンボだと思うので，使いやすいほうでどうぞ。 紙の本を買った当時の感想はこちら。\n参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-05-21) Kindle版 B094PRR7PZ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    }
  ]
}
