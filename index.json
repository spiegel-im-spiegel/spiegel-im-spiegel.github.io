{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "OpenAI API を使って GPT と遊ぶ gpt-cli をリリースした。",
      "section": "release",
      "description": "先日書いたとおり，ちょっと真面目に ChatGPT で遊んでみることにした。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/03/released-gpt-cli/",
      "published": "2023-03-28T11:49:13+00:00",
      "update": "2023-03-28T11:55:26+00:00",
      "content": "OpenAI API で遊びたい 先日書いたとおり，ちょっと真面目に ChatGPT で遊んでみることにした。 んで，とりあえず Web ブラウザでチャットは何かと辛いので，コマンドライン・ツールで近い機能が実装できないかなぁ，と物色してみたら\nsashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go というパッケージを使うのがよさげである。\nというわけで，このパッケージを用いた CLI ツールを作ってみた。\ngoark/gpt-cli: CLI tool for GPT with OpenAI API ぶっちゃけ，この手のツールはみんな思いつくようで， Go 製のものだけでもそこそこ見かける。 でも，まぁ，こういうのは実際にコードを書いて動かしてみないと理解できなかったりするからねぇ。 N番煎じはご容赦を。\n拙作の場合はこんな感じ。\n$ gpt-cli -h CLI tool for GPT with OpenAI API. Usage: gpt-cli [flags] gpt-cli [command] Available Commands: chat Chat with GPT-x help Help about any command version Print the version number Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug -h, --help help for gpt-cli --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) Use \u0026#34;gpt-cli [command] --help\u0026#34; for more information about a command. 今のところはチャット機能しかないが， sashabaranov/go-openai を使えば，いま話題沸騰（笑）の GPT-4 や DALL·E, Whisper あたりもハンドリングできるみたいなので，そのうち挑戦してみたいと思っている。 ちなみに GPT-4 は申請中だが，しばらく順番は回ってこないだろうな。\nOpenAI API Key を取得する 拙作を動かす場合は OpenAI API Key を取得する必要がある。 取得方法は適当にググってください。 OpenAI のアカウントを取ると，最初は無料だけど，無料枠を使い切ると有料（従量制）になるのでご注意を。\nで， OpenAI API Key はコマンドラインで指定することもできるけど，設定ファイルに記述しておくことができる。 規定ファイルは $XDG_CONFIG_HOME/gpt-cli/config.yaml。 中身は YAML 形式で，こんな感じに記述できる。\napi-key: your_api_key_string Linux の場合は， $XDG_CONFIG_HOME は $HOME/.config/ ディレクトリに割り当てられていることが多い。 Windows だと %AppData% フォルダ， macOS (Darwin) だと $HOME/Library/Application/ フォルダになる。 コマンドラインの --config オプションで設定ファイルを指定することもできる。\nGPT とチャットする $ gpt-cli chat -h Chat with GPT-x, input from standard input. Usage: gpt-cli chat [flags] gpt-cli chat [command] Aliases: chat, c Available Commands: history Print chat history interactive Interactive mode Flags: -a, --attach-file strings Path of attach files (text file only) -c, --clipboard Input message from clipboard -h, --help help for chat -m, --message string Chat message -p, --prepare-file string Path of prepare file (JSON format) -f, --save-file string Path of save file (JSON format) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) Use \u0026#34;gpt-cli chat [command] --help\u0026#34; for more information about a command. いちばん簡単な使い方は以下の通り（OpenAI API Key は設定ファイルに記述済みとする）。\n$ gpt-cli c -m \u0026#34;hello\u0026#34; Hello! How can I help you today? save to /home/username/.cache/gpt-cli/chat.2133582955.json OpenAI API を使って “hello” と投げると “Hello! How can I help you today?” と返ってきた。 最後に，やり取りの記録を $XDG_CACHE_HOME/gpt-cli/chat.*.json ファイル1 に格納して終了（保存先は --save-file または -f オプションで指定できる）。 そして，次に起動するときは --prepare-file または -p オプションで記録を格納したファイルを指定すれば続きから始められる。\n--prepare-file オプションを使うことで初期状態をある程度いじることができる。 --prepare-file オプションで指定するファイルは JSON 形式で，たとえば\n{ \u0026#34;model\u0026#34;: \u0026#34;gpt-3.5-turbo-0301\u0026#34;, \u0026#34;max_tokens\u0026#34;: 256, \u0026#34;temperature\u0026#34;: 0.7, \u0026#34;messages\u0026#34;: [ { \u0026#34;role\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;これからプログラムのコードを渡すので，質問に答えてください。\u0026#34; } ] } などと記述しておいて，これを --prepare-file オプションで読み込ませて初期状態にできる。\nチャットにファイルを添付する --attach-file または -a オプションを使ってファイルを添付して評価してもらうこともできる。 こんな感じ。\n$ cat sample/hello.go package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, world.\u0026#34;) } $ gpt-cli c -a sample/hello.go -m \u0026#34;Summarize the source code below.\u0026#34; The source code is a basic program in the Go programming language that prints the text \u0026#34;Hello, world.\u0026#34; to the console. It includes the standard library package \u0026#34;fmt\u0026#34; and a main function that utilizes the \u0026#34;Println\u0026#34; function from the \u0026#34;fmt\u0026#34; package. save to /home/username/.cache/gpt-cli/chat.3658387869.json --attach-file オプションを複数使って複数のファイルを指定することが可能。 また *.go みたいなワイルドカード指定もできる（bash 上などではファイル名が勝手に展開されてしまうので \u0026quot;*.go\u0026quot; のように引用符で囲むとよい）。\nクリップボードの内容をメッセージとして送信する --clipboard または -c オプションを指定することでクリップボードの内容をメッセージとして送信できる。\nたとえば上述の sample/hello.go の内容をクリップボードにコピーした上で\n$ gpt-cli c -c -m \u0026#34;次のコードを要約してください。\u0026#34; このコードは、mainパッケージをインポートし、\u0026#34;Hello, world.\u0026#34;という文字列を出力するプログラムです。 save to /home/username/.cache/gpt-cli/chat.2878035472.json などとできる。 送信の順番は --message オプションで指定した文字列 → クリップボードの内容 → 添付ファイル の順に送信される。\n対話モード $ gpt-cli chat interactive -h Interactive mode in chat. Usage: gpt-cli chat interactive [flags] Aliases: interactive, i Flags: -h, --help help for interactive -p, --profile string Path of profile file (JSON format) -f, --save-file string Path of save file (JSON format) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) こんな感じに使える。\n$ gpt-cli c i Input \u0026#39;q\u0026#39; or \u0026#39;quit\u0026#39; to stop Chat\u0026gt; こんにちは こんにちは！私はAIのアシスタントです。何かお手伝いできることがありますか？ Chat\u0026gt; 科学雑誌の日経サイエンスにChatGPTの特集が載るそうです。どんな内容になるか予想してみましょう。 ChatGPTとは、人工知能による自然言語処理を利用した対話型のチャットボットです。日経サイエンスがChatGPTに特集を組むことから、以下のような予想が考えられます。 1. ChatGPTの機能や特徴の紹介 ChatGPTの性能、動作原理などの詳しい解説や、どのような機能があるのか、どのような場面で活躍するのかなどが紹介される可能性があります。 2. ChatGPTの応用例の紹介 ChatGPTが活用される応用例として、カスタマーサポート、医療支援、人工知能アシスタントなどがあります。特集では、ChatGPTがどのようにこれらの分野で活躍しているのか、具体例を交えて解説されるかもしれません。 3. ChatGPTの進化と今後の展望について ChatGPTは、自然言語処理分野での革新的な技術であり、今後、ますます進化していくことが期待されています。特集では、今後どのような改良がされ、また、普及の度合いがどこまで広がるのか、その展望についても取り上げられるかもしれません。 Chat\u0026gt; ありがとうございます。雑誌を読むのが楽しみです どういたしまして。日経サイエンスは、科学技術に関する話題や最新の研究成果などが掲載され、とても興味深く読める雑誌ですね。ChatGPTに特集が組まれるということで、ますます注目が集まりそうですね。楽しみにしていてください。 Chat\u0026gt; q save to /home/username/.cache/gpt-cli/chat.2788390222.json 入力は1行のみ可（複数行編集の実装は保留中）。 ファイルの添付とかもできない。 本当に文章で対話するだけ（笑）\nチャット履歴を表示 $ gpt-cli chat history -h Print chat history. Usage: gpt-cli chat history [flags] Aliases: history, hist, h Flags: -a, --assistant-name string Assistant name (display name) -h, --help help for history -f, --history-file string Path of history file (JSON format) -u, --user-name string User name (display name) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) 最後に出力される記録ファイルを読み込んで markdown 風のテキストに整形して出力できる。 オマケ機能。 こんな感じ。\n$ gpt-cli c h -u Spiegel -a ChatGPT -f /home/username/.cache/gpt-cli/chat.2133582955.json # Chat with GPT - `model`: gpt-3.5-turbo-0301 ## Spiegel hello ## ChatGPT Hello! How can I help you today? ChatGPT とのやりとりを Gist に上げたりしてるんだけど，手動で整形するのが面倒くさくて（笑）\nよっしゃ，今日はこれぐらいにしといたるわ というわけで，今回はこのへんで。 しばらく遊んでみて，必要なら機能を足すかも知れん。 こうやって，ツールがカオスになっていくんだねぇ（笑）\nブックマーク ChatGPTに回答の参考文献を提示させるには - ZDNET Japan ChatGPTのプロンプトをLispで書く ChatGPTで開発効率アップ！askiを使ったCLIコードレビュー＆バグ特定 - Qiita TOP 3 open-source AI to code like a PRO 🧠 🤖 - DEV Community go-readline-ny でマルチライン編集 - 標準愚痴出力 参考図書 日経サイエンス2023年5月号（特集：対話するAI　ChatGPT） 日経サイエンス編集部 (編集) 日経サイエンス 2023-03-25 (Release 2023-03-25) 雑誌 B0BXQ2HMQ5 (ASIN), 4910071150534 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 特集記事が「話す AI 描く AI」ということで，いわゆる Generative AI に関する内容。大規模言語モデル（LLM）の解説も載っている。圏論の記事もあるよ。\nreviewed by Spiegel on 2023-03-28 (powered by PA-APIv5)\nプログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\nデベロッパーゴースーパーゴラン Tシャツ Geek Go Super Golang Tees ウェア\u0026amp;シューズ B09C2XBC2F (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついカッとなってポチった。反省はしない\nreviewed by Spiegel on 2022-04-10 (powered by PA-APIv5)\nLinux では $XDG_CACHE_HOME は $HOME/.cache/ ディレクトリに割り当てられていることが多い。 Windows だと %LocalAppData% フォルダ， macOS (Darwin) だと $HOME/Library/Caches/ フォルダになる。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "ソフトウェア部品表（SBOM）を生成するツール",
      "section": "remark",
      "description": "Go 以外のエコシステムでも使える。 grype と組み合わせて脆弱性のチェックも可能，らいい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/cli-tool-for-generating-sbom/",
      "published": "2023-03-26T07:07:29+00:00",
      "update": "2023-03-26T07:07:35+00:00",
      "content": "Go コードのビルドとリリースを一度にやってくれる GoReleaser というツールがあるのだが，これの最近のバージョンはソフトウェア部品表（Software Bill of Materials; SBOM）も生成・リリースできるらしい。 というわけで，自作ツールでちょっと試してみた。\n設定自体は難しくなく .goreleaser.yaml ファイルに以下の記述を追加すればいいだけのようだ。\nsboms: - artifacts: archive 早速この記述を追加して手元で動かしてみたのだが\u0026hellip;\n• cataloging artifacts • cataloging artifact=dist/ml_SNAPSHOT-a83f2d0b1db0ade89d839cd70b6870cd90011f55_Windows_ARM64.zip cmd=syft sboms=ml_SNAPSHOT-a83f2d0b1db0ade89d839cd70b6870cd90011f55_Windows_ARM64.zip.sbom ⨯ release failed after 1s error=cataloging artifacts: syft failed: exec: \u0026#34;syft\u0026#34;: executable file not found in $PATH: ふむむ？ syft がないって言ってるのか？ 調べてみたら syft というのはこれのことらしい。\nanchore/syft: CLI tool and library for generating a Software Bill of Materials from container images and filesystems GoReleaser は内部で syft を起動して SBOM を生成しているようだ。 SBOM を生成するための設定を .goreleaser.yaml ファイルに記述する際の詳細情報は以下のページが参考になる。\nCataloging artifacts - GoReleaser つか，最初からマニュアルを読めっての！＞自分\nGitHub Actions の goreleaser-action を使って SBOM を含むリリースを行う場合は，自前で syft をインストールする必要がある。 とはいえ goreleaser-action を使うなら Go のコンパイラは事前に導入されているはずなので，簡単に\nname: build on: push: tags: - v* permissions: contents: write jobs: goreleaser: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v3 with: fetch-depth: 0 - name: Set up Go uses: actions/setup-go@v3 with: go-version-file: \u0026#39;go.mod\u0026#39; - name: install syft run: go install github.com/anchore/syft/cmd/syft@latest - name: Run GoReleaser uses: goreleaser/goreleaser-action@v4 with: # either \u0026#39;goreleaser\u0026#39; (default) or \u0026#39;goreleaser-pro\u0026#39; distribution: goreleaser version: latest args: release --clean env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Your GoReleaser Pro key, if you are using the \u0026#39;goreleaser-pro\u0026#39; distribution # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }} といった感じに go install コマンドでインストールしてしまっても問題なく行けるっぽい。 でも，これをすると SBOM に syft のバージョンが入らなくなるんだよなぁ。 sbom-action と組み合わせればいいのだろうか。 要検証だな。\nsyft は Go 製だが Go エコシステム専用というわけではなく，以下のものに対応しているらしい。\nAlpine (apk) C (conan) C++ (conan) Dart (pubs) Debian (dpkg) Dotnet (deps.json) Objective-C (cocoapods) Elixir (mix) Erlang (rebar3) Go (go.mod, Go binaries) Haskell (cabal, stack) Java (jar, ear, war, par, sar, native-image) JavaScript (npm, yarn) Jenkins Plugins (jpi, hpi) PHP (composer) Python (wheel, egg, poetry, requirements.txt) Red Hat (rpm) Ruby (gem) Rust (cargo.lock) Swift (cocoapods) via syft/README.md at main · anchore/syft んー。 メジャーどころは網羅してる感じ？\n他にも grype と組み合わせることで脆弱性のチェックとかもできるし，その結果を証明書として作成して発行することもできるそうな。 私が公開しているような小物パッケージではそこまで不要だろうが，企業とかが運用している，それなりに規模の大きなプロジェクトでは重宝するかもしれない。\n覚えておこう。\nブックマーク 米国の国家サイバーセキュリティ戦略とインフラとしてのオープンソース – WirelessWire News\nGo はどのようにしてサプライチェーン攻撃を低減しているか\nオープンソース製品とソフトウェア部品表\n参考図書 セキュリティはなぜやぶられたのか ブルース・シュナイアー (著), 井口 耕二 (翻訳) 日経BP 2007-02-15 単行本 4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 原書のタイトルが “Beyond Fear: Thinking Sensibly About Security in an Uncertain World” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。\nreviewed by Spiegel on 2019-02-11 (powered by PA-APIv5)\nプログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\nデベロッパーゴースーパーゴラン Tシャツ Geek Go Super Golang Tees ウェア\u0026amp;シューズ B09C2XBC2F (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついカッとなってポチった。反省はしない\nreviewed by Spiegel on 2022-04-10 (powered by PA-APIv5)\n"
    },
    {
      "title": "2023-03-26 のブックマーク",
      "section": "bookmarks",
      "description": "「米国の国家サイバーセキュリティ戦略とインフラとしてのオープンソース」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2023/03/26-bookmarks/",
      "published": "2023-03-26T01:04:32+00:00",
      "update": "2023-03-26T01:04:39+00:00",
      "content": "リリース情報 Release v1.52.0 · golangci/golangci-lint · GitHub Release v1.52.1 · golangci/golangci-lint · GitHub Release v7.0.0: Release Wasmtime 7.0.0 (#6065) · bytecodealliance/wasmtime · GitHub Release v1.16.2 · goreleaser/goreleaser · GitHub 「Firefox 111.0.1」が公開 ～フリーズやクラッシュの問題に対処 - 窓の杜 Release 1.38.2 · tailscale/tailscale · GitHub Release v1.5.5 · sashabaranov/go-openai · GitHub Release v1.5.6 · sashabaranov/go-openai · GitHub Release v1.5.7 · sashabaranov/go-openai · GitHub Release v1.2023.5 · plantuml/plantuml · GitHub Release v0.8.4 · nyaosorg/go-readline-ny · GitHub セキュリティ＆プライバシー関連 Tell the UK’s House of Lords: Protect End-to-End Encryption in the Online Safety Bill | Electronic Frontier Foundation Privacy Violations Shutdown OpenAI ChatGPT and Beg Investigation | flyingpenguin ChatGPT Privacy Flaw - Schneier on Security 米国の国家サイバーセキュリティ戦略とインフラとしてのオープンソース – WirelessWire News WirelessWire News連載更新（米国の国家サイバーセキュリティ戦略とインフラとしてのオープンソース） - YAMDAS現更新履歴 米国政府によるTiktok禁止、何が問題なのか | p2ptk[.]org We updated our RSA SSH host key | The GitHub Blog GitHub の ssh ホスト鍵がアップデートされとるがな！ : 自分用作業メモ ChatGPT情報流出　支払い関連情報など - 週刊アスキー 知財関連 Qualcommの音声コーデック「aptX」と「aptX HD」がオープンソース化 - GIGAZINE : Apache 2.0 ライセンスに 著作権は必要不可欠だった、でもこれからもそう？ | p2ptk[.]org Battle for Libraries Linux または Ubuntu に関する話題 Linux その143 - Snap版Steamの安定版のリリースに向け、ゲームテストの呼びかけ - kledgeb Ubuntu 18.04 その467 - サポート期間の終了が迫る・アップグレードの検討を - kledgeb Unixを開発したケン・トンプソン氏がMacからLinuxへ移行した事を発表 | ソフトアンテナ : 厳密にはラズパイが使いたかったから，かな？ Ubuntu 20.04 その251 - Ubuntu 20.04.6 LTSがリリースされました・ディスクイメージのダウンロード - kledgeb Ubuntu 23.04 その16 - Linux kernel 6.2の採用 - kledgeb Ubuntu 23.04 その17 - Ubuntuフォントファミリーのアップデートとテストの呼びかけ - kledgeb Azure や Windows に関する話題 Windows 10に2023年3月Cリリース ～USBプリンターがマルチメディアデバイスと誤認識される問題などを解決 - 窓の杜 UIカスタムアプリで「Windows 11 バージョン 22H2」が起動不能になる既知の問題は解決 - 窓の杜 Microsoftが「Windows回復環境」（WinRE）の脆弱性に対処するスクリプトを公開 - 窓の杜 Microsoft、Windows 11で「SHA-3」をサポートへ ～次世代ハッシュ関数の標準規格 - 窓の杜 Go 言語関連 GitHub - mattn/goreman: foreman clone written in go language The power of single-method interfaces in Go - Eli Bendersky\u0026rsquo;s website cat コマンド代替の Go 製 CLI 「gat」の紹介 Release v0.7.0 · koki-develop/gat · GitHub GitHub - sashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go Go + Flutter でモバイルアプリを開発しリリースした話 - 天才性の証明 goのパッケージ間の依存を定量化するツールを作った話 Planning Go 1.21 Cryptography Work Announcing Atlas v0.10: Cloud Community Preview | Atlas | Open-source database schema management tool go-readline-ny でマルチライン編集 - 標準愚痴出力 その後 GitHub - hymkor/go-multiline-ny: Readline package supporting multi-lines がリリース GitHub - cockroachdb/errors: Go error library with error portability over the network Java 言語関連 Release GraalVM CE 23.0.0-dev-20230321_0741 · graalvm/graalvm-ce-dev-builds · GitHub Release v2.7.10 · spring-projects/spring-boot · GitHub Release v3.0.5 · spring-projects/spring-boot · GitHub 天文関連 MIT Tech Review: 中性子による半導体ソフトエラー率を測定、宇宙線対策に＝NTTなど\n冷却型としては超低消費電力なマイクロ波増幅器の実証に成功 ―電波望遠鏡の受信機から量子コンピュータへの応用に向けて― | 国立天文台(NAOJ)\n機械学習で読み解く化石星からのメッセージ―宇宙で最初に生まれた星は孤独ではなかった― | 国立天文台(NAOJ)\nSearching for life with space dust | The University of Tokyo\nAPOD: 2023 March 24 - Outbound Comet ZTF\nGenerative AI グーグル、AIチャットボット「Bard」を公開\u0026ndash;まず米国と英国で - ZDNET Japan ChatGPTは労働者の敵か味方か？人間の仕事への影響に関する研究結果 | WIRED.jp OpenAIの共同設立者が「私たちは間違っていた」と語る、AIの危険性からデータをオープンにしない方針へと大転換 - GIGAZINE : Open にすべきじゃなかった，という後悔らしい GPT-4 Demo Turns a Crude Sketch of a \u0026ldquo;My Joke Website\u0026rdquo; into a Functional Website for Revealing Jokes - CodePen Blog GPT-4はどのようにして「不適切な回答」を回避するように学習されているのか - Qiita ChatGPTで開発効率アップ！askiを使ったCLIコードレビュー＆バグ特定 - Qiita 画像生成AI「Midjourney V5」を利用して偽の「トランプ前大統領が逮捕された」画像を生成した人物が利用禁止処分を受ける - GIGAZINE 「Microsoft Loop」は生成AIも統合 ～先行する「Notion AI」を追いかける - 窓の杜 OpenAI connects ChatGPT to the internet | TechCrunch ChatGPT: Everything you need to know about the AI-powered chatbot GitHub Copilot X: The AI-powered developer experience | The GitHub Blog GitHub Copilot X：AIを搭載した開発者体験 - GitHubブログ ［速報］「GitHub Copilot X」発表、GPT-4ベースで大幅強化。AIにバグの調査依頼と修正案を指示、ドキュメントを学習し回答も － Publickey 「GitHub Copilot X」が発表 ～AIの力をデバッグやプルリク、ドキュメント整備などにも - 窓の杜 TOP 3 open-source AI to code like a PRO 🧠 🤖 - DEV Community The Coming of Local LLMs - Nick Arner Can AI generate a way to pay for itself? - The Verge その他 GitLabがCLIプロジェクトを採用し、ターミナルにGitLabを導入 What to know about the end of Docker Free Teams | Docker Announcing Polyglot Notebooks! Multi-language notebooks in Visual Studio Code - .NET Blog VSCodeの拡張機能としてJupyter NotebookをベースにJavaScript/Mermaid/SQLなど多言語対応にした「Polyglot Notebooks」が正式リリース － Publickey テクノロジーが農業を変革する、AIによる実証実験など最新動向 - ZDNET Japan 「curl」がv8.0.0に ～開発開始から25年の節目を迎えたメジャーアップデート - 窓の杜 The Official Thunderbird Podcast Is Here! AIはどんな政治的見解を持っているのか？ - YAMDAS現更新履歴 オードリー・タンとグレン・ワイルが『Plurality: 協働可能な多様性と民主主義のためのテクノロジー』という本を共著している - YAMDAS現更新履歴 アンドキュメンテッド ちょうぜつソフトウェア 設計入門 「オブジェクト指向に定義はない」のか？ - Speaker Deck "
    },
    {
      "title": "お花見 2023",
      "section": "remark",
      "description": "松江城では 2023-03-25 から「お城まつり」が開催されている。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/sakura-blossoms-2023/",
      "published": "2023-03-25T11:56:51+00:00",
      "update": "2023-03-25T12:21:16+00:00",
      "content": "今日は午後から晴れるとの予報だったので，午前中に用事を済ませることにした。\n移動中にちょろんと覗いた某ホームセンターには「季節のコーナー」というのがあって，冬場は暖房器具などが並んでいたのだが\nホームセンターの季節コーナー | Flickr 流石田舎。 除草剤が山と並んでたよ。 除草剤で季節を感じるとは思わなかった（笑）\nその後，学園通りに向かい，予定通りに用事を済ませたところで，丁度お昼。 学園通りまで出たので，久しぶりに天一へ行く。\n腹へりンコフニコフ | Flickr 最近やたらとお腹が空くんだけど。 仕事のストレスだろうか。 順調にダイエットできてるので，ここが我慢のしどころである（我慢しとらんがな）。\n天一のある辺りに朝酌川 (あさくみがわ) というのがあるのだが，そこが桜並木になってる。 ちょっと見物してこよう。\nSAKURA blossoms | Flickr SAKURA blossoms | Flickr 見た目の印象としては五分咲きから七分咲きといったところか。\nひととおり堪能したので，今日の本命，松江城に行ってみようか。 松江城では今日 2023-03-25 から「お城まつり」が開催されている。\n松江城 お城まつり | Flickr 松江城 お城まつり | Flickr 見た目の印象としては，やはり五分咲きから七分咲きといったところか。 でも木によってはもう満開に近いんだよね。\nSAKURA blossoms in Matsue castle | Flickr 来週，勤務先でお花見やるとか言っているが，大丈夫かなぁ\u0026hellip; というわけで，今日のお花見は終了。 ちなみに，今日も松江城から大山は見えませんでした。 花霞ってやつ？（違う）\n図書館に行く暇がなかった orz\n"
    },
    {
      "title": "Java 20 がリリースされた",
      "section": "release",
      "description": "2023-09 までの短期サポート・バージョン",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/03/java-20-is-released/",
      "published": "2023-03-22T09:56:43+00:00",
      "update": "2023-03-26T01:04:39+00:00",
      "content": "予定通り Java 20 がリリースされた。 2023-03 までの短期サポート・バージョンである。\nOpenJDK JDK 20 GA Release JDK 20 JDK 20 Release Notes 主な内容は以下の通り。\n429: Scoped Values (Incubator) 432: Record Patterns (Second Preview) 433: Pattern Matching for switch (Fourth Preview) 434: Foreign Function \u0026amp; Memory API (Second Preview) 436: Virtual Threads (Second Preview) 437: Structured Concurrency (Second Incubator) 438: Vector API (Fifth Incubator) via JDK 20 OpenJDK を APT で管理するメリットはないので，実行バイナリをリリースページから直接ダウンロードして配置する。 以下は完全手動でのインストール（笑）\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://download.java.net/java/GA/jdk20/bdc68b4b9cbc4ebcb30745c85038d91d/36/GPL/openjdk-20_linux-x64_bin.tar.gz\u0026#34; -O $ cd .. $ sudo unlink java # 以前のバージョンの Java 環境がある場合 $ sudo tar xvf src/openjdk-20_linux-x64_bin.tar.gz $ sudo ln -s jdk-20 java $ java -version # すでに PATH が通っている場合 openjdk version \u0026#34;20\u0026#34; 2023-03-21 OpenJDK Runtime Environment (build 20+36-2344) OpenJDK 64-Bit Server VM (build 20+36-2344, mixed mode, sharing) LTS 版 Java バイナリが欲しいなら Adoptium で取得できる。\n私としては PlantUML が動けばいいので，試しておく1。\nFactory Method Pattern よーし，うむうむ，よーし。\nOracle Java のサポート期間 “Oracle Java SE Support Roadmap” より。\nRelease GA Date Premier Support Extended Support 11 (LTS) 2018-09 2023-09 2026-09 17 (LTS) 2021-09 2026-09 2029-09 19 2022-09 2023-03 - 20 2023-03 2023-09 - 21 (LTS) 2023-09 2028-09 2031-09 2023-03 時点で Premier Support が終了しているものは除いている。 Java 8 については Adoptium などで最新バイナリを取得可能。\nブックマーク 「Java 20」正式リリース。スレッド間で共有できるScoped Values、複数スレッド処理をまとめるStructured Concurrencyなど新機能 － Publickey Oracle、「Java 20」を発表 ～変数のスレッド共有を簡潔・高速にする「Scoped Values」を追加 - 窓の杜 Release GraalVM CE 23.0.0-dev-20230321_0741 · graalvm/graalvm-ce-dev-builds · GitHub 参考図書 Spring Data JPAプログラミング入門 溝口賢司 (著) 秀和システム 2017-08-03 (Release 2018-04-23) Kindle版 B07CKHR8C1 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; JPA のお勉強用に購入。紙のほうはプレミアが付いてるっぽいが Kindle で買えるよ。固定レイアウトだからブラウザの Kindle Cloud Reader で読めるし。真面目に基本を押さえて書いていて分かりやすい。\nreviewed by Spiegel on 2021-08-26 (powered by PA-APIv5)\nEffective Java 第3版 Joshua Bloch (著), 柴田 芳樹 (翻訳) 丸善出版 2018-10-30 単行本（ソフトカバー） 4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。\nreviewed by Spiegel on 2021-03-17 (powered by PA-APIv5)\nSpring Boot 2 入門: 基礎から実演まで 原田 けいと (著), 竹田 甘地 (著), Robert Segawa (著) 2020-05-22 (Release 2020-05-22) Kindle版 B0893LQ5KY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Spring Boot を勉強することになって急遽買った本。めっさ分かりやすかった。 PDF 版が欲しいくらい（笑） Spring Boot 2.7 対応にアップデートされていた。素敵！\nreviewed by Spiegel on 2022-08-14 (powered by PA-APIv5)\nf --\u003e 2023-03-09 に PlantUML 1.2023.4 がリリースされている。 PlantUML の使い方等については拙文「真面目に PlantUML」シリーズを参考にどうぞ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "ChatGPT という壁打ち",
      "section": "remark",
      "description": "改めて OpenAI にアカウントを作った",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/practice-on-the-wall/",
      "published": "2023-03-19T12:43:57+00:00",
      "update": "2023-03-28T11:50:11+00:00",
      "content": "先日から『はじめて学ぶ ビデオゲームの心理学』という本をちょっとずつ読み始めている。 この本の感想はいずれ書くとして，この本に\nビデオゲームをはじめ各種のゲームは、ツールでないという点で、ほかの製品と少し違います。ビデオゲームは外部の目標に向かってプレイするものではなく、プレイ自体が目的になる、自己目的的な活動です。私たちはゲームを通じてシステムに働きかけ、その反応を楽しみます。 『はじめて学ぶ ビデオゲームの心理学』p.39より と書かれているのを見て，その前に見た\nおもちゃが手に入ったときの草の根活動は日本最強だと思うんですよね。事業化するのがとにかく下手 https://t.co/d43QS8F4h7\n\u0026mdash; odashi (@odashi_t) March 10, 2023 という tweet を思い出した。\nもの凄い個人的な意見を言わせていただければ AI でプログラマが失業するかもしれないなんて話は完全に想定内なのよ。 つい40年前には「キーパンチャー」とか「コーダー」とかいう（今は絶滅した）職業が存在してたんだぜ。 プログラマみたいな（頭脳）労働集約的な職業が近い将来なくなったとしても全く不思議ではないだろう。\nたとえば「Linux のメンテナを AI に一任することになりました」とか「Eマスク氏が AI を使って Twitter を自分好みに全面改修しました」みたいな話が起きれば本格的に（職業をかわるという意味での）転職を考えないといけなくなるだろうが，たかだか学部生の宿題レベルが解ける程度なら，鼻の先は驚異でも脅威でもない（日進月歩という意味では凄いと思うけど）。\n話が逸れた。 逸れたついでに\u0026hellip;\n恥ずかしながら中学時代はテニス部だったのだが1，運動神経が壊滅してる私は「壁打ち」で練習することが多かった。 「壁打ち」って奥が深いよね。 どの方向にどういう強さ打って，球にどう回転を加えれば，思い通りの球が返ってくるか。 まさに物理学だよね。\n私の中で ChatGPT は何となく「壁打ち」なイメージなんだよなぁ。 インプットに対するアウトプットを見ながら次のインプットを調整していく。 フィードバックを行うのは機械（＝壁）じゃなくて人間のほうだよね。\nというような思いつきを Mastodon に投稿したら\nというリアクションをいただいた。 ありがたや。\n結城浩さんといえば最近\nChatGPT と結城浩の対話（矛盾や反復を含んだ対話によってAIと人間の識別は行えるか） · GitHub というのを公開されていて，これは凄いと思った。 対話というのはお互いの間で「文脈（context）」を生成・共有する必要があるが，パッと見た限りでは両者の間に「文脈」があるように見える。 もっとも ChatGPT については\nChatGPTと会話していると、記憶力があるように錯覚するけれど、APIで使う人はわかるように、記憶はなく（ステートレスで）、今までの会話の全記録（ただし長さ制限あり）と新しい質問を入力して、新しい回答を生成するだけ。密かに悪巧みを考えることもできない（SFに出てくるAGIではない）\n\u0026mdash; Haruhiko Okumura (@h_okumura) March 19, 2023 なんだそうで，そうなると少なくとも ChatGPT 側は「文脈」と言えるものを持ってないことになる？\n「ゲーム」の面白さのひとつは，「ゲーム」というブラックボックスに対して何某かの入力を行いそれに対する反応をフィードバックして次の入力を行う，という繰り返しで対象への「理解」を深めることにあり，それ自体が目的化している点にあると思う。\n何だかよく分からないものを理解していくというプロセスは，自身の「『有能さ』への欲求」を満たす行為であり，まさに「ゲーム」に対する内発的動機になり得るものだ。\nであるなら ChatGPT も「仕事に使えるか？」とか要らないことは考えずに，純粋に「ゲーム」だと思えば楽しく遊べるのではないか，と考えを切り替えることにした。 競馬の予想屋と大して変わらないなんちゃらアナリストの発言に右往左往するのはもう止めよう。\nというわけで，改めて（Google アカウントではない）アカウントを作ってみた。 Subscription で決済が発生するのなら Google アカウントは使いたくなかったので。 まずは無料枠分で「壁打ち」するところから始めようか（笑）\n年齢に関わらず、遊びは私たちの精神を鋭敏に保つために重要です。 [\u0026hellip;] 遊ぶことは学ぶことです。 『はじめて学ぶ ビデオゲームの心理学』p.71より ブックマーク ChatGPT — Release Notes | OpenAI Help Center ChatGPTをVSCodeで利用するための設定方法 - Qiita ChatGPTのVSCodeプラグインが神すぎる件について これらで紹介されている拡張機能は，規約違反がどうのとかで，後悔を取りやめたらしい。まぁ Chromium がインストールされている必要があるみたいなので，どっちみち使わんと思うが ChatGPTのAPIをGolangで実装する - Qiita VisualStudio CodeとGoogle Apps ScriptでChatGPT(gpt-3.5-turbo)をより安全快適に使う ChatGPTに回答の参考文献を提示させるには - ZDNET Japan OpenAI API GitHub - sashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go ChatGPTのプロンプトをLispで書く GPT-4はどのようにして「不適切な回答」を回避するように学習されているのか - Qiita ChatGPTで開発効率アップ！askiを使ったCLIコードレビュー＆バグ特定 - Qiita TOP 3 open-source AI to code like a PRO 🧠 🤖 - DEV Community 参考図書 はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳) 福村出版 2022-12-13 単行本（ソフトカバー） 4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。\nreviewed by Spiegel on 2023-03-05 (powered by PA-APIv5)\n日経サイエンス2023年5月号（特集：対話するAI　ChatGPT） 日経サイエンス編集部 (編集) 日経サイエンス 2023-03-25 (Release 2023-03-25) 雑誌 B0BXQ2HMQ5 (ASIN), 4910071150534 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 特集記事が「話す AI 描く AI」ということで，いわゆる Generative AI に関する内容。大規模言語モデル（LLM）の解説も載っている。圏論の記事もあるよ。\nreviewed by Spiegel on 2023-03-28 (powered by PA-APIv5)\n賢者の弟子を名乗る賢者1 (GCノベルズ) りゅうせんひろつぐ (著), 藤ちょこ (イラスト) マイクロマガジン社 2014-06-30 (Release 2014-07-01) Kindle版 B00LF90DZW (ASIN), 9784896374650 (EAN), 4896374657 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 最近のお気に入りラノベ。 Web 版も愛読している。こういう設定のゲームとかあったら楽しいかなぁ。\nreviewed by Spiegel on 2017-06-09 (powered by PA-APIv5)\n親に無理やり入れさせられた。高校に入ったら一切運動部には関わらないという条件で渋々入った。テニス部を選んだのは一番楽そうに見えたからだ（←シロート考えw）。まぁ，それで身に着けた体力の余剰分でこの歳まで生き延びたんだから，そこだけは当時の親に感謝しておこう。今だに運動も体育会系のノリもまっぴらゴメンって感じだが。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "お散歩カメラ 2023-03-19",
      "section": "remark",
      "description": "松江城の本丸は桜が咲き始めてましたヨ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/19-osanpo-camera/",
      "published": "2023-03-19T08:46:51+00:00",
      "update": "2023-03-25T11:57:25+00:00",
      "content": "朝から晴天。 お散歩日和である。\nというわけで，今日はここからスタート。\n松江 二子塚古墳 | Flickr 実は松江市内に「二子塚古墳」ってのは2つあって，こっちは「乃木二子塚古墳」と呼ばれるほう。 松江バイパスの側にあるので分かりやすい。 松江市は，特に湖南側は，こういう古墳がアホのようにある。 まぁ，都市開発の過程で潰された遺跡も多いけど。 松江市の南側は「意宇平野」と呼ばれる平野があって（子どもの頃はは一面田んぼだった），古代には一帯を支配する地方豪族がいたらしい。 そのあたりの名残なんだろう。\nそこから川沿いに北上していく。\n今日のバードウォッチング | Flickr この川沿いは桜の木もたくさん植えられているのだが\nもうすぐ開花。かな | Flickr もう少しで開花という感じ。\nここからバスに乗って松江城まで行きたかったが，今日はレディスマラソンの日だということをすっかり忘れていた。 午前中の路線バスが止まってるよ orz\nしょうがないので，松江城まで歩くことにした。 陸橋をえんやらやっと越えていく。\n7%勾配の陸橋 | Flickr そして今日の宍道湖。\n今日の宍道湖 | Flickr 松江城に到着。 今日の大山はどうかなぁ。\n今日の大山 from 松江城 | Flickr おぅふ。 ギリで見える感じ。 花粉か？ 花粉のせいなのか？\nそうそう。 松江城の本丸は桜が咲き始めてましたヨ。\nSAKURA blossoms in Matsue castle | Flickr この分だと，早ければ週末には7分咲きか満開になる？\nCanon PowerShot ZOOM はピント合わせが難しい。 つか，マニュアルで制御できないので桜の花みたいなのは難しいかな。 まぁ，贅沢を言ったらキリがないし，一眼レフはもう持たないと心に決めているので。\nそんなこんなで今日のお散歩はおしまい。 あとは図書館で読書。 受験シーズンが終わったせいか，学習室にはおっさんばっかりで入りやすかった（笑）\n参考 はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳) 福村出版 2022-12-13 単行本（ソフトカバー） 4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。\nreviewed by Spiegel on 2023-03-05 (powered by PA-APIv5)\nプリキュア5、フル・スロットル GO GO! 宮本佳那子 工藤真由 (アーティスト), 工藤真由 (アーティスト), 宮本佳那子 (アーティスト), ぷりきゅあ5 (アーティスト), ヤング・フレッシュ (アーティスト) マーベラス エンターテイメント (Release 2008-02-06) CD B0010JL2QG (ASIN), 4535506230393 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 実際には MP3 版で購入。最近の仕事中と移動中のBGM。アガる曲。くどまゆはよい。\nreviewed by Spiegel on 2023-02-10 (powered by PA-APIv5)\n"
    },
    {
      "title": "2023-03-18 のブックマーク",
      "section": "bookmarks",
      "description": "「「OpenSSL 3.1」が予定通りリリース～「FIPS 140-3」準拠へとアップグレード」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2023/03/18-bookmarks/",
      "published": "2023-03-18T01:39:53+00:00",
      "update": "2023-03-21T05:35:57+00:00",
      "content": "リリース情報 Release v0.111.3 · gohugoio/hugo · GitHub Release Git for Windows v2.40.0.windows.1 · git-for-windows/git · GitHub 「Git for Windows 2.40.0」が公開 ～git-commitなどの「-」系コマンドが廃止 - 窓の杜 Release 1.38.0 · tailscale/tailscale · GitHub Release 1.38.1 · tailscale/tailscale · GitHub Release OpenSSL 3.1.0 · openssl/openssl · GitHub 「OpenSSL 3.1」が予定通りリリース～「FIPS 140-3」準拠へとアップグレード - 窓の杜 Release February 2023 Recovery 2 · microsoft/vscode · GitHub 「Firefox 111」が正式リリース ～Windows版の通知がOSネイティブに - 窓の杜 Firefox 111、Webアプリからローカルファイルにアクセスできる「Origin Private File System」が正式機能に。これでChrome、Safari、Firefoxが対応 － Publickey 「Thunderbird 102.9.0」が公開 ～4件の不具合と6件の脆弱性を修正 - 窓の杜 Release v0.78 (2023-03-17) · ranvis/putty · GitHub セキュリティ＆プライバシー関連 Firefox extends its anti-tracking protection to Android | TechCrunch 「Zoom」に複数の脆弱性 ～特権昇格やサービス拒否、情報漏洩の欠陥 - 窓の杜 ソフトウェアのセキュリティ水準向上のために： 3月13日よりGitHub 2要素認証（2FA)を開始 - GitHubブログ 知財関連 大手出版社に著作権侵害で訴えられた電子図書館が「すべての図書館の将来を脅かす訴訟だ」と主張して支持を求める - GIGAZINE AIが生成した絵や文章に著作権は認められるのか？アメリカ著作権局がガイダンスを発表 - GIGAZINE Linux または Ubuntu に関する話題 LinuxコンテナをFreeBSDで動かす「Linux containers on FreeBSD」、containerd 1.7.0で正式サポート － Publickey 「SparkyLinux」\u0026ndash;誰でも使える、無駄を省いたLinuxディストリビューション - ZDNET Japan Linux界のリーダーらが「Flathub」のアプリストア構築に乗り出した理由 - ZDNET Japan Ubuntu 23.04 その15 - デフォルトの壁紙登場・GNOME 44の採用 - kledgeb AWSに最適化された「Amazon Linux 2023」正式リリース。カーネルライブパッチなど新機能、今後は5年間無償サポート、2年ごとにメジャーバージョンアップ － Publickey Ubuntu 20.04 その250 - Ubuntu 20.04.6 LTSのリリースへ・UEFIセキュアブート対応のアップデート - kledgeb Go 言語関連 GitHub - SilverRainZ/go-ssaviz: Visualize Go SSA function using Graphviz 『Go言語プログラミングエッセンス』を読み始めた - Magnolia Tech Advanced markdown processing in Go 『Go言語プログラミングエッセンス』は最新ベストプラクティスがまとまっていてGo初心者によさそう - nakaoka3の技術ブログ Go言語context.WithCancelはどうやって動いています？ 天文関連 主焦点カメラ Suprime-Cam (Subaru Prime Focus Camera) | 観測装置 | すばる望遠鏡について | すばる望遠鏡 「すばる望遠鏡　主焦点カメラ」を常設展示します :: 国立科学博物館　National Museum of Nature and Science,Tokyo 【ライブ配信】金星食（2023年3月24日） | 国立天文台(NAOJ) Generative AI OpenAI releases GPT-4, a multimodal AI that it claims is state-of-the-art | TechCrunch Microsoft\u0026rsquo;s new Bing was using GPT-4 all along | TechCrunch Google、プレスリリースや製品写真などを学習させると、プロンプトで新たな画像や文章を生成してくれる。企業向けジェネレーティブAI機能を発表 － Publickey Microsoft 365 gets a host of new AI-powered features | TechCrunch ［速報］マイクロソフト、ChatGPTベースの「Microsoft 365 Copilot」を発表。AIがExcelの数字を分析しグラフ化、PowerPointを自動生成、長いメールを要約など － Publickey 【チャットAI】ChatGPT(model: GPT-4)を利用してフロントエンド＋バックエンドを一気に実装してみた【プログラミング】 - Qiita その他 ASCII.jp：ついにKaiOS搭載のケータイが国内上陸か？ Orbicの日本市場参入は本気のようだ Rust製の高速なwebpack互換バンドラ「Rspack」登場。現時点で5倍から10倍の性能向上 － Publickey 静的サイトジェネレータ「Astro 2.1」リリース。画像の最適化、Markdocのサポート、ファイル変更検知し型チェックなど新機能 － Publickey 「ちょうぜつ改め21世紀、ふつうのソフトウェア設計入門」株式会社ことば研究所 田中 ひさてる | エンジニアの生き様をウォッチするメディア Rust採用で爆速を目指すテキストエディター「Zed」に初のベータ版、ただし対応OSは…… - 窓の杜 "
    },
    {
      "title": "π は間違ってる？",
      "section": "remark",
      "description": "円周率の日だったので，ネタに走ってみた。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/pi-is-wrong/",
      "published": "2023-03-15T03:43:29+00:00",
      "update": "2023-03-15T03:43:41+00:00",
      "content": "昨日3月14日は「円周率の日」で「数学の日」でアインシュタイン博士の誕生日でした。 昔は物理学イベントもあった気がするけど \u0026hellip;まぁいいや。\nπ は間違ってる？ Mastodon の TL を眺めてたら\nという投稿を見かける。 ここでいう $\\tau$ (tau) は1，半径 $r$，円周 $C$ の円\nvia The Tau Manifesto by Michael Hartl に対して\n\\[ \\tau \\equiv \\dfrac{c}{r} = 6.283185307179586... \\] と定義されたものだ。 “The Tau Manifesto” では，この $\\tau$ を “the true circle constant” (真円定数？) と呼んでいるようだ。 言うまでもなくこれは\n\\[ \\tau = 2\\pi \\] である。 $\\pi$ を $\\tau$ に置き換えることにより，たとえば角度について\nvia The Tau Manifesto by Michael Hartl などと（$\\pi$ に比べて）ちょっとシンプルな表現にできる。 また，さきほどの定義を使って円周の長さは\n\\[ C = {\\tau}{r} \\] と記述でき，そこからの積分により円の面積 $S$ は\n\\[ S = \\dfrac{1}{2}{\\tau}r^2 \\] と導ける。 こっちのほうが，たとえば運動エネルギー $\\tfrac{1}{2}mv^2$ や自由落下する物体の移動距離 $\\tfrac{1}{2}gt^2$ などと同じ体裁で分かりやすいよね。\nあるいは，有名なオイラーの公式\n\\[ e^{i\\theta} = \\cos{\\theta} + i\\sin{\\theta} \\] およびそこから導き出されるオイラーの等式は $\\tau$ を使って\nvia The Tau Manifesto by Michael Hartl つまり\n\\[ e^{i\\tau} = 1 \\] となり\nA rotation by one turn is 1. via The Tau Manifesto by Michael Hartl と，より直感的な主張になる。 クールだろ！\nというわけで，次は「$\\tau$ の日」である6月28日にお祝いしましょう（笑）\n【おまけ】 天文計算で円周率の精度は何桁まで？ 同じく Mastodon の TL で\nHow Many Decimals of Pi Do We Really Need? - Edu News | NASA/JPL Edu という記事を教えてもらった。 これによると\nFor JPL\u0026rsquo;s highest accuracy calculations, which are for interplanetary navigation, we use 3.141592653589793. via How Many Decimals of Pi Do We Really Need? なんだそうだ（2016年に書かれたものという但し書きがある）。 これっていわゆる double 型の浮動小数点数の有効桁数かな。 Go で書くとこんな感じになる。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) func main() { fmt.Printf(\u0026#34;%g\\n\u0026#34;, math.Pi) fmt.Printf(\u0026#34;%b\\n\u0026#34;, math.Pi) fmt.Printf(\u0026#34;%x\\n\u0026#34;, math.Pi) //Output: //3.141592653589793 //7074237752028440p-51 //0x1.921fb54442d18p+01 } うしろのふたつは浮動小数点数（IEEE 754）の内部表現で記述されている。 桁落ちなどの計算誤差に気をつける必要があるけど，基本型の浮動小数点数の演算で行けそうな感じではある。\nなお math.Pi 定数は\nconst ( ... Pi = 3.14159265358979323846264338327950288419716939937510582097494459 // https://oeis.org/A000796 ... ) と定義されている2。 残念ながら $\\tau$ は定義されてなかった。 まぁ $2\\pi$ でいけるからな（笑）\nブックマーク π Is Wrong Why Pi Matters | The New Yorker 参考図書 数学ガールの秘密ノート／丸い三角関数 結城 浩 (著) SBクリエイティブ 2014-04-23 (Release 2015-04-18) Kindle版 B00W6NCLJM (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 丸と三角の楽しい関係。頑張れば小学生高学年でも大丈夫。\nreviewed by Spiegel on 2014-11-30 (powered by PA-APIv5)\n数学ガールの物理ノート／ニュートン力学 結城 浩 (著) SBクリエイティブ 2021-07-15 (Release 2021-07-16) Kindle版 B093PZLQMQ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 「数学ガールの物理ノート」ですってよ。この巻は「力学」の話。で仕事とエネルギーについての議論へと発展する。面白い！\nreviewed by Spiegel on 2021-07-23 (powered by PA-APIv5)\n天体物理学 Arnab Rai Choudhuri (著), 森 正樹 (翻訳) 森北出版 2019-05-28 単行本 4627275110 (ASIN), 9784627275119 (EAN), 4627275110 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 興味本位で買うにはちょっとビビる値段なので図書館で借りて読んでいる。まえがきによると，この手のタイプの教科書はあまりないらしい。内容は非常に堅実で分かりやすい。理系の学部生レベルなら問題なく読めるかな。\nreviewed by Spiegel on 2019-11-13 (powered by PA-APIv5)\n道（tao）じゃなくてギリシア文字の $\\tau$ (tau) ね（笑）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nGo の定数の仕様については拙文「リテラル定数」を参考にどうぞ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "お散歩カメラ 2023-03-12",
      "section": "remark",
      "description": "松江城で椿展をやってるですよ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/03/12-osanpo-camera/",
      "published": "2023-03-12T09:56:48+00:00",
      "update": "2023-03-12T10:16:48+00:00",
      "content": "本当は土曜日に（晴天だったので）お散歩に行きたかったのだが，読書会だったので，今日（日曜日）にお出かけ。 晴れてはいるが薄ぼんやりしてるんだよなぁ。\n今日は趣向を変えて島根県の合同庁舎の辺りに。 合同庁舎のそばを流れる「馬橋川」沿いは松江市内の桜の名所として知られるが，今はまだ蕾状態。 松江市内の桜の開花予想は 2023-03-24 辺りらしいので，月末か翌月頭にまた見に行ってみよう。\nというわけで今日のバードウォッチング。\n今日のバードウォッチング | Flickr デジタルズームで無理やり引き伸ばしてるので画質が荒いがご容赦を。\nお昼になったので松江駅の近くに移動して回るお寿司屋さんへ。\n回るお寿司屋さん | Flickr ホタルイカに釣られて十貫セットを所望してしまいました。 なんか，どこぞの小僧がやらかした影響なのかレーンにお寿司が回らなくなったし，カウンタの注文タブレットも撤去されていた。 公共の場での食事は，大衆向けでも（周囲に迷惑をかけない程度の）最低限のマナーがあるものだが，そういうのって子供のうちに躾けないと身に付かないからなぁ。\nいい感じにお腹が膨れたので松江城へ Go。 いま椿展をやってるですよ。\n松江城 椿展 | Flickr まだちょっと開ききってないのが多かったけど。\n晴れてるけど薄ぼんやりしてるせいか，松江城から大山は見えず。 代わりに天守閣を撮ってみた。\n今日の松江城 | Flickr というわけで，残り時間は読書タイム。 今日は図書館には行かず，喫茶店とかで読書してた。 実は最近『はじめて学ぶ ビデオゲームの心理学』という本を買いまして。\nいつまで経っても電子化されないぽいので、諦めて購入 | Flickr 昨年末に出版された本なのだが，デジタル版を期待して待ってたのだが出そうもないし，島根県の公立図書館にも入る気配がないので，諦めて紙の本を買ったのだ。 巻末の日本語版解説をあわせても184頁ほどだし，とにかく字が大きい。 年配者に優しい本（笑）\n読書感想文はそのうち書くが，最初の方を読んでも\n知覚は主観的な感覚であり、ゆえに体験はデザインに宿るのではなく、ユーザーの心の中で起こります。 『はじめて学ぶ ビデオゲームの心理学』p.36より とか\nビデオゲームをはじめ各種のゲームは、ツールでないという点で、ほかの製品と少し違います。ビデオゲームは外部の目標に向かってプレイするものではなく、プレイ自体が目的になる、自己目的的な活動です。私たちはゲームを通じてシステムに働きかけ、その反応を楽しみます。 『はじめて学ぶ ビデオゲームの心理学』p.39より とか書かれていてなかなか面白い（ゲームの性質が上の引用なものだとすると，最近流行りの ChatGPT とかってツールというよりゲームに近いんじゃないだろうか）。\nこれってゲームデザイナやエンジニアだけでなく，他ジャンルのソフトウェア・エンジニアも読むべきだよなぁ，と思ったり。\n参考図書 はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳) 福村出版 2022-12-13 単行本（ソフトカバー） 4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。\nreviewed by Spiegel on 2023-03-05 (powered by PA-APIv5)\n"
    }
  ]
}
