{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "Java と VS Code",
      "section": "remark",
      "description": "どうせなら VS Code で環境を作るのがいいよねってことで",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/08/java-with-vscode/",
      "published": "2021-08-18T13:20:30+00:00",
      "update": "2021-08-18T13:21:04+00:00",
      "content": " パソコンに Visual Studio Code を導入する（再チャレンジ） Go と VS Code Markdown と VS Code Java と VS Code ← イマココ  仕事で Spring Boot なコードを書くことになって，今更ながら基本から勉強し直している。 で，どうせなら VS Code で環境を作るのがいいよねってことで，覚え書きとして記しておく。\nExtension Pack for Java これをインストールすると以下のパッケージも併せてインストールされる。\n Language Support for Java(TM) by Red Hat - Visual Studio Marketplace Debugger for Java - Visual Studio Marketplace Test Runner for Java - Visual Studio Marketplace Maven for Java - Visual Studio Marketplace Project Manager for Java - Visual Studio Marketplace Visual Studio IntelliCode - Visual Studio Marketplace  これだけあれば基本的な道具は一通り揃う。\nみんな大好き “Hello, World!” ここで簡単に動作確認しておこう。 以下の手順でプロジェクトの雛形を作成する。\n コマンドパレットから “Java: Create Java Project” を選択する プロジェクト・タイプの一覧が表示されるので “No build tools” を選択する 作業ディレクトリを選択する プロジェクト名を指定する（ここでは hello と入力）  これで\n$ tree hello hello ├── README.md ├── lib └── src └── App.java 2 directories, 2 files という感じにディレクトリ・ファイルが作成される。 App.java の中身はこんな感じ。\npublic class App { public static void main(String[] args) throws Exception { System.out.println(\u0026#34;Hello, World!\u0026#34;); } } エディタ上は\n という感じに表示されているので main() 関数直上の Run のリンクをクリックすればコンパイル＆実行してくれる。 Java Process Console に Hello, World! と表示されれば無問題。\nSpring Boot Extension Pack これも以下のパッケージを含んでいるようだ。\n Spring Boot Tools - Visual Studio Marketplace Spring Initializr Java Support - Visual Studio Marketplace Spring Boot Dashboard - Visual Studio Marketplace  雛形プロジェクトを作る これも動作確認しておこう。\n コマンドパレットから “Spring Initializr: Generate a Maven Project” を選択する Spring Boot のバージョンを選択（2021-08-18 時点の最新は 2.5.3） 使用言語を選択。もちろん Java で Group Id を入力。ここはデフォルトの com.example のままにしておく Artifact Id を入力。ここもデフォルトの demo のままにしておく パッケージタイプを選択。 Jar と War がある。とりあえす Jar にしておこうか Java のバージョンを選択。無難に LTS 版の 11 を選択しておくか（JDK のインストールは別途行うこと） 依存パッケージを選択。 Spring Web と Lombok は必須。あとは必要に応じて  Spring Web (必須) Lombok (必須) Spring Boot DevTools Thymeleaf     あとは作業ディレクトリを指定すれば完了。 作業ディレクトリ直下に Artifact Id で指定した名前でディレクトリが掘られ，ディレクトリ・ファイルが展開される。\n$ tree demo demo ├── HELP.md ├── mvnw ├── mvnw.cmd ├── pom.xml └── src ├── main │ ├── java │ │ └── com │ │ └── example │ │ └── demo │ │ └── DemoApplication.java │ └── resources │ ├── application.properties │ ├── static │ └── templates └── test └── java └── com └── example └── demo └── DemoApplicationTests.java DemoApplication.java の中身はこんな感じ。\npackage com.example.demo; import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; @SpringBootApplication public class DemoApplication { public static void main(String[] args) { SpringApplication.run(DemoApplication.class, args); } } このままだと何も表示できないので controller クラスと対応するテンプレートファイルを用意する。\nまずは demo/src/main/java/com/example/demo/controller/DemoController.java ファイルを作る。 中身はこんな感じ。\npackage com.example.demo.controller; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.GetMapping; @Controller public class DemoController { @GetMapping(\u0026#34;/\u0026#34;) public String demo() { return \u0026#34;demo\u0026#34;; } } 次に demo/src/main/resources/templates/demo.html ファイルを作る。 中身はこんな感じ。\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Demo\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Hello World!\u0026lt;/h1\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 全体の構成はこんな感じ。\n$ tree demo demo ├── HELP.md ├── mvnw ├── mvnw.cmd ├── pom.xml └── src ├── main │ ├── java │ │ └── com │ │ └── example │ │ └── demo │ │ ├── DemoApplication.java │ │ └── controller │ │ └── DemoController.java │ └── resources │ ├── application.properties │ ├── static │ └── templates │ └── demo.html └── test └── java └── com └── example └── demo └── DemoApplicationTests.java テストとか端折ってるけどご容赦ね。\nあとは Spring Boot Dashboard から Start すれば OK。\n Web ブラウザから http://localhost:8080/ を叩いて Hello, World! と表示されれば無問題。\nブックマーク  VSCodeで作るJava開発環境＆Spring Bootアプリケーション入門 - Qiita Spring Boot アプリケーションのデプロイ - リファレンス SpringBootをVSCodeで使ってみる - Qiita 【Maven編】Spring Bootのビルドとデプロイ方法 | こへいブログ VSCodeとDockerでSpring Boot + PostgreSQL開発環境を作る(2) | Sales8開発者日記 SpringBoot ログイン画面作成 Spring Boot + Spring Data JPA ～サンプルアプリ実装～ - Qiita JPA (Java Persistence API)のアノテーション Thymeleafチートシート - Qiita SpringBootアプリにBootstrap4を追加（WebJars使用） – One IT Thing SpringブートSLF4Jロギングの例 SpringブートSLF4Jロギングの例 - 開発者ドキュメント Spring bootでHttpSessionを使用する - m_shige1979のささやかな抵抗と欲望の日々 Spring Boot で Ajax を実装する単純なサンプル - Qiita  参考図書   Spring Boot 2 入門: 基礎から実演まで Webアプリ開発入門 原田 けいと (著), 竹田 甘地 (著), Robert Segawa (著)  2020-05-22 (Release 2020-05-22) Kindle版 B0893LQ5KY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Spring Boot を勉強することになって急遽買った本。めっさ分かりやすかった。 PDF 版が欲しいくらい（笑）\nreviewed by Spiegel on 2021-06-13 (powered by PA-APIv5)\n   Effective Java 第3版 Joshua Bloch (著), 柴田 芳樹 (翻訳) 丸善出版 2018-10-30 単行本（ソフトカバー） 4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。\nreviewed by Spiegel on 2021-03-17 (powered by PA-APIv5)\n "
    },
    {
      "title": "Go 1.17 がリリースされた",
      "section": "release",
      "description": "Zenn 記事の「Go のモジュール管理」は書き直さないとなぁ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/08/go-1_17-is-released/",
      "published": "2021-08-17T12:31:29+00:00",
      "update": "2021-08-17T12:32:04+00:00",
      "content": "Go 1.1７ がリリースされた。\n Go 1.17 is released  毎度のごとく変更は多岐にわたるが，個人的に気になった部分を挙げておく。\n スライス []T から配列ポインタ *[N]T への変換ができるようになったそうな  s := make([]byte, 2, 4) s0 := (*[0]byte)(s) // s0 != nil s1 := (*[1]byte)(s[1:]) // \u0026amp;s1[0] == \u0026amp;s[1] s2 := (*[2]byte)(s) // \u0026amp;s2[0] == \u0026amp;s[0] s4 := (*[4]byte)(s) // panics: len([4]byte) \u0026gt; len(s)  unsafe.Add および unsafe.Slice の導入  Big Sky :: unsafe.Add と unsafe.Slice が入った。   windows/arm64 アーキテクチャのサポート go.nmod で go 1.17 以降が指定されている場合，間接的な依存モジュールも記述するよう要求されるようになった。とりあえず go mod tidy -go=1.17 とすれば go ディレクティブごといい感じに更新してくれるらしい  Go 1.17連載が始まります: コンパイラとgo mod | フューチャー技術ブログ   go.nmod で module ディレクティブの直前行に // Deprecated: comment とつけることで，非推奨のワーニングを出せるようになった  // Deprecated: use example.com/mod/v2 instead. module example.com/mod  ビルドの制御を行う // +build が //go:build に変更になる。とりあえず 1.17 では両方有効らしい。サンプルファイルとか // +build run とか山ほど書いてるんだが，どうしよう\u0026hellip; go run コマンドがモジュール・バージョンを受け入れるようになった。これ GitHub Actions とかで重宝しそうだな（笑）  $ go run github.com/spiegel-im-spiegel/gpgpdump@latest -h go: downloading github.com/spiegel-im-spiegel/gpgpdump v0.12.4 ... OpenPGP (RFC 4880) packet visualizer by golang. Usage: gpgpdump [flags] ...  スタックではなくレジスタ・ベースの関数呼び出しがサポートされた。5%くらい速くなるらしい。サイズもちょびっと小さくなるようだ 関数閉包（closure）を含む関数をインライン展開できるようになった rune 型の変数が負値の場合に関連するメソッドがエラーとなるよう挙動が変わったようだ  Go 1.17からの負のruneの扱い | フューチャー技術ブログ   go test に -shuffle オプションが追加された。テスト順序をシャッフルしてくれるらしい  Go 1.17のtesting新機能 | フューチャー技術ブログ   time.Time 型に GoString() メソッドが追加された。なんだこれ（笑）  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { fmt.Printf(\u0026#34;%#v\\n\u0026#34;, time.Now()) // Output: \t// time.Date(2009, time.November, 10, 23, 0, 0, 0, time.Local) } 例によって Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.17.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。 以下は手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://golang.org/dl/go1.17.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.17.linux-amd64.tar.gz $ sudo mv go go1.17 $ sudo ln -s go1.17 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.17 linux/amd64 アップデートは計画的に。 Zenn 記事の「Go のモジュール管理」は書き直さないとなぁ。\nブックマーク  Go 1.17 Release Notes - The Go Programming Language Go 1.17 is released - The Go Blog Go1.17のencoding/csv | フューチャー技術ブログ Go 1.17 Release祝い 細かすぎて伝わらないMinor change in flag package  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "2021-08-15 のブックマーク",
      "section": "bookmarks",
      "description": "「暗号化メッセージングのSignalで消滅型メッセージをデフォルト設定可能に」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/08/15-bookmarks/",
      "published": "2021-08-15T10:15:33+00:00",
      "update": "2021-08-15T10:16:33+00:00",
      "content": "リリース情報  Release v0.29.0: Merge pull request #3123 from cfallin/release-0.29 · bytecodealliance/wasmtime · GitHub Thunderbird — Release Notes (78.13.0) — Thunderbird Firefox 91.0, See All New Features, Updates and Fixes  強化版Cookieクリーナーを導入した「Firefox 91」が安定版に - 窓の杜   Thunderbird 91 Available Now | The Thunderbird Blog  セキュリティ＆プライバシー関連  Kindleに脆弱性でAmazonアカウント窃取の危険性、バージョンの確認を | TECH+ : 春にリリースされたバージョンで改修済み 個人利用クラウドへのアップロードも行われた再委託先従業員による情報持ち出しについてまとめてみた - piyolog Google、Bluetooth版Titanセキュリティキーを廃止。新たにNFC対応のUSB-Cモデルを追加 - Engadget 日本版 暗号化メッセージングのSignalで消滅型メッセージをデフォルト設定可能に | TechCrunch Japan How to erase all of the data Google knows about you 暗号化の「見方を変えた」Appleが監視社会へのバックドアを開く | P2Pとかその辺のお話R Facebookがエンド・ツー・エンド暗号化をMessengerの通話やInstagramのメッセージに拡大 | TechCrunch Japan  その一方で： なんとフェイスブックがまたもプライバシー設定を変更 | TechCrunch Japan    知財関連  Sci-Hub Pledges Open Source \u0026amp; AI Alongside Crypto Donation Drive * TorrentFreak 任天堂とコロプラの特許権侵害訴訟が和解で決着：和解金33億円は安いのか（栗原潔） - 個人 - Yahoo!ニュース GoogleがSonosの特許5件を侵害したと予備裁定が認定 | TechCrunch Japan  Linux または Ubuntu に関する話題  Ubuntu 20.04 その224 - Ubuntu 20.04.3 LTSのリリース日変更 - kledgeb  Azure や Windows に関する話題  Microsoft has brand new emoji coming to Windows 11 and Microsoft 365 Azure Cosmos DBとは  Go 言語関連  Goのdefer文と名前付き結果パラメータを組み合わせた時の挙動を理解する 【Golang】ExcelizeでExcelファイルを簡単操作！ go で「*」をたくさんつけるとコンパイルに30時間以上かかることがある - Qiita : 試してぇ！ しないけどw Goにこれから入る機能について - Google スライド 人名用漢字：その漢字が子の名に使える漢字かを判定する Go 言語スプレッドシートライブラリ：Excelize 2.4.1 がリリースされました  GitHub - qax-os/excelize: Golang library for reading and writing Microsoft Excel™ (XLSX) files.   Goroutineはどうやって動作するのか - Qiita  天文関連  Strong outburst Perseids on August 14, 2021 ~ 06-09 UT! | Meteor News : 2021-08-14 17時頃（日本時間）に突発出現があったらしい  その他  MIT Tech Review: WHO、新型コロナワクチン追加接種の凍結を呼びかけ Pythonより30％高速目指す「Pyston」\u0026ndash;開発者が語る次の目標 - ZDNet Japan インターネット・アーカイブのFMラジオ番組アーカイブでライブ音源がいくらでも聴ける - YAMDAS現更新履歴 Facebook内幕暴露本『An Ugly Truth』について日本のメディアで取り上げられる／取り上げられない話題 - YAMDAS現更新履歴 【特集】MIPSなのにx86とARMアプリを高速に実行できる中国製CPU「龍芯」のカラクリ - PC Watch 【さくらのレンタルサーバ】コンテンツブースト 無料転送容量を300GBに増量 | さくらインターネット : スタンダードは今までどおり100GB 「藤子・F・不二雄大全集」が電子書籍化、全115冊＆別冊4冊を順次配信 - コミックナタリー FlutterKaigi 2021 GitHub Codespaces · GitHub  GitHub’s Engineering Team has moved to Codespaces | The GitHub Blog   NortonとAvastが合併　ユーザー数は5億人規模に - ITmedia NEWS 電気通信大が粗悪なCO2センサーの見分け方を公開、5000円以下の12製品中8製品はCO2ではなく消毒用アルコールに反応 | TechCrunch Japan 「Windows 365」登場で注目の「DaaS」\u0026ndash;過去、現在、未来 - ZDNet Japan Facebookのエンジニアがオープンソースの新しい時刻管理アプライアンスを開発 | TechCrunch Japan QUICとHTTP/3時代のインターネット解説書はどうあるべきだろう - golden-luckyの日記 インフラを意識せずにSaaS開発ができる 次世代PaaS「Hacobune」のオープンβ版を2021年8月12日に無料提供開始 ～8月27日にオンライン発表会を開催～ | さくらインターネット 小室哲哉か00年代エロゲの歌詞か | クイズメーカー - こたえてあそぶ・つくってあそぶ・クイズのプラットフォームサービス 図で理解するFlexbox Twitterがインド最大与党のアカウントを停止 | TechCrunch Japan AWSと1兆円規模のクラウド契約、NSAが契約との報道\u0026ndash;マイクロソフトは抗議 - ZDNet Japan  "
    },
    {
      "title": "予防接種へ行ってきた（1回目）",
      "section": "remark",
      "description": "副反応がなかった人が「全然平気」とかわざわざ書くわけないだろうから，敢えて記事にしてみることにした。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/08/vaccines-are-go/",
      "published": "2021-08-13T02:44:57+00:00",
      "update": "2021-08-13T11:11:41+00:00",
      "content": "Facebook や Twitter の TL を眺めていると副反応でしんどい人の話は目立つが，副反応がなかった人が「全然平気」とかわざわざ書くわけないだろうから，敢えて記事にしてみることにした。\n予約に関わる顛末 本当はかかりつけ医で受けたかったのだが1，6月時点で「最短でも9月に入ってから」と言われたので諦めた。 かかりつけ医でダメなら集団接種を受けるか。\n松江市の集団接種会場は橋北のくにびきメッセか橋南の市立病院の2箇所のみ。 予防接種のために橋北まで出向くのは嫌だったので，ここは市立病院一択である。\n私はいわゆる「高リスク群」で身障者手帳や糖尿病手帳が必携となる人である。 松江市では「基礎疾患」持ちはクーポン券が届いたら2 すぐに予約可能とあり3，早速 Web 予約したのだが，7月中の空きはなかったようだ。\nそれなら急ぐこともないと夏季休暇に入ってから接種することにした。 予防接種やその副反応のために有給休暇をとるのは嫌だし。\n予防接種前日 とりあえず予診票をゴリゴリ書く。\n 体温は当日に測ればいいな 処方されてる薬を列挙するの？ 今回関係ありそうな薬はないと思うけど4，念のため「お薬手帳」も持っていって予診時に医師に判断してもらうか  よーし，うむうむ，よーし。 準備万端でおやすみなさい。\n予防接種当日 夏季休暇初日。 わいわい，寝坊できる。 五月蝿いオリンピック報道も終わってるし。\nとういうわけで，のんびり朝飯を食って，体温は平熱でおｋ。 特定の薬は飲むな，みたいな指示もなかったし，いつもどおり。\n念のため接種会場の Web ページをチェックすると\n 接種会場での混雑を避けるため、予約時間ごとに会場へご案内します。予約時間の15分前までは会場へは入れませんので、駐車場やがんセンター入口前でお待ちください。病院内への立ち入りはできません 新型コロナウイルスワクチン接種についてより  とか書いてあった。 早く来すぎてもアカンのか。\nとはいえ，朝から蕭蕭 (しょうしょう) と降る雨にビビって少し早めにお出かけ。 予約時間の30分前には到着してしまった。\nいっくよー | Flickr  指示通り3階に上がって整理券をもらい，待機エリアでキューイングされる。\nちなみに入場は15分単位なのだが，一度に40人前後になるようだ。 市立病院は規模の小さい方の会場だが，それでこのトラフィックかよ（松江は県庁所在地だが人口20万人未満の田舎街である）。 会場に入って見渡すにソーシャル・ディスタンスなんか知るかという気概が感じられる（笑） まぁ，そのくらいしないと捌けないんだろうけど。\n病院側のスタッフも多い（保健所とかから出向してる人もいるのだろうが）。 「コロナ」なんかのためにこれだけのリソースを割いていいのだろうかとも思うが，仕方ないんだろうねぇ。 せめて超過勤務手当と危険手当が多めに支払われることを祈ろう。\n今回の「コロナ」でどれだけのリソースが割かれコストが支払われているのか。 ホンマ，呑気にオリパラやってる場合じゃなかったと思うけど，他所の自治体を慮る余裕はないわな（笑）\n予診で医師に「お薬手帳」を見せて影響なしとのお墨付きをもらう。 さらに「筋肉注射なので利き腕じゃない方にするように」とアドバイスももらった。 確かに筋肉注射は痛い（のが数日続く）のだが5，おそらく問い合わせが多いのだろう（それは副反応じゃねーよw）。 その辺の話も念押しされた。 ホンマ，医師って神経使う仕事だよなぁ。\n接種後15分ほど待機して問題なかったので退場。 帰りにドラッグストアで休暇中のおやつを調達しておこう。\n予防接種翌日 なんだか早く目覚めしてまって，早朝からブログ記事とか書いてみたり。 子供か！\n体温は平熱。 注射したところの筋肉痛は普通。 よかったよかった。 気分がちょっとダウナーなのは雨降りだからだろう。\n次回は9月。 月曜日かよ orz 有休申請しないと\u0026hellip;\n参考図書   サンダーバード ARE GO (Original TV Soundtrack) Ben Foster \u0026amp; Nick Foster (メインアーティスト) Rambling RECORDS (Release 2016-01-20) MP3 ダウンロード B07H93B9JF (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  サンダーバードの曲は上がる！\nreviewed by Spiegel on 2021-08-13 (powered by PA-APIv5)\n   松江市では持病に関しては病院（hospital）ではなくクリニックや診療所のかかりつけ医を持つことを推奨している。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 松江市では64歳以下の人は 2021-07-09 から順次クーポン券が郵送された。各個人宛に封書が来たのだが，郵送代だけでも莫大なコストになるんじゃないか，これ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 松江市では基礎疾患のない60歳未満の人は 2021-08-02 から予約可。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 20年前は薬だけでお腹いっぱいになるくらい処方されたが，今は当時の三分の一くらいかな。しかも一番軽いやつに順次変えてもらってる。私の場合，薬が効きすぎるときがあるんだよねぇ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n それでも点滴で電解物質を打ち込まれるよりは全然楽だが（笑）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "また散財してしまった...",
      "section": "remark",
      "description": "『プログラミング言語Go』読書会の反省文と感想文",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/08/web-meeting/",
      "published": "2021-08-09T05:36:17+00:00",
      "update": "2021-08-12T21:22:05+00:00",
      "content": "ついカッとなってやった。 今は反省している。\n先日，久しぶりに『プログラミング言語Go』の読書会に参加したのだが\n 第15回『プログラミング言語Go』オンライン読書会（第2サイクル） - connpass  ちょっと思い付いてパソコン（Ubuntu 機）で繋ごうとか考えてしまったのが運の尽き（今までは Android タブレットで繋いでた）。\nで，ヘッドセットを繋ぐ Bluetooth アダプタは勤務先に置きっぱなしにしてたので「じゃあ家電量販店で買ってしまうか」と読書会イベント当日の午前中に徒歩圏内の家電量販店に出掛けたわけさ（田舎の「徒歩圏内」は広い。片道5〜10kmくらい？）。\nしかも，考えたら Web カメラも必要だし，セキュリティ・リスクも考えたら USB ハブもスイッチ付きにしたい。 というわけで以下を購入した。\n  エレコム WEBカメラ UCAM-C750FBBK マイク内蔵 フルHD 1080p 30FPS 500万画素 高精細ガラスレンズ ケーブル長1.5m ブラック エレコム (Release 2018-01-26) Personal Computers B078J9MR75 (ASIN), 4953103333932 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  家電量販店で買ったのは失敗だったが，製品自体に不満はない。 Web ミーティングに使うだけなら200万画素でよかったかも。選ぶならフレームレートで選ぶべきだったね。\nreviewed by Spiegel on 2021-08-07 (powered by PA-APIv5)\n   エレコム Bluetooth USBアダプタ Class2 Windows10対応 LBT-UAN05C2/N エレコム (Release 2016-07-25) Personal Computers B01K8XRQ6O (ASIN), 4953103278165 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  家電量販店で買ったのは失敗だった。何故か Bluetooth 4 のアダプタしかなかったんだよ。とりあえず，問題なく使えはする。あとで Bluetooth 5 に買い直そう。\nreviewed by Spiegel on 2021-08-07 (powered by PA-APIv5)\n   エレコム USB3.0 ハブ 4ポート バスパワー マグネット付 MacBook / Surface Pro / Chromebook他 ノートPC Nintendo Switch対応 ブラック U3H-S418BBK エレコム (Release 2016-11-06) Personal Computers B01MQDYCB0 (ASIN), 4953103277243 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  家電量販店で買ったのは失敗だったが，製品自体に不満はない。ポートごとにスイッチが入ってるのが欲しかったのよ。\nreviewed by Spiegel on 2021-08-07 (powered by PA-APIv5)\n いや，これ， Amazon で買えば8千円ほどだったのに（Prime 会員なので送料無料），家電量販店で買ったから諭吉先生がまるっと飛んでいったぞ。 ホンマ，家電量販店で買うと碌なことにならないな。 いや，我ながら魔が差したとしか思えない。 なにやってんだ，私 orz\nもう二度としない (今度はもっと上手くやる) 。 といいつつ，またやらかすんだろうなぁ。 ヒトとは何度でも間違う生き物である。\nちなみに上の機器でちゃんと Zoom 接続できた。 Zoom アプリは使わず（Linux 版のアプリがあるかどうかも知らないが） Firefox のプライベートウィンドウで Zoom サイトを開いて問題なくサインインできた。 次回以降もこれで行こう。\n第15回 読書会の感想 閑話休題 (それはさておき)  読書会の感想だが，今回もなかなか面白かった。\n「参照型」などない 『プログラミング言語Go』ではポインタ，スライス，マップ，チャネル，関数の各型を「参照型」と呼んでいるが “The Go Programming Language Specification” (以降 \u0026ldquo;Golang Specs” と略称する) には「参照型」に相当する記述はない。 Go には C++ や Java で言うところの「参照（reference）」の仕組みは持っていない。 あるのはポインタを使った直接的なアドレッシングである。 Interface 型のようなボックス化（boxing）の仕組みでさえポインタで操作するのだ。\n私はぺーぺーの新人の頃に アセンブラ→C言語 とアドレッシングについて叩き込まれたので今更 Go のポインタに躓くことはないが，慣れてない人はやっぱ戸惑うよねぇ。\nnew など要らぬ？ 私は C++ や Java から来たということもあり，最初の頃は new() 関数を多用していた。 たとえば可変長バッファの bytes.Buffer を生成する際も\nbuf := new(bytes.Buffer) と書かいていたが，これはリテラル表現を使って\nbuf := \u0026amp;bytes.Buffer{} と書いても全く同じなのだ。 これを知ってからは new() 関数はほぼ使わなくなった（古いコードには残ってるがw）。\nもっと言うと new() 関数の機能は\nThe built-in function new takes a type T, allocates storage for a variable of that type at run time, and returns a value of type *T pointing to it. The variable is initialized as described in the section on initial values. via The Go Programming Language Specification  であって，割り当てる領域がヒープであるとは記されてないんだよね。 ある関数スコープ内でのみ生成・利用されるインスタンスであれば new() 関数で生成してもスタック上に割り当てられるかもしれない。 インスタンスがどこに生成されるかはコンパイル時の最適化で決まる。\nとするとますます new() 関数は要らない子になってしまう。 ただし Generics が正式に実装されると new() 関数の使いみちが増えるんじゃないか，ということらしい。\n「名前付き型」はなくなった 『プログラミング言語Go』2.5章には\n type 宣言は、既存の型と同じ基底型（underlying type）を持つ新たな名前付き型（named type）を定義します 『プログラミング言語Go』2.5章より  と書かれてある。 たとえば src/syscall/syscall_unix.go の\ntype Errno uintptr みたいな感じ。\nでも Go 1.9 で型エイリアス（type alias）がサポートされたことで「名前付き型」という文言は Golang Specs からなくなったんだそうな。 ちなみに型エイリアスは，たとえば golang.org/x/sys/unix パッケージで\n// Copyright 2018 The Go Authors. All rights reserved. // Use of this source code is governed by a BSD-style // license that can be found in the LICENSE file.  //go:build (aix || darwin || dragonfly || freebsd || linux || netbsd || openbsd || solaris || zos) \u0026amp;\u0026amp; go1.9 // +build aix darwin dragonfly freebsd linux netbsd openbsd solaris zos // +build go1.9  package unix import \u0026#34;syscall\u0026#34; type Signal = syscall.Signal type Errno = syscall.Errno type SysProcAttr = syscall.SysProcAttr みたいに定義されているやつ。 文字通りの別名定義で「新たな型」でなく「全く同じ型」として扱うことができる。\nレキシカルブロックの罠 『プログラミング言語Go』2.7章では { ... } 等で囲まれた記述ブロックをレキシカルブロック（lexical block）と呼んでいる（厳密にはちょっと違うが）。 で，レキシカルブロック間が親子関係にあるとき，親が宣言する変数などの識別名を子が上書き再宣言して親の識別子を隠蔽することができる。 いわゆる「シャドウイング（shadowing）」である。 なので\n func main() { x := \u0026#34;hello!\u0026#34; for i := 0; i \u0026lt; len(x); i++ { x := x[i] if x != \u0026#39;!\u0026#39; { x := x + \u0026#39;A\u0026#39; - \u0026#39;a\u0026#39; fmt.Printf(\u0026#34;%c\u0026#34;, x) // \u0026#34;HELLO\u0026#34;  } } }  『プログラミング言語Go』2.7章より  みたいな鬼畜なコードも書けてしまう（:= は代入ではなく初期化付き宣言である点に注意）。 まぁ，この程度なら（鬼畜ではあるが） main() 関数のスコープの中に収まっているのでまだマシだが，うっかり init() 関数を使った初期化で\n var cwd string func init() { cwd, err := os.Getwd() //注意: 誤り！  if err != nil { log.Fatalf(\u0026#34;os.Getwd failed: %v\u0026#34;, err) } log.Printf(\u0026#34;Working directory = %s\u0026#34;, cwd) }  『プログラミング言語Go』2.7章より  みたいなコードを書いて初期化に失敗したりするわけだ。 こわいこわい（笑）\nブックマーク  Goの言語仕様書精読のススメ \u0026amp; 英語彙集 golangではスタックとヒープを気にする必要が無い  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n   AfterShokz Aeropex 骨伝導ワイヤレスヘッドホン 防水bluetooth5.0 コズミックブラック SHENZHEN VOXTECH CO.,LTD エレクトロニクス B07RRQ59JR (ASIN), 0811071032209 (EAN), 811071032209 (UPC) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Amazon Prime Day にそそのかされて買った。反省はしない。値段並みの音質はある，と思う。耳が自由って素晴らしい。\nreviewed by Spiegel on 2021-06-24 (powered by PA-APIv5)\n "
    },
    {
      "title": "2021-08-08 のブックマーク",
      "section": "bookmarks",
      "description": "「「Windows 365 Cloud PC」が正式サービス開始。月額定額制で2vCPU/8GBメモリが5570円など」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/08/08-bookmarks/",
      "published": "2021-08-08T03:33:41+00:00",
      "update": "2021-08-08T03:36:34+00:00",
      "content": "リリース情報  Announcement of LibreOffice 7.1.5 Community - The Document Foundation Blog Firefox 90.0.1, See All New Features, Updates and Fixes Release 4.4.10_2 · zetamatta/nyagos · GitHub Release 1.58.0 · atom/atom · GitHub Hugo 0.86.0: Cascade in Config | Hugo Firefox 90.0.2, See All New Features, Updates and Fixes Hugo 0.86.1: One Bug Fix | Hugo  Release v0.86.1 · gohugoio/hugo · GitHub   Release 8.11.2 · mermaid-js/mermaid · GitHub Announcing Rust 1.54.0 | Rust Blog Release v3.7.0 · go-task/task · GitHub Release v0.87.0 · gohugoio/hugo · GitHub  Localized Time and Dates and Numbers | Hugo   Release gopls/v0.7.1 · golang/tools · GitHub  Proposal: Multi-Module Workspaces in   Release 8.11.3 · mermaid-js/mermaid · GitHub : セキュリティ・アップデートあり Release v3.5.2 · gitextensions/gitextensions · GitHub Release 8.11.4 · mermaid-js/mermaid · GitHub Release July 2021 · microsoft/vscode · GitHub  「Visual Studio Code」に内蔵サーバーでWebアプリをプレビューできる拡張機能が登場 - 窓の杜    セキュリティ＆プライバシー関連  松江市のテレワーク施設がセキュリティ認証取得　自治体挙げた取り組みの内容は：RubyきっかけにIT事業を支援 - ITmedia エンタープライズ Box、電子署名サービス「Box Sign」をリリース - ZDNet Japan Business Security Test 2021 (March - June) - AV-Comparatives GeutebrückのIPカメラに緊急の脆弱性、直ちにアップデートを | TECH+ 複数のトレンドマイクロ製企業向けエンドポイントセキュリティ製品の脆弱性に関する注意喚起 「Node.js」にセキュリティアップデート ～深刻度は「High」 - 窓の杜 パスワードの保管方法トップは「紙に書き残す」\u0026ndash;Dropbox Japan調査 - ZDNet Japan : 神に書き写すこと自体は間違いじゃないんだけどねぇ CORSの仕様はなぜ複雑なのか 夏休みにおける情報セキュリティに関する注意喚起：IPA 独立行政法人 情報処理推進機構 ‘-‘ という名前の、中身が無いのに70万回ダウンロードされてる謎のnpmパッケージ – 秋元@サイボウズラボ・プログラマー・ブログ 【公式】暗号化ソフトFileCapsule（ファイルカプセル） : Windows 版と macOS 版がある 米国家安全保障局、「Kubernetes」ユーザー向けのセキュリティ強化ガイダンス公開 - ZDNet Japan 数百万の制御システムに影響も、組み込みTCP/IPスタック「NicheStack」に脆弱性：IoTセキュリティ - MONOist エストニアで発生した顔写真データの違法ダウンロードについてまとめてみた - piyolog Webスケールの脆弱性調査が可能なオープンソースツール「WARCannon」が公開：Black Hat USA 2021 - ＠IT 警視庁職員の不正アクセス事案についてまとめてみた - piyolog アップルがメッセージアプリで送受信される性的な画像を検知し子どもと親に警告する新技術を発表 | TechCrunch Japan 「シン・テレワークシステム」にHTML5版 ～MacやChromebookからもWindowsをリモート操作可能に - 窓の杜 : 遠隔操作はセキュリティ的に鬼門だと思うのだが\u0026hellip;  知財関連  Tokyo Olympics: Sony Obtains High Court Order to Prevent Piracy * TorrentFreak アバターの規約に思うこと – Hideki\u0026rsquo;s Random Stuff Japanese 「AIが発明者」裁判所が初めて認めた衝撃度 | 新聞紙学的  Linux または Ubuntu に関する話題  Ubuntu 20.10 その101 - サポート終了のお知らせ・Ubuntu 21.04へアップグレードを - kledgeb Linuxカーネル開発の第2言語にRustを採用する試み、議論の意義とこれから - ZDNet Japan  Azure や Windows に関する話題  「Microsoft 365」アプリが間もなく「IE 11」非対応に\u0026ndash;マイクロソフトがあらためて呼びかけ - ZDNet Japan ASCII.jp：Windows 10が起動しない場合の最終手段「Windows RE」の基本 (1/2) 「Windows 365 Cloud PC」が正式サービス開始。月額定額制で2vCPU/8GBメモリが5570円など － Publickey  Windows 365 Cloud PC をさわってみた マイクロソフトの「クラウドPC」こと「Windows 365」の無料トライアルが申し込み殺到で一時受付停止 | TechCrunch Japan   AzureサブスクリプションとかアカウントとかAzure ADのテナントとか (1) - Qiita  Go 言語関連  GoはいつGCするのか? ebitenでキャラクターを十字キーで動かす - Qiita goでデータベースのバックアップをとる 「みんなのGo言語 第二版」補足。Go v1.16の新機能紹介など golangではスタックとヒープを気にする必要が無い GitHub - mattn/go-zglob Goの静的解析ツールを作成した - Qiita  Goのlinter、nilassignの紹介とgolangci-lintにマージされた話   それは常用漢字ですか？ GitHub - pelletier/go-toml: Go library for the TOML file format Learning Go [Book] GoのAPIが厳格でない訳 Markdown形式の入力からtreeを出力するCLI  Goでtreeを表現する   Go 言語スプレッドシートライブラリ：Excelize 2.4.1 がリリースされました - Qiita golang.tokyo #31 【Golang】TinyGo で WebAssembly.instantiate(): Import #0 module=\u0026ldquo;wasi_snapshot_preview1\u0026rdquo; error: module is not an object or function - Qiita  Rust 言語関連  Facebook、次期ビルドシステムの開発でRust言語の採用を明らかに － Publickey  Java 言語関連  Microsoft、Apple M1向け「Java 16」を一般公開 ～ARM64版「Java 11」「Java 16」も - 窓の杜  天文関連  ニュース - 太陽系外惑星の周りに月を形成する円盤を世界で初めて発見 - アルマ望遠鏡 Why is a parsec 3.26 light-years? | Astronomy.com  その他  「Electron」のリリースサイクルが8週間ごとに ～Chrome/Edgeに歩調を合わせる - 窓の杜 立体的な表現で見やすいネットワーク図がブラウザ上で作成できる「Isoflow」 - GIGAZINE 検索可能になっていないPDFを、ScanSnap付属アプリでOCR処理をして検索可能なPDFにする方法（ScanSnapでスキャンした1ページのPDFにJPGとして追加してからOCR処理する） MIT Tech Review: 感染拡大で鳴り止まぬスマホ、英国「ピンデミック」の大混乱 Markdown を拡張する MDX はドキュメント作成の新たな可能性？ GitHub - IBM/plex: The package of IBM’s typeface, IBM Plex. : 日本語フォント登場 Google Cloud、オンプレミスのAnthos上のWindows Server Containerサポートを発表、プレビュー開始 － Publickey 円周率を求める単純抽出のモンテカルロ法をちょっといじると精度がよくなるという話をしました\u0026hellip; ついにテスラの太陽電池・エネルギー貯蔵事業が売上原価を超える、売上げ約882.6億円 | TechCrunch Japan 「パトレイバー」ACKS新商品が登場 - アキバ総研 GitHubリポジトリ連携で画像をアップロードする方法 レノボ13型Androidタブ「Yoga Tab 13」の日本版が8万7780円前後で登場、11型モデルも4万2900円前後で同時発売 | TechCrunch Japan 「Android Studio Arctic Fox」（2020.3.1）が正式リリース - 窓の杜 CSSのtext-decorationで一部のテキストだけ下線を非表示にする データベースを操作できるフリーのGUIツール  Navicat for PostgreSQL | PostgreSQL のための強力な管理ツール : 有料 Execute Query   半導体不足解消と新車需要によりフォードは2021年の利益増加を予想 | TechCrunch Japan 古いAmazon Kindleはもうすぐ3Gネットワーク接続できなくなる | TechCrunch Japan Fastly、JavaScriptエンジンをWebAssemblyで実装。CDNエッジのサーバレス環境「Compute@Edge」でJavaScriptサポート発表（訂正済み） － Publickey マテリアルデザインを簡潔に記述できる「Jetpack Compose」がバージョン1.0に到達、本番環境で安心して利用可能に － Publickey Red HatとNutanixが戦略的提携を発表。Nutanix上でRed Hat OpenShiftが優先的なKubernetes環境に － Publickey Swarmが初心者でも扱えるIoT用衛星通信デバイスのキットを発売、約5.5万円 | TechCrunch Japan : 今のところ評価用の試作機らしい js13kGames - HTML5 and JavaScript Game Development Competition in just 13 kilobytes Webアクション「部屋裏のバイテン」第16話 : ぽじとろんの竹本泉観察記 ハッカーのたのしみ―本物のプログラマはいかにして問題を解くか | ウォーレン,ジュニア,ヘンリー・S., Warren,Jr.,Henry S., 徹, 滝沢, 浩, 玉井, 貢, 鈴木, 英夫, 赤池, 毅, 葛, 順久, 藤波 |本 | 通販 | Amazon : 第2版の翻訳版はないらしい  "
    },
    {
      "title": "なぜ 2021-08-08 日曜日が「山の日」なのか？",
      "section": "remark",
      "description": "マスメディアって放火するだけなのな（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/08/august-mountain-day/",
      "published": "2021-08-08T01:11:41+00:00",
      "update": "2021-08-08T02:41:37+00:00",
      "content": "最初に言っておくと，実家に居候状態 (パラサイト・シングル) の私にテレビのチャネル権はない。 つか，飯が不味くなるので朝っぱらからワイドショウを流さないでほしいのだが\u0026hellip;\nんんっ。 それはさておき，家族が珍しく関口某のワイドショウを見ている。 私は多分10年以上ぶりに見たのだが，絵面の「お達者倶楽部」感がハンパないな。 テレビは年寄りのメディアだと言われて久しいが，アレはまさに「テレビ」を象徴する番組なのかもしれない。 長く続くわけである。 つか，散々実況番組を見ておいて（私はガン無視）また朝からオリンピック報道を見るとか，昭和の野球好きおぢさんみたいな家族だな（笑）\n昨年末に急遽決定された祝日の移動について前々から不思議に思っていたのだが，なんで山の日（8月11日）をわざわざ日曜日に移動したのだろう（ふつうに月曜日に移動すればよかったんじゃ？）。 件のワイドショウが言うには今日でオリンピックが終わるらしい。 よーやくか！ じゃなくて，もしかして，だから今日をわざわざ祝日にしたのか1？ 全く興味のないオリンピックのスケジュールなんて知らんし（笑）\nいやね。 7月22日に祝日を移動するから22日から始まると思うぢゃん，普通。 したら開会式は23日とか（当然見ない）。 そもそも，その前から日本国内で予選試合をやってたみたいだし\u0026hellip; ホンマに祝日を寄せる意味があったのだろうか？ 規定通り8月11日を祝日のままにしてくれたら憂いなく11日から夏休みだったのに（勤務先からは有給休暇とは別に夏季休暇を3日とるように言われたので12日から休みにしている。まぁ，おかげで予防接種や予後の経過観察のために有給休暇を申請しなくて済んだがw）。\n昨年は「GoToなんたら」と「コロナ」を並置するテレビにウンザリしたものだが，今年は「オリンピック」と「コロナ」の並置でますます極まってる感じ。 これ，パラリンピックでも同じことを繰り返すんだよねぇ。 「コロナ」絡みでオリンピック批判をするなら次のパラリンピック中止を提案するくらいのガッツを見せろよ。\nまぁ「感動ポルノ」「メディア・レイプ」「注目の搾取」としてのマスメディアの面目躍如というところなのだろう。 世の中には「マッチポンプ」とか「放火魔の消防士」とかいった慣用句があるが，マスメディアって放火するだけなのな（笑）\nsigh\u0026hellip;\nブックマーク  メディアは（常に）スパムか？ « マガジン航[kɔː]  参考図書   スパム[spam]:インターネットのダークサイド フィン・ブラントン (著), 生貝直人 (監修), 成原慧 (監修), 松浦俊輔 (翻訳) 河出書房新社 2015-12-25 単行本 430924744X (ASIN), 9784309247441 (EAN), 430924744X (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  とりあえず読みづらい。修飾語が多すぎるよ。ギリシア神話かっての。\nreviewed by Spiegel on 2016-12-10 (powered by PA-APIv5)\n   あとで国立天文台の記事を読んだらちゃんと書いてあった。日付だけ見て内容はスルーしてたよ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Go 1.16.7 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "競合状態でちゃんと panic になるだけマシ（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/08/go-1_16_7-is-released/",
      "published": "2021-08-07T00:59:53+00:00",
      "update": "2021-08-12T21:22:05+00:00",
      "content": "Go 1.16.7 がリリースされた。\n Go 1.16.7 and Go 1.15.15 are released  今回は1件の脆弱性修正を含んでいる。\ngo1.16.7 (released 2021-08-05) includes a security fix to the net/http/httputil package, as well as bug fixes to the compiler, the linker, the runtime, the go command, and the net/http package. See the Go 1.16.7 milestone on our issue tracker for details. via Release History - The Go Programming Language  CVE-2021-36221 A net/http/httputil ReverseProxy can panic due to a race condition if its Handler aborts with ErrAbortHandler, for example due to an error in copying the response body. An attacker might be able to force the conditions leading to the race condition. via Go 1.16.7 and Go 1.15.15 are released  競合状態でちゃんと panic になるだけマシ，と思うことにしよう。\n（以下未稿）\n例によって\u0026hellip; Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.16.7.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。 以下は手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://golang.org/dl/go1.16.7.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.16.7.linux-amd64.tar.gz $ sudo mv go go1.16.7 $ sudo ln -s go1.16.7 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.16.7 linux/amd64 アップデートは計画的に。\n参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "AI が特許権を得る日",
      "section": "remark",
      "description": "機械に知財権を付与できるならバンバン機械に発明させて知的独占を意図的に潰す，みたいな戦略もあるかもしれない（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/08/patent-by-ai/",
      "published": "2021-08-02T12:40:27+00:00",
      "update": "2021-08-02T12:42:01+00:00",
      "content": "Twitter の TL で見かけた記事。\n 「AIが発明者」裁判所が初めて認めた衝撃度 | 新聞紙学的  詳しくはリンク先の記事を見てもらうとして，パッと見て変だと思うよね。 だって AI を発明者と認めて特許権を付与しても主張・行使できないぢゃん。 その辺どうなってるかというと\n AI「ダバス」が発明者だとすれば、特許を受ける権利はAIが持つことになるが、テイラー氏はその権利を譲渡されたとして、出願人になっている 「AIが発明者」裁判所が初めて認めた衝撃度より  ということらしい。 こんなロジックを持ち出した理由は以下の通り。\n オーストラリア連邦地裁のビーチ氏が認定したように、テイラー氏らが主張するのは、人が関与しない自律的なAI主導の発明で、AIが発明者としては認められない場合、特許性のある発明が「発明者不在」として拒否されるリスクがある、という点だ 「AIが発明者」裁判所が初めて認めた衝撃度より  「誰のものでもない」ものを機械が「発明」したとして，その機械の所有者が権利をガメるというのはアリなんだろうか。 新手のジャイアンか（笑）\n記事中に登場する「自律」という単語で思い出すのは4年前に書いた読書感想文だ。\n 『シンギュラリティの神話』を読む  この中で「自立」と「自律」の違いについて\n 自立とは、仮想代理人ソフトウェアであるところのエージェントが自ら動き、誰の力も借りずに意思決定できることを言う。 […] 一方、自律というのは哲学的な意味であり、自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができることをいう。 そろそろ、人工知能の真実を話そうより  と紹介している。 そして，この定義でいくと現代において「自律」機械なるものは未だ登場していないことになる。 そうすると，最初の記事が指しているものは「自立」機械に過ぎないということになるが，ただの「自立」機械に権利を付与するのはやっぱり変な話に思える。\nAI というバズワードを持ち出すまでもなく，自動作画とか自動作曲とかいった「自動機械」（ソフトウェアを含む）は昔からあって，この「自動機械」が創り出す表現なりアイデアなりが誰（何）に帰属するかについてもよく議論にのぼる。\nたとえば，著作権に関しては\n これに対する国際的な通説は「人がコンピューターを道具として使えば著作物」。ただ、創作の主体はあくまで人でなければならない。これは、人がカメラ（という道具）を使って撮影した作品を著作物として扱う考えと近い。逆に、人が主体とならず、ボタン1個で生成されるような楽曲は、著作物ではないとされてきた。\nよって、「AI生成物は著作物ではない」というのが、日本における支配的な通説である。\n AIが作ったコンテンツの著作権はどうなる？--福井弁護士が解説する知財戦略 - CNET Japanより  みたいな話もある。 ただし，特許権については先行者優位性の問題があり「先に機械に発明されたせいで人間側の優位性が潰されるのはかなわん」というのは心情的には分からないでもない。\nあるいは，機械に知財権を付与できるならバンバン機械に発明させて知的独占を意図的に潰す，みたいな戦略もあるかもしれない（笑） そういやグレッグ・イーガンの『万物理論』では，最終的に万物理論の論文を書き上げるのは AI だったな。\n参考図書   そろそろ、人工知能の真実を話そう (早川書房) ジャン＝ガブリエル ガナシア (著), 小林 重裕・他 (翻訳), 伊藤 直子 (監修) 早川書房 2017-05-25 (Release 2017-05-31) Kindle版 B071FHBGW8 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  シンギュラリティは起きない。\nreviewed by Spiegel on 2016-07-02 (powered by PA-APIv5)\n   〈反〉知的独占　―特許と著作権の経済学 ミケーレ・ボルドリン (著), デイヴィッド・Ｋ・レヴァイン (著), 山形浩生 (翻訳), 守岡桜　(翻訳) NTT出版 2010-10-22 単行本 4757122349 (ASIN), 9784757122345 (EAN), 4757122349 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  「知的財産権は、人類進歩を阻害する！」（帯文より）\nreviewed by Spiegel on 2018-11-17 (powered by PA-APIv5)\n   万物理論 (創元SF文庫) グレッグ・イーガン (著), 山岸 真 (翻訳) 東京創元社 2004-10-28 文庫 4488711022 (ASIN), 9784488711023 (EAN), 4488711022 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  グレッグ・イーガンの名作。これも singularity を巡る物語だな。\nreviewed by Spiegel on 2017-09-18 (powered by PA-APIv5)\n "
    },
    {
      "title": "十干十二支を数え上げるパッケージを作ってみた",
      "section": "release",
      "description": "検算には，若い頃に買った『新こよみ便利帳』に載っていた表を使った。 何でも取っておくものである（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/07/japanese-zodiac/",
      "published": "2021-07-31T07:46:36+00:00",
      "update": "2021-08-12T21:22:05+00:00",
      "content": "夏の終りの土用の丑の日に\n 土用の丑の日なので\u0026hellip;  という記事を Zenn に上げたが，調子に乗って Go パッケージ化してみた。\n spiegel-im-spiegel/jzodiac: Japanese Zodiac  これを使って，たとえば\n// +build run  package main import ( \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/spiegel-im-spiegel/jzodiac\u0026#34; ) func main() { flag.Parse() args := flag.Args() if len(args) \u0026lt; 1 { fmt.Fprintln(os.Stderr, os.ErrInvalid) return } for _, s := range args { t, err := time.Parse(\u0026#34;2006-01-02\u0026#34;, s) if err != nil { fmt.Fprintln(os.Stderr, err) continue } kan, shi := jzodiac.ZodiacYearNumber(t.Year()) fmt.Printf(\u0026#34;Year %v is %v%v\\n\u0026#34;, t.Year(), kan, shi) kan, shi = jzodiac.ZodiacDayNumber(t) fmt.Printf(\u0026#34;Day %v is %v%v\\n\u0026#34;, t.Format(\u0026#34;2006-01-02\u0026#34;), kan, shi) } } というコードを組めば\n$ go run sample.go 2021-07-28 Year 2021 is 辛丑 Day 2021-07-28 is 丁丑 という感じに年と日の干支を取得できる。 ちなみに月の干支は旧暦と連動しているので，今回は実装していない。\n検算には，若い頃に買った『新こよみ便利帳』に載っていた表を使った。 何でも取っておくものである（笑）\n参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n   新こよみ便利帳―天文現象・暦計算のすべて 暦計算研究会 (編集) 恒星社厚生閣 1991-05-01 単行本 4769907001 (ASIN), 9784769907008 (EAN), 4769907001 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  今となっては古い内容だが，暦や天体位置の一覧表が載っていて当時はそれなりに役に立った。\nreviewed by Spiegel on 2021-07-31 (powered by PA-APIv5)\n "
    }
  ]
}
