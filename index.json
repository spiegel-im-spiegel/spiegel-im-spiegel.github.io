{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "2020-04-26 のブックマーク",
      "section": "bookmarks",
      "description": "「Announcing Rust 1.43.0」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/04/26-bookmarks/",
      "published": "2020-04-26T08:07:27+00:00",
      "update": "2020-04-26T08:07:41+00:00",
      "content": "リリース情報  Release v3.000 · googlefonts/Inconsolata · GitHub Announcing Rust 1.43.0 | Rust Blog Hugo 0.69.1: A couple of Bug Fixes | Hugo Hugo 0.69.2: A couple of Bug Fixes | Hugo  セキュリティ＆プライバシー関連  Zoom、中国を経由しないルーティングを実装。有償ユーザーは地域設定可能に - PC Watch California Needlessly Reduces Privacy During COVID-19 Pandemic - Schneier on Security 表現の自由に不可欠な「匿名でいる権利」 | P2Pとかその辺のお話R RemoteWorksのシステム障害をまとめてみた - piyolog テレワークを行う際のセキュリティ上の注意事項：IPA 独立行政法人 情報処理推進機構 Nintendo Switchに必須の「ニンテンドーアカウント」で不正ログイン被害が続発、任天堂は二段階認証を有効にすることを公式に推奨 - GIGAZINE OpenSSL の脆弱性対策について(CVE-2020-1967) ：IPA 独立行政法人 情報処理推進機構  OpenSSL の脆弱性 (CVE-2020-1967) に関する注意喚起   Another Story of Bad 1970s Encryption - Schneier on Security iPhoneのメールアプリの脆弱性を狙うゼロクリック攻撃についてまとめてみた - piyolog Global Surveillance in the Wake of COVID-19 - Schneier on Security ニンテンドーアカウントを狙った不正ログインについてまとめてみた - piyolog  天文関連  「オウムアムア」は破壊された天体の破片だったとする研究成果が発表される | sorae 宇宙へのポータルサイト  その他  Newsboat, an RSS reader 「Python 2.7.18」がリリース ～「Python 2」シリーズの最終版 - 窓の杜 GitLab、有償版の機能をオープンソースへ移植すると発表。カンバン表示やカナリーデプロイ、複数のKubenretesクラスタの使い分けなど18機能 － Publickey パッチ盤からケーブルを引っこ抜いてしまいCloudflareに障害発生。ケーブルにラベリングされておらずどれを戻すべきかすぐに分からず － Publickey GitHub、npmの買収完了を発表。npmレジストリ基盤とプラットフォームへの投資など強化 － Publickey 最近知ったこと(AWS FireLens編) - gitkadoの日記 好みの言語でIaCできるPulumでGoや.NETが使えるように、構成対象も拡張 | TechCrunch Japan  "
    },
    {
      "title": "Ubuntu 20.04 にアップグレードする",
      "section": "release",
      "description": "よーやく GnuPG/Libgcrypt のバージョンが上がったよ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/04/upgrade-ubuntu-20_04/",
      "published": "2020-04-26T07:58:37+00:00",
      "update": "2020-04-26T07:59:13+00:00",
      "content": "Ubuntu 20.04 がリリースされた。 20.04 は長期サポート版で2025年4月までサポートが有効である。\n Ubuntu 20.04 LTS arrives | Ubuntu FocalFossa/ReleaseNotes - Ubuntu Wiki  19.10 または長期サポート版の 18.04 から 20.04 へのアップグレードはリリースノートを参考にするとよい。 基本的には\n$ update-manager -c -d とアップグレード・モードで GUI を起動すればよい。\nただし 20.04 では32bitアーキテクチャをサポートしなくなったので，この場合は 18.04 からアップグレードしてはいけない。\nなお，アップグレード時にサードパーアティの APT リポジトリ（git や ATOM など）が外れるので，必要ならアップグレード時に戻して更新すること。\n個別のアプリケーションについて GnuPG および Libgcrypt よーやく GnuPG/Libgcrypt のバージョンが上がったよ。\n$ gpg --version gpg (GnuPG) 2.2.19 libgcrypt 1.8.5 Copyright (C) 2019 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later \u0026lt;https://gnu.org/licenses/gpl.html\u0026gt; This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Home: /home/username/.gnupg サポートしているアルゴリズム: 公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA 暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256 ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224 圧縮: 無圧縮, ZIP, ZLIB, BZIP2 まぁ，現時点での最新版は 2.2.20 だけどね。 ちなみに GnuPG 2.2.18 から SHA-1 電子署名の扱いが変わったのでご注意を。\n GnuPG 2.2.18 リリース： さようなら SHA-1  OpenSSH および OpenSSL アップグレード直後の OpenSSH および OpenSSL のバージョンは以下のとおりだった。\n$ ssh -V OpenSSH_8.2p1 Ubuntu-4, OpenSSL 1.1.1f 31 Mar 2020 OpenSSH は 2020-02-14 にリリースされた最新版が入っているようだ。 ただ OpenSSL はこの前セキュリティ・アップデートがあったばかりなんだよねぇ。\n OpenSSL の脆弱性対策について(CVE-2020-1967) ：IPA 独立行政法人 情報処理推進機構 OpenSSL の脆弱性 (CVE-2020-1967) に関する注意喚起  まぁ，間に合わなかったんだろうけど。 CVSSv3 のスコアが 7.5 で深刻度が高いので早めの対応をお願いしたい。\n保留されているパッケージ アップグレード後に libc++1 が保留状態で残っていた。 保留状態のパッケージがある場合は\n$ sudo apt full-upgrade で保留分をまとめてアップグレードするか，個別に\n$ sudo apt install libc++1 などとすればいいようだ。\nGCC が消えとるがな アップグレードしたら何故か GCC が削除されてた orz\nしょうがないので\n$ sudo apt install build-essential したですよ。 Rust のコンパイル・リンクも問題なく動くみたいだし，いっかな1。\nちなみに GCC は 9.3 が導入される。\nATOM も削除される サードパーティ・リポジトリから ATOM をインストールしている場合，アップグレード時に APT のリストからリポジトリが外されるだけだが，今回の 20.04 へのアップグレードでは ATOM がまるっと削除される。\nただし設定やパッケージはそのまま残っているので，リポジトリを再登録してインストールし直せばおっけ。\n Installing Atom  Lollypop 音楽プレイヤー Lollypop の PPA はまだ対応してないようだ。\n 音楽プレイヤー Lollypop を試す  ブックマーク  Ubuntu 20.04 その23 - Ubuntu 20.04 LTSがリリースされました・ディスクイメージのダウンロード - kledgeb Ubuntu 20.04 その24 - Ubuntu 20.04 LTSの新機能と変更点 - kledgeb Ubuntu 20.04 その25 - Ubuntu 20.04 LTSの既知の問題 - kledgeb Ubuntu 20.04 その26 - Ubuntu 20.04.1 LTSのリリーススケジュール・Ubuntu 18.04 LTSユーザーにアップグレードパスの提供 - kledgeb Ubuntu 20.04 その27 - Qt 5.14.2の採用見送りとQt 5.12.8の採用 - kledgeb    Rust も APT で導入できるようだが，バージョンが古いので，最新版が必要なら APT は使わないほうがよい。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Go 言語でもグラフを描きたい！",
      "section": "golang",
      "description": " Gonum は本来，数値計算パッケージなのだが plot パッケージを使って簡単なグラフを描くこともできるらしい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/chart-with-golang/",
      "published": "2020-04-25T11:48:53+00:00",
      "update": "2020-04-25T11:51:05+00:00",
      "content": "いや，決まったデータに対して棒グラフとか折れ線グラフとか簡単に描けないかなぁ，と思っただけなんスけどね。 ぶっちゃけ「グラフを描く」だけなら，それこそ gnuplot で必要十分なんだけど，今回もお遊びということで。\nとはいえ自前でコードを書くのはアレなので，なにか手頃なパッケージはないかなぁ，とググってみたら Gonum ってのがいいらしい。 Gonum は\nGonum contains libraries for matrices and linear algebra; statistics, probability distributions, and sampling; tools for function differentiation, integration, and optimization; network creation and analysis; and more. via Gonum  とある通り，本来は数値計算パッケージなのだが， plot パッケージを使って簡単なグラフを描くこともできるらしい。 どんなグラフが描けるかについては以下が参考になる。\n Example plots · gonum/plot Wiki · GitHub  試しに何か描いてみる。\n棒グラフを描いてみる まずは普通に棒グラフを描いてみよう。 ちょっと長いが，こんな感じのコードでどうだろう。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; \u0026#34;os\u0026#34; \u0026#34;gonum.org/v1/plot\u0026#34; \u0026#34;gonum.org/v1/plot/plotter\u0026#34; \u0026#34;gonum.org/v1/plot/plotutil\u0026#34; \u0026#34;gonum.org/v1/plot/vg\u0026#34; \u0026#34;gonum.org/v1/plot/vg/draw\u0026#34; ) type CaseData struct { Date string NewCases int } var Dataset = []CaseData{ {\u0026#34;2020-04-18\u0026#34;, 628}, {\u0026#34;2020-04-19\u0026#34;, 566}, {\u0026#34;2020-04-20\u0026#34;, 390}, {\u0026#34;2020-04-21\u0026#34;, 368}, {\u0026#34;2020-04-22\u0026#34;, 377}, {\u0026#34;2020-04-23\u0026#34;, 423}, {\u0026#34;2020-04-24\u0026#34;, 469}, } func main() { //import data \tlabelX := []string{} dataY := plotter.Values{} for _, d := range Dataset { labelX = append(labelX, d.Date) dataY = append(dataY, (float64)(d.NewCases)) } //new plot \tp, err := plot.New() if err != nil { fmt.Fprintln(os.Stderr, err) return } //new bar chart \tbar, err := plotter.NewBarChart(dataY, vg.Points(20)) if err != nil { fmt.Fprintln(os.Stderr, err) return } bar.LineStyle.Width = vg.Length(0) bar.Color = plotutil.Color(2) //plotutil.SoftColors[2] \tbar.Offset = 0 bar.Horizontal = false p.Add(bar) //legend \tp.Legend.Add(\u0026#34;New confirmed cases by date\u0026#34;, bar) p.Legend.Top = true //top \tp.Legend.Left = false //right \tp.Legend.XOffs = 0 p.Legend.YOffs = -10 //labels of X \tp.NominalX(labelX...) p.X.Label.Text = \u0026#34;Date\u0026#34; p.X.Padding = 0 p.X.Width = p.Y.Width p.X.Tick.Label.Rotation = math.Pi / 2.5 p.X.Tick.Label.XAlign = draw.XRight p.X.Tick.Label.YAlign = draw.YCenter //labels of Y \tp.Y.Label.Text = \u0026#34;Cases\u0026#34; p.Y.Padding = 0 p.Y.Min = 0 p.Y.Max = 800 //title \tp.Title.Text = \u0026#34;Confirmed COVID-2019 Cases in Japan\u0026#34; //output image \tif err := p.Save(15*vg.Centimeter, 15*vg.Centimeter, \u0026#34;bar-chart-1.png\u0026#34;); err != nil { fmt.Fprintln(os.Stderr, err) return } } 実行結果はこんな感じ。\n bar-chart-1.png  Gonum でも日本語を使いたい plot/vg パッケージにはいくつかのフリー・フォントが含まれている。 どのようなフォントが使えるかについては vg.FontMap を参照すればよい。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;gonum.org/v1/plot/vg\u0026#34; ) func main() { for k, v := range vg.FontMap { fmt.Println(k, \u0026#34;:\u0026#34;, v) } //Output:  //Helvetica-Oblique : LiberationSans-Italic  //Helvetica-BoldOblique : LiberationSans-BoldItalic  //Times-Italic : LiberationSerif-Italic  //Courier : LiberationMono-Regular  //Courier-Bold : LiberationMono-Bold  //Courier-Oblique : LiberationMono-Italic  //Helvetica : LiberationSans-Regular  //Helvetica-Bold : LiberationSans-Bold  //Times-BoldItalic : LiberationSerif-BoldItalic  //Courier-BoldOblique : LiberationMono-BoldItalic  //Times-Roman : LiberationSerif-Regular  //Times-Bold : LiberationSerif-Bold } たとえば，先程のコードに\n//default font plot.DefaultFont = \u0026#34;Courier\u0026#34; plotter.DefaultFont = \u0026#34;Courier\u0026#34; を追加すれば\n bar-chart-2.png  という感じに既定フォントを入れ換えることができる。\nplot/vg パッケージに含まれるフォントは当然ながら日本語の字体を含んでいない。 日本語が使いたいのであれば，別途日本語フォントを読み込む必要がある1。 こんな感じ。\n//import japanese fonts b, err := ioutil.ReadFile(\u0026#34;/usr/local/texlive/2020/texmf-dist/fonts/truetype/public/ipaex/ipaexg.ttf\u0026#34;) if err != nil { fmt.Fprintln(os.Stderr, err) return } ft, err := truetype.Parse(b) if err != nil { fmt.Fprintln(os.Stderr, err) return } fontName := \u0026#34;ipaex\u0026#34; vg.AddFont(fontName, ft) //default font plot.DefaultFont = fontName plotter.DefaultFont = fontName 今回は TeX Live 2020 に収録されている IPAex フォントを流用してみた。 これを使って，更にラベルのいくつかを日本語に置き換えたのがこちら。\n bar-chart-3.png  またグラフの各要素に対して個別にフォントを指定するのであれば\n//set fonts font, err := vg.MakeFont(fontName, 10) if err != nil { fmt.Fprintln(os.Stderr, err) return } p.Title.Font = font p.X.Label.Font = font p.Y.Label.Font = font p.X.Tick.Label.Font = font p.Y.Tick.Label.Font = font p.Legend.Font = font のように書ける。\nフォントの読み込みには github.com/golang/freetype/truetype パッケージを使っているのだが，どうも TTC (TrueType Collections) ファイルには対応していない模様。 たとえば Ubuntu 19.10 に収録されている NOTO フォントを使おうとしたが\nb, err := ioutil.ReadFile(\u0026#34;/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc\u0026#34;) if err != nil { fmt.Fprintln(os.Stderr, err) return } ft, err := truetype.Parse(b) if err != nil { fmt.Fprintln(os.Stderr, err) //Output: freetype: invalid TrueType format: bad TTF version  return } 実行時エラーになってしまった。 ちなみに OTF ファイルにも対応してない。 まぁ，文章を書くんじゃないから IPA フォントでも十分だよね。\nブックマーク  gonum · GitHub Golangで棒グラフを描く - 逆さまにした Golangでローソク足チャートを描くパッケージを書いた - 逆さまにした Golangでグラフを描く - Qiita Go言語で折れ線グラフや棒グラフを描く - Qiita TeX Live 2020 へのアップグレード  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n   OS のフォント・キャッシュが使えればいいんだけど plot/vg パッケージ単体では無理みたい。どなたかいい方法があれば教えてください。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Go Playground でお絵描き",
      "section": "golang",
      "description": "今回はストレス発散な話。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/imaging-with-go-playground/",
      "published": "2020-04-24T05:33:05+00:00",
      "update": "2020-04-24T05:33:18+00:00",
      "content": "全国非常事態宣言の折，皆様いかがお過ごしでしょうか。 完全失業中の私は，家族からは白い目で見られ，かといって気晴らしの外出も自粛ムードでままならず，涙目状態です。 どなたか松江で仕事ください。\nというわけで，今回はストレス発散な話。 つかですね，\n The Go Playgroundの実行結果に画像を出力する - My External Storage  という記事を見て自分でも試してみようかな，と。\nGo Playground で Display image を選択すると以下のコードが表示され，実行すると favicon 画像データが表示される。\n Display image: The Go Playground  画像表示の核心部分は以下のコードのようだ。\n// displayImage renders an image to the playground\u0026#39;s console by // base64-encoding the encoded image and printing it to stdout // with the prefix \u0026#34;IMAGE:\u0026#34;. func displayImage(m image.Image) { var buf bytes.Buffer err := png.Encode(\u0026amp;buf, m) if err != nil { panic(err) } fmt.Println(\u0026#34;IMAGE:\u0026#34; + base64.StdEncoding.EncodeToString(buf.Bytes())) } image.Image インスタンスを PNG 形式でエンコードし，さらに BASE64 形式で文字符号化する。 これに \u0026quot;IMAGE:\u0026quot; を頭にくっつけて「表示」すればいいようだ。 当然ながら Go Playground 特有の機能なので，他の環境では機能しない（機能されては困るw）。\nリモートのファイルを表示できれば面白かったのだが，残念ながら Go Playground では TCP/IP によるリモートアクセスが潰されている（まぁアクセスできたら踏み台し放題になっちゃうからしないんだろうけど）。\nそこで画像データをあらかじめ文字列符号化してソースコードに埋め込めば\nvar imageFromBase64 = `...` func getimage() (image.Image, error) { img, _, err := image.Decode(base64.NewDecoder(base64.StdEncoding, strings.NewReader(imageFromBase64))) return img, err } func main() { img, err := getimage() if err != nil { fmt.Fprintln(os.Stderr, err) return } displayImage(img) } てな感じで任意の画像を表示できるだろう1。 たとえば，こんな感じ。\n Display image: The Go Playground  ここで画像データのスケール変換をやってみる。 以前書いた「Go 言語で画像のサイズ変更：定義済み draw.Scaler の比較」を参考に main() 関数を以下のように書き換える。\nfunc scale(src image.Image, rect image.Rectangle, scaler draw.Scaler) image.Image { dst := image.NewRGBA(rect) scaler.Scale(dst, rect, src, src.Bounds(), draw.Over, nil) return dst } func main() { img, err := getimage() if err != nil { fmt.Fprintln(os.Stderr, err) return } //scale down \tdisplayImage(scale(img, image.Rect(0, 0, 80, 80), draw.NearestNeighbor)) } いちばん（速くて）変換性能が悪い draw.NearestNeighbor を使ってみた（笑）\n結果はこんな感じ。\n Display image: The Go Playground  よーし，うむうむ，よーし。\nブックマーク  Go 言語で画像のサイズを変更する  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n   大きな画像を Go Playground で表示しようとすると失敗（タイムアウト？）する場合がある。また複数の画像は表示できないっぽい。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Git v2.26.2 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": " 前回の CVE-2020-5260 が直りきってなかったってことでいいのかな？",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/04/git-2_26_2-is-released/",
      "published": "2020-04-21T00:12:19+00:00",
      "update": "2020-04-21T07:42:22+00:00",
      "content": "Git v2.26.2 を含む複数のバージョンがリリースされた。\n [Announce] Git v2.26.2 and others  対象となるのは 2.17.x から 2.26.x までの各マイナーバージョン。 前回の CVE-2020-5260 が直りきってなかったってことでいいのかな？\nThese releases address the security issue CVE-2020-11008, which is similar to the recently addressed CVE-2020-5260. via Git v2.26.2 and others  CVE-2020-5260 と同様ということは深刻度も「緊急」ちうことかな。 CVE-2020-5260 については，前のリリース記事を参考にどうぞ。\nCVE-2020-11008 未稿\nアップデートは\u0026hellip; Ubuntu であれば PPA 版リポジトリを利用することをおすすめする。\n PPA から Git をインストールする  アップデートは計画的に。\nブックマーク  Release Git for Windows 2.26.2 · git-for-windows/git · GitHub  "
    },
    {
      "title": "2020-04-18 のブックマーク",
      "section": "bookmarks",
      "description": "「GitHub、チームでの利用も無料に。プライベートリポジトリ数も制限なく、チームディスカッション、ActionsによるCI/CDも可能」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/04/18-bookmarks/",
      "published": "2020-04-18T01:28:48+00:00",
      "update": "2020-04-18T01:29:14+00:00",
      "content": "リリース情報  Hugo 0.69.0 allows you to delay resource processing to after the build, the prime use case being removal of unused CSS. | Hugo LibreOffice 6.4.3 available for download - The Document Foundation Blog  セキュリティ＆プライバシー関連  Contact Tracing COVID-19 Infections via Smartphone Apps - Schneier on Security 国内高校の半数が利用するClassiの不正アクセスについてまとめてみた - piyolog Intel、2020年4月のセキュリティアドバイザリを公開 ～NUCのファームフェアなどに問題 - 窓の杜  天文関連  肉眼で見える可能性のアトラス彗星、核の崩壊が確認される | sorae 宇宙へのポータルサイト  知財関連  COVID-19 \u0026lsquo;Lockdowns\u0026rsquo; Directly Impacted Torrent Download Numbers in Several Countries * TorrentFreak 「Instagramの埋め込みは著作権侵害に当たらない」という判決が下る - GIGAZINE  Linux または Ubuntu に関する話題  Ubuntu 19.10 その165 - Snap Storeからインストール可能なアプリ5選 - kledgeb  その他  Google、SRE本の第三弾「Building Secure and Reliable Systems」を無料公開 － Publickey Status of LibreOffice for Android and iOS - The Document Foundation Blog jQueryが久しぶりにバージョンアップ、「jQuery 3.5.0」に。セキュリティフィクスによる破壊的変更あり － Publickey IBMら、不足するCOBOLプログラマーの確保を支援\u0026ndash;米失業保険申請の急増で - ZDNet Japan パンデミックから命を救う「修理する権利」 | P2Pとかその辺のお話R この困難な時期に文化を共有するということ | P2Pとかその辺のお話R KubernetesのノードとしてWebAssemblyランタイムを用いる「Krustlet」、マイクロソフトが公開 － Publickey 最近知ったこと(Amazon RDS Proxy編) - gitkadoの日記 GitHub、チームでの利用も無料に。プライベートリポジトリ数も制限なく、チームディスカッション、ActionsによるCI/CDも可能 － Publickey 「Unicode 14.0」のリリースは6カ月延期 ～新型コロナウイルスの影響がボランティアを直撃 - 窓の杜  "
    },
    {
      "title": "TeX Live 2020 で原ノ味フォントを使う",
      "section": "remark",
      "description": "TeX Live 2020 で原ノ味フォントが正式に組み込まれ日本語の既定フォントになったようだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/04/haranoaji-fonts-with-texlive-2020/",
      "published": "2020-04-17T05:34:30+00:00",
      "update": "2020-04-17T05:36:48+00:00",
      "content": "原ノ味フォントは Adobe と Google が共同開発している「源ノ」フォントからの派生フォントで， $\\mathrm{\\TeX}$/$\\mathrm{\\LaTeX}$ において日本語を扱いやすいようチューニングされているらしい。 ちなみに「源ノ」フォントと同じく SIL Open Font License 1.1 で提供されている。 ありがたや。\nTeX Live 2020 で原ノ味フォントが正式に組み込まれ日本語の既定フォントになったようだ。 ただし 2019 およびそれ以前からアップグレードした場合は\n$ kanji-config-updmap status CURRENT family for ja: ipaex (variant: \u0026lt;empty\u0026gt;) Standby family : haranoaji Standby family : ipa のように以前の設定を引き継いでいるため，原ノ味フォントを使うなら手動で設定変更する必要がある1。\n$ kanji-config-updmap-sys --jis2004 haranoaji これで設定が\n$ kanji-config-updmap status CURRENT family for ja: haranoaji (variant: -04) Standby family : haranoaji Standby family : ipa Standby family : ipaex となった。\nupLaTeX による組版 まずは $\\mathrm{up\\LaTeX}$ で組版を行い，フォントの違いを調べてみる。\n入力テキスト $\\mathrm{up\\LaTeX}$ 用に入力テキストを用意する。 こんな感じ。\n\\documentclass[uplatex,a4paper]{jsarticle} \\usepackage[deluxe]{otf} \\begin{document} {\\mcfamily\\ltseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・細字）}\\par {\\mcfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・中字）}\\par {\\mcfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・太字）}\\par {\\gtfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・中字）}\\par {\\gtfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・太字）}\\par {\\gtfamily\\ebseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・極太）} \\end{document} これを uplatex コマンドで処理する。\n組版結果（IPAex フォント使用） まずは IPAex フォントで組版した結果がこちら。\n upLaTeX 出力結果（IPAex フォント使用）  IPAex フォントはウェイトのバリエーションがないためこんな感じになる。\n組版結果（原ノ味フォント使用） 原ノ味フォントを使った組版結果がこちら。\n upLaTeX 出力結果（原ノ味フォント使用）  各ウェイト毎にフォントが対応しているのが分かるだろうか。 あと，絵文字の字形が違うんだけど，いいのか？\nLuaLaTeX による組版 今度は $\\mathrm{Lua\\LaTeX}$ で試してみる。\n入力テキスト \\documentclass{ltjsarticle} \\usepackage[haranoaji,deluxe]{luatexja-preset} \\usepackage{luatexja-otf} \\begin{document} {\\mcfamily\\ltseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・細字）}\\par {\\mcfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・中字）}\\par {\\mcfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・太字）}\\par {\\gtfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・中字）}\\par {\\gtfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・太字）}\\par {\\gtfamily\\ebseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・極太）} \\end{document} 2行目の luatexja-preset パッケージの指定で原ノ味フォントを指定してるのがお分かりだろうか2。 これを lualatex コマンドで処理する。\n組版結果（原ノ味フォント使用） 組版結果はこちら。\n LuaLaTeX 出力結果（原ノ味フォント使用）  $\\mathrm{up\\LaTeX}$ と同等の出力になっている。 よーし，うむうむ，よーし。\nブックマーク  TeX Live 2020 released | There and back again TeX 日本語環境で「源ノ」フォントを使ってみた LuaTeX-ja に関する覚え書き  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦 (著), 黒木 裕介 (著) 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-APIv5)\n   全体設定では kanji-config-updmap-sys コマンドを，ユーザ毎の設定では kanji-config-updmap-user コマンドで使い分ける。当然ながらユーザ毎の設定のほうが優先されるのでご注意を。 \u0026#x21a9;\u0026#xfe0e;\n TeX Live 2020 の $\\mathrm{Lua\\LaTeX}$ では luatexja-preset パッケージの既定が原ノ味フォントになっているようで，フォントを指定しない場合は原ノ味フォントで組版される。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "TeX Live 2020 へのアップグレード",
      "section": "remark",
      "description": "手元の環境では973個ほど更新されたよ…",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/04/upgrade-texlive-2020/",
      "published": "2020-04-16T05:33:22+00:00",
      "update": "2020-04-16T08:00:10+00:00",
      "content": "どうやら TeX Live 2020 がリリースされたようだ。 今年は早かったな（笑）\nTeX Live 2020 is available over the Internet and (after production) on DVD. It was released on 10 April 2020, and ongoing updates are available. via TeX Live - TeX Users Group  ちうわけで，今年も TeX Live のアップグレードを行おう。 あっ，念のために言うと，今回のアップグレードは APT を使わず install-tl でインストールされていることが前提ね。\n TeX Live を Ubuntu に（APT を使わずに）導入する  前準備 まず tlmgr path add コマンドでパス設定をしている場合は\n$ sudo tlmgr path remove で設定を消しておく。\n次に 2019 の環境を 2020 へコピーする。\n$ cd /usr/local/texlive $ sudo cp -a 2019 2020 $ sudo rm 2020/tlpkg/backups/* update-tlmgr を使ってアップグレードを行う際に権限のコントロールが上手くないみたいなので 2020/ フォルダ以下のオーナーを一時的に自ユーザに書き換えておく。\n$ sudo chown -R username:username 2020 ~/.texlive2019/ ディレクトリも ~/.texlive2020/ にコピっとけばいいかな。\n$ cd ~ $ cp -a .texlive2019 .texlive2020 最後に環境変数 PATH や MANPATH 等を設定している場合はその設定を変更しておく。 たとえば /etc/profile.d/ ディレクトリに以下の内容を書いたファイル texlive-paths.sh を置いている場合\n# shellcheck shell=sh # Expand $PATH to include the directory where TeX Live applications go. texlive_path=\u0026#34;/usr/local/texlive/2019\u0026#34; texlive_bin_path=\u0026#34;${texlive_path}/bin/x86_64-linux\u0026#34; if [ -n \u0026#34;${PATH##*${texlive_bin_path}}\u0026#34; -a -n \u0026#34;${PATH##*${texlive_bin_path}:*}\u0026#34; ]; then export MANPATH=${MANPATH}:${texlive_path}/texmf-dist/doc/man export INFOPATH=${INFOPATH}:${texlive_path}/texmf-dist/doc/info export PATH=${PATH}:${texlive_bin_path} fi 2019 の部分を 2020 に置き換える。\n# shellcheck shell=sh # Expand $PATH to include the directory where TeX Live applications go. texlive_path=\u0026#34;/usr/local/texlive/2020\u0026#34; texlive_bin_path=\u0026#34;${texlive_path}/bin/x86_64-linux\u0026#34; if [ -n \u0026#34;${PATH##*${texlive_bin_path}}\u0026#34; -a -n \u0026#34;${PATH##*${texlive_bin_path}:*}\u0026#34; ]; then export MANPATH=${MANPATH}:${texlive_path}/texmf-dist/doc/man export INFOPATH=${INFOPATH}:${texlive_path}/texmf-dist/doc/info export PATH=${PATH}:${texlive_bin_path} fi 2020年版へのアップグレード ほいじゃまぁ，アップグレードしますかね。 まずは update-tlmgr による tlmgr のアップグレードから。\n$ cd /usr/local/texlive/2020 $ wget http://mirror.ctan.org/systems/texlive/tlnet/update-tlmgr-latest.sh $ sh update-tlmgr-latest.sh -- --upgrade tlmgr の動作確認をしておこう。\n$ tlmgr version tlmgr revision 54446 (2020-03-21 17:45:22 +0100) tlmgr using installation: /usr/local/texlive/2020 TeX Live (https://tug.org/texlive) version 2020 よしよし。\n次はアップグレードした tlmgr でアップデートを行う。\n$ tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet tlmgr: setting default package repository to http://mirror.ctan.org/systems/texlive/tlnet tlmgr: updating /usr/local/texlive/2020/tlpkg/texlive.tlpdb $ tlmgr update --self --all tlmgr: package repository http://ftp.yz.yamagata-u.ac.jp/pub/CTAN/systems/texlive/tlnet (verified) tlmgr: saving backups to /usr/local/texlive/2020/tlpkg/backups ... さて，お茶の時間にするか。\n\u0026hellip;手元の環境では973個ほど更新されたよ\u0026hellip;\n$\\mathrm{Lua\\TeX}$ を使う場合はフォントキャッシュのアップデートも忘れずに。\n$ luaotfload-tool -fu 最後に /usr/local/texlive/2020 ディレクトリ以下のオーナーを root に戻す。\n$ cd /usr/local/texlive $ sudo chown -R root:root 2020 更にパス設定（/usr/local/bin/ 等へシンボリック・リンクを張る）を行うなら\n$ sudo /usr/local/texlive/2020/bin/x86_64-linux/tlmgr path add とする。\n動作確認 ちょろんと動作確認しておこう。 $\\mathrm{Lua\\LaTeX}$ でね。\n$ lualatex -v This is LuaHBTeX, Version 1.12.0 (TeX Live 2020)  Execute \u0026#39;luahbtex --credits\u0026#39; for credits and version details. There is NO warranty. Redistribution of this software is covered by the terms of the GNU General Public License, version 2 or (at your option) any later version. For more information about these matters, see the file named COPYING and the LuaTeX source. LuaTeX is Copyright 2020 Taco Hoekwater and the LuaTeX Team. うお！ $\\mathrm{LuaHB\\TeX}$ ベースになってる。 どうやら $\\mathrm{Lua\\LaTeX}$ では $\\mathrm{LuaHB\\TeX}$ ベースになる模様。 $\\mathrm{Lua\\TeX}$ 自体はあるようで\n$ luatex -v This is LuaTeX, Version 1.12.0 (TeX Live 2020)  Execute \u0026#39;luatex --credits\u0026#39; for credits and version details. There is NO warranty. Redistribution of this software is covered by the terms of the GNU General Public License, version 2 or (at your option) any later version. For more information about these matters, see the file named COPYING and the LuaTeX source. LuaTeX is Copyright 2020 Taco Hoekwater and the LuaTeX Team. となる。\n以下のタイプセットも試してみるか。\n LuaLaTeX でコードを書いてみる  結果はこんな感じ。\n よーし，うむうむ，よーし。\nブックマーク  TeX Live 2020 released | There and back again trueroad/HaranoAjiFonts: 原ノ味フォント : TeX Live 2020 に組み込まれたそうな  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦 (著), 黒木 裕介 (著) 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-APIv5)\n "
    },
    {
      "title": "OpenJDK 14.0.1 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "深刻度が高いセキュリティ・アップデートも含まれているので必ず対応すること。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/04/openjdk-14_0_1-is-released/",
      "published": "2020-04-16T03:21:08+00:00",
      "update": "2020-04-16T03:50:45+00:00",
      "content": "予定通り Java 14 および LTS である Java 11 のマイナー・バージョンアップが行われた。 深刻度が高い脆弱性も含まれているので必ず対応すること。\n OpenJDK Vulnerability Advisory: 2020/04/14  以下に脆弱性の一覧を挙げておく。\n  CVE ID Component CVSSv3\nScore Affects ...   7 8 11 13 14   CVE-2020-2803 core-libs/java.nio 8.3 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2805 core-libs/java.io 8.3 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2816 security-libs/javax.net.ssl 7.5 \u0026nbsp; \u0026nbsp; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2781 security-libs/java.security 5.3 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2830 core-libs/java.util 5.3 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2767 security-libs/javax.net.ssl 4.8 \u0026nbsp; \u0026nbsp; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2800 core-libs/java.net 4.8 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2778 security-libs/javax.net.ssl 3.7 \u0026nbsp; \u0026nbsp; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2754 core-libs/javax.script 3.7 \u0026nbsp; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2755 core-libs/javax.script 3.7 \u0026nbsp; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2773 security-libs/javax.xml.crypto 3.7 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2756 core-libs/java.io:serialization 3.7 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-2757 core-libs/java.io:serialization 3.7 \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226; \u0026#8226;   CVE-2020-18197 javafx/web 8.1 \u0026nbsp; \u0026#8226; \u0026#8226; \u0026nbsp; \u0026#8226;    via OpenJDK Vulnerability Advisory: 2020/04/14  Java 10 以下 および 12, 13 は基本的にサポート期間が切れてる。 Java 11 または 14 へアップグレードするか Amazon Corretto のようなディストリビューションを利用すること。\nOpenJDK を APT で管理するメリットはないので，実行バイナリをリリースページから直接ダウンロードして配置する。\n$ cd /usr/local/src $ sudo curl \u0026#34;https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/openjdk-14.0.1_linux-x64_bin.tar.gz\u0026#34; -O $ cd .. $ sudo unlink java # 以前のバージョンの Java 環境がある場合 $ sudo tar xvf src/openjdk-14.0.1_linux-x64_bin.tar.gz $ sudo ln -s jdk-14.0.1 java $ java -version # すでに PATH が通っている場合 openjdk 14.0.1 2020-04-14 OpenJDK Runtime Environment (build 14.0.1+7) OpenJDK 64-Bit Server VM (build 14.0.1+7, mixed mode, sharing) 私としては PlantUML が動けばいいので，試しておく1。\n Factory Method Pattern  うむうむ。 ちゃんと動くな。\nブックマーク  Oracle Critical Patch Update Advisory - April 2020  Oracle Java の脆弱性対策について(CVE-2020-2803等)：IPA 独立行政法人 情報処理推進機構 2020年4月 Oracle 製品のクリティカルパッチアップデートに関する注意喚起   Java 環境のリリースとサポートに関する覚え書き  参考図書  Java言語で学ぶリファクタリング入門 結城 浩 (著) SBクリエイティブ 2007-01-26 (Release 2014-03-12) Kindle版 B00I8AT1EU (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  結城浩さんによる「リファクタリング本」の Kindle 版。意外にも Java 以外でも応用できる優れもの。\nreviewed by Spiegel on 2018-12-11 (powered by PA-APIv5)\n  増補改訂版 Java言語で学ぶデザインパターン入門 結城 浩 (著) SBクリエイティブ 2004-06-18 (Release 2014-03-12) Kindle版 B00I8ATHGW (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  結城浩さんによる通称「デザパタ本」。 Java 以外でも使える優れもの。\nreviewed by Spiegel on 2016-01-05 (powered by PA-APIv5)\n  増補改訂版 Java言語で学ぶデザインパターン入門 マルチスレッド編 結城 浩 (著) SBクリエイティブ 2004-06-18 (Release 2014-03-12) Kindle版 B00I8AT1BS (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  結城浩さんによる通称「デザパタ本」の Kindle 版。意外にも Java 以外でも応用できる優れもの。\nreviewed by Spiegel on 2018-12-07 (powered by PA-APIv5)\n   2020-04-05 に PlantUML V1.2020.6 がリリースされている。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "ハロワとコロナ",
      "section": "remark",
      "description": "この時期にお金の心配をしないで引きこもれるとか。 運がいいのか悪いのか（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/04/hello-unemployed/",
      "published": "2020-04-15T09:46:10+00:00",
      "update": "2020-04-15T10:44:06+00:00",
      "content": "さて，「天下無敵のプー太郎」としては何はともあれ年金\u0026amp;健康保険の切り替えと失業認定を受けるための諸々の手続きをしないといけないわけで，お役所巡りしましたよ。 つっかれた！\n窓口がどこも透明ビニールシートで仕切られてて，まずそこで笑っちゃったよ。 いや，笑いごっちゃないけどね。 ホンマ，このご時世に対面で働かされるお役所の職員さんには頭が下がるよ。\nちなみに待ち合いのシートも間隔があけられていて，詰め詰めにならないように調整されていた。\n今回の退職は所謂「会社都合」なのでタイムラグなしで給付が受けられる。 しかも件の感染症流行のせいで対象者への説明会も失くなったので，何にもしないで1回目の給付認定を受けられることになってしまった（通常は説明会に参加することで1回目の求職活動実績と見なされる）。\n他にも個人的な都合で色々と優遇措置を受けられることになった。 この時期にお金の心配をしないで引きこもれるとか。 運がいいのか悪いのか。 人間万事塞翁が丙午（違う）\nレッツ！ 引きこもり\nそうそう。 今回の一連の手続きでハンコは一切使いませんでした。 ハンコなんて飾りですよ，偉い人には分からんのです（笑） マイナンバーカードがあれば顔写真の提出も不要（そのためのマイナンバーカードだからね）。\nあと（昨年末のインフルエンザ流行時に買い置きしておいた）マスクの在庫が尽きそう。 まぁ，マスクこそ「健康劇場」だけどね。 マスクより手洗い励行。 タブレット共有で接触感染とか笑えん。\n"
    }
  ]
}
