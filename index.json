{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "Firge フォントを使って LuaLaTeX でコードを書く",
      "section": "remark",
      "description": "こういうのが欲しかったんだよ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/09/lualatex-with-firge-font/",
      "published": "2021-09-30T13:29:34+00:00",
      "update": "2021-09-30T13:45:02+00:00",
      "content": "テキスト・エディタやターミナル・エミュレータ用の日本語が使えるフォントとして有名な白源（HackGen）だが，個人的にどうしても思い入れがあって今まで使わなかった1。 で，たまたま作者の方の Qiita 記事を目にしたのだが\n HackGen の姉妹フォント \u0026ldquo;Firge (ファージ)\u0026rdquo; を試験的にリリースしました！\nhttps://github.com/yuru7/Firge/releases\n英数字部分に Mozilla 製 Fira Mono、日本語文字部分に HackGen と同じ源柔ゴシック（濁点等の修正も含む）、を適用しています。\nHackGen の批判的な意見として多かった以下の点を満たすことを意識しました。\n 0 はドットゼロではなくスラッシュゼロに。 | は破断線ではなく直線に。   Ricty を神フォントだと崇める僕が、フリーライセンスのプログラミングフォント「白源」を作った話 - Qiitaより  とアナウンスされていた。 ありがとう！ これが欲しかったんだよ。\nというわけで早速 Windows Terminal (+ NYAGOS) と Ubuntu 機のターミナル・エミュレータに導入した。 あっ，あとブラウザの monospace の既定フォントね2。\nちなみに Ununtu 機にフォントを入れる場合は\n   ディレクトリ 用途     /usr/share/fonts システムフォント   /usr/local/share/fonts 追加フォントをマシンで共有する場合   ~/.fonts 個人で導入する場合    のいずれかにフォントファイルをコピーして（ディレクトリを掘ってもOK）\n$ fc-cache -fv でキャッシュを更新すれば OK。 確認は\n$ fc-list | grep Firge /usr/local/share/fonts/FirgeNerd/Firge35Nerd-Regular.ttf: Firge35Nerd:style=Regular /usr/local/share/fonts/FirgeNerd/FirgeNerd-Bold.ttf: FirgeNerd:style=Bold /usr/local/share/fonts/FirgeNerd/FirgeNerd-Regular.ttf: FirgeNerd:style=Regular /usr/local/share/fonts/FirgeNerd/Firge35NerdConsole-Regular.ttf: Firge35Nerd Console:style=Regular /usr/local/share/fonts/FirgeNerd/Firge35NerdConsole-Bold.ttf: Firge35Nerd Console:style=Bold /usr/local/share/fonts/FirgeNerd/FirgeNerdConsole-Bold.ttf: FirgeNerd Console:style=Bold /usr/local/share/fonts/FirgeNerd/FirgeNerdConsole-Regular.ttf: FirgeNerd Console:style=Regular /usr/local/share/fonts/FirgeNerd/Firge35Nerd-Bold.ttf: Firge35Nerd:style=Bold とすればよい。\nで，この Firge フォントを使って $\\mathrm{Lua\\LaTeX}$ でコードを表示したいと思うよね。ね。\nというわけで試してみよう。 なお TeX Live のインストールは先日書いた「改めて TeX Live を Ubuntu に（APT を使わずに）導入する」を参照のこと。\n$\\mathrm{Lua\\LaTeX}$ でフォントを認識させるために luaotfload-tool --update でアップデートしておく。\n$ luaotfload-tool --update 念の為の確認。\n$ luaotfload-tool --fuzzy --find=\u0026#34;FirgeNerd\u0026#34; luaotfload | resolve : Font \u0026#34;FirgeNerd\u0026#34; found! luaotfload | resolve : Resolved file name \u0026#34;/usr/local/share/fonts/FirgeNerd/FirgeNerd-Regular.ttf\u0026#34; よしよし。\nシステムに Firge フォントをインストールしないのであれば $TEXMFLOCAL/fonts/ ディレクトリに適当に放り込んでおけばよい。 今回は $\\mathrm{Lua\\LaTeX}$ のみが対象なので CMAP ファイルとか面倒くさそうなのは華麗にスルーする（笑）\nなお $TEXMFLOCAL ディレクトリは kpsewhich コマンドで調べられる。\n$ kpsewhich -var-value=TEXMFLOCAL /usr/local/texlive/texmf-local ファイルを入れたら ls-R を更新するのを忘れないように。\n$ mktexlsr mktexlsr: Updating /usr/local/texlive/2021/texmf-config/ls-R... mktexlsr: Updating /usr/local/texlive/2021/texmf-dist/ls-R... mktexlsr: Updating /usr/local/texlive/2021/texmf-var/ls-R... mktexlsr: Updating /usr/local/texlive/texmf-local/ls-R... mktexlsr: Done. 念の為 kpsewhich コマンドで確認しておく。\n$ kpsewhich FirgeNerd-Regular.ttf /usr/local/texlive/texmf-local/fonts/truetype/FirgeNerd/FirgeNerd-Regular.ttf 確認したら luaotfload-tool --update も忘れないでね。\n先日 TeX Live をインストールしたときに使ったサンプルコードは以下の通り。\n\\documentclass{jlreq} \\usepackage[jis2004,deluxe]{luatexja-preset} % Japanese fonts \\setmonofont[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]{Inconsolatazi4} % use Inconsolata  \\usepackage{graphicx,xcolor} % \\usepackage{listings} \\usepackage{listings-golang} % import this package after listings \\lstset{ frame=single, basicstyle=\\small\\ttfamily, tabsize=4, commentstyle=\\color{darkgray}, keywordstyle=\\color{brown}\\bfseries, stringstyle=\\color{blue}, showstringspaces=false } \\begin{document} \\section{Go 言語による Hello World} \\begin{lstlisting}[language=Golang] package main import \u0026#34;fmt\u0026#34; func main() { for i := 0; i \u0026lt; 10; i++ { fmt.Println(\u0026#34;Hello, world\u0026#34;) //Hello, 世界 } } \\end{lstlisting} \\section{シェルスクリプト} \\begin{lstlisting}[language=sh] #!/bin/sh for i in `seq 100`; do j=\u0026#34;$i\u0026#34; if [`expr $i % 3` == 0 ]; then echo -n \u0026#39;Fizz\u0026#39;; j=\u0026#39;\u0026#39;; fi  if [ `expr $i % 5` == 0 ]; then echo -n \u0026#39;Buzz\u0026#39;; j=\u0026#39;\u0026#39;; fi echo \u0026#34;$j\u0026#34; done \\end{lstlisting} \\end{document} これの組版結果はこちら。\nsample.pdf  ここで setmonofont 指定を以下のように変更する。\n\\setmonojfont[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]{FirgeNerd} % use FirgeNerd \\setmonofont[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]{FirgeNerd} % use FirgeNerd この場合の組版結果は以下の通り。\nsample2.pdf  小文字のエルとかで比べると分かりやすいだろうか。ただ日本語は Firge フォントじゃないっぽい。\nプロパティ  これの HaranoAjiGothic-Regular は多分コードの「世界」の部分だよねぇ。理由は不明。\nついでなので HackGen フォントでも試してみようか。\n\\setmonojfont[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]{FirgeNerd} % use FirgeNerd \\setmonofont[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]{FirgeNerd} % use FirgeNerd 組版結果は以下の通り。\nsample3.pdf  これなら違いが分かりやすいかな。\nふむむー。 個人の好みの問題なんだろうけど，これなら Inconsolata でも別にいいかなぁ。 やはりターミナル・エミュレータ用と割り切って使うほうがいいか。\nブックマーク  LuaLaTeX でコードを書いてみる  参考図書   [改訂第8版]LaTeX2ε美文書作成入門 奥村晴彦 (著), 黒木裕介 (著) 技術評論社 2020-11-14 大型本 4297117126 (ASIN), 9784297117122 (EAN), 4297117126 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  2020年末に第8版が出てたのに気付かなかったよ。可能なら紙の本も買って常に側に置いておくのが吉。版元には PDF 版もある。\nreviewed by Spiegel on 2021-09-05 (powered by PA-APIv5)\n   いや，大した思い入れでもないんだけど，新人（大昔）の頃は紙のコーディング・シートで書かされたこともあって，手書きのゼロは $\\emptyset$ (empty set) なイメージなんだよねぇ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 私はテキスト・エディタは明朝体じゃないと目がしんどいので，英数字は Inconsolata だけど日本語部分は Noto Serif CJK JP にしている。どなたか明朝体の monospace を作ってください。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "「エコーチェンバーの中にいる可能性が高い」",
      "section": "remark",
      "description": "折角なので記事にしておくか。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/09/echo-chamber/",
      "published": "2021-09-28T11:13:35+00:00",
      "update": "2021-09-28T11:13:57+00:00",
      "content": "Twitter で「エコーチェンバー可視化システムβ版」なるものが流行ってたので，私も試してみた。\n診断結果は\nエコーチェンバー度：4.57 偏りが高くエコーチェンバーの中にいる可能性が高い エコーチェンバー率上位6.0% エコーチェンバーランク：261位(5076人中) とのこと。 まぁ，以下の図を見ればさもありなんという感じ。 見事に偏ってるもんなぁ。\n 一部全く関心領域外の文言も飛び交ってるが，その辺はご愛嬌というところか。 あと近年の関心領域の中心付近にいる Go 言語が何故かワードに挙がってない気がするが，動詞扱いで挙がらないとか？\nこれを見て「エコーチェンバーの中にいる可能性が高い」と言うのならその通りなのだろう。 まぁ，実際のところ Twitter の主な用途は技術系情報の収集であり，特にここ2,3年は「政治的無関心を装う」を年間目標に掲げているので，今回のコレは私の Twitter 上での活動をポジティブに評価して頂いてると好意的に解釈しておこう（笑）\nエコー・チェンバー（echo chamber）とは本来は「エコー室」とか「反響室」とかいった意味。 お風呂場で「ビバノンノン♪」と唄ってるところを想像すれば大体合ってる。 そこから転じて，狭いコミュニケーション環境で特定の考え方が反復・強化されてしまう状況を指すものらしい。 こうした言い回しは（Wikipedia によると）1990年代には既に登場していたそうで，そんなに新しい概念ではないようだ。\nまぁ，近年では「フィルターバブル」のほうがイメージしやすいかも知れない。 情報やコミュニケーションのタコ壺化はもはや「自己責任」ではないということだ。 私としては複数のメディアの間で似たような話題が巡回・強化される「情報ハウリング」に関心が移りつつあるが。\nというわけで，今日も遠吠えの聞こえない居心地のいいお風呂場でうたを唄って過ごすことにしよう（笑）\n参考文献   フィルターバブル──インターネットが隠していること (ハヤカワ文庫NF) イーライ・パリサー (著), 井口耕二 (翻訳) 早川書房 2016-03-09 文庫 4150504598 (ASIN), 9784150504595 (EAN), 4150504598 (ISBN), 9784150504595 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ネットにおいて私たちは自由ではなく，それと知らず「フィルターバブル」に捕らわれている。\nreviewed by Spiegel on 2016-05-07 (powered by PA-APIv5)\n   いい湯だな（ビバノン・ロック） ザ・ドリフターズ (メインアーティスト) Watanabe Music Publishing 2019-12-11 (Release 2019-12-11) MP3 ダウンロード B082TVZJHV (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  私はこれを聞いて大きくなりました（笑）\nreviewed by Spiegel on 2021-09-28 (powered by PA-APIv5)\n "
    },
    {
      "title": "2021-09-26 のブックマーク",
      "section": "bookmarks",
      "description": "「I Am Not Satoshi Nakamoto - Schneier on Security」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/09/26-bookmarks/",
      "published": "2021-09-26T03:52:48+00:00",
      "update": "2021-09-26T03:53:08+00:00",
      "content": "リリース情報  Release 0.20.0 · tinygo-org/tinygo · GitHub  TinyGo 0.20 で遊べるマイコンボード一覧 - sago35の日記   Release August 2021 Recovery 2 · microsoft/vscode · GitHub Release v1.0.24 · sonatype-nexus-community/nancy · GitHub Release v1.0.25 · sonatype-nexus-community/nancy · GitHub Release v0.3.0 · zetamatta/binview · GitHub  セキュリティ＆プライバシー関連  How surveillance capitalism will totally transform the domain name system | ZDNet  ブログ: 監視資本主義がDNSを完全に変える   GraphQL採用サービスで任意カラムを取得できる脆弱性を見つけた話 : GraphQL のセキュリティ管理 「Gmailを使っているとGoogleに個人情報や製品の購入情報が保存される」とユーザーから指摘が起きて大論争 - GIGAZINE 数百万のHTTPSサイトが利用するLet’s Encryptのルート証明書が期限切れ間近、古いデバイスやOSは要注意 | TechCrunch Japan グーグル広告が透明性の向上を目指し変更、ユーザーが過去30日の広告主の履歴へアクセス可能に | TechCrunch Japan  知財関連  Welcome to Walled Culture – Walled Culture  ようこそ囲い込まれたカルチャーへ―Welcome to Walled Culture | P2Pとかその辺のお話R    Linux または Ubuntu に関する話題  Linuxカーネル「Linux 5.14.6」リリース | Think IT（シンクイット） Ubuntu 18.04 その465 - Ubuntu 18.04.6 LTSがリリースされました・ディスクイメージのダウンロード - kledgeb  Go 言語関連  Goの苦手な領域 Big Sky :: Go に Fuzz testing が入った。 : これは導入したい GitHub - natefinch/lumberjack: lumberjack is a log rolling package for Go : ログファイルをローテーションさせるやつ Big Sky :: text/template と html/template に continue/break が入った。 [GORM] DefaultTableNameHandlerとTableName()を併用すると? constraints: new package · golang/go@4dd5f09 · GitHub GitHub - drakkan/sftpgo: Fully featured and highly configurable SFTP server with optional FTP/S and WebDAV support - S3, Google Cloud Storage, Azure Blob Simplified JSON Handling in Go – Alan Storm  GitHub - tidwall/sjson: Set JSON values very quickly in Go GitHub - tidwall/gjson: Get JSON values quickly - JSON parser for Go    天文関連  中秋に月を見る | 国立天文台(NAOJ) Have we detected dark energy? Cambridge scientists say it’s a possibility | University of Cambridge  ダークエネルギーを検出か？ ダークマター検出器「XENON1T」の研究成果 | sorae 宇宙へのポータルサイト https://twitter.com/Science_Release/status/1440286804138086403    その他  グーグルがインドでAndroidの独占的地位を乱用と反トラスト調査で判明 | TechCrunch Japan アップルとグーグルがロシアでの圧力に屈しクレムリン批判者の戦術的投票アプリを削除 | TechCrunch Japan Disentangling Disinformation: Not as Easy as it Looks | Electronic Frontier Foundation  偽情報（デマ）を見分けるのはあなたが思うほど簡単ではない | P2Pとかその辺のお話R   【Excel】一瞬で文字列を分割・結合！ エクセルで作業効率を上げるフラッシュフィルの使い方 - いまさら聞けないExcelの使い方講座 - 窓の杜 Docker Desktop for Linuxを開発中とDocker社が表明。有料化の発表が好評だったとして機能強化など加速 － Publickey ポケモンGOを展開するNianticが開発していた「現実世界で土地取り合戦ができるAR版カタン」の開発終了が決定 - GIGAZINE 東京大学が皮膚に貼り付ける世界最薄100ナノメートル以下の電極で1週間の心電計測に成功 | TechCrunch Japan Windows PCに安定したネイティブLinux環境を構築する方法 : 結局，物理で分けろってことなのよね - HTML: HyperText Markup Language | MDN Visual Studio 2022 Preview 4が公開。CSSの変更がすぐプレビューに反映されるホットリロードなど新機能 － Publickey ROT8000 - Schneier on Security 酔生夢死 [Javardry] : Java 製 Wizardry クローン  あのウィザードリィが無料で手軽に遊べる！Wizライクフリーゲーム「Javardry」紹介！パート1 | フリーゲーム紹介・攻略まとめ - ゲームウィキ.jp あのウィザードリィが無料で手軽に遊べる！Wizライクフリーゲーム「Javardry」紹介！パート2 | フリーゲーム紹介・攻略まとめ - ゲームウィキ.jp   SQLフォーマッターFor WEB | ドットツールズ  JSON整形 FOR WEB | ドットツールズ   Box、ISMAPに登録\u0026ndash;政府調達の対象品目に - ZDNet Japan GitHub Advisory Database now supports Rust | The GitHub Blog 組み込みエンジニアがハードウェアコンポーネントに簡単に接続するためのAPIを構築する「Luos」 | TechCrunch Japan FacebookはInstagramが10代に悪影響を及ぼすことを把握していながら子供向けアプリ立ち上げを計画、この計画はさらに有害だと考えられる | TechCrunch Japan Nutanix、仮想ネットワーク機能を正式リリース。メモリオーバーコミット機能も追加 － Publickey I Am Not Satoshi Nakamoto - Schneier on Security Go言語が好きな理由 : 視覚障害の人がどうやってコードを書いてるか ローカルマシンでDapr Docsを動作させる手順 - Qiita  "
    },
    {
      "title": "2021-09-19 のブックマーク",
      "section": "bookmarks",
      "description": "「Ent Joins the Linux Foundation」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/09/19-bookmarks/",
      "published": "2021-09-19T02:10:28+00:00",
      "update": "2021-09-19T02:11:42+00:00",
      "content": "リリース情報  nyaos.org · GitHub : NYAGOS 関連のリソースを移行したらしい  GitHub - nyaosorg/nyagos: NYAGOS - The hybrid Commandline Shell between UNIX \u0026amp; DOS GitHub - nyaosorg/go-readline-ny: Readline library for golang , used in nyagos   Release August 2021 Recovery · microsoft/vscode · GitHub LibreOffice 7.2.1 Community available for download - The Document Foundation Blog Thunderbird — Release Notes (91.1.1) — Thunderbird  セキュリティ＆プライバシー関連  数百万台のMicrosoft IISが脆弱なバージョンのまま運用 | TECH+ The Other 20-Year Anniversary: Freedom and Surveillance Post-9/11 | Electronic Frontier Foundation  もう1つの20年：ポスト9.11の自由と監視 | P2Pとかその辺のお話R   CVE-2021-40444 の検証と緩和策・回避策について - ごちうさ民の覚え書き Ghostscriptの任意のコマンド実行が可能な脆弱性（CVE-2021-3781）に関する注意喚起 プライバシーの多義性と文脈依存性をいかに取り扱うべきか：Nissenbaumの文脈的完全性とSoloveのプラグマティズム的アプローチの検討 - 吉備国際大学学術機関リポジトリ Twitterが｢ソフトブロック機能｣をテスト中。フォロワーの削除が可能に | ギズモード・ジャパン : いや，これ任意のユーザのフォローを解除する機能だろ。こっちのほうがよほどハードなんだが。いいのか？ It’s Time for Google to Resist Geofence Warrants and to Stand Up for Its Affected Users | Electronic Frontier Foundation  Googleはジオフェンス令状に抵抗せよ | P2Pとかその辺のお話R   Zoomに複数のセキュリティ機能\u0026ndash;「Zoom Phone」向けエンドツーエンド暗号化など - ZDNet Japan 児童全員同じパスワードで配布されたタブレットで起きた問題についてまとめてみた - piyolog FORCEDENTRY: NSO Group iMessage Zero-Click Exploit Captured in the Wild - The Citizen Lab : 既に改修されている  Zero-Click iMessage Exploit - Schneier on Security   【コラム】9.11から20年、制限のないデータ収集がもたらす米国の新たな悲劇 | TechCrunch Japan アップルは社内メモでテキサス州の妊娠中絶法に対する法的な異議申し立てを監視していると発表 | TechCrunch Japan ランサムウェア攻撃で7億円超の特別損失、建設コンサル大手のオリエンタルコンサルタンツが発表 - ITmedia NEWS Lessons From History: Afghanistan and the Dangerous Afterlives of Identifying Data | Electronic Frontier Foundation  歴史の教訓：アフガニスタンと識別データの危険な後遺症 | P2Pとかその辺のお話R    知財関連  （音楽用電子機器の）Zoomが（ビデオ会議の）Zoom（の代理店）を商標権侵害で提訴（栗原潔） - 個人 - Yahoo!ニュース  Linux または Ubuntu に関する話題  「CentOS」クローンの「Rocky Linux」、CIQがテクニカルサポート開始を発表 - ZDNet Japan Intel Posts Initial Code For x86 User Interrupts On Linux - Shows Great Performance Potential - Phoronix Ubuntu 21.10 その11 - Linux kernel 5.13を採用予定 - kledgeb Ubuntu 21.10 その12 - deb版FirefoxからSnap版Firefoxへの移行・Snap版Firefoxがデフォルトに - kledgeb : Snap 版で日本語入力が出来ない不具合は直ったのだろうか？ Ubuntu 21.10 その14 - UbuntuベースのRemix ISOを構築するUbuntu Remixes登場 - kledgeb  Go 言語関連  chan chan は意外と美味しい - Qiita [Go] 前方互換性を保ちながらhttp.DefaultTransportからチューニングしたhttp.Transportをつくる - My External Storage reflect: add fast paths for common, simple Kinds to DeepEqual · golang/go@a0c409c · GitHub Docker とVisual Studio Code を使った Go (Golang) 開発環境構築 - Qiita Ent Joins the Linux Foundation | ent Goでカタカナバリデーションを実装しようとしたが、unicodeパッケージのKatakanaテーブルには記号なども含まれていた。 - Qiita : 多分 unicode.Katakana だけで判定したらダメなんじゃないのかな？ Automatic cipher suite ordering in crypto/tls - go.dev Goへのヘイトに対する考え方  Java 言語関連  Spring Bootがプロパティファイルを読み込む方法に一同驚愕！！ | Tagbangers Blog 【2021】SpringBootでpropertiesやymlの設定ファイルが読み込めることのテストを書く - きり丸の技術日記 クイックスタート: Azure Database for PostgreSQL で Java と JDBC を使用する | Microsoft Docs PNGをJavaのJPEG画像ファイルに変換する Javaでイメージのサイズを変更するには？ 画像の大きさの取得 - 【ゆるゆるプログラミング】  天文関連  Why can’t I go faster than the speed of light? Hints from electrodynamics | Gravity and Levity  ブログ: なぜ、光速より速く進めないのか? 電磁気学からのヒント    その他  OAuth2.0 / 認可コードフロー / トークン / OAuthにおけるCSRF / 疑問点 iOSでキーボードを除いた高さを取得するにはvisualViewport.heightを使う 無事故でPostgreSQLバージョンアップ兼Cloud SQLへ移行した話 – GMOアドパートナーズグループ TECH BLOG byGMO スタンフォード大の3人の教授がビッグテックがどこで間違ったか、どうやって政治が未来を変えられるかを説く『System Error』 - YAMDAS現更新履歴 Maker Faire Tokyo 2021を前にアナログMake本（？）を出してくれるオライリー・ジャパンを称えたい - YAMDAS現更新履歴 マイクロソフトがOpenInfra Foundation（旧OpenStack foundation）に最上位スポンサーで加盟へ。AzureブランドでOpenStackによるテレコム向けサービス拡大か？ － Publickey マネージドなNFSサーバの「Amazon EFS」の新機能、自動階層化に対応した「Amazon EFS Intelligent-Tiering 」登場 － Publickey フロントエンドのテストは皆のためのもの | POSTD Kubernetesは、ITを「チケットドリブン」から「インテントドリブン」へ変えていく。Cloud Operator Days Tokyo基調講演 － Publickey GoのORマッパー連載を始めます | フューチャー技術ブログ 9/11から20年：柴田 芳樹 (Yoshiki Shibata)：SSブログ deno で機械学習 vim-jp 10周年 | vim-jp.github.io 初心者でも分かる！モーダルウィンドウの作り方 Content-Typeの一覧 - Qiita CentOS 8とバイナリ互換のRHELクローン「MIRACLE LINUX 8.4」が無償公開へ。今後のバグフィクスやアップデートも無償。CentOS 8の代替を狙う － Publickey Dockerコンテナをサーバレス化する「Google Cloud Run」で、非同期処理やバックグラウンドタスクなどが実行可能に － Publickey IIJ、VMwareベースの第2世代IaaS「IIJ GIO P2 Gen.2」を発表 - ZDNet Japan Unicodeコンソーシアムが「Unicode 14.0」を正式発表、溶ける顔や敬礼など37個の絵文字を追加 | TechCrunch Japan ロールスロイス、電動飛行機『Spirit of Innovation』初飛行に成功。最高速度記録目指す - Engadget 日本版 Let’s Go with Redis and Lua Scripts – XITONIX Quarterly Cloud Market Leaps to $42B – Amazon, Microsoft \u0026amp; Google Pocket 63% of Dollars Spent | Synergy Research Group GitHub Organizationをセキュアにするための3つのTips Organizational Structure | GitLab : GitLab は上場するらしい グラフィックデザインを無料で簡単作成 : 無料版もあるらしい Apple Silicon Mac(M1 Mac)で徳丸本の実習用仮想マシンを動かす - Qiita  "
    },
    {
      "title": "O'Reilly 本をまとめ買いした",
      "section": "remark",
      "description": "これで今月の書籍代は完全に予算オーバーだな（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2021/09/buying-oreilly-books/",
      "published": "2021-09-19T01:48:00+00:00",
      "update": "2021-09-19T01:52:44+00:00",
      "content": "先日 yomoyomo さんの\n Maker Faire Tokyo 2021を前にアナログMake本（？）を出してくれるオライリー・ジャパンを称えたい - YAMDAS現更新履歴  を見て「そういや『メタファーとしての発酵』がそろそろ出るっけ」と思い出して欲しい物リストを眺めてたら未購入の O\u0026rsquo;Reilly 本がずいぶん溜まってることに気が付いた。 この機会にまとめ買いしてしまおう。\nというわけで，以下をデジタル版で購入した。\n O\u0026rsquo;Reilly Japan - メタファーとしての発酵 O\u0026rsquo;Reilly Japan - 並行プログラミング入門 O\u0026rsquo;Reilly Japan - テスト駆動開発による組み込みプログラミング O\u0026rsquo;Reilly Japan - アプレンティスシップ・パターン  O\u0026rsquo;Reilly さんは Kindle 版は出さないみたいなので，デジタル版が欲しいなら版元のサイトで PDF 版（または ePUB 版）を買うことになる。 決済は PayPal で。 読んで面白かったら，そのうち感想文を書くかも。\nちなみに，過去に買ったデジタル版 O\u0026rsquo;Reilly 本は以下の通り。\n O\u0026rsquo;Reilly Japan - Real World HTTP ミニ版 O\u0026rsquo;Reilly Japan - Go言語による並行処理 O\u0026rsquo;Reilly Japan - プログラミングRust  デジタル版で買い始めたのは2年前からなので，こんなもんだろう。\nこれで今月の書籍代は（漫画やラノベの購入も含めたら）完全に予算オーバーだな1。 先月も買いまくってしまったし，来月は自重しないと。\n  ノーポイッ! Petit Rabbit\u0026#39;s (メインアーティスト) NBCUniversal Entertainment (Release 2016-05-25) MP3 ダウンロード B01FI3DQ9K (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  「努力はそんなに実らない でもちょっぴりいいことありそう（あるよ） ♪♪」\nreviewed by Spiegel on 2021-09-19 (powered by PA-APIv5)\n   書籍購入予算は月3万円で2万円以内が努力目標。努力はそんなに実らない（笑）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "GNKF: NKF ぽいなにか の v0.6.3 をリリースした",
      "section": "release",
      "description": "全角・半角変換とかなカナ変換に対応できてない仮名文字があることに気づいたので修正した。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/09/gnkf-v0_6_3-is-released/",
      "published": "2021-09-18T09:40:49+00:00",
      "update": "2021-09-18T09:43:51+00:00",
      "content": "Go における文字列処理の習作 gnkf の v0.6.3 をリリースした。\n Release v0.6.3 · spiegel-im-spiegel/gnkf · GitHub  さっき上げたブログ記事\n Unicode のカタカナを調べる  から，全角・半角変換とかなカナ変換に対応できてない仮名文字があることに気づいたので修正した。\nなお gnkf では変体仮名は無視することにした。 アレは（歴史的経緯はともかく文字処理としては）異体字というより「そういう文字」と考えたほうがよさそう。 Unicode 正規化でも通常の仮名文字への変換はしないみたいだし。\nまぁ，個人的に需要が発生すれば対応するということで。\nブックマーク  GNKF: Network Kanji Filter by Golang  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "Unicode のカタカナを調べる",
      "section": "golang",
      "description": "unicode.Letter で絞り込めば記号類は除外できる",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/unicode-katakana/",
      "published": "2021-09-18T04:15:18+00:00",
      "update": "2021-09-18T04:31:07+00:00",
      "content": "Qiita で\n Goでカタカナバリデーションを実装しようとしたが、unicodeパッケージのKatakanaテーブルには記号なども含まれていた。 - Qiita  という記事を見かけたので，自分でも調べてみる。\n上の記事にもある通り unicode.Katakana は以下の範囲で定義されている。\nvar _Katakana = \u0026amp;RangeTable{ R16: []Range16{ {0x30a1, 0x30fa, 1}, {0x30fd, 0x30ff, 1}, {0x31f0, 0x31ff, 1}, {0x32d0, 0x32fe, 1}, {0x3300, 0x3357, 1}, {0xff66, 0xff6f, 1}, {0xff71, 0xff9d, 1}, }, R32: []Range32{ {0x1b000, 0x1b164, 356}, {0x1b165, 0x1b167, 1}, }, } 面倒なので 0x30a1 から 0x1b167 まで片っ端からスキャンしてしまおう（笑）\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; ) func main() { i := 0 for c := rune(0x30a1); c \u0026lt;= rune(0x1b167); c++ { if unicode.In(c, unicode.Katakana) { fmt.Printf(\u0026#34;%#U \u0026#34;, c) i++ i \u0026amp;= 0x0f if i == 0 { fmt.Println() } } } fmt.Println() } これを実行すると以下の通り。\n$ go run sample1.go U+30A1 \u0026#39;ァ\u0026#39; U+30A2 \u0026#39;ア\u0026#39; U+30A3 \u0026#39;ィ\u0026#39; U+30A4 \u0026#39;イ\u0026#39; U+30A5 \u0026#39;ゥ\u0026#39; U+30A6 \u0026#39;ウ\u0026#39; U+30A7 \u0026#39;ェ\u0026#39; U+30A8 \u0026#39;エ\u0026#39; U+30A9 \u0026#39;ォ\u0026#39; U+30AA \u0026#39;オ\u0026#39; U+30AB \u0026#39;カ\u0026#39; U+30AC \u0026#39;ガ\u0026#39; U+30AD \u0026#39;キ\u0026#39; U+30AE \u0026#39;ギ\u0026#39; U+30AF \u0026#39;ク\u0026#39; U+30B0 \u0026#39;グ\u0026#39; U+30B1 \u0026#39;ケ\u0026#39; U+30B2 \u0026#39;ゲ\u0026#39; U+30B3 \u0026#39;コ\u0026#39; U+30B4 \u0026#39;ゴ\u0026#39; U+30B5 \u0026#39;サ\u0026#39; U+30B6 \u0026#39;ザ\u0026#39; U+30B7 \u0026#39;シ\u0026#39; U+30B8 \u0026#39;ジ\u0026#39; U+30B9 \u0026#39;ス\u0026#39; U+30BA \u0026#39;ズ\u0026#39; U+30BB \u0026#39;セ\u0026#39; U+30BC \u0026#39;ゼ\u0026#39; U+30BD \u0026#39;ソ\u0026#39; U+30BE \u0026#39;ゾ\u0026#39; U+30BF \u0026#39;タ\u0026#39; U+30C0 \u0026#39;ダ\u0026#39; U+30C1 \u0026#39;チ\u0026#39; U+30C2 \u0026#39;ヂ\u0026#39; U+30C3 \u0026#39;ッ\u0026#39; U+30C4 \u0026#39;ツ\u0026#39; U+30C5 \u0026#39;ヅ\u0026#39; U+30C6 \u0026#39;テ\u0026#39; U+30C7 \u0026#39;デ\u0026#39; U+30C8 \u0026#39;ト\u0026#39; U+30C9 \u0026#39;ド\u0026#39; U+30CA \u0026#39;ナ\u0026#39; U+30CB \u0026#39;ニ\u0026#39; U+30CC \u0026#39;ヌ\u0026#39; U+30CD \u0026#39;ネ\u0026#39; U+30CE \u0026#39;ノ\u0026#39; U+30CF \u0026#39;ハ\u0026#39; U+30D0 \u0026#39;バ\u0026#39; U+30D1 \u0026#39;パ\u0026#39; U+30D2 \u0026#39;ヒ\u0026#39; U+30D3 \u0026#39;ビ\u0026#39; U+30D4 \u0026#39;ピ\u0026#39; U+30D5 \u0026#39;フ\u0026#39; U+30D6 \u0026#39;ブ\u0026#39; U+30D7 \u0026#39;プ\u0026#39; U+30D8 \u0026#39;ヘ\u0026#39; U+30D9 \u0026#39;ベ\u0026#39; U+30DA \u0026#39;ペ\u0026#39; U+30DB \u0026#39;ホ\u0026#39; U+30DC \u0026#39;ボ\u0026#39; U+30DD \u0026#39;ポ\u0026#39; U+30DE \u0026#39;マ\u0026#39; U+30DF \u0026#39;ミ\u0026#39; U+30E0 \u0026#39;ム\u0026#39; U+30E1 \u0026#39;メ\u0026#39; U+30E2 \u0026#39;モ\u0026#39; U+30E3 \u0026#39;ャ\u0026#39; U+30E4 \u0026#39;ヤ\u0026#39; U+30E5 \u0026#39;ュ\u0026#39; U+30E6 \u0026#39;ユ\u0026#39; U+30E7 \u0026#39;ョ\u0026#39; U+30E8 \u0026#39;ヨ\u0026#39; U+30E9 \u0026#39;ラ\u0026#39; U+30EA \u0026#39;リ\u0026#39; U+30EB \u0026#39;ル\u0026#39; U+30EC \u0026#39;レ\u0026#39; U+30ED \u0026#39;ロ\u0026#39; U+30EE \u0026#39;ヮ\u0026#39; U+30EF \u0026#39;ワ\u0026#39; U+30F0 \u0026#39;ヰ\u0026#39; U+30F1 \u0026#39;ヱ\u0026#39; U+30F2 \u0026#39;ヲ\u0026#39; U+30F3 \u0026#39;ン\u0026#39; U+30F4 \u0026#39;ヴ\u0026#39; U+30F5 \u0026#39;ヵ\u0026#39; U+30F6 \u0026#39;ヶ\u0026#39; U+30F7 \u0026#39;ヷ\u0026#39; U+30F8 \u0026#39;ヸ\u0026#39; U+30F9 \u0026#39;ヹ\u0026#39; U+30FA \u0026#39;ヺ\u0026#39; U+30FD \u0026#39;ヽ\u0026#39; U+30FE \u0026#39;ヾ\u0026#39; U+30FF \u0026#39;ヿ\u0026#39; U+31F0 \u0026#39;ㇰ\u0026#39; U+31F1 \u0026#39;ㇱ\u0026#39; U+31F2 \u0026#39;ㇲ\u0026#39; U+31F3 \u0026#39;ㇳ\u0026#39; U+31F4 \u0026#39;ㇴ\u0026#39; U+31F5 \u0026#39;ㇵ\u0026#39; U+31F6 \u0026#39;ㇶ\u0026#39; U+31F7 \u0026#39;ㇷ\u0026#39; U+31F8 \u0026#39;ㇸ\u0026#39; U+31F9 \u0026#39;ㇹ\u0026#39; U+31FA \u0026#39;ㇺ\u0026#39; U+31FB \u0026#39;ㇻ\u0026#39; U+31FC \u0026#39;ㇼ\u0026#39; U+31FD \u0026#39;ㇽ\u0026#39; U+31FE \u0026#39;ㇾ\u0026#39; U+31FF \u0026#39;ㇿ\u0026#39; U+32D0 \u0026#39;㋐\u0026#39; U+32D1 \u0026#39;㋑\u0026#39; U+32D2 \u0026#39;㋒\u0026#39; U+32D3 \u0026#39;㋓\u0026#39; U+32D4 \u0026#39;㋔\u0026#39; U+32D5 \u0026#39;㋕\u0026#39; U+32D6 \u0026#39;㋖\u0026#39; U+32D7 \u0026#39;㋗\u0026#39; U+32D8 \u0026#39;㋘\u0026#39; U+32D9 \u0026#39;㋙\u0026#39; U+32DA \u0026#39;㋚\u0026#39; U+32DB \u0026#39;㋛\u0026#39; U+32DC \u0026#39;㋜\u0026#39; U+32DD \u0026#39;㋝\u0026#39; U+32DE \u0026#39;㋞\u0026#39; U+32DF \u0026#39;㋟\u0026#39; U+32E0 \u0026#39;㋠\u0026#39; U+32E1 \u0026#39;㋡\u0026#39; U+32E2 \u0026#39;㋢\u0026#39; U+32E3 \u0026#39;㋣\u0026#39; U+32E4 \u0026#39;㋤\u0026#39; U+32E5 \u0026#39;㋥\u0026#39; U+32E6 \u0026#39;㋦\u0026#39; U+32E7 \u0026#39;㋧\u0026#39; U+32E8 \u0026#39;㋨\u0026#39; U+32E9 \u0026#39;㋩\u0026#39; U+32EA \u0026#39;㋪\u0026#39; U+32EB \u0026#39;㋫\u0026#39; U+32EC \u0026#39;㋬\u0026#39; U+32ED \u0026#39;㋭\u0026#39; U+32EE \u0026#39;㋮\u0026#39; U+32EF \u0026#39;㋯\u0026#39; U+32F0 \u0026#39;㋰\u0026#39; U+32F1 \u0026#39;㋱\u0026#39; U+32F2 \u0026#39;㋲\u0026#39; U+32F3 \u0026#39;㋳\u0026#39; U+32F4 \u0026#39;㋴\u0026#39; U+32F5 \u0026#39;㋵\u0026#39; U+32F6 \u0026#39;㋶\u0026#39; U+32F7 \u0026#39;㋷\u0026#39; U+32F8 \u0026#39;㋸\u0026#39; U+32F9 \u0026#39;㋹\u0026#39; U+32FA \u0026#39;㋺\u0026#39; U+32FB \u0026#39;㋻\u0026#39; U+32FC \u0026#39;㋼\u0026#39; U+32FD \u0026#39;㋽\u0026#39; U+32FE \u0026#39;㋾\u0026#39; U+3300 \u0026#39;㌀\u0026#39; U+3301 \u0026#39;㌁\u0026#39; U+3302 \u0026#39;㌂\u0026#39; U+3303 \u0026#39;㌃\u0026#39; U+3304 \u0026#39;㌄\u0026#39; U+3305 \u0026#39;㌅\u0026#39; U+3306 \u0026#39;㌆\u0026#39; U+3307 \u0026#39;㌇\u0026#39; U+3308 \u0026#39;㌈\u0026#39; U+3309 \u0026#39;㌉\u0026#39; U+330A \u0026#39;㌊\u0026#39; U+330B \u0026#39;㌋\u0026#39; U+330C \u0026#39;㌌\u0026#39; U+330D \u0026#39;㌍\u0026#39; U+330E \u0026#39;㌎\u0026#39; U+330F \u0026#39;㌏\u0026#39; U+3310 \u0026#39;㌐\u0026#39; U+3311 \u0026#39;㌑\u0026#39; U+3312 \u0026#39;㌒\u0026#39; U+3313 \u0026#39;㌓\u0026#39; U+3314 \u0026#39;㌔\u0026#39; U+3315 \u0026#39;㌕\u0026#39; U+3316 \u0026#39;㌖\u0026#39; U+3317 \u0026#39;㌗\u0026#39; U+3318 \u0026#39;㌘\u0026#39; U+3319 \u0026#39;㌙\u0026#39; U+331A \u0026#39;㌚\u0026#39; U+331B \u0026#39;㌛\u0026#39; U+331C \u0026#39;㌜\u0026#39; U+331D \u0026#39;㌝\u0026#39; U+331E \u0026#39;㌞\u0026#39; U+331F \u0026#39;㌟\u0026#39; U+3320 \u0026#39;㌠\u0026#39; U+3321 \u0026#39;㌡\u0026#39; U+3322 \u0026#39;㌢\u0026#39; U+3323 \u0026#39;㌣\u0026#39; U+3324 \u0026#39;㌤\u0026#39; U+3325 \u0026#39;㌥\u0026#39; U+3326 \u0026#39;㌦\u0026#39; U+3327 \u0026#39;㌧\u0026#39; U+3328 \u0026#39;㌨\u0026#39; U+3329 \u0026#39;㌩\u0026#39; U+332A \u0026#39;㌪\u0026#39; U+332B \u0026#39;㌫\u0026#39; U+332C \u0026#39;㌬\u0026#39; U+332D \u0026#39;㌭\u0026#39; U+332E \u0026#39;㌮\u0026#39; U+332F \u0026#39;㌯\u0026#39; U+3330 \u0026#39;㌰\u0026#39; U+3331 \u0026#39;㌱\u0026#39; U+3332 \u0026#39;㌲\u0026#39; U+3333 \u0026#39;㌳\u0026#39; U+3334 \u0026#39;㌴\u0026#39; U+3335 \u0026#39;㌵\u0026#39; U+3336 \u0026#39;㌶\u0026#39; U+3337 \u0026#39;㌷\u0026#39; U+3338 \u0026#39;㌸\u0026#39; U+3339 \u0026#39;㌹\u0026#39; U+333A \u0026#39;㌺\u0026#39; U+333B \u0026#39;㌻\u0026#39; U+333C \u0026#39;㌼\u0026#39; U+333D \u0026#39;㌽\u0026#39; U+333E \u0026#39;㌾\u0026#39; U+333F \u0026#39;㌿\u0026#39; U+3340 \u0026#39;㍀\u0026#39; U+3341 \u0026#39;㍁\u0026#39; U+3342 \u0026#39;㍂\u0026#39; U+3343 \u0026#39;㍃\u0026#39; U+3344 \u0026#39;㍄\u0026#39; U+3345 \u0026#39;㍅\u0026#39; U+3346 \u0026#39;㍆\u0026#39; U+3347 \u0026#39;㍇\u0026#39; U+3348 \u0026#39;㍈\u0026#39; U+3349 \u0026#39;㍉\u0026#39; U+334A \u0026#39;㍊\u0026#39; U+334B \u0026#39;㍋\u0026#39; U+334C \u0026#39;㍌\u0026#39; U+334D \u0026#39;㍍\u0026#39; U+334E \u0026#39;㍎\u0026#39; U+334F \u0026#39;㍏\u0026#39; U+3350 \u0026#39;㍐\u0026#39; U+3351 \u0026#39;㍑\u0026#39; U+3352 \u0026#39;㍒\u0026#39; U+3353 \u0026#39;㍓\u0026#39; U+3354 \u0026#39;㍔\u0026#39; U+3355 \u0026#39;㍕\u0026#39; U+3356 \u0026#39;㍖\u0026#39; U+3357 \u0026#39;㍗\u0026#39; U+FF66 \u0026#39;ｦ\u0026#39; U+FF67 \u0026#39;ｧ\u0026#39; U+FF68 \u0026#39;ｨ\u0026#39; U+FF69 \u0026#39;ｩ\u0026#39; U+FF6A \u0026#39;ｪ\u0026#39; U+FF6B \u0026#39;ｫ\u0026#39; U+FF6C \u0026#39;ｬ\u0026#39; U+FF6D \u0026#39;ｭ\u0026#39; U+FF6E \u0026#39;ｮ\u0026#39; U+FF6F \u0026#39;ｯ\u0026#39; U+FF71 \u0026#39;ｱ\u0026#39; U+FF72 \u0026#39;ｲ\u0026#39; U+FF73 \u0026#39;ｳ\u0026#39; U+FF74 \u0026#39;ｴ\u0026#39; U+FF75 \u0026#39;ｵ\u0026#39; U+FF76 \u0026#39;ｶ\u0026#39; U+FF77 \u0026#39;ｷ\u0026#39; U+FF78 \u0026#39;ｸ\u0026#39; U+FF79 \u0026#39;ｹ\u0026#39; U+FF7A \u0026#39;ｺ\u0026#39; U+FF7B \u0026#39;ｻ\u0026#39; U+FF7C \u0026#39;ｼ\u0026#39; U+FF7D \u0026#39;ｽ\u0026#39; U+FF7E \u0026#39;ｾ\u0026#39; U+FF7F \u0026#39;ｿ\u0026#39; U+FF80 \u0026#39;ﾀ\u0026#39; U+FF81 \u0026#39;ﾁ\u0026#39; U+FF82 \u0026#39;ﾂ\u0026#39; U+FF83 \u0026#39;ﾃ\u0026#39; U+FF84 \u0026#39;ﾄ\u0026#39; U+FF85 \u0026#39;ﾅ\u0026#39; U+FF86 \u0026#39;ﾆ\u0026#39; U+FF87 \u0026#39;ﾇ\u0026#39; U+FF88 \u0026#39;ﾈ\u0026#39; U+FF89 \u0026#39;ﾉ\u0026#39; U+FF8A \u0026#39;ﾊ\u0026#39; U+FF8B \u0026#39;ﾋ\u0026#39; U+FF8C \u0026#39;ﾌ\u0026#39; U+FF8D \u0026#39;ﾍ\u0026#39; U+FF8E \u0026#39;ﾎ\u0026#39; U+FF8F \u0026#39;ﾏ\u0026#39; U+FF90 \u0026#39;ﾐ\u0026#39; U+FF91 \u0026#39;ﾑ\u0026#39; U+FF92 \u0026#39;ﾒ\u0026#39; U+FF93 \u0026#39;ﾓ\u0026#39; U+FF94 \u0026#39;ﾔ\u0026#39; U+FF95 \u0026#39;ﾕ\u0026#39; U+FF96 \u0026#39;ﾖ\u0026#39; U+FF97 \u0026#39;ﾗ\u0026#39; U+FF98 \u0026#39;ﾘ\u0026#39; U+FF99 \u0026#39;ﾙ\u0026#39; U+FF9A \u0026#39;ﾚ\u0026#39; U+FF9B \u0026#39;ﾛ\u0026#39; U+FF9C \u0026#39;ﾜ\u0026#39; U+FF9D \u0026#39;ﾝ\u0026#39; U+1B000 \u0026#39;𛀀\u0026#39; U+1B164 \u0026#39;𛅤\u0026#39; U+1B165 \u0026#39;𛅥\u0026#39; U+1B166 \u0026#39;𛅦\u0026#39; U+1B167 \u0026#39;𛅧\u0026#39; まぢか。 これは困るわ。\nU+1B000 は変体仮名の「れ（連）」を指す文字らしい。 これだけカタカナ扱いなのか。 また U+1B164 以降の4文字は小書きの「ヰ」「ヱ」「ヲ」「ン」だそうな。\nじゃあ，次。 上のカタカナを unicode.Letter 種別で絞り込んだらどうなるか。\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; ) func main() { i := 0 for c := rune(0x30a1); c \u0026lt;= rune(0x1b167); c++ { if unicode.In(c, unicode.Katakana) \u0026amp;\u0026amp; unicode.IsLetter(c) { \tfmt.Printf(\u0026#34;%#U \u0026#34;, c) i++ i \u0026amp;= 0x0f if i == 0 { fmt.Println() } } } fmt.Println() } これを実行すると以下の通り。\n$ go run sample2.go U+30A1 \u0026#39;ァ\u0026#39; U+30A2 \u0026#39;ア\u0026#39; U+30A3 \u0026#39;ィ\u0026#39; U+30A4 \u0026#39;イ\u0026#39; U+30A5 \u0026#39;ゥ\u0026#39; U+30A6 \u0026#39;ウ\u0026#39; U+30A7 \u0026#39;ェ\u0026#39; U+30A8 \u0026#39;エ\u0026#39; U+30A9 \u0026#39;ォ\u0026#39; U+30AA \u0026#39;オ\u0026#39; U+30AB \u0026#39;カ\u0026#39; U+30AC \u0026#39;ガ\u0026#39; U+30AD \u0026#39;キ\u0026#39; U+30AE \u0026#39;ギ\u0026#39; U+30AF \u0026#39;ク\u0026#39; U+30B0 \u0026#39;グ\u0026#39; U+30B1 \u0026#39;ケ\u0026#39; U+30B2 \u0026#39;ゲ\u0026#39; U+30B3 \u0026#39;コ\u0026#39; U+30B4 \u0026#39;ゴ\u0026#39; U+30B5 \u0026#39;サ\u0026#39; U+30B6 \u0026#39;ザ\u0026#39; U+30B7 \u0026#39;シ\u0026#39; U+30B8 \u0026#39;ジ\u0026#39; U+30B9 \u0026#39;ス\u0026#39; U+30BA \u0026#39;ズ\u0026#39; U+30BB \u0026#39;セ\u0026#39; U+30BC \u0026#39;ゼ\u0026#39; U+30BD \u0026#39;ソ\u0026#39; U+30BE \u0026#39;ゾ\u0026#39; U+30BF \u0026#39;タ\u0026#39; U+30C0 \u0026#39;ダ\u0026#39; U+30C1 \u0026#39;チ\u0026#39; U+30C2 \u0026#39;ヂ\u0026#39; U+30C3 \u0026#39;ッ\u0026#39; U+30C4 \u0026#39;ツ\u0026#39; U+30C5 \u0026#39;ヅ\u0026#39; U+30C6 \u0026#39;テ\u0026#39; U+30C7 \u0026#39;デ\u0026#39; U+30C8 \u0026#39;ト\u0026#39; U+30C9 \u0026#39;ド\u0026#39; U+30CA \u0026#39;ナ\u0026#39; U+30CB \u0026#39;ニ\u0026#39; U+30CC \u0026#39;ヌ\u0026#39; U+30CD \u0026#39;ネ\u0026#39; U+30CE \u0026#39;ノ\u0026#39; U+30CF \u0026#39;ハ\u0026#39; U+30D0 \u0026#39;バ\u0026#39; U+30D1 \u0026#39;パ\u0026#39; U+30D2 \u0026#39;ヒ\u0026#39; U+30D3 \u0026#39;ビ\u0026#39; U+30D4 \u0026#39;ピ\u0026#39; U+30D5 \u0026#39;フ\u0026#39; U+30D6 \u0026#39;ブ\u0026#39; U+30D7 \u0026#39;プ\u0026#39; U+30D8 \u0026#39;ヘ\u0026#39; U+30D9 \u0026#39;ベ\u0026#39; U+30DA \u0026#39;ペ\u0026#39; U+30DB \u0026#39;ホ\u0026#39; U+30DC \u0026#39;ボ\u0026#39; U+30DD \u0026#39;ポ\u0026#39; U+30DE \u0026#39;マ\u0026#39; U+30DF \u0026#39;ミ\u0026#39; U+30E0 \u0026#39;ム\u0026#39; U+30E1 \u0026#39;メ\u0026#39; U+30E2 \u0026#39;モ\u0026#39; U+30E3 \u0026#39;ャ\u0026#39; U+30E4 \u0026#39;ヤ\u0026#39; U+30E5 \u0026#39;ュ\u0026#39; U+30E6 \u0026#39;ユ\u0026#39; U+30E7 \u0026#39;ョ\u0026#39; U+30E8 \u0026#39;ヨ\u0026#39; U+30E9 \u0026#39;ラ\u0026#39; U+30EA \u0026#39;リ\u0026#39; U+30EB \u0026#39;ル\u0026#39; U+30EC \u0026#39;レ\u0026#39; U+30ED \u0026#39;ロ\u0026#39; U+30EE \u0026#39;ヮ\u0026#39; U+30EF \u0026#39;ワ\u0026#39; U+30F0 \u0026#39;ヰ\u0026#39; U+30F1 \u0026#39;ヱ\u0026#39; U+30F2 \u0026#39;ヲ\u0026#39; U+30F3 \u0026#39;ン\u0026#39; U+30F4 \u0026#39;ヴ\u0026#39; U+30F5 \u0026#39;ヵ\u0026#39; U+30F6 \u0026#39;ヶ\u0026#39; U+30F7 \u0026#39;ヷ\u0026#39; U+30F8 \u0026#39;ヸ\u0026#39; U+30F9 \u0026#39;ヹ\u0026#39; U+30FA \u0026#39;ヺ\u0026#39; U+30FD \u0026#39;ヽ\u0026#39; U+30FE \u0026#39;ヾ\u0026#39; U+30FF \u0026#39;ヿ\u0026#39; U+31F0 \u0026#39;ㇰ\u0026#39; U+31F1 \u0026#39;ㇱ\u0026#39; U+31F2 \u0026#39;ㇲ\u0026#39; U+31F3 \u0026#39;ㇳ\u0026#39; U+31F4 \u0026#39;ㇴ\u0026#39; U+31F5 \u0026#39;ㇵ\u0026#39; U+31F6 \u0026#39;ㇶ\u0026#39; U+31F7 \u0026#39;ㇷ\u0026#39; U+31F8 \u0026#39;ㇸ\u0026#39; U+31F9 \u0026#39;ㇹ\u0026#39; U+31FA \u0026#39;ㇺ\u0026#39; U+31FB \u0026#39;ㇻ\u0026#39; U+31FC \u0026#39;ㇼ\u0026#39; U+31FD \u0026#39;ㇽ\u0026#39; U+31FE \u0026#39;ㇾ\u0026#39; U+31FF \u0026#39;ㇿ\u0026#39; U+FF66 \u0026#39;ｦ\u0026#39; U+FF67 \u0026#39;ｧ\u0026#39; U+FF68 \u0026#39;ｨ\u0026#39; U+FF69 \u0026#39;ｩ\u0026#39; U+FF6A \u0026#39;ｪ\u0026#39; U+FF6B \u0026#39;ｫ\u0026#39; U+FF6C \u0026#39;ｬ\u0026#39; U+FF6D \u0026#39;ｭ\u0026#39; U+FF6E \u0026#39;ｮ\u0026#39; U+FF6F \u0026#39;ｯ\u0026#39; U+FF71 \u0026#39;ｱ\u0026#39; U+FF72 \u0026#39;ｲ\u0026#39; U+FF73 \u0026#39;ｳ\u0026#39; U+FF74 \u0026#39;ｴ\u0026#39; U+FF75 \u0026#39;ｵ\u0026#39; U+FF76 \u0026#39;ｶ\u0026#39; U+FF77 \u0026#39;ｷ\u0026#39; U+FF78 \u0026#39;ｸ\u0026#39; U+FF79 \u0026#39;ｹ\u0026#39; U+FF7A \u0026#39;ｺ\u0026#39; U+FF7B \u0026#39;ｻ\u0026#39; U+FF7C \u0026#39;ｼ\u0026#39; U+FF7D \u0026#39;ｽ\u0026#39; U+FF7E \u0026#39;ｾ\u0026#39; U+FF7F \u0026#39;ｿ\u0026#39; U+FF80 \u0026#39;ﾀ\u0026#39; U+FF81 \u0026#39;ﾁ\u0026#39; U+FF82 \u0026#39;ﾂ\u0026#39; U+FF83 \u0026#39;ﾃ\u0026#39; U+FF84 \u0026#39;ﾄ\u0026#39; U+FF85 \u0026#39;ﾅ\u0026#39; U+FF86 \u0026#39;ﾆ\u0026#39; U+FF87 \u0026#39;ﾇ\u0026#39; U+FF88 \u0026#39;ﾈ\u0026#39; U+FF89 \u0026#39;ﾉ\u0026#39; U+FF8A \u0026#39;ﾊ\u0026#39; U+FF8B \u0026#39;ﾋ\u0026#39; U+FF8C \u0026#39;ﾌ\u0026#39; U+FF8D \u0026#39;ﾍ\u0026#39; U+FF8E \u0026#39;ﾎ\u0026#39; U+FF8F \u0026#39;ﾏ\u0026#39; U+FF90 \u0026#39;ﾐ\u0026#39; U+FF91 \u0026#39;ﾑ\u0026#39; U+FF92 \u0026#39;ﾒ\u0026#39; U+FF93 \u0026#39;ﾓ\u0026#39; U+FF94 \u0026#39;ﾔ\u0026#39; U+FF95 \u0026#39;ﾕ\u0026#39; U+FF96 \u0026#39;ﾖ\u0026#39; U+FF97 \u0026#39;ﾗ\u0026#39; U+FF98 \u0026#39;ﾘ\u0026#39; U+FF99 \u0026#39;ﾙ\u0026#39; U+FF9A \u0026#39;ﾚ\u0026#39; U+FF9B \u0026#39;ﾛ\u0026#39; U+FF9C \u0026#39;ﾜ\u0026#39; U+FF9D \u0026#39;ﾝ\u0026#39; U+1B000 \u0026#39;𛀀\u0026#39; U+1B164 \u0026#39;𛅤\u0026#39; U+1B165 \u0026#39;𛅥\u0026#39; U+1B166 \u0026#39;𛅦\u0026#39; U+1B167 \u0026#39;𛅧\u0026#39; これで記号はちゃんと排除できることが分かった。 よーし，うむうむ，よーし。\n注意点としては unicode.Katakana では濁点・半濁点の結合文字が除外されるということだろうか。 あと半角カナを識別する unicode.RangeTable テーブルはなさそうだ。 まぁ，単純だから自前で作ればいいんだけど。 こんな感じかな。\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; ) var halfWidthKatakana = \u0026amp;unicode.RangeTable{ R16: []unicode.Range16{ {0xff61, 0xff9f, 1}, }, R32: []unicode.Range32{}, }  func main() { i := 0 for c := rune(0x30a1); c \u0026lt;= rune(0x1b167); c++ { if unicode.In(c, unicode.Katakana) \u0026amp;\u0026amp; unicode.In(c, halfWidthKatakana) { \tfmt.Printf(\u0026#34;%#U \u0026#34;, c) i++ i \u0026amp;= 0x0f if i == 0 { fmt.Println() } } } fmt.Println() } halfWidthKatakana は JIS X 0201 の JIS カナ領域を（記号を含めて）全てカバーしている点に注意。 上のコードのように，これと unicode.Katakana を組み合わせれば\n$ go run sample3.go U+FF66 \u0026#39;ｦ\u0026#39; U+FF67 \u0026#39;ｧ\u0026#39; U+FF68 \u0026#39;ｨ\u0026#39; U+FF69 \u0026#39;ｩ\u0026#39; U+FF6A \u0026#39;ｪ\u0026#39; U+FF6B \u0026#39;ｫ\u0026#39; U+FF6C \u0026#39;ｬ\u0026#39; U+FF6D \u0026#39;ｭ\u0026#39; U+FF6E \u0026#39;ｮ\u0026#39; U+FF6F \u0026#39;ｯ\u0026#39; U+FF71 \u0026#39;ｱ\u0026#39; U+FF72 \u0026#39;ｲ\u0026#39; U+FF73 \u0026#39;ｳ\u0026#39; U+FF74 \u0026#39;ｴ\u0026#39; U+FF75 \u0026#39;ｵ\u0026#39; U+FF76 \u0026#39;ｶ\u0026#39; U+FF77 \u0026#39;ｷ\u0026#39; U+FF78 \u0026#39;ｸ\u0026#39; U+FF79 \u0026#39;ｹ\u0026#39; U+FF7A \u0026#39;ｺ\u0026#39; U+FF7B \u0026#39;ｻ\u0026#39; U+FF7C \u0026#39;ｼ\u0026#39; U+FF7D \u0026#39;ｽ\u0026#39; U+FF7E \u0026#39;ｾ\u0026#39; U+FF7F \u0026#39;ｿ\u0026#39; U+FF80 \u0026#39;ﾀ\u0026#39; U+FF81 \u0026#39;ﾁ\u0026#39; U+FF82 \u0026#39;ﾂ\u0026#39; U+FF83 \u0026#39;ﾃ\u0026#39; U+FF84 \u0026#39;ﾄ\u0026#39; U+FF85 \u0026#39;ﾅ\u0026#39; U+FF86 \u0026#39;ﾆ\u0026#39; U+FF87 \u0026#39;ﾇ\u0026#39; U+FF88 \u0026#39;ﾈ\u0026#39; U+FF89 \u0026#39;ﾉ\u0026#39; U+FF8A \u0026#39;ﾊ\u0026#39; U+FF8B \u0026#39;ﾋ\u0026#39; U+FF8C \u0026#39;ﾌ\u0026#39; U+FF8D \u0026#39;ﾍ\u0026#39; U+FF8E \u0026#39;ﾎ\u0026#39; U+FF8F \u0026#39;ﾏ\u0026#39; U+FF90 \u0026#39;ﾐ\u0026#39; U+FF91 \u0026#39;ﾑ\u0026#39; U+FF92 \u0026#39;ﾒ\u0026#39; U+FF93 \u0026#39;ﾓ\u0026#39; U+FF94 \u0026#39;ﾔ\u0026#39; U+FF95 \u0026#39;ﾕ\u0026#39; U+FF96 \u0026#39;ﾖ\u0026#39; U+FF97 \u0026#39;ﾗ\u0026#39; U+FF98 \u0026#39;ﾘ\u0026#39; U+FF99 \u0026#39;ﾙ\u0026#39; U+FF9A \u0026#39;ﾚ\u0026#39; U+FF9B \u0026#39;ﾛ\u0026#39; U+FF9C \u0026#39;ﾜ\u0026#39; U+FF9D \u0026#39;ﾝ\u0026#39; といい感じに半角カナ文字だけ取り出せる。\nついでに NFKC (Normalization Form Compatibility Composition) 正規化で記号がどのように変換されるか見てみよう。 以下は変換されるコードのみを列挙したもの。\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; \u0026#34;golang.org/x/text/unicode/norm\u0026#34; ) func main() { for c := rune(0x30a1); c \u0026lt;= rune(0x1b167); c++ { if unicode.In(c, unicode.Katakana) { n := norm.NFKC.String(string(c)) if n != string(c) { fmt.Printf(\u0026#34;%#U -\u0026gt; %s\\n\u0026#34;, c, n) } } } } これを実行する。 ちょっと多いよ。\n$ go run sample4.go U+30FF \u0026#39;ヿ\u0026#39; -\u0026gt; コト U+32D0 \u0026#39;㋐\u0026#39; -\u0026gt; ア U+32D1 \u0026#39;㋑\u0026#39; -\u0026gt; イ U+32D2 \u0026#39;㋒\u0026#39; -\u0026gt; ウ U+32D3 \u0026#39;㋓\u0026#39; -\u0026gt; エ U+32D4 \u0026#39;㋔\u0026#39; -\u0026gt; オ U+32D5 \u0026#39;㋕\u0026#39; -\u0026gt; カ U+32D6 \u0026#39;㋖\u0026#39; -\u0026gt; キ U+32D7 \u0026#39;㋗\u0026#39; -\u0026gt; ク U+32D8 \u0026#39;㋘\u0026#39; -\u0026gt; ケ U+32D9 \u0026#39;㋙\u0026#39; -\u0026gt; コ U+32DA \u0026#39;㋚\u0026#39; -\u0026gt; サ U+32DB \u0026#39;㋛\u0026#39; -\u0026gt; シ U+32DC \u0026#39;㋜\u0026#39; -\u0026gt; ス U+32DD \u0026#39;㋝\u0026#39; -\u0026gt; セ U+32DE \u0026#39;㋞\u0026#39; -\u0026gt; ソ U+32DF \u0026#39;㋟\u0026#39; -\u0026gt; タ U+32E0 \u0026#39;㋠\u0026#39; -\u0026gt; チ U+32E1 \u0026#39;㋡\u0026#39; -\u0026gt; ツ U+32E2 \u0026#39;㋢\u0026#39; -\u0026gt; テ U+32E3 \u0026#39;㋣\u0026#39; -\u0026gt; ト U+32E4 \u0026#39;㋤\u0026#39; -\u0026gt; ナ U+32E5 \u0026#39;㋥\u0026#39; -\u0026gt; ニ U+32E6 \u0026#39;㋦\u0026#39; -\u0026gt; ヌ U+32E7 \u0026#39;㋧\u0026#39; -\u0026gt; ネ U+32E8 \u0026#39;㋨\u0026#39; -\u0026gt; ノ U+32E9 \u0026#39;㋩\u0026#39; -\u0026gt; ハ U+32EA \u0026#39;㋪\u0026#39; -\u0026gt; ヒ U+32EB \u0026#39;㋫\u0026#39; -\u0026gt; フ U+32EC \u0026#39;㋬\u0026#39; -\u0026gt; ヘ U+32ED \u0026#39;㋭\u0026#39; -\u0026gt; ホ U+32EE \u0026#39;㋮\u0026#39; -\u0026gt; マ U+32EF \u0026#39;㋯\u0026#39; -\u0026gt; ミ U+32F0 \u0026#39;㋰\u0026#39; -\u0026gt; ム U+32F1 \u0026#39;㋱\u0026#39; -\u0026gt; メ U+32F2 \u0026#39;㋲\u0026#39; -\u0026gt; モ U+32F3 \u0026#39;㋳\u0026#39; -\u0026gt; ヤ U+32F4 \u0026#39;㋴\u0026#39; -\u0026gt; ユ U+32F5 \u0026#39;㋵\u0026#39; -\u0026gt; ヨ U+32F6 \u0026#39;㋶\u0026#39; -\u0026gt; ラ U+32F7 \u0026#39;㋷\u0026#39; -\u0026gt; リ U+32F8 \u0026#39;㋸\u0026#39; -\u0026gt; ル U+32F9 \u0026#39;㋹\u0026#39; -\u0026gt; レ U+32FA \u0026#39;㋺\u0026#39; -\u0026gt; ロ U+32FB \u0026#39;㋻\u0026#39; -\u0026gt; ワ U+32FC \u0026#39;㋼\u0026#39; -\u0026gt; ヰ U+32FD \u0026#39;㋽\u0026#39; -\u0026gt; ヱ U+32FE \u0026#39;㋾\u0026#39; -\u0026gt; ヲ U+3300 \u0026#39;㌀\u0026#39; -\u0026gt; アパート U+3301 \u0026#39;㌁\u0026#39; -\u0026gt; アルファ U+3302 \u0026#39;㌂\u0026#39; -\u0026gt; アンペア U+3303 \u0026#39;㌃\u0026#39; -\u0026gt; アール U+3304 \u0026#39;㌄\u0026#39; -\u0026gt; イニング U+3305 \u0026#39;㌅\u0026#39; -\u0026gt; インチ U+3306 \u0026#39;㌆\u0026#39; -\u0026gt; ウォン U+3307 \u0026#39;㌇\u0026#39; -\u0026gt; エスクード U+3308 \u0026#39;㌈\u0026#39; -\u0026gt; エーカー U+3309 \u0026#39;㌉\u0026#39; -\u0026gt; オンス U+330A \u0026#39;㌊\u0026#39; -\u0026gt; オーム U+330B \u0026#39;㌋\u0026#39; -\u0026gt; カイリ U+330C \u0026#39;㌌\u0026#39; -\u0026gt; カラット U+330D \u0026#39;㌍\u0026#39; -\u0026gt; カロリー U+330E \u0026#39;㌎\u0026#39; -\u0026gt; ガロン U+330F \u0026#39;㌏\u0026#39; -\u0026gt; ガンマ U+3310 \u0026#39;㌐\u0026#39; -\u0026gt; ギガ U+3311 \u0026#39;㌑\u0026#39; -\u0026gt; ギニー U+3312 \u0026#39;㌒\u0026#39; -\u0026gt; キュリー U+3313 \u0026#39;㌓\u0026#39; -\u0026gt; ギルダー U+3314 \u0026#39;㌔\u0026#39; -\u0026gt; キロ U+3315 \u0026#39;㌕\u0026#39; -\u0026gt; キログラム U+3316 \u0026#39;㌖\u0026#39; -\u0026gt; キロメートル U+3317 \u0026#39;㌗\u0026#39; -\u0026gt; キロワット U+3318 \u0026#39;㌘\u0026#39; -\u0026gt; グラム U+3319 \u0026#39;㌙\u0026#39; -\u0026gt; グラムトン U+331A \u0026#39;㌚\u0026#39; -\u0026gt; クルゼイロ U+331B \u0026#39;㌛\u0026#39; -\u0026gt; クローネ U+331C \u0026#39;㌜\u0026#39; -\u0026gt; ケース U+331D \u0026#39;㌝\u0026#39; -\u0026gt; コルナ U+331E \u0026#39;㌞\u0026#39; -\u0026gt; コーポ U+331F \u0026#39;㌟\u0026#39; -\u0026gt; サイクル U+3320 \u0026#39;㌠\u0026#39; -\u0026gt; サンチーム U+3321 \u0026#39;㌡\u0026#39; -\u0026gt; シリング U+3322 \u0026#39;㌢\u0026#39; -\u0026gt; センチ U+3323 \u0026#39;㌣\u0026#39; -\u0026gt; セント U+3324 \u0026#39;㌤\u0026#39; -\u0026gt; ダース U+3325 \u0026#39;㌥\u0026#39; -\u0026gt; デシ U+3326 \u0026#39;㌦\u0026#39; -\u0026gt; ドル U+3327 \u0026#39;㌧\u0026#39; -\u0026gt; トン U+3328 \u0026#39;㌨\u0026#39; -\u0026gt; ナノ U+3329 \u0026#39;㌩\u0026#39; -\u0026gt; ノット U+332A \u0026#39;㌪\u0026#39; -\u0026gt; ハイツ U+332B \u0026#39;㌫\u0026#39; -\u0026gt; パーセント U+332C \u0026#39;㌬\u0026#39; -\u0026gt; パーツ U+332D \u0026#39;㌭\u0026#39; -\u0026gt; バーレル U+332E \u0026#39;㌮\u0026#39; -\u0026gt; ピアストル U+332F \u0026#39;㌯\u0026#39; -\u0026gt; ピクル U+3330 \u0026#39;㌰\u0026#39; -\u0026gt; ピコ U+3331 \u0026#39;㌱\u0026#39; -\u0026gt; ビル U+3332 \u0026#39;㌲\u0026#39; -\u0026gt; ファラッド U+3333 \u0026#39;㌳\u0026#39; -\u0026gt; フィート U+3334 \u0026#39;㌴\u0026#39; -\u0026gt; ブッシェル U+3335 \u0026#39;㌵\u0026#39; -\u0026gt; フラン U+3336 \u0026#39;㌶\u0026#39; -\u0026gt; ヘクタール U+3337 \u0026#39;㌷\u0026#39; -\u0026gt; ペソ U+3338 \u0026#39;㌸\u0026#39; -\u0026gt; ペニヒ U+3339 \u0026#39;㌹\u0026#39; -\u0026gt; ヘルツ U+333A \u0026#39;㌺\u0026#39; -\u0026gt; ペンス U+333B \u0026#39;㌻\u0026#39; -\u0026gt; ページ U+333C \u0026#39;㌼\u0026#39; -\u0026gt; ベータ U+333D \u0026#39;㌽\u0026#39; -\u0026gt; ポイント U+333E \u0026#39;㌾\u0026#39; -\u0026gt; ボルト U+333F \u0026#39;㌿\u0026#39; -\u0026gt; ホン U+3340 \u0026#39;㍀\u0026#39; -\u0026gt; ポンド U+3341 \u0026#39;㍁\u0026#39; -\u0026gt; ホール U+3342 \u0026#39;㍂\u0026#39; -\u0026gt; ホーン U+3343 \u0026#39;㍃\u0026#39; -\u0026gt; マイクロ U+3344 \u0026#39;㍄\u0026#39; -\u0026gt; マイル U+3345 \u0026#39;㍅\u0026#39; -\u0026gt; マッハ U+3346 \u0026#39;㍆\u0026#39; -\u0026gt; マルク U+3347 \u0026#39;㍇\u0026#39; -\u0026gt; マンション U+3348 \u0026#39;㍈\u0026#39; -\u0026gt; ミクロン U+3349 \u0026#39;㍉\u0026#39; -\u0026gt; ミリ U+334A \u0026#39;㍊\u0026#39; -\u0026gt; ミリバール U+334B \u0026#39;㍋\u0026#39; -\u0026gt; メガ U+334C \u0026#39;㍌\u0026#39; -\u0026gt; メガトン U+334D \u0026#39;㍍\u0026#39; -\u0026gt; メートル U+334E \u0026#39;㍎\u0026#39; -\u0026gt; ヤード U+334F \u0026#39;㍏\u0026#39; -\u0026gt; ヤール U+3350 \u0026#39;㍐\u0026#39; -\u0026gt; ユアン U+3351 \u0026#39;㍑\u0026#39; -\u0026gt; リットル U+3352 \u0026#39;㍒\u0026#39; -\u0026gt; リラ U+3353 \u0026#39;㍓\u0026#39; -\u0026gt; ルピー U+3354 \u0026#39;㍔\u0026#39; -\u0026gt; ルーブル U+3355 \u0026#39;㍕\u0026#39; -\u0026gt; レム U+3356 \u0026#39;㍖\u0026#39; -\u0026gt; レントゲン U+3357 \u0026#39;㍗\u0026#39; -\u0026gt; ワット U+FF66 \u0026#39;ｦ\u0026#39; -\u0026gt; ヲ U+FF67 \u0026#39;ｧ\u0026#39; -\u0026gt; ァ U+FF68 \u0026#39;ｨ\u0026#39; -\u0026gt; ィ U+FF69 \u0026#39;ｩ\u0026#39; -\u0026gt; ゥ U+FF6A \u0026#39;ｪ\u0026#39; -\u0026gt; ェ U+FF6B \u0026#39;ｫ\u0026#39; -\u0026gt; ォ U+FF6C \u0026#39;ｬ\u0026#39; -\u0026gt; ャ U+FF6D \u0026#39;ｭ\u0026#39; -\u0026gt; ュ U+FF6E \u0026#39;ｮ\u0026#39; -\u0026gt; ョ U+FF6F \u0026#39;ｯ\u0026#39; -\u0026gt; ッ U+FF71 \u0026#39;ｱ\u0026#39; -\u0026gt; ア U+FF72 \u0026#39;ｲ\u0026#39; -\u0026gt; イ U+FF73 \u0026#39;ｳ\u0026#39; -\u0026gt; ウ U+FF74 \u0026#39;ｴ\u0026#39; -\u0026gt; エ U+FF75 \u0026#39;ｵ\u0026#39; -\u0026gt; オ U+FF76 \u0026#39;ｶ\u0026#39; -\u0026gt; カ U+FF77 \u0026#39;ｷ\u0026#39; -\u0026gt; キ U+FF78 \u0026#39;ｸ\u0026#39; -\u0026gt; ク U+FF79 \u0026#39;ｹ\u0026#39; -\u0026gt; ケ U+FF7A \u0026#39;ｺ\u0026#39; -\u0026gt; コ U+FF7B \u0026#39;ｻ\u0026#39; -\u0026gt; サ U+FF7C \u0026#39;ｼ\u0026#39; -\u0026gt; シ U+FF7D \u0026#39;ｽ\u0026#39; -\u0026gt; ス U+FF7E \u0026#39;ｾ\u0026#39; -\u0026gt; セ U+FF7F \u0026#39;ｿ\u0026#39; -\u0026gt; ソ U+FF80 \u0026#39;ﾀ\u0026#39; -\u0026gt; タ U+FF81 \u0026#39;ﾁ\u0026#39; -\u0026gt; チ U+FF82 \u0026#39;ﾂ\u0026#39; -\u0026gt; ツ U+FF83 \u0026#39;ﾃ\u0026#39; -\u0026gt; テ U+FF84 \u0026#39;ﾄ\u0026#39; -\u0026gt; ト U+FF85 \u0026#39;ﾅ\u0026#39; -\u0026gt; ナ U+FF86 \u0026#39;ﾆ\u0026#39; -\u0026gt; ニ U+FF87 \u0026#39;ﾇ\u0026#39; -\u0026gt; ヌ U+FF88 \u0026#39;ﾈ\u0026#39; -\u0026gt; ネ U+FF89 \u0026#39;ﾉ\u0026#39; -\u0026gt; ノ U+FF8A \u0026#39;ﾊ\u0026#39; -\u0026gt; ハ U+FF8B \u0026#39;ﾋ\u0026#39; -\u0026gt; ヒ U+FF8C \u0026#39;ﾌ\u0026#39; -\u0026gt; フ U+FF8D \u0026#39;ﾍ\u0026#39; -\u0026gt; ヘ U+FF8E \u0026#39;ﾎ\u0026#39; -\u0026gt; ホ U+FF8F \u0026#39;ﾏ\u0026#39; -\u0026gt; マ U+FF90 \u0026#39;ﾐ\u0026#39; -\u0026gt; ミ U+FF91 \u0026#39;ﾑ\u0026#39; -\u0026gt; ム U+FF92 \u0026#39;ﾒ\u0026#39; -\u0026gt; メ U+FF93 \u0026#39;ﾓ\u0026#39; -\u0026gt; モ U+FF94 \u0026#39;ﾔ\u0026#39; -\u0026gt; ヤ U+FF95 \u0026#39;ﾕ\u0026#39; -\u0026gt; ユ U+FF96 \u0026#39;ﾖ\u0026#39; -\u0026gt; ヨ U+FF97 \u0026#39;ﾗ\u0026#39; -\u0026gt; ラ U+FF98 \u0026#39;ﾘ\u0026#39; -\u0026gt; リ U+FF99 \u0026#39;ﾙ\u0026#39; -\u0026gt; ル U+FF9A \u0026#39;ﾚ\u0026#39; -\u0026gt; レ U+FF9B \u0026#39;ﾛ\u0026#39; -\u0026gt; ロ U+FF9C \u0026#39;ﾜ\u0026#39; -\u0026gt; ワ U+FF9D \u0026#39;ﾝ\u0026#39; -\u0026gt; ン ふむむ。 変体仮名は NFKC 正規化の対象にならないんだな。\n更についでに，平仮名もやってしまおう。 平仮名は\nvar _Hiragana = \u0026amp;RangeTable{ R16: []Range16{ {0x3041, 0x3096, 1}, {0x309d, 0x309f, 1}, }, R32: []Range32{ {0x1b001, 0x1b11e, 1}, {0x1b150, 0x1b152, 1}, {0x1f200, 0x1f200, 1}, }, } と定義されている。 なので 0x3041 から 0x1f200 の範囲でスキャンすればいいかな。 とりあえず\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; ) func main() { i := 0 for c := rune(0x3041); c \u0026lt;= rune(0x1f200); c++ { if unicode.In(c, unicode.Hiragana) { fmt.Printf(\u0026#34;%#U \u0026#34;, c) i++ i \u0026amp;= 0x0f if i == 0 { fmt.Println() } } } fmt.Println() } でいってみよう。\n$ go run sample5.go U+3041 \u0026#39;ぁ\u0026#39; U+3042 \u0026#39;あ\u0026#39; U+3043 \u0026#39;ぃ\u0026#39; U+3044 \u0026#39;い\u0026#39; U+3045 \u0026#39;ぅ\u0026#39; U+3046 \u0026#39;う\u0026#39; U+3047 \u0026#39;ぇ\u0026#39; U+3048 \u0026#39;え\u0026#39; U+3049 \u0026#39;ぉ\u0026#39; U+304A \u0026#39;お\u0026#39; U+304B \u0026#39;か\u0026#39; U+304C \u0026#39;が\u0026#39; U+304D \u0026#39;き\u0026#39; U+304E \u0026#39;ぎ\u0026#39; U+304F \u0026#39;く\u0026#39; U+3050 \u0026#39;ぐ\u0026#39; U+3051 \u0026#39;け\u0026#39; U+3052 \u0026#39;げ\u0026#39; U+3053 \u0026#39;こ\u0026#39; U+3054 \u0026#39;ご\u0026#39; U+3055 \u0026#39;さ\u0026#39; U+3056 \u0026#39;ざ\u0026#39; U+3057 \u0026#39;し\u0026#39; U+3058 \u0026#39;じ\u0026#39; U+3059 \u0026#39;す\u0026#39; U+305A \u0026#39;ず\u0026#39; U+305B \u0026#39;せ\u0026#39; U+305C \u0026#39;ぜ\u0026#39; U+305D \u0026#39;そ\u0026#39; U+305E \u0026#39;ぞ\u0026#39; U+305F \u0026#39;た\u0026#39; U+3060 \u0026#39;だ\u0026#39; U+3061 \u0026#39;ち\u0026#39; U+3062 \u0026#39;ぢ\u0026#39; U+3063 \u0026#39;っ\u0026#39; U+3064 \u0026#39;つ\u0026#39; U+3065 \u0026#39;づ\u0026#39; U+3066 \u0026#39;て\u0026#39; U+3067 \u0026#39;で\u0026#39; U+3068 \u0026#39;と\u0026#39; U+3069 \u0026#39;ど\u0026#39; U+306A \u0026#39;な\u0026#39; U+306B \u0026#39;に\u0026#39; U+306C \u0026#39;ぬ\u0026#39; U+306D \u0026#39;ね\u0026#39; U+306E \u0026#39;の\u0026#39; U+306F \u0026#39;は\u0026#39; U+3070 \u0026#39;ば\u0026#39; U+3071 \u0026#39;ぱ\u0026#39; U+3072 \u0026#39;ひ\u0026#39; U+3073 \u0026#39;び\u0026#39; U+3074 \u0026#39;ぴ\u0026#39; U+3075 \u0026#39;ふ\u0026#39; U+3076 \u0026#39;ぶ\u0026#39; U+3077 \u0026#39;ぷ\u0026#39; U+3078 \u0026#39;へ\u0026#39; U+3079 \u0026#39;べ\u0026#39; U+307A \u0026#39;ぺ\u0026#39; U+307B \u0026#39;ほ\u0026#39; U+307C \u0026#39;ぼ\u0026#39; U+307D \u0026#39;ぽ\u0026#39; U+307E \u0026#39;ま\u0026#39; U+307F \u0026#39;み\u0026#39; U+3080 \u0026#39;む\u0026#39; U+3081 \u0026#39;め\u0026#39; U+3082 \u0026#39;も\u0026#39; U+3083 \u0026#39;ゃ\u0026#39; U+3084 \u0026#39;や\u0026#39; U+3085 \u0026#39;ゅ\u0026#39; U+3086 \u0026#39;ゆ\u0026#39; U+3087 \u0026#39;ょ\u0026#39; U+3088 \u0026#39;よ\u0026#39; U+3089 \u0026#39;ら\u0026#39; U+308A \u0026#39;り\u0026#39; U+308B \u0026#39;る\u0026#39; U+308C \u0026#39;れ\u0026#39; U+308D \u0026#39;ろ\u0026#39; U+308E \u0026#39;ゎ\u0026#39; U+308F \u0026#39;わ\u0026#39; U+3090 \u0026#39;ゐ\u0026#39; U+3091 \u0026#39;ゑ\u0026#39; U+3092 \u0026#39;を\u0026#39; U+3093 \u0026#39;ん\u0026#39; U+3094 \u0026#39;ゔ\u0026#39; U+3095 \u0026#39;ゕ\u0026#39; U+3096 \u0026#39;ゖ\u0026#39; U+309D \u0026#39;ゝ\u0026#39; U+309E \u0026#39;ゞ\u0026#39; U+309F \u0026#39;ゟ\u0026#39; U+1B001 \u0026#39;𛀁\u0026#39; U+1B002 \u0026#39;𛀂\u0026#39; U+1B003 \u0026#39;𛀃\u0026#39; U+1B004 \u0026#39;𛀄\u0026#39; U+1B005 \u0026#39;𛀅\u0026#39; U+1B006 \u0026#39;𛀆\u0026#39; U+1B007 \u0026#39;𛀇\u0026#39; U+1B008 \u0026#39;𛀈\u0026#39; U+1B009 \u0026#39;𛀉\u0026#39; U+1B00A \u0026#39;𛀊\u0026#39; U+1B00B \u0026#39;𛀋\u0026#39; U+1B00C \u0026#39;𛀌\u0026#39; U+1B00D \u0026#39;𛀍\u0026#39; U+1B00E \u0026#39;𛀎\u0026#39; U+1B00F \u0026#39;𛀏\u0026#39; U+1B010 \u0026#39;𛀐\u0026#39; U+1B011 \u0026#39;𛀑\u0026#39; U+1B012 \u0026#39;𛀒\u0026#39; U+1B013 \u0026#39;𛀓\u0026#39; U+1B014 \u0026#39;𛀔\u0026#39; U+1B015 \u0026#39;𛀕\u0026#39; U+1B016 \u0026#39;𛀖\u0026#39; U+1B017 \u0026#39;𛀗\u0026#39; U+1B018 \u0026#39;𛀘\u0026#39; U+1B019 \u0026#39;𛀙\u0026#39; U+1B01A \u0026#39;𛀚\u0026#39; U+1B01B \u0026#39;𛀛\u0026#39; U+1B01C \u0026#39;𛀜\u0026#39; U+1B01D \u0026#39;𛀝\u0026#39; U+1B01E \u0026#39;𛀞\u0026#39; U+1B01F \u0026#39;𛀟\u0026#39; U+1B020 \u0026#39;𛀠\u0026#39; U+1B021 \u0026#39;𛀡\u0026#39; U+1B022 \u0026#39;𛀢\u0026#39; U+1B023 \u0026#39;𛀣\u0026#39; U+1B024 \u0026#39;𛀤\u0026#39; U+1B025 \u0026#39;𛀥\u0026#39; U+1B026 \u0026#39;𛀦\u0026#39; U+1B027 \u0026#39;𛀧\u0026#39; U+1B028 \u0026#39;𛀨\u0026#39; U+1B029 \u0026#39;𛀩\u0026#39; U+1B02A \u0026#39;𛀪\u0026#39; U+1B02B \u0026#39;𛀫\u0026#39; U+1B02C \u0026#39;𛀬\u0026#39; U+1B02D \u0026#39;𛀭\u0026#39; U+1B02E \u0026#39;𛀮\u0026#39; U+1B02F \u0026#39;𛀯\u0026#39; U+1B030 \u0026#39;𛀰\u0026#39; U+1B031 \u0026#39;𛀱\u0026#39; U+1B032 \u0026#39;𛀲\u0026#39; U+1B033 \u0026#39;𛀳\u0026#39; U+1B034 \u0026#39;𛀴\u0026#39; U+1B035 \u0026#39;𛀵\u0026#39; U+1B036 \u0026#39;𛀶\u0026#39; U+1B037 \u0026#39;𛀷\u0026#39; U+1B038 \u0026#39;𛀸\u0026#39; U+1B039 \u0026#39;𛀹\u0026#39; U+1B03A \u0026#39;𛀺\u0026#39; U+1B03B \u0026#39;𛀻\u0026#39; U+1B03C \u0026#39;𛀼\u0026#39; U+1B03D \u0026#39;𛀽\u0026#39; U+1B03E \u0026#39;𛀾\u0026#39; U+1B03F \u0026#39;𛀿\u0026#39; U+1B040 \u0026#39;𛁀\u0026#39; U+1B041 \u0026#39;𛁁\u0026#39; U+1B042 \u0026#39;𛁂\u0026#39; U+1B043 \u0026#39;𛁃\u0026#39; U+1B044 \u0026#39;𛁄\u0026#39; U+1B045 \u0026#39;𛁅\u0026#39; U+1B046 \u0026#39;𛁆\u0026#39; U+1B047 \u0026#39;𛁇\u0026#39; U+1B048 \u0026#39;𛁈\u0026#39; U+1B049 \u0026#39;𛁉\u0026#39; U+1B04A \u0026#39;𛁊\u0026#39; U+1B04B \u0026#39;𛁋\u0026#39; U+1B04C \u0026#39;𛁌\u0026#39; U+1B04D \u0026#39;𛁍\u0026#39; U+1B04E \u0026#39;𛁎\u0026#39; U+1B04F \u0026#39;𛁏\u0026#39; U+1B050 \u0026#39;𛁐\u0026#39; U+1B051 \u0026#39;𛁑\u0026#39; U+1B052 \u0026#39;𛁒\u0026#39; U+1B053 \u0026#39;𛁓\u0026#39; U+1B054 \u0026#39;𛁔\u0026#39; U+1B055 \u0026#39;𛁕\u0026#39; U+1B056 \u0026#39;𛁖\u0026#39; U+1B057 \u0026#39;𛁗\u0026#39; U+1B058 \u0026#39;𛁘\u0026#39; U+1B059 \u0026#39;𛁙\u0026#39; U+1B05A \u0026#39;𛁚\u0026#39; U+1B05B \u0026#39;𛁛\u0026#39; U+1B05C \u0026#39;𛁜\u0026#39; U+1B05D \u0026#39;𛁝\u0026#39; U+1B05E \u0026#39;𛁞\u0026#39; U+1B05F \u0026#39;𛁟\u0026#39; U+1B060 \u0026#39;𛁠\u0026#39; U+1B061 \u0026#39;𛁡\u0026#39; U+1B062 \u0026#39;𛁢\u0026#39; U+1B063 \u0026#39;𛁣\u0026#39; U+1B064 \u0026#39;𛁤\u0026#39; U+1B065 \u0026#39;𛁥\u0026#39; U+1B066 \u0026#39;𛁦\u0026#39; U+1B067 \u0026#39;𛁧\u0026#39; U+1B068 \u0026#39;𛁨\u0026#39; U+1B069 \u0026#39;𛁩\u0026#39; U+1B06A \u0026#39;𛁪\u0026#39; U+1B06B \u0026#39;𛁫\u0026#39; U+1B06C \u0026#39;𛁬\u0026#39; U+1B06D \u0026#39;𛁭\u0026#39; U+1B06E \u0026#39;𛁮\u0026#39; U+1B06F \u0026#39;𛁯\u0026#39; U+1B070 \u0026#39;𛁰\u0026#39; U+1B071 \u0026#39;𛁱\u0026#39; U+1B072 \u0026#39;𛁲\u0026#39; U+1B073 \u0026#39;𛁳\u0026#39; U+1B074 \u0026#39;𛁴\u0026#39; U+1B075 \u0026#39;𛁵\u0026#39; U+1B076 \u0026#39;𛁶\u0026#39; U+1B077 \u0026#39;𛁷\u0026#39; U+1B078 \u0026#39;𛁸\u0026#39; U+1B079 \u0026#39;𛁹\u0026#39; U+1B07A \u0026#39;𛁺\u0026#39; U+1B07B \u0026#39;𛁻\u0026#39; U+1B07C \u0026#39;𛁼\u0026#39; U+1B07D \u0026#39;𛁽\u0026#39; U+1B07E \u0026#39;𛁾\u0026#39; U+1B07F \u0026#39;𛁿\u0026#39; U+1B080 \u0026#39;𛂀\u0026#39; U+1B081 \u0026#39;𛂁\u0026#39; U+1B082 \u0026#39;𛂂\u0026#39; U+1B083 \u0026#39;𛂃\u0026#39; U+1B084 \u0026#39;𛂄\u0026#39; U+1B085 \u0026#39;𛂅\u0026#39; U+1B086 \u0026#39;𛂆\u0026#39; U+1B087 \u0026#39;𛂇\u0026#39; U+1B088 \u0026#39;𛂈\u0026#39; U+1B089 \u0026#39;𛂉\u0026#39; U+1B08A \u0026#39;𛂊\u0026#39; U+1B08B \u0026#39;𛂋\u0026#39; U+1B08C \u0026#39;𛂌\u0026#39; U+1B08D \u0026#39;𛂍\u0026#39; U+1B08E \u0026#39;𛂎\u0026#39; U+1B08F \u0026#39;𛂏\u0026#39; U+1B090 \u0026#39;𛂐\u0026#39; U+1B091 \u0026#39;𛂑\u0026#39; U+1B092 \u0026#39;𛂒\u0026#39; U+1B093 \u0026#39;𛂓\u0026#39; U+1B094 \u0026#39;𛂔\u0026#39; U+1B095 \u0026#39;𛂕\u0026#39; U+1B096 \u0026#39;𛂖\u0026#39; U+1B097 \u0026#39;𛂗\u0026#39; U+1B098 \u0026#39;𛂘\u0026#39; U+1B099 \u0026#39;𛂙\u0026#39; U+1B09A \u0026#39;𛂚\u0026#39; U+1B09B \u0026#39;𛂛\u0026#39; U+1B09C \u0026#39;𛂜\u0026#39; U+1B09D \u0026#39;𛂝\u0026#39; U+1B09E \u0026#39;𛂞\u0026#39; U+1B09F \u0026#39;𛂟\u0026#39; U+1B0A0 \u0026#39;𛂠\u0026#39; U+1B0A1 \u0026#39;𛂡\u0026#39; U+1B0A2 \u0026#39;𛂢\u0026#39; U+1B0A3 \u0026#39;𛂣\u0026#39; U+1B0A4 \u0026#39;𛂤\u0026#39; U+1B0A5 \u0026#39;𛂥\u0026#39; U+1B0A6 \u0026#39;𛂦\u0026#39; U+1B0A7 \u0026#39;𛂧\u0026#39; U+1B0A8 \u0026#39;𛂨\u0026#39; U+1B0A9 \u0026#39;𛂩\u0026#39; U+1B0AA \u0026#39;𛂪\u0026#39; U+1B0AB \u0026#39;𛂫\u0026#39; U+1B0AC \u0026#39;𛂬\u0026#39; U+1B0AD \u0026#39;𛂭\u0026#39; U+1B0AE \u0026#39;𛂮\u0026#39; U+1B0AF \u0026#39;𛂯\u0026#39; U+1B0B0 \u0026#39;𛂰\u0026#39; U+1B0B1 \u0026#39;𛂱\u0026#39; U+1B0B2 \u0026#39;𛂲\u0026#39; U+1B0B3 \u0026#39;𛂳\u0026#39; U+1B0B4 \u0026#39;𛂴\u0026#39; U+1B0B5 \u0026#39;𛂵\u0026#39; U+1B0B6 \u0026#39;𛂶\u0026#39; U+1B0B7 \u0026#39;𛂷\u0026#39; U+1B0B8 \u0026#39;𛂸\u0026#39; U+1B0B9 \u0026#39;𛂹\u0026#39; U+1B0BA \u0026#39;𛂺\u0026#39; U+1B0BB \u0026#39;𛂻\u0026#39; U+1B0BC \u0026#39;𛂼\u0026#39; U+1B0BD \u0026#39;𛂽\u0026#39; U+1B0BE \u0026#39;𛂾\u0026#39; U+1B0BF \u0026#39;𛂿\u0026#39; U+1B0C0 \u0026#39;𛃀\u0026#39; U+1B0C1 \u0026#39;𛃁\u0026#39; U+1B0C2 \u0026#39;𛃂\u0026#39; U+1B0C3 \u0026#39;𛃃\u0026#39; U+1B0C4 \u0026#39;𛃄\u0026#39; U+1B0C5 \u0026#39;𛃅\u0026#39; U+1B0C6 \u0026#39;𛃆\u0026#39; U+1B0C7 \u0026#39;𛃇\u0026#39; U+1B0C8 \u0026#39;𛃈\u0026#39; U+1B0C9 \u0026#39;𛃉\u0026#39; U+1B0CA \u0026#39;𛃊\u0026#39; U+1B0CB \u0026#39;𛃋\u0026#39; U+1B0CC \u0026#39;𛃌\u0026#39; U+1B0CD \u0026#39;𛃍\u0026#39; U+1B0CE \u0026#39;𛃎\u0026#39; U+1B0CF \u0026#39;𛃏\u0026#39; U+1B0D0 \u0026#39;𛃐\u0026#39; U+1B0D1 \u0026#39;𛃑\u0026#39; U+1B0D2 \u0026#39;𛃒\u0026#39; U+1B0D3 \u0026#39;𛃓\u0026#39; U+1B0D4 \u0026#39;𛃔\u0026#39; U+1B0D5 \u0026#39;𛃕\u0026#39; U+1B0D6 \u0026#39;𛃖\u0026#39; U+1B0D7 \u0026#39;𛃗\u0026#39; U+1B0D8 \u0026#39;𛃘\u0026#39; U+1B0D9 \u0026#39;𛃙\u0026#39; U+1B0DA \u0026#39;𛃚\u0026#39; U+1B0DB \u0026#39;𛃛\u0026#39; U+1B0DC \u0026#39;𛃜\u0026#39; U+1B0DD \u0026#39;𛃝\u0026#39; U+1B0DE \u0026#39;𛃞\u0026#39; U+1B0DF \u0026#39;𛃟\u0026#39; U+1B0E0 \u0026#39;𛃠\u0026#39; U+1B0E1 \u0026#39;𛃡\u0026#39; U+1B0E2 \u0026#39;𛃢\u0026#39; U+1B0E3 \u0026#39;𛃣\u0026#39; U+1B0E4 \u0026#39;𛃤\u0026#39; U+1B0E5 \u0026#39;𛃥\u0026#39; U+1B0E6 \u0026#39;𛃦\u0026#39; U+1B0E7 \u0026#39;𛃧\u0026#39; U+1B0E8 \u0026#39;𛃨\u0026#39; U+1B0E9 \u0026#39;𛃩\u0026#39; U+1B0EA \u0026#39;𛃪\u0026#39; U+1B0EB \u0026#39;𛃫\u0026#39; U+1B0EC \u0026#39;𛃬\u0026#39; U+1B0ED \u0026#39;𛃭\u0026#39; U+1B0EE \u0026#39;𛃮\u0026#39; U+1B0EF \u0026#39;𛃯\u0026#39; U+1B0F0 \u0026#39;𛃰\u0026#39; U+1B0F1 \u0026#39;𛃱\u0026#39; U+1B0F2 \u0026#39;𛃲\u0026#39; U+1B0F3 \u0026#39;𛃳\u0026#39; U+1B0F4 \u0026#39;𛃴\u0026#39; U+1B0F5 \u0026#39;𛃵\u0026#39; U+1B0F6 \u0026#39;𛃶\u0026#39; U+1B0F7 \u0026#39;𛃷\u0026#39; U+1B0F8 \u0026#39;𛃸\u0026#39; U+1B0F9 \u0026#39;𛃹\u0026#39; U+1B0FA \u0026#39;𛃺\u0026#39; U+1B0FB \u0026#39;𛃻\u0026#39; U+1B0FC \u0026#39;𛃼\u0026#39; U+1B0FD \u0026#39;𛃽\u0026#39; U+1B0FE \u0026#39;𛃾\u0026#39; U+1B0FF \u0026#39;𛃿\u0026#39; U+1B100 \u0026#39;𛄀\u0026#39; U+1B101 \u0026#39;𛄁\u0026#39; U+1B102 \u0026#39;𛄂\u0026#39; U+1B103 \u0026#39;𛄃\u0026#39; U+1B104 \u0026#39;𛄄\u0026#39; U+1B105 \u0026#39;𛄅\u0026#39; U+1B106 \u0026#39;𛄆\u0026#39; U+1B107 \u0026#39;𛄇\u0026#39; U+1B108 \u0026#39;𛄈\u0026#39; U+1B109 \u0026#39;𛄉\u0026#39; U+1B10A \u0026#39;𛄊\u0026#39; U+1B10B \u0026#39;𛄋\u0026#39; U+1B10C \u0026#39;𛄌\u0026#39; U+1B10D \u0026#39;𛄍\u0026#39; U+1B10E \u0026#39;𛄎\u0026#39; U+1B10F \u0026#39;𛄏\u0026#39; U+1B110 \u0026#39;𛄐\u0026#39; U+1B111 \u0026#39;𛄑\u0026#39; U+1B112 \u0026#39;𛄒\u0026#39; U+1B113 \u0026#39;𛄓\u0026#39; U+1B114 \u0026#39;𛄔\u0026#39; U+1B115 \u0026#39;𛄕\u0026#39; U+1B116 \u0026#39;𛄖\u0026#39; U+1B117 \u0026#39;𛄗\u0026#39; U+1B118 \u0026#39;𛄘\u0026#39; U+1B119 \u0026#39;𛄙\u0026#39; U+1B11A \u0026#39;𛄚\u0026#39; U+1B11B \u0026#39;𛄛\u0026#39; U+1B11C \u0026#39;𛄜\u0026#39; U+1B11D \u0026#39;𛄝\u0026#39; U+1B11E \u0026#39;𛄞\u0026#39; U+1B150 \u0026#39;𛅐\u0026#39; U+1B151 \u0026#39;𛅑\u0026#39; U+1B152 \u0026#39;𛅒\u0026#39; U+1F200 \u0026#39;🈀\u0026#39; うわ。 U+1B001 以降は変体仮名か。 U+1B150 から U+1B152 までは小書きの「ゐ」「ゑ」「を」とのこと。 ちなみに小書きの「ん」はプロポーザルが通らなかったらしい。 よーわからん（笑）\nこれも NFKC 正規化をかけてみよっか。\n//go:build run // +build run  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;unicode\u0026#34; \u0026#34;golang.org/x/text/unicode/norm\u0026#34; ) func main() { for c := rune(0x3041); c \u0026lt;= rune(0x1f200); c++ { if unicode.In(c, unicode.Hiragana) { n := norm.NFKC.String(string(c)) if n != string(c) { fmt.Printf(\u0026#34;%#U -\u0026gt; %s\\n\u0026#34;, c, n) } } } } 今度は少ないはず（笑）\n$ go run sample6.go U+309F \u0026#39;ゟ\u0026#39; -\u0026gt; より U+1F200 \u0026#39;🈀\u0026#39; -\u0026gt; ほか うんうん。 こんな感じだよね。\nはぅぅ。 拙作の gnkf も直さなきゃ\u0026hellip;\nブックマーク  Go 言語と Unicode 正規化  参考図書   プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n "
    },
    {
      "title": "GnuPG 2.2.31 (LTS) がリリースされた",
      "section": "release",
      "description": "Libgcrypt の脆弱性について追記。GnuPG 自身のセキュリティ・アップデートはなし。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/09/gnupg-2_2_31-lts-is-released/",
      "published": "2021-09-16T11:39:59+00:00",
      "update": "2021-09-16T23:32:41+00:00",
      "content": "GnuPG LTS 版 2.2.31 がリリースされた。\n [Announce] GnuPG 2.2.31 (LTS) released  セキュリティ・アップデートはなし。 詳細はこちら。\n agent: Fix a regression in GET_PASSPHRASE. [#5577] scd: Fix an assertion failure in close_pcsc_reader. [67e1834ad4] scd: Add support for PC/SC in \u0026ldquo;GETINFO reader_list\u0026rdquo;.  Release-info: https://dev.gnupg.org/T5571 via GnuPG 2.2.31 (LTS) released  【2021-09-17 追記】 Libgcrypt の脆弱性について Ubuntu が Libgcrypt の脆弱性報告をしていて気が付いたが，Libgcrypt 1.8.8 および 1.9 系の 1.9.4 より前のバージョンは脆弱性を含んでいるらしい。 GnuPG 側のアナウンスがなくいつの間にかアップデートしてたので単純なバグ修正かと思ったらそうじゃなかったようだ。 そういうのはちゃんと通知してほしい。\nてか， Ubuntu は（OpenSSL もそうだが）ちまちまバックポートパッチを当てるんじゃなくて普通にバージョンアップしてくれよ。 誰がそのパッチの安全性を保証するんだよ orz\nCVE-2021-33560 Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP. via NVD - CVE-2021-33560   CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N 深刻度: 重要 (Score: 7.5)     基本評価基準 評価値     攻撃元区分 ネットワーク   攻撃条件の複雑さ 低   必要な特権レベル 不要   ユーザ関与レベル 不要   スコープ 変更なし   機密性への影響 高   完全性への影響 なし   可用性への影響 なし    CVE-2021-40528 The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver’s public key, the generator defined by the receiver’s public key, and the sender’s ephemeral exponents can lead to a cross-configuration attack against OpenPGP. via NVD - CVE-2021-40528   CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N 深刻度: 警告 (Score: 5.9)     基本評価基準 評価値     攻撃元区分 ネットワーク   攻撃条件の複雑さ 高   必要な特権レベル 不要   ユーザ関与レベル 不要   スコープ 変更なし   機密性への影響 高   完全性への影響 なし   可用性への影響 なし     On the (in)security of ElGamal in OpenPGP - Part I - Syssec@IBM Research On the (in)security of ElGamal in OpenPGP - Part II - Syssec@IBM Research  GnuPG 関連パッケージのバージョン GnuPG 関連の各パッケージのバージョンは以下の通り（数字は大体のビルド順）。\n   # パッケージ名 バージョン 公開日 更新     1 Libgpg-error 1.42 2021-03-22    2 Libgcrypt 1.8.8 (LTS) 2021-06-02     Libgcrypt 1.9.4 2021-08-22    3 Libassuan 2.5.5 2021-03-22    4 Libksba 1.6.0 2021-06-10    5 nPth 1.6 2018-07-16    6 ntbTLS 0.2.0 2020-08-27    7 GnuPG 2.2.31 (LTS) 2021-09-15     GnuPG 2.3.2 2021-08-24     現在 GnuPG には2.2系と2.3系があり1，2.2系は LTS 版に位置付けられている。 2.3系では AEAD (Authenticated Encryption with Associated Data) 等 RFC 4880bis で検討されている機能が実装されているので，最新機能を試したいのであればこちらを入れるとよいだろう。 なお2.2系は少なくとも2024年末まではサポートが続けられる予定である。 通常運用であれば，当面は2.2系でも問題ない（ECC も対応してるよ）。\nアップデートは計画的に。\nブックマーク  OpenPGP の実装  参考図書   暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n   暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n   厳密には1.4系もあるが，これは legacy 版と位置付けられており，よほどのバグか脆弱性がない限りは更新されない。もし今だに1.4系（あるいは既にサポートされていない2.0/2.1系）を使っているのなら2.2系以降にアップグレードすることを強くお勧めする。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Java 17 LTS がリリースされた",
      "section": "release",
      "description": "Java のサポート期限ってどうなってるんだっけ？",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2021/09/java-17-is-released/",
      "published": "2021-09-15T11:27:14+00:00",
      "update": "2021-09-26T03:53:08+00:00",
      "content": "予定通り Java 17 がリリースされた。 Java 11 以来の LTS (Long-Term-Support) バージョンである。\n JDK 17 JDK 17 GA Release JDK 17 Release Notes  OpenJDK を APT で管理するメリットはないので，実行バイナリをリリースページから直接ダウンロードして配置する。 以下は完全手動でのインストール（笑）\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz\u0026#34; -O $ cd .. $ sudo unlink java # 以前のバージョンの Java 環境がある場合 $ sudo tar xvf src/openjdk-17_linux-x64_bin.tar.gz $ sudo ln -s jdk-17 java $ java -version # すでに PATH が通っている場合 openjdk version \u0026#34;17\u0026#34; 2021-09-14 OpenJDK Runtime Environment (build 17+35-2724) OpenJDK 64-Bit Server VM (build 17+35-2724, mixed mode, sharing) 私としては PlantUML が動けばいいので，試しておく1。\nFactory Method Pattern  うむうむ。 ちゃんと動くな。\nJava のサポート期限ってどうなってるんだっけ？ まずは Oracle Java。 これははっきりしている。\n Oracle Java SE Support Roadmap  これによると\n   Release GA Date Premier Support Extended Support     7 (LTS) 2011-07 2019-07 2022-07   8 (LTS) 2014-03 2022-03 2030-12   11 (LTS) 2018-09 2023-09 2026-09   16 2021-03 2021-09 -   17 (LTS) 2021-09 2026-09 2029-09   18 2022-03 2022-09 -   19 2022-09 2023-03 -   20 2023-03 2022-09 -   21 (LTS) 2023-09 2028-09 2031-09    となっている2（2021-09 時点でサポートが終了しているものは除いている）。\n一方 OpenJDK はよく分からないが AdoptOpenJDK については\n Support | AdoptOpenJDK - Open source, prebuilt OpenJDK binaries  によると\n   バージョン First Availability End of Availability     8 (LTS) 2014-03 at least 2026-05   11 (LTS) 2018-09 2024-10   16 2021-03 2021-09   17 (LTS) 2021-09 (TBC)    となっている。 まだ更新されないのかな？\nこういっちゃあ何だが，きょうび Oracle Java をわざわざ選択する理由はないだろう。 どうしても Oracle のクラウドを使いたいというのなら別だが（笑）\nAmazon にしたって Microsoft にしたって IBM にしたって，自社のクラウドでそれぞれオープンな製品を用意してる。 つまり「どの Java を使うか」ではなく「どの XaaS 環境を使うか」で必然的に Java も決まってしまうのである。\nいや，この前見かけた #ITアウトレイジが面白くて\n とっくにOpenJDKに移行済みなんだよ！今更戻れるわけねーだろ！#ITアウトレイジhttps://t.co/FL8FyhEjSj pic.twitter.com/UAtrrnvABM\n\u0026mdash; hisa_u (@hisa_u) September 15, 2021  って，感じだよねぇ（笑）\nブックマーク  3年ぶりの長期サポート版となる「Java 17」正式版がリリース。M1 Macのサポート、Sealed Classの追加など － Publickey オラクル、Oracle JDKを再び無料提供へ、本番環境でも利用可。昨日リリースのJava 17から － Publickey Oracle、「Java 17」を発表 ～3年ぶりの長期サポートリリース（LTS） - 窓の杜 Javaの長期サポート（LTS）版、次回は2年後に登場の見通し。オラクルがLTSのサイクルを3年から2年に変更提案 － Publickey AWS、Java 17対応の無料Javaディストリビューション「Amazon Corretto 17」リリース。ただし長期サポート期間は未定 － Publickey  参考図書   Spring Data JPAプログラミング入門 溝口賢司 (著) 秀和システム 2017-08-03 (Release 2018-04-23) Kindle版 B07CKHR8C1 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  JPA のお勉強用に購入。紙のほうはプレミアが付いてるっぽいが Kindle で買えるよ。固定レイアウトだからブラウザの Kindle Cloud Reader で読めるし。真面目に基本を押さえて書いていて分かりやすい。\nreviewed by Spiegel on 2021-08-26 (powered by PA-APIv5)\n   Effective Java 第3版 Joshua Bloch (著), 柴田 芳樹 (翻訳) 丸善出版 2018-10-30 単行本（ソフトカバー） 4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。\nreviewed by Spiegel on 2021-03-17 (powered by PA-APIv5)\n   Spring Boot 2 入門: 基礎から実演まで Webアプリ開発入門 原田 けいと (著), 竹田 甘地 (著), Robert Segawa (著)  2020-05-22 (Release 2020-05-22) Kindle版 B0893LQ5KY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  Spring Boot を勉強することになって急遽買った本。めっさ分かりやすかった。 PDF 版が欲しいくらい（笑）\nreviewed by Spiegel on 2021-06-13 (powered by PA-APIv5)\n   大鉄人１７ 神谷政浩 (出演), 竹井みどり (出演), 中丸忠雄 (出演), 原口剛 (出演), 島田歌穂 (出演), 高品正広 (出演), 大月ウルフ (出演), 平田昭彦 (出演), 山口あきら (出演), 山本麟一 (出演), 小林恭二 (出演), 河合徹 (出演), 村松美枝子 (出演), 水島弘 (出演), 山田稔 (監督), 若林幹 (監督), 内田一作 (監督), 上原正三 (Writer), 伊上勝 (Writer), 安斉あゆ子 (Writer), 熊谷節 (Writer), 江連卓 (Writer)  (Release 2017-03-10) Prime Video B06XC6CYRF (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  なんと！ Amazon Prime Video 見れるのか！ 好きな作品でした。\nreviewed by Spiegel on 2021-09-15 (powered by PA-APIv5)\n   2021-08-30 に PlantUML V1.2021.10 がリリースされている。 PlantUML の使い方等については拙文「真面目に PlantUML」シリーズを参考にどうぞ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Oracle Java 8 はクライアント側での利用と開発目的での利用のみ許可されている。サーバ側での運用は別途有償契約が必要（の筈）。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2021-09-12 のブックマーク",
      "section": "bookmarks",
      "description": "「誰でも無料でアメリカ天文学会が発行する学術誌を閲覧可能になることが決定」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2021/09/12-bookmarks/",
      "published": "2021-09-12T02:12:19+00:00",
      "update": "2021-09-12T02:19:04+00:00",
      "content": "リリース情報  Hugo 0.88.1: One Fix | Hugo  Release v0.88.1 · gohugoio/hugo · GitHub   Release v3.7.3 · go-task/task · GitHub Release 8.12.1 · mermaid-js/mermaid · GitHub Release v1.42.1 · golangci/golangci-lint · GitHub Thunderbird — Release Notes (91.1.0) — Thunderbird Thunderbird — Release Notes (78.14.0) — Thunderbird Firefox 92.0, See All New Features, Updates and Fixes Announcing Rust 1.55.0 | Rust Blog Release gopls/v0.7.2 · golang/tools · GitHub Announcement of LibreOffice 7.1.6 Community - The Document Foundation Blog LibreOffice Getting Started Guide 7.2 - The Document Foundation Blog 「OpenSSL 3.0.0」が公開 ～ライセンスは「Apache License 2.0」に - 窓の杜  OpenSSL 3.0.0 が出たので変更点を確認する    セキュリティ＆プライバシー関連  Someone could be tracking you through your headphones  Tracking People by their MAC Addresses - Schneier on Security   Bluetoothスタックに16個の脆弱性が見つかる　1400以上の製品に影響か - ITmedia エンタープライズ 小説投稿サイト「カクヨム」の偽サイトに注意　作品を無断転載　UIも本物そっくりにコピー - ITmedia NEWS This Seemingly Normal Lightning Cable Will Leak Everything You Type  Lightning Cable with Embedded Eavesdropping - Schneier on Security   Androidの2021年9月のセキュリティ更新が発表 - 窓の杜 Microsoft Windows 製品の Microsoft MSHTML の脆弱性対策について(CVE-2021-40444)：IPA 独立行政法人 情報処理推進機構  Microsoft MSHTMLの脆弱性（CVE-2021-40444）に関する注意喚起   Ghostscriptnにリモードコード実行の脆弱性、概念実証コードが公開 | TECH+ ツイッターが「ブロックせずにフォロワー解除」する機能をテスト中 | TechCrunch Japan GitHub security update: Vulnerabilities in tar and @npmcli/arborist | The GitHub Blog Bloomberg - Are you a robot?  知財関連  誰でも無料でアメリカ天文学会が発行する学術誌を閲覧可能になることが決定 - GIGAZINE 第４４４回：利用者のフェアディーリングの権利と著作者の権利の間のバランスを言うカナダ最高裁の判決: 無名の一知財政策ウォッチャーの独言  Linux または Ubuntu に関する話題  Ubuntu 18.04 その463 - Ubuntu 18.04.6 LTSの追加リリースへ - kledgeb LinuxカーネルにNTFSドライバーが追加、トーバルズ氏はGitHub経由のマージに苦言 - ZDNet Japan  Azure や Windows に関する話題  プレビュー版「Windows Terminal」のタブバーにアクリル効果、スタイリッシュな見栄えに - 窓の杜 「Windows Subsystem for Android」が「Microsoft Store」に？ - ZDNet Japan Windows Update KB5004296 成功せず - 電気ウナギ的○○  Go 言語関連  DaprのGo紹介 [機能紹介編] Tips For Effective Go Tests. Skipping tests is common practice… | by Moshe Beladev | Aug, 2021 | Medium Azure SDK for Goの管理ライブラリーセットがリニューアル - Qiita Increasing developer happiness with GitHub code scanning | The GitHub Blog Go製CGOフリーなSQLiteドライバーでentを使う Deep Dive into The Go\u0026rsquo;s Web Server GitHub - mattn/go-gimei : ダミーデータ作成用に  Java 言語関連  Spring Boot DBからファイルをダウンロード : showeryのブログ Spring Bootアプリケーションのネイティブイメージが簡単に作れるSpring Nativeの紹介 | フューチャー技術ブログ  その他  O\u0026rsquo;Reilly Japan - メタファーとしての発酵 プロフェッショナルIPv6（無料版） - Professional IPv6 - BOOTH パソコンユーザーのためのDRAM入門 Part 1 - Qiita Gitのインデックスの中身  Gitのオブジェクトの中身   GitHub Sponsors 登録手順 : 面倒くさいw CLI を作る中でわかった deno のうれしさ WASM-4 Denoの分散ホスティング「Deno Deploy」ベータ2公開。FiIe System API追加、クラッシュレポートなど － Publickey Zennで特定のコメントを非表示にする マイクロサービスの開発とテストファースト／テスト駆動開発 【Mercari Gears Lecture Series】 | メルカリエンジニアリング 貼り付けたコードの言語をAIが自動で推測 ～「Visual Studio Code」の2021年8月更新 - 窓の杜 グーグルの「時間結晶」研究と量子コンピューターにみる可能性 - ZDNet Japan マイクロソフト、WebAssemblyとWebGLで推論エンジンを実装した「ONNX Runtime Web」（ORT Web）をオープンソースで公開 － Publickey Why Erlang? | Fredrik Holmqvist  ブログ: なぜ、Erlangなのか?   9月2日木曜日に発生したAWS東京リージョンの大規模障害、原因はネットワークデバイスの新プロトコル処理に潜在的なバグがあったこと。AWSが報告書を公開 － Publickey Google、訂正不可能なメモリエラーによるクラッシュを回避する「Memory Poisoning Recovery」をGoogle Cloudで提供へ － Publickey 中国政府の告発本を出版した男性、出版直前に行方不明だった元妻から「出版をキャンセルして」と告げられたことを明かす - GIGAZINE FlutterのバックグラウンドDartコード実行を理解する by Kurogoma4D | プロポーザル | FlutterKaigi 2021 #FlutterKaigi - fortee.jp 「Amazon Elasticsearch Service」の名称が「Amazon OpenSearch Service」に変更。ElasticsearchからフォークしたOpenSearchも採用 － Publickey Amazon EKS Anywhereが正式リリース。オンプレミスにAmazon EKSと同様のKubernetes環境を無料で構築可能 － Publickey テスト文字列に「うんこ」と入れるな  新卒向け研修資料「テスト文字列に\u0026quot;うんこ\u0026quot;と入れるな」を公開しました | 株式会社インフィニットループ技術ブログ   【アップデート解説】Welcome to Flutter 2.5 !! 「部屋裏のバイテン」第3巻 : ぽじとろんの竹本泉観察記 米PayPalが日本のペイディを3000億円で買収、アジアで「BNPL」後払い市場に参入 | TechCrunch Japan レノボが12.6インチAndroidタブ「Lenovo Tab P12 Pro」発表、120Hz有機EL採用で重量565g | TechCrunch Japan When It Comes to Antitrust, It’s All Connected | Electronic Frontier Foundation  すべては反トラストに通ず：水平方向の独占と垂直方向の独占 | P2Pとかその辺のお話R   Epic対Apple訴訟に判決　Appleにアプリ内購入の強制禁止命令もEpicは控訴か - ITmedia NEWS iframe sandboxのメモ  "
    }
  ]
}
