{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "お彼岸の中日（お散歩カメラ 2025-03-20）",
      "section": "remark",
      "description": "墓参り / 玉湯川下り / 松江城観察 / 春分の日の夕日",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/20-osanpo-camera/",
      "published": "2025-03-20T12:54:05+00:00",
      "update": "2025-03-20T12:54:13+00:00",
      "content": "今朝の松江の最低気温は0℃ちょうど。 最高気温は12℃でちょっと暖かかったように見えるが，実は風が冷たくてねぇ。 インナーグローブ付けてきてよかったよ。\n今日は春分の日。 現在の定義では「太陽黄経が0°になる瞬間を含む日」である。 そして春分・秋分の日を挟む前後3日が「お彼岸」となる。\nvia Explanation about a celestial sphere in Japanese そうそう。 国立天文台が春分の日に合わせてこんな記事を出していた。\n春の初めは暦の要―春分と天文学 | 国立天文台(NAOJ) 参考にどうぞ。 この記事では言及されてないが，春分の日が彼岸の中日になったのは天保暦以降らしい。 歴史的には最近（近代以降）ってわけじゃないけど，それほど大昔でもないって感じかな。 面白いよね。\n墓参り さて，お彼岸なので実家に帰って拝んできた。 親父殿，久しぶり！\nお彼岸 | Flickr あっ，うちは位牌じゃなくて過去帖っス。 墓参りのついでに本家の梅を眺める。\n白梅 | Flickr ついでに実家のわんこ。\n黒柴 よし君 | Flickr 私のバッグのストラップをガジガジしてるところ。 甘噛みなので傷は付いてない。 賢い子である。 滅多に実家に帰らないせいか私にはあまり懐いてくれない。 今日も匂いを嗅ぎまくられた（笑）\nさて，出かけるか。\n玉湯川下り まずは玉造温泉方面へ。 途中，才の神遺跡にも寄ってみた1。\n布志名 才ノ神遺跡 | Flickr なんか缶が突っ込まれてるので「空き缶なんかいれんなよ」と思ったのだが，ちょっと違う？ ひょっとしてお賽銭とか入れるのだろうか。 しないけど。\n玉造温泉の玉湯川沿いには桜の木がたくさん植えられているのだが，まだ蕾は硬い感じ。 なので上向きの景色は諦めて玉湯川を眺めつつ宍道湖へ。\n今日のバードウォッチング（玉湯川） | Flickr 魚影（玉湯川） | Flickr 今日の宍道湖（玉湯川 河口） | Flickr 水量の割に水が綺麗なんだよな。 雪解け水？\n次は，市内へ行くか。\n松江城観察 昼食のためにJR松江駅に寄って，その後は松江城へ。\n白梅（松江城 二の丸） | Flickr 蕾は固い（松江城 本丸） | Flickr 今日の松江城 | Flickr 梅はいい感じに咲いてるけど桜の蕾は固い。 来週末からお城まつりが始まるのだが，桜が間に合うのか微妙？ 松江の開花予想が4月上旬とかなってるんだよなぁ。\n春分の日の夕日 島根県立図書館で少し休憩した後，ちょっと思いついて宍道湖の夕日を撮ってみることにした。 天気もいいし。\nいや，子供の頃言われなかった？ お彼岸の夕日は真西に沈むから夕日に向かって拝みなさいって。 いや日本の真西にインド（ネパール？）はないけどね（笑） えっ？ 今はそんなこと言わない？ そりゃすまん。\n宍道湖を眺めつつ，まだ時間が早かったので喫茶店まで移動。\n今日の宍道湖（袖師地蔵） | Flickr 休憩中（シロノワール ティラミスプリン） | Flickr いい時間になったので宍道湖まで戻る。\n今日の宍道湖（春分の日の夕景） | Flickr あいにく低空に雲があって日没は拝めそうにないが夕日は堪能できた。 ではどうぞ。\n春分の日（宍道湖） | Flickr 春分の日（宍道湖） | Flickr 春分の日（宍道湖） | Flickr お楽しみいただけましたか？ ほんじゃあ帰るか。\nブックマーク APOD: 2025 March 20 - The Solar Eclipse Analemma Project 参考 Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM キヤノン (Release 2020-12-10) エレクトロニクス B08L4WKDZ7 (ASIN), 4549292179675 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。\nreviewed by Spiegel on 2022-12-04 (powered by PA-APIv5)\nおたふく手袋 冬用蓄熱インナーグローブ[軽防寒 タッチパネル対応 蓄熱手袋]JW-145 ブラック Mサイズ おたふく手袋(Otafuku Glove) ウェア\u0026amp;シューズ B0CDPH5W49 (ASIN), 4970687291922 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; サイクルグローブの下に着けるインナーグローブとして購入。単独でも（吹きっさらしでなければ）まぁまぁ温かい。薄手なので着けたまま細かい作業が可能。スマホ操作も問題なし。\nreviewed by Spiegel on 2024-12-15 (powered by PA-APIv5)\nおたふく手袋 冬用防寒手袋 [背面防風 スベリ止め 反射テープ タッチパネル] JW-142 ブラック L おたふく手袋(Otafuku Glove) ウェア\u0026amp;シューズ B08KHW2PSB (ASIN), 4970687291687 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 手の甲側が防風加工されているのはいいのだが，自転車に乗るときはブレーキに手を添えているので，指先は全部防風してくれないかなぁ。インナーグローブと組み合わせれば0℃以上ならなんとか凌げる。氷点下ではたぶん無理。柔らかくて指が動かしやすいのはよい。\nreviewed by Spiegel on 2024-12-19 (powered by PA-APIv5)\n[クローム] ボディバッグ KADET BXRF_BLACK XRF (現行モデル) カデット マックス ブラック エックス リフレクティブ 15L リフレクター 防水 CHROME ウェア\u0026amp;シューズ B0BQQMVWBB (ASIN), 0841916176775 (EAN), 841916176775 (UPC) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 使い勝手についてはこの動画を参照のこと。たくさんの内ポケットで仕切られているのがいい。容量は15Lで，16インチノートPCが入る。取っ手も付いていて仕事でも使えそう。3点ストラップ。防水仕様。オモテ面は光を反射しやすい素材を使っていて，夜間でもクルマから視認しやすい（らしい）。\nreviewed by Spiegel on 2024-09-08 (powered by PA-APIv5)\nフィーリングラデーション ReGLOSS (メインアーティスト) cover corp. 2024-09-11 (Release 2024-09-11) MP3 ダウンロード B0DGG9JKM4 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; mora で高解像度版が買える。MV見て衝動買い。移動中に聴くと楽しいノリのいい曲。玲瓏（リンロン）と響く “ReSTART LINE!!” の歌詞部分がお気に入り。\nreviewed by Spiegel on 2024-09-16 (powered by PA-APIv5)\nサクラミラージュ ReGLOSS (メインアーティスト) cover corp. 2036-01-01 (Release 2025-03-10) MP3 ダウンロード B0DZNX5YTH (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; リリース日に mora の高解像度版を購入。この歳になってこんな買い方するとは（笑） ReGLOSS は5人の音色（おんしょく）が皆個性的で，これがカッチリ嵌ると本当に格好いい！ ヘヴィローテーション中。\nreviewed by Spiegel on 2025-03-10 (powered by PA-APIv5)\n作業中の BGV (メン限配信以外) 【雑談】EXPO\u0026amp;fes.ありがとうございました！雑談！！【儒烏風亭らでん #ReGLOSS 】 - YouTube 【 雑談 】横浜に行ってきました～！【音乃瀬奏・ときのそら・儒烏風亭らでん】#hololiveDEV_IS #ReGLOSS - YouTube 【歌枠】本日は静かな歌枠です #鏡見みら - YouTube 【お歌】春っぽい曲と言いながら好きな曲を歌うことになる枠【古代日本史VTuber きら子】 - YouTube 【 歌雑談 】ゆるっと歌ったり喋ったり【どっとライブ / #カルロピノ 】 - YouTube 【感動再び】感謝のEXPO・fes. 振り返り！映像も見せちゃいます。【#hololivefesEXPO25】 - YouTube 【歌枠】新しく覚えた曲とか歌うぞ～【虎金妃笑虎】 - YouTube 布志名の才の神遺跡については，次のページにあるドキュメントが参考になる： 「布志名大谷1遺跡・布志名大谷2遺跡・布志名才の神遺跡 - 全国遺跡報告総覧」\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "「出雲神話フォーラム2025」へ行ってきた",
      "section": "remark",
      "description": "めっさ面白かった。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/izumo-myth-forum-2025/",
      "published": "2025-03-16T14:13:52+00:00",
      "update": "2025-03-19T11:31:37+00:00",
      "content": "今日はお出かけ予定日なのだが，昨日から雨模様。\nそれはいいのだが，今日は「まつえレディースハーフマラソン」があるのをすっかり忘れていて，バス停の貼り紙で思い出した。 午前中の路線バスは運休なんだった orz しょうがない。 徒歩で行くか。 今日のスポーツアクティビティはウォーキング10K歩以上で。\nしかし，雨で気温も低いのにマラソンやるのか。 アスリートって大変だな1。\n松江市内徒歩遊覧 宍道湖畔へ寄り道しつつ\n今日の宍道湖（雨天） | Flickr 用事を済ませながらJR松江駅まで行ったのだが，この時点で12時だった。 しまった。 昼飯を食う暇がない（久しぶりに一福で蕎麦が食べたかったのに）。 しょうがないので駅前のコンビニで BLT サンドイッチを買って島根県立美術館までてくてく歩く。\n「出雲神話フォーラム2025」へ行こう そう。 今日は県立美術館のホールで「出雲神話フォーラム2025」ちうのがあるのですよ。 先月，日付を間違えたアレっす。\n「出雲神話フォーラム2025」行ってきた | Flickr そんなこんなで県立美術館に到着。\n島根県立美術館（と宍道湖） | Flickr 入場時間まで15分ほど余裕があったので急いで BLT サンドを詰め込んで時間まで Mastodon/Bluesky をチェックしておく。\n時間になったので手続きして入場する。 つか，県立美術館ってホールがあるんだねぇ。 展示室しか入ったことがないので知らんかったよ。 シートはゆったりしていて折りたたみ式の簡易テーブルが付いてる。 助かる！ 松江テルサのホールのシートはテーブルがないので膝の上にノートを広げざるを得ず，不便だったのを思い出す。\n「出雲神話フォーラム2025」は二部構成になっていて\n第1部 「アートで表現する稲田姫」（島根県立大学 松江キャンパス 地域文化学科 山村ゼミ発表） 創作石見神楽「稲田姫」上演（温泉津舞子連中） 第2部 ドキュメンタリー映画上映「永遠を建てる―出雲大社カミとヒトの風景へ」 パネルディスカッション「出雲が生み出したもの―文学、建築、アート、写真、芸能」 という内容。 以下にひとつずつ紹介してみる。\n「アートで表現する稲田姫」 予防線を張っておくと，私の「古代出雲」に対する関心領域は考古学または歴史学に偏っていて「出雲神話」を記紀ベースで語られると「けっ」という感じにやさぐれてしまう狭量な人間である（出雲神話を語るなら風土記ベースだろが）。 でも芸能・建築・美術の領域から見た「出雲神話」はどう評価されるんだろうとちょっと期待していた。\n実は「出雲神話フォーラム」自体は今年で4回目の開催なんだそうで，島根県立大学による発表も今回で3回目なんだそうだ。 以前にどんな発表をされたのか知らないが，今回は「稲田姫（クシナダヒメ）」がテーマ2。\n「稲田姫」のイメージは古代・中近世・近現代の3つに分かれるそうで\n古代： 稲田姫はスサノオ神に守られる存在。ヤマタノオロチ退治では櫛に変化してスサノオ神の髪に挿される 中近世： スサノオ神によるヤマタノオロチ退治では後方支援をしているらしい？ 経典（法華経？）を持った絵が多くある 江戸時代の歌舞伎では稲田姫はヤマタノオロチに飲み込まれるが，持ってた短刀で腹を裂いて自ら脱出する。その際に大蛇の腹から剣（十拳剣）を持ち帰り，それを使ってスサノオ神がオロチを退治する 近現代： 稲田姫をメインにした（または稲田姫のみを描いた）絵画が増える。極めつけは荒川亀斎が1893年のシカゴ万博に出品した稲田姫の像で，剣を持ってるそうな。これ以降剣をもつ稲田姫の像や絵画がたくさん作られたらしい こうしたイメージの変遷を踏まえて次の「創作石見神楽『稲田姫』」の上演につながる。\n創作石見神楽「稲田姫」上演 「創作石見神楽『稲田姫』」のあらすじはザっとこんな感じ（かなり端折ってるのはご容赦）：\n稲田姫は出雲の稲原1 に住まう国つ神で7人の姉とともに稲田を守っている。\nある日，7人の姉がいない隙に山川・田を枯らす厄神である「鬼」が顕れる。稲田姫は鬼と立ち回りを演じ最終的に剣を用いてこれを退ける。\n稲田姫は鬼を退治した剣を「宇迦の剣」と名付け土地の守りとし，自らも稲原の守り神となる。\n稲原は稲田神社がある土地。今回の創作神楽では稲田神社がある稲原の方々に取材したそうな。稲田神社に祀られている「稲田大明神」は地元の人にとっては女性的なイメージが薄いそうで「剣を持った稲田姫」への違和感もあまりないらしい。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nお気付きだろうか。 この神楽にはスサノオ神もヤマタノオロチも出てこないのだ。 面白い！！ しかも神楽に出てくる「鬼」は剣によって弱らされるが，殺されることなく退散する3。 つまりこの剣は（岩をも割く剣でありながら）「不殺（ころさず）の剣」なのである。\nちなみに稲田姫の演者は男性でお面を被っているが，これがいわゆる小面（若い女性を意味する能面）によく似た意匠なのである（意図的らしい）。 これを見て「儒烏風亭らでん」を連想して吹きそうになった私は悪くない（多分）。\nあと連想したのは「セーラームーン」とか「プリキュア」かな。 敵を殺さず，悪意・害意のみを滅する美少女戦士って感じ（笑） 内容はめっさ「いまどき」で面白かった。 でもガチの神楽なのよ。\nその後10分の休憩の挟んで第2部へ。\nドキュメンタリー映画上映「永遠を建てる―出雲大社カミとヒトの風景へ」 次は30分程のドキュメンタリー映画，出雲大社の神職の方へのインタビューを中心に構成されている。 これに遷宮の話や2000年に発見された「柱」の話が絡むわけだ。\nこの映画は後日東京大学のサイトで公開されるとのことだったが，既に YouTube で公開されてるな。\nBuilding Eternity: The Kami-Human Landscape of Izumo Taisha 永遠を建てる—出雲大社カミとヒトの風景へ - YouTube この内容が全て。 是非ご覧あれ。\nパネルディスカッション「出雲が生み出したもの―文学、建築、アート、写真、芸能」 パネラーは以下の通り：\n平藤喜久子（國學院大學教授） 港千尋（多摩美術大学教授、写真家） Alan Cummings（ロンドン大学准教授） Kio Griffith（Visual Sound Artist） 大杉浩司（岡本太郎記念館客員研究員、キュレーター） 小泉凡（小泉八雲記念館館長） 以下，覚えてる範囲で箇条書き：\nパネラーの小泉凡さんは小泉八雲（ラフカディオ・ハーン）直系の曾孫だそうで，「凡」の名前は仏教関係の絡みかと思ったが，彼の祖父（小泉一雄）と親交があったボナー・フェラーズからとったものらしい。会場がちょっとウケてた 小泉八雲は当時の千家家の当主と深い親交があり「神道」を体感している。それを元にした著作を読んだのがボナー・フェラーズ（マッカーサーも小泉八雲の著作を読んだらしい）。戦後処理の過程で昭和天皇が処刑されることなく「象徴天皇」に収まったのには小泉八雲の著作の影響もあるのでは？ との見解 建物から作られる神話と神話から作られる建物がある。出雲大社は後者。前者の例としてはバベルの塔やクレタ島の迷宮など via File:Pieter Bruegel the Elder - The Tower of Babel (Vienna) - Google Art Project.jpg - Wikimedia Commons 日本の神話は「神同士の約束」の物語。出雲大社も「国譲り」神話の約束によって建てられ守られている 出雲大社等の建築に見られるように「有限の存在を無限に繋げる」というのはアートの本質 岡本太郎は出雲大社を「野蛮な凄み、迫力」と評している。これは彼の最大級の賛辞らしい 日本で（仏様ではなく）神様の絵が盛んに描かれるようになったのは江戸時代あたりから。当時としてはポップな絵で描かれていて（絵画で神様で遊ばせる），そこから神話が庶民に浸透していく 神様は遊んでいる，という考え方 ヤマタノオロチのイメージは江戸時代に入ってからのもの 近年「怪談」アートが海外の若者に人気←ポケモンの影響？ （鬼滅はどうなんだろう？） Alan Cummings さんによると，東アジアの神話コースを作ったら受講者が殺到（100人くらい）したらしい 「妖怪」の絵は江戸時代から見られるが「怪談」のアートを見るようになったのは最近？ 第1部で稲田姫を生成 AI で描かせてみたが上手くいかず，最終的に農家の娘みたいな絵になった AI は見たことのないものを描くのは苦手？ 見たことがないものをどう描くかがアート（妄想？）→ 神話的な行い 描かずにはいられない。作らないと後悔する 岡本太郎は絵画に関しては「描かずにはいられない」タイプだったらしい。一方で彫刻等については頼まれて造ることが多い 「太陽の塔」の依頼が来たとき，周りはみんな依頼を受けることを反対したそうだが，そのことで逆に創作意欲を掻き立てられたらしい（笑） 近年流行りの「前世」や「生まれ変わり」の物語と神話との関係 1996年から若者に対するアンケートで「生まれ変わりを信じるか」という質問があったが，6割が「生まれ変わりはある」「あり得る」と答えたらしい。今もそう変わらないのではないか オウム真理教の事件を受けてのアンケート 「前世」や「生まれ変わり」が登場するのは1970年代後半〜1980年代 幻魔大戦 僕の地球を守って オカルトブーム 生まれ変わりではないが「変身」をテーマにした神話や物語は多い。江戸時代の歌舞伎でも「やつし」ものと呼ばれる変身の物語がある。変身願望や生まれ変わり願望が流行る背景は時代によって色々あるだろうが，それ自体は昔からある これからは「スサノオ神」や「ヤマタノオロチ」の時代ではなく「稲田姫」や「小泉セツ」の時代 今日の創作神楽は象徴的 9月からの「ばけばけ」をよろしく て感じかな。 （一部「神話」や「アート」じゃないのも混じってるけど）色々な話が出て面白かった。 だいぶ端折ってるけど。\nさぁ帰ろう 当初は16時半までの予定だったが，時間を延長して終わったのが17時ごろだった。 路線バスの運行は回復してると思うが，30分くらい待たないといけない。 ちょっと考えて歩いて帰ることにした。\n宍道湖畔でバード・ウォッチングしながら帰宅。\n今日のバードウォッチング（宍道湖） | Flickr ちなみに今日は16K歩ほど歩いた。 目標はクリア（笑）\n明日は楽しい月曜日！\nブックマーク 「永遠を建てる—出雲大社カミとヒトの風景へ」上映会・アフタートーク「古代バビロニアから出雲へ—永遠を目指す神殿—」 - YouTube : 2025-01 に東京大学での上映会の様子 参考図書 古代出雲の氏族と社会 (47) (同成社古代史選書 47) 武廣 亮平 (著) 同成社 2024-03-11 単行本 4886219454 (ASIN), 9784886219459 (EAN), 4886219454 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 「島根の歴史文化講座 2024」で講師をされた武廣亮平さんの著作。興味本位で買うには躊躇するお値段だし地元の県立図書館でも借りれるが，じっくり読みたいので買ってみた。著者の過去の論文を再構成した内容。記紀などの史料や過去の研究者の膨大な文献を整理した上で古代出雲についての考察を行う。\nreviewed by Spiegel on 2024-11-26 (powered by PA-APIv5)\n古事記物語 鈴木 三重吉 (著) 2012-10-01 (Release 2012-10-01) Kindle版 B009KSG2Q4 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 青空文庫で読める。物語として面白い部分は詳細に書かれているが，結構省かれている部分もあって「読み物」という感じ。\nreviewed by Spiegel on 2025-03-16 (powered by PA-APIv5)\n神道入門 日本人にとって神とは何か (平凡社新書) 井上 順孝 (著) 平凡社 2006-01-12 (Release 2013-08-01) Kindle版 B00EUVZHX0 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版登場。日本の神道の系譜が網羅的に書かれている。\nreviewed by Spiegel on 2015-03-22 (powered by PA-APIv5)\n怪談・骨董 (河出文庫) 小泉八雲 (著), 平川祐弘 (翻訳) 河出書房新社 2024-02-06 (Release 2024-04-26) Kindle版 B0CWB6NHLW (ASIN) 2024年は小泉八雲没後120周年らしいので，試しに買ってみた。\nreviewed by Spiegel on 2024-08-31 (powered by PA-APIv5)\n神様のお仕事　３ (講談社ラノベ文庫) 幹 (著), 蜜桃まむ (イラスト) 講談社 2013-11-01 (Release 2013-12-20) Kindle版 B00HCB8098 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 和風ファンタジー仕立てのラブコメ第3巻。お祭り回。\nreviewed by Spiegel on 2014-01-08 (powered by PA-APIv5)\nサクラミラージュ ReGLOSS (メインアーティスト) cover corp. 2036-01-01 (Release 2025-03-10) MP3 ダウンロード B0DZNX5YTH (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; リリース日に mora の高解像度版を購入。この歳になってこんな買い方するとは（笑） ReGLOSS は5人の音色（おんしょく）が皆個性的で，これがカッチリ嵌ると本当に格好いい！ ヘヴィローテーション中。\nreviewed by Spiegel on 2025-03-10 (powered by PA-APIv5)\n【朗読】鈴木三重吉の『古事記物語』を朗読してみます📖【古代日本史VTuber きら子】 - YouTube これは愚痴なのでアスリートの方々にはあらかじめ謝っておくけど（ごめんなさい 🙇），私は競技スポーツ（eスポーツも含めて）に殆ど興味がないので「公道でやるなよ」と思ってしまう。いや，自治体としてもマラソンは貴重な観光資源なんだろうけどさ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nここでは，発表に敬意を表し「稲田姫」表記で統一する。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n古事記ではとにかく神様が殺されまくる。ヤマタノオロチなんか惨殺だし。まぁ，洋の東西を問わず昔話や童話なんかも結構エグいのあるしな。さるかに合戦とか舌切り雀とかカチカチ山とか。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "Go 1.24 からのベンチマークテスト",
      "section": "golang",
      "description": "for b.Loop() { ... } 内のコードは最適化されないことを保証する",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/benchmark-tests-in-go-1_24/",
      "published": "2025-03-15T12:08:09+00:00",
      "update": "2025-03-16T14:18:08+00:00",
      "content": "現在『効率的なGo』の読書会に参加してるんだけど，今回はその10回目の話。\n第67回横浜Go読書会（オンライン） - connpass 今回は「8章 ベンチマーク」の最初の部分まで読み進めた。 この辺からようやく Go のツールを使った具体的な話になってくる。\n内容については本を読んでもらうとして，今回はベンチマーク・コードの話。 件の本では「ほとんどのベンチマークに必要な小さなボイラープレートの生テンプレート」として以下のコードを挙げている。\nfunc BenchmarkSum(b *testing.B) { b.ReportAllocs() // TODO(bwplotka): 必要な初期化処理を追加 b.ResetTimer() for i := 0; i \u0026lt; b.N; i++ { // TODO(bwplotka): テストされた機能を追加 } } 『効率的なGo』 リスト 8-1：Go のベンチマークの核となる要素より ちなみに b.ReportAllocs() はヒープメモリの割り当て回数と総量をレポートするための関数で， go test -bench コマンドでベンチマークテストを起動する際の -benchmem オプションと同じ効果がある。\nこのコード中の for 文でカウンターを回しているのだが Go 1.24 から testing.B.Loop() メソッドが追加され for ループの記述が大きく改善された。\nBenchmarks may now use the faster and less error-prone testing.B.Loop method to perform benchmark iterations like for b.Loop() { ... } in place of the typical loop structures involving b.N like for range b.N. This offers two significant advantages:\nThe benchmark function will execute exactly once per -count, so expensive setup and cleanup steps execute only once. Function call parameters and results are kept alive, preventing the compiler from fully optimizing away the loop body. via Go 1.24 Release Notes - The Go Programming Language 最初のほうの「コストのかかるセットアップおよびクリーンアップ手順は1回だけ実行される」というのは分かりにくいが，実は testing.B.Loop() メソッドを使うと，先のテンプレートコードにある b.ResetTimer() を省略できて，純粋に for b.Loop() { ... } 内の処理だけ計測される。\nもうひとつはもっと重要で for b.Loop() { ... } 内のコードは最適化されないことを保証するというものだ。 たとえば\nfunc Add(a, b int) int { return a + b } という関数のベンチマークを取ろうとして素朴に\nfor range b.N { _ = Add(1, 2) } なんてなコードを書いたら，最悪の場合，最適化でループ内の処理がまるごと無くなりかねない1。 testing.B.Loop() メソッドを使うことでそうした事態を回避できるというわけだ。\nお試しに何か書いてみよう2。 まずはこんな関数を書いてみる。\npackage sample func Sum(data []int) int { total := 0 for _, value := range data { total += value } return total } よくある合計値を返す関数ですな。 作成した sample.Sum() 関数のベンチマークテストのコードは以下の通り。\npackage sample_test import ( \u0026#34;math/rand/v2\u0026#34; \u0026#34;sample\u0026#34; \u0026#34;testing\u0026#34; ) func intList(n int) []int { list := make([]int, n) for i := range list { list[i] = rand.Int() } return list } func BenchmarkSum(b *testing.B) { b.ReportAllocs() input := intList(128 \u0026lt;\u0026lt; 10) for b.Loop() { sample.Sum(input) } } さっそく実行してみよう3。\n$ go test -run \u0026#39;^$\u0026#39; -bench \u0026#39;^BenchmarkSum$\u0026#39; -count 6 | tee sample_sum_bench_v1.txt goos: linux goarch: amd64 pkg: sample cpu: AMD Ryzen 5 PRO 4650G with Radeon Graphics BenchmarkSum-12 37249 32302 ns/op 0 B/op 0 allocs/op BenchmarkSum-12 36802 32570 ns/op 0 B/op 0 allocs/op BenchmarkSum-12 36495 34515 ns/op 0 B/op 0 allocs/op BenchmarkSum-12 36825 32516 ns/op 0 B/op 0 allocs/op BenchmarkSum-12 37101 32142 ns/op 0 B/op 0 allocs/op BenchmarkSum-12 37298 32072 ns/op 0 B/op 0 allocs/op PASS ok sample\t7.260s ヒープの使用もカウントされてないし，上手くいってるっぽいな。\nもうひとつ。 『効率的なGo』では benchstat コマンドの紹介もされていた。 上のベンチマーク結果について簡単な統計処理をしてくれるらしい。 これも試してみよう。\nまずはコマンドのインストール。\n$ go install golang.org/x/perf/cmd/benchstat@latest 先程のベンチマーク結果を benchstat コマンドに食わせてみる。\n$ benchstat sample_sum_bench_v1.txt goos: linux goarch: amd64 pkg: sample cpu: AMD Ryzen 5 PRO 4650G with Radeon Graphics │ sample_sum_bench_v1.txt │ │ sec/op │ Sum-12 32.41µ ± 6% │ sample_sum_bench_v1.txt │ │ B/op │ Sum-12 0.000 ± 0% │ sample_sum_bench_v1.txt │ │ allocs/op │ Sum-12 0.000 ± 0% んー。 $6\\,\\%$ の分散はちょっと大きいかなぁ。 『効率的なGo』によると，分散が $5\\,\\%$ 以上ある場合は環境ノイズ（バックグラウンドのプロセスとかメモリスワップとか）が大きい可能性があるらしい。 まぁ，今回はこのまま進めよう。\nbenchstat で統計処理を行う場合は -count オプションを使って少なくとも6回以上は繰り返すべきと書かれている。 これによって環境ノイズを検出しやすくなる。\nbenchstat コマンドは複数のベンチマーク結果を比較することもできる。\nたとえば，先ほどの Sum() 関数のループ回数を半分にしたら速くなるだろうか。 試してみよう。 まず Sum() 関数を以下のように書き直す（ほとんど GitHub Copilot が書いたけどw）。\nfunc Sum(data []int) int { total := 0 l := len(data) h := l / 2 for i := range h { total += data[i] + data[l-i-1] } if h*2 != l { total += data[h] } return total } これに対して先ほどと同じ条件でベンチマークテストを行う。\n$ go test -run \u0026#39;^$\u0026#39; -bench \u0026#39;^BenchmarkSum$\u0026#39; -count 6 | tee sample_sum_bench_v2.txt goos: linux goarch: amd64 pkg: sample cpu: AMD Ryzen 5 PRO 4650G with Radeon Graphics BenchmarkSum-12 30920\t39051 ns/op\t0 B/op\t0 allocs/op BenchmarkSum-12 30186\t39492 ns/op\t0 B/op\t0 allocs/op BenchmarkSum-12 30282\t39615 ns/op\t0 B/op\t0 allocs/op BenchmarkSum-12 30373\t39535 ns/op\t0 B/op\t0 allocs/op BenchmarkSum-12 30525\t39413 ns/op\t0 B/op\t0 allocs/op BenchmarkSum-12 30379\t39540 ns/op\t0 B/op\t0 allocs/op PASS ok sample\t7.215s ありゃ。 さっきより遅くなっちゃった？ benchstat コマンドで確認してみよう。\n$ benchstat sample_sum_bench_v1.txt sample_sum_bench_v2.txt goos: linux goarch: amd64 pkg: sample cpu: AMD Ryzen 5 PRO 4650G with Radeon Graphics │ sample_sum_bench_v1.txt │ sample_sum_bench_v2.txt │ │ sec/op │ sec/op vs base │ Sum-12 32.41µ ± 6% 39.51µ ± 1% +21.92% (p=0.002 n=6) │ sample_sum_bench_v1.txt │ sample_sum_bench_v2.txt │ │ B/op │ B/op vs base │ Sum-12 0.000 ± 0% 0.000 ± 0% ~ (p=1.000 n=6) ¹ ¹ all samples are equal │ sample_sum_bench_v1.txt │ sample_sum_bench_v2.txt │ │ allocs/op │ allocs/op vs base │ Sum-12 0.000 ± 0% 0.000 ± 0% ~ (p=1.000 n=6) ¹ ¹ all samples are equal $22\\,\\%$ 近く遅くなっちゃったよ orz\np の値は統計的有意性を表す $p\\,値$のことで，既定では $\\alpha=0.05$ に設定されている（$\\alpha$ の値は -alpha オプションで変更できる）。 つまり p の値が 0.05 より小さければ有意な値であると見なすことができる。\nそれはともかく，とりあえずループ回数を畳み込むのはなしの方向で。\n\u0026hellip;てな感じで benchstat コマンドを使えば統計学や誤差論の知識がなくてもある程度の判断を下すことができる。\n参考図書 効率的なGo ―データ指向によるGoアプリケーションの性能最適化 Bartłomiej Płotka (著), 山口 能迪 (翻訳) オライリー・ジャパン 2024-02-24 単行本（ソフトカバー） 4814400535 (ASIN), 9784814400539 (EAN), 4814400535 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元で Ebook を買える。Go言語のリファレンス本ではない。フトウェア工学，プログラミング（の考え方）を学ぶ教科書的な位置づけかなぁ。\nreviewed by Spiegel on 2024-04-21 (powered by PA-APIv5)\nGo言語で学ぶ並行プログラミング　他言語にも適用できる原則とベストプラクティス impress top gearシリーズ James Cutajar (著), 柴田 芳樹 (著) インプレス 2024-12-04 (Release 2024-12-04) Kindle版 B0DNYMMBBQ (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 読書会のために購入。インプレス社の本は Kindle 版より版元で PDF 版を買うのがオススメ。「並行処理」について原理的な解説から丁寧に書かれている。 Go で解説されているが Go 以外の言語でも応用できる。 reviewed by Spiegel on 2025-01-25 (powered by PA-APIv5)\nGo言語 100Tips ありがちなミスを把握し、実装を最適化する impress top gearシリーズ Teiva Harsanyi (著), 柴田 芳樹 (著) インプレス 2023-08-18 (Release 2023-08-18) Kindle版 B0CFL1DK8Q (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元で PDF 版を購入可能。事実上の Effective Go とも言える充実の内容。オリジナルは敢えてタイトルに “tips” という単語を入れるのを避けたのに邦題が「100 Tips」とかなっていて，原作者がお怒りとの噂（あくまで噂）\nreviewed by Spiegel on 2023-08-18 (powered by PA-APIv5)\nプログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。と思ったら絶版状態らしい（2025-01 現在）。復刊を望む！\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n実際に試してみたが10億回ループしてたので，やはり中身が消えてると思われる。ちなみにループ部分を for b.Loop() { ... } にしたら6億回のループになったので，多分そういうことなんだろう。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n今回の記事のコードは testing パッケージのドキュメントにあるサンプルコードを参考にしている。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n-run '^$' オプションはひとつもテストを実行しないことを示す。 -bench '^BenchmarkSum$' オプションは指定したベンチマークテストコードを実行することを示す。 -count 6 は指定したベンチマークテストを6回繰り返すことを示す。ベンチマークテストを繰り返すのは統計処理を行うため。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "円周率の日の皆既月食",
      "section": "remark",
      "description": "正直「ヤラレタ」と思ったね。こんな見事な駄洒落に気が付かないとか orz",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/total-lunar-eclipse-on-pi-day/",
      "published": "2025-03-14T11:25:21+00:00",
      "update": "2025-03-15T06:34:08+00:00",
      "content": "今日 2025-03-14 は望（満月）で皆既月食があった。 関東以東なら月の出直後に終わりかけの部分日食が見れたそうだが，残念ながら西日本ではギリギリ半影食が見れるかどうかのタイミングだった。 まぁ，半影食を肉眼で確認するのはほぼ無理だと思うけど。\nありがたいことに YouTube のすばる望遠鏡チャネルで皆既月食ライブをやっておられた。 アーカイブも見れる。\n皆既月食ライブ / Total Lunar Eclipse Live from Maunakea, Hawai‘i - YouTube ありがたや 🙇\nFlickr にもたくさんの写真が上がっている。 とりあえずひとつ挙げておく。\nvia “Full Blood Worm Moon” by Thomas Cizauskas (CC-BY-NC-ND) もうひとつ。 今日は3月14日。 ということは円周率の日で数学の日でアインシュタインの誕生日なのよ。\nPi Day Activities for the Classroom – Collection | NASA JPL Education で，今日の APOD (Astronomy Picture of the Day) がこれ。\nAPOD: 2025 March 14 - Moon Pi and Mountain Shadow 写真だけ見てもピンとこなかったが，説明文に\nWhat phase of the Moon is 3.14 radians from the Sun? The Full Moon, of course. Even though the Moon might look full for several days, the Moon is truly at its full phase when it is Pi radians (aka 180 degrees) from the Sun in ecliptic longitude. That\u0026rsquo;s opposite the Sun in planet Earth\u0026rsquo;s sky. [\u0026hellip;] March 14 2025, the moon is Pi radians from the Sun at exactly 06:55 UTC. That\u0026rsquo;s about three minutes before the midpoint of the March Full Moon\u0026rsquo;s total lunar eclipse. via APOD: 2025 March 14 - Moon Pi and Mountain Shadow とか書いてあって，正直「ヤラレタ」と思ったね。 こんな見事な駄洒落に気が付かないとか orz\nvia 日食・月食時の「太陽-月-地球」関係図。 黒色の範囲が日食・月食を観察できる範囲である。 そう。 皆既月食は地球から見て太陽と月が $\\pi\\,\\mathrm{rad.}$ の位置関係になるのよ。 偶然とはいえ，なんという見事な駄洒落（大事なことなので2回言いました）。\nちなみに今年はもう1回，9月8日（月）早朝に皆既月食があり，これは日本全国で見られる。 早朝というか日曜深夜というべきか。 1時28分頃から食が始まり2時30分から皆既食になる。 皆既食は3時53分頃まで続き，食が終わるのが4時56分頃。 しかもこのときは皆既食中に6等〜7等の星の星食（月没帯食）が3つくらい見れるらしい。 望遠鏡を持ってる方は必見ですな。\n晴れたらいいねぇ。\nブックマーク APOD: 2025 March 15 - Tololo Totality\nπ は間違ってる？\n参考図書 天文年鑑 2024年版 天文年鑑編集委員会 (編集) 誠文堂新光社 2023-11-24 (Release 2023-11-24) 単行本 4416623410 (ASIN), 9784416623411 (EAN), 4416623410 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 天文ファン必携。2024年版。これが届くと年末って感じ。\nreviewed by Spiegel on 2023-11-25 (powered by PA-APIv5)\n天体物理学 Arnab Rai Choudhuri (著), 森 正樹 (翻訳) 森北出版 2019-05-28 単行本 4627275110 (ASIN), 9784627275119 (EAN), 4627275110 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 興味本位で買うにはちょっとビビる値段なので図書館で借りて読んでいたが，やっぱり手元に置いておきたいのでエイヤで買った。まえがきによると，この手のタイプの教科書はあまりないらしい。内容は非常に堅実で分かりやすい。理系の学部生レベルなら問題なく読めるかな。\nreviewed by Spiegel on 2019-11-13 (powered by PA-APIv5)\n数学ガールの秘密ノート／丸い三角関数 結城 浩 (著) SBクリエイティブ 2014-04-23 (Release 2015-04-18) Kindle版 B00W6NCLJM (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 丸と三角の楽しい関係。頑張れば小学生高学年でも大丈夫。\nreviewed by Spiegel on 2014-11-30 (powered by PA-APIv5)\n数学ガール 結城 浩 (著) SBクリエイティブ 2007-06-26 (Release 2014-03-12) Kindle版 B00EYXMA9I (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ミルカさんとの衝撃の encounter。数学ガールがワルツを踊る。\nreviewed by Spiegel on 2014-02-14 (powered by PA-APIv5)\n"
    },
    {
      "title": "React のお勉強",
      "section": "remark",
      "description": "もう本当に基礎の基礎。 JSX から始めよう",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/a-study-in-react/",
      "published": "2025-03-14T09:44:25+00:00",
      "update": "2025-03-14T09:44:29+00:00",
      "content": "React について勉強中。\nいや，今までにも React / TypeScript なプロジェクトに参加したことはあるんだけど，ある程度お膳立てされた状態での join だったので，正直 React や TypeScript を知らなくても（やっつけの知識で）コードは書けるしテストも出来るわけよ。 知らない言語でもコードなんて見れば分かるし。 でも，それってプロジェクトが終われば忘れるぢゃん，身に付いてないんだから。\nというわけで，ちょうど新しいプロジェクトのための事前学習を始めたタイミングということもあり，勤務先の有識者に最初から教えてもらえることになった。 ただし，その前に公式サイトの学習ページ（日本語があるのか）は読んでおいてね，と言われ，スキマ時間で勉強を始めたのだが\u0026hellip; JSX から始めるのか。 よしやってみよう。\nJSX で簡単なコードを書くだけなら特別な開発環境も要らないしフレームワークも要らないらしい。 準備として HTML の \u0026lt;head\u0026gt; 要素に以下の記述を加えればよい。\n\u0026lt;script src=\u0026#34;https://unpkg.com/@babel/standalone/babel.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script async src=\u0026#34;https://ga.jspm.io/npm:es-module-shims@1.7.0/dist/es-module-shims.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;importmap\u0026#34;\u0026gt; { \u0026#34;imports\u0026#34;: { \u0026#34;react\u0026#34;: \u0026#34;https://esm.sh/react?dev\u0026#34;, \u0026#34;react-dom/client\u0026#34;: \u0026#34;https://esm.sh/react-dom/client?dev\u0026#34; } } \u0026lt;/script\u0026gt; @babel/standalone は JSX から JavaScript (React.createElement の式) への変換を行うものらしい。 コードはこんな感じに記述する。\n\u0026lt;div id=\u0026#34;root1\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script type=\u0026#34;text/babel\u0026#34; data-type=\u0026#34;module\u0026#34;\u0026gt; import React from \u0026#39;react\u0026#39;; import { createRoot } from \u0026#39;react-dom/client\u0026#39;; const MyApp = function() { return \u0026lt;strong\u0026gt;Hello, world!\u0026lt;/strong\u0026gt;; } const container = document.getElementById(\u0026#39;root1\u0026#39;); const root = createRoot(container); root.render(\u0026lt;MyApp /\u0026gt;); \u0026lt;/script\u0026gt; 強調している部分が JSX の特徴的な部分で HTML タグ風の記述（JSX 要素）が使えるため Web デザイナーでもとっつきやすいというのが売りなんだそうな。 ユーザが定義した MyApp() 関数の名前をタグのように使えるのがポイント。 タグは XML と同じ仕様なので void タグについては \u0026lt;MyApp /\u0026gt; のように明示する必要がある。\nこのコードを含む HTML ファイルをブラウザで表示すると以下のような表示になる。\nHello, World by React/JSX うんうん。 ちゃんと動いてるな。\nHTML タグ記法を JSX の記法に変換する “HTML to JSX” というツールもある。\nチュートリアルのコードをローカルで試したい場合。\nまずは node.js のインストールを済ませておくこと。 私は NodeSource から v22 LTS 版を入れている。 最近は Bun の話もよく聞くようになった。\nチュートリアル：三目並べ – Reactより 右上にある Fork を押下すると CodeSandbox のページが開く。\nvia Preview - nodebox - CodeSandbox 左上にある □ を押下して表示されるメニューから “Download Sandbox” を選択してコードをまるごと（zip 形式）ダウンロードし，ローカルの適当なディレクトリに展開する。\nnpm install を実行して依存ライブラリをインストールしようとしたのだがエラーになって怒られたので --legacy-peer-deps オプションを付けてやり直す。 今度はうまく行ったが deprecated の嵐（笑）\nいよいよ npm start でローカルサーバを起動しようとしたのだが，またしてもエラーで起動せず orz どうも npm audit fix --force で依存関係を更新しないといけないらしい。 しかもこれを実行するたびに状況が変わるってどうなってるの？？？\nホンマ，この辺のテキトーさが node.js 開発系が嫌な理由なんだよな。 しかも依存が深すぎて？ 何をどうしていいのか分からない。 みんなこれちゃんとメンテ出来てるの？\nぶちぶちと愚痴を垂れつつ npm start を再実行。 とりあえず動いたかな。\nvia npm start 三目並べ 実行結果より 動いてるっぽいな。\nさて，お勉強を続けますか。\nブックマーク @babel/standalone · Babel\nbabel/standaloneの使い方(文字列に格納したjavascriptソースをブラウザ内でトランスパイルする) #React - Qiita es-module-shims - npm\n新・日本一わかりやすいReact入門【基礎編】 - YouTube\nHugo で React + TypeScript を利用してサクッとウェブサイトに RSS リーダーを追加する\nBunでReact関連の開発環境を構築する\nReactをBunで使用する方法 - Web開発における知見共有系ページ\npackage.jsonで時々見かけるbrowserslistとは\n参考文献 TypeScriptとReact/Next.jsでつくる実践Webアプリケーション開発 手島 拓也 (著), 吉田 健人 (著), 高林 佳稀 (著) 技術評論社 2022-07-25 (Release 2022-07-25) 単行本（ソフトカバー） 4297129167 (ASIN), 9784297129163 (EAN), 4297129167 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 仕事用に購入。版元で電子版が買える。必要なところだけつまみ食い的に参照している。\nreviewed by Spiegel on 2023-11-26 (powered by PA-APIv5)\n"
    },
    {
      "title": "OpenPGP で利用可能なアルゴリズム（RFC 9580 対応版）",
      "section": "openpgp",
      "description": "2024年7月に RFC 9580 が発行された。この記事では最新の OpenPGP で利用可能なアルゴリズムを列挙していく。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/openpgp/algorithms-for-openpgp-rfc9580/",
      "published": "2025-03-12T08:04:54+00:00",
      "update": "2025-03-12T08:23:07+00:00",
      "content": "OpenPGP の標準化について2024年7月に RFC 9580 が発行された。 この記事では拙作 gpgpdump の改定作業の目的のため OpenPGP で利用可能なアルゴリズムを列挙していく。\nなお RFC 9580 の発行に伴い，以前の RFC 4880, RFC 5581, RFC 6637 は obsolete になった。 このブログでも前の「OpenPGP で利用可能なアルゴリズム（RFC 4880bis 対応版）」は obsolete とする。 また各アルゴリズムの横に \u0026#x2705; が付いているものは RFC 9580 で新たに追加されたものである。\nパケットバージョン アルゴリズムとは直接関係ないが OpenPGP では暗号文や鍵や署名といったデータのかたまりを「パケット」と呼んでいる。 パケットは PGP/OpenPGP によって幾つかのバージョンがある。\n現在有効なパケットバージョンの組み合わせは以下の通り。\nVersion of Encrypted Data Payload Version of Preceding Symmetric Key ESK (If Any) Version of Preceding Public Key ESK (If Any) Generate? SED - v2 PKESK (RFC 2440) No SED v4 SKESK v3 PKESK No v1 SEIPD v4 SKESK v3 PKESK Yes v2 SEIPD ✅ v4 SKESK v3 PKESK Yes OpenPGP 暗号化メッセージのバージョン v2 SEIPD は RFC 9580 で加わったもので認証付き暗号（AEAD）をサポートしている。\nRFC 9580 では “Generate?” が Yes のパケット組み合わせのみ生成が許容される（MUST）。 それ以外は後方互換性のために残される。\nSigning Key Version Signature Packet Version One-Pass Signature Packet Version Generate? v3 v3 v3 No v4 v3 v3 No v4 v4 v3 Yes v6 ✅ v6 ✅ v6 ✅ Yes OpenPGP 鍵および署名のバージョン ここにない v1 や v2 は最初期の PGP (RFC 1991) の頃のもの。 さらに，ここにない v5 は RFC 4880bis の議論の頃にあったもので RFC 9580 ではなくなってしまったようだ。 おそらく GnuPG には残ってると思うけど\u0026hellip; 困ったね（笑）\nv3 は RFC 2440 で， v4 は RFC 4880 で登場したもの。 さらに v6 は RFC 9580 で新たに加わったものである。\nRFC 9580 では “Generate?” が Yes のパケット組み合わせのみ生成が許容される（MUST）。 それ以外は後方互換性のために残される。\n共通鍵暗号アルゴリズム（Symmetric-Key Algorithms） OpenPGP で利用可能な共通鍵暗号は以下の通り。 RFC 9580 で新たに追加されたアルゴリズムはない。 なお「鍵長」項目の括弧内はブロック長を指す。 いずれも単位は “bit” である。\nIDアルゴリズム鍵長参考文献 0 Plaintext or unencrypted data 1 IDEA 128 (64) Narrow-Bicliques: Cryptanalysis of Full IDEA 2 TripleDES (or DES-EDE) with 168-bit key derived from 192 168 (64) SP800-67 Rev.2 3 CAST5 with 128-bit key 128 (64) RFC2144 4 Blowfish with 128-bit key, 16 rounds 128 (64) Description of a New Variable-Length Key, 64-Bit Block Cipher (Blowfish) 5,6 (Reserved) 7 AES with 128-bit key 128 (128) FIPS PUB 197 8 AES with 192-bit key 192 (128) 9 AES with 256-bit key 256 (128) 10 Twofish with 256-bit key 256 (128) 11 Camellia with 128-bit key 128 (128) RFC3713 12 Camellia with 192-bit key 192 (128) 13 Camellia with 256-bit key 256 (128) 100-110 Private/Experimental algorithm 253-255 (Reserved to avoid collision with Secret Key Encryption) OpenPGP で使用可能な共通鍵暗号アルゴリズム一覧 ID は OpenPGP で定義されるもので “sym 1” のように表記する。\nAES-128 (sym 7) が “MUST implement” で AES-256 (sym 9) が “SHOULD implement” となった 後方互換性のために IDEA, TripleDES, CAST5 による復号を行ってもよい（MAY）が機密性の漏洩が疑われる非推奨のアルゴリズムであることを警告すべき（SHOULD） ちなみに sym 11 から sym 13 の Camellia 暗号は日本製である。\nRFC 9580 では共通鍵暗号を使った暗号化について，従来からある CFB モード1 に加えて認証付き暗号の暗号モードを使用できる。\n認証付き暗号の暗号モード（AEAD Algorithms） RFC 9580 で追加された認証付き暗号（Authenticated Encryption with Associated Data; AEAD）について利用可能な暗号モードは以下の通り。\nID暗号モード参考文献 1 EAX \u0026#x2705; EAX: A Conventional Authenticated-Encryption Mode 2 OCB \u0026#x2705; RFC 7253 3 GCM \u0026#x2705; SP800-38D 100-110 Private/Experimental algorithm OpenPGP で使用可能な認証付き暗号アルゴリズム一覧 RFC 9580 では OCB が “MUST implement” となる。\n公開鍵暗号・署名アルゴリズム（Public-Key Algorithms） OpenPGP で利用可能な公開鍵暗号・署名は以下の通り。\nIDアルゴリズム参考文献 1 RSA (Encrypt or Sign) FIPS PUB 186-5 2 RSA Encrypt-Only 3 RSA Sign-Only 4-15 (Reserved) 16 Elgamal\n(Encrypt-Only) A public key cryptosystem and a signature scheme based on discrete logarithms 17 DSA FIPS PUB 186-4 18 ECDH public key algorithm SP800-56A Revision 3 19 ECDSA public key algorithm RFC 6090, FIPS PUB 186-5, SEC 1: Elliptic Curve Cryptography 20 (Reserved; formerly Elgamal Encrypt or Sign) 21 (Reserved for Diffie-Hellman (X9.42, as defined for IETF-S/MIME)) 22 EdDSALegacy (deprecated) \u0026#x2705; (Ed25519 を参照のこと) 23 (Reserved for AEDH) 24 (Reserved for AEDSA) 25 X25519 \u0026#x2705; RFC 7748, FIPS PUB 186-5 26 X448 \u0026#x2705; 27 Ed25519 \u0026#x2705; RFC 8032, FIPS PUB 186-5 28 Ed448 \u0026#x2705; 100-110 Private/Experimental algorithm OpenPGP で使用可能な公開鍵暗号・署名アルゴリズム一覧 ID は OpenPGP で定義されるもので “pub 1” のように表記する。\nRSA (pub 1,2,3), Elgamal (16), DSA (17) は非推奨 (deprecated) となった。更に暗号化専用および署名専用の RSA (pub 2,3) と Elgamal (16), DSA (17) の鍵は新たな生成が禁止になった（MUST NOT）。ただし RFC 4880 では Elgamal (16) と DSA (17) の実装が MUST なので，後方互換性を確保するのであれば，これらを実装する必要がある X25519 (pub 25) および Ed25519 (pub 27) の実装が MUST になった X448 (pub 26) および Ed448 (pub 28) の実装が MUST になった EdDSALegacy (pub 22) は RFC 4880bis の頃に定義されたが，最終的に Ed25519 (pub 27) に置き換えられた。おそらく v4 鍵および署名パケットに対応するために残されているが非推奨（deprecated）になっている。新たに EdDSA 鍵を生成するなら Ed25519 (pub 27) または Ed448 (pub 28) を選択すべき ElGamal Encrypt or Sign (pub 20) は，元々暗号化と署名の両方できるものだったが，脆弱性が見つかったため OpenPGP では使用禁止になった2 余談だが，現在対量子コンピュータ暗号を OpenPGP に組み込む議論が行われている。 興味がある方はそちらもどうぞ。\n楕円曲線（ECC Curves for OpenPGP） 前節で挙げた楕円曲線暗号（Elliptic Curve Cryptography; ECC）アルゴリズムに対して RFC 9580 で利用可能な楕円曲線（Elliptic Curve）は以下の通り。 なお「鍵長」の単位はオクテット（byte）である。\n楕円曲線名適用アルゴリズム鍵長 NIST P-256 ECDSA, ECDH 32 SP800-56A Revision 3, FIPS PUB 186-5 NIST P-384 ECDSA, ECDH 48 NIST P-521 ECDSA, ECDH 66 brainpoolP256r1 \u0026#x2705; ECDSA, ECDH 32 RFC 5639 brainpoolP384r1 \u0026#x2705; ECDSA, ECDH 48 brainpoolP512r1 \u0026#x2705; ECDSA, ECDH 64 Ed25519Legacy \u0026#x2705; EdDSALegacy (EdDSA) 32 RFC8032, FIPS PUB 186-5 Ed25519 \u0026#x2705; Ed25519 (EdDSA) 32 Ed448 \u0026#x2705; Ed448 (EdDSA) 57 Curve25519Legacy \u0026#x2705; ECDH 32 RFC7748 X25519 \u0026#x2705; X25519 (ECDH) 32 X448 \u0026#x2705; X448 (ECDH) 56 OpenPGP で使用可能な楕円曲線一覧 Ed25519Legacy と Ed25519 は同じ楕円曲線で Ed448 と併せて RFC 8032 EdDSA アルゴリズムで用いる（ECDSA では使えない） Curve25519Legacy と X25519 は同じ楕円曲線で X448 と併せて RFC 7748 で規定されている。これらの楕円曲線を使った ECDH 鍵は同じサイズの EdDSA 鍵と組み合わせて使う Ed25519, Ed448, X25519, X448 以外の楕円曲線は Curve OID で管理される。 Ed25519, Ed448, X25519, X448 については同名のアルゴリズム ID と紐付いているため Curve OID による管理外となる Ed25519Legacy は同名のアルゴリズム ID で用いる。また v4 鍵および署名パケットでのみ使用可能。 v6 パケットの場合は Ed25519 を用いる Curve25519Legacy は ECDH アルゴリズムかつ v4 鍵および署名パケットでのみ使用可能。 v6 パケットの場合は X25519 を用いる 具体的な実装例については「そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな」で紹介している\nECDH 鍵導出のパラメータ（ECDH Parameters） ECDH (pub 18) では鍵導出のためのハッシュアルゴリズムと鍵カプセル化のための共通鍵暗号アルゴリズムをパラメータとして持つ。 各アルゴリズムの組み合わせは以下の通り。\nCurve Hash Algorithm symmetric Algorithm NIST P-256 SHA2-256 AES-128 NIST P-384 SHA2-384 AES-192 NIST P-521 SHA2-512 AES-256 brainpoolP256r1 SHA2-256 AES-128 brainpoolP384r1 SHA2-384 AES-192 brainpoolP512r1 SHA2-512 AES-256 Curve25519Legacy SHA2-256 AES-128 ECDH KDF/KEK パラメータ v6 鍵パケットの場合，上のアルゴリズムの組み合わせを使用しなければならない（MUST） v4 鍵パケットの場合，上のアルゴリズムの組み合わせを使用すべき（SHOULD） 一方向ハッシュ関数アルゴリズム（Hash Algorithms） OpenPGP で利用可能なハッシュ関数は以下の通り。 RFC 9580 で新たに追加されたアルゴリズムはない。\nIDアルゴリズム参考文献 1 MD5 RFC1321 2 SHA-1 FIPS PUB 180-4 3 RIPE-MD/160 The hash function RIPEMD-160 4-7 (Reserved) 8 SHA2-256 FIPS PUB 180-4 9 SHA2-384 10 SHA2-512 11 SHA2-224 12 SHA3-256 FIPS PUB 202 13 (Reserved) 14 SHA3-512 100-110 Private/Experimental algorithm OpenPGP で使用可能な一方向ハッシュ関数一覧 ID は OpenPGP で定義されるもので “hash 1” のように表記する。\nSHA2-256 (hash 8) が “MUST implement” となった。また SHA2-384 (hash 9), SHA2-512 (hash 10) の実装が推奨される（SHOULD） v4 鍵および署名パケットのの鍵指紋や MDC (Modification Detection Code) を除き SHA-1 (hash 2) を必要とするメッセージを作成してはならない（SHOULD NOT） MD5 (hash 1), SHA-1 (hash 2), RIPE-MD/160 (hash 3) を用いて署名を作成してはならない（MUST NOT） ECDH KDF および S2K KDF のハッシュ関数として MD5 (hash 1), SHA-1 (hash 2), RIPE-MD/160 (hash 3) を用いてパケットを生成してはならない（MUST NOT） v6 以降のパケットで S2K KDF のハッシュ関数として MD5 (hash 1), SHA-1 (hash 2), RIPE-MD/160 (hash 3) を用いて秘密鍵を復号してはならない（MUST NOT） MD5 (hash 1), SHA-1 (hash 2), RIPE-MD/160 (hash 3) に依存する最近の署名を検証してはならない（MUST NOT） MD5 (hash 1), SHA-1 (hash 2), RIPE-MD/160 (hash 3) に依存する古い署名を検証してはならない（SHOULD NOT） 署名の作成日が使用されたアルゴリズムの既知の脆弱性が発見された日より前で，メッセージが常に安全な管理下にあったと確信できる場合は除く 鍵指紋作成で使われるハッシュ関数アルゴリズム（Fingerprints） 鍵指紋作成で使われるハッシュ関数アルゴリズムは以下の通り。\nKey Version Fingerprint Algorithm v3 MD5 v4 SHA1 v6 ✅ SHA256 鍵指紋作成で使われるハッシュ関数アルゴリズム その他のアルゴリズム S2K (String-to-Key) S2K はパスフレーズからセッション鍵を生成するためのハッシュ化の手順である。\nIDS2K タイプ参考文献 0 Simple S2K 1 Salted S2K 2 Reserved value 3 Iterated and Salted S2K 4 Argon2 \u0026#x2705; RFC 9106 100-110 Private/Experimental S2K OpenPGP で使用可能な S2K アルゴリズム一覧 ID は OpenPGP で定義されるもので “s2k 1” のように表記する。 Simple S2K (s2k 0) と Reserved value (s2k 2) は下位互換のために残されているもので，新たに暗号データや電子署名を作成する際に使用すべきではない。\nOpenPGP では，パスフレーズ自体はいかなる形（ハッシュ値を含む）でも保存しない。 このため，パスフレーズを紛失してしまった場合は復元できない3。\nデータ圧縮（Compression Algorithms） 暗号化メッセージや電子署名を圧縮するためのアルゴリズムである。 RFC 9580 で新たに追加されたアルゴリズムはない。\nIDアルゴリズム参考文献 0 Uncompressed \u0026nbsp; 1 ZIP RFC1951 2 ZLIB RFC1950 3 BZip2 bzip2 100-110 Private/Experimental algorithm OpenPGP で使用可能なデータ圧縮アルゴリズム一覧 ID は OpenPGP で定義されるもので “comp 1” のように表記する。\n非圧縮（comp 0）は “MUST implement” である ZLIB (comp 2) は “SHOULD implement” となっていて， ZIP (comp 1) については “SHOULD be able to decompress using” と復号時の後方互換性のみ確保されていればいいようだ 乱数生成器（Random Number Generator） 基本的に getrandom() システムコールのような OS が標準で提供している暗号学的に安全な疑似乱数生成器（CSPRNG）を使うべき，とある。 もしそれらが使えない（信用できない）場合でも，新しいものを自作するのではなく RFC 4086 を参照して実装すべきと書かれている。\nブックマーク Edwards-curve Digital Signature Algorithm NIST FIPS 186-5 および SP 800-186 正式版がリリースされた 参考図書 暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\nPGP―暗号メールと電子署名 シムソン ガーフィンケル (著), Garfinkel,Simson (原著), ユニテック (翻訳) オライリー・ジャパン 1996-04-01 単行本 4900900028 (ASIN), 9784900900028 (EAN), 4900900028 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。\nreviewed by Spiegel on 2014-10-16 (powered by PA-APIv5)\n暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n厳密には CFB モードの変形である。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\npub 20 が禁止になった経緯については “GnuPG\u0026rsquo;s ElGamal signing keys compromised” を参照のこと。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nただし OpenPGP では試行回数によるロックアウトは定義されないため，無限にパスフレーズ解読を試みることができる。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "Web のコストは誰が支払うのか",
      "section": "remark",
      "description": "改めて思うのだが Web 2.0 最大の罪はそのコストを安易に他者へ「転嫁」してしまったことだろう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/who-pays-for-web-costs/",
      "published": "2025-03-11T05:39:34+00:00",
      "update": "2025-03-11T23:04:14+00:00",
      "content": "今月（2025-03）に入り Chrome 系のブラウザ拡張機能について Manifest-V2 廃止に基づく粛清がいよいよ始まるようだ？\nGoogle’s Chrome extension cull hits more uBlock Origin users | The Verge Google Chrome Disables uBlock Origin and Other Extensions | Extremetech 実際には Manifest-V2 の廃止までにはまだ猶予があり，どうやら Google 側が姑息な排除をしようとしているんじゃないかという話もある。\nGoogleが「uBlock Originのサポートは終了しました」とウソをついているとネットが騒然、広告ブロッカーを使い続ける方法はコレ - GIGAZINE 本当のところは分からないが（Chrome 使ってないので），今回の V2 から V3 への移行で（利用者から見て）最もインパクトがある拡張機能のひとつが uBlock Origin だろう。 uBlock Origin は Manifest-V2 の webRequest API 仕様に大きく依存していて，新しい Manifest-V3 の API では機能が制限されるらしい。\nuBlock Origin relies heavily on the webRequest API to block unwanted content before it loads. Under MV3, the webRequest API is limited, and extensions are encouraged to use the new declarativeNetRequest API instead. This new API allows for predefined rules but lacks some of the dynamic capabilities that uBlock Origin utilizes for advanced content blocking. via uBlock Origin - Free, open-source ad content blocker. Manifest-V3 でこの制限をうまく回避するる方法はないようで，以下の代替案が提案されている。\nContinue Using uBlock Origin on Firefox Use uBlock Origin Lite Switch to Browsers Committed to MV2 Support Explore Other Content Blocking Methods via uBlock Origin - Free, open-source ad content blocker. uBlock Origin Lite であれば Manifest-V3 ベースらしいので Chrome ユーザは取り敢えずこちらに移行する手はある。\n一方 Firefox は Manifest-V2 と Manifest-V3 の両方をサポートすると明言しているので，いっそ Firefox に乗り換える手もある。\nMozilla’s approach to Manifest V3: What’s different and why it matters for extension users | The Mozilla Blog ブラウザを乗り換えていいのであれば，もうひとつ Orion ブラウザに乗り換える手もある。 有料検索サービスの Kagi が提供している Orion ブラウザは広告ブロッキング機能を既定で備えていて，他にもプライバシー保護の観点から他のブラウザより有利であると主張している。\nPrivacy comparison Orion Safari Firefox Brave Chrome Zero telemetry by default ✅ ❎ ❎ ❎ ❎ Blocking 1st party ads by default ✅ ❎ ❎ ❎ ❎ Blocking 1st party trackers by default ✅ ❎ ❎ ❎ ❎ Blocking 3rd party ads by default ✅ ❎ ❎ ✅ ❎ Blocking 3rd party trackers by default ✅ ✅ ✅ ✅ ❎ via Orion Browser by Kagi 残念ながら Orion ブラウザは WebKit ベースのため，今のところ macOS および iOS/iPadOS しか対応していない。 しかし，昨今の情勢を見て Linux 版の開発に着手したようだ。\nWe\u0026rsquo;re thrilled to announce that development of Orion Browser for Linux has officially started! Our team is working hard to bring the same speed, privacy, and innovation that Mac users love to the Linux platform.\nThis is an ambitious project that we expect will take approximately one year to complete. Our target is to achieve feature parity with the current macOS version by March 2026.\nvia March 6th, 2025 - Orion Embarks on Linux Journey \u0026amp; Kagi Doggo Art Celebration 手元にある MacBook Air には既に導入しているが，今のところ不都合はない。 まぁ macOS のアプリケーションはあまり使わず Linux 環境での作業が殆どなのだが。 私は Linux 版を待ってます。\nOrion ブラウザには Orion+ ってのがあるそうで，一括で150USD払うか月5USD（年50USD）のサブスクリプションに加入することで RC 版の利用が可能になる他，フィードバックにも優先的に対応してもらえるらしい。 Kagi は有料検索サービスとこの Orion+ の収益で開発・運用を行っているようだ。\nその Kagi の検索サービスだが，現在は Professional プランを月ごとの支払いで運用している。 もうガッツリ使ってるよ。 検索周りの UX が優秀なのは言うまでもないが AI 絡みの機能（Translate, FastGPT1, Universal Summarizer）も便利に使っている。 なので，年単位の契約に切り替えてもいいかなぁ，と考え中ではある。 もしくは Assistant が使える Ultimate プランにするか。 いやでも私の場合 AI アシスタントは GitHub Copilot で足りてるからなぁ。\nKagi の中の人が Bluesky で書いていたが，ネット上で享受しているサービスなりプラットフォームなりのコストは誰が支払っているのか，って話だ。\n改めて思うのだが Web 2.0 最大の罪はそのコストを安易に（本来の利用者ではない）他者へ「転嫁」してしまったことだろう。\nそして今になって私達は「メタクソ化 (enshittification) 」という形で（文字通りの）ツケを支払っているわけだ。 広告モデルで実際にコストを支払ってるのは広告主なんだから，サービス側プラットフォーム側が広告主の利益を最大化するよう調整するのは当然と言える。\nかくしてGoogleはスパマーに敗北した » p2ptk[.]org Google検索を殺した男――Googleはいつ、どこでメタクソ化に舵を切ったのか » p2ptk[.]org だからといって「それ」を許容できるかと問われたら否と答えるけど。\n特に Web 上の広告はもはや好悪の問題ではなくセキュリティやプライバシーのリスクの問題になっている。\n広告ブロッカーは「嫌ならどうする？」の表明である » p2ptk[.]org 米国 FBI は広告ブロッカーを推奨している？ 「Google広告からの誘導が6割」との分析結果。より巧妙化し、高齢者を狙う「サポート詐欺」に注意！【被害事例に学ぶ、高齢者のためのデジタルリテラシー】 - INTERNET Watch たとえば Publickey のように，ポリシーを持って広告を管理しているサイトは少なく，大抵は Google 等の広告サービスが提供しているものを垂れ流してるだけの脆弱なサイトに見える。 まぁ，一番ダークなのは間違いなく Google 検索サービスのページだけど（笑）\nuBlock Origin などのツールは単に広告をブロックするツールというだけではなく，そのサイトの広告を許容できるか否かの決定権を，見ているユーザ側に取り返すという大切な手段である。 その上で私達は（広告モデルを含む）他者にコストを転嫁する仕組みから距離を置く必要があると思う。 タダならば何でもいいという世の中じゃなくなったってことかねぇ。\nそのビジネスモデルで本当に利用者は幸せになれるのか。 よくよく考えてリソース（お金とは限らない）を投入しないといけないし，私のようなビンボー人は幾つかサービスを諦めることも視野に入れないといけないかもしれない。\nブックマーク Kagi is Bringing the Orion Web Browser to Linux - OMG! Ubuntu アドテクによるターゲティングは「存亡に関わる脅威」である » p2ptk[.]org 大いなる力には何の責任も伴わなかった » p2ptk[.]org Chromeの変更にともない、グーグルが「すべてのデバイスを追跡」開始 | Forbes JAPAN 公式サイト（フォーブス ジャパン） Kagi for Teams - Bring Kagi to work for your team 参考図書 はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二（監修） (著), 山根 信二 (翻訳), 成田 啓行 (翻訳) 福村出版 2022-12-15 (Release 2023-07-03) Kindle版 B0C9Z7KGRN (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版が出ている。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想はこちら。\nreviewed by Spiegel on 2023-11-21 (powered by PA-APIv5)\nハッキング思考　強者はいかにしてルールを歪めるのか、それを正すにはどうしたらいいのか ブルース・シュナイアー (著), 高橋 聡 (翻訳) 日経BP 2023-10-12 (Release 2023-10-12) Kindle版 B0CK19L1HC (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版が出てた！\nreviewed by Spiegel on 2023-11-21 (powered by PA-APIv5)\nスパム[spam]:インターネットのダークサイド フィン・ブラントン (著), 生貝直人 (監修), 成原慧 (監修), 松浦俊輔 (翻訳) 河出書房新社 2015-12-25 単行本 430924744X (ASIN), 9784309247441 (EAN), 430924744X (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; とりあえず読みづらい。修飾語が多すぎるよ。ギリシア神話かっての。\nreviewed by Spiegel on 2016-12-10 (powered by PA-APIv5)\nFastGPT は本当に簡易的な機能のみの提供で，単一の応答しか出来ないし LLM モデルの選択もできない。連続的な「会話」や LLM モデルの切り替え機能が欲しいのであれば Ultimate プラン（月25USD）に加入した上で Assistant 機能を利用する必要がある。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "春の海（お散歩カメラ 2025-03-09）",
      "section": "remark",
      "description": "終日のたりのたり哉",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/09-osanpo-camera/",
      "published": "2025-03-09T09:48:07+00:00",
      "update": "2025-03-09T09:48:39+00:00",
      "content": "いや，今日は近所を軽く1時間ほど走って終わらせる気だったのよ。 でも外に出たらピーカンに晴れてるの。 今朝の松江の最低気温はギリギリ氷点下。 最高気温が14℃と寒暖差が激しい。 しかもほぼ無風。 空を眺めながらちょっと考えて，午後から春の海を見に行くことにした。\nというわけで，私が自転車で行ける唯一の海水浴場である古浦海水浴場に到着。 春先なので殆ど人がいない。\n春の海 終日のたりのたりかな（古浦海水浴場） | Flickr 古浦海水浴場 | Flickr 海水は綺麗だった。 まだ海水浴客がいないからかな。 でも冬の間の漂着物が結構あって\n漂着物 | Flickr これは海開きの前の掃除が大変なんだろうなぁ，と思ったり（他人事）。\n海を見ながら少し休憩して\n休憩中 | Flickr 市内へ戻る。 久しぶりに松江城に行ってみようかと。 もしかしたら今日は大山が見れるかもしれない。\n大山 from 松江城 | Flickr おー。 見えるぞ。 写真だと分かりにくいが（これでも結構補正をかけている）肉眼だともう少しはっきり見える感じ。\n松江城定点観測はこんな感じ。\n今日の松江城 | Flickr このあと県立図書館へでも行こうと思ったのだが 2025-03-12 まで特別整理休館だった orz\nしょうがないので宍道湖を眺めながら帰宅した。\n今日の宍道湖 | Flickr 明日は楽しい月曜日！\n参考 Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM キヤノン (Release 2020-12-10) エレクトロニクス B08L4WKDZ7 (ASIN), 4549292179675 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。\nreviewed by Spiegel on 2022-12-04 (powered by PA-APIv5)\nENEMOTI(エネモチ) お試し6本セット(クルミ餅×2・塩餅×2・甘酒餅×2) 【sotoasoオリジナルセット トレイルランニング ランニング 自転車 ロードバイク エンデュランススポーツ 登山 お餅 補給食 おいしい】 Enemoti B08DFNBWBM (ASIN), 4589880507619 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 糖質補給をメインにしたエナジーバー。三種入ったお試し用。 ACTIVIKE の中の人がオススメしていたので買ってみた。吸収がゆっくりなパラチノース配合。オブラートで包んであるので直接手に持って食べれる。私の好みとしては クルミ餅＞塩餅＞甘酒餅 かな。甘酒餅は粘りが強くて顎が鍛えられる（笑）\nreviewed by Spiegel on 2025-01-16 (powered by PA-APIv5)\n与謝蕪村: 郷愁の詩人 (岩波文庫 緑 62-2) 萩原 朔太郎 (著) 岩波書店 1988-11-16 文庫 4003106229 (ASIN), 9784003106228 (EAN), 4003106229 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 萩原朔太郎による与謝蕪村研究。1933年から1936年に書かれたものをまとめたもので，同じものが青空文庫に収録されている。\nreviewed by Spiegel on 2025-03-09 (powered by PA-APIv5)\n晴る ヨルシカ (メインアーティスト) Universal Music LLC (Release 2024-01-05) MP3 ダウンロード B0CQS23YMR (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; アニメ「葬送のフリーレン」OP曲。 mora で高解像度版が買える。 YouTube の「歌ってみた」をいくつか聴いてオリジナルを買っておこうかなと。移動中にヘヴィローテーションしてる。\nreviewed by Spiegel on 2025-02-09 (powered by PA-APIv5)\n春の海〜宮城道雄作品集〜 砂崎知子、藤原道山 (メインアーティスト) Nippon Columbia Co., Ltd./NIPPONOPHONE 2007-12-19 (Release 2024-08-06) MP3 ダウンロード B0D9X16QY6 (ASIN) 今やお正月の定番曲「春の海」を含む箏の名曲が収録されている。 mora でロスレス版（CD相当の音質）が買える。\nreviewed by Spiegel on 2025-03-09 (powered by PA-APIv5)\n"
    },
    {
      "title": "浮世絵コレクション展に行ってきた（お散歩カメラ 2025-03-08）",
      "section": "remark",
      "description": "八雲温泉へ行こう / 浮世絵コレクション展に行ってきた / 久しぶりに宍道湖の夕日が見れた",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2025/03/08-osanpo-camera/",
      "published": "2025-03-08T13:32:18+00:00",
      "update": "2025-03-08T13:32:24+00:00",
      "content": "今日の松江市の最低気温は約2℃。 最高気温は約11℃で，お天気もよく風も弱め。 凍えるほど寒くはなく，暑くもなく，サイクリング日和。\nいや，今週\n【VTuber＆漫画家】儒烏風亭らでん、憧れのヤマザキマリ先生と対談する会（前編）【儒烏風亭らでん #ReGLOSS 】 - YouTube ってのが配信されてたんだけど，あんなん見たら温泉行きたくなるやろ！ まぁ，もとより天気がよければ温泉に行くつもりだったけどね。 それにしてもヤマザキマリさんってイケボなんですなー。\nちうわけで，今日もチャリンコでお出かけしましょう。\n八雲温泉へ行こう いつものように日吉の切通し経由で八雲温泉へ。 途中でバードウォッチングなどしながらのんびり移動。\n今日のバードウォッチング（日吉の切通し） | Flickr 早春の意宇川 | Flickr いつものように露天風呂にゆっくり浸かり\n八雲温泉上がりのコーヒー牛乳 | Flickr 木次乳業さん，いつもお世話になっています。 そのまま昼食。\nお昼は割子蕎麦（八雲温泉） | Flickr さて，お腹も落ち着いたことだし，市内へ移動しますか。\n浮世絵コレクション展に行ってきた 宍道湖を眺めながら島根県立美術館へ。\n今日の宍道湖（袖師地蔵） | Flickr 島根県立美術館 駐輪場 | Flickr 県立美術館は現在「平山郁夫展」をやっているが，そちらは1月に観に行ったので，今回はコレクション展を観に行った。今やってるのは\n水辺の展示室 第7期（2月 5日(水) ～ 3月17日(月) 展示室１） 西洋絵画・洋画 第3期 島根ゆかりの洋画家たち（1月15日(水) ～ 5月12日(月) 展示室１） 近世絵画・日本画 第7期（2月 5日(水) ～ 3月17日(月) 展示室１） 北斎コレクション 第10期（2月19日(水) ～ 3月24日(月) 展示室２） 原清の陶芸（11月20日(水) ～ 3月17日(月) 展示室３） 島根県立美術館 写真コレクションの30年（1月16日(木) ～ 4月14日(月) 展示室４） 木の魅力（1月23日(木) ～ 4月21日(月) 展示室５） の7つ。 これ全部見れて大人300円とか！\nお目当ては「北斎コレクション 第10期」。\n浮世絵コレクション展行ってきた | Flickr （コレクション展は写真撮影が許可されていなかったので，無料の戦利品を撮ってみた）\n一応展示室1から順番に観て回る。\nここのところ春先の水辺の風景が気になっている。 なんでかなぁ\u0026hellip; と「水辺の展示室」の作品を観ながら思ったのだが，春先って川の水量も多いし日差しも少しずつ強くなってるので妙にキラキラしいんだよな。 だから気になるのかもしれない。 「水辺の展示室」には近代の印象派の作品が多く展示されていてキラキラしい作品が多い（笑） あと昨年観た新版画展で初めて知った川瀬巴水さんの作品もあった。 思わず拝む。\n浮世絵に関しては，県立美術館には島根県購入分以外に新庄コレクションや永田コレクションといった多くの寄贈品がある。 作品保存の観点から年中展示されているわけではないが，今回は有名な「冨嶽三十六景 凱風快晴」（通称「赤富士」）が展示されているというので，ぜひ生で観たかったのだ。\nvia Red Fuji southern wind clear morning - 凱風快晴 - Wikipedia （こんな真っ赤っ赤じゃなかった。発行時期によって色合いが違うらしい）\n陶芸の原清さんって島根県の出身なんだな。 いわゆる人間国宝。 展示されている作品は全てご本人寄贈だった。 凄いなぁ\u0026hellip;\n「写真コレクション」で改めて森山大道さんの作品を眺める。 モノクロ写真って説得力が半端ないよなぁ。 カラー以上にごまかしが効かないし。 まぁ，私は下手の横好きのお散歩カメラの人なのでゆる〜く活動していきましょう。\nここまで展示室4で力尽きた。 「木の魅力」は今回はパスで。 4月の中頃まではやってるみたいなので，また行こう。\n久しぶりに宍道湖の夕日が見れた 一通り作品を眺めて気がついたら16時になっていた。\n今日は幸いなことに西の空が晴れている。 こりゃあ久しぶりに夕日が見れるかも。\nというわけで，いったんコメダ喫茶店まで退却し\n日没まで休憩 | Flickr 日の入り（18:09）30分前まで時間を潰す。\nその後撮影スポットに移動するとギャラリーが沢山いた。 アイドル？ アニメキャラ？ のアクスタと一緒に撮ってる人もいたり。\nアイドルと一緒 | Flickr アクスタってそうやって使うのかー\n以下がスマホ（Galaxy 端末）で撮った写真（トリミングしている）。\n今日の宍道湖（夕景） | Flickr こっちは Canon の望遠鏡コンデジで撮った写真。\n今日の宍道湖（夕景） | Flickr スマホのカメラって何故か異様に青が強調されるんよね。 たぶんアプリ側で補正をかけてるんだろうけど。 一方 Canon のコンデジは赤が綺麗。 というわけで，こんな感じの写真になった。\n私はスマホのカメラもコンデジもトイカメラのカテゴリだと思ってる。 トイカメラって面白いよね。\nでは続きをどうぞ。\n今日の宍道湖（日没） | Flickr 今日の宍道湖（日没） | Flickr 今日の宍道湖（日没） | Flickr 堪能した。 帰りますかね。 明日も晴れだ！\n参考 Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM キヤノン (Release 2020-12-10) エレクトロニクス B08L4WKDZ7 (ASIN), 4549292179675 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。\nreviewed by Spiegel on 2022-12-04 (powered by PA-APIv5)\nテルマエ・ロマエI (ビームコミックス) ヤマザキ マリ (著) KADOKAWA 2010-12-01 (Release 2012-09-01) Kindle版 B009727M6M (ASIN) 実はまだ読んでないんだよなー ポチっとくか\nreviewed by Spiegel on 2025-03-08 (powered by PA-APIv5)\n晴る ヨルシカ (メインアーティスト) Universal Music LLC (Release 2024-01-05) MP3 ダウンロード B0CQS23YMR (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; アニメ「葬送のフリーレン」OP曲。 mora で高解像度版が買える。 YouTube の「歌ってみた」をいくつか聴いてオリジナルを買っておこうかなと。移動中にヘヴィローテーションしてる。\nreviewed by Spiegel on 2025-02-09 (powered by PA-APIv5)\n"
    },
    {
      "title": "Typst における関数とルール",
      "section": "typst",
      "description": "関数の定義と呼び出し / 名前付き引数 / Show ルール / Set ルール / 文書ファイルを分割した際のルール設定",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/typst/7-function-and-rules/",
      "published": "2025-03-07T10:16:25+00:00",
      "update": "2025-03-07T11:31:08+00:00",
      "content": "そろそろ Typst の関数とルール設定について，そろそろちゃんと調べようと思って。 本当は「Typst に関する雑多な話」で軽く触れるだけにするつもりだったが，思ったより量があったので記事を立てることにした。\n関数の定義と呼び出し まずは一番簡単な関数を考えてみる。\n#let fnc(it) = { it }; これは引数をそのまま返すだけの関数である。 この関数の引数に \u0026quot;Hello\u0026quot; を渡して呼び出すと\n#fnc(\u0026#34;Hello\u0026#34;) 引数の内容がそのまま出力される。\n関数の定義と呼び出し (1) 引数には（出力可能なものであれば）なんでも渡せる。 数値を入れることもできるし，何なら関数を入れ子にしてもよい。\n#fnc(fnc(\u0026#34;Hello\u0026#34;)) もうひとつ。 Typst の関数呼び出しではコンテントブロック（角括弧 [ ... ] で囲まれる領域）を関数呼び出しの後ろに付けることができる。 これをコンテント引数（content argument）と呼ぶ。\n#fnc[Hello] コンテント引数（content argument）は呼び出された側では content 型の引数としてセットされる。 つまり #fnc(\u0026quot;Hello\u0026quot;) と #fnc[Hello] は（str と content の型の違い以外は）ほぼ同じ機能である。\nついでの話として，呼び出す側はコンテント引数を複数並べることができる。\n#fnc2[Hello][world] この場合，呼び出される側は以下のように定義する。\n#let fnc2(..it) = { it } #fnc2[Hello][world] このときの出力結果は以下の通り。\n関数の定義と呼び出し (2) it に arguments 型で受けているのが分かる。 arguments 型は pos メソッドで array 型に変換できる。\n名前付き引数 次は文字列を色付きで出力することを考えてみる。 関数定義は以下の通り。\n#let colorText(color: red, it) = { text(fill: color)[#it] } color: red は名前付き引数（named parameter）と呼ばれる。 名前付き引数には既定値がつく（上述のコードでは red が既定値）。 この関数の呼び出しは以下のように書く。\n#colorText[Hello] #colorText(color: blue)[world] 名前付き引数は省略可能で省略した場合は既定値になる。 もちろん\n#colorText(\u0026#34;Hello\u0026#34;) #colorText(color: blue, \u0026#34;world\u0026#34;) などと書くこともできる。 出力結果は同じで以下の通り：\n関数の定義と呼び出し (2) Show ルール show キーワードを使って指定した対象に対し show ルールを設定できる。\n#let colorText(color: red, it) = { text(fill: color)[#it] } #show heading: it =\u0026gt; colorText(color: blue, it) = Heading 1 == Heading 1.1 上のコードの it は show キーワードで指定した対象を無名関数のコンテント引数として渡したもの。 全ての関数で共通に用意されている with メソッドを使うことで以下のようにコンテント引数を省略できる。\n#let colorText(color: red, it) = { text(fill: color)[#it] } #show heading: colorText.with(color: blue) = Heading 1 == Heading 1.1 出力結果はいずれも同じでこんな感じ。\nShow ルール設定 (1) Show ルールの対象は（出力可能なものなら）なんでもよくて，たとえば\n#let colorText(color: red, it) = { text(fill: color)[#it] } #show \u0026#34;Hello\u0026#34;: colorText Hello World みたいな記述もできる。 なお，コンテント引数以外に引数がない（または省略できる）場合は，上のように関数名だけを指定できる。\nこのコードの出力結果は以下の通り：\nShow ルール設定 (2) Show ルールの対象には selector も指定できる。 たとえば where メソッドを使って以下のように記述できる。\n#let colorText(color: red, it) = { text(fill: color)[#it] } #show heading.where(level: 1).or(heading.where(level: 2)): colorText = Heading 1 == Heading 1.1 === Heading 1.1.1 出力結果は以下の通り：\nShow ルール設定 (3) Show ルールの対象がない場合，文書全体が対象となる。\n#let colorText(color: red, it) = { text(fill: color)[#it] } #show: colorText.with(color: blue) #lorem(40) ちなみに lorem は指定した単語数のランダムな文章（欧文1）を生成する関数である。\n出力結果は以下の通り：\nShow ルール設定 (4) Show ルールは逐次処理されるのか Show ルールがどのように効いてくるか試してみた。\nまずはこれ。\n#let colorText(color: red, it) = { text(fill: color)[#it] } = Heading 1 == Heading 1.1 #show heading: colorText = Heading 2 == Heading 2.1 出力結果は以下の通り：\nShow ルール設定 (1b) まぁ，これは予想通り。\n次はこれ。\n#let colorText(color: red, it) = { text(fill: color)[#it] } = Heading 1 == Heading 1.1 #show heading: colorText = Heading 2 == Heading 2.1 #show heading: it =\u0026gt; colorText(color: blue, it) = Heading 3 == Heading 3.1 希望としては 黒 → 赤 → 青 の順で変わってほしいのだが\u0026hellip;\nShow ルール設定 (1c) んー。 ひょっとして show ルールって遡って適用されるのだろうか。 外部パッケージを import したときに show ルールが衝突したら面倒なことになりそう。\nShow ルールの設計はちょっと気をつけないといけないかもしれない。\nSet ルール text や image あるいは heading や par などドキュメント要素に紐づく組込み関数は「要素関数（element function）」と言うそうな。 要素関数は set キーワードを使い set ルールで名前付き引数の既定値を変更することができる。\nSome functions are associated with elements like headings or tables. When called, these create an element of their respective kind. In contrast to normal functions, they can further be used in set rules, show rules, and selectors. via Function Type – Typst Documentation ドキュメントのルートで set ルールを指定すると，逐次処理で指定位置以降に適用される。\n#set text(font: \u0026#34;Noto Serif CJK JP\u0026#34;, lang: \u0026#34;ja\u0026#34;) 明朝体 #set text(font: \u0026#34;Noto Sans CJK JP\u0026#34;, lang: \u0026#34;ja\u0026#34;) ゴシック体 出力結果は以下の通り：\nSet ルール設定 (1) Show ルールの中で set ルールを指定した場合，その show ルールの中でのみ set ルールが適用される。\n#set text(font: \u0026#34;Noto Serif CJK JP\u0026#34;, lang: \u0026#34;ja\u0026#34;) #show heading: it =\u0026gt; { set text(font: \u0026#34;Noto Sans CJK JP\u0026#34;) it } = ゴシック体 明朝体 set キーワードのみの記述ならコンテント引数を省略して\n#set text(font: \u0026#34;Noto Serif CJK JP\u0026#34;, lang: \u0026#34;ja\u0026#34;) #show heading: set text(font: \u0026#34;Noto Sans CJK JP\u0026#34;) = ゴシック体 明朝体 などと記述することもできる。\n出力結果はいずれも同じでこんな感じ。\nSet ルール設定 (2) なお let キーワードで定義したユーザ関数は要素関数ではないので set ルールは使えない。\n文書ファイルを分割した際のルール設定 文書ファイルを分割して import や include で読み込む場合，子ドキュメントで設定した set および show ルールは親ドキュメントには適用されないので注意（親ドキュメントから子ドキュメントへはルールが継承される）。 子ドキュメントで記述した set および show ルールを親ドキュメントに適用させるには（テンプレートで使う手法）ルールを記述した関数を import で読み込み，親ドキュメントの show ルールを使って関数を呼び出す。\n#let initFonts(font-name: \u0026#34;New Computer Modern\u0026#34;, body) = { set text( lang: \u0026#34;ja\u0026#34;, font: font-name, size: 10pt, ) body } 子ドキュメント #import \u0026#34;child.typ\u0026#34;: initFonts #show: it =\u0026gt; initFonts( font-name: \u0026#34;Noto Sans CJK JP\u0026#34;, it ) こんにちわ、世界！ 親ドキュメント (1) または with メソッドを使って\n#import \u0026#34;child.typ\u0026#34;: initFonts #show: initFonts.with( font-name: \u0026#34;Noto Sans CJK JP\u0026#34;, ) こんにちわ、世界！ 親ドキュメント (2) などとコンテント引数を省略できる。\nブックマーク ブックマークは「Typst に関するブックマーク」にてまとめています。\n参考文献 Typst完全入門: LaTeXより簡単、Markdownより強力、美しいドキュメント作成術 doitsu (著) 2024-12-08 (Release 2024-12-08) Kindle版 B0DPXBNTRS (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; マークアップ言語および組版ツールである Typst についての解説。 Kindle 版のみの提供。固定レイアウトではないためレイアウトが崩れまくって読みにくい。この手の技術解説書は固定レイアウトの Kindle 版か，いっそ PDF で出してほしい。でも Typst についてまとまった解説のある日本語の本は他に見当たらなかったのでありがたい。\nreviewed by Spiegel on 2025-02-20 (powered by PA-APIv5)\n日本語の文を生成する roremu パッケージを公開されている方もいる。感謝！\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    }
  ]
}
