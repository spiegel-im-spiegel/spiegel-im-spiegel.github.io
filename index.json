{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "2020年8月の暦",
      "section": "remark",
      "description": "今年の伝統的七夕は 2020-08-25",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/08/ephemeris/",
      "published": "2020-08-01T10:37:02+00:00",
      "update": "2020-08-01T11:18:56+00:00",
      "content": "2020年8月も spiegel-im-spiegel/koyomi パッケージを作って暦を浚ってみる。 国立天文台のデータを使っているため，暦象の基準が日本の暦になっている点に注意。\n   日付 内容     2020-08-04 望(満月)   2020-08-07 立秋   2020-08-10 山の日   2020-08-12 下弦   2020-08-13 金星が西方最大離角   2020-08-16 天王星が留   2020-08-18 水星が外合   2020-08-19 朔(新月)   2020-08-23 処暑   2020-08-26 上弦   2020-08-31 二百十日    天象 各用語の意味は以下の通り。\n「天象 - 国立天文台暦計算室」より  「留」とは「惑星の地心視赤経の時間変化が0、すなわち赤経方向の動きが止まる瞬間」，もっと簡単に言うと天球上の（見かけの）惑星の動きが反転する瞬間を指す。\nペルセウス座流星群 2020年のペルセウス座流星群は8月12日22時頃に極大になる予定。\n夏のペルセウス座流星群はHR50（目視で1時間に50前後流れる）くらいで毎年安定的に流れるのが特徴である。 輻射点のあるペルセウス座が昇るタイミングで夜半すぎからが本来の見頃なのだが，今年は下弦の月と重なっているため条件が悪い。 夜半までの時間でじっくり観望・観測するのがいいだろう。\n 2020年のペルセウス座流星群の情報  せっかくの夏休み。 今年は思いっきり外で遊べず大変だろうが，お子さんのいる方は是非この機会に巻き込んでみてはいかがだろう。\nまだ見える NEOWISE 彗星 今年発見され話題になっている NEOWISE 彗星は宵の空でまだしばらくは見れるらしい。\n伝統的七夕 先月も書いたが 「七夕」を含む五節句は明治の改暦で廃止されて以降，正式な暦としては定義されていない。 その代わりと言ってはナニだが，国立天文台では旧暦の七夕に近い日を「伝統的七夕」としてキャンペーンを行っている。\n「伝統的七夕」の定義は以下の通り。\n 二十四節気の処暑（しょしょ＝太陽黄経が150度になる瞬間）を含む日かそれよりも前で、処暑に最も近い朔（さく＝新月）の瞬間を含む日から数えて7日目が「伝統的七夕」の日です 質問3-10）伝統的七夕について教えて | 国立天文台(NAOJ)より  この定義に従うと，2020年の伝統的七夕は 2020-08-19 の朔から6日後の 2020-08-25 となる。\n今年は「土用の丑の日」がもう1回ある 先月も書いたとおり，こよみ上の秋の直前の「土用」は，今年は 2020-07-19 から立秋前日の 2020-08-06 までだが，この間の「土用の丑の日」は 2020-07-21 および 2020-08-02 の2回ある。\nちなみに私はウナギよりアナゴが好きです（笑）\nコード 今回使用したコードは以下の通り。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/spiegel-im-spiegel/koyomi\u0026#34; ) func main() { start, _ := koyomi.DateFrom(\u0026#34;2020-08-01\u0026#34;) end, _ := koyomi.DateFrom(\u0026#34;2020-08-31\u0026#34;) k, err := koyomi.NewSource( koyomi.WithCalendarID( koyomi.Holiday, koyomi.MoonPhase, koyomi.SolarTerm, koyomi.Eclipse, koyomi.Planet, ), koyomi.WithStartDate(start), koyomi.WithEndDate(end), ).Get() if err != nil { fmt.Fprintln(os.Stderr, err) return } fmt.Println(\u0026#34;| 日付 | 内容 |\u0026#34;) fmt.Println(\u0026#34;| ---- | ---- |\u0026#34;) for _, e := range k.Events() { fmt.Printf(\u0026#34;| %v | %v |\\n\u0026#34;, e.Date, e.Title) } } ブックマーク   暦Wiki/季節/雑節とは？ - 国立天文台暦計算室\n  2020年の主な暦象\n  日本の暦情報を取得するパッケージを作ってみた\n  参考図書  天文年鑑 2020年版 天文年鑑 編集委員会 (編集) 誠文堂新光社 2019-11-20 単行本 4416719485 (ASIN), 9784416719480 (EAN), 4416719485 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  天文ファン必携。2020年版。\nreviewed by Spiegel on 2019-11-23 (powered by PA-APIv5)\n "
    },
    {
      "title": "Pocket を捨てて Instapaper に出戻る",
      "section": "remark",
      "description": "上手く出戻りが成功するといいのだけど。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/07/remove-pocket/",
      "published": "2020-07-31T04:06:48+00:00",
      "update": "2020-07-31T04:08:39+00:00",
      "content": "普段は，移動中などで見た Web サイトを Pocket に保持っておいて後でパソコンのブラウザ等でじっくり読むスタイルなのだが， Pocket から Web ページに上手く移動できないので「おかしいな」と思ってリロードしたら「サードパーティ cookie を拒否する設定になっているから Pocket を例外にしろ」（← かなり意訳）みたいな表示が出てきた。\n！！！ふざけんな！！！ しばらくしたら元に戻ったみたいだけど，これで決心がついた。\n前々から言っているが「Mozilla がユーザのプライバシーを重視しているというのは嘘っぱちである」。\nまぁ Web ブラウザを提供している営利企業でユーザのプライバシーに誠実なところはひとつもないと断言できると思うので今更な話ではあるが，ついに Mozilla 傘下の Pocket も監視資本主義へ邁進し始めたかと思うと感慨深い。\n実際，サードパーティ cookie を dis って困ることはほぼない。 むしろ今回みたいなことを言ってくさるサービスを排除できるので便利なくらいだ。\nしかし Pocket を捨てるのはいいが代替サービスがない。\n Readability 無くなってるぢゃん ネットで見かける「あとで読む」系サービスの紹介記事がどれも古くて，いまだに「Read It Later1」を紹介している記事も検索上位にあるし Evernote など，大抵のサービスは Pocket との連携が前提になっているらしい。ニンともカンとも 「はてブ」はなー。しかも，確か「はてな」の各サービスはサードパーティ cookie 拒否を嫌ってたような\u0026hellip;  というわけで消去法で Instapaper になった。 アカウントが残っててよかったよ。 念のため，パスワードだけ変更しておく。\nそういえば，なんで Instapaper 止めたんだっけ？ 有料化したあたりからかな？ 覚えてない。\nInstapaper は2018年に Pinterest から独立したらしい。\n Instapaper is going independent 「後で読む」サービスのInstapaper、Pinterestから独立へ - CNET Japan  今は無料版でも使えるようだが，継続的な運用のためにサブスクリプション契約を結ぶことを推奨している。\nIn addition to getting access to Premium features, your Instapaper Premium subscription will help ensure that we can continue developing and operating Instapaper. Our goal is to build a long-term sustainable product and business, without venture capital, and we need your help to achieve that goal. via The next ten years of Instapaper  志は買うし，年額 29.99 USD ならさして高くもないが，実際に課金するかどうかはもう少し使ってみてからね。\nWeb ブラウザや他サービスとの連携も問題なさそうだ。\n Apps How to Save  Instapaper – Get this Extension for 🦊 Firefox (en-US)    さて，上手く出戻りが成功するといいのだけど。\nブックマーク  Flickr は監視資本主義に向かわない  参考図書  もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo (著) 達人出版会 2017-12-25 (Release 2019-03-02) デジタル書籍 infoshare2 (tatsu-zine.com) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  WirelessWire News 連載の書籍化。感想はこちら。祝 Kindle 化！\nreviewed by Spiegel on 2018-12-31\n  超監視社会 ブルース・シュナイアー (著), 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) Kindle版 B01MZGVHOA (ASIN)  実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by PA-APIv5)\n   “Read It Later” は Pocket の旧サービス名。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "GNKF 最初のリリース ",
      "section": "release",
      "description": "元のコードの70%くらいは捨てました（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/07/first-release-gnkf/",
      "published": "2020-07-30T13:49:26+00:00",
      "update": "2020-07-30T13:49:40+00:00",
      "content": "貴方は3年前に書いた自分のコードにウンザリしたことはありませんか。 私はあります。 それもしょっちゅう（笑） まぁ，3年前と今とで同じコードを書いてたら，それはそれで進歩がないっちう話だけど。\n閑話休題 (それはさておき) 。\n3年前に最初のリリースを公開した「nkf っぽいなにか」はあまりにコードの出来が悪すぎてメンテする気も起こらなくなったので，リポジトリを放棄して新たに作り直すことにした（☆を付けてくださってる方，ごめんなさい）。\n spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang  元のコードの70%くらいは捨てました（笑）\n詳しい使い方は以下を参考にどうぞ。\n GNKF: Network Kanji Filter by Golang  これでようやく「かなカナ変換」や「康熙部首の正規化」を組み込めた。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "GNKF: Network Kanji Filter by Golang",
      "section": "release",
      "description": "昔からある nkf コマンドの劣化コピー版と思っていただければ概ね間違いない（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/gnkf/",
      "published": "2020-07-30T13:41:38+00:00",
      "update": "2020-07-30T13:43:22+00:00",
      "content": " spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang  gnkf は，コマンドラインで動作する，特に日本語テキストを操作するためのフィルタプログラムである。 昔からある nkf コマンドの劣化コピー版と思っていただければ概ね間違いない（笑）\n  \ngnkf には以下の機能を組み込んでいる。\n guess: 文字エンコーディングの推測 enc: 文字エンコーディング変換 newline: 改行コードの一括変換 norm: Unicode 正規化 width: 全角・半角変換 kana: かなカナ変換 dump: 16進ダンプ  以降からもう少し詳しく紹介する。\n文字エンコーディングの推測 $ gnkf guess -h Guess character encoding of the text Usage: gnkf guess [flags] Aliases: guess, g Flags: --all print all guesses -f, --file string path of input text file -h, --help help for guess Global Flags: --debug for debug たとえば以下のように使う。\n$ echo こんにちは，世界 | gnkf g UTF-8 元祖 nkf コマンドは改行コードの推測も行うが， gnkf では文字エンコーディングの推測のみ行う。 テキスト全文を一旦メモリ内に読み込むので，巨大ファイルを扱う場合はご注意を。\n文字エンコーディングの推測には saintfish/chardet パッケージを使っているが，正直に言ってあまり精度がよくない（ただの plain text なら golang.org/x/net/html/charset よりはイケてる感じだが）。\nそこで --all オプションを使って複数の候補を表示できるようにしている。 こんな感じで蓋然性が高い順に表示している。\n$ echo こんにちは，世界 | gnkf g --all UTF-8 windows-1255 windows-1253 Big5 GB-18030 Shift_JIS 文字エンコーディング変換 $ gnkf enc -h Convert character encoding of the text. Using MIME and IANA name as the character encoding name. Refer: http://www.iana.org/assignments/character-sets/character-sets.xhtml Usage: gnkf enc [flags] Aliases: enc, encoding, e Flags: -d, --dst-encoding string character encoding name of output text (default \u0026#34;utf-8\u0026#34;) -f, --file string path of input text file -g, --guess guess character encoding of source text -h, --help help for enc -o, --output string path of output file -s, --src-encoding string character encoding name of source text (default \u0026#34;utf-8\u0026#34;) Global Flags: --debug for debug -s および -d オプションで文字エンコーディング名を指定する際は IANA の登録名称を使う（大文字・小文字は区別しない）。 たとえば，こんな感じ。\n$ echo こんにちは，世界 | gnkf e -d shift_jis ただし golang.org/x/text 以下のサブパッケージで変換器が用意されていない文字エンコーディングについては変換できないのであしからず。\n日本語であれば japanese.EUCJP, japanese.ISO2022JP, japanese.ShiftJIS 等が用意されているので，それぞれ \u0026quot;euc-jp\u0026quot;, \u0026quot;iso-2022-jp\u0026quot;, \u0026quot;shift_jis\u0026quot; と指定すれば，いい感じに変換してくれる。\n-g オプションを付けると gnkf guess コマンドと同じロジックで変換元テキストの文字エンコーディングを推測する。 が，前節で述べたように，よく間違うので過信は禁物である。\n改行コードの一括変換 $ gnkf newline -h Convert newline form in the text. Usage: gnkf newline [flags] Aliases: newline, nwln, nl Flags: -f, --file string path of input text file -h, --help help for newline -n, --newline-form string newline form: [lf|cr|crlf] (default \u0026#34;lf\u0026#34;) -o, --output string path of output file Global Flags: --debug for debug こんな感じで使う。\n$ echo こんにちは，世界 | gnkf nl -n crlf テキスト全文を一旦メモリ内に読み込んで一括変換するため，巨大ファイルを扱う場合はご注意を。 一応，複数の改行コードが混在している場合でも上手く処理してくれる（筈）\nUnicode 正規化 $ gnkf norm -h Unicode normalization of the text (UTF-8 encoding only). Usage: gnkf norm [flags] Aliases: norm, normalize, nrm, nm Flags: -f, --file string path of input text file -h, --help help for norm -k, --kangxi-radicals normalize kangxi radicals only (with nfkc or nfkd form) -n, --norm-form string Unicode normalization form: [nfc|nfd|nfkc|nfkd] (default \u0026#34;nfc\u0026#34;) -o, --output string path of output file Global Flags: --debug for debug こんな感じで使う。\n$ echo ﾍﾟﾝｷﾞﾝ | gnkf nm -n nfkc ペンギン Unicode 正規化は色々と副作用があるのでご注意を。 全角・半角変換については後述の gnkf width コマンドを使うのがオススメである。\n康熙部首の正規化 NFKC または NFKD 正規化を行う際に -k オプションを付けることで康熙部首の正規化のみを行うようにした。\nたとえば「㈱埼⽟」の「⽟（U+2f5f）」のみを正規化したい場合は\n$ echo ㈱埼⽟ | gnkf nm -n nfkc -k などとすればよい。\n全角・半角変換 $ gnkf width -h Convert character width in the text (UTF-8 encoding only). Usage: gnkf width [flags] Aliases: width, wdth, w Flags: -c, --conversion-form string conversion form: [fold|narrow|widen] (default \u0026#34;fold\u0026#34;) -f, --file string path of input text file -h, --help help for width -o, --output string path of output file Global Flags: --debug for debug こんな感じで使う。\n$ echo ペンギン | gnkf w -c narrow ﾍﾟﾝｷﾞﾝ \u0026quot;fold\u0026quot; フォームを使うと，英数字は半角にカナは全角に，といい感じに変換してくれる。\n変換には golang.org/x/text/width パッケージを使っているが，濁点・半濁点を含む文字や全角と半角で一対一に対応していない文字は上手く扱えないため，例外部分については内部で強制的に置換している。\nまた，このためにテキスト全文を一旦メモリ内に読み込んでいる。 巨大ファイルを扱う場合はご注意を。\nかなカナ変換 $ gnkf kana -h Convert kana characters in the text. UTF-8 encoding only. \u0026#34;hiragana\u0026#34; and \u0026#34;katakana\u0026#34; forms are valid only for full-width kana character. Usage: gnkf kana [flags] Aliases: kana, k Flags: -c, --conversion-form string conversion form: [hiragana|katakana|chokuon] (default \u0026#34;katakana\u0026#34;) -f, --file string path of input text file --fold convert character width by fold form -h, --help help for kana -o, --output string path of output file Global Flags: --debug for debug こんな感じで使う。\n$ echo こんにちは | gnkf k -c katakana コンニチハ かなカナ変換は全角文字のみが対象だが --fold オプションを付けることで全角・半角変換（\u0026quot;fold\u0026quot; フォーム）も同時に行うことができる。\n$ echo 123 ｺﾝﾆﾁﾊ | gnkf k -c hiragana --fold 123 こんにちは テキスト全文を一旦メモリ内に読み込むので，巨大ファイルを扱う場合はご注意を。\n直音への変換 \u0026quot;chokuon\u0026quot; フォームを指定して拗音 (ようおん) （小さい 'ゃ', 'ゅ', 'ょ' など）や促音（小さい 'っ'）を直音（'や', 'ゆ', 'よ', 'つ'）に変換する。\n$ echo ニッポン | gnkf k -c chokuon ニツポン 半角カナも変換可能。\n16進ダンプ $ gnkf dump -h Hexadecimal view of octet data stream with C language array style. Usage: gnkf dump [flags] Aliases: dump, hexdump, d, hd Flags: -f, --file string path of input text file -h, --help help for dump -u, --unicode print by Unicode code point (UTF-8 only) Global Flags: --debug for debug デバッグ用に用意した機能（笑） 以下のようにオクテット単位でダンプ表示する。\n$ echo ㈱埼⽟ | gnkf d 0xe3, 0x88, 0xb1, 0xe5, 0x9f, 0xbc, 0xe2, 0xbd, 0x9f, 0x0a 更に -u オプションを付けると Unicode 符号点に変換して表示してくれる。\n$ echo ㈱埼⽟ | gnkf d -u 0x3231, 0x57fc, 0x2f5f, 0x000a これを使って，たとえば\n$ echo ㈱埼⽟ | gnkf nm -n nfkc -k | gnkf d -u 0x3231, 0x57fc, 0x7389, 0x000a てな感じにパイプで繋いで動作確認できる。 我ながらありがたい機能だ（笑）\nブックマーク  文字エンコーディング変換 Go 言語と Unicode 正規化 文字エンコーディングの検出 Go 言語による Unicode 半角/全角変換 かなカナ変換 こんな埼「玉」修正してやるぅ  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "2020-07-25 のブックマーク",
      "section": "bookmarks",
      "description": "「2020年はLinuxカーネルにおけるRust元年になるか？」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/07/25-bookmarks/",
      "published": "2020-07-25T03:48:36+00:00",
      "update": "2020-07-25T03:49:10+00:00",
      "content": "リリース情報  Hugo 0.74.3: A couple of Bug Fixes | Hugo  バベルのインターネット  中国政府による香港への国安法適用に対するテクノロジー企業たちのそれぞれの対応 | TechCrunch Japan  セキュリティ＆プライバシー関連  米国土安全保障省、Windows DNSサーバの脆弱性に対し緊急指令発令 | マイナビニュース Thunderbirdに重大な脆弱性、アップデートを | マイナビニュース : 78 で改修された脆弱性があるらしい。んー，困った Hacking a Power Supply - Schneier on Security NIST’s Post-Quantum Cryptography Program Enters ‘Selection Round’ | NIST  Update on NIST\u0026rsquo;s Post-Quantum Cryptography Program - Schneier on Security    天文関連  浅口市／国立天文台188cm反射望遠鏡の貸切共同利用 [2007.09904] Estimating survival probability using the terrestrial extinction history for the search for extraterrestrial life : 地球生命が誕生から現在までに幸運にも絶滅しなかった確率は15%程度, https://twitter.com/tsumura_isas6/status/1285417176057307136?ref_src=twsrc%5Etfw 史上最大の3D宇宙地図が完成 - SWI swissinfo.ch 「一カ月で1000個分類しようキャンペーン」8月1日スタート | blog_announcement_J | GALAXY CRUISE 8億年前、月と地球を襲った小惑星シャワー — リソウ 【研究成果・プレスリリース】大質量星が誕生している領域の化学組成と星の進化の過程 | 学習院大学 中国初の探査車が天問1号ロケットの打ち上げ成功で火星に向かう | TechCrunch Japan  知財関連  リツイートするだけで身元が他人に知られるリスクがあることを示した知財高裁判決(栗原潔) - 個人 - Yahoo!ニュース 令和2年7月21日最高裁判決を読む　〜写真の無断RTによる権利侵害〜｜とあるオリガの試行錯誤\u0026lt;トライ\u0026amp;エラー\u0026gt;｜note  Linux または Ubuntu に関する話題  Ubuntu 19.10 その182 - Ubuntu 19.10のサポート終了・Ubuntu 20.04 LTSへアップグレードを - kledgeb  その他  何故お役所ってオワコンIEが大好きなの？｜楠 正憲（国際大学GLOCOM 客員研究員） 人はなぜ賢くなれないのか、そしてAI技術はシンギュラリティーに達するのか？ - ZDNet Japan : 達しないだろ（笑） QUIC for SSH の提案仕様が出たよ - ASnoKaze blog 2020年はLinuxカーネルにおけるRust元年になるか？ - YAMDAS現更新履歴 Linuxカーネルが難しい？Rustで実装しよう！. 「カーネル開発者になりたい！」 | by FUJITA Tomonori | nttlabs | Jul, 2020 | Medium コーディングの自動化とプログラミングの未来について - YAMDAS現更新履歴 色弱の僕がトイレにいって困ること｜塚本 牧生｜note OSS 版 API Gateway、Kong Gateway をつかってみる - Techtouch Developers Blog GitHub、オープンソースのライセンシングを容易に\u0026ndash;「Licensed」をオープンソース化 - ZDNet Japan NTTネオメイト、「Backlog」でタスクを可視化\u0026ndash;会議用の資料作成も不要に - ZDNet Japan マイクロソフト、「Universal Print」のパブリックプレビュー開始。プリンタサーバをクラウド化し、プリンタドライバのインストールを不要に － Publickey 「(HTML) + CSS」のみを使って、今「リアルな電卓」を作ってみた - Qiita Tencentと中国の科学者がディープラーニングを使用して新型コロナの重症化確率を予測 | TechCrunch Japan ブログ: 数学者は素数の定理を証明することを決して止めない 米国立科学財団が量子コンピュータ研究に約80億円を助成へ | TechCrunch Japan スナドラ865 Plus搭載のレノボ製ゲーミングスマホ、2基のバッテリや横画面水平カメラなどを搭載 | TechCrunch Japan New Data on T Cells and the Coronavirus | In the Pipeline  ブログ: T細胞とコロナウイルスに関する新しいデータ   五島勉氏と人類滅亡と宮崎駿監督｜喜多野土竜｜note もっともパワフルで拡張性のあるオープンソースWikiソフトウェアを謳うWiki.js - YAMDAS現更新履歴 本当に巨大テック企業は哲学者を雇っていたのか - YAMDAS現更新履歴 広告売上減少のTwitterがサブスク導入の可能性を投資家に示唆 | TechCrunch Japan  "
    },
    {
      "title": "ダーク・スタイルにしてみた",
      "section": "remark",
      "description": "思うところがあってこのブログのスタイルをスタイルを替えてみた。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/07/dark-style/",
      "published": "2020-07-24T06:47:14+00:00",
      "update": "2020-07-24T06:58:19+00:00",
      "content": "思うところがあってこのブログのスタイルを（近年の流行りにのっとって）ダーク・スタイルにしてみた。\nいやね。 既に Twitter とか Facebook とかダーク・テーマで表示してるわけよ。 更にデスクトップ画面もテキスト・エディタもダーク・テーマにしてるの。\nその状態で自分のサイトを見ると目がチカチカするのね，数秒程度だけど。 ここ数年で眼が衰えてるのは自覚してたし，自サイトもダーク・スタイルにしちゃえ！ って感じで替えてみた。\n元のスタイルはとってあるし， Hugo なので戻すことは簡単にできる。 まぁ，様子を見ながらチューニングしていく予定。\nきっかけは以下の記事。\n シャニマスのチェックボックスから見る色弱者の世界｜謝罪Ｐ｜note 色弱の僕がトイレにいって困ること｜塚本 牧生｜note  トイレのドアの鍵の話は「なるほど！」と思ったよ。\n私は（少なくとも検査で異常なしと言われる程度には）色弱ではないが，近視で乱視で若干の弱視傾向がある。 そんでもってここ5年位で老眼も進んでいる。 だから明度や彩度が急激に変わると眼が追いつかなくなるのね。 暗いところに眼を慣らすのに時間がかかるため，学生時代にやってた天体観測はなかなか大変だった（でも楽しかったよ）。\n私は色弱の人の感覚は分からない。 でも「誰もが同じように見えているわけではない」という点では共感できる。 同じように，聴覚も味覚も嗅覚も触覚も，誰もが同じように感じているとは限らないのだ。\n最初に紹介した記事にもあるように，これらの差異を緩和するような工学デザイン上の定石と言えるものはある。 ただ，自分にない感覚を補完して設計するのはなかなか大変だと思う。 私のように色彩や見た目のデザイン・センスが壊滅している人はなおさらである。\nというわけで，色設計とか validation できるツールとかサービスとかあればいいのに，と思ってたら， Android アプリ開発なんかでは実際にあるらしい。\n（Facebook で教えてもらったスクリーンショットを許可をもらってコピペしています）  他にもこういうツールとか・サービスとかあるといいよね。 知ってる！ という方は教えてください m(_ _)m\n今回は主に自分用の変更だけど，弱視の方とか多少は楽に見れるようになっているといいねぇ。\nブックマーク  WEB色見本 原色大辞典 - HTMLカラーコード  "
    },
    {
      "title": "Twitter リスク？",
      "section": "remark",
      "description": "本当の意味での侵害や損害があろうとなかろうと「氏名表示権」を提示するだけでお手軽に発信者情報開示の請求が通ってしまう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/07/twitter-risk/",
      "published": "2020-07-23T07:01:52+00:00",
      "update": "2020-07-23T23:45:51+00:00",
      "content": "最初，新聞系メディアの記事を見て「はぁ？」となったが，マトモな記事も出てきたので，今回も覚え書きとして記しておく。\n 令和2年7月21日最高裁判決を読む　〜写真の無断RTによる権利侵害〜｜とあるオリガの試行錯誤\u0026lt;トライ\u0026amp;エラー\u0026gt;｜note  Twitter とは まずは，おさらい。 前置きにしては長い説明だけど，後々必要なのでご容赦を。\nTwitter はマイクロブログ (microblogging) と呼ばれるコンテンツ形態を提供するサービスである。 ちなみにマイクロブログの源流は tumblelog と言われている。\nTwitter による投稿は “tweet” と呼ばれ，自身および follow したユーザの tweet は基本的に時系列に並べられる。 これをタイムライン（timeline）と呼ぶ1。\nTweet には文字列しか載せられない点に注意。 ただし @ から始まる単語をアカウント名， # から始まる単語をタグとして解釈し，他ユーザや他 tweet と連携することが可能である。 また tweet 内の URL を解釈し，アプリケーションやその設定によっては映像（動画を含む）や “Twitter Card” と呼ばれるページのサマリ情報に展開して表示することもできる2。\nたとえば\n図書館で借りた本 https://t.co/5Q2uTLUrBR pic.twitter.com/GRhVumQTgR\n Der Spiegel im Spiegel July 9, 2020  という tweet を Web ブラウザで見ると\nDer Spiegel im Spiegel July 9, 2020  のように展開される。 ちなみに上の tweet に含まれる画像のオリジナルは以下の通り。\n図書館で借りた本 | Yasuhiro ARAKAWA | Flickr  タイムライン上の表示は上下がトリミングされる点に注目しておいてほしい。\n自身または他者の tweet を再投稿（reblog）することを retweet と呼ぶ。 Retweet に関しては紆余曲折があるが，今のところは以下の2種類ある。\n 対象の tweet を，手を加えずに投稿者の情報ごと自タイムラインに表示する 対象の tweet への URL に文言を添えて tweet する。「引用 retweet」とも呼ばれる  前者は\n のように retweet フラグが立っている以外は通常の tweet と変わらない。 後者は\n絶版なのか古本屋で買おうとしたらめっさ高かった https://t.co/h0vJZibzTJ\n  などと tweet する。 通常はアプリで自動化・隠蔽されているので中身を気にする人は少ないかもしれないが。 これを Web ブラウザ等で見ると\n のように引用っぽく展開される。\n「Retweet 発信者情報開示事件」のあらまし 前置きが長くなった。 ここからが本題。\nなお，今回の訴訟を便宜上「Retweet 発信者情報開示事件」または単に「情報開示事件」と呼ぶことにする。 判決文は以下の通り。\n 平成30(受)1412 発信者情報開示請求事件 - 裁判例結果詳細 | 裁判所 - Courts in Japan  登場人物 職業エンジニアをやってた頃の癖で，構造を調べる際につい「actor は誰？」って思ってしまう。\nちうわけで，「情報開示事件」の登場人物 (actor) は以下の5者となっている。\n [1] 著作物 [2] 著作物の著作者 [3] 著作物を tweet した人物 [4] [3] の上記 tweet を retweet した人物 [5] Twitter サービス・プロバイダ   「情報開示事件」は [2] が [5] に対して [4] の身元を示す情報の開示を請求し，それを [5] が突っぱねたことで発生している。 つまり [2] と [5] の間の訴訟である。\n[1] の著作物はいわゆる「有償著作物3」の見本として Web ページ上に公開されている写真画像のようで，ページ上にも画像自体にも「転載禁止」が明記されている。\n[3] の人物は，判決文によると，著作（権）者に無断で tweet を行ったようだ。 邪推だが [3] を訴える過程で retweet した [4] の情報も取得しようとしたのではないだろうか。\n[5] を運営する Twitter 社は米国法人である。 日本にも関係する法人組織があるが，「情報開示事件」の登場人物ではない。\n事件のポイント いわゆる「プロバイダ責任制限法」では，権利侵害が行われた著作物に関して，権利者からサービス・プロバイダに対して投稿・発信者の情報を求めることができ，プロバイダはそれに応じる義務がある。 ただしこれは「権利侵害が行われた」ことが認められることが条件である。\nまた「情報開示事件」の対象は，あくまで [4] による retweet で，元の無断転載を含む [3] の tweet は対象になっていない（おそらく別件）。\n前置きでも述べたように， tweet であれ retweet であれ， Web ブラウザや公式アプリのタイムラインに画像が展開される際はレイアウトによっては上下がトリミングされた状態で表示される。 また，あくまでも表示上のトリミングなので，元の画像に手が加えられることはない。\nただ，このトリミングによって画像に示された氏名を含む著作権表示が見えなくなるため，それを以って「氏名表示権」の侵害であるとしたわけだ。\n以上を踏まえて判決結果を見ていく。\n判決のポイント 判決を先に言うと，最高裁判所第三小法廷は [5] の Twitter 社の上告を棄却し retweet されタイムライン上でトリミング表示された画像であっても「氏名表示権」の侵害があるとした。 これにより [5] は著作者 [2] に対し [5] の情報開示の義務を負うことが決定した。\nポイントのひとつは，今回対象となっている権利が「氏名表示権」に限定されているという点だ。 利用者の思惑がどうあれ，サービスの実装がどうあれ，実際に画像に描かれた「氏名」が見えなくなってるんだから，それは「氏名表示権」の侵害と言えるよね，という話。\nちなみに「氏名表示権」について簡単に説明すると，著作権法で示される「著作者人格権4」のひとつで，著作権法 第19条で定義されている。\n 著作者は、その著作物の原作品に、又はその著作物の公衆への提供若しくは提示に際し、その実名若しくは変名を著作者名として表示し、又は著作者名を表示しないこととする権利を有する。その著作物を原著作物とする二次的著作物の公衆への提供又は提示に際しての原著作物の著作者名の表示についても、同様とする。 著作権法より  （著作者人格権のひとつである）同一性保持権や著作財産権については「情報開示事件」の対象ではないという点は押さえておく必要がある。\nもうひとつのポイントは retweet を「再投稿」と見なしたこと。 今後のことを考えると，むしろこちらのほうがリスクになるかもしれない。\nTwitter リスク？ ここからは私見・偏見・独断の塊なのであしからず（笑）\nお手軽！ 発信者情報開示 今回の「Retweet 発信者情報開示事件」の何がリスクかって，そこに本当の意味での侵害や損害があろうとなかろうと，今後「氏名表示権」を提示するだけでお手軽に発信者情報開示の請求が通ってしまうことだろう。\nTwitter は匿名サービスではないが，利用者情報を無闇に第三者に開示しない程度には良心的である。 しかし，監視資本主義の雄でもある現在の Twitter は携帯端末と強く結びついているので，利用者情報を開示してしまえば本人に辿り着く可能性はとても高くなる。\nぶっちゃけ，タイムライン表示で著作権表示部分がトリミングされるよう意図的に画像レイアウトを調整すれば簡単に釣れてしまうのだ。 知財トロル大歓喜！\n非親告罪の可能性 「Retweet 発信者情報開示事件」の論点とは直接関係ないが，今回対象となっている写真画像が「有償著作物3」である点が気になっている。 「有償著作物」だと何が拙いかというと，非親告罪事案になる可能性があるのだ。\n2018年末に施行された改正著作権法では，以下の条件に於いて非親告罪の対象になる。\n  対価を得る目的又は権利者の利益を害する目的があること 有償著作物等について原作のまま譲渡・公衆送信又は複製を行うものであること 有償著作物等の提供・提示により得ることが見込まれる権利者の利益が不当に害されること   年末年始に施行される改正著作権法に関する覚え書きより  前節の「お手軽！ 発信者情報開示」と併せて，本当に知財トロルがやりやすい環境が整ってきたって感じ。\nRetweet は「再投稿」か 小法廷での判決とはいえ最高裁がそう言っちゃったんだから今後の訴訟はそういう方向で議論されるんだろうけど，微妙に納得いかない感じである。\n前置きでも書いたけど，元々 retweet は reblog の延長線上にある発想ではあるが，現在の公式 retweet 機能は，喩えるなら「シンボリック・リンク」のようなもので，そこに実体があるわけではない。\nそれって本当に「再投稿」って言っちゃっていいのだろうか。\nRetweet が（♡ (fav.) の数なんかより）重要な「口コミ」シグナルである点は論を待たないだろう。 しかし Retweet を「再投稿」と見なすなら，それは「転載」と同義なので，大きな著作権リスクを抱えることになる。\nまぁ，かつての Tumblr の reblog を見た印象で考えると，今回も「知ったこっちゃない」って言う人が大部分かもしれないが。 逃げる準備はしておくべきかねぇ（笑）\n喧嘩を売り買いするなら利益を出さないと 某ラノベ作品で「売られた喧嘩は買うけど，売り買いするなら利益を出す」という文言を見かけた（うろ覚え）。\n私は面倒事は嫌いなので無闇に売り買いする気はないが，「悪法も法」とも思わないので，もしやるならきちんと利益分岐点を見定めてやりたいものである。\n倍返しなんかしないよ（笑）\nブックマーク  リツイートするだけで身元が他人に知られるリスクがあることを示した知財高裁判決(栗原潔) - 個人 - Yahoo!ニュース 改訂3版： CC Licenses について  参考図書  著作権２．０ ウェブ時代の文化発展をめざして (NTT出版ライブラリー―レゾナント) 名和 小太郎 (著) NTT出版 2010-06-24 単行本（ソフトカバー） 4757102852 (ASIN), 9784757102859 (EAN), 4757102852 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  名著です。今すぐ買うべきです。\nreviewed by Spiegel on 2014-08-02 (powered by PA-APIv5)\n  〈海賊版〉の思想‐18世紀英国の永久コピーライト闘争 山田 奨治 (著) みすず書房 2007-12-20 単行本 4622073455 (ASIN), 9784622073451 (EAN), 4622073455 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  「コピーライト永久独占を目論む大書店主に挑む〈海賊出版者〉ドナルドソンの肖像。法廷闘争を軸に著作権を史的に考察する。」（帯文より）\nreviewed by Spiegel on 2018-11-13 (powered by PA-APIv5)\n  18歳の著作権入門 (ちくまプリマー新書) 福井健策 (著) 筑摩書房 2015-01-10 (Release 2015-01-30) Kindle版 B00SM7G6SI (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  福井健策弁護士による「18歳からの著作権入門」の書籍化。\nreviewed by Spiegel on 2015-05-07 (powered by PA-APIv5)\n   もっとも tweet の順序については随分前から崩壊していて follow していないアカウントからの広告 tweet も混ぜ込まれるため，それはもう酷い有様になっている。ぶっちゃけ，サービスイン当初の面影は全くないと言っていいだろう。 \u0026#x21a9;\u0026#xfe0e;\n 公式アプリでは「メディアのプレビュー」を無効にすることで映像や Twitter Card へ展開しないようにすることもできる。サードパーティのアプリケーションでは，そもそも映像や Twitter Card への展開ができない（多分）けど。 \u0026#x21a9;\u0026#xfe0e;\n 「有償著作物等」とは「有償で公衆に提供又は提示されている著作物等」を指す。 \u0026#x21a9;\u0026#xfe0e;\n 「氏名表示権」を含む「著作者人格権」は「著作者の一身に専属し、譲渡することができない」（著作権法 第59条）ため，著作権者が他の著作財産権を保持していようといまいと「著作者の権利」として行使できる。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Twitter から始まる Class Break",
      "section": "remark",
      "description": "この件で4年前の米国大統領選挙を連想した人は多いだろうねぇ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/07/class-breaks-from-twitter/",
      "published": "2020-07-21T04:08:08+00:00",
      "update": "2020-07-25T03:49:10+00:00",
      "content": "さて，先週 Twitter 界隈で騒ぎになった事件について。 ぼちぼちと情報が出始めているようなので，覚え書きとして記しておこう。\n今回の事件について Bruce Schneier 先生によるエッセイが公開されている。\n On the Twitter Hack - Schneier on Security ブログ: Twitterのハッキングについて  事件を一言で言うとこんな感じ。\nSomeone compromised the entire Twitter network, probably by stealing the log-in credentials of one of Twitter’s system administrators. via On the Twitter Hack - Schneier on Security  件の「誰か」が Twitter のシステム管理者からどうやって認証情報を引き出したのかはよく分かっていないようだ。 従業員への賄賂の可能性やら SIM スワッピング攻撃やら，様々な可能性を考慮して捜査中らしい。\nIn the Twitter case this week, the hacker’s tactics weren’t particularly sophisticated. We will almost certainly learn about security lapses at Twitter that enabled the hack, possibly including a SIM-swapping attack that targeted an employee’s cellular service provider, or maybe even a bribed insider. The FBI is investigating. via On the Twitter Hack - Schneier on Security  Twitter 側は今回の件に関して，被害に遭っていると思われるアカウントを一時停止した。 その後はほぼ復旧しているらしい。\nIn addition to our efforts behind the scenes, shortly after we became aware of the ongoing situation, we took preemptive measures to restrict functionality for many accounts on Twitter - this included things like preventing them from Tweeting or changing passwords. We did this to prevent the attackers from further spreading their scam as well as to prevent them from being able to take control of any additional accounts while we were investigating. We also locked accounts where a password had been recently changed out of an abundance of caution. Late on Wednesday, we were able to return Tweeting functionality to many accounts, and as of today, have restored most of the accounts that were locked pending password changes for their owners. via An update on our security incident  今回のポイントは通常の認証の問題（パスワードの複雑性や2要素認証など）をすっ飛ばして，直にシステムに入り込みやりたい放題にされてしまったことだろう。 これでは私達一般利用者は対処のしようがない。\nThis kind of attack is known as a “class break.” Class breaks are endemic to computerized systems, and they’re not something that we as users can defend against with better personal security. It didn’t matter whether individual accounts had a complicated and hard-to-remember password, or two-factor authentication. It didn’t matter whether the accounts were normally accessed via a Mac or a PC. There was literally nothing any user could do to protect against it. via On the Twitter Hack - Schneier on Security  Class Break とは，ひとつまたは関連する複数のシステム間で共通の脆弱性を持ち，その脆弱性を使って全てが一気に破壊される状況を指す。\nClass breaks are security vulnerabilities that break not just one system, but an entire class of systems. They might exploit a vulnerability in a particular operating system that allows an attacker to take remote control of every computer that runs on that system’s software. Or a vulnerability in internet-enabled digital video recorders and webcams that allows an attacker to recruit those devices into a massive botnet. Or a single vulnerability in the Twitter network that allows an attacker to take over every account. via On the Twitter Hack - Schneier on Security  Class Break については Bruce Schneier 先生のあの本にも言及がある。\n 技術が進むと標準化が進み、脆弱性が増える。同じ機能を持つ部分すべてを破壊する「クラスブレーク」が可能になるのだ（p.133） セキュリティはなぜやぶられたのかより   システムがあまりに複雑になり技術的に高度になった結果、セキュリティが劣るかもしれない新しいものを使うより、クラスブレークのおそれがあっても実績のあるものを使い続けたほうがいいことが多くなったのだ（p.158） セキュリティはなぜやぶられたのかより   画一的なシステムはクラスブレークをうけやすく、剛性が高い。多様な場合にもクラスブレークは可能だが、難しくなる。可能なかぎり多様性を選んだほうがいいのだ。画一性自体がセキュリティリスクになるが、そのリスクは、確立されていない方法を選んだ場合よりも小さいことが多い（p.176） セキュリティはなぜやぶられたのかより  不幸中の幸いというか，今回は金銭絡みの比較的穏便（笑）な詐欺だったが，可能性としてはもっと大規模なこともできた筈である。\nImagine a government using this sort of attack against another government, coordinating a series of fake tweets from hundreds of politicians and other public figures the day before a major election, to affect the outcome. Or to escalate an international dispute. Done well, it would be devastating. via On the Twitter Hack - Schneier on Security  あるいは今回は何かの前準備なのか？ この件で4年前の米国大統領選挙を連想した人は多いだろうねぇ。\nClass Break について面白い喩えがある。\nIn a sense, class breaks are not a new concept in risk management. It’s the difference between home burglaries and fires, which happen occasionally to different houses in a neighborhood over the course of the year, and floods and earthquakes, which either happen to everyone in the neighborhood or no one. Insurance companies can handle both types of risk, but they are inherently different. The increasing computerization of everything is moving us from a burglary/fire risk model to a flood/earthquake model, which a given threat either affects everyone in town or doesn’t happen at all. via Class Breaks - Schneier on Security  洪水や地震への対策と同じように Class Break への対策も中長期的なタイム・スケールで考えないといけないということだろう。 先ず，どこに問題があるか洗い出すところからだけど（笑） そういう意味で今回のケースは（ゼロトラスト・セキュリティの観点からも）教訓になる筈である。\nブックマーク  Hackers Convinced Twitter Employee to Help Them Hijack Accounts  Twitter Hackers May Have Bribed an Insider - Schneier on Security   AppleやマスクCEOなど多数のセレブTwitterアカウントが乗っ取られ、暗号通貨詐欺に悪用される - ITmedia NEWS Twitterの暗号通貨詐欺の元凶は内部ツールに不正アクセスした一人のハッカー | TechCrunch Japan Twitter社内管理ツールの不正アクセスについてまとめてみた - piyolog Twitterが30人以上の著名人アカウントDMにハッカーがアクセスしていたことを認める | TechCrunch Japan  参考図書  セキュリティはなぜやぶられたのか ブルース・シュナイアー (著), 井口 耕二 (翻訳) 日経BP 2007-02-15 単行本 4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  原書のタイトルが “Beyond Fear: Thinking Sensibly About Security in an Uncertain World” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。\nreviewed by Spiegel on 2019-02-11 (powered by PA-APIv5)\n "
    },
    {
      "title": "「門番」としての VPN",
      "section": "remark",
      "description": "専用 IP アドレスによる利便性を得る引き換えとして匿名性をある程度手放さざるを得ないわけやね。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/07/vpn-as-a-gatekeeper/",
      "published": "2020-07-20T09:28:17+00:00",
      "update": "2020-07-21T01:18:07+00:00",
      "content": "VPN とは まずは VPN についておさらい。\nVPN（Virtual Private Network）とは，物理的な回線・ネットワークの上に構築された「実質的な網 (virtual network) 」である。 この記事では VPN の機能として大まかに\n カプセル化とトンネリング 経路の暗号化 認証とアクセス制御  を挙げ，これらの要件を満たした製品・サービスを VPN と呼ぶことにする。\nVPN は目的別に以下の3つに分類できるだろう。\n 拠点間 VPN リモートアクセス バイパス型 VPN  「拠点間 VPN」は昔でいうところの「専用線」の代わりになるものだ。 「リモートアクセス」は企業イントラネットやプライベート・ネットワーク内部に外からアクセスするもので，近年では BYOD (Bring Your Own Device) とも呼ばれている。\n「バイパス型 VPN」は6年前に私が勝手につけた名前だが，他の2つと異なり，アクセスを行う利用者から見て，出口ノードがインターネットになっている点が特徴である。\n「IPAテクニカルウォッチ「公衆無線LAN利用に係る脅威と対策」」より  たとえば，上の図のように，公衆無線 LAN などの信用度の低いネットワークを経由してインターネットに接続したい場合に「バイパス型 VPN」が使える。 また異なるリージョンのコンテンツにアクセスするために使われることもある1。\n「門番」としての VPN 先程の図を見ると分かるように「バイパス型 VPN」は利用者とインターネット上のコンテンツとを仕切る「門番」として機能していることが分かる。 こうした「門番」の役割は本来は ISP 等が担っているもので，それが「バイパス型 VPN」によってシフトしてしまっている。\nしたがって「バイパス型 VPN」を運営するサービス・プロバイダが「門番」として（少なくとも ISP 並に）信用できるか否かがとても重要なのである。\nログ収集ポリシー 技術的な観点はひとまず置いておいて，「バイパス型 VPN」サービス・プロバイダの信用度を計る目安としてよく引き合いに出されるのが「ログ収集ポリシー」である。\nたとえばサービス・プロバイダが収集した利用者のアクセスログを第三者に売ったり，あるいは公的機関から提出を求められる（大抵は拒否できない）場合がある。 なので，サービス・プロバイダが利用者に関するどのような情報を持っていてそれらをどのようにして管理しているか，を知ることが大事である。 そしてその最善は「ログ収集しない」ことである。\nTorrentFreak では以下の質問を「バイパス型 VPN」のサービス・プロバイダ各社に送って\n Do you keep (or share with third parties) ANY data that would allow you to match an IP-address and a timestamp to a current or former user of your service? If so, exactly what information do you hold/share and for how long? What is the name under which your company is incorporated (+ parent companies, if applicable) and under which jurisdiction does your company operate? What tools are used to monitor and mitigate abuse of your service, including limits on concurrent connections if these are enforced? Do you use any external email providers (e.g. Google Apps), analytics, or support tools ( e.g Live support, Zendesk) that hold information provided by users? In the event you receive a DMCA takedown notice or a non-US equivalent, how are these handled? What steps would be taken in the event a court orders your company to identify an active or former user of your service? How would your company respond to a court order that requires you to log activity for a user going forward? Have these scenarios ever played out in the past? Is BitTorrent and other file-sharing traffic allowed on all servers? If not, why? Do you provide port forwarding services? Are any ports blocked? Which payment systems/providers do you use? Do you take any measures to ensure that payment details can’t be linked to account usage or IP-assignments? What is the most secure VPN connection and encryption algorithm you would recommend to your users? Do you provide tools such as “kill switches” if a connection drops and DNS/IPv6 leak protection? Do you support Dual Stack IPv4/IPv6 functionality? Are any of your VPN servers hosted by third parties? If so, what measures do you take to prevent those partners from snooping on any inbound and/or outbound traffic? Do you use your own DNS servers? In which countries are your servers physically located? Do you offer virtual locations?   via Which VPN Providers Really Take Anonymity Seriously in 2020?  その結果を公開している。\n Which VPN Providers Really Take Anonymity Seriously in 2020? * TorrentFreak  まぁ，結果はリンク先を見ていただくとして，実はこの話には続きがある。\n Most Dedicated VPN IP-addresses Are Not Anonymous * TorrentFreak  「バイパス型 VPN」で「ログ収集しない」と謳うサービス・プロバイダは，匿名性を高めるために，接続ごとに共有 IP アドレスを割り当てるのだが，どうも拡張サービスとして専用あるいは固定の IP アドレスを付与することができるそうで，この場合は（当たり前だが）完全に「収集しない」とは行かないらしい。\nBroadly speaking, we would say that the “no logs” policies of VPN providers don’t apply to dedicated IPs. That conclusion is backed up by several VPN providers we reached out to, which include VPNArea, NordVPN, CyberGhost, and Torguard.\nThese providers all have a no-logging policy for their regular VPN service, which relies on shared IP-addresses. However, they see dedicated IP-addresses as a separate and different service, which is treated differently anonymity-wise.\n via Most Dedicated VPN IP-addresses Are Not Anonymous  By connecting through a single IP-address, monitoring outfits can build up a profile of the user’s online activity. The real anonymity tradeoff, however, is that the VPN provider knows the user’s IP-address and can connect it to other account information it has on record. This sometimes includes an email address. via Most Dedicated VPN IP-addresses Are Not Anonymous  いくつかのインターネット・サービスでは，リージョンを跨いでアクセスされないよう VPN 接続の ブラックリスト おっと拒否リストを持っているそうだが，専用 IP アドレスのオプションを利用することによりこれらを回避できるようだ。\nWith a dedicated IP-address, which is often sold as an add-on, users get a unique IP-address as opposed to a shared one. This can be very convenient as it reduces annoying captchas and can bypass regular VPN blacklists. via Most Dedicated VPN IP-addresses Are Not Anonymous  こうした利便性を得る引き換え (tradeoff) として匿名性をある程度手放さざるを得ないわけやね。\nF-Secure FREEDOME は止めとけ？ ところで，先程の Which VPN Providers Really Take Anonymity Seriously in 2020? の中に私が Android 端末で愛用している F-Secure 社の FREEDOME が見当たらなかったので軽くググってみたが，どうも最近は FREEDOME は忌避されているらしい。\n Read This F-Secure Freedome Review and Test Before You Buy It!  FREEDOME はログ収集を行ってると言われていて，そこが嫌われている原因のひとつかも（笑）\nこれについては，一応 F-Secure 社側の釈明もあるようで\n ほとんどのVPNと同様に、FREEDOMEは接続ログを作成します。これらのログは、サービスの提供と改善のために使用されます。当社のプライバシーポリシーに記載されているように、サービスを提供し、データ転送をクリーンな状態に保つだけの目的で通信トラフィックを分析します。トラフィックは仮名化されていますので、私たちにはどれがあなたのトラフィックかを知ることはできません。FREEDOMEはトラフィックログを作成しません。 VPNサービス:プロバイダのログ収集以外に考えるべきことより  というわけで，接続ログはあるけどトラフィックログは作らないので，ログから（閲覧・購入履歴，メッセージなどの）センシティブ・データを抜いたりできないよー，ということらしい。\nとは言え，昔に比べて FREEDOME の優位性が薄れているのも確かなんだよなぁ。 まぁ，来年3月まで FREEDOME の契約が残ってるので，それまでに NordVPN とか他のサービスに乗り換えるべきかじっくり考えてみるとしよう。\n【2020-07-21 追記】 無料（Free）の VPN サービスは止めとけ！ 日本語圏でも言及されているようなので追記しておく。\n “Zero logs” VPN exposes millions of logs including user passwords, claims data is anonymous  話題になっている UFO VPN およびその系列のサービスは “free” であることが売りである。 ここでいう “free” は（「自由なソフトウェア」ではなく）「無料のビール」のほうの “free” を指している。 “Free” だからといって VPN プロトコルも暗号スイートも明示しないサービスを信用しろというのは無理な話。\n「無料」のサービスというのは無料なりの理由があって，「監視資本主義」の時代に於いて，大抵の場合は利用者の行動履歴と引き換えになっている。 もちろん人によっては自身の行動履歴と引き換えにしても受けたいサービスはあるものなので（Gmail とか Instagram とか Twitter とかw）一概にその「引き換え」自体が悪いとは言わないが，少なくとも「門番」として機能する「バイパス型 VPN」においては利用者もセキュリティやプライバシーに細心の注意を払うべきである。\nまぁ，公表しているポリシーを偽るのは論外だけどな（笑）\nぶっちゃけ，年間数千円で身元の確かな「バイパス型 VPN」サービスが買えるのなら安いものである。 いまどき気休めでしかない「malware 対策ソフト」にお金を払う余裕があるのなら2，こういったサービスにこそ投資すべきだと思うよ，おぢさんは。\n最後に老婆心ながら。 「バイパス型 VPN」が「門番」として機能する以上，国や地域によってはサービスが機能しなかったり稼働しているサービス自体がプライバシー・リスクを孕んでいることを考慮したほうがいいだろう（婉曲表現）。\n【おまけ】 NSA による VPN セキュリティ管理の5箇条 米国 NSA から VPN セキュリティに関する以下のドキュメントが公開されている。 どちらかと言うと組織内のネットワーク管理者あるいはサービス・プロバイダ側の話かな。\n ConfiguringIPsecVirtual Private Networ  ConfiguringIPsecVirtual Private Networ  （要約）  これによると，ネットワーク管理者は VPN の運営について以下の5つを定期的に確認・実行する必要がある，と謳っている。\n Reduce the VPN gateway attack surface Verify that cryptographic algorithms are Committee on National Security Systems Policy (CNSSP) 15-compliant Avoid using default VPN settings Remove unused or non-compliant cryptography suites Apply vendor-provided updates (i.e. patches) for VPN gateways and client   via ConfiguringIPsecVirtual Private Networ  詳しい内容はドキュメントを参照のこと。\nまぁ，当たり前の話なんだけど Avoid using default VPN settings はちょっと面白かったので。 そんなに既定の設定はあかんのか？\nブックマーク   Best VPN Services For Anonymous Torrenting? * TorrentFreak\n  Mozilla’s VPN launches out of beta on Windows and Android - The Verge\n  NSA on Securing VPNs - Schneier on Security\n  テレワークを行う際のセキュリティ上の注意事項：IPA 独立行政法人 情報処理推進機構\n  監視をコントロールする\n  参考図書  超監視社会 ブルース・シュナイアー (著), 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) Kindle版 B01MZGVHOA (ASIN)  実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by PA-APIv5)\n   つか，元々の「バイパス型 VPN」の動機は他リージョンのコンテンツにアクセスするためなのだが（笑） \u0026#x21a9;\u0026#xfe0e;\n 「malware 対策ソフト」が不要と言ってるわけじゃないよ，念のため。たとえば Windows は自前で malware 検知の仕組みを持ってるし Linux はオープンソース製品を組み込めばよい（そういや Microsoft も Linux 版の製品を出してたな）。アプリストアの仕組みを持っているプラットフォームではアプリストア側で malware 検知を行っている。サーバ管理でもない限り通常はこれで十分間に合う。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2020-07-19 のブックマーク",
      "section": "bookmarks",
      "description": "「はやぶさ2、12月6日に地球帰還 『りゅうぐう』の試料を豪へ落下」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/07/19-bookmarks/",
      "published": "2020-07-19T03:13:45+00:00",
      "update": "2020-07-22T01:44:29+00:00",
      "content": "リリース情報  Native JS Bundler, Open API Support, Inline Partials | Hugo : Hugo 0.74 リリース  Release v0.74.0 · gohugoio/hugo · GitHub Release v0.74.1 · gohugoio/hugo · GitHub Release v0.74.2 · gohugoio/hugo · GitHub Hugo 0.74.2: A couple of Bug Fixes | Hugo   Release June 2020 Recovery · microsoft/vscode · GitHub  Release June 2020 Recovery 2 · microsoft/vscode · GitHub   Release 1.49.0 · atom/atom · GitHub Announcing Rust 1.45.0 | Rust Blog 「Thunderbird 78」が正式リリース ～v68系統に代わる新版、アドオン互換性に注意 - 窓の杜  バベルのインターネット  MIT Tech Review: 「インターネットを作り直す」ディフィニティが掲げる理想と野望  セキュリティ＆プライバシー関連  Web会議サービスを使用する際のセキュリティ上の注意事項：IPA 独立行政法人 情報処理推進機構 米国が国家安全リスクを理由にTikTokに続きWeChatの使用禁止を検討 | TechCrunch Japan crates.io security advisory | Rust Blog Google、データを暗号化したまま処理する仮想マシン「Confidentail VM」発表。Google Cloud Next \u0026lsquo;20:OnAir － Publickey NSA on Securing VPNs - Schneier on Security Mozilla’s VPN launches out of beta on Windows and Android - The Verge  Mozilla、VPNサービスを正式提供\u0026ndash;有料サービスで収益の確保を狙う - ZDNet Japan   Hackers Convinced Twitter Employee to Help Them Hijack Accounts  Twitter Hackers May Have Bribed an Insider - Schneier on Security AppleやマスクCEOなど多数のセレブTwitterアカウントが乗っ取られ、暗号通貨詐欺に悪用される - ITmedia NEWS Twitterの暗号通貨詐欺の元凶は内部ツールに不正アクセスした一人のハッカー | TechCrunch Japan   徳丸浩氏監修の「ウェブ・セキュリティ基礎試験」が開始：CodeZine（コードジン） Android security vulnerabilities differ by country, say researchers 日本郵便のe転居を悪用したストーカー事件についてまとめてみた - piyolog CloudflareのDNSがダウンし、多くのウェブサイトが一時接続不能に | TechCrunch Japan  天文関連  京大せいめい望遠鏡でスーパーフレアの検出に成功―生命居住可能な惑星への影響の理解に向けて― | 国立天文台(NAOJ) Parker Solar Probe Prepares for Third Venus Flyby – Parker Solar Probe JAXA | 小惑星探査機「はやぶさ２」のカプセル帰還に関する豪州宇宙庁（ASA）との共同声明の発表について  2020年7月16日ニュース「はやぶさ2、12月6日に地球帰還 『りゅうぐう』の試料を豪へ落下」 | SciencePortal   すばる望遠鏡と「ニュー・ホライズンズ」の共同観測で探る太陽系外縁部 | トピックス・お知らせ | すばる望遠鏡  知財関連  Crunchyroll Downloader Tool Nuked Following Copyright Complaint * TorrentFreak  その他  Announcing Creative Commons’ New CEO, Catherine Stihler - Creative Commons ASCII.jp：Windows 10のWSL2からGPUが使えるようになった (1/2) Microsoftが「PHP」サポートを縮小 ～「PHP 8.0」バイナリは公式提供せず - 窓の杜 マイクロソフトが「りんな」を含む中国製チャットボットXiaoiceをスピンアウト | TechCrunch Japan 「Couchbase Cloud」正式リリース、AWS上でDBaaSとして利用可能に。AzureやGCP上でも提供予定 － Publickey 【プレスリリース】相変化材料ゲルマニウム・アンチモン・テルル(GeSb2Te4)化合物中に、質量ゼロの電子(ディラック電子)を世界で初めて発見～グラフェンに代わる次世代デバイス材料として期待～ | 日本の研究.com 米国防省、KubernetesをF-16ジェット戦闘機に載せてみた － Publickey Google、BigQueryをAWSやAzureなどマルチクラウド展開へ、「BigQuery Omni」発表。Google Cloud Next \u0026lsquo;20:OnAir － Publickey Google Chromeに挑戦するThe Browser Companyはブラウザー界のテスラを目指す | TechCrunch Japan AFKアリーナ攻略wiki | AppMedia Googleが「Open Usage Commons」設立。オープンソースの商標を自由かつ公正に使用するための支援団体 － Publickey トヨタ自動車がCloud Native Computing Foundationに加盟 － Publickey 米国の大多数のゲーム開発者はリモートワークに移行中 | TechCrunch Japan マイクロソフト、「WinUI 3 Preview 2」発表\u0026ndash;ロードマップもアップデート - ZDNet Japan レーザー照射による水中Wi-Fiシステムをサウジの研究チームが開発 | TechCrunch Japan Slack、管理者向けに複数の新ツール\u0026ndash;認定プログラムなど - ZDNet Japan Amazon Comprehend を用いて本を読まずに読書感想文を書いてみる - builders.flash☆ - 変化を求めるデベロッパーを応援するウェブマガジン | AWS Red Hat、Kubernetesの拡張ディストリビューション「OKD 4」正式版リリースを発表 － Publickey Creating a Wireshark dissector in Lua - part 1 (the basics) | Mika’s tech blog  ブログ: Luaで、Wiresharkのディセクタを作成する - パート1(基本)   2020年7月17日ニュース「英語のLとR、聞き分け能力は瞳孔反応で分かる」 | SciencePortal  "
    }
  ]
}
