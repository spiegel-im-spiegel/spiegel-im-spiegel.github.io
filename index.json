{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "Firefox Preview を試してみた",
      "section": "remark",
      "description": "ここは生暖かく「今後に期待」と見守っておこう。 ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/firefox-preview-with-android/",
      "published": "2019-06-28T13:07:04+00:00",
      "update": "2019-06-28T13:10:19+00:00",
      "content": "Android に Firefox Preview なるものが登場したらしい。\n Android版「Firefox」のテスト用プレビューが公開--高速化、プライバシー強化 - ZDNet Japan Mozillaが最大2倍高速なAndroid版Firefoxをプレビュー | TechCrunch Japan  さっそく導入してみた。 こんな感じ。\n 他の普段使いのブラウザと区別するためにダークモードにしている。 設定画面はこんな感じ。\n 「トラッキング防止」は最初からオンになっているが検索エンジンを DuckDuckGo にできないという相変わらずのクソ野郎ぶりである。\nちなみにパソコン用の Firefox Quantum ではトラッキング防止機能は2段階あって\n Firefox 67 がリリースされた  レベル2に設定するとこのページのフィードバックに使っている Disqus もブロックされるくらい強力に効くのだが Firefox Preview ではそこまでに至らないないようだ。 この辺り，何とも中途半端な感じで Mozilla はユーザのプライバシーを重視していないということが今回の出来を見ても分かろうというものである（それでも Chrome よりはマシというのがにんともかんとも）。\nはっきり言って GeckoView を使ったプライバシー重視のブラウザを使いたいなら Firefox Focus を使うことを強くお勧めする1。 一般のユーザが Firefox Preview を使うメリットは（現時点では）万にひとつもない。\n文字通りの preview 版だとしても，同じブラウザエンジンを使った先行アプリがあるのだから，せめて同程度のセキュリティ・プライバシー設定が可能な程度の機能は実装してほしかった。 どうせ iOS/iPadOS 版は出ない（出せない）だろうから Android 特化でチューニングすればいい。\nまぁ，ここは生暖かく「今後に期待」と見守っておこう。 とりあえずアプリは削除だな。\n Firefox Focus の検索エンジンにも DuckDuckGo は入っていないが，追加して切り換えることはできる。 [return]   "
    },
    {
      "title": "情報の熱的死",
      "section": "remark",
      "description": "つまり「ペーパーレス」ってのは単に物理的な「紙」を排除することではなく「紙」の概念をシステムから捨て去ることにある。そうすることで初めて情報は循環を始め「生き」てくるのである。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/heat-death-of-information/",
      "published": "2019-06-26T10:42:38+00:00",
      "update": "2019-06-26T10:43:56+00:00",
      "content": " 昨日，仕事帰りのバスの中でいつものようにネットサーフィン（古語）してたら\nプロのライターは、みんなエディターで原稿を書いてるのだと思ってたら、Word派が主流で、むしろテキストで送ると編集者に「チッ、老害が！」と舌打ちされながらWordにコピペされているのだと知ったのが昨夜のハイライト。\nまぁ、でも、おれはTeraPad使い続けるけどな！\n\u0026mdash; 安田理央＠新刊「日本エロ本全史」7/2発売 (@rioysd) 2019年6月22日  とかいう文章が目に入って，久しぶりに「とひょーん！」ってなった（笑） だって私，少し前のブログ記事で\n  もはや Microsoft Office は個人ユーザが使うものではないだろう。あれはお役所や企業等のレガシー環境で仕方なく使う道具である。  via スプレッド・シートでフィボナッチ数列を列挙する  って書いちまったのですよ。 出版業界こえー。 まぁ私が知ってる職場なんてごく狭い範囲なので「想像力の地平線」の向こう側のことなどまさに「想像を絶する」わけだけど。\n私が若い頃は「完成図書」という概念があって，仕様書とか設計書とか議事録とか場合によってはソースコードとかも全部「紙」に打ち出して客先に提出していた。 「完成図書」の提出を以って「納品」と見なすわけだ。 だから仕様書や設計書をワープロやスプレッドシートといった Office ツールで作成することは当たり前だった。 何故なら「紙に出力する」ことが最終目的なのだから。\nでもその「完成図書」はプロジェクトが終われば顧みられることはない。 文字通りの「紙くず」として法令で決められた期間まで死蔵され，期間が終われば廃棄される。\n昔，あるプロジェクトで要件定義のドキュメンテーションを全て Word 上でやらされたことがあるが，ドキュメントのレビューも Word の校正機能を使うんだよね。 あれは酷い作業だった。 Word の校正機能は殆ど完成した文書に対して行うなら効果的だが，要件定義の議論中に，内容が drastic に変わっていく状態で校正機能を使うと本当にカオスになってしまう。\nで，ワケワカメになった Word 文書をどうするのかというと，いったん校正機能を切って真っサラな状態にしてしまう。 はい，これで今までの作業はなかったことにされました。 何のためにレビュー情報を埋め込んだのやら。 これなら紙に手書きで書くのと何ら変わらないではないか。\n「ペーパーレス」を実現しようとして単に「紙」をエミュレーションするだけのシステムとか，どんだけ間抜けなのか。 バージョン管理ツールや Wiki や Issue Tracker を使い慣れている身としては果てしなく無駄な作業にしか見えなかった。\nなんでこんなことを長々と書いているかというと，まさに今の私の仕事が「紙」をベースにしたワークフローだからだ。\nもうちょびっとだけ具体的に言うと，まずワークフローの起点が「紙の出力」になっている。 そして作業を進めるごとにその「紙」に手書きで書き込みして次の作業者に渡していく。 作業が完了したら，その「紙」は一定期間保管した後に廃棄（溶解処分）される，紙の上の貴重な情報ごと。\n最初このワークフローを目の当たりにしたときは目が点になった。 なんでこんな非効率なことをしてるんだろう，と。 でもよく聞くと，このワークフローはシステムの「例外処理」らしい。 自動化できない部分は人力で行わざるを得ないのだが，その際の Issue Ticket が「紙」になっているわけだ。\nでも紙の上の情報は最終的に捨てられる。 ワークフローの実行によって蓄積される知見は作業者の頭の中にだけ残るので共有もメイン・システムへのフィードバックもし辛い状態になっている1。 つまり作業者個人の「職人技」になってしまうのだ。\nゲーム理論の命題のひとつに「囚人のジレンマ」というのがある。 内容は適当にググっていただくとして「囚人のジレンマ」は「1回きりのゲーム」と「繰り返しのあるゲーム」では戦略が異なっていて，「繰り返しのあるゲーム」では以前のゲームの結果を学習して利用したほうがゲーム全体としては（学習しない）相手より優位に立てることが分かっている。\nビジネスで言うところの「PDCA サイクル」というのはまさに「繰り返しのある『囚人のジレンマ』ゲーム」である。 そのためには「ゲーム」で得られた情報を最大限に利用しなければならない。 捨てていい情報なんかないのだ。\n紙の上の情報ってのは，そこから先のない「行き止まり」であり，使い道のない情報が充填されるだけの「情報の熱的死」とでも言うべき状態である（喩えが雑だなぁ）。 つまり「ペーパーレス」ってのは単に物理的な「紙」を排除することではなく「紙」の概念をシステムから捨て去ることにある。 そうすることで初めて情報は循環を始め「生き」てくるのである。\nブックマーク  プロのライターの原稿執筆環境、秀丸エディタ、GitHub、そしてHagexさん - YAMDAS現更新履歴 : 今回の記事の元ネタ   紙に書かれた情報ならスキャンすればいいぢゃんと言う人もいるかもしれないが，紙の上の手書きの情報は文字だけではなく書かれた位置や筆跡やペンの色などによって「文脈」を構成しているため， OCR 等で文字情報だけを符号化しても本当に欲しい情報は取れないのだ。かといって画像を残しても，それは単に「紙」のエミュレーションでしかなく，再利用できない。 [return]   "
    },
    {
      "title": "午前3時のケータイ・トーク",
      "section": "remark",
      "description": "“It’s 3 a.m. Do you know what your iPhone is doing?”",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/its-middle-night-do-you-know-who-your-iphone-is-talking/",
      "published": "2019-06-26T05:53:22+00:00",
      "update": "2019-06-26T07:00:09+00:00",
      "content": " It’s 3 a.m. Do you know what your iPhone is doing? ワシントン・ポストが面白い記事を掲載しているらしい。\n Apple promises privacy, but iPhone apps share your data with trackers, ad companies and research firms - The Washington Post  残念なことに私はワシントン・ポストの記事は読めない（お金を払ってない）ので，こちらの記事で代替することにする。\n It’s the middle of the night. Do you know who your iPhone is talking to?  記事の内容はユーザが寝ている深夜にスマホのアプリがプライバシー情報を含む個人データを「報告」しているというものである（それ以外の Apple 礼賛文章は華麗にスルーする）。\nOn a recent Monday night, a dozen marketing companies, research firms and other personal data guzzlers got reports from my iPhone. At 11:43 p.m., a company called Amplitude learned my phone number, email and exact location. At 3:58 a.m., another called Appboy got a digital fingerprint of my phone. At 6:25 a.m., a tracker called Demdex received a way to identify my phone and sent back a list of other trackers to pair up with. via It’s the middle of the night. Do you know who your iPhone is talking to?  こうした「報告」を行う iPhone アプリのいくつかは特定されていて\nIPhone apps I discovered tracking me by passing information to third parties — just while I was asleep — include Microsoft OneDrive, Intuit’s Mint, Nike, Spotify, The Washington Post and IBM’s the Weather Channel. One app, the crime-alert service Citizen, shared personally identifiable information in violation of its published privacy policy. via It’s the middle of the night. Do you know who your iPhone is talking to?  と書かれている。 ワシントン・ポストもか（笑） もちろんこれらの例は網羅的ではないだろうが，網羅的に調べるのは骨が折れるだろうな。\nそしてこれは iPhone だけの問題ではない，当然ながら。\nYes, trackers are a problem on phones running Google’s Android, too. Google won’t even let Disconnect’s tracker-protection software into its Play Store. (Google’s rules prohibit apps that might interfere with another app displaying ads.) via It’s the middle of the night. Do you know who your iPhone is talking to?  そういえば先日，ケータイが異常動作を起こしたときに簡単なネットワーク監視ツールを入れて調べてみたのだが，相手先を調べるのも面倒なほどのトラフィックがあり「だめだこりゃ」と思ったものである。 あれを調査するのはシロートでは無理。\n私は先日の件を教訓としてケータイを使わないときは積極的に節電モードに切り替えるようにした1。 私のケータイは節電モードにするとデータ通信が一切シャットダウンされるためメールも取れない状態になるが（電話はつながる），どうせ日中や深夜に緊急メールをよこすような人は（今は）いないので無問題。 あとは FREEDOME でトラッキング・コードをブロックすれば多少はマシかな。 マシになるといいなぁ。\nCambridge Analytica was just the beginning 1年ほど前に\n 確かに Facebook は Campbridge Analytica の件以来さまざまな点で批判の矢面に立っているが Facebook に論点を絞るのは問題の矮小化といえる。 もしメディアが意図的に矮小化を行っているのなら，これこそがフィルターバブルの典型例と言えるだろう。 via 「情報弱者」を再々定義する  と書いたが，今回紹介した記事でも\nPart of Jackson’s objection to trackers is that many feed the personal data economy, used to target us for marketing and political messaging. Facebook’s fiascos have made us all more aware of how our data can be passed along, stolen and misused — but Cambridge Analytica was just the beginning. via It’s the middle of the night. Do you know who your iPhone is talking to?  と書かれており，よーやくメディアもそこに至ったかと感慨深い。 まぁ周回遅れの日本は今だに GAFA 礼賛だそうだが（笑）\nブックマーク  iPhone Apps Surreptitiously Communicated with Unknown Servers - Schneier on Security\n 搾取と狂狷\n  参考図書  超監視社会 ブルース・シュナイアー 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) eBooks Kindle版 ASIN: B01MZGVHOA  実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by amazon-item 0.2.1)\n  もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo 達人出版会 2017-12-25 評価\u0026nbsp;       WirelessWire News 連載の書籍化。感想はこちら\nreviewed by Spiegel on 2018-12-31\n  でもたまにケータイを点けたまま値落ちしてることがあるんだよなぁ。 [return]   "
    },
    {
      "title": "音楽プレイヤー Lollypop を試す",
      "section": "remark",
      "description": "私の場合は持ってるアルバムの中からテキトーなのを見繕って鳴らしてくれれば機能としては必要十分。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/lollypop-music-player/",
      "published": "2019-06-26T03:00:37+00:00",
      "update": "2019-06-26T03:01:14+00:00",
      "content": "いま使ってる Ubuntu の音楽プレイヤーの既定は Rhythmbox なんだけど，イマイチ使い方が分からないんだよね。 私の場合は持ってるアルバム1 の中からテキトーなのを見繕って鳴らしてくれれば機能としては必要十分なので，もっとシンプルな GUI はないのか，と思ってたら Lollypop がよさげである。\nLollypop は GNOME 用の GUI アプリケーションで，もちろん Ubuntu でも使える。 それどころか Ubuntu 既定のアプリケーションを Rhythmbox から Lollypop へ替えようかという議論まであったらしい。\n Ubuntu 18.04 その37 - デフォルトのミュージックプレーヤーをLollypopに変更する提案 - kledgeb  現在 Ubuntu 向けの Lollypop パッケージは PPA (Personal Package Archive) で提供されている。\n Lollypop : Cédric Bellegarde  Lollypop 用の APT リポジトリの追加手順は以下の通り。\n$ sudo add-apt-repository ppa:gnumdk/lollypop $ sudo apt update これで Lollypop がインストール可能になった。\n$ apt show lollypop Package: lollypop Version: 1.1.1-1~disco Priority: extra Section: gnome Maintainer: cedric.bellegarde@adishatz.org ここまで来れば APT コマンド一発である。\n$ sudo apt install lollypop これでアイコンがメニューに追加されたので起動してみる。\n おおっ，ちゃんと日本語で表示されるぢゃん。 設定や操作も直感的ですぐ分かった。\nよーし，うむうむ，よーし。\n 賢者の孫EDﾃｰﾏ｢圧倒的Vivid Days｣ 吉七味。 (メインアーティスト) avex pictures (Release 2019-06-19) Digital Music Album MP3 ダウンロード ASIN: B07STKKM3D 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  アニメ「賢者の孫」の ED 曲を含む。ヘヴィ・ローテーション中。\nreviewed by Spiegel on 2019-06-26 (powered by amazon-item 0.2.1)\n  CD は学生の頃に買っていたものも全部含めて MP3 に切り刻んで NAS に置いている。 [return]   "
    },
    {
      "title": "20周年記念！",
      "section": "remark",
      "description": "もうしばらくはこの辺境で細々と更新を続けていくと思う。どぞ，よろしく。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/20th-years-anniversary/",
      "published": "2019-06-23T10:17:40+00:00",
      "update": "2019-06-23T10:18:29+00:00",
      "content": " 本日2019年6月23日で最初の日記を書き始めてから丁度20年になった。\n せち日記 - 1999年 目次  20世紀の大昔で言うところの「ホームページ」はもっと前からやってたんだけどね。 本格的にネットで活動を始めたのが1999年からということで。\n元々は SETI@home のグループ運営等の余興で日記を始めたのだが，だんだん SETI@home 活動から外れていったので，放浪の後に今のサイトに腰を落ち着けたのが15年前の2004年。 それからもチマチマ活動を続けて気がついたら20年も経ってたですよ。 歳をとるわけだなぁ。\nせっかく20周年なんだし何かしようと思ったのだが，特に思いつくこともなく今日に至る（笑） まぁ，もうしばらくはこの辺境で細々と更新を続けていくと思う。 どぞ，よろしく。\nそうそう，本家サイトについては Hugo ベースでのリニューアルを予定している。 2019年中にはできるといいなぁ。\nブックマーク  ひょっとして10周年か！？ — Baldanders.info Baldanders.info 10周年だった！ — Baldanders.info  "
    },
    {
      "title": "2019-06-23 のブックマーク",
      "section": "bookmarks",
      "description": "「Fake News and Pandemics」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/06/23-bookmarks/",
      "published": "2019-06-23T08:04:38+00:00",
      "update": "2019-06-23T08:07:33+00:00",
      "content": " セキュリティ＆プライバシー関連  ASCII.jp：WPA3の脆弱性を悪用したWi-Fiパスワード盗難 被害を防ぐ手立てとは Coincheck不正送金事案で検出したマルウェアについてまとめてみた - piyolog カレンダー機能を悪用したデータ盗難に注意--「Googleカレンダー」も標的に - ZDNet Japan Firefox の脆弱性 (CVE-2019-11707) に関する注意喚起  ゼロデイ脆弱性を修正した「Firefox 67.0.3」「Firefox ESR 60.7.1」が公開 - 窓の杜 「Firefox」に再びゼロデイ脆弱性 ～サンドボックスを迂回、仮想通貨取引所を狙った攻撃に悪用される - 窓の杜 「Thunderbird」v60.7.2が公開 ～「Firefox」で悪用されているゼロデイ脆弱性に対処 - 窓の杜  恐怖に基づくサイバーセキュリティ戦略は避けるべき--英NCSC責任者 - ZDNet Japan Hacking Hardware Security Modules - Schneier on Security Google confirms that advanced backdoor came preinstalled on Android devices | Ars Technica  Backdoor Built into Android Firmware - Schneier on Security   天文関連  プレスリリース - アルマ望遠鏡、観測史上最遠の合体銀河の証拠をとらえた - アルマ望遠鏡  アルマ望遠鏡、観測史上最遠の合体銀河の証拠をとらえた | 国立天文台(NAOJ)  American Astronomical Society to Acquire Sky \u0026amp; Telescope - Sky \u0026amp; Telescope  AAS to Acquire Sky \u0026amp; Telescope | American Astronomical Society  マウナケアでのTMT現地着工を認める通知が出されました | 国立天文台TMT推進室  知財関連 Linux または Ubuntu に関する話題  Ubuntu 19.10 その11 - 32bit版（i386/x86）の提供終了へ・32bit版提供中止に伴うFAQ - kledgeb Ubuntu 19.04 その74 - SACK PanicとTCP DoS・Ubuntuの対応方針 - kledgeb Ubuntu 19.10 その12 - APT 1.9.0の採用とテストの呼び掛け・API/ABIの変更 - kledgeb Ubuntu 19.04 その73 - Snapストアからインストール可能なSnapアプリ12選（2019年5月版） - kledgeb Ubuntu 19.10 その13 - セキュリティー強化オプションを追加する作業 - kledgeb  その他  CERNがマイクロソフト製品をオープンソースソフトウェアに置き換える活動を推進 - ZDNet Japan 〈２〉CCW の発展の歴史 ：その成立からLAWS の議論まで (特集 : 最先端技術と安全保障)-広島市立大学機関リポジトリ GitHubが「Pull Panda」買収を発表。プルリクのSlackリマインダーやレビュアーの公平な割り当てなど、全機能が無料に － Publickey 「Envoy Mobile」登場。モバイルアプリケーションにもプロキシによる可観測性、多様なネットワーク機能、トラフィック管理などを提供 － Publickey 2019年に中国は世界ゲーム市場トップの座を米国に明け渡す | TechCrunch Japan NASAの超音速ジェット機にはフロントウィンドウの場所に4Kディスプレイを設置 | TechCrunch Japan 物の裏側をレーザー光の反射から像として求めるカーネギーメロン大らの研究 | TechCrunch Japan マイクロソフト、Javaの開発環境をまるごとインストールしてくれる「Visual Studio Code Installer for Java」公開。VSCode、JDK、テストランナー、デバッガ、依存関係ビューア、IntelliCodeなど － Publickey CERNがマイクロソフト製品をオープンソースソフトウェアに置き換える活動を推進 - ZDNet Japan VMware CloudでAmazon S3互換オブジェクトストレージを実現する拡張機能を発表。VMwareとCloudianが共同開発 － Publickey Fake News and Pandemics - Schneier on Security  これからの四年間における私の優先事項（My Priorities for the Next Four Years 日本語訳） : これも併せて読むと面白い  ドライバー支援システムができること/できないことをドライバーは理解していない | TechCrunch Japan Google PayのPayPal統合がオンライン販売業者に拡張 | TechCrunch Japan  "
    },
    {
      "title": "スプレッド・シートでフィボナッチ数列を列挙する",
      "section": "remark",
      "description": "というわけで（大きな有効桁数が要件となる）数値計算をスプレッドシートで行うのはオススメできない。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/fibonacci-numbers/",
      "published": "2019-06-23T06:57:34+00:00",
      "update": "2019-06-25T12:59:17+00:00",
      "content": " あっ，ブログネタ見っけ（笑）\n LibreOffice CalcとExcelの計算結果誤差をみなさんで検証していただいた結果まとめ - Togetter  はっきり言って前半の議論以下の脊髄反射的やり取りは鼻糞ほどの参考にもならないので，最後に紹介されているリンクを読むことを強くオススメする。\n Excelの演算誤差  いや，これ読んでて大昔に特定用途のバンドパスフィルタのシミュレーションを Excel で書かされたことを思い出したよ。 トラウマになるほどではなかったが，あれはなかなか酷い仕事だった（笑）\n【事前準備】 フィボナッチ数列の一般項 閑話休題 (それはさておき) ，問題を整理しよう。\nまずはフィボナッチ数列の定義から。 $n$ 番目のフィボナッチ数を $F_n$ で表すと\n\\begin{align*} F_0 \u0026= 0 \\\\ F_1 \u0026= 1 \\\\ F_{n+2} \u0026= F_n + F_{n+1} \u0026 (n = 0,1,2,3 \\cdots) \\end{align*}  で定義できる。 ちなみに，この定義を素朴に Go 言語コードにしたのが以下。\npackage main import \u0026#34;fmt\u0026#34; var fibonacciNumbers = make(map[int64]int64) func fibonacciNumber(n int64) int64 { switch n { case 0: return 0 case 1: return 1 default: if fn, ok := fibonacciNumbers[n]; ok { return fn } fn := fibonacciNumber(n-2) + fibonacciNumber(n-1) fibonacciNumbers[n] = fn return fn } } func main() { fmt.Println(\u0026#34;| $n$ | $F_n$ |\u0026#34;) fmt.Println(\u0026#34;| ---:| ---:|\u0026#34;) for n := int64(1); n \u0026lt;= 75; n++ { fmt.Printf(\u0026#34;| %d | %d |\\n\u0026#34;, n, fibonacciNumber(n)) } } このコードを実行して1番目から75番目までのフィボナッチ数列をつくりリファレンス値としよう。 一部を挙げておく。\n   $n$ $F_n$     1 1   2 1   3 2   4 3   5 5   ... ...   69 117669030460994   70 190392490709135   71 308061521170129   72 498454011879264   73 806515533049393   74 1304969544928657   75 2111485077978050    ところで定義で挙げた数式は「漸化式」と呼ばれるものだが，一般項で表すこともできる。 面倒なので結果だけ Wikipedia から引用してしまおう。 すなわち\n\\begin{align*} \\varphi \u0026= \\frac{1+\\sqrt{5}}{2} \\\\ \\psi \u0026= \\frac{1-\\sqrt{5}}{2} = 1 - \\varphi \\end{align*}  とするなら $F_n$ は\n\\begin{align*} F_n \u0026= \\frac{\\varphi^n - \\psi^n}{\\varphi - \\psi} = \\frac{\\varphi^n - \\psi^n}{\\sqrt{5}} \u0026 (n = 0,1,2,3 \\cdots) \\end{align*}  と書ける1。 これをGo 言語で書くとこんな感じ。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) func main() { fmt.Println(\u0026#34;| $n$ | $\\\\varphi^n$ | $\\\\psi^n$ | $F_n$ |\u0026#34;) fmt.Println(\u0026#34;| ---:| ---:| ---:| ---:|\u0026#34;) r5 := math.Sqrt(5) phi := (1 + math.Sqrt(5)) / 2 psi := 1 - phi for n := int64(1); n \u0026lt;= 75; n++ { phin := math.Pow(phi, float64(n)) psin := math.Pow(psi, float64(n)) f := (phin - psin) / r5 fmt.Printf(\u0026#34;| %d | %.15f | %.15f | %.15f |\\n\u0026#34;, n, phin, psin, f) } } 結果も載せておこう。\n   $n$ $\\varphi^n$ $\\psi^n$ $F_n$     1 1.618033988749895 -0.618033988749895 1.000000000000000   2 2.618033988749895 0.381966011250105 1.000000000000000   3 4.236067977499790 -0.236067977499790 2.000000000000000   4 6.854101966249685 0.145898033750315 3.000000000000000   5 11.090169943749475 -0.090169943749474 5.000000000000000   ... ... ... ...   69 263115950957275.968750000000000 -0.000000000000004 117669030460993.984375000000000   70 425730551631122.937500000000000 0.000000000000002 190392490709134.968750000000000   71 688846502588399.000000000000000 -0.000000000000001 308061521170129.000000000000000   72 1114577054219521.750000000000000 0.000000000000001 498454011879263.875000000000000   73 1803423556807920.750000000000000 -0.000000000000001 806515533049392.875000000000000   74 2918000611027442.500000000000000 0.000000000000000 1304969544928656.750000000000000   75 4721424167835363.000000000000000 -0.000000000000000 2111485077978049.500000000000000    $\\psi^n$ の値が小さすぎてガッツリ情報落ちしているが $F_n$ として必要なのは整数部分のみなので小数点以下を丸めた値が正しければ無問題。 実際のところ\n\\begin{align*} \\left| \\frac{\\psi^n}{\\sqrt{5}} \\right| \u0026\\lt \\frac{1}{2} \u0026 (n = 0,1,2,3 \\cdots) \\end{align*}  と言えるので\n\\begin{align*} F_n \u0026= \\left[ \\frac{\\varphi^n}{\\sqrt{5}} \\right] = \\left\\lfloor \\frac{\\varphi^n}{\\sqrt{5}} + \\frac{1}{2} \\right\\rfloor \u0026 (n = 0,1,2,3 \\cdots) \\end{align*}  でも十分いけるのだ。\nていうかね。 $\\sqrt{5}$ を無理やり浮動小数点数に展開して計算してるんだから誤差が出て当然なのであり，それが不可視化されている各スプレッドシートのほうが相当怪しげな内部処理をしていると言わざるを得ない。\nスプレッドシートでフィボナッチ数列の一般項を計算する さて，ようやく本題。\nつまるところ，この一般項を使ってスプレッドシートでフィボナッチ数列を計算させたらどうなるか，というのが今回のお題だ。\n まずA列に 1, 2, 3, 4,... と整数値を入れておく B列には式 =((1+SQRT(5))/2)^A1 (1行目の場合) をセットする（$\\varphi^n$ 相当） C列には式 =((1-SQRT(5))/2)^A1 (1行目の場合) をセットする（$\\psi^n$ 相当） D列には式 =((((1+SQRT(5))/2)^A1)-(((1-SQRT(5))/2)^A1))/SQRT(5) (1行目の場合) をセットする  これで B列 → C列 → D列 と計算過程を追うことができる。\nまずは LibreOffice Calc で実行してみた。 ちなみにバージョン6.2系である。\n fibonacci-numbers.ods  結果の一部，70番目以降のみ挙げておく。\n   $n$ $\\varphi^n$ $\\psi^n$ $F_n$     70 425730551631124.000000000000000 0.000000000000002 190392490709135.000000000000000   71 688846502588401.000000000000000 -0.000000000000001 308061521170130.000000000000000   72 1114577054219520.000000000000000 0.000000000000001 498454011879265.000000000000000   73 1803423556807930.000000000000000 -0.000000000000001 806515533049395.000000000000000   74 2918000611027450.000000000000000 0.000000000000000 1304969544928660.000000000000000   75 4721424167835376.000000000000000 0.000000000000000 2111485077978060.000000000000000    まず小数点以下の値が潰れているのが懸念点なのだが（これについては後述する），表からは71番目からはリファレンス値に対して明らかにズレが生じていることが分かる。\n同じことを Google スプレッドシートでもやってみた。\n fibonacci-numbers  これも70番目以降のみ挙げておこう。\n   $n$ $\\varphi^n$ $\\psi^n$ $F_n$     70 425730551631124.000000000000000 0.000000000000002 190392490709135.000000000000000   71 688846502588401.000000000000000 -0.000000000000001 308061521170130.000000000000000   72 1114577054219520.000000000000000 0.000000000000001 498454011879265.000000000000000   73 1803423556807930.000000000000000 -0.000000000000001 806515533049395.000000000000000   74 2918000611027450.000000000000000 0.000000000000000 1304969544928660.000000000000000   75 4721424167835380.000000000000000 0.000000000000000 2111485077978060.000000000000000    途中計算に若干の違いはあれど最終的な結果は同じになった。\nExcel のことは知らない2。\nMachine Epsilon ある処理系における浮動小数点数の精度を調べるには $1+\\epsilon-1$ がゼロにならない最小の $\\epsilon$ すなわち machine epsilon を調べるのがよい。 今回使っている処理系では，浮動小数点数の基数はどれも2進数なので $\\epsilon$ の値を\n\\begin{align*} \\epsilon \u0026= \\frac{1}{2^{n}} \u0026 (n = 1,2,3 \\cdots) \\end{align*}  として調べていけばいいだろう。 たとえば Go 言語であれば\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) func main() { fmt.Println(\u0026#34;| $n$ | $\\\\epsilon$ | $1+\\\\epsilon-1$ |\u0026#34;) fmt.Println(\u0026#34;| ---:| ---:| ---:|\u0026#34;) for n := int64(1); n \u0026lt;= 55; n++ { e := math.Pow(2.0, float64(-n)) me := 1.0 + e - 1.0 fmt.Printf(\u0026#34;| %d | %v | %v |\\n\u0026#34;, n, e, me) } } といったコード。 このコードの実行結果（の一部）は以下の通り。\n   $n$ $\\epsilon$ $1+\\epsilon-1$     45 2.842170943040401e-14 2.842170943040401e-14   46 1.4210854715202004e-14 1.4210854715202004e-14   47 7.105427357601002e-15 7.105427357601002e-15   48 3.552713678800501e-15 3.552713678800501e-15   49 1.7763568394002505e-15 1.7763568394002505e-15   50 8.881784197001252e-16 8.881784197001252e-16   51 4.440892098500626e-16 4.440892098500626e-16   52 2.220446049250313e-16 2.220446049250313e-16   53 1.1102230246251565e-16 0    64ビット浮動小数点数の仮数部のサイズは52ビットなので，これは妥当な結果と言える。\n同じことを LibreOffice Calc で実行した結果は以下の通り。\n   $n$ $\\epsilon$ $1+\\epsilon-1$     45 2.8421709430404E-14 2.8421709430404E-14   46 1.4210854715202E-14 1.4210854715202E-14   47 7.105427357601E-15 7.105427357601E-15   48 3.5527136788005E-15 3.5527136788005E-15   49 1.77635683940025E-15 0   50 8.88178419700125E-16 0   51 4.44089209850063E-16 0   52 2.22044604925031E-16 0   53 1.11022302462516E-16 0    Excel で聞かれる括弧の付け方で結果が変わる云々はなかったが $\\epsilon=2^{-48}$ までの精度しかないようだ。 これなら先のフィボナッチ数列一般項の計算結果も納得である。 何がネックになってるのかは分からないが。\nGoogle スプレッドシートはちょっと複雑で，まず冪乗計算（POW(x,y) または x^y）が $2^{-33}$ までしか値が取れない。 しょうがないので，計算値ではなく，生の $\\epsilon$ 値をセルにコピペして検証してみたところ $\\epsilon=2^{-52}$ までの精度があることが確認できた3。 しかし関数ごとに精度が異なるのであれば，これはこれでヒッジョーに面倒くさい話になる。\nというわけで 結論として（大きな有効桁数が要件となる）数値計算をスプレッドシートで行うのはオススメできない。 やるのであれば身元の確かなツールを使って数値計算を行い，その結果をスプレッドシートにインポートしてデータの整理を行うことであろうか。\nブックマーク  1を1億回足して1億にならない場合  参考図書  数学ガール 結城 浩 SBクリエイティブ 2007-06-26 (Release 2014-03-12) eBooks Kindle版 ASIN: B00EYXMA9I 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ミルカさんとの衝撃の encounter。数学ガールがワルツを踊る。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n  プログラマの数学 第2版 結城 浩 SBクリエイティブ 2018-01-16 (Release 2018-02-08) eBooks Kindle版 ASIN: B079JLW5YN 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  タイトル通りプログラマ必読書。第2版では機械学習に関する章が付録に追加された。\nreviewed by Spiegel on 2018-03-19 (powered by amazon-item v0.2.0)\n  ちなみに今回出てきた $\\varphi$ の値は「黄金比（golden ratio）」などと呼ばれているらしい。黄金比については与太話も含めて色々と面白い話もあるが今回は割愛する。 [return] もはや Microsoft Office は個人ユーザが使うものではないだろう。あれはお役所や企業等のレガシー環境で仕方なく使う道具である。 [return] $\\epsilon$ 値は Go 言語コードで吐き出されたものを使った [return]   "
    },
    {
      "title": "パスワード・マネージャに関する走り書き",
      "section": "remark",
      "description": "これは Facebook の TL に書いた記事です。今後の考察のためのメモとして残しておきます。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/password-manager/",
      "published": "2019-06-20T12:34:14+00:00",
      "update": "2019-06-20T12:37:00+00:00",
      "content": "（これは Facebook の TL に書いた記事です。今後の考察のためのメモとして残しておきます）\n今週のおすすめ記事。\n Before You Use a Password Manager – Stuart Schechter – Medium  パスワードおよびパスワード・マネージャによる管理についてよくまとめられている。 パスワード・マネージャの比較表もあるので参考になるだろう。\nセキュリティ専門家の Bruce Schneier 氏はこの記事に対して\n My particular choices about security and risk is to only store passwords on my computer -- not on my phone -- and not to put anything in the cloud.  via Risks of Password Managers - Schneier on Security  と述べておられるが，そんな運用は私には無理。 まぁ，どこまでを自分の制御下に置くかがセキュリティ・トレードオフの勘所なのかもねぇ。\nセキュリティ管理の首根っこを掴まれるのは搾取される第一歩だ。 Android が登場した当初，あまりにダサい iTunes と比較して\n 「PCを母艦にするのは時代遅れ，これからはクラウドが母艦の時代」\n と思ったものだが「監視資本主義」が台頭する今では認識を少し改めたほうがいいかもしれない。\n 超監視社会 ブルース・シュナイアー 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) eBooks Kindle版 ASIN: B01MZGVHOA  実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by amazon-item 0.2.1)\n  もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo 達人出版会 2017-12-25 評価\u0026nbsp;       WirelessWire News 連載の書籍化。感想はこちら\nreviewed by Spiegel on 2018-12-31\n "
    },
    {
      "title": "【憶測記事】 マイニング・コードを仕込まれたかもしれない",
      "section": "remark",
      "description": "今回のようなケースでは「まずブラウザを疑え」ってのが分かっただけでもよかったことにしよう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/06/programmable-controller/",
      "published": "2019-06-18T13:22:58+00:00",
      "update": "2019-06-26T04:42:35+00:00",
      "content": " あらかじめ予防線を張っておくと，今回の記事はかなりの部分が憶測でいつも以上に独断で偏見に満ちているので，そのへん割り引いて読んでほしい。\nいや，そもそも先週末くらいから手持ちのスマートフォンが異様に熱くなって急速にバッテリが減衰する症状が断続的にあらわれたのが始まり。 思い当たるフシが全く無いので似たような事例がないかネットで探しつつ，監視用のアプリを一時的に導入して色々調べてみるが，プロセッサの全コアがフルでブン回っている事以外に具体的に誰がどんな悪さをしているのかは分からなかった。\nそれでも，今朝起床したら（電源を繋いでいるにも関わらず）バッテリ残量が残り1パーセントになってるのを見てこれは本格的にヤバいと思い始めた。 幸いなことに節電モードにして通話機能等の主要なアプリ以外をオフにしてしまえばバッテリ消費が抑えられるのは分かっていたので，とりあえず今日は（家の充電器に繋いだまま）ケータイを持たずに仕事に出掛けた（デスクワークなので仕事にケータイは要らないけど出退勤のバス移動中に音楽が聴けないのは耳が寂しかった）。\nんで，自宅に帰ってからふと思いついて Chrome と Firefox のデータを完全初期化してみたら嘘みたいにおさまった。\n原因はお前か！\nこれってアレかね。 最近噂のマイニング・コードってやつを仕込まれちゃったかね。 ここのところヤバげなサイトも含めてあちこちネットサーフィン（古語w）してたからなぁ。 今となっては確かめる術はない。 一応 Firefox には No Coin を入れてる。 Chrome は基本放置で（拡張機能を入れるには Google アカウントにサインインしないといけないため）， Firefox では行きたくないサイトのみプライベートブラウジングで閲覧するようにしてたんだけど，やっぱ Chrome は使わないほうがいいかな。\n最近 Mozilla が調子こいて\n  Firefoxではつねに、口先以上のことをしている。本当に人々を護るには、プライバシーを再優先する新しいスタンダードの確立が必要だ  via Firefoxがユーザーを追跡から護る機能を強化しパスワードマネージャーをデスクトップに導入 | TechCrunch Japan  とか言ってるそうな。 どの口が言うか！ って話だよ。 本気で「口先以上のことをしている」というのなら検索窓の既定を DuckDuckGo にしろっての！ 話はそこからだ。 あと Firefox の利用は明らかに携帯端末のほうが多いのに携帯端末版 Firefox のセキュリティ・プライバシー設定は旧態依然としたままなのはどうしてなのかね？ ユーザをナメるのも大概にしていただきたいものである。 これならば潔くあからさまにユーザ軽視の Safari や Chrome のほうがまだマシかもしれない（ユーザが正しく警戒するという意味で）。\n今回思ったけど，こういうイレギュラーが起きたときにユーザ自身で調べる手段が少ないってのは致命的だな。 Android 用の開発環境でもあればよかったのかもしれないが，私はもうエンジニアではないのでそんなもん入れたくないし，たぶんケータイ・ショップに行っても分かる人いないよね。\nつくづくケータイってのは Personal Computer じゃなくて Programmable Controller なんだなぁ，と改めて実感する。 まぁ最近は Windows を始めとした所謂「パソコン」も Programmable Controller に成り下がってるけど（笑）\nまぁ，今回のようなケースでは「まずブラウザを疑え」ってのが分かっただけでもよかったことにしよう。\n追記 その後 Chrome, Firefox, WebView がアップデートされたが，これ以降，端末の発熱等はピタリとおさまった。 これらのうちのどれか（または全部）が犯人なのは間違いないだろう。\n今回の経験を経て，ケータイを使わないときは節電モードにしてデータ通信を行わせないようにした。\nブックマーク  技術的負債としての Web ブラウザ  参考図書  信頼と裏切りの社会 ブルース・シュナイアー 山形 浩生 (翻訳) エヌティティ出版 2013-12-24 Book 単行本（ソフトカバー） ASIN: 4757143044, EAN: 9784757143043 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  社会における「信頼」とは。\nreviewed by Spiegel on 2019-03-23 (powered by amazon-item 0.2.1)\n "
    },
    {
      "title": "2019-06-16 のブックマーク",
      "section": "bookmarks",
      "description": "「惑星協会、宇宙ヨットLightSail 2を24日打上げへ。周回軌道上で管制制御に挑戦」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/06/16-bookmarks/",
      "published": "2019-06-16T11:05:36+00:00",
      "update": "2019-06-16T11:07:34+00:00",
      "content": " リリース情報  「Firefox」v67.0.2が公開 ～「macOS 10.15 Catalina」でクラッシュする問題などを修正（6月13日追記） - 窓の杜 無料メールソフト「Thunderbird」v60.7.1が公開 ～4件の脆弱性を修正 - 窓の杜  バベルのインターネット  セールスフォース・ドットコム、同社のSaaSを用いた銃や火器の販売を全世界的に禁止 － Publickey デイヴィッド・ケイ著『言論警察』：「誰が・何を発言してよいか」の判断をテクノロジー企業に委ねてしまってよいのか – P2Pとかその辺のお話R MIT Tech Review: ロシア当局がVPNプロバイダーに接続要請、9社が「ブラリ入り」か : ユーザから見れば Kaspersky こそ「ブラリ入り」 MIT Tech Review: GAFAは分割より共有を——オックスフォード大教授が主張する理由 MIT Tech Review: 自社CEOのフェイク映像も削除せず フェイスブックが新方針  セキュリティ＆プライバシー関連  クレジットカードの偽決済画面が稼働していたサーバーについて調べてみた - piyolog グーグル、大規模クラウド障害に関する詳細な情報を明らかに - ZDNet Japan 「SHA-1証明書」の無効化を表明、Apple - ITmedia エンタープライズ Intel製品に複数の脆弱性、セキュリティアドバイザリが公開 - 窓の杜 GoogleがAndroidのセキュリティキー技術をiPhoneやiPadに開放 | TechCrunch Japan グーグル研究者が「Windows」で使われる「SymCrypt」のバグについて情報公開 - ZDNet Japan The Predator in Your Pocket: A Multidisciplinary Assessment of the Stalkerware Application Industry - The Citizen Lab  A deep dive into stalkerware's creepy marketing, illegal privacy invasions, and terrible security / Boing Boing Report on the Stalkerware Industry - Schneier on Security  リスト型攻撃を通じたイオンカードの不正利用についてまとめてみた - piyolog YubicoがFIPS対応セキュリティキーのリコールを発表 - Engadget 日本版  天文関連  IAU戦略計画 2020–2030  惑星協会、宇宙ヨットLightSail 2を24日打上げへ。周回軌道上で管制制御に挑戦 - Engadget 日本版 APOD: 2019 May 16 - Dark Skies: Turn on the Night NASA探査機OSIRIX-RExが小惑星ベンヌで接近軌道の宇宙新記録を達成 | TechCrunch Japan  知財関連  オープンソースのCockroachDBも大手クラウドに反発してライセンスを変更、商用サービスでの利用を制限。ただし3年後にオープンソースに戻る期限付き － Publickey ^ 'Copyright Troll' Lawyer Sentenced to 14 Years in Prison - TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 19.10 その10 - deb版ChromiumからSnap版Chromiumへの移行・移行テストの呼び掛け - kledgeb 2019年6月14日号　Ubuntuにおける「バージョンによる脆弱性判定」の正しいアプローチ，WSL2のプレビュー開始：Ubuntu Weekly Topics｜gihyo.jp … 技術評論社  その他  MIT Tech Review: 1泊3万5000ドル、NASAがISSの商業利用受け入れへ MIT Tech Review: トランプ支持者にも変化あり 米国の「保守」が気候変動を認め始めた理由 spf13/cobraで作ったCLIツールのbash/zsh補完スクリプトを自動生成する - Qiita さまざまな個人化用機械学習モデル構築APIがAWSから提供開始 | TechCrunch Japan MIT Tech Review: 世界最大規模のCO2大気回収プラント計画が抱える根本的な矛盾 富士フイルム、一度は販売終了した「黒白フィルム」を立体的な階調再現などの高性能にして再販 - ニュース ―MdN Design Interactive edition― - 窓の杜 モジラがFirefoxの新ロゴを発表、ブラウザーだけではないことを強調 | TechCrunch Japan Google検索に表示されない古いサイトを見つける方法 | ライフハッカー［日本版］ \u0026gt;森口 博子「GUNDAM SONG COVERS　LPサイズ盤」特設サイト ER図を書くのに疲れたら - Qiita 機械学習アルゴリズムではなく顧客体験からスタート--アマゾンではいかにAIが利用されているか - ZDNet Japan Visual Studio CodeでJava開発がしやすくなるJDKインストーラー | TechCrunch Japan  "
    }
  ]
}
