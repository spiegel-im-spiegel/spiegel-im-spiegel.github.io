{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "松江城 冬景色",
      "section": "remark",
      "description": "こりゃあ，天守閣まで登るのは無理だな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/01/castle-in-winter/",
      "published": "2023-01-28T10:17:35+00:00",
      "update": "2023-01-28T10:19:08+00:00",
      "content": "先日の寒波で積もった雪が融けず足元が悪い状態が続いてるのだけど，引きこもりも飽きてきたし，図書館で借りたい本もあったので，本当に久しぶりに街に出てみた。\nまずはバスで松江駅まで出てみる。\n雪が残る松江駅 | Flickr おぅふ orz\nエラい雪が残っとるな。 一応松江市の中心街付近なのだが\u0026hellip;\n気を取り直して，バスを乗り換え島根県立図書館へ Go。 図書館近くにある松江城のお掘りを覗いてみると\n松江城 お堀の水も凍る | Flickr 凍っとるがな！ 二の丸に登る千鳥橋もこんな感じ。\n雪の千鳥橋 | Flickr こりゃあ，天守閣まで登るのは無理だな。 というわけで，雪の松江城見物は諦めて図書館で本を借りて，とっとと帰った。 ちなみに天守閣の遠景はこんな感じ。\n雪の松江城 | Flickr わざとこの位置に街灯を配置してみました（笑）\nそうそう。 今回借りた本はこれ。\nとりあえず図書館で借りて斜め読み | Flickr 3月からこの本のオンライン読書会をするらしいんだけど，月2回の読書会は参加しきれるか微妙なので，まずは試し読みして決めようと思ったのだ。 面白ければ読書会に参加するか否かに関わらず買う予定。 PDF 版があれば即買いでもよかったんだけどねぇ。 いや，日経BP社に決済情報を預けたくないし，もし PDF 版があっても直販では買わんかな（笑）\n参考図書 ピープルウエア 第3版 トム・デマルコ (著), ティモシー・リスター (著), 松原友夫 (翻訳), 山浦恒央 (翻訳) 日経BP 2013-12-18 単行本（ソフトカバー） 4822285243 (ASIN), 9784822285241 (EAN), 4822285243 (ISBN) とりあえず図書館で借りてためし読みする。面白かったら買う。\nreviewed by Spiegel on 2023-01-28 (powered by PA-APIv5)\nAlteration【アーティスト盤】 ZAQ (メインアーティスト) Lantis 2013-01-23 (Release 2019-10-24) MP3 ダウンロード B07YZ9R7T2 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; アニメ「ささみさん＠がんばらない」のOP曲。 MP3 版で買い直した。 ZAQ さんの唄はよい。\nreviewed by Spiegel on 2023-01-28 (powered by PA-APIv5)\n"
    },
    {
      "title": "go-cvss パッケージ v1.4.2 をリリースした",
      "section": "release",
      "description": "さらに今回は fuzzing テストまでしてもらって，ホンマに「マジすんません」って感じである。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/01/go-cvss-package-v1_4_2-is-released/",
      "published": "2023-01-28T03:47:48+00:00",
      "update": "2023-01-28T03:52:04+00:00",
      "content": "CVSS ベクタ文字列を可視化したいという軽い動機で作った，拙作の github.com/goark/go-cvss パッケージだが，微妙に使って頂いてるようで，バグ報告をいくつか頂いたため，修正版をリリースした。\nRelease v1.4.2 · goark/go-cvss · GitHub CVSS のベクタ文字列（CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H1 など）のバリデーションを厳密に行うようにした。 今までベクタ文字列の parse はかなり緩くしていて， metric 名が重複してても（後勝ちで）有効にしてたし，大文字小文字も関係なく有効にしていたが，仕様的にあかんやろ，ということで。 これに伴い，古いコードは drop した（コード管理が煩雑になるので）。\n使い方は今までと変わらず\npackage main import ( \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/goark/go-cvss/v3/metric\u0026#34; \u0026#34;github.com/goark/go-cvss/v3/report\u0026#34; \u0026#34;golang.org/x/text/language\u0026#34; ) var template = \u0026#34;- `{{ .Vector }}`\u0026#34; + ` - {{ .SeverityName }}: {{ .SeverityValue }} (Score: {{ .BaseScore }}) | {{ .BaseMetrics }} | {{ .BaseMetricValue }} | |--------|-------| | {{ .AVName }} | {{ .AVValue }} | | {{ .ACName }} | {{ .ACValue }} | | {{ .PRName }} | {{ .PRValue }} | | {{ .UIName }} | {{ .UIValue }} | | {{ .SName }} | {{ .SValue }} | | {{ .CName }} | {{ .CValue }} | | {{ .IName }} | {{ .IValue }} | | {{ .AName }} | {{ .AValue }} | ` func main() { flag.Parse() if flag.NArg() \u0026lt; 1 { fmt.Fprintln(os.Stderr, \u0026#34;Set CVSS vector\u0026#34;) return } bm, err := metric.NewBase().Decode(flag.Arg(0)) if err != nil { fmt.Fprintf(os.Stderr, \u0026#34;%+v\\n\u0026#34;, err) return } r, err := report.NewBase(bm, report.WithOptionsLanguage(language.Japanese)).ExportWithString(template) if err != nil { fmt.Fprintf(os.Stderr, \u0026#34;%+v\\n\u0026#34;, err) return } if _, err := io.Copy(os.Stdout, r); err != nil { fmt.Fprintf(os.Stderr, \u0026#34;%+v\\n\u0026#34;, err) } } などとしておけば\n$ go run main.go \u0026#34;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\u0026#34; - `CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H` - 深刻度: 緊急 (Score: 9.8) | 基本評価基準 | 評価値 | |--------|-------| | 攻撃元区分 | ネットワーク | | 攻撃条件の複雑さ | 低 | | 必要な特権レベル | 不要 | | ユーザ関与レベル | 不要 | | スコープ | 変更なし | | 機密性への影響 | 高 | | 完全性への影響 | 高 | | 可用性への影響 | 高 | と出力される。\nこの github.com/goark/go-cvss パッケージってコードの半分くらい貰いものだし，さらに今回は fuzzing テストまでしてもらって，ホンマに「マジすんません」って感じである。ありがたや \u0026#x1f647;\nでも CVSS ってあくまでもリスクの「評価基準」のひとつであって，そこから「どうする」ってのはまた別の話なんだよね。 個人なら CVSS の Base metrics 情報を見て都度判断すればいいけど，組織では SSVC (Stakeholder-Specific Vulnerability Categorization) なんかと組み合わせる必要があるかもしれない。\n道具は適材適所で使いましょう，ということで。\nブックマーク CVSS v3.0 Specification Document\nCVSS v3.1 Specification Document\n共通脆弱性評価システムCVSS v3概説：IPA 独立行政法人 情報処理推進機構\nオープンソース製品とソフトウェア部品表\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n実用 Go言語 ―システム開発の現場で知っておきたいアドバイス 渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著) オライリージャパン 2022-04-22 単行本（ソフトカバー） 4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元のデジタル版を購入。 Go で躓きやすい点を解説していくのが最初の動機らしい。「◯◯するには」を調べる際にこの本を調べるといいかも。\nreviewed by Spiegel on 2022-10-26 (powered by PA-APIv5)\nCVE-2022-3515 より\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "【Go 1.20 の予習】複数 error を返す Unwrap メソッドについて",
      "section": "golang",
      "description": "Go 1.20 で errors パッケージの仕様が変わるみたいなので予習しておく。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/wrapping-multiple-errors/",
      "published": "2023-01-25T03:57:01+00:00",
      "update": "2023-01-25T22:13:40+00:00",
      "content": "おそらく 2022-02 にリリースされる Go 1.20 で errors パッケージの仕様が変わるみたいなので予習しておく。\nWrapping multiple errors\nGo 1.20 expands support for error wrapping to permit an error to wrap multiple other errors.\nAn error e can wrap more than one error by providing an Unwrap method that returns a []error.\nThe errors.Is and errors.As functions have been updated to inspect multiply wrapped errors.\nThe fmt.Errorf function now supports multiple occurrences of the %w format verb, which will cause it to return an error that wraps all of those error operands.\nThe new function errors.Join returns an error wrapping a list of errors.\nvia Go 1.20 Release Notes - The Go Programming Language 現行の errors.Is() および errors.As() 各関数では 対象となる error インスタンスについて型アサーションを行い Unwrap() error メソッドを含む型か否かで再帰的に処理を行っているが， Go 1.20 からは，この評価に Unwrap() []error メソッドが加わる。\n具体的にはこんな感じらしい。\n// Is reports whether any error in err\u0026#39;s tree matches target. // // The tree consists of err itself, followed by the errors obtained by repeatedly // calling Unwrap. When err wraps multiple errors, Is examines err followed by a // depth-first traversal of its children. // // An error is considered to match a target if it is equal to that target or if // it implements a method Is(error) bool such that Is(target) returns true. // // An error type might provide an Is method so it can be treated as equivalent // to an existing error. For example, if MyError defines // //\tfunc (m MyError) Is(target error) bool { return target == fs.ErrExist } // // then Is(MyError{}, fs.ErrExist) returns true. See syscall.Errno.Is for // an example in the standard library. An Is method should only shallowly // compare err and the target and not call Unwrap on either. func Is(err, target error) bool { if target == nil { return err == target } isComparable := reflectlite.TypeOf(target).Comparable() for { if isComparable \u0026amp;\u0026amp; err == target { return true } if x, ok := err.(interface{ Is(error) bool }); ok \u0026amp;\u0026amp; x.Is(target) { return true } switch x := err.(type) { case interface{ Unwrap() error }: err = x.Unwrap() if err == nil { return false } case interface{ Unwrap() []error }: for _, err := range x.Unwrap() { if Is(err, target) { return true } } return false default: return false } } } // As finds the first error in err\u0026#39;s tree that matches target, and if one is found, sets // target to that error value and returns true. Otherwise, it returns false. // // The tree consists of err itself, followed by the errors obtained by repeatedly // calling Unwrap. When err wraps multiple errors, As examines err followed by a // depth-first traversal of its children. // // An error matches target if the error\u0026#39;s concrete value is assignable to the value // pointed to by target, or if the error has a method As(interface{}) bool such that // As(target) returns true. In the latter case, the As method is responsible for // setting target. // // An error type might provide an As method so it can be treated as if it were a // different error type. // // As panics if target is not a non-nil pointer to either a type that implements // error, or to any interface type. func As(err error, target any) bool { if err == nil { return false } if target == nil { panic(\u0026#34;errors: target cannot be nil\u0026#34;) } val := reflectlite.ValueOf(target) typ := val.Type() if typ.Kind() != reflectlite.Ptr || val.IsNil() { panic(\u0026#34;errors: target must be a non-nil pointer\u0026#34;) } targetType := typ.Elem() if targetType.Kind() != reflectlite.Interface \u0026amp;\u0026amp; !targetType.Implements(errorType) { panic(\u0026#34;errors: *target must be interface or implement error\u0026#34;) } for { if reflectlite.TypeOf(err).AssignableTo(targetType) { val.Elem().Set(reflectlite.ValueOf(err)) return true } if x, ok := err.(interface{ As(any) bool }); ok \u0026amp;\u0026amp; x.As(target) { return true } switch x := err.(type) { case interface{ Unwrap() error }: err = x.Unwrap() if err == nil { return false } case interface{ Unwrap() []error }: for _, err := range x.Unwrap() { if As(err, target) { return true } } return false default: return false } } } ちょっと長くて申し訳ないが，各関数の型 switch 文のなかで Unwrap() []error メソッドを含む型を評価しているのがおわかりだろうか。\n標準パッケージでは新設の errors.Join() 関数や fmt.Errorf() 関数の拡張でマルチエラーに対応するようだが，自前で error 型を作る場合でも Unwrap() []error メソッドを追加することで errors.Is() 関数や errors.As() 関数による評価が可能になるわけだ。\nブックマーク Go 1.20 Wrapping multiple errors | フューチャー技術ブログ\nGo のエラーハンドリング\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n実用 Go言語 ―システム開発の現場で知っておきたいアドバイス 渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著) オライリージャパン 2022-04-22 単行本（ソフトカバー） 4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元のデジタル版を購入。 Go で躓きやすい点を解説していくのが最初の動機らしい。「◯◯するには」を調べる際にこの本を調べるといいかも。\nreviewed by Spiegel on 2022-10-26 (powered by PA-APIv5)\n"
    },
    {
      "title": "OpenJDK のセキュリティ・アップデート（2023-01）",
      "section": "release",
      "description": "影響を受けるバージョンは 19.0.1, 17.0.5, 15.0.9, 13.0.13, 11.0.17, 8u352, 7u361 およびそれ以前。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/01/openjdks-has-been-updated/",
      "published": "2023-01-22T02:48:49+00:00",
      "update": "2023-01-22T02:49:55+00:00",
      "content": "定例の Java マイナー・バージョンアップが行われた。\nOpenJDK Vulnerability Advisory: 2023/01/17 CVE ID ベースで3個の脆弱性修正がある。 影響を受けるバージョンは 19.0.1, 17.0.5, 15.0.9, 13.0.13, 11.0.17, 8u352, 7u361 およびそれ以前。\nCVE ID Component CVSSv3.1\nScore Affects ... 7 8 11 13 15 17 19 CVE-2023-21835 security-libs/\njavax.net.ssl 5.3 CVE-2023-21830 other-libs 5.3 CVE-2023-21843 client-libs/\njavax.sound 3.7 via OpenJDK Vulnerability Advisory: 2023/01/17 OpenJDK を APT で管理するメリットはないので，実行バイナリをリリースページから直接ダウンロードして配置する。 以下は完全手動でのインストール（笑）\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://download.java.net/java/GA/jdk19.0.2/fdb695a9d9064ad6b064dc6df578380c/7/GPL/openjdk-19.0.2_linux-x64_bin.tar.gz\u0026#34; -O $ cd .. $ sudo unlink java # 以前のバージョンの Java 環境がある場合 $ sudo tar xvf src/openjdk-19.0.2_linux-x64_bin.tar.gz $ sudo ln -s jdk-19.0.2 java $ java -version # すでに PATH が通っている場合 openjdk version \u0026#34;19.0.2\u0026#34; 2023-01-17 OpenJDK Runtime Environment (build 19.0.2+7-44) OpenJDK 64-Bit Server VM (build 19.0.2+7-44, mixed mode, sharing) LTS 版 Java バイナリが欲しいなら Adoptium で取得できる。\n私としては PlantUML が動けばいいので，試しておく1。\nFactory Method Pattern よーし，うむうむ，よーし。\nブックマーク 2023年1月Oracle製品のクリティカルパッチアップデートに関する注意喚起 参考図書 Spring Data JPAプログラミング入門 溝口賢司 (著) 秀和システム 2017-08-03 (Release 2018-04-23) Kindle版 B07CKHR8C1 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; JPA のお勉強用に購入。紙のほうはプレミアが付いてるっぽいが Kindle で買えるよ。固定レイアウトだからブラウザの Kindle Cloud Reader で読めるし。真面目に基本を押さえて書いていて分かりやすい。\nreviewed by Spiegel on 2021-08-26 (powered by PA-APIv5)\nEffective Java 第3版 Joshua Bloch (著), 柴田 芳樹 (翻訳) 丸善出版 2018-10-30 単行本（ソフトカバー） 4621303252 (ASIN), 9784621303252 (EAN), 4621303252 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 再勉強中。 Kindle 版のほうがちょっと安いが，勤務先でも使いたかったので紙の本にした。\nreviewed by Spiegel on 2021-03-17 (powered by PA-APIv5)\nSpring Boot 2 入門: 基礎から実演まで 原田 けいと (著), 竹田 甘地 (著), Robert Segawa (著) 2020-05-22 (Release 2020-05-22) Kindle版 B0893LQ5KY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Spring Boot を勉強することになって急遽買った本。めっさ分かりやすかった。 PDF 版が欲しいくらい（笑） Spring Boot 2.7 対応にアップデートされていた。素敵！\nreviewed by Spiegel on 2022-08-14 (powered by PA-APIv5)\n2023-01-09 に PlantUML V1.2023.0 がリリースされている。 PlantUML の使い方等については拙文「真面目に PlantUML」シリーズを参考にどうぞ。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "2023-01-22 のブックマーク",
      "section": "bookmarks",
      "description": "「Git security vulnerabilities announced」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2023/01/22-bookmarks/",
      "published": "2023-01-22T01:49:42+00:00",
      "update": "2023-01-22T02:05:32+00:00",
      "content": "リリース情報 Release v2.7.0 · qax-os/excelize · GitHub Go 言語スプレッドシートライブラリ：Excelize 2.7.0 がリリースされました Release v1.2023.0 · plantuml/plantuml · GitHub scoop のマニフェストファイルを作るツールを公開しました - 標準愚痴出力 Release v0.3.0 · hymkor/make-scoop-manifest · GitHub Release v0.4.0 · hymkor/make-scoop-manifest · GitHub Release v0.5.0 · hymkor/make-scoop-manifest · GitHub Release November 2022 Recovery 3 · microsoft/vscode · GitHub LibreOffice 7.4.4 Community available for download - The Document Foundation Blog 「LibreOffice 7.4.4 Community」が公開 ～「LibreOffice 7.3」ユーザーは移行を - 窓の杜 Announcing Rust 1.66.1 | Rust Blog Release v3.20.0 · go-task/task · GitHub Release v4.0.2 · gitextensions/gitextensions · GitHub Release v0.110.0 · gohugoio/hugo · GitHub 「Firefox 109」が正式リリース ～「Manifest V3」拡張機能の対応が既定で有効化 - 窓の杜 セキュリティ＆プライバシー関連 Stop filming strangers in 2023 - The Verge Security advisory for Cargo (CVE-2022-46176) | Rust Blog アフラックとチューリッヒの情報流出についてまとめてみた - piyolog AMD製プロセッサーに複数の脆弱性 ～Athlon、Ryzen、Threadripperなどに影響 - 窓の杜 「Zoom」「Zoom Rooms」に複数の脆弱性 ～特権昇格やパストラバーサルの欠陥 - 窓の杜 「ChatGPT」、マルウェア作成に悪用される\u0026ndash;Check Point調査 - ZDNET Japan ウィズセキュア、サイバー攻撃での「ChatGPT」悪用について警鐘 - ZDNET Japan PayPal、サイバー攻撃で3万5000人分の個人情報が流出 - ZDNET Japan : サービス間でパスワードを使いまわしている人は要注意。つか，使いまわすな PayPalでサイバー攻撃が発生し約3万5000人分の個人情報が流出していたことが判明 - GIGAZINE Git security vulnerabilities announced | The GitHub Blog Release Git for Windows 2.39.1 · git-for-windows/git · GitHub 「Git」に3件の脆弱性 ～修正版のv2.39.1が公開 - 窓の杜 「Microsoft Defender」がショートカットファイルを破壊・削除 ～Microsoftが対策、復旧策を案内【1月17日追記】 - 窓の杜 「Password1234」などの超単純パスワードがアメリカ政府機関で大量に使われていた - GIGAZINE システム障害による米国内全便のフライト一時停止についてまとめてみた - piyolog Zero Trust monitoring with OpenZiti SSLVPNdにおけるヒープベースのバッファオーバーフローの解析｜ネットワークセキュリティのフォーティネット 知財関連 カナダ、著作権法改正により著作権保護期間が著作権者の死後50年から70年に延長 | カレントアウェアネス・ポータル 米国：著作権保護期間延長の流れは止まるも、脅威にさらされ続けるパブリックドメイン | p2ptk[.]org 著作権法・研究目的権利制限の見送り？は残念すぎる | YamadaShoji.net Webサーバー「Apache」にアメリカ先住民から名称変更の要請 - GIGAZINE 画像生成AI「Stable Diffusion」と「Midjourney」に対して集団訴訟が提起される - GIGAZINE 著作権ウィーク：クリエイティビティとイノベーションのための著作権のあり方 | p2ptk[.]org カナダ、著作権法改正により著作権保護期間が著作権者の死後50年から70年に延長 | カレントアウェアネス・ポータル 米国：著作権保護期間延長の流れは止まるも、脅威にさらされ続けるパブリックドメイン | p2ptk[.]org Native Americans ask Apache foundation to change name • The Register 藤井聡太さん関連商標出願における特許庁の気配りについて（栗原潔） - 個人 - Yahoo!ニュース Linux または Ubuntu に関する話題 2021年10月以降の Mozc に対する主な変更 Ubuntu 23.04 その7 - Ubuntuにプリインストールする壁紙のコンペ（公募）始まる - kledgeb Ubuntu 23.04 その8 - tzdataパッケージからposixとrightディレクトリーを削除する提案 - kledgeb mozc-utの公開の終了といろいろについての所感 Mozc を応援するいくつかの方法 最近またLinux用の日本語IMEを作っている - tokuhirom\u0026rsquo;s blog Unix is dead. Long live Unix! • The Register Azure や Windows に関する話題 「OneDrive」に障害、一部環境でアクセス不能に【15時25分追記】 - 窓の杜 「Microsoft 365 Basic」が発表 ～「OneDrive」100GBプランの後継 - 窓の杜 ARM32のUWPアプリが非推奨に ～ARM64への移行を - 窓の杜 【西川和久の不定期コラム】Ubuntu 22.04を使ってMastodon(非Docker)を動かす！正式リリースされたストア版WSL2で起動 - PC Watch 初期値で使うな!Windows 11 Edge ホームページ・検索をGoogleにする方法 - PCまなぶ URLの長さは最大8,196文字に ～一部のWindowsバージョン向けに2023年1月Cリリース - 窓の杜 マイクロソフト、GPT-3.5やDALL・E 2のAIモデルを含む「Azure OpenAI Service」正式に提供開始。まもなくAzure上で学習させたChatGPTなども実行可能に － Publickey Go 言語関連 GitHub - tetratelabs/wazero: wazero: the zero dependency WebAssembly runtime for Go developers Providing context to cancellations in Go 1.20 with the new context WithCause API - Joseph Woodward | Software Engineer \u0026amp; Go lover based in Somerset, England Go 1.20 Cryptography GitHub - amitshekhariitbhu/go-backend-clean-architecture: A Go (Golang) Backend Clean Architecture project with Gin, MongoDB, JWT Authentication Middleware, Test, and Docker. What’s New in Go 1.20, Part I: Language Changes · The Ethically-Trained Programmer Scheduling In Go : Part II - Go Scheduler 言語のスレッド実装の雑な話(Green threadからGoのgoroutineまで) Go でイケてる CLI を作るために利用したパッケージ Go 1.20 Release Candidate 3 is released How To Create REST API in Golang? | by Muhammad Adam | Towards Dev GitHub - Contextualist/acp: Minimalistic personal P2P file transfer: CLI tool and service@edge A CHIP-8 interpreter with Rust and Go | Callista GoReleaser で Go 製 CLI のリリースを自動化＆ Homebrew でインストールできるようにする What’s New in Go: The Developer Ecosystem Report 2022 | The GoLand Blog GitHub - TypicalAM/goread: A beautiful program to read your RSS feeds right in the terminal! Java 言語関連 Release v3.0.2 · spring-projects/spring-boot · GitHub Release v2.7.8 · spring-projects/spring-boot · GitHub 『Effective Java 第3版』正誤表 天文関連 APOD: 2023 January 6 - Moon O\u0026rsquo;Clock 2022 New Webb Image Reveals Dusty Disk Like Never Seen Before その他 GitHubで自分以外の人がmainブランチに直接PUSHするのを禁止する 【SwitchBot】雨が降りそうなときに廊下ライトの色を変えてお知らせする機能を作る Upgrade from Windows — Free Software Foundation — Working together for free software 「ブラジル議会襲撃」フェイクが後押しする暴力の背景とは？ | 新聞紙学的 O\u0026rsquo;Reilly Japan Blog - オライリー・ジャパンWeb直販サービス終了のお知らせ : 「電子書籍を販売しております Ebook Store については、従来通りサービスを継続いたします」とのこと インチキAIに騙されないために – WirelessWire News WirelessWire News連載更新（インチキAIに騙されないために） - YAMDAS現更新履歴 生涯第一線で開発に携わりたいから、63歳で転職を決意した【きっかけはYOUTRUST】カウシェ・柴田芳樹さん | YOUTRUST JOURNAL Updating the Android NDK in Rust 1.68 | Rust Blog SQLite3 WASM/JS、Origin Private File Systemを用いてChrome上の高速なローカルDBが機能するとGoogleが明らかに、廃止されたWeb SQLの代替として利用可能 － Publickey 「Google ドライブ」のWindows 7/macOS 10.15.7対応が終了へ - 窓の杜 IDEにChatGPTを統合、「この関数のテストコードはどこ？」「XXXを実装するならどう書けばいい？」など、AIでコードと対話できる「qqbot」登場 － Publickey 【試し読み】C・ホデント（著）山根信二（監訳）『はじめて学ぶ ビデオゲームの心理学』（第１章冒頭）｜福村出版編集部｜note 「Pandoc 3.0」が公開 ～さまざまな形式の文書と相互変換できるフリーツール - 窓の杜 マイクロソフト、1万人の人員削減へ\u0026ndash;過去8年間で最大規模 - ZDNET Japan 「Zoom 5.13.5」が公開 ～ブレイクアウトルームが最大1,000人×100個に - 窓の杜 「MSYS2」でWindows 7/8対応が終了 ～32bit版「Qt 6」のサポートも打ち切り - 窓の杜 『Beep21』新春特別付録！ 竹本泉先生スマホ壁紙データ｜Beep21｜note Dapr Actor Componentの逐次実行はどこで保証されている？ - Qiita 1920年代クロスワードパズルが起こしたモラルパニック - 井出草平の研究ノート Deconstructing \u0026lsquo;The Twitter Files\u0026rsquo; • TechCrunch GitHub - life4/enc: 🔑🔒 A modern and friendly CLI alternative to GnuPG: generate and download keys, encrypt, decrypt, and sign text and files, and more. この10年のプログラミング言語の変化 - 西尾泰和のScrapbox "
    },
    {
      "title": "引きこもる Twitter",
      "section": "remark",
      "description": "2023年の Twitter はどこへ行くのか。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/01/twitter-is-anti-social/",
      "published": "2023-01-21T07:54:15+00:00",
      "update": "2023-01-25T22:19:45+00:00",
      "content": "また Twitter が Web UX を変えやがった（怒）\n少し前はこんな感じだったのよ。\n右上のボタンをクリックすることで「ホーム」と「最新ツイート」を切り換えることができた。 それがこんな感じになった。\nボタンがタブに変わっただけだと思うでしょ。 違うのよ。 「フォロー中」タブを表示してもブラウザで Twitter を開き直す度に「おすすめ」に戻される。 状態を保持してくれないの。 面倒！\nもうひとつ。\n先週から結構騒ぎになってるみたいだけど，サードパーティのアプリを締め出すことにしたようだ。\nTwitter、「開発者契約」を密かに改定し、公式にサードパーティアプリを禁止 - ITmedia NEWS 前述の Web UX の変更と併せて考えると Twitter Blue ユーザを優遇するための措置に見える。 Tweets を時系列に並べたら Twitter Blue ユーザ優先の TL にならないからね。 なかなか姑息なことをする。\n思へらく Twitter は本格的に walled-garden に引きこもる方向に舵を切ったようだ。\nvia Houghton Hall - Walled Garden - Rose Garden - fountain | Flickr (CC-BY) スタートアップやその頂点にあるユニコーン企業で最も重要なのは，提供するプロダクトで何を成すか，である。 すなわち，その企業・組織が掲げる「ミッション」は何かということだ。 そして，それを支える「文化」が最も重要。\nでも，企業・組織のオーナーが変われば文化も変わる。 これは仕方ない。 その過程で大幅な「再構築」が行われ，一時的に価値を落とすこともあるだろう。 それでも背骨となるミッションが従業員や顧客に揺るぎなく示されているなら，そのプロダクトの未来にみんな期待できる。\nミッションを達成する手段として利益を得ようとするなら分かる。 お金は大事。 でも，多くの人から見て現在の Twitter は掲げるべきミッションを見失っているように見えるのではないだろうか。 酷くチグハグで行きあたりばったりの印象。 手段としての銭儲けが目的にすり替わっている感すらある。 そんな状態で果たしてユーザは Twitter の何に期待するというのか。 それなら Mastodon 連合のどこかに寄付するほうがマシって話にならないか？\nさて，2023年の Twitter はどこへ行くのか。\n2022-01-26 追記 その後 Web UI で「フォロー中」タブ選択状態が保持されない問題（？）は修正（？）されたようだ。 現在はブラウザを閉じても保持されてるっぽい。 不具合だったのか，それとも撤回されたのか。 いずれにしろ，もうしばらくは使えるかな。 ブックマーク Twitterのサードパーティーアプリ制限が悲しい - まなめはうす 参考文献 ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳) オライリージャパン 2021-04-26 単行本（ソフトカバー） 4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元より電子版も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。\nreviewed by Spiegel on 2022-05-21 (powered by PA-APIv5)\nミュージックファイルシリーズ/テレビ・ミュージック・コレクション プリンプリン物語 ソング・ブック TVサントラ (アーティスト), 神谷明 (アーティスト), 里見京子 (アーティスト), 三波豊和 (アーティスト), 緒方賢一 (アーティスト), 真理ヨシコ (アーティスト), パンチョ加賀美 (アーティスト), 石川ひとみ (アーティスト), 新道乃里子 (アーティスト), 滝口順平 (アーティスト), はせさん治 (アーティスト) 日本コロムビア 2004-09-21 (Release 2004-09-22) CD B0002Q2LIG (ASIN), 4988001972143 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; アクタ共和国国歌が好き。\nreviewed by Spiegel on 2023-01-21 (powered by PA-APIv5)\n"
    },
    {
      "title": "「本を読む」職業というものはない",
      "section": "remark",
      "description": "たくさん読む人が偉いわけではない。 読書に多くの時間を割く人が偉いわけでもない。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/01/reading-books/",
      "published": "2023-01-21T03:33:20+00:00",
      "update": "2023-01-21T07:59:13+00:00",
      "content": "起点はこの tweets から（続くスレッドも併せてどうぞ）\n質問（本を読まないことにコンプレックス）\nこういう悩みについては、自分の考えを丁寧に記述してみることをお勧めします。\n私は本を多く読まない\n↓\n私は昨年の一年間でX冊の本を読んだ。その内訳はこれこれである。#結城浩に聞いてみようhttps://t.co/ImjqmUn9Q2 pic.twitter.com/04Z50Sx5FQ\n\u0026mdash; 結城浩 (@hyuki) January 21, 2023 たとえば「読書」への関心度を「冊数」や「読書時間」で量ろうとする統計をよく見かけるが，書籍出版社や本屋の陰謀じゃないかと邪推したりする（笑）\n『Effctive Java』や『プログラミング言語Go』の翻訳でおなじみ柴田芳樹さんは，自書の読書会を定期的に行っておられる。 2023年2月からはいよいよ『Linuxシステムの仕組み』の読書会が始まる。\n第1回『Linuxシステムの仕組み』オンライン読書会 - connpass これ，索引を除くと450頁以上ある上に文字数が多い！ 月1回の読書会で読み終わるのに1年くらいかかるんじゃないかと言っておられた。\n読書会とか輪読回のいいところはゴールが分かりやすいところだ。 とにかく1冊まるまる読み終えたらゴール。 寄り道もOK。\n私だけの悪癖なのかもしれないが，仕事用の技術参考書は知らないところをつまみ食いして「読んだことにする」ことが多い。 いや，最初にざっと流し読みはするんだよ。\nでも，読書会は少なくない人数で同じものを同時に読む。 みんなと一緒に読むから積ん読になりにくい。 他にも，私自身が「知ってる」からと読み飛ばしてた部分に着目する人がいて，それについて検討し始めると，実は私も「解ってない」ことが多々あることに気づく。 これを面白いと思うようになってからは，都合がつく限り参加するようにしている。\nこれ，他の作家さんもやればいいのに（やっておられるかもしれないが）。 技術参考書以外でもできると思うよ。 まぁ，主催するほうはファシリテーターも兼ねることが多く，大変だと思うけどね。\n著者も出版社も，読書に関心を持ってもらいたいなら，そのための努力をしろよ。 上述のようなオンライン読書会でもいいし，学校や図書館に置いてもらって接触機会を増やすとかでもいいだろう。 過去の絶版著作を Web とかでまるっと公開する手もある。 存在を知らない本は読めないのだよ。\nとはいえ，読書のやりかたは人それぞれ。 量で評価するのはナンセンスな話である。 「本を読む」職業というものはなく，量をこなせばいいものでもない。 「正しい読み方」などないのだ1。\n私は参考書に関しては，難し目の本を最初に買って，それを理解するための副読本をいくつか買う（あるいは図書館で借りる）というスタイルを好む。 同じ頁を何度も読み返したり，しばらく本から離れてクールダウンさせた後に読み直すこともある。 技術参考書は PDF で買えることが多くなったので狭い本棚を圧迫せずに済んでいる2（魔窟化の回避）。 一方で漫画やラノベは乱読で，目に付いた面白そうなタイトルを Kindle や Web 連載で片っ端から読む。 近年のお気に入りは悪役令嬢恋愛ラノベだ（笑） いわゆる「文芸作品3」に関しては学生時代に「受験対策で読むもの」という刷り込みが入ってるので，社会人になってからはほぼ読まなくなった。\nというわけで，たくさん読む人が偉いわけではない。 読書に多くの時間を割く人が偉いわけでもない。 買った本が自分にとってつまらないと思うなら，わざわざ dis らなくても，そっとブックオフにでも売り飛ばせばいい（つまらないことを「つまらない」と言うことほどつまらないことはない）。 本や読書にアイデンティティを求める必要はない。\n私は本好きなので，その人にとって，たった1冊でも sense of wonder を与えてくれる作品があるなら，幸せな出会いだと思っている。 作家や書籍出版社に忖度する必要もないのだ。\n本は楽しく読みましょう。\n参考図書 スーパーユーザーなら知っておくべきLinuxシステムの仕組み Brian Ward (著), 柴田 芳樹 (翻訳) インプレス 2022-03-08 (Release 2022-03-08) 単行本（ソフトカバー） 4295013498 (ASIN), 9784295013495 (EAN), 4295013498 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元で PDF 版が買えるが，今回はセキュリティ・エリアにも持ち込めるよう紙の本を買った。Linux システムの扱い方に関するリファレンス本として優れている。最初に軽く流し読みして，必要に応じて該当項目を拾い読みしていけばいいだろう。\nreviewed by Spiegel on 2022-07-17 (powered by PA-APIv5)\n残り一日で破滅フラグ全部へし折ります　１　ざまぁRTA記録24Hr. (ＦＬＯＳ　ＣＯＭＩＣ) 天城 望 (著), 福留 しゅん (その他) KADOKAWA 2022-06-17 (Release 2022-06-17) Kindle版 B0B33Z9F22 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ラノベのほうは展開のスピード感があって面白かったが，絵がつくとまた違うねぇ。\nreviewed by Spiegel on 2022-06-17 (powered by PA-APIv5)\n悪役令嬢になんかなりません。私は『普通』の公爵令嬢です！ 11 (カドカワBOOKS) 明。 (著), 秋咲 りお (イラスト) KADOKAWA 2023-01-10 (Release 2023-01-10) Kindle版 B0BQH9LFC8 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついに最終巻！ って，後日談は書かないのかな？\nreviewed by Spiegel on 2023-01-21 (powered by PA-APIv5)\n読解力はまた別の話。『AI vs. 教科書が読めない子どもたち』によると「読書の好き嫌い、科目の得意不得意、1日のスマートフォンの利用時間や学習時間などの自己申告結果と基礎的読解力には相関はない」らしい。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n私は帰郷時に殆どの紙の本と本棚を捨てたので，紙の本を買うのは割と最後の手段。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nうろ覚えで申し訳ないが「文芸作品」の定義は「文芸雑誌に載っている作品」で「文芸雑誌」の定義は「文芸作品を集めた雑誌」とかだった気がする。なにその循環参照って思ったことがある。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "心筋シンチ キメてきたぜ！",
      "section": "remark",
      "description": "絶食状態で自転車漕ぎは腹減る",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/01/stress-myocardial-scintigraphy/",
      "published": "2023-01-19T10:24:32+00:00",
      "update": "2023-01-19T12:36:26+00:00",
      "content": "2023年1月某日 前夜 明日は「負荷心筋シンチグラフィ（stress myocardial scintigraphy）」検査を行うということで，21時以降は絶食になっている。 水はOK。 カフェイン（を含む）飲料はNG。 まぁ，今は「カフェインの摂取は控えるように」と言われているため，コーヒーやお茶類は飲まないようにしている（ノンカフェインのルイボスティ茶や麦茶は飲んでる）。なので特に問題はない。\n2023年1月某日 朝食 \u0026hellip;は抜きで，糖尿病の薬以外を服用1 して来院。 公共交通機関の関係で30分くらい早く着いたが，そのまま前倒しで RI 室に入った。\n手順としてはエアロバイクに乗り，ケイデンス 50〜60rpm を維持しつつ，1分毎に負荷を 15W ずつ上げていく。 負荷の最大は 120W までだが，心臓や脚がしんどくなったらその時点で RI (Radio Isotope) 薬剤を投入。 その後，時間を置いて心臓状態の測定を繰り返すというもの。\nこの薬剤がバカ高いそうで。 しかも保存が効かないものだから，ドタキャンしても料金を払わないといけないのよ。 検査の同意書とは別に「ドタキャンしてもお金払います」の同意書も書かされた。\n最初に薬剤を投入するための点滴針を挿すのだが，機器の位置関係の問題で最初は左腕に挿そうとしたんだけど，左腕で2回失敗し，諦めて右腕に挿してもらった。 なんか私の左腕って静脈が細いらしく，血液も採りにくいし，点滴針も失敗しやすい。 心臓カテーテル検査のときも最初左腕で失敗して右腕に挿し直したんだよな。\n心電図の電極を付けて血圧測定用のカフを（点滴を挿してる腕とは反対の）上腕部に付けて，状態をモニタしながら運動開始。\nやっぱ病院にあるエアロバイクはいいなぁ。 うちにある簡易フィットネスバイクとは大違い（当たり前だ）。 できれば上限の 120W まで行きたかったが，その 120W でギブアップ。 心臓はまだ大丈夫そうだが筋力ががが。 立ち漕ぎ（ダンシング）で体重をかけながら漕ぐなら続けられそうだったけど，そういう運動じゃないから（笑） 結局，ひとつ手前の 105W を維持しつつ薬剤を投入した。 その後，クールダウンを1分おこない，点滴針を抜いて一旦終了。\nここでやっと朝食。 院内のローソンでサンドイッチと水を買ってモグモグタイム（まだカフェインはNG）。 糖尿病の薬も飲んだ。\n時間が来たので RI 室に戻って測定開始。 心臓にある RI の量をカメラで撮影するらしい。 レントゲンや超音波エコーみたいに息を止めたりしなくていいそうで，仰向けに寝転がって身体を固定し，カメラをぐるぐる回しながら，20分ほどかけて撮影しているようだが，こんなん寝るっちうねん。 というわけで，ウトウトしてるうちに終了。\nそこからしばらく休憩。 あらかじめ手順は聞いてたので， Kindle 端末を持ち込んで読書タイム。\n時間が来たので RI 室に戻って，もう一度薬剤を投入する（2,3時間で効き目がなくなるらしい）。 もう左腕は使えないので，右腕のさっき点滴針を挿したところの近くにもう一度針を挿して薬剤を入れた。 今日一日で両腕が穴だらけ（笑）\nそういえば，点滴針を挿すときは研修医の方が処置されていた。 微妙に緊張してる感じで，こっちも緊張が伝搬する（笑） こういうのって，やっぱ場数なんだろうなぁ。\n次の測定までに昼飯をいただくことに（しかもカフェインOK）。 折角なので最上階にあるレストランへ。 日替わりの松花堂定食をいただきました。\n病院最上階にあるレストランで昼食 | Flickr 松花堂？ まぁ，いいや。 食後しばらく読書に耽り，時間が来たらまた RI 室に戻って撮影と称して20分程うたた寝。\nという感じで測定を繰り返して終了。 いざお会計へ。\nブビッ！ 鼻水出そうになった。 確かに高いわ，これ。 それでいて高額医療費の減免対象以下のお値段。 自己負担分でこの値段なら総額で 100K JPY 越える？ 余分にお金下ろしておいてよかった（カードでも払えるが，私は現金で払えるものは現金で払う主義）。\n結果は翌週のお楽しみ！\nブックマーク 心筋シンチグラフィ検査とは｜病気の検査法を調べる - 医療総合QLife 参考 STEADY フィットネスバイク 【 Designed in Japan 独自開発の非接触式airホイール®︎ / 静音 / 専用モニター ( 心拍数 / 距離 / カロリー / スピード ) 折りたたみ 】ST102 負荷8段階 タブレットホルダー (2.ブラック（背もたれなし）) B08FZTLQG3 (ASIN), 4580559833602 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 決め手は省スペース。ただし，サドルが幅広で乗りにくいのとペダルがサドルよりかなり前方にあるせいで自転車のようには漕げない。ガチでペダリングの訓練がしたいならおすすめできない，けどまぁ心臓リハビリ用だし，と割り切れば悪くないと思う。\nreviewed by Spiegel on 2023-01-06 (powered by PA-APIv5)\n異世界に転移したら山の中だった。反動で強さよりも快適さを選びました。10 (ツギクルブックス) じゃがバター (著), 岩崎 美奈子 (イラスト) ツギクル 2023-01-06 (Release 2023-01-10) Kindle版 B0BPRQ5W7F (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついに10巻突入！ 安定の面白さ。負けるな，ハウロンおじいちゃん（笑）\nreviewed by Spiegel on 2023-01-19 (powered by PA-APIv5)\n飯抜きで糖尿病の薬を飲むと低血糖になるので飲まないよう指導された。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "今年の恵方を取得する",
      "section": "golang",
      "description": "koyomi パッケージに追加した",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/favourable-direction/",
      "published": "2023-01-14T07:21:26+00:00",
      "update": "2023-01-14T09:49:21+00:00",
      "content": "正月気分も終わり，近所のスーパーとかで節分グッズが並ぶようになって「そういや今年の恵方はどっちだっけ？」と思って調べてみた。\nどうやら，その年の十干で恵方が決定するらしい。\nvia File:Ehou-direction.png - Wikimedia Commons って，4方向を十干で分けるのか。 中途半端やなぁ。\nまぁ，でも，その年の十干が分かれば恵方も分かるわけだ。 拙作の github.com/goark/koyomi パッケージにオマケで十干十二支を数え上げる機能を付けているのだが，これに恵方を取得する機能を追加してみた。\nこんな感じ。\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;github.com/goark/koyomi/zodiac\u0026#34; ) func main() { year := 2023 干, 支 := zodiac.ZodiacYearNumber(year) fmt.Printf(\u0026#34;%d年は%v%v，恵方は%v (%v°)\u0026#34;, year, 干, 支, 干.DirectionJp(), 干.Direction()) } これを実行すると\n2023年は癸卯，恵方は南南東微南 (165°) と出力される。\nというわけで，2023年はだいたい南南東を向いてモグモグすればいいらいい。\nこの「恵方」というのはその年の歳神様のおられる方位で，居住地から見て恵方にあたる社寺に詣ることを「恵方詣り」と言うらしいのだが，明治以降の鉄道の発達で長距離移動が容易になり，方位に依存する「恵方詣り」が廃れ，代わりに「初詣」が主流になっていったとのこと。 その一方で，節分の「恵方巻き」みたいな文化が平成以降に台頭してくるのは面白い。\nブックマーク 食卓の縁起に関する研究 I　－恵方巻の受容とその背景－ 恵方の方角！2023年はどっち？恵方の決め方も具体的に解説！ | いい日本再発見\n歳徳神 - Wikipedia\n節分どうでしょう\n参考図書 鉄道が変えた社寺参詣 (交通新聞社新書) 平山昇 (著) 交通新聞社 2012-10-15 (Release 2015-12-07) Kindle版 B0191845R0 (ASIN) 面白そうなのでポチってみた。これから読む。\nreviewed by Spiegel on 2023-01-14 (powered by PA-APIv5)\nプログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n実用 Go言語 ―システム開発の現場で知っておきたいアドバイス 渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著) オライリージャパン 2022-04-22 単行本（ソフトカバー） 4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元のデジタル版を購入。 Go で躓きやすい点を解説していくのが最初の動機らしい。「◯◯するには」を調べる際にこの本を調べるといいかも。\nreviewed by Spiegel on 2022-10-26 (powered by PA-APIv5)\n"
    },
    {
      "title": "Go 1.19.5 のリリース",
      "section": "release",
      "description": "セキュリティ・アップデートはなし。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/01/go-1_19_5-is-released/",
      "published": "2023-01-13T00:07:56+00:00",
      "update": "2023-01-13T00:08:11+00:00",
      "content": "Go 1.19.5 がリリースされた。\nGo 1.19.5 and Go 1.18.10 are released 今回はセキュリティ・アップデートはなし。\ngo1.19.5 (released 2023-01-10) includes fixes to the compiler, the linker, and the crypto/x509, net/http, sync/atomic, and syscall packages. See the Go 1.19.5 milestone on our issue tracker for details. via Release History - The Go Programming Language 例によって Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.19.5.linux-amd64.tar.gz）を取ってきてインストールすることを推奨する。 以下は完全手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://go.dev/dl/go1.19.5.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.19.5.linux-amd64.tar.gz $ sudo mv go go1.19.5 $ sudo ln -s go1.19.5 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.19.5 linux/amd64 Windows はインストールパッケージを取ってきて直接インストールする。 Scoop 経由でも OK\nアップデートは計画的に。\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n実用 Go言語 ―システム開発の現場で知っておきたいアドバイス 渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著) オライリージャパン 2022-04-22 単行本（ソフトカバー） 4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元のデジタル版を購入。 Go で躓きやすい点を解説していくのが最初の動機らしい。「◯◯するには」を調べる際にこの本を調べるといいかも。\nreviewed by Spiegel on 2022-10-26 (powered by PA-APIv5)\n"
    }
  ]
}
