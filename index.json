{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "「顔認識」に関するブックマーク",
      "section": "remark",
      "description": "というわけで，玩具箱をひっくり返して過去にチェックした記事を探してみた。随時更新予定。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/facial-recognition-system/",
      "published": "2020-06-20T04:17:21+00:00",
      "update": "2020-06-20T04:45:51+00:00",
      "content": "今回は「顔認識（facial recognition）」の話。\n昨年からネット世捨て人みたいな生活をしているせいか世事に疎くなりまして\n IBMが顔認識技術から撤退、CEOは偏向と不平等の廃絶を訴える | TechCrunch Japan  という記事を見ても「言い訳はともかく，要するに IBM は競争に負けたんだなぁ」くらいの感想しかなかったのだが， yomoyomo さんの\n 人種差別に抗議を表明するGoogleは、その検索エンジンで人種差別を強化している？ - YAMDAS現更新履歴  を読んで，そう単純な話じゃないと今更ながらに気がついた orz\nというわけで，玩具箱 (ブックマーク集) をひっくり返して過去にチェックした記事を探してみた。\n パトカーから顔を認識できる「監視ツール」が米国で導入される？｜WIRED.jp Facebookの顔認識データ収集めぐり新たなプライバシー訴訟 - CNET Japan 顔認識がアジア系男性を「目が開いてない」と拒絶 ニュージーランド | 秋元@サイボウズラボ・プログラマー・ブログ Amazonの株主たちが顔認識技術を法執行機関に売らないことを要請 | TechCrunch Japan  Amazon株主が政府への顔認識技術提供の禁止を求める提案を否決 | TechCrunch Japan Amazonに顔認証技術の政府提供禁止を求める案は大差で否決されていた | TechCrunch Japan   MIT Tech Review: ニューヨークの顔認識実験が大失敗、成功率はまさかのゼロ サンフランシスコ市、市当局による監視技術導入を監視し、顔認識技術の使用を禁止へ – P2Pとかその辺のお話R 警察用ボディーカメラのメーカーが顔認識を「使用しない」ことを決断 | TechCrunch Japan MIT Tech Review: ロンドン警察の顔認識システム、8割が「誤り」＝初の第三者評価で EU、顔認識技術の「無差別利用」に規制を検討か - ZDNet Japan  MIT Tech Review: EU、顔認識技術の一時使用禁止を検討 グーグルとMS、欧州での顔認識技術の一時利用禁止の議論めぐり異なる見解 - ZDNet Japan   40もの主要音楽フェスが顔認識技術を採用しないことを誓約 - YAMDAS現更新履歴 Clearview AI and Facial Recognition - Schneier on Security  ブログ: Clearview AIと顔認識   MIT Tech Review: 顔認識にさらなる逆風、米プライバシー団体などが一時禁止を訴え Facial Recognition for People Wearing Masks - Schneier on Security 秘匿性の高いメッセージングアプリ「Signal」に顔をぼかす機能が加わる | TechCrunch Japan マイクロソフト、連邦法の規制なく顔認識技術を警察に売らないと再表明 - ZDNet Japan マイクロソフトは顔認識技術を米麻薬取締局に販売しようとしていた | TechCrunch Japan  最後の「マイクロソフトは顔認識技術を米麻薬取締局に販売しようとしていた」は最近の流れが分かりやすく説明されているのでオススメ。\n監視資本主義時代の自己防衛 だからというわけでもないが，せめて EFF の以下のサイトをご覧になることを強く推奨する。 最近の Zoom を巡るセキュリティ・プライバシー騒動に対しても参考になるだろう。\n Surveillance Self-Defense | Tips, Tools and How-tos for Safer Online Communications  追加のブックマーク 以後，関連する記事を見かけたら，随時ここに追記する。\n参考図書  超監視社会 ブルース・シュナイアー (著), 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) Kindle版 B01MZGVHOA (ASIN)  実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by PA-APIv5)\n "
    },
    {
      "title": "2020-06-20 のブックマーク",
      "section": "bookmarks",
      "description": "「日本全国で部分日食（2020年6月）」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/06/20-bookmarks/",
      "published": "2020-06-20T04:07:24+00:00",
      "update": "2020-06-20T04:10:52+00:00",
      "content": "リリース情報  Release Release v5.8.8 · mattn/jvgrep · GitHub Ubuntu 20.04 その86 - Ubuntu 20.04.1 LTSのリリース日変更 - kledgeb Announcing Rust 1.44.1 | Rust Blog  セキュリティ＆プライバシー関連  厚労省、新型コロナ陽性者との接触を通知するアプリを開発\u0026ndash;6月中旬にリリースへ - CNET Japan  コロナウイルス接触追跡アプリ解析（オンライン） - connpass   Ripple20 - JSOF  数億台以上の電化製品にひそむ脆弱性「Ripple20」が発見される - GIGAZINE   Bank Card \u0026ldquo;Master Key\u0026rdquo; Stolen - Schneier on Security 人種差別に抗議を表明するGoogleは、その検索エンジンで人種差別を強化している？ - YAMDAS現更新履歴  政治的対立を生むGoogle検索、そのアルゴリズムが抱える根深い問題 | WIRED.jp   主催者側から参加者全員にミュートの解除要請 ～ビデオ会議アプリ「Zoom」v5.1.0が公開 - 窓の杜 End-to-End Encryption Update - Zoom Blog  Zoom Will Be End-to-End Encrypted for All Users - Schneier on Security Zoom、エンドツーエンド暗号化を無料ユーザーにも提供へ - ZDNet Japan Zoom無料ユーザーにもエンドツーエンド暗号化を提供へ | TechCrunch Japan   Jitsi Meet Secure Messaging Scorecard | Electronic Frontier Foundation : \u0026ldquo;OUT OF DATE \u0026ndash; FOR ARCHIVAL PURPOSES ONLY\u0026rdquo;  Surveillance Self-Defense | Tips, Tools and How-tos for Safer Online Communications   AWS、2.3TbpsのDDoS攻撃を2月に緩和\u0026ndash;「AWS Shield」レポート - ZDNet Japan AMD製CPUのファームウェア「AGESA」にOSも防御不能な脆弱性 ～任意のコードが実行される恐れ - 窓の杜 「Windows 10 バージョン 2004」は慎重に展開 ～配信を制御する機械学習プロセスが始動 - 窓の杜 電子署名サービスを今夏提供へ\u0026ndash;ドロップボックスが2020年の事業戦略 - ZDNet Japan Where is the DNS Headed? - ISP Column - June 2020  ブログ: DNSはどこに向かっているのか?    天文関連  2020年6月12日ニュース「小惑星『りゅうぐう』に極めて多くの炭素 はやぶさ2が観測」 | SciencePortal 日本全国で部分日食（2020年6月） | 国立天文台(NAOJ)  ［特設ページ］部分日食（2020年6月21日） | 国立天文台(NAOJ)   New Horizons Conducts the First Interstellar Parallax Experiment | NASA インターステラの民間宇宙ロケット「モモ5号機」が宇宙到達前にエンジン停止 | TechCrunch Japan IBEX Charts 11 Years of Change at Boundary to Interstellar Space | NASA  As Solar Wind Blows, Our Heliosphere Balloons | NASA ボイジャーが離脱した太陽圏は球形ではなく、やはり彗星のような形か | sorae 宇宙へのポータルサイト   冥王星の大気の崩壊が急速に進行している可能性を示唆 －星を隠す瞬間の観測によって初解明－ — 京都大学 News - Research sheds new light on intelligent life existing across the Galaxy - University of Nottingham  天の川銀河には高度な文明が36以上存在している可能性 | sorae 宇宙へのポータルサイト   ESA Science \u0026amp; Technology - Solar Orbiter makes first close approach to the Sun ニュース - 電波望遠鏡で見た赤色超巨星アンタレスの大気 - アルマ望遠鏡 小惑星「リュウグウ」が大量の有機物からなる可能性を示唆　「はやぶさ２」タッチダウン時に巻き上がった破片の色から推定 - 国立大学法人 岡山大学  大量の有機物からなる小惑星「リュウグウ」 — 「はやぶさ２」のタッチダウン時に巻き上がった破片から推定できる有機物量   A Cosmic Baby Is Discovered, and It\u0026rsquo;s Brilliant | NASA : 生まれたばかり（240年）の magnetarが発見される。 Magnetar というのは強い磁力を持った中性子星のことらしい  知財関連  インターネットアーカイブが無料の電子書籍プログラムを前倒しで終了、出版社からの訴訟を受け | TechCrunch Japan ジョン・クリーズ『フォルティ・タワーズ』の（一時的な）取り下げにポリコレの行き過ぎを憂う - YAMDAS現更新履歴 Netflix Is Less Annoying to VPN Users Now, But Some Titles Are \u0026lsquo;Hidden\u0026rsquo; * TorrentFreak  Linux または Ubuntu に関する話題  【Ubuntu】IPv6対応アーカイブミラーに切り替えてパッケージの更新を高速化！ | LFI Ubuntu 20.04 その81 - Ubuntu認定デバイスとCanonicalの取り組み - kledgeb Ubuntu 20.04 その84 - あなたのUbuntuライフをもっと楽しくするSnapアプリ15選 - kledgeb  その他  プログラミング言語「Dart」が“null安全”に ～テクニカルプレビュー版がリリース - 窓の杜 ソフトウェアテストの実行を機械学習で効率化する。Jenkins作者の川口氏が立ち上げた「Launchable」で実現しようとしていることとは（前編） － Publickey  ソフトウェアテストの実行を機械学習で効率化する。Jenkins作者の川口氏が立ち上げた「Launchable」で実現しようとしていることとは（後編） － Publickey   Q. プリキュア名でしりとりをしたとき、最大で何人登場するか？ - Qiita 2020年6月15日ニュース「政府、『気候危機』を指摘し社会変革求める環境白書を決定」 | SciencePortal 青空文庫スピーカー - Qiita 1万円のLinux搭載2-in-1タブレットPC「PineTab」販売開始！ : 高い orz 高精度で注目の機械翻訳「DeepL」が日本で月額750円からの有料サービス開始、API利用も可能 | TechCrunch Japan  “DeepL Pro”が日本でも開始 ～高品質なAI翻訳サービス“DeepL”の有償版 - 窓の杜   量子コンピューターのための新高水準プログラミング言語Silq | TechCrunch Japan Windows Terminal、バージョン2.0に至る今後1年間のロードマップを公開。設定用UIやポップアップメニュー、タブの切り離しなど － Publickey ライブ配信ウェブアプリケーション「ImageFlux Live App」提供開始のお知らせ | さくらインターネット Makuake｜若手蔵人達の挑戦！幻のきょうかい8号酵母を使用した日本酒『eight knot』｜マクアケ - クラウドファンディング 「パケットの設計から見るQUIC」の訂正 - あどけない話 少しだけお手伝いした矢吹太朗『Webのしくみ Webをいかすための12の道具』（サイエンス社）が来月刊行される - YAMDAS現更新履歴 中国のゲイ専門デートアプリ「Blued」がNASDAQにIPO申請 | TechCrunch Japan Kubernetesを自動車に載せる、デンソーが「Misaki」を発表。年内にもオープンソースとして公開 － Publickey 2020年6月18日ニュース「超好熱古細菌のRNA、1塩基レベルで識別 難病の治療に道」 | SciencePortal 「Google Meet」が「Gmail」モバイルアプリで利用可能に - ZDNet Japan COVID-19: The T Cell Story - Articles  ブログ: COVID-19: T細胞の話   継続的デリバリを実現するツールは何がおすすめ？「CNCF Technology Radar」が公開 － Publickey 『転生したらスプレッドシートだった件』 ガチの技術系出版社から発売 - KAI-YOU.net  "
    },
    {
      "title": "次期 Go 言語で導入される総称型について予習する（その2）",
      "section": "golang",
      "description": "総称型について仕様が変わったらしい。早ければ2021年8月のリリースでお披露目されるかもしれないとのこと。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/generics-in-go-2-update/",
      "published": "2020-06-17T07:33:04+00:00",
      "update": "2020-06-18T01:13:36+00:00",
      "content": "以前書いた\n 次期 Go 言語で導入される（かもしれない）総称型について予習する  に関して，仕様が変わったらしい。\n The Next Step for Generics - The Go Blog Type Parameters - Draft Design  そこで，これまでのおさらいと変更点について簡単に紹介する。\n「総称型」のおさらい 次期 Go 言語で導入される「総称型（generics）」について，これまで提案されていた仕様は以下の通り。\ncontract ordered(t T) { t \u0026lt; t } func Max(type T ordered)(x, y T) T { if x \u0026lt; y { return y } return x } Max() 関数の (type T ordered) の部分が「型パラメータ（type parameter）」で，これによって型 T が総称型であることを示す。 また ordered は「型コントラクト（type contract）」と呼ばれ，総称型に対する制約（constraint）として機能している。\n制約の定義 新しい提案では，型コントラクトを捨て，制約の定義を以下のように変更する。\ntype ordered interface { type int, int8, int16, int32, int64, uint, uint8, uint16, uint32, uint64, uintptr, float32, float64, string }  func Max(type T ordered)(x, y T) T { if x \u0026lt; y { return y } return x } 以前の型コントラクトとの違いは 既存のキーワードがそのまま使える ことである。 文法も interface 型の宣言とほぼ同じだが type int, int8, ... といった感じに型の列挙ができる点がこれまでと異なる。\nこれにより，制約 ordered を満たす型であれば\nfunc main() { fmt.Println(Max(Max(1, 2), 3)) //Output: 3  fmt.Printf(\u0026#34;%#U\\n\u0026#34;, Max(Max(\u0026#39;あ\u0026#39;, \u0026#39;い\u0026#39;), 0)) //Output: U+3044 \u0026#39;い\u0026#39; } などと記述できる。\nなお，これまでの interface 型も制約として使える。 たとえば，こんな感じ。\nfunc SayError(type E error)(e E) string { return e.Error() } func main() { fmt.Println(SayError(io.EOF)) //Output: EOF } 更に interface 型を入れ子にすることで複雑な制約条件を構成することもできる。\n注入するか単態化するか ところで先程の\nfunc SayError(type E error)(e E) string { return e.Error() } は，わざわざ総称型を使わなくとも今までの書き方で\nfunc SayError(e error) string { return e.Error() } としても見た目の結果は同じになる。\nしかし，今までの書き方が実行時に動的ディスパッチを行う「依存の注入（depencency injection）」であるのに対し，総称型を使った記述はコンパイル時に型ごとに別々の関数として展開される。 これを「単態化（monomorphization）」と呼ぶ。\n依存の注入と単態化ではリソース管理の戦略がまるで異なる。\nたとえば上述の SayError() 関数を総称型で記述するのは，どう考えても効率が悪い。 error に包摂される型は必要に応じていくらでも定義可能であり，それらの型ごとに単態化されるなどぞんぞがさばる。\n逆に Max() 関数なんかは，基本型の振る舞いを interface で括るのが難しいこともあり，コストの高い float64 型の math.Max() くらいしか標準では実装されてなかったりする。 こういったものを総称型で記述できるようになれば（OAOO 原則の観点から考えても）コード管理しやすくなるだろう。\n「Go プログラマは息をするように依存を注入する」。 他のプログラミング言語が総称型で書いているかなりの部分を依存の注入で簡単に纏めてしまえるのが Go 言語の強みであるが，使える道具は多いに越したことはない。\nGo 2 Playground 次期 Go 言語用に新しい Playground が公開されている。\n https://go2goplay.golang.org/  総称型についてもここで色々と試せるようなので，遊びに行ってみてはいかがだろうか。\n早ければ Go 1.17 でお披露目？ だいぶ仕様が固まってきた総称型であるが，早ければ2021年8月にリリース予定の Go 1.17 でお披露目されるかもしれないとのこと。\nたのしみ！\nブックマーク  Why no max/min function for integer in GoLang | Pixelstech.net それは Duck Typing ぢゃない（らしい）  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "#golang Unicode パッケージの脆弱性",
      "section": "release",
      "description": "golang.org/x/text/encoding/unicode パッケージで脆弱性が見つかった模様。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/06/vulnerability-in-golang-unicode-package/",
      "published": "2020-06-17T01:34:55+00:00",
      "update": "2020-06-17T01:35:26+00:00",
      "content": "golang.org/x/text/encoding/unicode パッケージで脆弱性が見つかった模様。\nVersion v0.3.3 of golang.org/x/text fixes a vulnerability in the golang.org/x/text/encoding/unicode package which could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory.\nAn attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String.\n via [security] Vulnerability in golang.org/x/text/encoding/unicode  というわけで，件のパッケージを使って UTF-16 符号化・復号化の操作を行っている場合は最新バージョンのパッケージに差し替えること。 とりあえず go.mod ファイルを見て\nrequire golang.org/x/text v0.3.2 とか v0.3.3 未満になっている場合は\nrequire golang.org/x/text latest と最新版に書き換えてコンパイルし直せばいいだろう。\nCVE-2020-14040 未稿。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "2020-06-13 のブックマーク",
      "section": "bookmarks",
      "description": "「ISAS、公募型小型4号機にSolar-C（EUVST）を選定」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/06/13-bookmarks/",
      "published": "2020-06-13T02:18:08+00:00",
      "update": "2020-06-20T02:34:20+00:00",
      "content": "リリース情報  Release 1.48.0 · atom/atom · GitHub Release 1.46.0 · microsoft/vscode · GitHub  セキュリティ＆プライバシー関連  Mozilla、今後はV8の正規表現エンジンをFirefoxにそのまま取り込むと表明。そのための互換レイヤを開発 － Publickey プログラミング言語「Rust」、バージョン1.0のリリースから5年を経た今 - ZDNet Japan Google、MySQL/PostgreSQLでクロスリージョンのレプリカを実現する「cross-region replica for Cloud SQL」発表 － Publickey [Go]次世代イメージcimg/goとcircleci/go Orbsを使った2020年版CircleCIの環境構築 - My External Storage 完全準同型暗号を使いやすく\u0026ndash;IBMがツールキット公開 - ZDNet Japan 国内外の工場に影響したホンダへのサイバー攻撃についてまとめてみた - piyolog 「Firefox 79」からtarget=“_blank”なリンクの挙動が変更、より安全な仕様に - 窓の杜 IBMが顔認識技術から撤退、CEOは偏向と不平等の廃絶を訴える | TechCrunch Japan 米国土安全保障省がSMBの脆弱性を突くWindows 10のワーム化可能なバグを警告 | TechCrunch Japan 「IBM Cloud」で障害、世界規模で影響\u0026ndash;復旧中 - ZDNet Japan ブログ: Q\u0026amp;A: Web暗号のパイオニアが語る認証の未来 Plundering of crypto keys from ultrasecure SGX sends Intel scrambling again | Ars Technica  Another Intel Speculative Execution Vulnerability - Schneier on Security   Zoom、人権団体のアカウントを一時停止\u0026ndash;天安門事件の会議開催で - CNET Japan  Zoomが中国政府の要請で人権活動家のアカウントを一時停止したことを認める | TechCrunch Japan   英国に経済的、セキュリティ上の効果をもたらす、コンピュータ不正使用法の改正 - F-Secure 米国NISTが定めるIoT機器製造者向けセキュリティ指針と医療機器の関係性 (1/3) - MONOist（モノイスト）  天文関連  ISAS、公募型小型4号機にSolar-C（EUVST）を選定 | 宇宙科学研究所  日本の次期太陽観測衛星「Solar-C_EUVST」開発へ、2020年代中頃打ち上げ | マイナビニュース   「スペースからあげクン」正式に“宇宙日本食認証”｜ローソン公式サイト  知財関連  Man Who Sold Raspberry Pi Devices Modded to Receive Sky For Free Avoids Prison * TorrentFreak  その他  aozorablog » 青空文庫’20/04月-’20/05月の月間アクセス増率分析 Implementing HTTP/3 in Haskell - あどけない話 8月31日まで無料 ～カシオ、オンライン学習ツール“ClassPad.net”の日本語版を提供開始 - 窓の杜 2020年6月10日ニュース「北太平洋で『豊かな海』を育む仕組み解明 中層の栄養分が地形の影響で表層へ」 | SciencePortal Amazon S3のデータを直接検索できる「MongoDB Atlas Data Lake」正式リリース。データベースへの転送不要、MongoDBのクエリ言語を直接実行 － Publickey モバイルアプリ用プラットフォーム「MongoDB Realm」正式リリース。モバイルDB、リアルタイム同期、サーバレス、クラウドDBなどを統合 － Publickey さくらのレンタルサーバ　新機能「コンテンツブースト」提供開始のお知らせ | さくらインターネット The VS Code Go extension joins the Go project - The Go Blog  プログラミング言語「Go」のVisual Studio Code拡張機能がMicrosoftからGoプロジェクトへ移管 - 窓の杜   Cloudflareが「Cloudflare.tv」を開始、24時間365日のオンラインテレビ局。新型コロナ時代のテクノロジーカンファレンスとして － Publickey 2020年においてもオープンソースの持続可能性、そしてビジネスモデルは一筋縄にはいかない - YAMDAS現更新履歴 バーチャルリアリティー環境のパソコンでDOSを動かす……ってなんじゃそりゃ！ - YAMDAS現更新履歴 超便利。Markdownでグラフと数式の入った文書を簡単に書く（Atom + gnuplot/matplotlib）。 - Qiita  "
    },
    {
      "title": "「特別定額給付金」申請のナニがダメだったのか（その2）",
      "section": "remark",
      "description": "個人番号カードを使わせるとか余計なことは考えず，最初からちゃっちゃと郵送したほうが最終的にスムーズにいったのではないかと邪推してしまう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/bottleneck2/",
      "published": "2020-06-12T03:14:23+00:00",
      "update": "2020-06-12T11:31:19+00:00",
      "content": "一応「「特別定額給付金」申請のナニがダメだったのか」の続きだが，今回は完全に愚痴なので読まなくてもいいです。\nいや，この記事を見て嘲笑わずにはいられなかったのよ。\n 立憲民主党の蓮舫副代表が11日、参議院予算委員会で給付金のITシステムを巡る質問をした際に、「サーバーは増やすんじゃなくて、時代はもうクラウドなんですよ！」と断言した。しかし、クラウドもサーバーにあることに変わりはなく、他党の議員やネット民から「IT系弱すぎる」「知ったかぶり」などと失笑を買う事態になっている via 「クラウド蓮舫」国会質問でIT弱者ぶりが露見して失笑買う – アゴラ  まず絵面が完全に「ヤンキー集会」。 国会議員の方々，ホンマご苦労さまです（笑）\nあと「立憲民主党の蓮舫副代表」による「時代はもうクラウド」という発言。 そこだけ切り取ったら10年前の記事だと言われても疑わないね，私は（笑）\nそして「クラウドもサーバーにあることに変わりはなく」という的はずれな感想（？）\n与野党議員とメディアによる「三馬鹿トリオ」爆誕である！\nネット・サービスに於いて「可用性（availability）」がセキュリティ要件として重視されるのは，それが毀損されることによって「名目上の経済損失」が発生するからだ。 そして，いわゆる「クラウド（cloud）」の特徴である scalability を上手く使えば可用性リスクを抑制することが可能，というのがゼロ年代に持て囃された話だ。\nそういう意味では（オンプレミスから）クラウドへの移行は，今からでも悪い選択ではない。 いまやレンサバですら CDN は当たり前だしね。\n駄菓子菓子 (だがしかし) 。\n今回の「特別定額給付金」のオンライン申請に限れば可用性リスクはさして重要ではない。 理由は以下の3つ。\n 営利ではなく行政サービスなので可用性毀損による「名目上の経済損失」は発生しない 申請書の郵送が始まるまでの極短期サービス そもそも「個人番号カード」の所持率が低い（筈だったw）  まぁ，金くれるんなら一刻も早くってのは当然の心理だけど。 それで緊急事態下の役所窓口が大混乱するとか，個人番号カード所持や口座情報登録の義務化とか，まさに「泥棒を捕らえてから縄を綯う」の典型例だよな（笑）\n前回も書いたが，最大の障害（ボトルネック）は，サービスが落っこちたことではなく，申請後の受理作業が「人力」である点だろう。\n敢えて今回の件を総括するなら「サーバを増やす」でも「時代はクラウド」でも「個人番号カード所持や口座情報登録の義務化」でもなく「オンライン申請させないほうがよかった」だと思う。 個人番号カードを使わせるとか余計なことは考えず，最初からちゃっちゃと郵送したほうが最終的にスムーズにいったのではないかと邪推してしまう。\nもし個人番号やそれに紐づく住基データを使いたいのであれば，システム全体に渡って 人力を介さず 自動化するフレームワークを確立するところから始めるべきだろう。\nデジタル・データというのはそこにあるだけではダメで，データへのアクセス設計をセットにして初めて意味を持つ。 ダダ漏れが駄目なのは当たり前だが，闇雲に制限すればいいというものでもない。 個人情報保護法があろうとなかろうと，人力の力技なんか下の下である。 お金を使うところが間違っている。\n「公僕」とは言うけれど，お役人は奴隷じゃないのよ。 庶民もね。 今回のようなことを繰り返すのなら日本に「ブラック国家」の称号を与えよう（笑）\n参考図書  グーグル　ネット覇者の真実 スティーブン・レヴィ (著), 仲達志；池村千秋 (翻訳) CCCメディアハウス 2011-12-16 (Release 2012-08-31) Kindle版 B009LFBL4Y (ASIN)  そういえばこれ Kindle で買い直したのに途中まで読んでそのまま積ん読だったよ。ゼロ年代の Google を中心とした話なのでちょっと古びた感はあるが歴史書としては今でも通用するだろう。書評はこちらが参考になる。\nreviewed by Spiegel on 2018-12-11 (powered by PA-APIv5)\n  だがしかし（１） (少年サンデーコミックス) コトヤマ (著) 小学館 2014-09-18 (Release 2014-12-08) Kindle版 B00QAQEOSW (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  永遠の夏休み（笑）\nreviewed by Spiegel on 2020-06-12 (powered by PA-APIv5)\n "
    },
    {
      "title": "LuaLaTeX でも履歴書を書きたい！",
      "section": "remark",
      "description": "後方互換性が崩れるので pull request を投げていいか思案中。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/resume-with-lualatex/",
      "published": "2020-06-11T07:52:45+00:00",
      "update": "2020-06-11T07:53:01+00:00",
      "content": "2018年の記事で\n 履歴書スタイルファイル shigio/rireki-style: Style file for writing resume.  を紹介した。\nその後いろいろ試してみて，サンプルの rireki.tex の最初の\n\\documentclass{jarticle} \\usepackage{rireki} ... の部分を\n\\documentclass[b5j]{ltjsarticle} \\usepackage[deluxe,nfssonly]{luatexja-preset} \\usepackage{rireki} ... と書き換えれば一応 $\\mathrm{Lua\\LaTeX}$ でも通ることが分かったのだが，この状態では顔写真を\n\\顔写真{photo.jpg} と指定しても上手く貼り付けられない。\nしょうがないので rireki.sty を眺めていたら冒頭部分に\n\\usepackage[dvipdfmx]{graphicx} とか書かれていた。\nドライバが dvipdfmx 決め打ちか。 そりゃあ $\\mathrm{Lua\\LaTeX}$ で上手くいかんわな。\nそこで rireki.sty の graphicx パッケージの記述をコメントアウトして rireki.tex を\n\\documentclass[b5j]{ltjsarticle} \\usepackage[deluxe,nfssonly]{luatexja-preset} \\usepackage[luatex]{graphicx} \\usepackage{rireki} ... としたら1 問題なく顔写真を貼り付けられた。 これでますます $\\mathrm{p\\LaTeX}$/$\\mathrm{up\\LaTeX}$ は「要らない子」になるね（笑）\nなお，今回改変した rireki.sty を使って $\\mathrm{p\\LaTeX}$/$\\mathrm{up\\LaTeX}$ で処理する場合は\n\\documentclass[uplatex,b5j]{jsarticle} \\usepackage[dvipdfmx]{graphicx} \\usepackage{rireki} ... などとすればOK2。\nちなみに\n#!/usr/bin/env perl # LaTeX commands $pdflualatex = \u0026#39;lualatex %O -synctex=1 %S\u0026#39;; $latex = \u0026#39;uplatex %O -synctex=1 %S\u0026#39;; # Device Driver $dvipdf = \u0026#39;dvipdfmx %O -z9 -p jisb5 -V 7 -o %D %S\u0026#39;; # Typeset mode (generate a PDF) $pdf_mode = 4; # 0: do not generate a pdf , 1: using $pdflatex , 2: using $ps2pdf , 3: using $dvipdf , 4: using $pdflualatex という内容で .latexmkrc ファイルを作成すれば\n$pdf_mode = 3 で $\\mathrm{p\\LaTeX}$/$\\mathrm{up\\LaTeX}$ 用，\n$pdf_mode = 4 で $\\mathrm{Lua\\LaTeX}$ 用の設定になる。 あとは\n$ latexmk で *.tex ファイルを探して勝手に全部処理してくれる。\nところで，私が PDF 文書の紙出力に利用しているネットプリントが 2020-06-15 から値上げするらしいのだが。 今は求職活動で履歴書乱発中なんだよ。 とほほ orz\nブックマーク  pdfTeX による見開きPDFの結合・分割 - TeX Alchemist Online 西暦・元号対照表  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦 (著), 黒木 裕介 (著) 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-APIv5)\n   ドライバ指定を省略して \\usepackage{graphicx} でも可。 \u0026#x21a9;\u0026#xfe0e;\n 後方互換性が崩れるので pull request を投げていいか思案中。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "LuaLaTeX で PDF/A を構成する",
      "section": "remark",
      "description": "pdfx パッケージを使って PDF/A-2u を構成してみる。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/pdfa-with-luatex/",
      "published": "2020-06-08T15:14:11+00:00",
      "update": "2020-06-11T03:14:39+00:00",
      "content": "今回は $\\mathrm{Lua\\LaTeX}$ で PDF/A を構成してみる。\nPDF/A とは PDF/A とは自己完結性と永続性を考慮した PDF 構成で， ISO 19005 シリーズとして定義されている。 PDF/A の種別は大まかに\n PDF/A-1 : ISO 19005-1 (PDF 1.4 相当)  PDF/A-1a : PDF/A-1 レベルA PDF/A-1b : PDF/A-1 レベルB   PDF/A-2 : ISO 19005-2 (PDF 1.7 相当)  PDF/A-2a : PDF/A-2 レベルA PDF/A-2b : PDF/A-2 レベルB PDF/A-2u : PDF/A-2 レベルU   PDF/A-3 : ISO 19005-3 (PDF/A-2 拡張)  PDF/A-2a : PDF/A-2 レベルA PDF/A-2b : PDF/A-2 レベルB PDF/A-2u : PDF/A-2 レベルU    といった感じに分かれている。\nまず PDF/A-1 については\n カラーの再現性の保証 フォント埋め込み XMPメタデータの埋め込み  が要求され，逆に暗号化によるアクセス制限やコードの埋め込み等は禁止されている。\nPDF/A-2 では PDF/A 文書の添付や圧縮機能の一部などが許容されている。 更に PDF/A-3 では任意のドキュメント・データの埋め込みが許容されているが，さすがにこれは自己完結性の観点からは要らない機能と言えるだろう。\nこれらの条件に加えてレベルUでは ToUnicode CMap による Unicode 対応が要求され（テキスト抽出等に必要），最高レベルのAではタグによる論理構造の埋め込みも要求される。\n論理構造の埋め込みはちょっと辛いし（論理構造をきちんと設計するのは大変）そもそも今回使用する pdfx パッケージではレベルAの要求を完全には満たせないらしいので，レベルBまたはUの PDF/A を構成することを考える。\n最初の LuaLaTeX テキスト 手始めに以下の $\\mathrm{Lua\\LaTeX}$ テキストを用意してみる。\n\\documentclass{ltjsarticle} \\usepackage[deluxe,nfssonly]{luatexja-preset} \\renewcommand{\\emph}[1]{\\textsf{\\textgt{#1}}} % 強調をゴシック体と Sans Serif に変更する  \\title{\\emph{はじめてのLua\\TeX-ja}} \\author{Spiegel} \\date{2020-06-08} \\begin{document} \\maketitle \\section{はじめてのLua\\TeX-ja} ちゃんとLua\\TeX-jaで日本語が出るかな？ \\subsection{出たかな？} 長い文章を入力するとちゃんと右端のところで折り返されるかな？ 大丈夫そうな気がするけど．ちょっと不安だけど何事も挑戦だよね． \\end{document} これを処理した結果がこんな感じ。\n ちなみに pdfinfo で中身を見ると，こんな感じになっている1。\n$ pdfinfo sample.pdf Creator: TeX Producer: LuaTeX-1.12.0 CreationDate: Mon Jun 8 20:36:09 2020 JST ModDate: Mon Jun 8 20:36:09 2020 JST Tagged: no UserProperties: no Suspects: no Form: none JavaScript: no Pages: 1 Encrypted: no Page size: 595.276 x 841.89 pts (A4) Page rot: 0 File size: 26856 bytes Optimized: no PDF version: 1.5 PDF version が 1.5 である点に注目。\npdfx パッケージとメタデータの追加 PDF/A を構成するために pdfx パッケージとメタデータを追加する。 こんな感じ。\n% XMPメタデータ \\RequirePackage{filecontents} \\begin{filecontents*}{\\jobname.xmpdata} \\Title{はじめてのLuaTeX-ja} \\Subject{ちゃんとLuaTeX-jaで日本語が出るかな？} \\Author{Spiegel} \\end{filecontents*}  \\documentclass{ltjsarticle} \\usepackage[deluxe,nfssonly]{luatexja-preset} \\renewcommand{\\emph}[1]{\\textsf{\\textgt{#1}}} % 強調をゴシック体と Sans Serif に変更する  \\usepackage[a-2u]{pdfx} % PDF/A-2u を構成 \\pdfvariable omitcidset=1 % LuaTeX で PDF/A-2 を作る際に必要  \\title{\\emph{はじめてのLua\\TeX-ja}} \\author{Spiegel} \\date{2020-06-08} \\begin{document} ... XMPメタデータの指定を \\documentclass の前に記述するのがポイント。\nこれを処理して中身を見るとこんな感じになった。\n$ pdfinfo sample.pdf Title: はじめてのLuaTeX-ja Subject: ちゃんとLuaTeX-jaで日本語が出るかな？ Author: Spiegel Creator: LaTeX with hyperref Producer: LuaTeX CreationDate: Mon Jun 8 20:36:09 2020 JST ModDate: Mon Jun 8 20:36:09 2020 JST Tagged: no UserProperties: no Suspects: no Form: none JavaScript: no Pages: 1 Encrypted: no Page size: 595.276 x 841.89 pts (A4) Page rot: 0 File size: 40669 bytes Optimized: no PDF version: 1.4 PDF subtype: PDF/A-2u:2010 Title: ISO 19005 - Electronic document file format for long-term preservation (PDF/A) Abbreviation: PDF/A-2 Subtitle: Part 2: Use of ISO 32000-1 Standard: ISO 19005-2 Conformance: Level U, Unicode support Title, Subject, および Author のメタデータが追加され， PDF version が 1.4 の PDF/A-2u として構成されているのが分かる。\npdfx パッケージのオプション pdfx パッケージでは PDF/E や PDF/X 等も構成できるが，ここでは PDF/A のオプションに限って紹介しておく。\n   オプション 構成     a-1a PDF/A-1a : ただし不完全   a-1b PDF/A-1b   a-2a PDF/A-2a : ただし不完全   a-2b PDF/A-2b   a-2u PDF/A-2u   a-3a PDF/A-3a : ただし不完全   a-3b PDF/A-3b   a-3u PDF/A-3u    レベルAは使わないほうがいいだろう（笑） 一般的には最小構成の PDF/A-1b で十分なようだ。 ただし pdfx パッケージはレベルB指定でも ToUnicode CMap を埋め込んだままにするらしいので，今回のように，敢えて PDF/A-2u にする手もある。\npdfx パッケージで設定可能な XMP メタデータ項目 filecontents 環境\n\\begin{filecontents*}{\\jobname.xmpdata} ... \\end{filecontents*} 内に記述する XMP メタデータ項目のうち，主なものは以下の通り。\n   項目名 XMP 要素 備考     \\Author dc:creator \\sep で複数指定可能   \\Title dc:title    \\Language dc:language ja-JP など，\\sep で複数指定可能   \\Keywords dc:subject \\sep で複数指定可能   \\Publisher dc:publisher \\sep で複数指定可能   \\Subject dc:description     著作権情報を載せる場合には以下の項目も使える2。\n   項目名 XMP 要素 備考     \\Copyright dc:rights 利用規約等   \\CopyrightURL xmpRights:WebStatement    \\Copyrighted xmpRights:Marked 公有の場合は False をセットする   \\Owner xmpRights:Owner 著作権者が別にいる場合，\\sep で複数指定可能   \\CertificateURL xmpRights:Certificate    \\Date dc:date YYYY-MM-DD または YYYY-MM   \\Relation dc:relation    \\URLlink dc:identifier     その他，設定可能な項目については pdfx パッケージのドキュメントを参照のこと。\nなお filecontents 環境の内容は *.xmpdata ファイルに吐き出されるが，既にファイルがある場合は上書き保存されないため，メタデータを変更したらこのファイルを削除してから再処理する必要がある。 もし .latexmkrc ファイルでビルドの制御を行っているなら\n$clean_ext = \u0026#34;xmpdata\u0026#34;; の記述を追加することで\n$ latexmk -c コマンドで，他の一時ファイルと共に *.xmpdata ファイルも削除してくれる。\n実際に PDF ファイルに埋め込まれる XMP メタデータの内容は pdfa.xmpi に出力されているので参考になると思う。 また，すでに生成済みの PDF に対しては\n$ pdfinfo -meta sample.pdf で XMP メタデータを抽出できる。\n日本語の ToUnicode CMap はなくても大丈夫（らしい） レベルUの要件として PDF に ToUnicode CMap が埋め込まれている必要があるが，原ノ味フォントのような Adobe-Japan1 フォントについては例外のようだ。\n試しに pdf-rm-tuc コマンドで原ノ味フォントの ToUnicode CMap を削除してみる3。\n$ pdf-rm-tuc --newline-before-endstream sample.pdf sample-tuc.pdf PDF/A ドキュメントを処理する場合は --newline-before-endstream オプションが必須になるらしいので注意。\nこれで\n$ pdffonts sample-tuc.pdf name type encoding emb sub uni object ID ------------------------------------ ----------------- ---------------- --- --- --- --------- JKVWEI+LMRoman10-Regular CID Type 0C Identity-H yes yes yes 22 0 IECCEF+HaranoAjiMincho-Regular CID Type 0C Identity-H yes yes no 23 0 XKBUGM+LMSans17-Regular CID Type 0C Identity-H yes yes yes 24 0 JYWTWW+HaranoAjiGothic-Regular CID Type 0C Identity-H yes yes no 25 0 RHMEBC+LMRoman12-Regular CID Type 0C Identity-H yes yes yes 26 0 RHDCZK+LMSans12-Regular CID Type 0C Identity-H yes yes yes 27 0 $ pdfinfo sample-tuc.pdf Title: はじめてのLuaTeX-ja Subject: ちゃんとLuaTeX-jaで日本語が出るかな？ Author: Spiegel Creator: LaTeX with hyperref Producer: LuaTeX CreationDate: Mon Jun 8 20:36:09 2020 JST ModDate: Mon Jun 8 20:36:09 2020 JST Tagged: no UserProperties: no Suspects: no Form: none JavaScript: no Pages: 1 Encrypted: no Page size: 595.276 x 841.89 pts (A4) Page rot: 0 File size: 39154 bytes Optimized: no PDF version: 1.4 PDF subtype: PDF/A-2u:2010 Title: ISO 19005 - Electronic document file format for long-term preservation (PDF/A) Abbreviation: PDF/A-2 Subtitle: Part 2: Use of ISO 32000-1 Standard: ISO 19005-2 Conformance: Level U, Unicode support のように PDF/A-2u を維持しつつ原ノ味フォントの ToUnicode CMap を削除することができた。 念のため，この PDF ファイルを veraPDF で検査してみたが “PDF/A-2U validation profile” でちゃんとパスしたので本当に問題ないのだろう。\nさらに pdf-rm-tuc コマンドに --linearize および --object-streams=generate オプションを付けて実行すると\n$ pdf-rm-tuc --newline-before-endstream --linearize --object-streams=generate sample.pdf sample-tuc.pdf PDF version 1.5 のドキュメントとして出力される。\n$ pdfinfo sample-tuc.pdf Title: はじめてのLuaTeX-ja Subject: ちゃんとLuaTeX-jaで日本語が出るかな？ Author: Spiegel Creator: LaTeX with hyperref Producer: LuaTeX CreationDate: Mon Jun 8 20:36:09 2020 JST ModDate: Mon Jun 8 20:36:09 2020 JST Tagged: no UserProperties: no Suspects: no Form: none JavaScript: no Pages: 1 Encrypted: no Page size: 595.276 x 841.89 pts (A4) Page rot: 0 File size: 34742 bytes Optimized: yes PDF version: 1.5 PDF subtype: PDF/A-2u:2010 Title: ISO 19005 - Electronic document file format for long-term preservation (PDF/A) Abbreviation: PDF/A-2 Subtitle: Part 2: Use of ISO 32000-1 Standard: ISO 19005-2 Conformance: Level U, Unicode support よーし，うむうむ，よーし。\nブックマーク  PDF/Aとはなにか | アンテナハウス PDF資料室 PDF/A - Wikipedia  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦 (著), 黒木 裕介 (著) 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-APIv5)\n   pdfinfo および pdffonts は Poppler のコマンド。 Windows 版 TeX Live には既定で同梱されているらしい。他のプラットフォームについては「Poppler - TeX Wiki」を参考に導入すればいいだろう。 \u0026#x21a9;\u0026#xfe0e;\n 基本的に © マークや “Copyright” の文言は不要。その代わり著作（権）者名と公開年と許諾条件を表記するとよい（他のメタデータで代替できるのであればそれも不要だが）。 CC Licenses のようなライセンス・ツールを使うのであれば \\CopyrightURL 項目に（コモンズ証などの）許諾条件を記した Web ページの URL をセットすればよい。なお CC Licenses について詳しくは拙文「改訂3版： CC Licenses について」を参考にどうぞ。 PDF/A はアクセス制限を禁止するので CC Licenses と相性がいいよね♪ \u0026#x21a9;\u0026#xfe0e;\n pdf-rm-tuc コマンドの導入については拙文「LuaTeX で生成した PDF から ToUnicode CMap を除去する」を参考にどうぞ。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "LuaTeX で生成した PDF から ToUnicode CMap を除去する",
      "section": "remark",
      "description": "原ノ味フォントの作者が pdf-rm-tuc というツールを公開されている。ありがたや。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/06/remove-tounicode-cmap-from-pdf/",
      "published": "2020-06-08T08:31:44+00:00",
      "update": "2020-06-08T23:47:52+00:00",
      "content": "以前に紹介した原ノ味フォントだが， $\\mathrm{Lua\\LaTeX}$ で組版 \u0026amp; PDF 出力する際に Adobe-Identity-0 フォントとして埋め込まれてしまうそうで，フォントの性能を上手く活かしきれてないらしい。 しかも\n LuaTeX はフォントの cmap テーブルから逆変換で ToUnicode CMap を生成しているようで、縦書き用グリフを使った場合や異字体を使った場合など、テキスト抽出すると意図しない結果になることがあります via PDF から ToUnicode CMap を削除するツール  そこで原ノ味フォントの作者が pdf-rm-tuc というツールを公開されている。\n trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF  このツールを使うと\n PDF から原ノ味フォントの ToUnicode CMap を削除し、原ノ味フォントの ROS を Adobe-Identity-0 から 元の Adobe-Japan1-7 に変更します。 これによってテキスト抽出で意図しない結果になることを防げると考えています via PDF から ToUnicode CMap を削除するツール  更に言うと PDF ファイルのサイズがちょびっとだけ小さくなる。 ありがたや m(_ _)m\npdf-rm-tuc のビルドとインストール pdf-rm-tuc はソースコードのみの公開なので GCC を使って自前でビルドする必要がある1。 ここでは Ubuntu プラットフォームを前提に紹介する。\n事前準備 たまに GCC が入ってないことがあるので，入ってなければ APT でインストールしておく。\n$ sudo apt install build-essential 更に pdf-rm-tuc の GitHub リポジトリを clone して直接ビルドする場合は Autoconf および Automake が必要になる。 もし入ってなければ，これもインストールしておこう。\n$ sudo apt install autoconf automake 更に更にビルドの際に libqpdf が必要らしいので，これもインストールしておく。\n$ sudo apt install libqpdf-dev これで準備完了。\nビルドとインストール では，ビルドからインストールまで一気にやってしまおう。\n$ git clone https://github.com/trueroad/pdf-rm-tuc.git $ cd pdf-rm-tuc $ ./autogen.sh $ mkdir build $ cd build $ ../configure $ make $ make check # TeX Live 2020 が導入済みであること $ sudo make install $ pdf-rm-tuc -V Remove ToUnicode CMap from PDF 1.0.0 Copyright (C) 2019 Masamichi Hosoda. All rights reserved. License: BSD-2-Clause https://github.com/trueroad/pdf-rm-tuc インストールが成功すれば pdf-rm-tuc コマンドが以下に置かれる。\n$ which pdf-rm-tuc /usr/local/bin/pdf-rm-tuc pdf-rm-tuc を試してみる 入力テキストは以下の通り。 TeX Live 2020 が導入されていることが前提ね。\n\\documentclass{ltjsarticle} \\usepackage[deluxe]{luatexja-preset} \\usepackage{luatexja-otf} \\begin{document} {\\mcfamily\\ltseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・細字）}\\par {\\mcfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・中字）}\\par {\\mcfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・太字）}\\par {\\gtfamily ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・中字）}\\par {\\gtfamily\\bfseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・太字）}\\par {\\gtfamily\\ebseries ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・極太）} \\end{document} これを組版すると以下のような結果になる。\n このときのフォント情報はこんな風になっている2。\n$ pdffonts lualatex-sample.pdf name type encoding emb sub uni object ID ------------------------------------ ----------------- ---------------- --- --- --- --------- OLUZKZ+HaranoAjiMincho-Light CID Type 0C Identity-H yes yes yes 4 0 PTNBJH+HaranoAjiMincho-Regular CID Type 0C Identity-H yes yes yes 5 0 BMAPJQ+HaranoAjiMincho-Bold CID Type 0C Identity-H yes yes yes 6 0 HOSFGF+HaranoAjiGothic-Regular CID Type 0C Identity-H yes yes yes 7 0 ULINFN+HaranoAjiGothic-Bold CID Type 0C Identity-H yes yes yes 8 0 PJPUYK+HaranoAjiGothic-Heavy CID Type 0C Identity-H yes yes yes 9 0 JFRMQG+LMRoman10-Regular CID Type 0C Identity-H yes yes yes 10 0 uni の項目が ToUnicode CMap の有無を示すもので，原ノ味フォントの全てに ToUnicode CMap があるのが分かる。\nでは pdf-rm-tuc を実行してみよう。\n$ pdf-rm-tuc lualatex-sample.pdf lualatex-sample-notuc.pdf 実行結果は以下の通り。\n$ pdffonts lualatex-sample-notuc.pdf name type encoding emb sub uni object ID ------------------------------------ ----------------- ---------------- --- --- --- --------- JFRMQG+LMRoman10-Regular CID Type 0C Identity-H yes yes yes 10 0 PTNBJH+HaranoAjiMincho-Regular CID Type 0C Identity-H yes yes no 5 0 OLUZKZ+HaranoAjiMincho-Light CID Type 0C Identity-H yes yes no 4 0 BMAPJQ+HaranoAjiMincho-Bold CID Type 0C Identity-H yes yes no 6 0 HOSFGF+HaranoAjiGothic-Regular CID Type 0C Identity-H yes yes no 7 0 ULINFN+HaranoAjiGothic-Bold CID Type 0C Identity-H yes yes no 8 0 PJPUYK+HaranoAjiGothic-Heavy CID Type 0C Identity-H yes yes no 9 0 原ノ味フォントの uni 項目が全て no になっていることが確認できた。 よーし，うむうむ，よーし。\n注意事項  $\\mathrm{up\\LaTeX}$ 等で組版したものを dvipdfmx で PDF に出力する場合は Adobe-Japan1 フォントであれば ToUnicode CMap の生成・埋め込みはしないので pdf-rm-tuc は不要 PDF ビュア側で Adobe-Japan1-UCS2 等の ToUnicode CMap を持っていない場合は PDF 側の ToUnicode CMap を削除すると日本語のテキスト抽出が上手く行かないらしい。 Ubuntu に標準で入ってる Evince は画面から普通にコピペできたけど，大丈夫ってこと？ PDF/A を構成する場合，適合レベルによっては ToUnicode CMap を削除すると拙い場合があるのだが Adobe-Japan1 フォントについては例外らしい？ veraPDF 等の Validator で確認したほうがいいかも  ブックマーク  trueroad/tr-TeXConf2019: TeXConf 2019 一般講演「原ノ味フォントと ToUnicode CMap」関連資料  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦 (著), 黒木 裕介 (著) 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-APIv5)\n   Windows であれば MSYS2 等の環境が必要になるかもしれない。あるいは TeX Live ひっくるめて WSL2 に引っ越すか（笑） \u0026#x21a9;\u0026#xfe0e;\n pdffonts は Poppler のコマンドのひとつ。 Windows 版 TeX Live には既定で同梱されているらしい。他のプラットフォームについては「Poppler - TeX Wiki」を参考に導入すればいいだろう。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "2020-06-07 のブックマーク",
      "section": "bookmarks",
      "description": "「「屋根裏のバイテン」第2話」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/06/07-bookmarks/",
      "published": "2020-06-07T08:50:23+00:00",
      "update": "2020-06-13T02:20:11+00:00",
      "content": "リリース情報  URL rewrites in dev server | Hugo : Hugo 0.72.0 [ANNOUNCE] Git v2.27.0  Release Git for Windows 2.27.0 · git-for-windows/git · GitHub   Announcing Rust 1.44.0 | Rust Blog  バベルのインターネット  Facebook社員がバーチャルストを敢行、トランプ米大統領の投稿に対する会社の態度に抗議 | TechCrunch Japan Twitterが共和党議員の反ファシズムツイートを「暴力賛美」として制限表示に | TechCrunch Japan  セキュリティ＆プライバシー関連  (How) Do People Change Their Passwords After a Breach?   Password Changing After a Breach - Schneier on Security   Apple fixes bug that could have given hackers full access to user accounts | Ars Technica  Critical \u0026lsquo;Sign in with Apple\u0026rsquo; Bug Could Have Let Attackers Hijack Anyone\u0026rsquo;s Account \u0026ldquo;Sign in with Apple\u0026rdquo; Vulnerability - Schneier on Security   GitLab、セキュリティ演習で社員にフィッシングメールを送信。その内容と、20％が引っ掛かったことを公開 － Publickey Facebookが過去投稿を一括削除できるツールを発表、プライバシー管理を強化 | TechCrunch Japan Wallpaper image crashing Android phones  Wallpaper that Crashes Android Phones - Schneier on Security   Googleが「Remove China Apps」をPlay Storeから取り去る | TechCrunch Japan Zoom\u0026rsquo;s Commitment to User Security Depends on Whether you Pay It or Not - Schneier on Security  Bloomberg - Are you a robot?   お名前.com Naviの不具合によるCoincheckとbitbankのドメイン名ハイジャックについてまとめてみた - piyolog  セキュリティインシデントの報告書で信頼を高める——コインチェックの対応に学べ (1/2) - ITmedia エンタープライズ   VU#636397 - IP-in-IP protocol routes arbitrary traffic by default  PoC-Exploits/cve-2020-10136 at master · CERTCC/PoC-Exploits · GitHub IP-in-IPに対応したデバイスが悪用される問題あり、確認と対処を | マイナビニュース   新手のランサムウェアがWindowsとLinuxを攻撃、Javaイメージファイルを悪用 | TechCrunch Japan  Javaアプリケーション配布方法 ~jlink ランタイム作成~ | tyablog.net : JIMAGE について   国際標準と部品レベルの対応が急務になるIoT機器のセキュリティ対策のこれから - WirelessWire News（ワイヤレスワイヤーニュース） データセンターの電源故障の影響で起きた自治体サイト接続障害についてまとめてみた - piyolog  天文関連  宇宙空間でのCrew Dragonの手動操縦に初成功、同じ操縦をシミュレータで誰でも試せる | TechCrunch Japan Latest Poll Shows 2-1 Margin in Support of TMT on Maunakea | TMT International Observatory 1987年発見のアインシュタインリング、元になった天体までの距離が100億光年と判明 | sorae 宇宙へのポータルサイト  知財関連  Project Gutenberg Public Domain Library Blocked in Italy For Copyright Infringement * TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 20.04 その73 - Ubuntu/LinuxデスクトップOSの市場シェア拡大・LenovoがThinkPadとThinkStationにLinux認定モデルを追加 - kledgeb Ubuntu 20.04 その74 - UbuntuとUEFIセキュアブート - kledgeb  その他  Stack Overflowの調査によると、デベロッパーの5割以上が「フルスタック」エンジニアを自認。最も使われている言語はJavaScript、最も愛されている言語はRust － Publickey Red Hatが「Quarkus」の商用サポートを開始。JavaコードをコンパイルしてLinuxバイナリを生成、省メモリ高速起動でコンテナ環境に最適 － Publickey サイエンスクリップ「米有人宇宙船がISS到着、シャトル廃止以来9年ぶり悲願達成」| SciencePortal 現存する日本最古のカメラ雑誌「アサヒカメラ」が休刊に - デジカメ Watch Swift言語がAWS Lambdaで利用可能に。Swift開発チームが「Swift AWS Lambda Runtime」公開 － Publickey 巨大ブラックホールの種になる星たち―大規模シミュレーションが描く新しい形成メカニズム― | 国立天文台(NAOJ) Linuxカーネルソースコード、80行制限を100行まで緩和 | マイナビニュース Visual Studioの新機能、クラウド上のKubernetesクラスタの一部をローカルマシンに引き込んで開発できる「Local Process with Kubernetes」発表 － Publickey VMware、GPUを仮想化する「Bitfusion」、vSphere 7への統合完了を発表 － Publickey Anvil - Streamline Information Gathering. Automate Workflows.  PDFベースの共同編集・電子署名サービスのAnvilがグーグル系VCから5億円超を調達 | TechCrunch Japan   ブログ: 政府とWHOは、小さな米国企業の疑わしいデータに基づいてCOVID-19の方針を変更 秘匿性の高いメッセージングアプリ「Signal」に顔をぼかす機能が加わる | TechCrunch Japan new.css  sakura: a minimal classless css framework / theme.   Webアクション「屋根裏のバイテン」第2話 : ぽじとろんの竹本泉観察記  "
    }
  ]
}
