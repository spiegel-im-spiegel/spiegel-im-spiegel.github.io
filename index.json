{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "2019-04-14 のブックマーク",
      "section": "bookmarks",
      "description": "「史上初、ブラックホールの撮影に成功 ― 地球サイズの電波望遠鏡で、楕円銀河M87に潜む巨大ブラックホールに迫る」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/04/14-bookmarks/",
      "published": "2019-04-14T01:30:56+00:00",
      "update": "2019-04-14T01:35:09+00:00",
      "content": " リリース情報  Mozilla、「Firefox」v66.0.3をリリース - 窓の杜 Atom 1.36 | Atom Blog  セキュリティ＆プライバシー関連  トレンドマイクロ、キー操作自動化ツール「AutoHotkey」を悪用した攻撃を確認・警告 - 窓の杜 フェイスブック、広告主が意図しないユーザー選別による「差別」 | 新聞紙学的 不正移管によるドメイン名ハイジャックについてまとめてみた - piyolog iPhoneを狙う強力なスパイウェアが登場 | TechCrunch Japan MIT Tech Review: ニューヨークの顔認識実験が大失敗、成功率はまさかのゼロ Firefoxにフィンガープリンティングと仮想通貨発掘プログラムへのプロテクションを追加 | TechCrunch Japan  「Firefox」が暗号通貨の採掘とフィンガープリンティングを防止する機能を導入へ - 窓の杜  嫌がらせに利用された出会い系アプリは嫌がらせの責任を負うべきなのか – P2Pとかその辺のお話R 2019年 4月 Intel 製品の脆弱性に関する注意喚起 Microsoft 製品の脆弱性対策について(2019年4月) ：IPA 独立行政法人 情報処理推進機構  2019年 4月マイクロソフトセキュリティ更新プログラムに関する注意喚起  Adobe Flash Player の脆弱性対策について(APSB19-19)(CVE-2019-7096等)：IPA 独立行政法人 情報処理推進機構  Adobe Flash Player の脆弱性 (APSB19-19) に関する注意喚起  Adobe Acrobat および Reader の脆弱性対策について(APSB19-17)(CVE-2019-7111等)：IPA 独立行政法人 情報処理推進機構  Adobe Acrobat および Reader の脆弱性 (APSB19-17) に関する注意喚起  グーグル、Androidスマホに組み込みのセキュリティキーを使った2段階認証を可能に - ZDNet Japan 危険物が製造された複数の事件についてまとめてみた - piyolog  天文関連  MIT Tech Review: 「太陽嵐」の脅威に備えよ、 ESAが計画する宇宙天気観測ミッション MIT Tech Review: 動物園仮説：コンピューターモデルで地球人類が無視されている可能性は低いと判明 The Drake Equation: Revisiting a Classic Tool to Estimate the Odds of Contact 史上初、ブラックホールの撮影に成功 ― 地球サイズの電波望遠鏡で、楕円銀河M87に潜む巨大ブラックホールに迫る | 国立天文台(NAOJ)  史上初、ブラックホールの撮影に成功！8つの電波望遠鏡束ねた「イベント･ホライズン･テレスコープ」で画像化 - Engadget 日本版 2019年4月11日ニュース「5500万光年離れたブラックホールの影の撮影に成功 史上初の成果と日本の国立天文台など国際チーム」 | SciencePortal 史上初めて捉えられたブラックホールの画像、地球から5500万光年 | TechCrunch Japan MIT Tech Review: これが「ブラックホール」だ！国際チームが初の撮影に成功 初めてのブラックホールの画像を作ったアルゴリズムはMITの院生Katie Boumanの指揮で開発された | TechCrunch Japan 映像 | 国立天文台(NAOJ)   その他  機械学習の関数「ボルツマンマシン」を用いて、量子多体系という難問に挑む | academist Journal サイバーロッカーのRapidVideo、広告モデルに依存した無料ストリーミングからプレミアムプランへの移行方針を明らかに – P2Pとかその辺のお話R MIT Tech Review: フェイスブック広告が 「差別」を排除できない 根本的な理由 「馬鹿げたたわ言も言えなくなった」--復帰後のトーバルズ氏が自己評価 - ZDNet Japan GPSの「2000年問題」が終了、週番号ロールオーバーを迎えた | TechCrunch Japan ブログ: Internet RFCが50周年 「ハロー・ワールド」やっと登場したそうでない人たちに手渡すことができるわれわれの物語 #151冊目 #1000冊紹介する #ハロワ Microsoft、「Chromium」ベースの新しい「Microsoft Edge」をプレビュー公開 - 窓の杜 ［速報］Google、大手クラウドに不満を表明していたMongoDB、RedisらOSSベンダと戦略的提携。Google CloudにOSSベンダのマネージドサービスを統合。Google Cloud Next '19 － Publickey 人手不足は本当に「悪」なのか　騙され続ける日本人 (1/6) - ITmedia ビジネスオンライン Githubにdeploy用の鍵を追加する - Qiita 全社的に会社用GitHubアカウントを廃止した件 - ZOZO Technologies TECH BLOG Amazonプライム、日本で初の値上げ　年会費4900円に - ITmedia NEWS EFF Statement on Assange Indictment and Arrest | Electronic Frontier Foundation 「ユーザーデータはユーザーのもの」--グーグルが語るプライバシーへの取り組み - ZDNet Japan 初めて Scratch に触れた - 電気ウナギ的○○ PHP 8でのJIT採用が可決、賛成50反対2。PHP 7.4への試験的採用は否決 － Publickey  "
    },
    {
      "title": "Go 1.12.4 がリリースされた",
      "section": "release",
      "description": "なんか 1.12.3 がちゃんと直ってなかったみたい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/04/go-1_12_4-is-released/",
      "published": "2019-04-13T10:25:08+00:00",
      "update": "2019-04-13T10:31:24+00:00",
      "content": " なんか 1.12.3 がちゃんと直ってなかったみたい。\n Go 1.12.4 and Go 1.11.9 are released - Google Group   go1.12.3 (released 2019/04/08) was accidentally released without its intended fix. It is identical to go1.12.2, except for its version number. The intended fix is in go1.12.4.  via Release History - The Go Programming Language  というわけで Linux 環境の方は 1.12.4 にアップデートしましょう。\nアップデートは計画的に。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 Book 単行本（ソフトカバー） ASIN: 4621300253, EAN: 9784621300251 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n "
    },
    {
      "title": "Hugo 0.55 リリースでまた後方互換性が壊れた",
      "section": "hugo",
      "description": "しょうがないので shortcode を設計し直したですよ orz",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/hugo/broken-backward-compatibility-by-hugo-0_55/",
      "published": "2019-04-13T10:05:15+00:00",
      "update": "2019-04-14T01:30:04+00:00",
      "content": " Shortcode の仕様変更 Hugo 0.45 のときは組み込み shortcode である ref/relref の仕様変更だったが，今回は shortcode そのものの仕様が変更になった。\n Hugo 0.55.0: The early Easter Egg Edition! | Hugo  Shortcodes using the {{% %}} as the outer-most delimiter will now be fully rendered when sent to the content renderer (e.g. Blackfriday for Markdown), meaning they can be part of the generated table of contents, footnotes, etc. via Hugo 0.55.0: The early Easter Egg Edition!  具体的な例を挙げたほうが分かりやすいだろう。\nたとえば記述内容を \u0026lt;div\u0026gt; 要素で囲むだけの簡単な shortcode “div-box” を作ってみる。 コードはこんな感じ。\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;{{ .Inner }}\u0026lt;/div\u0026gt; この div-box を使って\n{{\u0026lt; div-box \u0026gt;}}**Hello world!**{{\u0026lt; /div-box \u0026gt;}} と書けば .Inner 変数の内容がそのまま展開されて\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;**Hello world!**\u0026lt;/div\u0026gt; となる。 ここで\n{{% div-box %}}**Hello world!**{{% /div-box %}} と書き換えると，以前のバージョンでは\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;\u0026lt;strong\u0026gt;Hello world!\u0026lt;/strong\u0026gt;\u0026lt;/div\u0026gt; のように .Inner 変数の内容が markdown の文法に従って変換されていたのが， 0.55 からは {{\u0026lt; \u0026gt;}} と同じように\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;**Hello world!**\u0026lt;/div\u0026gt; と素通ししてしまうのだ。 もし markdown として処理したければ shortcode 側で\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;{{ .Inner | markdownify }}\u0026lt;/div\u0026gt; と .Inner 変数の内容を markdownify 関数に渡して明示的に変換する必要がある1。\nなんでこんなことになったかというと {{% %}} での処理は地の記述と連動しているらしい。 たとえば span という名前で以下の内容の shortcode をつくり\n\u0026lt;span\u0026gt;{{ .Inner }}\u0026lt;/span\u0026gt; これを markdown の表の中で使うと\n| 強調したい | | ---------- | | {{\u0026lt; span \u0026gt;}}**強調**{{\u0026lt; /span \u0026gt;}} | | {{% span %}}**強調**{{% /span %}} |    強調したい     **強調**   強調    という感じに {{\u0026lt; \u0026gt;}} と {{% %}} で違いが生じる。\nHugo のテンプレート処理は文脈依存になっていて，同じ記述でもどの要素の中で書かれるか（\u0026lt;head\u0026gt; 要素か \u0026lt;body\u0026gt; 要素か，あるいは JavaScript か CSS か）で出力が違ったりする。 おそらく shortcode の {{% %}} 記述でも同じように文脈依存で出力が変わるようにしたかったのだろう。\nでも，私は .Inner 変数の展開を {{\u0026lt; \u0026gt;}} か {{% %}} かで使い分けていたので，今回のアップデートで大ダメージを食らってしまったですよ。 しょうがないので shortcode を設計し直したけどね orz\n今後の shortcode の運用方針は以下のような感じだろうか。\n .Inner の内容を markdown ドキュメントとして処理するかどうか明示的に制御する場合は {{\u0026lt; \u0026gt;}} を使う .Inner の処理を文脈依存で行う（shortcode を入れ子にするなどの）場合は {{% %}} を使う  後方互換性が壊れる変更は，少なくとも最初はオプトアウトではなくオプトインで組み込めるようにして欲しい。\nShortcode の入れ子ができてる 今回いろいろ弄っていて気がついたのだが，いつの間にか shortcode の入れ子ができるようになってたんだね。 いつのバージョンからだろう。\nたとえば\n{{% div-box %}}{{% ruby \u0026#34;Hello world!\u0026#34; %}}こんにちは世界{{% /ruby %}}{{% /div-box %}} と書くと\n\u0026lt;div class=\u0026#34;box\u0026#34;\u0026gt;\u0026lt;ruby\u0026gt;\u0026lt;rb\u0026gt;こんにちは世界\u0026lt;/rb\u0026gt;\u0026lt;rp\u0026gt; (\u0026lt;/rp\u0026gt;\u0026lt;rt\u0026gt;Hello world!\u0026lt;/rt\u0026gt;\u0026lt;rp\u0026gt;) \u0026lt;/rp\u0026gt;\u0026lt;/ruby\u0026gt;\u0026lt;/div\u0026gt; こんにちは世界 (Hello world!)  などとできるようになっていた。 入れ子記述は {{\u0026lt; \u0026gt;}} でも {{% %}} でもできる。 {{\u0026lt; \u0026gt;}} と {{% %}} 混在でもOK。\nちなみに ruby は自作の shortcode で中身はこんな感じ。\n\u0026lt;ruby\u0026gt;\u0026lt;rb\u0026gt;{{ .Inner }}\u0026lt;/rb\u0026gt;\u0026lt;rp\u0026gt; (\u0026lt;/rp\u0026gt;\u0026lt;rt\u0026gt;{{ index .Params 0 }}\u0026lt;/rt\u0026gt;\u0026lt;rp\u0026gt;) \u0026lt;/rp\u0026gt;\u0026lt;/ruby\u0026gt; 特に権利は主張しないので（するほどの内容じゃないし）自由に使ってください。\nDeprecated な変数・関数 Hugo 0.55 を起動すると以下のワーニングが出るようになった。\n$ hugo WARN 2019/04/13 09:00:00 Page\u0026#39;s .Hugo is deprecated and will be removed in a future release. Use the global hugo function. WARN 2019/04/13 09:00:00 Page\u0026#39;s .RSSLink is deprecated and will be removed in a future release. Use the Output Format\u0026#39;s link, e.g. something like: {{ with .OutputFormats.Get \u0026#34;RSS\u0026#34; }}{{ .RelPermalink }}{{ end }}. WARN 2019/04/13 09:00:00 Page\u0026#39;s .GetParam is deprecated and will be removed in a future release. Use .Param or .Params.myParam. テンプレート内で .Hugo, .RSSLink 変数および .GetParam 関数が使われていると上記ワーニングが出る。\n.Hugo の廃止と代替手段 （以前の内容を書き換えた）\n.Hugo 変数は将来バージョンで削除されるようだ。 代替として（変数ではなく） hugo 関数が用意されている（Thanx @peaceiris）。 出力例は以下の通り。\n  テンプレート 出力内容  {{ hugo.Generator }} \u0026lt;meta name=\u0026#34;generator\u0026#34; content=\u0026#34;Hugo 0.55.1\u0026#34; /\u0026gt;  {{ hugo.Version }} 0.55.1  {{ hugo.CommitHash }} 223b3c2e  {{ hugo.BuildDate }} 2019-04-12T09:56:45Z  {{ hugo.Environment }} production   この手が使えるなら .Site 変数も関数で用意してほしいものである。\n.RSSLink の廃止と代替手段 .RSSLink 変数も将来バージョンで削除されるようだ。 代替として .AlternativeOutputFormats および .OutputFormats 変数が使える。 たとえば \u0026lt;head\u0026gt; 要素内なら\n{{ with .Site.Home.AlternativeOutputFormats.Get \u0026#34;RSS\u0026#34; }} \u0026lt;link rel=\u0026#34;alternate\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34; type=\u0026#34;application/rss+xml\u0026#34; title=\u0026#34;{{ $.Site.Title | plainify }}\u0026#34;\u0026gt; {{ end }} と書けばいいし \u0026lt;head\u0026gt; 要素以外なら\n{{ with .OutputFormats.Get \u0026#34;RSS\u0026#34; }} \u0026lt;a href=\u0026#39;{{ .RelPermalink }}\u0026#39; title=\u0026#39;Feed\u0026#39;\u0026gt;Feed\u0026lt;/a\u0026gt; {{ end }} などと書ける。 .AlternativeOutputFormats および .OutputFormats 変数はかなり応用範囲が広くて，たとえば私はフィードを JSON 形式でも用意しているが，\n{{ with .Site.Home.AlternativeOutputFormats.Get \u0026#34;JSON\u0026#34; }} \u0026lt;link rel=\u0026#34;alternate\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34; type=\u0026#34;application/json\u0026#34; title=\u0026#34;{{ $.Site.Title | plainify }}\u0026#34;\u0026gt; {{ end }} と書けば簡単に \u0026lt;head\u0026gt; 要素に組み込める。\n.GetParam の廃止と代替手段 .GetParam 関数については随分前からアナウンスがあったので使っている人はいないと思うが .Param 関数で代替できる。\nブックマーク  0.55.1: 3 Bug Fixes | Hugo .Hugo.Generator は廃止されるので hugo.Generator を使おう - Qiita\n Shortcodes で HTML コードを埋め込む\n   もうひとつの方法としてはテンプレート・ファイルの先頭で {{ $_hugo_config := `{ \u0026quot;version\u0026quot;: 1 }` }} と呪文を唱えることで 0.55 以前の動作に戻る。が，これ将来バージョンで無効になるよなぁ，多分。 [return]   "
    },
    {
      "title": "Go 1.12.3 がリリースされた",
      "section": "release",
      "description": "この前 1.12.2 が出たばかりなんだけどね。 Linux 環境の方は要アップデート。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/04/go-1_12_3-is-released/",
      "published": "2019-04-09T12:32:01+00:00",
      "update": "2019-04-09T12:49:03+00:00",
      "content": " この前 1.12.2 が出たばかりだが Go 1.12.3 リリースされた。 セキュリティ・アップデートはなし。\n Go 1.12.3 and Go 1.11.8 are released - Google Group   go1.12.3 (released 2019/04/08) fixes an issue where using the prebuilt binary releases on older versions of GNU/Linux led to failures when linking programs that used cgo. Only Linux users who hit this issue need to update.   via Release History - The Go Programming Language  というわけで Linux 環境の方はアップデートしたほうがいいだろう。\nアップデートは計画的に。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 Book 単行本（ソフトカバー） ASIN: 4621300253, EAN: 9784621300251 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n "
    },
    {
      "title": "指紋認証と FaceID は解除せよ",
      "section": "remark",
      "description": " セキュリティのために「個人の自由」を売り渡してはいけないのだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/04/remove-fingerprint-unlock-and-faceid/",
      "published": "2019-04-08T13:54:17+00:00",
      "update": "2019-04-08T13:57:02+00:00",
      "content": " タイトルは釣りです，もちろん。\nEFF から面白い記事が出てた。\n Attending a Protest | Surveillance Self-Defense  この記事は抗議行動を含む市民活動においてセキュリティないしはプライバシーのリスクとなりうるものを軽減するためのアドバイスである。 日付が4月1日になってたのでエイプリルフールネタかと思ったのだが，どうもマジ話らしい。\n英語不得手なので記事の全部を紹介することは出来ないが “Before the Protest” の節だけちょろんと紹介しよう（だれか翻訳しないかな。ちなみに原文は CC BY で公開されている）。\nEnable full-disk encryption on your device まぁ，これは当然だよね。\n抗議活動以前に携帯端末は紛失・盗難のリスクが高い。 （犯罪者だろうが国家だろうが）データを盗もうとする側は「貴方」の携帯端末に気を遣ったりしない。 最悪の場合，端末をぶっ壊してでもデータを吸い上げようとするだろう。\n注意しないといけないのは外部ストレージ（SD カードなど）の暗号化は別途行わなければならないということ。 あるいはそういったものの暗号化が出来ないかもしれない。\nもっと言うとストレージの暗号化が出来るデジカメはあまりないらしい。\n In addition, many digital cameras lack the ability to encrypt. It is safe to assume that photos and videos taken with digital cameras will be stored unencrypted, unless explicitly stated otherwise.  本気で携帯端末を暗号化するのはけっこう大変かもしれない。\nRemove fingerprint unlock and FaceID つい先日も Twitter か Facebook の TL で書いたような気がするが，いわゆる生体情報（biometric）は秘密情報ではない。 故に生体情報を認証に使うべきではない。\n生体情報を認証に使うのなら相手（犯罪者かもしれないし国家かもしれない）はそれを取得するために躊躇なく物理的手段を講じるだろう1。 グミで指紋のコピーを作ったりどっかから顔写真を入手する必要はない。 本人を連れてきて無理やり認証してしまえばいいのだ。 本人が抵抗するなら首か手首を切り取ってしまえばいいのだ2。\n In the U.S., using a biometric—like your face scan or fingerprint—to unlock your phone compromises protections for the contents of your phone afforded to you under the Fifth Amendment privilege against compelled incrimination. A police officer may try to intimidate you into “consenting” to unlock your phone, whether you use a biometric or a memorized passcode. But if you exercise your right to refuse and biometric unlocking functionality is turned on, an officer may physically force you to biometrically unlock your device.  アメリカめっさ怖いな！ いや，日本でも（昨今のケーサツの暴走っぷりから考えると）ありうる話かもしれないが。\nInstall Signal 「信号」じゃなくてセキュリティ・ツールの Signal ね。\n Signal · GitHub  最近のバージョンではグループチャットも出来るようになったらしい。\nSignal の利点は会話履歴をネット上のどこにも残さない点である。 存在しないデータは取得しようがない。\n In 2016, a grand jury in the Eastern District of Virginia issued a subpoena to Open Whisper Systems, the developers of Signal. Because of the architecture of Signal, which limits the user metadata stored on the company’s servers, the only data they were able to provide was \"the date and time a user registered with Signal and the last date of a user's connectivity to the Signal service.\"  つまり，ユーザが「Signal を使った」という履歴は残るけど，会話の内容は一切記録されないというわけだ。\n私も Signal をメインのメッセージング・アプリとして使っている。 Facebook の Messenger は削除した。 スマホ標準の SMS アプリと置き換えることもできるので，まずはそこから始めてみてもいいだろう。\nBack up your data まぁこれも当たり前。 バックアップ先が商用のクラウドストレージでは意味がないからね（国家はサービス・プロバイダに命令できる）。\nBuy a prepaid, disposable phone アメリカではプリペイド SIM を買うのに ID を提示しなくていいらしい。 なんと羨ましい。\n In the United States, at the time this guide was written, current federal regulation does not require you to show your ID to purchase a prepaid SIM card (but your state might). Most countries require you to provide a form of ID to purchase a prepaid SIM card, thus linking the card to your identity and removing the possibility of anonymity.  しかし，そうするといわゆる「プリペイド携帯」を買えって話になるけど，日本ではプリペイド携帯も身分の提示が必要になるんじゃなかったっけ。 つか，そもそもプリペイド携帯って今も売ってるのか？ 最近の状況を知らないのでよく分からない。\n“Attending a Protest” には「機内モードを有効にしろ（Enable airplane mode）」とも書かれていて，普段はケータイを機内モードにしておけば少なくとも行動追跡のリスクは減るかも知れない。\n国家は国家のためにしか駆動しない 「自分の身は自分で守れ」というのはいかにもアメリカらしいなぁ，と思ったりする。\nしかし結局のところ，国家は国家のためにしか駆動しない。 個人である私達を守れるのは最終的に私達自身しかいないのだ。\nそういう意味で「プライバシー」は「個人の自由」を守るための大切な権利である，という点は忘れてはいけないと思う。 セキュリティや利便性のために「個人の自由」を売り渡してはいけないのだ。 「それは、ぜったいに、ぜったいです」。\nブックマーク  クーリエ連載；エコノミスト紹介、自由のためなら人が死んでもいい  参考図書  もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo 達人出版会 2017-12-25 評価\u0026nbsp;       WirelessWire News 連載の書籍化。感想はこちら\nreviewed by Spiegel on 2018-12-31\n  グリゴリの捕縛 白田 秀彰 青空文庫 2001-11-26 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  白田秀彰さんの「グリゴリの捕縛」が青空文庫に収録されていた。 内容は 怪獣大決戦 おっと憲法（基本法）についてのお話。 古代社会 → 中世社会 → 近代社会 → 現代社会 と順を追って法と慣習そして力（power）との関係について解説し，その中で憲法（基本法）がどのように望まれ実装されていったか指摘してる。 その後，現代社会の次のパラダイムに顕現する「情報力」と社会との関係に言及していくわけだ。\nreviewed by Spiegel on 2019-03-30\n  セキュリティはなぜやぶられたのか ブルース・シュナイアー 井口 耕二 (翻訳) 日経BP社 2007-02-15 Book 単行本 ASIN: 4822283100, EAN: 9784822283100 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  原書のタイトルが “Beyond Fear: Thinking Sensibly About Security in an Uncertain World” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。\nreviewed by Spiegel on 2019-02-11 (powered by amazon-item 0.2.1)\n  もちろん，そうするだけのインセンティブがあればの話だよ。鵜呑みにしないように（笑） [return] 海外では実際にそういう事例があった。指紋認証が使える高級車を盗むためにオーナーの指を切り取ったそうだ。 [return]   "
    },
    {
      "title": "PPA から Git をインストールする",
      "section": "remark",
      "description": "Git に関しては PPA (Personal Package Archive) で最新版のビルドを提供されている方がいるらしい。ありがたや。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/04/install-git-from-ppa/",
      "published": "2019-04-07T15:12:49+00:00",
      "update": "2019-04-07T15:13:02+00:00",
      "content": " 前回で OpenSSH と GnuPG を連携させたのでようやく git で遊べるようになった。\nしかし，実際にコマンドを叩いてみたら\n$ git version Command \u0026#39;git\u0026#39; not found, but can be installed with: sudo apt install git またかよ。 嫌な予感しかしない。\n$ sudo apt show git Package: git Version: 1:2.19.1-1ubuntu1.1 Priority: optional Section: vcs Origin: Ubuntu ... やっぱり。 2.21.0 が出たのってだいぶ前だよな。\nいろいろ調べてみたら git に関しては PPA (Personal Package Archive) で最新版のビルドを提供されている方がいるらしい。 ありがたや。\n Git stable releases : “Ubuntu Git Maintainers” team  何故か add-apt-repository は既に入ってるぽかったので，まずはリポジトリを導入しよう。\n$ sudo add-apt-repository ppa:git-core/ppa The most current stable version of Git for Ubuntu. For release candidates, go to https://launchpad.net/~git-core/+archive/candidate . 詳しい情報: https://launchpad.net/~git-core/+archive/ubuntu/ppa [ENTER] を押すと続行します。Ctrl-c で追加をキャンセルできます。 ヒット:1 http://jp.archive.ubuntu.com/ubuntu cosmic InRelease 取得:2 http://jp.archive.ubuntu.com/ubuntu cosmic-updates InRelease [88.7 kB] ヒット:3 http://archive.ubuntulinux.jp/ubuntu cosmic InRelease 取得:4 http://jp.archive.ubuntu.com/ubuntu cosmic-backports InRelease [74.6 kB] ヒット:5 http://archive.ubuntulinux.jp/ubuntu-ja-non-free cosmic InRelease 取得:6 http://security.ubuntu.com/ubuntu cosmic-security InRelease [88.7 kB] 取得:7 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic InRelease [20.7 kB] 取得:8 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main i386 Packages [3,032 B] 取得:9 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main amd64 Packages [3,032 B] 取得:10 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic/main Translation-en [2,248 B] 281 kB を 3秒 で取得しました (81.9 kB/s) パッケージリストを読み込んでいます... 完了 $ sudo apt update ヒット:1 http://archive.ubuntulinux.jp/ubuntu cosmic InRelease ヒット:2 http://jp.archive.ubuntu.com/ubuntu cosmic InRelease ヒット:3 http://archive.ubuntulinux.jp/ubuntu-ja-non-free cosmic InRelease 取得:4 http://jp.archive.ubuntu.com/ubuntu cosmic-updates InRelease [88.7 kB] 取得:5 http://jp.archive.ubuntu.com/ubuntu cosmic-backports InRelease [74.6 kB] 取得:6 http://security.ubuntu.com/ubuntu cosmic-security InRelease [88.7 kB] ヒット:7 http://ppa.launchpad.net/git-core/ppa/ubuntu cosmic InRelease 252 kB を 2秒 で取得しました (155 kB/s) パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 パッケージはすべて最新です。 $ sudo apt upgrade パッケージリストを読み込んでいます... 完了 依存関係ツリーを作成しています 状態情報を読み取っています... 完了 アップグレードパッケージを検出しています... 完了 アップグレード: 0 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。 $ sudo apt show git Package: git Version: 1:2.21.0-0ppa1~ubuntu18.10.1 Priority: optional Section: vcs よし。 最新版が入ってるな。 インストールっと。\n$ sudo apt install git これでインストール完了。 動作確認してみる。\n$ git version git version 2.21.0 よしよし。 おっと，初期設定しないと。\n$ git config --global user.name \u0026#34;Alice\u0026#34; $ git config --global user.email \u0026#34;alice@example.com\u0026#34; $ git config --global user.signingkey 697CDD8A $ git config --global commit.gpgsign true SSH 経由で git clone する まずは適当なリポジトリを SSH 経由で git clone してみる。\n$ git clone git@github.com:spiegel-im-spiegel/gocli.git github.com/spiegel-im-spiegel/gocli Cloning into \u0026#39;github.com/spiegel-im-spiegel/gocli\u0026#39;... The authenticity of host \u0026#39;github.com (192.30.255.112)\u0026#39; can\u0026#39;t be established. RSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added \u0026#39;github.com,192.30.255.112\u0026#39; (RSA) to the list of known hosts. remote: Enumerating objects: 71, done. remote: Counting objects: 100% (71/71), done. remote: Compressing objects: 100% (52/52), done. remote: Total 246 (delta 31), reused 53 (delta 16), pack-reused 175 Receiving objects: 100% (246/246), 53.99 KiB | 431.00 KiB/s, done. Resolving deltas: 100% (107/107), done. 前回で OpenSSH と GnuPG を連携させたので認証時に Pinentry が起動する。\n よーし，うむうむ，よーし。\ngit-credential による認証管理 SSH 経由でリポジトリにアクセスする場合はこれでいいのだが HTTPS 経由でアクセスする場合はアクセスするたびに毎回パスワードを訊かれるため鬱陶しい。 この場合は git-credential による認証管理を行うのがいいようだ。\nUbuntu では gnome-keyring を使った認証管理が使える。\n shugo/git-credential-gnomekeyring: A git credential helper for GNOME keyring  これによると\n There is a git package that includes all of contrib sources in /usr/share/doc/git/contrib/. Users who want to use git-credential-gnomekeyring should copy source from /usr/share/doc/git/contrib/credential/gnome-keyring to their working directory, then users can make and install it.  via shugo/git-credential-gnomekeyring  ということらしい。 さっそくやってみよう。\n$ cp -r /usr/share/doc/git/contrib/credential/gnome-keyring ~/work $ cd ~/work/gnome-keyring $ make gcc -c -g -O2 -Wall -o git-credential-gnome-keyring.o git-credential-gnome-keyring.c git-credential-gnome-keyring.c:28:10: fatal error: glib.h: そのようなファイルやディレクトリはありません まじすか。 まぁ，入れればいいか。\n$ sudo apt install libglib2.0-dev では再開。\n$ make gcc -c -g -O2 -Wall -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -o git-credential-gnome-keyring.o git-credential-gnome-keyring.c git-credential-gnome-keyring.c:29:10: fatal error: gnome-keyring.h: そのようなファイルやディレクトリはありません ええい。 これも入れればいいのね。\n$ sudo apt install libgnome-keyring-dev$ make gcc -g -O2 -Wall -I/usr/include/gnome-keyring-1 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -o git-credential-gnome-keyring.o -c git-credential-gnome-keyring.c ワーニングいっぱい出たけどようやく通ったよ。 これで作成された git-credential-gnome-keyring をパスの通ったディレクトリに入れれば完了。 git 側が認識しているか確認してみよう。\n$ git help -a | grep credential- credential-cache Helper to temporarily store passwords in memory credential-store Helper to store credentials on disk credential-gnome-keyring よしよし。 認識しているな。\nこれで git 設定に以下を加えれば完了となる。\n$ git config --global credential.helper gnome-keyring 適当なリポジトリで確かめてみよう。\n$ git clone https://github.com/spiegel-im-spiegel/private-repos.git aaa Cloning into \u0026#39;aaa\u0026#39;... Username for \u0026#39;https://github.com\u0026#39;: alice@example.com Password for \u0026#39;https://alice@example.com@github.com\u0026#39;: remote: Enumerating objects: 51, done. remote: Counting objects: 100% (51/51), done. remote: Compressing objects: 100% (41/41), done. remote: Total 51 (delta 8), reused 47 (delta 8), pack-reused 0 Unpacking objects: 100% (51/51), done. $ git clone https://github.com/spiegel-im-spiegel/private-repos.git bbb Cloning into \u0026#39;bbb\u0026#39;... remote: Enumerating objects: 51, done. remote: Counting objects: 100% (51/51), done. remote: Compressing objects: 100% (41/41), done. remote: Total 51 (delta 8), reused 47 (delta 8), pack-reused 0 Unpacking objects: 100% (51/51), done. よし。 2回目からは訊いてこないな。\nちなみにこのときのパスワードは Web ページにサインインするときのパスワードじゃなくて，設定画面で振り出した personal access token を使うのでご注意を（つか，私がすっかり忘れててハマったのだがw）。\nブックマーク  UbuntuのPPAて何？ [Linuxの使い方] All About ubuntuのapt-getで最新版のgitをインストールする方法 - spangled shalalala blog Git - Gitのインストール Git Commit で OpenPGP 署名を行う  "
    },
    {
      "title": "2019-04-07 のブックマーク",
      "section": "bookmarks",
      "description": "「はやぶさ2が衝突装置の作動に成功 小惑星りゅうぐうの人工クレーター実験で世界初の岩石採取目指す」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/04/07-bookmarks/",
      "published": "2019-04-07T06:01:16+00:00",
      "update": "2019-04-14T00:21:50+00:00",
      "content": " リリース情報  「RubyGems」の脆弱性に対処した「Ruby」v2.4.6が公開 - 窓の杜 Visual Studio 2019正式版リリース。メモリ使用量が4分の1以下に激減、リモートペアプロ機能のLive Share、AIによる支援機能IntelliCodeも正式機能に。Mac版も同時リリース － Publickey  Age of Trump  ソーシャルメディアに暴力コンテンツの責任を問う法案が豪議会を通過 | TechCrunch Japan Mark Zuckerberg Does Not Speak for the Internet | Electronic Frontier Foundation Attending a Protest | Surveillance Self-Defense  セキュリティ＆プライバシー関連  Kaspersky、「WinRAR」で発覚した19年来の脆弱性を警告 ～関連マルウェアは今も増加中 - 窓の杜 VMware、セキュリティコンテスト“Pwn2Own 2019”で報告された脆弱性に対策 - 窓の杜 トヨタ関連会社への不正アクセスについてまとめてみた - piyolog MIT Tech Review: 欧州連合の改正著作権法は何が問題なのか？ MIT Tech Review: 「殺人犯逮捕のために協力を」米DNA検査会社が批判逆手にテレビCM 神奈川県警職員が10年以上行っていた不正アクセス事案についてまとめてみた - piyolog 新元号発表に乗じたスパムメールや政府の情報漏れ対策をまとめてみた - piyolog QEMU脆弱性を利用したVM ESCAPE攻撃の検証：概要＆テスト環境構築編 (1/2)：OSS脆弱性ウォッチ（12） - ＠IT ゴールデンウィークにおける情報セキュリティに関する注意喚起：IPA 独立行政法人 情報処理推進機構 現行版の「Microsoft Edge」「Internet Explorer」にゼロデイ脆弱性 - 窓の杜 ライブ配信を悪用したポイント詐取事件についてまとめてみた - piyolog ラブライブ！公式サイトの改ざんについてまとめてみた - piyolog Former Mozilla CTO Harassed at the US Border - Schneier on Security Apache HTTP Serverに脆弱性、アップデートを | マイナビニュース  天文関連  MIT Tech Review: NASA長官がインドの衛星撃墜実験を非難、デブリ問題が深刻化 MEF 小天体探査フォーラム - Minorbody Exploration Forum | The Planetary Society of Japan - 日本惑星協会 MIT Tech Review: 天文学者が見落とした太陽系外惑星、深層学習で発見 JAXA | 小惑星探査機「はやぶさ２」衝突装置の運用状況について  JAXA | 小惑星探査機「はやぶさ２」衝突装置の作動の確認について 2019年4月5日ニュース「はやぶさ2が衝突装置の作動に成功 小惑星りゅうぐうの人工クレーター実験で世界初の岩石採取目指す」 | SciencePortal 日本の「はやぶさ2」が小惑星を銃撃して穴を掘る | TechCrunch Japan   知財関連  European Commission adopts CC BY and CC0 for sharing information - Creative Commons 'YouTube's Copyright Mess Is Stifling Music Education' - TorrentFreak  収益をかすめ取られても泣き寝入りを強いられる音楽教則ビデオのクリエイターたち – P2Pとかその辺のお話R   その他  ファーウェイの通信機器を巡る「疑惑」は、実は悪用可能なバグだった？ 英政府機関が指摘｜WIRED.jp Firefoxのための無料パスワードマネジャー「Lockbox」がAndroidでも使えるように! | Techable(テッカブル) MIT Tech Review: ビットコイン取引の95％が「ウソ」、取引所が人気装う 現在、Netscapeを所有しているのはFacebookだって？ - YAMDAS現更新履歴 Apacheソフトウェア財団設立20周年を祝して、Apacheソフトウェア財団が手がけるイノベーティブなプロジェクトを20個選んでみた - YAMDAS現更新履歴 MIT Tech Review: 客観的実在は存在せず？量子力学の逆説「ウィグナーの友人」を初実験 Your Fourth Amendment Rights Should Not be Limited by Terms of Service | Electronic Frontier Foundation モジラ、「Firefox」でスパムのようなプッシュ通知の許可プロンプト低減に向け取り組み - CNET Japan 蜜月の終わり。世界各国の美術館が関係解消を急ぐ「サックラー・ファミリー」とオピオイド中毒問題｜MAGAZINE | 美術手帖 MIT Tech Review: 訓練データ作成を刑務所に委託も、AIが生む「つまらない仕事」 Amazonサードパーティいじめをやめる、検索結果で自社ブランド商品を目立たせる宣伝廃止 | TechCrunch Japan MySpaceの大規模データ喪失の前に集めた45万曲をInternet Archiveがアップロード | TechCrunch Japan MIT Tech Review: グーグルが新設した「AI倫理委員会」に社員が猛反発した理由  MIT Tech Review: グーグルの「AI倫理委員会」、設置発表から1週間余りで解散  人間の作業を手伝うCMUのバックパック型ロボットアーム | TechCrunch Japan  "
    },
    {
      "title": "Go 1.12.2 がリリースされた",
      "section": "release",
      "description": "コンパイラ本体は通常のアップデート。外部パッケージで脆弱性の情報あり。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/04/go-1_12_2-is-released/",
      "published": "2019-04-07T05:15:13+00:00",
      "update": "2019-04-09T12:49:03+00:00",
      "content": " [Go] 1.12.2 がリリースされた。 セキュリティ・アップデートはなし。\n Go 1.12.2 and Go 1.11.7 are released - Google Group   go1.12.2 (released 2019/04/05) includes fixes to the compiler, the go command, the runtime, and the doc, net, net/http/httputil, and os packages. See the Go 1.12.2 milestone on our issue tracker for details.  via Release History - The Go Programming Language  また，このリリースより少し前に golang.org/x/crypto/salsa20 パッケージに関する脆弱性情報がアナウンスされている。\n [security] Vulnerability in golang.org/x/crypto/salsa20 - Google Group   If more than 256 GiB of keystream is generated, or if the counter otherwise grows greater than 32 bits, the amd64 implementation will first generate incorrect output, and then cycle back to previously generated keystream. Repeated keystream bytes can lead to loss of confidentiality in encryption applications, or to predictability in CSPRNG applications.  via Vulnerability in golang.org/x/crypto/salsa20  けっこうヤバい脆弱性なので，ご利用の方はアップデートを。 それ以外にも（メール本文にも目を通して）必要な措置があれば行うこと。\nアップデートは計画的に。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 Book 単行本（ソフトカバー） ASIN: 4621300253, EAN: 9784621300251 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n "
    },
    {
      "title": "「ボーっと生きてんじゃねーよ！」",
      "section": "remark",
      "description": "エロとウンチクとグルメは3日見たら飽きる（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/04/donot-sleep-through-life/",
      "published": "2019-04-07T03:13:52+00:00",
      "update": "2019-04-07T04:22:07+00:00",
      "content": " まさか，このブログで特定のテレビ番組について語る日が来るとは（笑）\n 「夜はなぜ暗い？」 #チコちゃんに叱られる の解答に「誤解を招く表現があった」と出演依頼された先生が解説 - Togetter  これって実は宇宙論を習うときに最初に出てくる「問い」なんだよね。 私も学生時代に宇宙論の授業（広大の牟田先生の授業）で習ったよ。\n厳密には\n 地球から見てあらゆる方向に星があると仮定するなら，それらの光が集積されて夜空はもっと明るくなる筈なのに，実際には夜は昼より暗いのは何故か？\n だったかな。 つまり，この「問い」について考えることで宇宙論的な時間と空間の概念を学ぶわけですな。 懐かしいなぁ。\n「チコちゃんに叱られる」はテレビ番組をほとんど見ない私が唯一積極的に見てる番組。 まぁ土曜朝の再放送しか見れないんだけど（だって平日の夜は僅かな憩いの時間なのに，その時間をテレビ如きに取られたくないぢゃん）。 しかも，ここのところ土曜の朝は忙しくてテレビを見てる暇もない（だから今回の件も見ていない）。 たぶん来週も見れないだろう。\n正しい「問い」を立てるのは正しい「答え」を導くよりも難しい。\n「チコちゃんに叱られる」では「答え」そのものは大して重要ではなくて「問いを立てる」「問いについて考える」ことがメインディッシュになっている。 だから最後に提示される「答え」に「えー？」ってなるのも含めてワンセットなわけだ。 だって「えー？」ってなれば更にその続きを考え（あるいは調べ）ようとするでしょ。 故に「ボーっと生きてんじゃねーよ！」になるわけよ。 上手くできてるよね。\nこの一連の「対話」が面白くてつい見ちゃうんだよなぁ。\n私も昔は押し付けがましい教養番組や情報番組を「説教番組」と呼んで毛嫌いしてたけど1，もうテレビは（ラジオと同じく）万人のメディアではないし，ソーシャル・メディアとの不気味な共生（共依存？）関係は気になるけど，基本的には「押し付けられた答え」に対しては「何も思わない」ことにしている。 「思う」こと自体が非生産的行為。 もしムカついて我慢できなくなったらテレビから離れればいい（そして忘れる）だけだ。\n最後にまとめると，エロとウンチクとグルメは3日見たら飽きる，ということで。 「チコちゃん」は飽きずに見れるといいねぇ（笑）\nブックマーク  「テレビという共同体」 — Baldanders.info STAP 教と「説教サイト」  参考図書  いかにして問題をとくか G. ポリア G. Polya (原著), 柿内 賢信 (翻訳) 丸善 1975-04-01 Book 単行本 ASIN: 4621045938, EAN: 9784621045930 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  数学書。というか問いの立てかたやものの考え方についての指南書。のようなものかな。\nreviewed by Spiegel on 2018-10-20 (powered by amazon-item v0.2.0)\n  数学ガールの誕生　理想の数学対話を求めて 結城 浩 SBクリエイティブ 2013-09-13 (Release 2014-09-13) eBooks Kindle版 ASIN: B00NAQA33A 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  結城浩さんの講演集。こういう場所に立ち会える今の学生さんは羨ましい。\nreviewed by Spiegel on 2018-12-21 (powered by amazon-item v0.2.0)\n  今でもみ◯某とかさ◯い某が出てくる番組は見ない。誤解のないように言っておくとこれは彼ら本人に対する好悪には関係ない。そもそもお会いしたことないし（笑） 芸能人ってのはテレビ越しでは「記号」だからね。 [return]   "
    },
    {
      "title": "NYAGOS 4.4.2 がリリースされた",
      "section": "release",
      "description": "今回は盛り沢山だぞ！",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/04/nyagos-4_4_2-is-released/",
      "published": "2019-04-07T00:16:12+00:00",
      "update": "2019-04-13T10:41:09+00:00",
      "content": " [NYAGOS] 4.4.2_0 がリリースされた。 つか，もたもたしてたら 4.4.2_1 も出てたよ。\n Release 4.4.2_0 · zetamatta/nyagos · GitHub Release 4.4.2_1 · zetamatta/nyagos · GitHub  変更点は以下の通り。 盛り沢山だぞ！\n OLEオブジェクトからLuaオブジェクトへの変換が日付型などでパニックを起こす不具合を修正 Luaの数値が実数として OLE に渡されるべきだったのに、整数として渡されていた。 Lua: 関数: nyagos.to_ole_integer(n) (数値を OLE 向けの整数に変換)を追加(trash.lua用) Lua: OLEObject に列挙用オブジェクトを得るメソッド _iter() を追加 Lua: OLEObject を開放するメソッド OLEObject:_release() を追加 trash.lua が COM の解放漏れを起こしていた問題を修正 Lua: create_object生成された IUnkown インスタンスが解放されていなかった不具合を修正 「~ユーザ名」の展開を実装 バッチファイル以外の実行ファイルの exit status が表示されなくなっていた不具合を修正 %COMSPEC% が未定義の時に CMD.EXE を用いるエイリアス(ren,mklink,dir,...)が動かなくなっていた不具合を修正 全角空白(%U+3000%)がパラメータの区切り文字と認識されていた点を修正 (#359) -c,-k オプションで CMD.EXE のように複数の引数をとれるようにした 「存在しないディレクトリ\\何か」を補完しようとすると「The system cannot find the path specified.」と表示される不具合を修正 (Thx! tsuyoshicho) (#360) 幅ゼロやサロゲートペアな Unicode は\u0026lt;NNNNN\u0026gt; と表示するようにした (Thx! tsuyoshicho) サロゲートペアな Unicode をそのまま出力するオプション --output-surrogate-pair を追加 suコマンドで、ネットワークドライブが失なわれないようにした (#197) ソースがディレクトリで -s がない時、ln はジャンクションを作成するようにした 内蔵の mklink コマンドを実装し、CMD.exe /c mklink のエイリアス mklink を削除 ゼロバイトの Lua ファイルを削除(cdlnk.lua, open.lua, su.lua, swapstdfunc.lua ) (#262) diskfree でボリュームラベルとファイルシステムを表示するようにした UNCパスがカレントディレクトリでもバッチファイルを実行できるようにした。 UNCパスがカレントディレクトリの時、ren,assoc,dir,for が動作しない不具合を修正 (#363) nyagos.alias.COMMAND=\u0026quot;string\u0026quot; 中では逆クォート置換が機能しない問題を修正 (Thx! tostos5963 \u0026amp; sambatriste ) (#259) アプリケーションをダイアログで選んでファイルを開くコマンド select を実装 diskfree の出力フォーマットを修正  via Release 4.4.2_0   diskfree: 行末の空白を削除 ~\u0026quot;\\Program Files\u0026quot; の最初の引用符が消えて、Files が引数に含まれない不具合を修正  via Release 4.4.2_1  新たに追加された select コマンドはエクスプローラのコンテキストメニュー「プログラムから開く」に近い機能を提供していて，たとえば\n$ select index.html とか打てば\n てな感じでファイルを開くプログラムの選択ダイアログが開く。 なにそれ素敵！\nまるきし余談だが，先々月に [NYAGOS] 4.4.1 が出てて，私も Issue 上げてたのに記事にしてなかった。 1月2月はホンマに余裕がなかったからなぁ。 まぁ今は余裕があるかと言われればそうでもないんだけど...\nアップデートは計画的に。\n【2019-04-13 追記】 NYAGOS 4.4.2_2 がリリースされた  Ctrl-RIGHT,ALT-F(次の単語へ), Ctrl-LEFT,ALT-B(前の単語へ)を実装 インクリメンタルサーチ開始時にトップへ移動する時のバックスペースの数が間違っていた不具合を修正 (#364) ESC[0A というエスケープシーケンスが使われていた不具合を修正  via Release 4.4.2_2  "
    }
  ]
}
