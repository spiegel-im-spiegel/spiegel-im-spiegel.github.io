{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "ネックスピーカー買うた",
      "section": "remark",
      "description": "あんまりハズレだと嫌なので，今回は様子見の廉価版で",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/07/neck-speaker/",
      "published": "2022-07-17T11:02:51+00:00",
      "update": "2022-07-17T11:03:10+00:00",
      "content": "さて，夏のボーナスの季節である。 私も微々たる金額ながら頂いたので，自分へのご褒美として，今回はネックスピーカーを買ってみた。 とはいえ，あんまりハズレだと嫌なので，今回は様子見の廉価版で。\nネックスピーカー買った。JVCケンウッド | Flickr JVC ブランド。 決め手は「連続再生時間20時間」ってところ（笑）\n試しに「嗚呼！逆転王」のベースカバーを聴いてみたが\n【逆転イッパツマン】嗚呼！逆転王 /山本正之【ベースカバー】 - YouTube んー，こんなもんじゃないかな。 ベース音もはっきり聞こえるし。 まぁ，うちとこはガチのオーディオ設備じゃないしな。 卓上スピーカーよりはいいと思う。\n3年前の引っ越しでクラシック音楽CDは全部処分してしまったからなぁ。 この機会に改めて買って試してみるのもいいかもしれない。 近所のブックオフにでも行くか。\n音を抑える目的で買うなら止めたほうがいいと思う。 普通に周囲に聞こえます。 あと Bluetooth 接続なのでどうしても遅延が発生する1（のでゲーム用には向かない？）。 家事しながら聴く，とかいったシチュエーションならいいかも。 そういう意味でも「連続再生時間20時間」は魅力だねぇ（笑）\nブックマーク Amazon Prime Day 2021 の戦利品 参考 JVC NAGARAKU SP-A10BT-W ウェアラブルネックスピーカー ワイヤレス Bluetooth 約20時間連続再生 本体約88g軽量設計 ホワイト JVCケンウッド (Release 2018-11-21) エレクトロニクス B07JVKHRD5 (ASIN), 4975769459337 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; JVC ブランドのネックスピーカー。連続再生時間20時間は魅力。廉価版なせいかびっくりするほど高音質というわけではないが，私が聴くのは主にアニソンなので無問題。\nreviewed by Spiegel on 2022-07-17 (powered by PA-APIv5)\n新しい機種は aptX LowLatency コーデックに対応しているので，遅延に関しては緩和されるかも？\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "2022年に出た（出る） Go 言語関連の本",
      "section": "remark",
      "description": "うだうだしてたら7月も半分過ぎちゃってるよ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/07/books-for-golang/",
      "published": "2022-07-17T05:08:55+00:00",
      "update": "2022-07-17T05:14:32+00:00",
      "content": "2022年に入ってから Go 関連の本がいくつか出ているが，第1四半期は引っ越しやらでドタバタしてたので購入は後回しにしていた。 そうするうちに第2四半期に入ったのだが，今度は本業が忙しくなり Java コード書きまくってるせいか，うちに帰っても趣味のコードを書く気が起こらず Go 関連はまるっと放置していた。\nそうこうするうちに7月も半分過ぎちゃってるよ，とハタと気づいて，とりあえず気になる本はみんな買っておこうと思ったり。\nエキスパートたちのGo言語 エキスパートたちのGo言語　一流のコードから応用力を学ぶ Software Design plus 上田 拓也 (著), 青木 太郎 (著), 石山 将来 (著), 伊藤 雄貴 (著), 生沼 一公 (著), 鎌田 健史 (著), 上川 慶 (著), 狩野 達也 (著), 五嶋 壮晃 (著), 杉田 寿憲 (著), 田村 弘 (著), 十枝内 直樹 (著), 主森 理 (著), 福岡 秀一郎 (著), 三木 英斗 (著), 森 健太 (著), 森國 泰平 (著), 森本 望 (著), 山下 慶将 (著), 渡辺 雄也 (著) 技術評論社 2021-12-27 (Release 2021-12-27) Kindle版 B09P4PH63R (ASIN) 版元のデジタル版を購入。これからゆっくり読む。\nreviewed by Spiegel on 2022-07-17 (powered by PA-APIv5)\n版元で買ったのだが，間抜けなことにデジタル版と間違えて紙の本を買っちゃったのよ。 途中で気がつけよ，私 orz\n慌ててキャンセルしようとしたが，キャンセルできないんだって。 とほほ。 まぁ PDF で書い直したし，いざとなったら紙のほうはブックオフに売ろう。\n実用 Go言語 実用 Go言語 ―システム開発の現場で知っておきたいアドバイス 渋川 よしき (著), 辻 大志郎 (著), 真野 隼記 (著) オライリージャパン 2022-04-22 単行本（ソフトカバー） 4873119693 (ASIN), 9784873119694 (EAN), 4873119693 (ISBN) 版元のデジタル版を購入。これからゆっくり読む。\nreviewed by Spiegel on 2022-07-17 (powered by PA-APIv5)\nオライリーさんなのでデジタル版のほうを買いました。\n詳解Go言語Webアプリケーション開発 2022-07-22 発売予定。 Amazon では既に予約発注できる。 本の森.jp なら PDF で買えるみたいなので，こっちで買おうかな。\nGo言語による分散サービス 2022-08-03 発売予定。 Amazon では既に予約発注できる。 私はデジタル版を買う予定なので，発売日まで待ち状態。\nなお翻訳者の柴田芳樹さん主催による読書会が8月から始まる。 でも申込みが遅くて補欠なんだよなぁ。\n第1回『Go言語による分散サービス』オンライン読書会 - connpass 『Go言語による分散サービス』オンライン読書会を開催します：柴田 芳樹 (Yoshiki Shibata)：SSブログ あれ？ もう2,3冊あった気がするけど，どうだったっけ？ まぁ，いいや。 2022年に出た Go 本でこんなのあるよ，というのがありましたら是非教えてください \u0026#x1f647;\nしかし，技術関連書はホンマ Kindle で買わなくなったな。 いや，技術書読むのに Kindle は（一部でも内容をコピペできないし）使い勝手が悪いから（漫画やラノベなら Kindle で全然 OK なんだけど）。 まぁ Linux ネイティブ版の Kindle アプリケーションがないっつうのもあるけど。\n"
    },
    {
      "title": "Go 1.18.4 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "Go 1.18.2 から 1.18.4 までのセキュリティ・アップデートをまとめて紹介する。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2022/07/go-1_18_2-is-released/",
      "published": "2022-07-17T03:05:57+00:00",
      "update": "2022-07-17T03:07:07+00:00",
      "content": "5月のGW以降，妙に忙しくて諸々の更新をサボっていたら Go のセキュリティ・アップデートはバンバン出るし 1.19 のリリース候補版も登場してるしでアワアワしている。\nこの記事では 1.18.1 以降のセキュリティ・アップデートをまとめて紹介する。\n[security] Go 1.18.2 and Go 1.17.10 are released [security] Go 1.18.3 and Go 1.17.11 are released [security] Go 1.18.4 and Go 1.17.12 are released CVE-2022-29526 syscall: fix Faccessat on Linux When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible. via Go 1.18.2 and Go 1.17.10 are released CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N 深刻度: 警告 (Score: 5.3) 基本評価基準 評価値 攻撃元区分 ネットワーク 攻撃条件の複雑さ 低 必要な特権レベル 不要 ユーザ関与レベル 不要 スコープ 変更なし 機密性への影響 低 完全性への影響 なし 可用性への影響 なし CVE-2022-30634 crypto/rand: rand.Read hangs with extremely large buffers On Windows, rand.Read will hang indefinitely if passed a buffer larger than 1 \u0026lt;\u0026lt; 32 - 1 bytes. via Go 1.18.3 and Go 1.17.11 are released （以下未稿）\nCVE-2022-30629 crypto/tls: session tickets lack random ticket_age_add Session tickets generated by crypto/tls did not contain a randomly generated ticket_age_add. This allows an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption. via Go 1.18.3 and Go 1.17.11 are released （以下未稿）\nCVE-2022-30580 os/exec: empty Cmd.Path can result in running unintended binary on Windows If, on Windows, Cmd.Run, cmd.Start, cmd.Output, or cmd.CombinedOutput are executed when Cmd.Path is unset and, in the working directory, there are binaries named either “..com” or “..exe”, they will be executed. via Go 1.18.3 and Go 1.17.11 are released （以下未稿）\nCVE-2022-29804 path/filepath: Clean(.\\c:) returns c: on Windows On Windows, the filepath.Clean function could convert an invalid path to a valid, absolute path. For example, Clean(`.\\c:`) returned `c:`. via Go 1.18.3 and Go 1.17.11 are released （以下未稿）\nCVE-2022-1705 net/http: improper sanitization of Transfer-Encoding header The HTTP/1 client accepted some invalid Transfer-Encoding headers as indicating a “chunked” encoding. This could potentially allow for request smuggling, but only if combined with an intermediate server that also improperly failed to reject the header as invalid. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-32148 When httputil.ReverseProxy.ServeHTTP was called with a Request.Header map containing a nil value for the X-Forwarded-For header, ReverseProxy would set the client IP as the value of the X-Forwarded-For header, contrary to its documentation. In the more usual case where a Director function set the X-Forwarded-For header value to nil, ReverseProxy would leave the header unmodified as expected. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-30631 compress/gzip: stack exhaustion in Reader.Read Calling Reader.Read on an archive containing a large number of concatenated 0-length compressed files can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-30633 encoding/xml: stack exhaustion in Unmarshal Calling Unmarshal on a XML document into a Go struct which has a nested field that uses the any field tag can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-28131 encoding/xml: stack exhaustion in Decoder.Skip Calling Decoder.Skip when parsing a deeply nested XML document can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-30635 encoding/gob: stack exhaustion in Decoder.Decode Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-30632 path/filepath: stack exhaustion in Glob Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-30630 io/fs: stack exhaustion in Glob Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\nCVE-2022-1962 go/parser: stack exhaustion in all Parse* functions Calling any of the Parse functions on Go source code which contains deeply nested types or declarations can cause a panic due to stack exhaustion. via Go 1.18.4 and Go 1.17.12 are released （以下未稿）\n例によって\u0026hellip; Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.18.4.linux-amd64.tar.gz）を取ってきてインストールすることを強く推奨する。 以下は完全手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://go.dev/dl/go1.18.4.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.18.4.linux-amd64.tar.gz $ sudo mv go go1.18.4 $ sudo ln -s go1.18.4 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.18.4 linux/amd64 Windows は Scoop 経由で OK\nアップデートは計画的に。\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n"
    },
    {
      "title": "「ブログはやはり『死に続けている』」",
      "section": "remark",
      "description": "今後もネットの背景に徹して緩〜く活動を続けていければな，と思う所存です。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/07/slow-motion-car-crash/",
      "published": "2022-07-15T11:45:28+00:00",
      "update": "2022-07-15T17:20:25+00:00",
      "content": "面白い記事を見つけた。\nEvan WilliamsがMediumトップから退任 - by 堀 正岳 （@mehori） 私自身のアカウントは随分前から放置プレイ状態だし，今更 Medium に微塵も感傷はないのだけど，後半のブログの話は面白かった。\n「ブログは終わった」ちうのは大昔から言われてるよね。 ぶっちゃけ Twitter や Facebook が台頭し始めたゼロ年代半ばには既に言われてたし，そういう意味じゃ「ブログはやはり「死に続けている」」というのはその通りなんだろう。\nでもネットから「ブログ」がなくなったようには見えない。\nいや，動画って見るのまどろこしいじゃん。 10分のコンテンツを2倍速で見ても5分かかるんだぜ。 それならテキストで要約記事を書いてくれよ！ そっちを見るから。\nまぁSTEALTH一光さんや MindaRyn さんのチャネルとかは楽しく見てるけどね。 それぞれの得意な道具を使えばいいぢゃん，とは思う。\nただ\nツイッター、TikTok、YouTubeといったようにわかりやすいアプリがあるメディアは注目されますが、ブログにはそういったものはない Evan WilliamsがMediumトップから退任より YouTubeやTikTokと同じような、それに対抗できる力も意味も、もはやない Evan WilliamsがMediumトップから退任より というのはまさに「そのとーり！」で，それ故に\nこのように、ブログはより背景にとけこみ、その人のネット上のすべての活動を包み込む役割に変化してゆくのでしょう。\nブログはその人が生きてゆき、ネットになにかを残してゆく足跡のようなものになりつつあります。\nEvan WilliamsがMediumトップから退任より というのはストンと腑に落ちた。\nそもそも「ブログ」は “Web-log” なんだし，これって「ブログ」が本来の機能を取り戻してるってことだよね。 Web 2.0 な山師たちの口車に乗っかり，いかにもそこに「宝の山」があるかのように錯覚し，ネットバブルよろしく狂躁に陥った状態からようやく回復した，という感じか。\nというわけで，今後もネットの背景に徹して緩〜く活動を続けていければな，と思う所存です。\nどっとはらい\n参考図書 ウェブログ・ハンドブック―ブログの作成と運営に関する実践的なアドバイス レベッカ ブラッド (著), Blood,Rebecca (原著), yomoyomo (翻訳) 毎日コミュニケーションズ 2003-12-01 単行本 483991107X (ASIN), 9784839911072 (EAN), 483991107X (ISBN) すみません。買ってないです。だって目がチカチカするんだもん。つか絶版なのか？ 表紙をかえて Kindle で出してくれれば歴史資料として買うのに（笑）\nreviewed by Spiegel on 2022-07-15 (powered by PA-APIv5)\n"
    },
    {
      "title": "GitHub Copilot は貢献者から貢献を奪うか？",
      "section": "remark",
      "description": "この件を拗らせるようならプロアカウント契約を解除することも考えないといけないだろう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/07/code-launderring/",
      "published": "2022-07-02T07:42:46+00:00",
      "update": "2022-07-03T06:29:25+00:00",
      "content": "この前から話題になっている GitHub Copilot だが，ついに SFC (Software Freedom Conservancy) が GitHub と敵対する？ 声明を出したようだ。\nGive Up GitHub: The Time Has Come! - Conservancy Blog - Software Freedom Conservancy 「GitHubの利用を中止しよう」 SFCが提言、AI開発ツールに疑念 | TECH+ 引き合いに出された SourceForge に佐渡秀治さんが反応して\n唐突に呼ばれた気がしたのでSFCの記事を読んでみたが、今は不使用のキャンペーンだけだけど、GitHubがこのままの姿勢ならSFCはいずれ訴訟を仕掛けることも考えそうというぐらいの勢いだな。Amazon CodeWhispererは適切な帰属とライセンス情報を提供するので問題ないというスタンスか。まあ、そこだよね https://t.co/xmphKprdoS\n\u0026mdash; Shuji Sado (佐渡 秀治) (@shujisado) July 1, 2022 と tweet しておられるのが面白かった。\n私が今回の一連を見て最初に連想したのは，ゼロ年代の Google Book Search だったのだが\nGoogle Books の Library Book Scan すら Fair Use と言われたのに\u0026hellip; これとはちょっと違うなとは思っていた。 うまく言語化できないが，つらつらと書いてみる。\nPekka Himanen 等による古典 “The Hacker Ethic” (邦題『リナックスの革命』) を引くまでもなく FOSS でコードを書く人にとって最も価値があるのは「自由なコード」であり，その FOSS プロジェクトにコミットする人々にとって一番の報酬はコード（＝自由）に「貢献」したという事実そのものである。\nにも関わらず GitHub Copilot はコードに付随する貢献を洗い落としてしまう。 貢献を洗い落とされたコードは「GitHub Copilot のもの」としてしれっと使われる。 上の tweet の retweet 元にもあるように，これは2010年代で散々言われた「あなたが客でないとすれば、商品だ」という搾取の構造と言える。\n言うなれば「コード洗浄 (ロンダリング) 」といったところだろうか。 上手いフレーズを思いつかなくてゴメン \u0026#x1f647;\nそう考えると\nOne recent preliminary finding was that AI-assisted software development tools can be constructed in a way that by-default respects FOSS licenses. We will continue to support the committee as they explore that idea further, and, with their help, we are actively monitoring this novel area of research. While Microsoft\u0026rsquo;s GitHub was the first mover in this area, by way of comparison, early reports suggest that Amazon\u0026rsquo;s new CodeWhisperer system (also launched last week) seeks to provide proper attribution and licensing information for code suggestions. via Give Up GitHub: The Time Has Come! Software Freedom Conservancyの委員会はAI支援ソフトウェア開発ツールに関する調査を続けていると説明するとともに、FOSSライセンスを尊重する形でこうした機能を実現することは可能であることが最近の調査からわかったことなどにも言及している。\n同委員会は今後もこの分野への取り組みを続けるとしているほか、Amazon CodeWhispererのようにコード提案時に適切な帰属とライセンス情報を表示しようとする取り組みがあることについても説明している。\n「GitHubの利用を中止しよう」 SFCが提言、AI開発ツールに疑念より というのもライセンス処理の問題だけではないと思えてくる。\nGitHub をはじめとするサービスは単なる「git リポジトリ・サービス」ではなく，コードを中心としたコミュニティを構成し貢献を可視化するプラットフォームとして機能している。 このことを軽視してはいけないと思う。\n私は GitHub にはかなりお世話になってるが，この件を拗らせるようなら（乗り換えまではしなくても）プロアカウント契約を解除することも考えないといけないだろう。\n【おまけ1】 GitHub Copilot は Fair Use か 元コードのライセンスを無視してどんぶり勘定する GitHub Copilot が fair use かどうかについては微妙だと思う。 まぁ「公正な利用」の概念がない日本では一発アウトだろうが（笑）\n先に紹介した Google Book Search の件や2021年まで争われていた Google vs Oracle の訴訟を見ても分かるように，あるサービスによる知財の取り扱いが fair use に基づいているか判断するのは難しい。 というか米国の場合，訴訟が始まってからがスタートラインなんだよな。\n訴訟が始まって GitHub やその親玉である Microsoft が FOSS コードやその貢献についてどのように考えているか明らかになれば，もっと色々と語ることがあるかも知れない。\n【おまけ2】目的によって利用を制限するのであればそれはもう FOSS ではない ゼロ年代に 9.11 から始まる一連のテロや戦争のときもそうだったし，2022年のロシアがウクライナに仕掛けた侵略戦争勃発時にも見られたが，抗議目的でソフトウェアの（著作権的な意味での）利用を制限することは FOSS の目的や手段にマッチしない。 「自由とはそういうことだ」。\nたとえば，今回の GitHub Copilot に抗議・拒否する目的で既出の FOSS 製品の利用を制限したいのであれば「FOSS でないなにか」に変更しなければならない。 それは今まで積み上げてきたエコシステムの基盤を崩すことになる。\nGitHub Copilot には反対するけど今のエコシステムを壊したくないなら SFC が言うように「GitHub をあきらめる（give up GitHub）」しかない。 それとも（今まで積み上げてきたものを壊してでも）断固とした対決姿勢をとるか。 「リポジトリに Copilot 拒否オプションを付ければいいぢゃん」とかいった簡単な話ではないのである。\nさて，どうなる？ どうする？\nブックマーク Copilot — Free Software Foundation — Working together for free software : FSF によるリンク集 GitHub Copilotを正式リリース。すべての開発者が利用できるようになりました。 - GitHubブログ 戦争に抗議する「プロテストウェア」が、オープンソースエコシステムの信頼を揺るがしている | WIRED.jp 参考図書 リナックスの革命 ― ハッカー倫理とネット社会の精神 ペッカ ヒマネン (著), リーナス トーバルズ (著), マニュエル カステル (著), 安原 和見 (翻訳), 山形 浩生 (翻訳) 河出書房新社 2001-05-26 単行本 4309242456 (ASIN), 9784309242453 (EAN), 4309242456 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 大昔に買ったんだけどうろ覚え。買い直そうかと思ったが邦訳は Kindle ではないのか。それにしても「リナックスの革命」とかいう頭の悪いタイトルはどうにかならなかったのだろうか。副題だけで十分ぢゃん。\nreviewed by Spiegel on 2020-12-12 (powered by PA-APIv5)\n夏をあきらめて サザンオールスターズ (メインアーティスト) TAISHITA 1998-06-25 (Release 2018-08-06) MP3 ダウンロード B07FMV7HMD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; カラオケでよく唄うやつ。原由子バージョンが好き。\nreviewed by Spiegel on 2022-07-03 (powered by PA-APIv5)\n"
    },
    {
      "title": "立体顔パンツ",
      "section": "remark",
      "description": "次回からは狙ってこれを買うことにしよう。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/07/3d-face-briefs/",
      "published": "2022-07-02T04:59:26+00:00",
      "update": "2022-07-02T06:03:04+00:00",
      "content": "みなさま，いかがお過ごしでしょうか。 島根県は出雲市を中心にやらかし中でして「出雲市で大手企業つったらF社かM社しかないやろ！」と職場でツッコミの嵐となっております（笑）\n2022年7月1日 島根県発表「新型コロナウイルス感染症患者の発生状況について」 ところで，近所のドラッグストアで叩き売りしていたマスクがいい感じだったので，覚え書きとして記しておく。\n3D立体構造 4層不織布マスク 男女兼用 ふつうサイズ 個包装 ホワイト 30枚入 ヒロコーポレーション ヘルスケア\u0026amp;ケア用品 B09KLH1JQ2 (ASIN), 4562350984493 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 顔にフィットしてズレにくい。唇が布地（不織布）に当たらないのもよい。小さく折り畳める。\nreviewed by Spiegel on 2022-07-02 (powered by PA-APIv5)\n唇が布地（不織布）に当たらないのが素晴らしい。 あれが一番気持ち悪かったんだよな。 ぶっちゃけ「マスクなんて皆おなじ」と思ってたが，次回からは狙ってこれを買うことにしよう。\n某侵略戦争で相対的に「コロナ恐怖症」が薄れたのか，それともここのところの暑さで「屋外でマスクをすることのヤバさ」に気がついたのか，少なくとも屋外でマスクをする人が減ってきたのは結構な話だが，それとともにマスクを「顔パンツ」と揶揄する向きもあるそうで，広島時代に歓楽街の店で見せてもらった「夜の電話帳」に載ってるホステスさんの写真を思い出したり1。\n「夜の電話帳」に載ってるホステスさんってみんな口元を隠すんだよね。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "Google Fonts から Bunny Fonts に乗り換える",
      "section": "remark",
      "description": "というわけで，うちのサイトは Bunny Fonts で統一することにした。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/06/migrate-to-bunny-fonts-from-google-fonts/",
      "published": "2022-06-25T05:57:34+00:00",
      "update": "2022-06-25T05:58:12+00:00",
      "content": "EU 圏に Bunny Fonts という Web フォントの CDN サービスがあるそうな。\nBunny Fonts | Explore Faster \u0026amp; GDPR friendly Fonts With a zero-tracking and no-logging policy, Bunny Fonts helps you stay fully GDPR compliant and puts your user\u0026rsquo;s personal data into their own hands. Additionally, you can enjoy lightning-fast load times thanks to bunny.net\u0026rsquo;s global CDN network to help improve SEO and deliver a better user experience. via About Bunny Fonts | Faster \u0026amp; GDPR friendly Fonts 素晴らしい！ 早速試してみることにした。 まずは日本語混じりサンプルテキストを用意して NOTO Serif JP フォントを探してみる。\nvia Bunny Fonts おー，あるやないかい！\nvia Bunny Fonts 詳細を眺めてみると\nvia Bunny Fonts という感じに複数のウェイトが用意されているのが分かる。 画面右側の [Add variant] ボタン押下でインポートするフォント・ウェイトを選択する。\nちなみに目安としては\nウェイト 名称 200 ExtraLight 300 Light 400 Regular 500 Medium 600 SemiBold 700 Bold 900 Black といった感じ。 通常の文章であれば 400 と 700 があれば十分だろう。\nNOTO Sans JP フォントでも同様にフォント・ウェイトを選択する。\n画面右上の [Fonts+] ボタンを押下すると\nvia Bunny Fonts という感じに選択したフォント・ウェイトが一覧表示される。 上部の\n@import url(https://fonts.bunny.net/css?family=noto-sans-jp:400,700|noto-serif-jp:400,700); のコードを CSS ファイルのどこかに書いておけば Web フォントの情報がインポートされる。 また [Switch to HTML] ボタン押下で\n\u0026lt;link href=\u0026#34;https://fonts.bunny.net/css?family=noto-sans-jp:400,700|noto-serif-jp:400,700\u0026#34; rel=\u0026#34;stylesheet\u0026#34; /\u0026gt; と HTML の \u0026lt;link\u0026gt; 要素の表現に切り替わるので，これを HTML ファイルの \u0026lt;head\u0026gt; に組み込んでもよい。\nこの URL の中身を覗いてみると\n/* japanese */ @font-face { font-family: \u0026#39;Noto Serif JP\u0026#39;; font-style: normal; font-weight: 400; src: url(https://fonts.bunny.net/noto-serif-jp/files/noto-serif-jp-japanese-400-normal.woff2) format(\u0026#39;woff2\u0026#39;), url(https://fonts.bunny.net/noto-serif-jp/files/noto-serif-jp-japanese-400-normal.woff) format(\u0026#39;woff\u0026#39;); } /* latin */ @font-face { font-family: \u0026#39;Noto Serif JP\u0026#39;; font-style: normal; font-weight: 400; src: url(https://fonts.bunny.net/noto-serif-jp/files/noto-serif-jp-latin-400-normal.woff2) format(\u0026#39;woff2\u0026#39;), url(https://fonts.bunny.net/noto-serif-jp/files/noto-serif-jp-latin-400-normal.woff) format(\u0026#39;woff\u0026#39;); } てな感じになっている。 どうやら Google Fonts のようにファイル分割はされないようだ。 しかも font-display プロパティも設定されないので日本語フォントのようにグリフ数が多いものはちょっと不利かも知れない。\nまぁ，ちょっとでも (個人のプライバシーに敵対的な) Google 依存を減らしたいのであれば Bunny Fonts は悪くない選択肢だと思う。 というわけで，うちのサイトは Bunny Fonts で統一することにした。 でも，まだ，フォントに関しては Font Awesome への依存があるので完全に追跡を振り切ってるわけでもないんだけどね。\nブックマーク トラッキングなし＆ログ取得なしで1400種類超のウェブフォントを無料で利用可能な「Bunny Fonts」 - GIGAZINE Google Fonts が日本語に対応してた "
    },
    {
      "title": "「USB メモリ」を「USB」って略すな！",
      "section": "remark",
      "description": "新聞やテレビって言葉を雑に扱うよな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/06/usb-memory-is-not-usb/",
      "published": "2022-06-25T01:04:55+00:00",
      "update": "2022-06-25T02:33:49+00:00",
      "content": "いや，ごめん。 この前やったばかりで当分はやるまぁと思っていたのだが，不覚にも笑ってしまったので。 笑ってるうちに書いておく。\n人間ってのは何度でも間違うし何度でも失敗する生き物である。 成功は数多の失敗からしか生まれない細い一本の糸である。 とはいえ，これは流石に。\n全市民の個人情報を保存したUSBメモリ紛失についてまとめてみた - piyolog ひさしぶりにセキュリティ・インシデントのロイヤルストレートフラッシュ（笑） 今回の件を要約すると\n手続きを経ずに機密データを持ち出し 使用済みの機密データの消去を怠る 出先からの直帰と見せかけて居酒屋に直行 泥酔して路上で寝コケる データの入った鞄を紛失 ということらしい。 なお，上の記事によると件のデータの入った鞄は紛失者が立ち寄ったとされる（←酔ってうろ覚えらしい）マンションで発見されたそうな。\nなんというか，脳内クールポコが叫んじまったよ。\n必見！寒さに震えるクールポコ　こんな映像見たことない - YouTube ちなみに BIPROGY 社は元日本ユニシスだそうな。 「聞いたこともないベンダーを使うリスク」みたいな tweet も見かけたが，ちゃんとした会社です。 ちゃんとした会社でもやらかすときはやらかすっちうことで。\n破滅的な結末にはならなそうだが，関係者の後始末が大変だろう。 現場の方々にはお見舞い申し上げます。\n私もインターネットを含む外部ネットワークを遮断したセキュリティ・ルームで仕事をしたことがあるが，ケータイも含めて電子機器の持ち込み・持ち出しは一切 NG だったし（どうしても持ち込み・持ち出したい場合は別ルートで検閲が入る），ゲートでは金属探知機と厳つい警備員さんによる入館・退館チェックがあった。 本来はそのくらいの厳密さが必要だし「そこまでせんでも\u0026hellip;」ということなら「ネットワークを遮断したセキュリティ・ルーム」がホンマに必要なのか再検討すべきだよね。\nうーん。 たとえば外部ネットワークとつながった検疫ルームを作って，そこまではクラウド・ストレージ等でデータをやり取りしつつ，そこから先のネットワーク遮断ルームとの間だけ許可された外部ストレージを使うとか。 やっぱ面倒なことこの上ないな（笑）\n！！駄菓子菓子 (だがしかし) ！！ 今回の最重要ポイントはそこではないのだ。\nこれは Facebook の友人に指摘されて改めて気付いたのだが，新聞・テレビなメディアがこぞって「USB メモリ」を「USB」と略してくさる。 いやさ，略すのは別にいいけど意味が変わったり意味が消失したりするのは駄目だろう。 ホンマ，新聞やテレビって言葉を雑に扱うよな。 そんで有名人や自称文化人とかがうっかり真似して定着してしまうの。\nというわけで，今のうちに言っておこう。\n「USB メモリ」を「USB」って略すな！ シリコンパワー USBメモリ 32GB USB3.1 / USB3.0 亜鉛合金ボディ 防水 防塵 耐衝撃 永久保証 PS4動作確認済 Jewel J80 SP032GBUF3J80V1TJA シリコンパワー (Release 2017-02-01) Personal Computers B01NBU1OS5 (ASIN), 4712702655292 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; OS 移行用に購入。ひたすらデザインで決めた（笑） よく考えたら32GBも要らなかった。まぁ，何か使い道があるだろう。\nreviewed by Spiegel on 2019-04-21 (powered by PA-APIv5)\n"
    },
    {
      "title": "『ユニコーン企業のひみつ』読書会（2）",
      "section": "remark",
      "description": "トライブ，チャプター，ギルド，そしてカンパニーベット",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/06/competing-with-unicorns-2/",
      "published": "2022-06-18T12:37:06+00:00",
      "update": "2022-06-18T12:37:25+00:00",
      "content": "先月から始まった『ユニコーン企業のひみつ』読書会の2回目。\n第2回『ユニコーン企業のひみつ』オンライン読書会 - connpass 今回は4章から9.4章までだったが，内容盛り沢山なので複数回に分けて紹介する。\nところでヘッドセットのマイクの調子が悪いのよ。 自分の声は聞こえないので分からなかったが，過剰にノイキャンが効いてる感じらしい。 観念して USB 接続のマイクを発注した。 とほほ\naudio-technica USBコンデンサーマイク 在宅勤務/録音/動画配信/ポッドキャスト AT9933USB Audio Technica(オーディオテクニカ) (Release 2015-02-13) エレクトロニクス B00T5ANN00 (ASIN), 4961310129798 (EAN) Bluetooth 接続のヘッドセットの調子が悪いので，マイクだけ USB 接続のものを買ってみた。\nreviewed by Spiegel on 2022-06-18 (powered by PA-APIv5)\n目次 『ユニコーン企業のひみつ』読書会（1） 『ユニコーン企業のひみつ』読書会（2） ← イマココ “There is No Spotify Model” 今回の範囲からは外れるが，読書会で以下の記事が紹介されていたので共有する。\nSpotify’s Failed #SquadGoals Spotifyは \u0026lsquo;Spotifyモデル \u0026lsquo;を使っていない - アジャイルよろず相談室（日本語訳） 実はこの辺の話は「訳者あとがき」で少し言及されている。 「訳者あとがき」によると\nSpotify でのスクワッドやトライブ、ギルドといった少し変わった名前のエンジニアリング組織編成、いわゆる「Spotify モデル」は、アジャイルコーチの Henrik Kniberg らの記事や動画をきっかけに英語圏のアジャイル界隈では広く認知されました。本文での説明も、初出である \u0026ldquo;Scaling@Spotify\u0026rdquo;（2012年）、\u0026ldquo;Spotify Engineering Culture\u0026rdquo;（2014 年）\u0026ldquo;Spotify Rythm\u0026rdquo;（2016 年）を踏まえたものになっています。とはいえこれも、あくまで著者の在籍時の経験にもとづいたスナップショットです。 『ユニコーン企業のひみつ』訳者あとがきより とある。 前回紹介したようにスタートアップが「学習する機械」であり「失敗はゲームの一部」であるなら，マネジメントそのものも同様にイテレーションしているだろうと想像できる。\nじゃあ『ユニコーン企業のひみつ』はもう古くて使えないのかというと，さにあらずで\n繰り返しますが、大切なのはスクラムか Spotify モデルかというプラクティスではありません。重要なのはプラクティスを支える原則や、それを生みだす価値観のあり方、すなわち文化です。「文化が重要」なのです。 『ユニコーン企業のひみつ』訳者あとがきより と記されている。\n「訳者あとがき」ではこの辺の話を含め『ユニコーン企業のひみつ』以外の本も紹介されているので「いまさら Spotify モデルかよ！」という人は「訳者あとがき」を立ち読みするところから始めてもいいかも知れない（笑） ちなみに『ユニコーン企業のひみつ』で「文化」の話は9章で登場する。\n前説おわり。\nトライブ（Tribe），チャプター（Chapter），ギルド（Guild） トライブ，チャプター，ギルドは Spotify が考案した組織の概念で，スクワッドの機能を全社レベルにスケールするための構造化と言える。 ひとつずつ見ていこう。\nトライブ トライブは前回紹介したスクワッドを束ねたものだ。 といってもトライブはスクワッドの上位組織ではなく\nスクワッド以外の組織構造（トライブ、チャプター、ギルド）はどれも、スクワッドの支援と調整のために組まれた「足場」 『ユニコーン企業のひみつ』4.2章より であり，あくまでも自律（フルスタック）した小さなチームである「スクワッド第一」で\nスクワッドとトライブのどちらも、どんな顧客に向けたものなのかがきちんと特定された、明快なミッションを持っていなければならない。ミッションには成功を示す明確な指標が必要であり、トライブはその達成に責任がある。 『ユニコーン企業のひみつ』4.2章より ということらしい。\nチャプター チャプターはトライブ内のスクワッドを横断し，同じ専門性を持つメンバーで構成されるグループだ。 スクワッドを縦串とするならチャプターは横串と考えてもいいかも知れない。 ただし，いわゆる「マトリクス組織」構造における「人材プール」ではないらしい（私はいまいちピンとこなかったが）。\nギルド ギルドは\n同じ専門分野に興味のあるメンバーからなるグループで、組織を横断して形成される。 [\u0026hellip;] チャプターとは異なり、ギルドは正式な組織ではない。 『ユニコーン企業のひみつ』4.6章より だそうな。 緩い技術交流コミュニティ，あるいはもっと緩い勉強会みたいなイメージだろうか。\nこのことを過小評価してはいけない。学ぶことの持つ力、すなわち、自分自身が成長していると感じ続けられることは、勤勉でスマートな、知性豊かな人たちにとってはこの上ない魅力だ。これこそ、最も優秀で素晴らしいメンバーを惹きつけ続けるための秘訣だ。 『ユニコーン企業のひみつ』4.6章より スクワッド・トライブの自己組織化 4.7章でトライブの面白い例が紹介されている。 多めの引用はご容赦。\nSpotify の組織改編がいつもこうだったというわけではないが、ある大規模なトライブの組織再編にあたり、アジャイルコーチをファシリテーターとしたワークショップを開催したことがあった。そのワークショップではリーダー陣が一堂に会して、共同で新しいトライブの編成を考えた。といっても、その時点では新しいトライブに具体的なメンバーをアサインしなかった。Spotify はメンバーに自分で自分の所属をサインアップさせることにした。 『ユニコーン企業のひみつ』4.7章より この一連の流れが特筆に値すると思ったのは、テック企業の本気を目のあたりにしたからだ。テック企業は意思決定を現場に任せて、メンバーの自己組織化を促すためなら、どこまでも突き進む。 『ユニコーン企業のひみつ』4.7章より Spotify や他のテック企業が発見したのは、メンバーが転職せずにすぐれた仕事を続けてくれる可能性が高くなるのは、内容をよく理解した仕事を自分で選び、気に入った人たちと一緒に働いている場合だということだ。 『ユニコーン企業のひみつ』4.7章より なんとなく「スクワッドが寄り集まってトライブを形成する」みたいなイメージで考えていたのだが，最初から構造化されたスクワッド・トライブを構成して，そこに向かって各々サインアップするって感じなのね。\nここまで読み進めるとチャプターが「人材プール」ではないと述べられていることの意味が少し分かる。 上から辞令が降りてくるわけではないのだ。 スタートアップ内では自分の仕事は自分で見つけないといけないらしい（笑） 言い方を変えるなら，それができる「人材」こそがスタートアップでは求められているわけだ。\nカンパニーベット（Company Bet） 「カンパニーベット」も Spotify の用語だそうで\nカンパニーベットは、会社が取り組みたい重要事項を、終わらせたい順に並べたリスト 『ユニコーン企業のひみつ』5.2章より を指すらしい。 もちろん，ただ漫然と優先順位を決めるのではなく DIBB (Data, Insight, Belief, Bet) と呼ばれる意思決定フレームワークに基づいて決定していく。\n前節の「スクワッド・トライブの自己組織化」とは異なりカンパニーベットは上から降りてくるメッセージだ。 とはいえ，これは業務命令ではない。\n念を押しておくが、自分たちの時間を何に費やすべきかの最終的な決定権はあくまでスクワッドにある。スクワッドの自律性は揺らがない。スクワッドはベットや DIBB を参照することで、自分たちが会社全体の役に立っていることと、利己的な部分最適に陥っていないことを自分たちで点検する。ベットもDIBB もスクワッドの判断を支援することに存在意義があるのだ。 『ユニコーン企業のひみつ』5.5章より カンパニーベットは，喩えるなら，現場のエンジニアの向きを揃える整流器のようなものだろうか。\n大きなチャンスに狙いを絞ったベットに向けて「部隊」を集結させ、総力をあげてこれに取り組む。やり遂げたら、次の大がかりなベットが始まるまでの間、各自はそれぞれ普段の業務に戻る。Spotify のようなテック企業はそうやって物事を進めている。 『ユニコーン企業のひみつ』5.5章より というわけで\u0026hellip; 次回へ続く。\n参考図書 ユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳) オライリージャパン 2021-04-26 単行本（ソフトカバー） 4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元より電子版も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。\nreviewed by Spiegel on 2022-05-21 (powered by PA-APIv5)\n"
    },
    {
      "title": "Atom の落日",
      "section": "remark",
      "description": "ユーザ間のエコシステムが出来上がっている製品であっても廃れたらあっという間",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/06/sunsetting-atom/",
      "published": "2022-06-11T00:19:04+00:00",
      "update": "2022-06-11T00:19:35+00:00",
      "content": "GitHub が Microsoft に買収されて以来，その内そうなるだろうとは思っていたが，ついにこの日が来てしまったか。\nToday, we’re announcing that we are sunsetting Atom and will archive all projects under the organization on December 15, 2022. via Sunsetting Atom | The GitHub Blog Atom には思い入れがある。 思い返せば2015年は色々と心境の変化があった年で，たとえば Windows 7 のサポート終了をにらんで Windows 依存からの脱却を模索し始めた年で Go で遊び始めた年でもある。 「Windows 依存からの脱却」の最大の障害はテキストエディタの秀丸に依存しきっていたことで，マルチプラットフォームで手に馴染むエディタを探すことが最優先事項だったのだ。\nというわけで，私の中で Atom と Go はセットになっていた。 Atom の拡張機能である go-plus の出来が（当時としては）よかったのも大きい。\nそういえば Twitter で「VSCode に「中華を初めて統一した始皇帝」みたいな印象ができつつある」みたいな tweet を見かけたが，エディタ界の始皇帝は vim だろうとか思ってみたり。 このブログでも何度か書いているが，私は vi にトラウマがあって， vi/vim を起動するとペーペーの新人の頃に工場の片隅でガチの VT 端末を前に泣きながらデバッグしていたあの頃がフラッシュバックしてしまうのだ。 なので最初から vim という選択肢はなかった。 まぁ Ubuntu 環境にいると結局は vim も使わざるを得ないのだが（笑）\nプログラミルクボーイ「Vim」 - YouTube 話を戻そう。\n私の中で風向きが変わったのは “Language Server Protocol (LSP)” が登場したあたり。 LSP はホンマに画期的なアイデアで，当然 Go 用の lunguage server も登場するんだけど1 go-plus はこれを取り込むことができなかった。\n加えて，私が IT 業界に再就職して支給された Windows 10 機に Atom を入れたら堪えられないほど遅いのにビックリし，観念して VS Code に乗り換えたのだった。\nパソコンに Visual Studio Code を導入する（再チャレンジ） Microsoft Windows を嫌って Ubuntu や Atom にしたというのに，結局は Microsoft に屈してしまったわけだ（「くっころ」とか言わないよ）。 今やすっかり手に馴染んでしまったけどね。\nAtom が登場したのは2014年だそうだが，当時は SublimeText のカウンタという位置付けだったと思う。 8年というのはソフトウェア製品としては息が長いほうだと思うけど，テキストエディタは下手すると10年20年と使うものなので簡単に消えられては困るわけですよ。 それでも時代の流れには逆らえない。 ユーザ間のエコシステムが出来上がっている製品であっても廃れたらあっという間ということか。 まさに「落日」だな。\nせめて VS Code のエコシステムが永く続くことを祈ろう。\nブックマーク Why GitHub Is Killing Atom Text Editor Introducing Zed – A collaborative code editor written in Rust LSP が発表された頃 Go 用の lunguage server としていくつかの実装があったが，現在はほぼ gopls 一択である。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    }
  ]
}
