{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "Baldanders.info 開設15周年記念に骨伝導スピーカーを買うたった！",
      "section": "remark",
      "description": "いやぁ，音楽聞いてるのに耳が自由って素晴らしいですね。こりゃあ，イヤフォンには戻れんわ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/10/15th-anniversary-of-baldandersinfo/",
      "published": "2019-10-10T12:29:18+00:00",
      "update": "2019-10-10T12:38:28+00:00",
      "content": " 2019年10月で Baldanders.info サイト開設15周年になる。\n特にネタが思い浮かばなかったので，記念品として骨伝導スピーカーを買うたった。 「自分にご褒美」というやつである（笑）\n 買うたった  実は，通勤のお供として4年前に買ったスポーツタイプのヘッドセットを愛用していたのだが\n 今のイヤフォンがボロボロなので新しいのを購入。今回はスポーツタイプを買ってみた。安かったし  流石にバッテリーがヘタり始めていて，買い替えを検討していたのだ。\n最初は au がくれたクーポン券で買った無線イヤフォンを使っていたのだが，耳栓タイプは駄目。 周囲の音が聞き取りにくくて通勤に使えないのよ。 上のヘッドセットはオープンタイプで適度に周囲の音も聞こえてよかったんだけどなぁ。\nちうわけで何かないかとネットを漁ってたら「ネックスピーカー」と「骨伝導スピーカー」が目に入った。\nネックスピーカーはかなり魅力的だったんだけど，公共交通機関で移動している身としては音漏れが気になって躊躇するところだ（どなたか使い心地を教えてください）。\n骨伝導スピーカーはまだお値段高めなんじゃないかと思っていたが，どうもピンキリみたいで，3千円くらいのものから2万円くらいまで結構幅があるようだ。 今回は Amazon 価格で5千円弱の廉価版を選んだ。 こういうのって消耗品だしね（バッテリーがヘタれれば試合終了）。\n使い心地はめちゃくちゃいい！ スピーカー部分をこめかみに当てるので窮屈になるかと思ってたが，全くそんなこともない。 いやぁ，音楽聞いてるのに耳が自由って素晴らしいですね。 こりゃあ，イヤフォンには戻れんわ。\nというわけで，確かに「自分にご褒美」いただきました。\nそうそう。 これからも「書きたくないときには書かない」「他人の評価など気にしない」というスタンスで飽きるまでは続けていく所存であります。\nブックマーク  Baldanders.info 正式オープン Baldanders.info 10周年だった！ 20周年記念！  参考  【2019最新版 Bluetooth5.0】Bluetooth イヤホン 骨伝導 ヘッドホン 高音質 自動ペアリング スポーツ IP56防水 耳が疲れない 超軽量 完全ワイヤレス イヤホン マイク内蔵 Siri対応 ノイズキャンセル ハンズフリー通話 ブルートゥース ヘッドホン iPhone\u0026Android適用 (ブラック) Bearoam エレクトロニクス B07QJB7R13 (ASIN), 0694090550660 (EAN), 694090550660 (UPC) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  廉価版だし音質には目を瞑るとして（特に低音がねー），骨伝導スピーカー最高！ もうイヤフォンには戻れない。\nreviewed by Spiegel on 2019-10-10 (powered by PA-APIv5)\n  TEMPEST 石原夏織 (メインアーティスト) ポニーキャニオン 2019-07-17 (Release 2019-07-17) MP3 ダウンロード B07TVGXD2P (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  アニメ版「魔王様、リトライ！」のOP曲。\nreviewed by Spiegel on 2019-10-10 (powered by PA-APIv5)\n "
    },
    {
      "title": "バベルのインターネットと FOSS",
      "section": "remark",
      "description": "老人のひとりである私から言わせてもらうなら，私達はあの “9.11” 以後に起こったことを忘れるべきではない，ということだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/10/the-internet-of-babel/",
      "published": "2019-10-09T02:39:52+00:00",
      "update": "2019-10-09T02:40:08+00:00",
      "content": " 月末月初のドタバタがようやく終わって少し落ち着いてネットを見回してたら，いろいろ見落としていたようだ。 そのうちのひとつ。\n 我々はフリーソフトウェアの定義を再考すべきなのだろうか？ - YAMDAS現更新履歴  最近 Facebook とかの TL でもこの手の話題が散見され気にはなっていたのだが，その辺の状況をこの記事は上手くまとめている。 分断されるインターネットでは必然となる議論なのだろう。\nこのブログではちょいちょい紹介しているが，昔読んだ本の一節をもう一度紹介しよう。\n  理学は、真理の探究であり、工学は善の実現である。そして、藝術は美の表現である－－これで所謂「真美善」が揃う  via はやぶさ―不死身の探査機と宇宙研の物語  では工学が実現すべき「善」とは何なのか。 「孤独な正義」は「善」と言えるのか。\n善と悪を定義するのは難しいというか不可能だと思うのだが，両者の関係をいくつか記述することはできるだろう。 そのひとつは「善も悪もお互いのルールの外側にいる」ということだ。 というか，ルールの外側にいるからこそ善悪の色分けが可能なんだろうけど。\nルールの外側にいる相手をルールで規制することには殆ど意味がない。 規制や罰則を強化したところでルールの内側にいる人たちがとばっちりを食うだけで，ルールの外側にいる相手にとってはむしろ自身の大義名分を強化することになる。\nことほど左様にルール・メイキングというのは難しいし，ルールで全てをコントロールできるわけでもない。\n故にルールの外側にいる「善」または「悪」から守るための「セキュリティ」が重要だし，その中でも「教育」が特に重要だと私は思っている。 何故なら相手を自分たちのルールに包摂できるのは「教育」しかないからだ。\n最初に挙げた記事にある懸念はもっともだけれど，昨今の醜聞で「無邪気な老人」達が退場しつつある今こそ議論の好機であるとも言える。\n老人のひとりである私から言わせてもらうなら，私達はあの “9.11” 以後に起こったことを忘れるべきではない，ということだ。\nあとは，お若い方同士で（笑）\nブックマーク  孵卵器の中のインターネット 今こそ「グリゴリの捕縛」を読め！ または遍在する草薙素子 エンジニアこそ「狂狷の徒」たれ 日本版「グレート・ファイアウォール」に関するブックマーク集 GDPR で加速するインターネット分断 絶対インターネットになんか負けたりしない!!  参考図書  イノベーション 悪意なき嘘 (双書 時代のカルテ) 名和 小太郎 (著) 岩波書店 2007-01-11 単行本 4000280872 (ASIN), 9784000280877 (EAN), 4000280872 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  「両用技術とはどのようなものか。その核心には「矛と楯の論理」がある」（まえがき「予断・診断・独断 そんなばかな」より）\nreviewed by Spiegel on 2018-12-31 (powered by PA-APIv5)\n  グリゴリの捕縛 白田 秀彰  2001-11-26 (Release 2014-09-17) 青空文庫 4307 (図書カードNo.) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  白田秀彰さんの「グリゴリの捕縛」が青空文庫に収録されていた。 内容は 怪獣大決戦 おっと憲法（基本法）についてのお話。 古代社会 → 中世社会 → 近代社会 → 現代社会 と順を追って法と慣習そして力（power）との関係について解説し，その中で憲法（基本法）がどのように望まれ実装されていったか指摘してる。 その後，現代社会の次のパラダイムに顕現する「情報力」と社会との関係に言及していくわけだ。\nreviewed by Spiegel on 2019-03-30 (powered by aozorahack)\n  セキュリティはなぜやぶられたのか ブルース・シュナイアー (著), 井口 耕二 (翻訳) 日経BP 2007-02-15 単行本 4822283100 (ASIN), 9784822283100 (EAN), 4822283100 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  原書のタイトルが “Beyond Fear: Thinking Sensibly About Security in an Uncertain World” なのに対して日本語タイトルがどうしようもなくヘボいが中身は名著。とりあえず読んどきなはれ。ゼロ年代当時 9.11 およびその後の米国のセキュリティ政策と深く関連している内容なので，そのへんを加味して読むとよい。\nreviewed by Spiegel on 2019-02-11 (powered by PA-APIv5)\n  はやぶさ―不死身の探査機と宇宙研の物語 (幻冬舎新書) 吉田 武 (著) 幻冬舎 2006-11-01 新書 4344980158 (ASIN), 9784344980150 (EAN), 4344980158 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  宇宙研（ISAS）の歴史とともに日本の宇宙開発について解説する。\nreviewed by Spiegel on 2018-12-31 (powered by PA-APIv5)\n  Another colony TRUE (メインアーティスト) Lantis 2018-11-07 (Release 2018-11-07) MP3 ダウンロード B07K33158N (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  アニメ「転生したらスライムだった件」のED曲。\nreviewed by Spiegel on 2019-10-09 (powered by PA-APIv5)\n "
    },
    {
      "title": "2019-10-06 のブックマーク",
      "section": "bookmarks",
      "description": "「東京大学木曽観測所トモエゴゼンの観測運用の開始について」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/10/06-bookmarks/",
      "published": "2019-10-06T07:56:21+00:00",
      "update": "2019-10-06T07:57:39+00:00",
      "content": " リリース情報  スクリプト言語「Ruby」に4件の脆弱性 ～v2.4.8/v2.6.5が公開（20:30追記） - 窓の杜  セキュリティ＆プライバシー関連  iPhoneなどの旧モデルに「修正不能」な脆弱性、それがセキュリティ研究者にとっては“福音”となる｜WIRED.jp スマートロックは電動ドリルでこじ開けることができるのか - GIGAZINE 大きな変態スパムメールについてまとめてみた - piyolog Adobeのオープンリダイレクタを悪用したフィッシング詐欺についてまとめてみた - piyolog ASCII.jp：ヴイエムウェアが狙うネットワークとセキュリティ領域の刷新 (1/2) NSA on the Future of National Cybersecurity - Schneier on Security Supply-Chain Security and Trust - Schneier on Security  ブログ: サプライチェーンのセキュリティと信頼  増税に伴うシステムトラブルをまとめてみた - piyolog FONルーター「FON2601E」にオープンリゾルバの脆弱性、意図せずDDoS攻撃に加担してしまう可能性も - INTERNET Watch : FON ってまだ生きてたんだねぇ ふくおかFG、次世代バンキングシステムをGCPで構築へ--デジタル技術で銀行を“再定義” - ZDNet Japan PDFファイルを開くだけで暗号化された内容が流出する脆弱性「PDFex」が発見される - GIGAZINE Measuring the Security of IoT Devices - Schneier on Security Tracking by Smart TVs - Schneier on Security GoogleがマップとYouTube、そしてアシスタント向けにプライバシー強化機能を追加 | TechCrunch Japan マイクロソフトは2020年の大統領選候補を狙ったイランのハッカーの攻撃を発見 | TechCrunch Japan  天文関連  APOD: 2019 September 28 - An Analemma of the Sun エイリアンは｢最近｣来ていないだけかも…新研究で指摘 | BUSINESS INSIDER JAPAN Ishizawa, Sasaki \u0026amp; Hosono, ApJ (2019) – Sasaki Takanori Online : 「天王星衛星の形成に関する論文が ApJ に accept されました」とのこと MINERVA-II2（ローバ２）分離運用 | トピックス | JAXA はやぶさ２プロジェクト : 2019-10-03 より分離運用開始 APOD: 2019 October 1 - Black Hole Safety Video NASAの惑星探査用の新望遠鏡は気球に乗って大気圏の外縁に浮かぶ | TechCrunch Japan 東京大学木曽観測所トモエゴゼンの観測運用の開始について 初期宇宙で見つかった宇宙網 －銀河とブラックホールに恵みをもたらす宇宙の清流－ | 国立天文台(NAOJ) 大型低温重力波望遠鏡KAGRAが完成、重力波望遠鏡3者による研究協定を締結 | 国立天文台(NAOJ)  知財関連  Netflix has Dwarfed BitTorrent Traffic, South African ISPs say - TorrentFreak DMCA Notice Confirms Trump Tweet Was Taken Down By Warner Music - TorrentFreak Gaming Giants Highlight the Latest Piracy Threats - TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 19.10 その24 - Linux kernel 5.3の採用・Python 3.7.3/OpenJDK 11などツールチェインのアップデート - kledgeb Ubuntu 19.10 その24 - Linux kernel 5.3の採用・Python 3.7.3/OpenJDK 11などツールチェインのアップデート - kledgeb Ubuntu 19.10 その23 - Ubuntu 19.10 β版がリリースされました・ディスクイメージのダウンロード - kledgeb Linuxにカーネル「ロックダウン」セキュリティ機能追加へ - ZDNet Japan  その他  Facebook Takes Down TorrentFreak Post Over 'Infringing' Meme - TorrentFreak Chrome 78ベータに「Native File System API」搭載。Webブラウザからローカルファイルを読み書き可能に － Publickey : えー もう「公開鍵送ってください」というやり取りは不要だった - Qiita Looking back at the Snowden revelations – A Few Thoughts on Cryptographic Engineering  ブログ: スノーデンの暴露を振り返る  ブログ: リークされたザッカーバーグの音声は、エリザベス・ウォーレンがビッグテックを解体しようとするなら、米国政府を訴えるというFacebookの計画を明らかにする : 通用するかどうかはともかく，そうすること自体は企業としては間違ってないよな Google Cloud、コンテナネイティブなロードバランス機能を正式版に。Kuberntesとの統合など強化 － Publickey マイクロソフトが方針転換。Windows 7の2023年までの延長サポート、あらゆる企業が購入可能に － Publickey : いや，もう Windows 捨てたから Go言語からシェルスクリプトが実行できない(シェバングの必要性) - Qiita : 考えてみれば当たり前なんだが，とっさに思いつかなかったりするよねぇ（笑） DNAにSQL実行--\u0026quot;DNAストレージ\u0026quot;でRDBの限界が突破される日 - ZDNet Japan Facebookでニュースを読む人は多いが内容を信用する人は少ない | TechCrunch Japan スーパーメジャー「シェル」が真剣議論している「温暖化対策」経営とは：岩瀬昇 | エネルギーの部屋 | 新潮社　Foresight(フォーサイト) | 会員制国際情報サイト PayPalがFacebook率いるLibra Associationから撤退する最初の企業に | TechCrunch Japan GitHub - ikunya/libo-writer: LibreOffice Writerで書籍制作　〜（紙）書籍と電子書籍両対応版〜  "
    },
    {
      "title": "Go 言語用 PA-API v5 クライアント・パッケージ",
      "section": "release",
      "description": "本パッケージは Amazon Product Advertising API v5 へアクセスできる Go 言語用クライアント・パッケージだ。 API を通じて Ammazon で取り扱っている商品の情報を取得できる。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/pa-api-v5/",
      "published": "2019-10-06T06:46:03+00:00",
      "update": "2019-10-09T00:37:57+00:00",
      "content": "  spiegel-im-spiegel/pa-api: APIs for Amazon Product Advertising API v5 by Golang  本パッケージは Amazon Product Advertising API v5 へアクセスできる Go 言語用クライアント・パッケージだ。 API を通じて Amazon で取り扱っている商品の情報を取得できる。\nなお spiegel-im-spiegel/pa-api パッケージは Go 1.13 以上を要求する。 ご注意を。\n  \nインポート import \u0026#34;github.com/spiegel-im-spiegel/pa-api\u0026#34; 簡単な使い方 PA-API アクセス用のパラメータ 使い方の前に，この記事で使用する PA-API アクセス用のパラメータを以下に例示しておく。\n   パラメータ名 値     マーケットプレイス www.amazon.co.jp   アソシエイト・タグ mytag-20   アクセス・キー AKIAIOSFODNN7EXAMPLE   シークレット・キー 1234567890    もちろん実際には使えないのでご安心を（笑）\nサンプル・コード 以下に簡単なコード例を示す。\npackage main import ( \u0026#34;bytes\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io\u0026#34; \u0026#34;os\u0026#34; paapi5 \u0026#34;github.com/spiegel-im-spiegel/pa-api\u0026#34; \u0026#34;github.com/spiegel-im-spiegel/pa-api/query\u0026#34; ) func main() { //Create client  client := paapi5.DefaultClient(\u0026#34;mytag-20\u0026#34;, \u0026#34;AKIAIOSFODNN7EXAMPLE\u0026#34;, \u0026#34;1234567890\u0026#34;) //Make query  q := query.NewGetItems(client.Marketplace(), client.PartnerTag(), client.PartnerType()) q.ASINs([]string{\u0026#34;B07YCM5K55\u0026#34;}).EnableImages(true).EnableParentASIN(true) //Requet and response  body, err := client.Request(q) if err != nil { fmt.Printf(\u0026#34;%+v\\n\u0026#34;, err) return } io.Copy(os.Stdout, bytes.NewReader(body)) } このコードの実行結果はこんな感じ。\n$ go run sample.go | jq . { \u0026#34;ItemsResult\u0026#34;: { \u0026#34;Items\u0026#34;: [ { \u0026#34;ASIN\u0026#34;: \u0026#34;B07YCM5K55\u0026#34;, \u0026#34;DetailPageURL\u0026#34;: \u0026#34;https://www.amazon.co.jp/dp/B07YCM5K55?tag=mytag-20\u0026amp;linkCode=ogi\u0026amp;th=1\u0026amp;psc=1\u0026#34;, \u0026#34;Images\u0026#34;: { \u0026#34;Primary\u0026#34;: { \u0026#34;Large\u0026#34;: { \u0026#34;Height\u0026#34;: 500, \u0026#34;URL\u0026#34;: \u0026#34;https://m.media-amazon.com/images/I/51Ef9EF+HaL.jpg\u0026#34;, \u0026#34;Width\u0026#34;: 352 }, \u0026#34;Medium\u0026#34;: { \u0026#34;Height\u0026#34;: 160, \u0026#34;URL\u0026#34;: \u0026#34;https://m.media-amazon.com/images/I/51Ef9EF+HaL._SL160_.jpg\u0026#34;, \u0026#34;Width\u0026#34;: 113 }, \u0026#34;Small\u0026#34;: { \u0026#34;Height\u0026#34;: 75, \u0026#34;URL\u0026#34;: \u0026#34;https://m.media-amazon.com/images/I/51Ef9EF+HaL._SL75_.jpg\u0026#34;, \u0026#34;Width\u0026#34;: 53 } } }, \u0026#34;ItemInfo\u0026#34;: { \u0026#34;ByLineInfo\u0026#34;: { \u0026#34;Contributors\u0026#34;: [ { \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34;, \u0026#34;Name\u0026#34;: \u0026#34;宮成楽\u0026#34;, \u0026#34;Role\u0026#34;: \u0026#34;著\u0026#34; } ], \u0026#34;Manufacturer\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;竹書房\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Manufacturer\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } }, \u0026#34;Classifications\u0026#34;: { \u0026#34;Binding\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;Kindle版\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Binding\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; }, \u0026#34;ProductGroup\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;Digital Ebook Purchas\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;ProductGroup\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } }, \u0026#34;ContentInfo\u0026#34;: { \u0026#34;Languages\u0026#34;: { \u0026#34;DisplayValues\u0026#34;: [ { \u0026#34;DisplayValue\u0026#34;: \u0026#34;日本語\u0026#34;, \u0026#34;Type\u0026#34;: \u0026#34;発行済み\u0026#34; } ], \u0026#34;Label\u0026#34;: \u0026#34;Language\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; }, \u0026#34;PagesCount\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: 116, \u0026#34;Label\u0026#34;: \u0026#34;NumberOfPages\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; }, \u0026#34;PublicationDate\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;2019-09-27T00:00:00.000Z\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;PublicationDate\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; } }, \u0026#34;ProductInfo\u0026#34;: { \u0026#34;IsAdultProduct\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: false, \u0026#34;Label\u0026#34;: \u0026#34;IsAdultProduct\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; }, \u0026#34;ReleaseDate\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;2019-09-27T00:00:00.000Z\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;ReleaseDate\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; } }, \u0026#34;TechnicalInfo\u0026#34;: { \u0026#34;Formats\u0026#34;: { \u0026#34;DisplayValues\u0026#34;: [ \u0026#34;Kindle本\u0026#34; ], \u0026#34;Label\u0026#34;: \u0026#34;Format\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } }, \u0026#34;Title\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;晴れのちシンデレラ　（１２） (バンブーコミックス MOMOセレクション)\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Title\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } } } ] } } リクエスト実行インスタンスの生成 上のコード例の\nclient := paapi5.DefaultClient(\u0026#34;mytag-20\u0026#34;, \u0026#34;AKIAIOSFODNN7EXAMPLE\u0026#34;, \u0026#34;1234567890\u0026#34;) がリクエストを実行する paapi5.Client 型のインスタンスを生成している部分である。 このコードは\nclient := paapi5.New( paapi5.WithMarketplace(\u0026#34;www.amazon.co.jp\u0026#34;), ).CreateClient( \u0026#34;mytag-20\u0026#34;, \u0026#34;AKIAIOSFODNN7EXAMPLE\u0026#34;, \u0026#34;1234567890\u0026#34;, paapi5.WithContext(context.Background()), paapi5.WithHttpCilent(http.DefaultClient), ) と等価である。 マーケットプレイスを指定したり context.Context インスタンスや http.Client インスタンスを指定する際にはこれを活用するとよい。\nクエリの生成とリクエストの実行 リクエストを実行する関数\nfunc (c *Client) Request(q Query) ([]byte, error) { ... } の引数 paapi5.Query は interface 型で以下のように定義している。\ntype Query interface { Operation() Operation Payload() ([]byte, error) } paapi5.Query.Operation() 関数の返り値の paapi5.Operation 型は以下のように定義している。\ntype Operation int const ( NullOperation Operation = iota GetVariations GetItems SearchItems ) paapi5.Query.Payload() 関数はリクエストのペイロードにセットする JSON データを返す。 JSON データの内容は，例えばこんな感じ。\n{ \u0026#34;ItemIds\u0026#34;: [ \u0026#34;B07YCM5K55\u0026#34; ], \u0026#34;Resources\u0026#34;: [ \u0026#34;Images.Primary.Small\u0026#34;, \u0026#34;Images.Primary.Medium\u0026#34;, \u0026#34;Images.Primary.Large\u0026#34;, \u0026#34;ItemInfo.ByLineInfo\u0026#34;, \u0026#34;ItemInfo.ContentInfo\u0026#34;, \u0026#34;ItemInfo.Classifications\u0026#34;, \u0026#34;ItemInfo.ExternalIds\u0026#34;, \u0026#34;ItemInfo.ProductInfo\u0026#34;, \u0026#34;ItemInfo.Title\u0026#34; ], \u0026#34;PartnerTag\u0026#34;: \u0026#34;mytag-20\u0026#34;, \u0026#34;PartnerType\u0026#34;: \u0026#34;Associates\u0026#34;, \u0026#34;Marketplace\u0026#34;: \u0026#34;www.amazon.co.jp\u0026#34;, \u0026#34;Operation\u0026#34;: \u0026#34;GetItems\u0026#34; } 適切な paapi5.Operation 値と JSON データを出力できるのであれば，利用者側でクエリ・オブジェクトを自由に設計できる。\n余談だが... ある型が特定の interface 型に適合するかコンパイル時点でチェックするには以下の記述を加えるとよい。\nvar _ paapi5.Query = (*CustomQuery)(nil) クエリの実例とレスポンスの取り込み例 spiegel-im-spiegel/pa-api パッケージではクエリ用のサンプルとして paapi5.query サブパッケージを用意している。 最初のコード例の\nq := query.NewGetItems(client.Marketplace(), client.PartnerTag(), client.PartnerType()) q.ASINs([]string{\u0026#34;B07YCM5K55\u0026#34;}).EnableImages(true).EnableParentASIN(true) の部分がそれである。 また paapi5.Client.Request() 関数の出力結果を構造体に落とし込むための paapi5.entity サブパッケージも用意した。 どちらもそのままではあまり使い勝手がいいとは言えないが，コード例として自由に利用していただいて構わない。\nなお spiegel-im-spiegel/pa-api パッケージは Apache License, Version 2.0 でライセンスしている。\nブックマーク  Product Advertising API 5.0 Documentation PA-API V5 への移行  "
    },
    {
      "title": "PA-API v5 への移行",
      "section": "remark",
      "description": "これによると 2019-11-30 までに v5 に移行する必要があるらしい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2019/10/pa-api-v5/",
      "published": "2019-10-06T06:46:03+00:00",
      "update": "2019-10-06T07:07:53+00:00",
      "content": " 先月の2019年9月に Amazon Product Advertising API v5 がリリースされた。\n PA-API v5 移行のご案内 PA-API v5 移行ガイド  これによると 2019-11-30 までに v5 に移行する必要があるらしい。\nv4 では GET リクエストで XML 形式のデータを返していたが， v5 では POST リスエストで JSON 形式のデータを返す。\nたとえば ASIN コード B01IGW5IIW の商品の情報を取得する場合は， POST リクエストのペイロードに\n{ \u0026#34;ItemIds\u0026#34;: [ \u0026#34;B07YCM5K55\u0026#34; ], \u0026#34;Resources\u0026#34;: [ \u0026#34;Images.Primary.Medium\u0026#34;, \u0026#34;ItemInfo.ByLineInfo\u0026#34;, \u0026#34;ItemInfo.ContentInfo\u0026#34;, \u0026#34;ItemInfo.Classifications\u0026#34;, \u0026#34;ItemInfo.ExternalIds\u0026#34;, \u0026#34;ItemInfo.ProductInfo\u0026#34;, \u0026#34;ItemInfo.Title\u0026#34; ], \u0026#34;PartnerTag\u0026#34;: \u0026#34;mytag-20\u0026#34;, \u0026#34;PartnerType\u0026#34;: \u0026#34;Associates\u0026#34;, \u0026#34;Marketplace\u0026#34;: \u0026#34;www.amazon.co.jp\u0026#34;, \u0026#34;Operation\u0026#34;: \u0026#34;GetItems\u0026#34; } とクエリをセットして送信すると\n{ \u0026#34;ItemsResult\u0026#34;: { \u0026#34;Items\u0026#34;: [ { \u0026#34;ASIN\u0026#34;: \u0026#34;B07YCM5K55\u0026#34;, \u0026#34;DetailPageURL\u0026#34;: \u0026#34;https://www.amazon.co.jp/dp/B07YCM5K55?tag=mytag-20\u0026amp;linkCode=ogi\u0026amp;th=1\u0026amp;psc=1\u0026#34;, \u0026#34;Images\u0026#34;: { \u0026#34;Primary\u0026#34;: { \u0026#34;Medium\u0026#34;: { \u0026#34;Height\u0026#34;: 160, \u0026#34;URL\u0026#34;: \u0026#34;https://m.media-amazon.com/images/I/51Ef9EF+HaL._SL160_.jpg\u0026#34;, \u0026#34;Width\u0026#34;: 113 } } }, \u0026#34;ItemInfo\u0026#34;: { \u0026#34;ByLineInfo\u0026#34;: { \u0026#34;Contributors\u0026#34;: [ { \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34;, \u0026#34;Name\u0026#34;: \u0026#34;宮成楽\u0026#34;, \u0026#34;Role\u0026#34;: \u0026#34;著\u0026#34; } ], \u0026#34;Manufacturer\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;竹書房\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Manufacturer\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } }, \u0026#34;Classifications\u0026#34;: { \u0026#34;Binding\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;Kindle版\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Binding\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; }, \u0026#34;ProductGroup\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;Digital Ebook Purchas\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;ProductGroup\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } }, \u0026#34;ContentInfo\u0026#34;: { \u0026#34;Languages\u0026#34;: { \u0026#34;DisplayValues\u0026#34;: [ { \u0026#34;DisplayValue\u0026#34;: \u0026#34;日本語\u0026#34;, \u0026#34;Type\u0026#34;: \u0026#34;発行済み\u0026#34; } ], \u0026#34;Label\u0026#34;: \u0026#34;Language\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; }, \u0026#34;PagesCount\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: 116, \u0026#34;Label\u0026#34;: \u0026#34;NumberOfPages\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; }, \u0026#34;PublicationDate\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;2019-09-27T00:00:00.000Z\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;PublicationDate\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; } }, \u0026#34;ProductInfo\u0026#34;: { \u0026#34;IsAdultProduct\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: false, \u0026#34;Label\u0026#34;: \u0026#34;IsAdultProduct\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; }, \u0026#34;ReleaseDate\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;2019-09-27T00:00:00.000Z\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;ReleaseDate\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;en_US\u0026#34; } }, \u0026#34;Title\u0026#34;: { \u0026#34;DisplayValue\u0026#34;: \u0026#34;晴れのちシンデレラ　（１２） (バンブーコミックス MOMOセレクション)\u0026#34;, \u0026#34;Label\u0026#34;: \u0026#34;Title\u0026#34;, \u0026#34;Locale\u0026#34;: \u0026#34;ja_JP\u0026#34; } } } ] } } などとレスポンスが返る。 クエリ JSON の Resources フィールドで欲しい情報をかなり細かく指定できるのが特徴である。\nJava と PHP については SDK が用意されている。 ぶっちゃけ何の参考にもならなかったが（笑）\nPA-API v5 を試すのであれば Scratchpad が便利だ。 実際の動作を確認でき Java, PHP, curl のサンプルコードも見れるようになっている。 Java コードはブラックボックスだらけで全く参考にならなかったが PHP と curl のコードはかなり参考になる。\nというわけで Go 言語用のパッケージを作ってみた。\n spiegel-im-spiegel/pa-api: APIs for Amazon Product Advertising API v5 by Golang  自作の books-data 用に「とりあえず」で作ったので色々と不足しているのだが，基本機能は押さえてあるはず。\n詳しくは以下を参照のこと。\n Go 言語用 PA-API v5 クライアント・パッケージ  なお， AWS 用のアクセスキーと秘密キーは PA-API v5 からは使えなくなるらしい。 使うためには PA-API 用にキーを取得する必要がある。 既に PA-API 用のキーを持っているならそのまま使えるようだ。\nブックマーク  Product Advertising API 5.0 Documentation  "
    },
    {
      "title": "書籍データ取得ツール books-data v0.5 をリリースした",
      "section": "release",
      "description": "今回のメインは PA-API v5 に対応したことだろう。なんか2019年11月末までに v5 に切り替えないといけないらしい。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/10/books-data-v0_5-is-released/",
      "published": "2019-10-05T17:02:59+00:00",
      "update": "2019-10-06T13:13:24+00:00",
      "content": "書籍データ取得ツール books-data v0.5.2 をリリースした。\n Release v0.5.2 · spiegel-im-spiegel/books-data · GitHub  パッチバージョンが妙に進んでいるが気にしないように（笑）\n今回のメインは PA-API v5 に対応したことだろう。 ざっと見回したが PA-API v5 に対応した Go 言語パッケージが見当たらなかったので自作した。\n Go 言語用 PA-API v5 クライアント・パッケージ  なんか2019年11月末までに v5 に切り替えないといけないらしい。 Java と PHP は SDK が用意されているが，他の言語は見当たらなかったので必要なら自作するしかないだろう。\n PA-API V5 への移行  他にはまた少しデータ構成を変えた。 後方互換性が崩れるが，私以外に使っている人はおるまぁ（笑）\n詳しくは以下の記事を参照のこと。\n 書籍データ取得ツール books-data  これで API 周りは全部自作パッケージに換装してしまったよ。 そんなつもりじゃなかったんだけどなぁ。\n"
    },
    {
      "title": "2019-09-28 のブックマーク",
      "section": "bookmarks",
      "description": "「PA-API v5移行のご案内」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2019/09/28-bookmarks/",
      "published": "2019-09-28T11:42:15+00:00",
      "update": "2019-09-28T11:44:00+00:00",
      "content": " リリース情報  WebIDE「Eclipse Che 7」正式リリース。VSCodeの拡張機能に対応、開発環境asコードの実現、Kubernetesへのデプロイ対応など － Publickey 「.NET Core 3.0」正式版が登場。Windowsデスクトップアプリ開発可能、exeファイルを生成、マイクロサービス対応など － Publickey  Microsoft、「.NET Core 3.0」を正式リリース ～オープンソース化されたWPF/WinForms開発をサポート - 窓の杜 Big Sky :: .NET Core 3.0 が gRPC をサポートした。  「Thunderbird 68.1.1」が公開 ～10件の問題を修正したメンテナンス更新（9月27日更新） - 窓の杜 The Document Foundation announces LibreOffice 6.3.2 - The Document Foundation Blog  バベルのインターネット  ISP Column - September 2019  ブログ: なぜ、BGPをセキュア化するのは、そんなに難しいのか?  開発ツール会社ChefのCEOが態度を急変、移民・関税執行局の契約を更新しないと発表 | TechCrunch Japan  セキュリティ＆プライバシー関連  ダークウェブ上で取引される脆弱性情報について注意喚起――キヤノンが2019年上半期のマルウェアレポートを公開：EnterpriseZine（エンタープライズジン） 「ドローン黙示録」の到来を阻止するために | TechCrunch Japan  サウジ石油施設への攻撃はGCC諸国の脆弱性を露呈：池内恵 | 池内恵の中東通信 | 新潮社　Foresight(フォーサイト) | 会員制国際情報サイト  脆弱な設定のElasticsearchによるエクアドル全国民情報流出の可能性についてまとめてみた - piyolog 「銀行はパスワードの文字数制限を撤廃すべき」という主張を専門家はどう見ているのか？ - GIGAZINE 脆弱な設定のElasticsearchによるエクアドル全国民情報流出の可能性についてまとめてみた - piyolog Microsoft Internet Explorer の脆弱性 (CVE-2019-1367) に関する注意喚起  Microsoft Internet Explorer の脆弱性対策について(CVE-2019-1367)：IPA 独立行政法人 情報処理推進機構  ローソン公式サイト・アプリ管理サーバーへの不正アクセスについてまとめてみた - piyolog How Trump’s Ukraine Mess Entangled CrowdStrike | WIRED  ブログ: どのように、トランプのウクライナの窮地がCrowdStrikeを巻き込んだか?  MIT Tech Review: ユーチューブに大規模な乗っ取り攻撃、インフルエンサーが被害 悪名高いボットを疲弊させ活動意欲をくじくCloudflareの新プラン | TechCrunch Japan Facebookの最新のフェイク、監督委員会を民主的な独立機関と思うなかれ | TechCrunch Japan GitHub、ソースコードの脆弱性解析ツールを展開するSemmle買収を発表 － Publickey Amazonで発生した注文履歴の誤表示についてまとめてみた - piyolog On Chinese \u0026quot;Spy Trains\u0026quot; - Schneier on Security  ブログ: 中国の「スパイ列車」について   天文関連  2019年の10月りゅう座流星群（ジャコビニ群）の情報 すばる望遠鏡、130億光年かなたの宇宙に銀河団を発見 | 国立天文台(NAOJ)  その他  Rasberry Pi は Android 9 Pie の夢を見るか？（速報：動画あり） - Qiita  ラズパイでアンドロイド9動作するのですね。 - Qiita  Raspberry Pi競合--インテル「Atom」搭載の「Atomic Pi」を見る - ZDNet Japan PA-API v5移行のご案内 ［速報］AWS、.NET Foundationのコーポレートスポンサーに参加 － Publickey ブログ: 原子力エネルギーは遅すぎる、温暖化を救うには高価過ぎる MIT Tech Review: 新発見：量子アルゴリズム「グローバー探索」は自然現象だった？ Kafka開発元のConfluentに聞いた。エンタープライズ市場への道筋、大手クラウドとの現在の関係について － Publickey 最大32コアのAMD EPYCプロセッサを搭載、コストパフォーマンスを高めたハイパーコンバージドインフラ「HPE SimpliVity 325 Gen 10」、HPEが発表 － Publickey モンテカルロ法における境界条件の扱いについて - Qiita 屋内外のあらゆる物を低帯域長距離無線で結ぶAmazon Sidewalkプロトコル | TechCrunch Japan Google’s ‘Quantum Supremacy’ Isn’t the End of Encryption | WIRED  ブログ: Googleの「量子超越性」は暗号の終わりではない  Cloudflareと「Chrome Canary」がHTTP/3に対応--「Firefox」も間もなく - ZDNet Japan Happy 9th Anniversary, LibreOffice - The Document Foundation Blog  "
    },
    {
      "title": "MathJax v3 がリリースされていた",
      "section": "release",
      "description": "v2.7.x までとはだいぶ変わったので注意。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/09/mathjax-v3-is-released/",
      "published": "2019-09-28T09:29:26+00:00",
      "update": "2019-09-28T13:21:42+00:00",
      "content": " いや，確かに8月末にはリリースするって予告されてたけどさ。 その後のアナウンスがないから気づかなかったよ。\nちうわけで MathJax v3.0.0 がリリースされていた。 よーやくベータが取れたよ（笑）\nドキュメントも v3 に対応しているようだ。\n MathJax Documentation — MathJax 3.0 documentation  Web ページで MathJax を使えるようにするには以下のコードを記述する。\n\u0026lt;script\u0026gt; MathJax = { ... }; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://polyfill.io/v3/polyfill.min.js?features=es6\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script id=\u0026#34;MathJax-script\u0026#34; async src=\u0026#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; MathJax v3 の特定のバージョンを指定するには\n\u0026lt;script\u0026gt; MathJax = { ... }; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://polyfill.io/v3/polyfill.min.js?features=es6\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script id=\u0026#34;MathJax-script\u0026#34; async src=\u0026#34;https://cdn.jsdelivr.net/npm/mathjax@3.0.0/es5/tex-mml-chtml.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; などとする。\nちなみに IE (Internet Explorer) はサポートから外れるようだ。 まぁ IE は Web ではもう「要らない子」だからね。\nMathJax v3 の設定 MathJax = { ... }; の部分には MathJax の設定を記述する。 v2.7.x までとはフォーマットが異なるので注意。\n主な設定項目は以下の通り。\nTeX Input Processor Options 設定項目と既定値は以下の通り。\nMathJax = { tex: { packages: [\u0026#39;base\u0026#39;], // extensions to use  inlineMath: [ // start/end delimiter pairs for in-line math  [\u0026#39;\\\\(\u0026#39;, \u0026#39;\\\\)\u0026#39;] ], displayMath: [ // start/end delimiter pairs for display math  [\u0026#39;$$\u0026#39;, \u0026#39;$$\u0026#39;], [\u0026#39;\\\\[\u0026#39;, \u0026#39;\\\\]\u0026#39;] ], processEscapes: true, // use \\$ to produce a literal dollar sign  processEnvironments: true, // process \\begin{xxx}...\\end{xxx} outside math mode  processRefs: true, // process \\ref{...} outside of math mode  digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/, // pattern for recognizing numbers  tags: \u0026#39;none\u0026#39;, // or \u0026#39;ams\u0026#39; or \u0026#39;all\u0026#39;  tagSide: \u0026#39;right\u0026#39;, // side for \\tag macros  tagIndent: \u0026#39;0.8em\u0026#39;, // amount to indent tags  useLabelIds: true, // use label name rather than tag for ids  multlineWidth: \u0026#39;85%\u0026#39;, // width of multline environment  maxMacros: 1000, // maximum number of macro substitutions per expression  maxBuffer: 5 * 1024, // maximum size for the internal TeX string (5K)  baseURL: // URL for use with links to tags (when there is a \u0026lt;base\u0026gt; tag in effect)  (document.getElementsByTagName(\u0026#39;base\u0026#39;).length === 0) ? \u0026#39;\u0026#39; : String(document.location).replace(/#.*$/, \u0026#39;\u0026#39;)) } };  インライン数式を囲む記号として $ .. $ を有効にするには inlineMath 項目を以下のように変更する。\ninlineMath: [[\u0026#39;$\u0026#39;, \u0026#39;$\u0026#39;], [\u0026#39;\\\\(\u0026#39;, \u0026#39;\\\\)\u0026#39;]]  別行立て数式に対して自動採番を行うには tags 項目に ams または all をセットする。\n自作のマクロを組み込む際には macro 項目をセットする。\nmacros: { ssqrt: [\u0026#39;\\\\sqrt{\\\\smash[b]{\\\\mathstrut #1}}\u0026#39;, 1] }  CommonHTML Output Processor Options 設定項目と既定値は以下の通り。\nMathJax = { chtml: { scale: 1, // global scaling factor for all expressions  minScale: .5, // smallest scaling factor to use  matchFontHeight: true, // true to match ex-height of surrounding font  mtextInheritFont: false, // true to make mtext elements use surrounding font  merrorInheritFont: true, // true to make merror text use surrounding font  mathmlSpacing: false, // true for MathML spacing rules, false for TeX rules  skipAttributes: {}, // RFDa and other attributes NOT to copy to the output  exFactor: .5, // default size of ex in em units  displayAlign: \u0026#39;center\u0026#39;, // default for indentalign when set to \u0026#39;auto\u0026#39;  displayIndent: \u0026#39;0\u0026#39; // default for indentshift when set to \u0026#39;auto\u0026#39;  } };  日本語の文章に数式を埋め込む場合，文字サイズのバランスがよくないので matchFontHeight 項目を false にする。\n別行立て数式を左寄せで表示するには displayAlign 項目を left にする。 併せて displayIndent 項目でインデント幅もセットするとよい。\n拡張パッケージを組み込む たとえば color という拡張パッケージを組み込むには以下のように記述する。\nMathJax = { loader: { load: [\u0026#39;[tex]/color\u0026#39;] }, tex: { packages: {\u0026#39;[+]\u0026#39;: [\u0026#39;color\u0026#39;]} } };  ただし現時点で使えそうなパッケージはなさそう。 mathcomp があるといいのに。\nv2.7.x で外部パッケージだったものの一部は標準で組み込まれているようだ。 たとえば mhchem.js は明示的に組み込まなくても\n経済成長と $\\ce{CO2}$ 排出量は比例しなくなっている。  経済成長と $\\ce{CO2}$ 排出量は比例しなくなっている1。\n てな感じに書くことができる。\nこのサイトの設定内容 このサイトの設定内容は今のところ以下の通り。\nMathJax = { tex: { inlineMath: [[\u0026#39;$\u0026#39;, \u0026#39;$\u0026#39;], [\u0026#39;\\\\(\u0026#39;, \u0026#39;\\\\)\u0026#39;]], processEscapes: true, tags: \u0026#39;ams\u0026#39;, macros: { ssqrt: [\u0026#39;\\\\sqrt{\\\\smash[b]{\\\\mathstrut #1}}\u0026#39;, 1], tcdegree: [\u0026#39;\\\\unicode{xb0}\u0026#39;], tccelsius: [\u0026#39;\\\\unicode{x2103}\u0026#39;], tcperthousand: [\u0026#39;\\\\unicode{x2030}\u0026#39;], tcmu: [\u0026#39;\\\\unicode{x3bc}\u0026#39;], tcohm: [\u0026#39;\\\\unicode{x3a9}\u0026#39;] } }, chtml: { matchFontHeight: false, displayAlign: \u0026#34;left\u0026#34;, displayIndent: \u0026#34;2em\u0026#34; } };  MathJax v3 では利用できる Web フォントは1種類のみで他のフォントを選択することができない。 これは将来バージョンで改善するらしい。 Web フォントのサポートが組み込まればまた紹介することもあるだろう。\nブックマーク  ちょこっと MathJax  参考図書  [改訂第7版]LaTeX2ε美文書作成入門 奥村 晴彦, 黒木 裕介 技術評論社 2017-01-24 大型本 4774187054 (ASIN), 9784774187051 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。\nreviewed by Spiegel on 2017-09-27 (powered by PA-API)\n  「経済成長とCO2排出量は「比例しなくなっている」：IEA報告書」より。 [return]   "
    },
    {
      "title": "Go 言語で浮動小数点数をいろいろな書式で表示してみる",
      "section": "golang",
      "description": "Go 1.13 で浮動小数点数の内部構造が簡単に見れるようになって，より理解が進むというものである。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/floating-point-number/",
      "published": "2019-09-27T16:27:23+00:00",
      "update": "2019-10-03T11:53:03+00:00",
      "content": " 今日も面白い記事を見つけた。\n go で float32 を JSON にするとちょっと意外なことになる - Qiita  今回は Go 1.13 になった記念として 浮動小数点数をいろいろな書式で表示してみることにする。\nその前に... 上の記事について補足をしておくが1， 0xa0000000 をいわゆる倍精度浮動小数点数（Go 言語で言うところの float64）にキャストした場合と，いったん単精度浮動小数点数（Go 言語で言うところの float32）にキャストした後に倍精度で再度キャストした場合で結果は同じ値になるが，これは倍精度へのキャストで精度が復元しているわけではない点に注意が必要である。\nこのことは 0xa0000000 を2進数に展開するとよく分かる。 Go 1.13 から %b で整数値を2進数で表現できるようになったので試してみよう。\nfmt.Printf(\u0026#34;%b\\n\u0026#34;, int64(0xa0000000)) //Output //10100000000000000000000000000000 このとおり 0xa0000000 の実質的な有効桁数は3ビットしかない。 なので，単精度と倍精度の間でキャストを繰り返しても実質的な精度に影響はないのである。\nもし有効桁数の違いを見たいのであればサンプルの値を 0xa0000001 に変えてみるといいだろう。 たとえば件の記事に出てくる JavaScript コード\no = { foo: new Float32Array([0xa0000000]), bar: new Float64Array([0xa0000000]) } process.stdout.write(JSON.stringify(o));  を\no = { foo: new Float32Array([0xa0000001]), bar: new Float64Array([0xa0000001]) } process.stdout.write(JSON.stringify(o));  に書き換えて実行してみると\n$ node json.js {\u0026#34;foo\u0026#34;:{\u0026#34;0\u0026#34;:2684354560},\u0026#34;bar\u0026#34;:{\u0026#34;0\u0026#34;:2684354561}} という感じに異なる値で表示される。 これで JavaScript コードでも明示的に単精度浮動小数点数にすれば，ちゃんと精度が削られること（情報落ち）が分かるだろう。\nJSON (RFC 7159) における数値（numbers）の内部表現は倍精度浮動小数点数のみだが JavaScript の仕様に合わせて整数で表現可能な場合はできるだけ整数で表そうとする。 故に無理やり単精度浮動小数点数に押し込めばこんな妙ちきりんなことも起きる。 幸い JSON は 1.23E+4 みたいな表現も許容するので，有効桁数を明示したいならこの表記がいいだろう。\nちなみに Go 言語で float32 を JSON 形式に展開する際に 1.23E+4 のような表記にしたければ float32 を wrap する型を作って\ntype Float32 float32 func (f Float32) MarshalJSON() ([]byte, error) { return []byte(fmt.Sprintf(\u0026#34;%v\u0026#34;, f)), nil } などとすればよい。\n0xa0000001 を様々な書式で表記してみる ようやく本題（笑）\nあらかじめ 0xa0000001 を\nconst value = 0xa0000001 var ( i64 = int64(value) f64 = float64(value) f32 = float32(value) ) と定義して fmt.Printf() 関数の各書式（verb）を使って表記してみよう。 こんな感じ。\n   Format Expression     fmt.Printf(\u0026quot;%d\u0026quot;, i64) 2684354561   fmt.Printf(\u0026quot;%b\u0026quot;, i64) 10100000000000000000000000000001   fmt.Printf(\u0026quot;%f\u0026quot;, f64) 2684354561.000000   fmt.Printf(\u0026quot;%f\u0026quot;, f32) 2684354560.000000   fmt.Printf(\u0026quot;%e\u0026quot;, f64) 2.684355e+09   fmt.Printf(\u0026quot;%e\u0026quot;, f32) 2.684355e+09   fmt.Printf(\u0026quot;%g\u0026quot;, f64) 2.684354561e+09   fmt.Printf(\u0026quot;%g\u0026quot;, f32) 2.6843546e+09   fmt.Printf(\u0026quot;%g\u0026quot;, float64(f32)) 2.68435456e+09    更に Go 1.13 から浮動小数点数に対して %b が使えるようになった。 %b を使うと仮数部と指数部を分離した表記になる。 こんな感じ。\n   Format Expression     fmt.Printf(\u0026quot;%b\u0026quot;, f64) 5629499536310272p-21   fmt.Printf(\u0026quot;%b\u0026quot;, f32) 10485760p+8   fmt.Printf(\u0026quot;%b\u0026quot;, float64(f32)) 5629499534213120p-21    仮数部が10進数表記で分かりにくいので，強引に2進数に置き換えるとこんな感じ。\n   Value Expression     f64 10100000000000000000000000000001000000000000000000000p-21   f32 101000000000000000000000p+8   float64(f32) 10100000000000000000000000000000000000000000000000000p-21    float32 で8ビット分の情報落ちが発生していることがよく分かる。 覆水盆に返らず（笑）\nGo 1.13 で浮動小数点数の内部構造が簡単に見れるようになって，浮動小数点数対する理解がより進むというものである。\n【おまけの追記】 encoding/json パッケージにおける浮動小数点数の扱いと json.Number 型 Go 言語の標準パッケージである encoding/json で構造体の要素に float32/float64 を割り当てた際の JSON へのエンコードでは，最終的に strconv.AppendFloat() 関数で文字列に変換される。\nstrconv.AppendFloat() 関数とほぼ同じ機能を持つ strconv.FormatFloat() 関数で出力を確認してみよう。\n   Conversion Output     strconv.FormatFloat(f64, 'f', -1, 64) 2684354561   strconv.FormatFloat(f64, 'f', -1, 32) 2684354600   strconv.FormatFloat(float64(f32), 'f', -1, 64) 2684354560   strconv.FormatFloat(float64(f32), 'f', -1, 32) 2684354600    encoding/json では1番目および4番目のフォーマットを使っている。 理由は不明だが間違いではない。 単精度浮動小数点数の有効桁数は10進数換算で7桁程度しかないため 2684354560 と 2684354600 の違いに意味はないのだ。\nそれでも JavaScript に近い表記が欲しいのであれば，たとえば先程の float32 の wrapper として定義した Float32 型を以下のように書き直すことで実現できる。\ntype Float32 float32 func (f Float32) MarshalJSON() ([]byte, error) { return []byte(strconv.FormatFloat(float64(f), \u0026#39;f\u0026#39;, -1, 64)), nil } ところで，ちょっと反則的（？）かもしれないが encoding/json パッケージには json.Number という型が用意されている。 json.Number 型は名前に反して string 型の wrapper になっている。\n// A Number represents a JSON number literal. type Number string // String returns the literal text of the number. func (n Number) String() string { return string(n) } // Float64 returns the number as a float64. func (n Number) Float64() (float64, error) { return strconv.ParseFloat(string(n), 64) } // Int64 returns the number as an int64. func (n Number) Int64() (int64, error) { return strconv.ParseInt(string(n), 10, 64) } つまり JSON との Marshal/Unmarshal は文字列と同じ扱いだが，必要に応じて数値（int64 または float64 型）に変換できるというわけだ。\nこれまで述べたように JSON の numbers を浮動小数点数に変換すると計算誤差が発生するため破壊的な変換になりがちだが json.Number 型であればそれを最小限に抑えられるだろう。\nブックマーク  1を1億回足して1億にならない場合 書式 %v のカスタマイズ  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by PA-API)\n  件の記事の著者は浮動小数点数の性質については分かった上で Go 言語以外の言語との表現の違いについて問題にしておられるようだ。 [return]   "
    },
    {
      "title": "Go 1.13.1 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "Go 言語で Web サービスまたはクライアント・ツールを構築している人は要注意だ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2019/09/go-1_13_1-is-released/",
      "published": "2019-09-26T11:58:03+00:00",
      "update": "2019-09-27T22:53:34+00:00",
      "content": " Go 1.13.1 がリリースされた。\n [security] Go 1.13.1 and Go 1.12.10 are released - Google Group CVE-2019-16276  CVE-2019-16276 - Red Hat Customer Portal : CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L (Score:6.3, Severity:Medium)   今回はセキュリティ・アップデートを含んでいる。 Go 言語で Web サービスまたはクライアント・ツールを構築している人は要注意だ。\nnet/http (through net/textproto) used to accept and normalize invalid HTTP/1.1 headers with a space before the colon, in violation of RFC 7230. If a Go server is used behind an uncommon reverse proxy that accepts and forwards but doesn't normalize such invalid headers, the reverse proxy and the server can interpret the headers differently. This can lead to filter bypasses or request smuggling, the latter if requests from separate clients are multiplexed onto the same upstream connection by the proxy. Such invalid headers are now rejected by Go servers, and passed without normalization to Go client applications. via Go 1.13.1 and Go 1.12.10 are released  Ubuntu の APT は相変わらずサポートから外れた 1.10.x しか対応していないのでダウンロードページからバイナリ（go1.13.1.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。\n$ cd /usr/local/src $ sudo curl \u0026#34;https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.13.1.linux-amd64.tar.gz $ sudo mv go go1.13.1 $ sudo ln -s go1.13.1 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.13.1 linux/amd64 アップデートは計画的に。\nブックマーク  HTTP Desync Attacks: Request Smuggling Reborn | PortSwigger Research  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan, Brian W. Kernighan 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2018-10-20 (powered by PA-API)\n "
    }
  ]
}
