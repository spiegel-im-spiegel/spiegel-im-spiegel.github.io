{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "io.Copy を上限付きで実行する",
      "section": "golang",
      "description": "「データ解凍爆弾」への対処",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/copying-with-upper-limit/",
      "published": "2020-12-06T05:10:36+00:00",
      "update": "2020-12-06T05:15:40+00:00",
      "content": "「もうlintに怒られない！Goでより安全にzipを扱うために」を読んで「なるほど！」と思ったが，（おそらくコードをかなり端折ってるんだと思うが）サンプル・コードがツッコミどころ満載なので，うちのブログでも覚え書として記しておく。 自作ツールでも圧縮データの解凍処理を使ってるしね。\ngosec について ところで，上述のリンク先で使われている gosec は統合 linter である golangci-lint から呼び出すことができるが，既定では無効になっている。 有効にするには --enable オプションで gosec を指定すればよい。\n$ golangci-lint run --enable gosec ./... gosec が既定で有効になっていないのは，特に unsafe 標準パッケージを使っている場合の誤検知が多すぎるかららしい。 私の環境で試してみたが処理速度的には問題ないようなので，一度は試してみてもいいかもしれない。\n最初のサンプル・コード まずは起点となるサンプル・コードを挙げておこう。 こんな感じでどうだろう。\npackage main import ( \u0026#34;bytes\u0026#34; \u0026#34;compress/zlib\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; ) func compress(dst io.Writer, src io.Reader) error { zw := zlib.NewWriter(dst) defer zw.Close() if _, err := io.Copy(zw, src); err != nil { return err } return nil } func extract(dst io.Writer, src io.Reader) error { r, err := zlib.NewReader(src) if err != nil { return err } if _, err := io.Copy(dst, r); err != nil { return err } return nil } func main() { content := \u0026#34;Hello world\\n\u0026#34; //raw data \tzbuf := \u0026amp;bytes.Buffer{} //compress raw data \tif err := compress(zbuf, strings.NewReader(content)); err != nil { fmt.Fprintln(os.Stderr, err) return } //display compressed data \tb := zbuf.Bytes() fmt.Printf(\u0026#34;%d bytes: %v\\n\u0026#34;, len(b), b) //extract from compressed data \tbuf := \u0026amp;bytes.Buffer{} err := extract(buf, bytes.NewReader(b)) if err != nil { fmt.Fprintln(os.Stderr, err) return } //display extracted data \tif _, err := io.Copy(os.Stdout, buf); err != nil { fmt.Fprintln(os.Stderr, err) return } } 最初に紹介した記事で使っている archive/zip パッケージはファイルシステムを含んでいるので，今回はもっとシンプルに compress/zlib パッケージ（RFC 1950 準拠）を使ってみた。 これならデータの圧縮と解凍のみ注視できるだろう。\nこのコードを実行すると\n$ go run sample.go 24 bytes: [120 156 242 72 205 201 201 87 40 207 47 202 73 225 2 4 0 0 255 255 28 242 4 71] Hello world と一応は問題なく動く。 これで準備OK。\nDecompression Bomb Vulnerability では，このコードに対して lint をかけてみる。\n$ golangci-lint run --enable gosec ./... sample1.go:27:15: G110: Potential DoS vulnerability via decompression bomb (gosec) if _, err := io.Copy(dst, r); err != nil { ^ おー，出た出た。\n“Decompression bomb” というのは\nA zip bomb, also known as a zip of death or decompression bomb, is a malicious archive file designed to crash or render useless the program or system reading it. It is often employed to disable antivirus software, in order to create an opening for more traditional viruses. via Zip bomb - Wikipedia  ということで，主にウイルス対策ツールをターゲットにした攻撃手段らしい。 まぁ 42.zip みたいなファイルを解凍したら普通にシステムが死ぬと思うけど（笑）\n解凍処理の改修 “Decompression bomb” を緩和する方法はいくつかあるようだが，いちばん安直なのは io.Copy() 関数に上限を設けることだろう。 そのための関数として io.CopyN() が用意されている。\nfunc io.CopyN(dst io.Writer, src io.Reader, n int64) (written int64, err error) 機能としては\nCopyN copies n bytes (or until an error) from src to dst. It returns the number of bytes copied and the earliest error encountered while copying. On return, written == n if and only if err == nil. via io - The Go Programming Language  ということで\n err == nil なら上限いっぱいまで読み込み完了 err の値が io.EOF ならストリームの終端まで読み込み完了 err の値が io.EOF 以外ならエラー  と見なすことができそうだ。 そこで最初のサンプルコードの extract() 関数を以下のように書き直す。\nconst maxSize = 1024 * 1024 * 1024 //1GB  var ErrTooLarge = errors.New(\u0026#34;too laege decompressed data\u0026#34;) func extract(dst io.Writer, src io.Reader) error { r, err := zlib.NewReader(src) if err != nil { return err } if _, err := io.CopyN(dst, r, maxSize); err != nil { if errors.Is(err, io.EOF) { return nil } return err } return ErrTooLarge } とりあえずコピーの上限は1GBとした（深い意味はない）。 これで少なくとも gosec に怒られることはなくなる。\nこれ仕込むのかぁ。 頑張ろう。\nブックマーク   Secure Go · A project devoted to secure programming in the Go language\n  Go 言語でデータ圧縮と解凍\n  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "2020-12-06 のブックマーク",
      "section": "bookmarks",
      "description": "「無料の SSL 証明書が得られる ZeroSSL を使ってみた」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/12/06-bookmarks/",
      "published": "2020-12-06T02:39:39+00:00",
      "update": "2020-12-06T02:39:52+00:00",
      "content": "リリース情報  Release gopls/v0.5.4 · golang/tools · GitHub Release gopls/v0.5.5 · golang/tools · GitHub Release 4.4.9_0 · zetamatta/nyagos · GitHub Release 8.8.4 · mermaid-js/mermaid · GitHub  セキュリティ＆プライバシー関連  警察庁内端末不正アクセスと5万件の脆弱なVPNホストの公開についてまとめてみた - piyolog NURO光で使用する管理者アカウントが特定される、見えてはいけない画面がまる見え＆root権限も奪取可能 - GIGAZINE ファイル・データ転送アプライアンス FileZen に関する注意喚起 中学生をゲーム内通貨不正購入の実行役にした不正アクセス事件についてまとめてみた - piyolog Impressive iPhone Exploit - Schneier on Security [openpgp] Thunderbird Writing Private Key Pass Phrases to Disk  1678655 - PGP passwords should not be stored on disk. (Security Issue)   Open Source Does Not Equal Secure - Schneier on Security Apache Tomcat の脆弱性 (CVE-2020-17527) に関する注意喚起  天文関連  VERAプロジェクト20年の成果がまとまる — 国立天文台水沢120年の歴史が達成した位置天文学の高精度化 — | 国立天文台(NAOJ) Spaceweather.com Time Machine : 肉眼黒点と太陽フレア ブログ: 地球は天の川のブラックホールに2,000光年近かったと計算 ふたご座流星群が極大（2020年12月） | 国立天文台(NAOJ)  知財関連  オープンソースのプロジェクトに商標登録の支援などを行い、不適切な利用から守る、「オープンソース商標イニシアチブ」が国内で発足 － Publickey  Windows に関する話題  nyagos が Ctrl-C で終了してしまう件 : 応援してます。気長に待ってますw  Go 言語関連  2020年,Go言語でお世話になったライブラリ/検討したけど導入しなかったライブラリ - Qiita Gormとの破局、そしてFacebook/entとの出会い - Qiita : うーむ。そろそろ乗り換え時か？ http.RoundTripperでHTTPクライアントを拡張する - Plan 9とGo言語のブログ VC++のDLL関数をGoから序数指定で呼び出す - 標準愚痴出力 golang でPDFの表紙サムネを高速作成！ - Qiita Golang による順列列挙のパフォーマンス研究 1. 再帰を用いたやり方 - Qiita  その他  定番メールソフト「Becky! Internet Mail」がMicrosoft 365のOAuth 2.0に対応 - 窓の杜 固体型色素増感太陽電池搭載 SMART R MOUSE | 環境発電技術 | 産業向け製品 | リコー PHPが5年ぶりにメジャーバージョンアップ。JITコンパイラ採用で高速化などを実現した「PHP 8」正式版リリース － Publickey CSSでテキストが1行に収まるときだけ中央寄せする マイクロソフト、Chromiumベースの「Microsoft Edge WebView2」.NET正式対応版リリース。バージョンを固定できる「Fixed Version distribution mode」も － Publickey OpenStreetMapは企業からの編集参加が増えており伸びしろがありそう - YAMDAS現更新履歴 ［速報］SalesforceがSlackを買収で合意。正式発表 － Publickey ［速報］Aurora PostgreSQLにSQL Server互換レイヤを実装する「Babelfish for Aurora PostgreSQL」発表。オープンソースとしても公開へ。AWS re:Invent 2020 － Publickey ［速報］AWS、電話の音声でリアルタイムにユーザー認証を行えるコンタクトセンター向けサービス「Connect Voice ID」発表。AWS re:Invent 2020 － Publickey CSSのobject-fitによる画像の切り抜き・リサイズまとめ プルリクエストの作成にGitpodを使ってみました！ micro:bitとノートPCをBluetooth接続して「上を向いた」タイミングをブラウザにリアルタイム表示する LaTeX入門する : Docker で運用する方法 Thoughts on software development: How to prevent tab changing in PrimeFaces TabView when validation failed 無料の SSL 証明書が得られる ZeroSSL を使ってみた CSSのtext-decorationは意外と色々なスタイル調整ができる Amazon S3がこれまでの「結果整合性」から「強い一貫性」サポートへ。データを更新直後でも最新データの読込みが保証されるように － Publickey マイナンバーカードの電子証明書を更新した｜塚本 牧生｜note AtlassianがJiraに新DevOpsメトリクスを導入、プロジェクトマネージャーや開発者はより深い考察が可能に | TechCrunch Japan SlackとSalesforceの幹部が一緒になったほうがいいと考えたワケ | TechCrunch Japan 自作キーボードでキーボードの低さを目指した話  "
    },
    {
      "title": "2021年の主な暦",
      "section": "remark",
      "description": "オリンピックやりたいなら東京だけでやれよ。「日本」を巻き込むな！",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/12/ephemeris-2021/",
      "published": "2020-12-05T04:59:16+00:00",
      "update": "2020-12-06T02:39:52+00:00",
      "content": "「はやぶさ2」が還ってくればそっちの話題で塗りつぶされるだろうから，今のうちに（笑）\nその前に\u0026hellip; 2020年12月の暦 そろそろ月ごとの暦記事に飽きてきたので，今回を最後にする。 今回は簡単に。\n   日付 内容     2020-12-07 大雪   2020-12-08 下弦   2020-12-15 朔(新月)   2020-12-15 皆既日食   2020-12-20 水星が外合   2020-12-21 冬至   2020-12-22 上弦   2020-12-30 望(満月)    2020-12-15 (日本時間) の皆既日食は主に南米で見られる。 日本では見られない。 たしか ALMA 見学とセットになったツアーがあった気がするが，このご時世では無理か（笑）\nその前日の14日はふたご座流星群の極大日にあたる。 条件最良だな！ 防寒をしっかり行って楽しみましょう。\nブックマーク  ふたご座流星群が極大（2020年12月） | 国立天文台(NAOJ)  またオリンピックのせいで祝日を移動させられたよ 💢  具体的には，令和2年12月4日 法律第68号「平成三十二年東京オリンピック競技大会・東京パラリンピック競技大会特別措置法等の一部を改正する法律」により，令和3年に限り，海の日は東京オリンピック開会式前日の7月22日，スポーツの日は開会式当日の7月23日，山の日は閉会式当日の8月8日となった．なお，8月8日は日曜日にあたるため，翌8月9日は休日となる． 令和3年の祝日と休日について - 国立天文台暦計算室より  マジ勘弁してください orz\nオリンピックやりたいなら東京だけでやれよ。 「日本」を巻き込むな 💢\nというわけで2021年の祝日・休日1 は以下のようになる。\n   日付 内容     2021-01-01 元日   2021-01-11 成人の日   2021-02-11 建国記念の日   2021-02-23 天皇誕生日   2021-03-20 春分の日   2021-04-29 昭和の日   2021-05-03 憲法記念日   2021-05-04 みどりの日   2021-05-05 こどもの日   2021-07-22 海の日   2021-07-23 スポーツの日   2021-08-08 山の日   2021-08-09 休日   2021-09-20 敬老の日   2021-09-23 秋分の日   2021-11-03 文化の日   2021-11-23 勤労感謝の日    2021-05-03 は月曜日なので 2021-04-30 を休暇とすれば，割と長めの GW になる。 来年は広島のどっかの酒蔵の蔵開きに行きたい！\nなお，国立天文台のカレンダーはすでに対応済みなので，たとえば\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/spiegel-im-spiegel/koyomi\u0026#34; ) func main() { start, _ := koyomi.DateFrom(\u0026#34;2021-01-01\u0026#34;) end, _ := koyomi.DateFrom(\u0026#34;2021-12-31\u0026#34;) k, err := koyomi.NewSource( koyomi.WithCalendarID(koyomi.Holiday), koyomi.WithStartDate(start), koyomi.WithEndDate(end), ).Get() if err != nil { fmt.Fprintln(os.Stderr, err) return } fmt.Println(\u0026#34;| 日付 | 内容 |\u0026#34;) fmt.Println(\u0026#34;| ---- | ---- |\u0026#34;) for _, e := range k.Events() { fmt.Printf(\u0026#34;| %v | %v |\\n\u0026#34;, e.Date, e.Title) } } などとすれば最新の祝日データを取得できる。\n2021年の主な暦象 日食・月食    日付 内容     2021-05-26 皆既月食   2021-06-10 金環日食   2021-11-19 部分月食   2021-12-04 皆既日食    このうち月食については2回とも日本で見られるが，いずれも欠け始めが早い時刻なので，地域によっては欠け始めてからの月の出となる。 日食は南極と北極で見られ，日本では見られない。\n流星群 8月のペルセウス座流星群の極大日が新月過ぎの時期にあたり条件がいい。 12月のふたご座流星群の極大日は上弦過ぎでちょっと微妙だが，夜半からなら期待できるかもしれない。\nその他  春分の日は3月20日（土），秋分の日は9月23日（木）である。更に夏至は6月21日，冬至は12月22日となる 立春は2月3日，立夏は5月5日，立秋は8月7日，立冬は11月7日 「伝統的七夕」は8月14日 中秋の名月は9月21日で望（満月）と重なる  参考図書  天文年鑑 2021年版 天文年鑑 編集委員会 (編集) 誠文堂新光社 2020-11-24 単行本 4416620616 (ASIN), 9784416620618 (EAN), 4416620616 (ISBN)  天文ファン必携。2021年版。\nreviewed by Spiegel on 2020-11-03 (powered by PA-APIv5)\n   「国民の祝日」は休日となる。また「「国民の祝日」が日曜日に当たるときは、その日後においてその日に最も近い「国民の祝日」でない日を休日とする」（「国民の祝日に関する法律」より）。 \u0026#x21a9;\u0026#xfe0e;\n   "
    },
    {
      "title": "Go 1.15.6 がリリースされた",
      "section": "release",
      "description": "セキュリティ・アップデートはなし。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/12/go-1_15_6-is-released/",
      "published": "2020-12-05T01:01:58+00:00",
      "update": "2020-12-05T01:02:41+00:00",
      "content": "Go 1.15.6 がリリースされた。\n Go 1.15.6 and Go 1.14.13 are released  セキュリティ・アップデートはなし。\ngo1.15.6 (released 2020/12/03) includes fixes to the compiler, linker, runtime, the go command, and the io package. See the Go 1.15.6 milestone on our issue tracker for details. via Release History - The Go Programming Language  例によって Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.15.6.linux-amd64.tar.gz）を取ってきて手動でインストールすることを強く推奨する。 以下は手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://golang.org/dl/go1.15.6.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.15.6.linux-amd64.tar.gz $ sudo mv go go1.15.6 $ sudo ln -s go1.15.6 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.15.6 linux/amd64 アップデートは計画的に。\n参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "ブログは spam ではない（多分）",
      "section": "remark",
      "description": "辺境でブログというスローライフ（笑）",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/12/blogs-are-not-spams/",
      "published": "2020-12-01T12:00:24+00:00",
      "update": "2020-12-01T12:00:48+00:00",
      "content": "例によって人様の記事\n ますます「暗い森」になりつつあるインターネットの中で個人ブログを書くことの意味 - YAMDAS現更新履歴  からの思考の横滑り。 つか，結局『三体』は最初の10ページ分程度を読んだきりでバーチャル積読状態だな。 漫画やラノベのスタイルに慣れすぎてしまったのか，エンターテインメントは最初の数ページで「つかみはOK！」な状態にならないと先に読み進められなくなってしまった（笑）\n閑話休題 (それはさておき)  以前書いた記事で\n 次なるフォーマットであるオーディオブックがアメリカで急成長中 アメリカの書籍出版産業2020：これまでの10年と、これからの10年について（3）より  と紹介したが，その流れから考えるとポッドキャストはめっさ分かりやすい。 最近は日本のアマゾンさんも Audible 買えって五月蝿いのよ。 買わないってば！\nでも「なんかみんなウェブサイトでブログやるのを止めて、ニュースレターになってるんですよ」ってのは数年前くらいの日本の話じゃないのか（笑） 結城浩さんとかも当時の流行りに乗って有料メルマガをいくつか出しておられたし。\nネットにおける今のブログの立ち位置は知らない。 「流行ってるか流行ってないか」と言われれば流行ってないんだろうとは思う。 スマホやタブレットが出たらパソコンが売れなくなった，みたいな話の類似でしょ。\nつか，そもそもゼロ年代にブログが流行ったという歴史自体がバブル景気並みに「異様」だと思うけど。 はてなだって当時は「日本人にはBlogより日記」つってたぢゃん（まぁブログブームが遙か昔の話になってからブログサービスを始めるようなアレな会社だけどw）。 もともとブログは日本人の肌に合わなかったんだよ（笑）\n私は今でも「電話」は近代以降で最悪の発明のひとつだと思ってるし「電話」のアナロジーを踏襲するあらゆるメディア・サービスには嫌悪感を禁じ得ないが，それが時代なんだろう。 個人ブログが「電話」にならないことを祈るが， Twitter や Facebook の TL でプッシュしまくってたら同じことかな。 まぁ（どうでも）いいか。\n私はせいぜいネットの辺境 (しっぽのさきっちょ) でスローライフを楽しむとしよう（笑）\n"
    },
    {
      "title": "2020-11-29 のブックマーク",
      "section": "bookmarks",
      "description": "「すばる望遠鏡、一足先に「はやぶさ２」を出迎える」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2020/11/29-bookmarks/",
      "published": "2020-11-29T04:47:11+00:00",
      "update": "2020-11-29T04:47:55+00:00",
      "content": "リリース情報  Release v1.33.0 · golangci/golangci-lint · GitHub Hugo 0.79.0: Black Friday Edition | Hugo  Release v0.79.0 · gohugoio/hugo · GitHub   Announcing Rustup 1.23.0 | Rust Blog  バベルのインターネット  Google、Facebook、Twitterが新たな検閲法でパキスタンから撤退すると脅迫 | TechCrunch Japan インドが新たに43の中国企業アプリを禁止、安全保障の懸念を理由に | TechCrunch Japan  セキュリティ＆プライバシー関連  間違いなく到来する量子コンピューティングの時代、将来を見据えた暗号化技術 | Cloudflare GitHub、グーグルのProject Zeroによって報告された深刻な脆弱性を修正 - ZDNet Japan 中国製の安価なルーターに不審なバックドアが存在、積極的に悪用しようとする試みも - GIGAZINE ProtonVPN has launched its official Linux app in beta 新規タブリンクの恐ろしい仕様、Chrome 88で変更へ ～Safari/Firefoxに合わせた安全な仕様に - やじうまの杜 - 窓の杜 : Chrome ってまだ対応してなかったのか  天文関連  The Black Hole Information Paradox Comes to an End | Quanta Magazine  ブログ: 物理学で最も有名なパラドックスは終わりに近づいている   Planetary Society Reacts to Loss of Arecibo Observatory Radio Telescope | The Planetary Society  MIT Tech Review: 世界で2番目に大きい電波望遠鏡、修復不能で57年の歴史に幕   VERAプロジェクト20年の成果がまとまる — 国立天文台水沢120年の歴史が達成した位置天文学の高精度化 — | 国立天文台(NAOJ) すばる望遠鏡、一足先に「はやぶさ２」を出迎える | トピックス・お知らせ | すばる望遠鏡  すばる望遠鏡、一足先に「はやぶさ2」を出迎える | 国立天文台(NAOJ)   Here\u0026rsquo;s what we know about Earth\u0026rsquo;s new minimoon - Universe Today  史上2つ目の“ミニムーン”の詳細が判明！ – アストロピクス    知財関連  MPA Hits MediaBox HD on Github: \u0026ldquo;Massive\u0026rdquo; Movie \u0026amp; TV Show Piracy * TorrentFreak  Linux または Ubuntu に関する話題  Ubuntu 20.10 その50 - Ubuntu 20.10 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb  Windows に関する話題  Windows Terminal Tips and Tricks | Windows Command Line  Go 言語関連  [gqlgen]Go + PostgresQLでGraphQLを実装してみる golangCI、Code Climateで品質管理を行った話 - Qiita  Rust 言語関連  Why AWS loves Rust, and how we’d like to help | AWS Open Source Blog  ブログ: AWSがRustを愛する理由、私たちがどのように支援したいのか    その他  ifelseやswitch文のようにGitHub Actionsのステップの実行を制御したい - My External Storage 人気企業が次々と大炎上！なぜSNSの「中の人」は“暴走”してしまうのか？（高橋 暁子） | マネー現代 | 講談社（1/4） 数学を学ぶあなたへ（結城浩ミニ文庫）｜結城浩 AWS、DynamoDBをSQLで操作可能に。SQL互換のクエリ言語「PartiQL」対応を発表 － Publickey Dropbox、電子署名サービス「HelloSign API」を紹介\u0026ndash;サイト内での署名が可能に - ZDNet Japan CSS）z-indexのベストプラクティスを考える 分散KVSの「etcd」、十分成熟したソフトウェアに到達したと、CNCFのインキュベーション段階からの卒業を発表 － Publickey aozorablog » 青空文庫と蔵書印 IBM、欧州で1万人の人員を削減へ - ZDNet Japan 雨雲レーダーを❝サクッと❞Mapboxにプロットしてみる  come25136/radnowc_image_to_json   Webサービスのアクセシビリティについて 考慮すべきポイントを挙げてく システム構成図をテキストで  "
    },
    {
      "title": "アレシボ電波望遠鏡の喪失",
      "section": "remark",
      "description": "相次ぐ破損事故で修復不能として廃棄が決まったようだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/11/loss-of-arecibo-observatory-radio-elescope/",
      "published": "2020-11-29T04:36:07+00:00",
      "update": "2020-12-06T02:39:52+00:00",
      "content": "長らく天文学に貢献してきたアレシボ天文台の巨大電波望遠鏡だが，相次ぐ破損事故で修復不能として廃棄が決まったようだ。 この記事では関連するリンクを載せておく。\n Broken Cable Damages Arecibo Observatory | University of Central Florida News A second cable fails at NSF\u0026rsquo;s Arecibo Observatory in Puerto Rico NSF begins planning for decommissioning of Arecibo Observatory’s 305-meter telescope due to safety concerns | NSF - National Science Foundation Planetary Society Reacts to Loss of Arecibo Observatory Radio Telescope | The Planetary Society 世界最大級の電波望遠鏡でわずか3カ月に2度の大事故が発生 - GIGAZINE  「アレシボ天文台」の世界最大級の電波望遠鏡が3カ月で2度の大事故を起こして解体されることに - GIGAZINE   MIT Tech Review: 世界で2番目に大きい電波望遠鏡、修復不能で57年の歴史に幕  残念だが仕方ない。\nその後のブックマーク  Arecibo telescope collapses, ending 57-year run | Science | AAAS  参考図書  ファースト・コンタクト―地球外知性体と出会う日 (文春新書) 金子 隆一 (著) 文藝春秋 1998-10-01 新書 4166600044 (ASIN), 9784166600045 (EAN), 4166600044 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  地球外文明探査の歴史を俯瞰する良書。\nreviewed by Spiegel on 2016-01-30 (powered by PA-APIv5)\n  SETI@homeファンブック―おうちのパソコンで宇宙人探し 野尻 抱介 (著) ローカス 2000-01-01 単行本 4898140866 (ASIN), 9784898140864 (EAN), 4898140866 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  内容は古いけど当時の「熱」を伝えた名著だと思うけどなぁ。著者の方が自己出版で Kindle で出してくれたらいいのに。\nreviewed by Spiegel on 2019-03-28 (powered by PA-APIv5)\n  天体物理学 Arnab Rai Choudhuri (著), 森 正樹 (翻訳) 森北出版 2019-05-28 単行本 4627275110 (ASIN), 9784627275119 (EAN), 4627275110 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  興味本位で買うにはちょっとビビる値段なので図書館で借りて読んでいる。まえがきによると，この手のタイプの教科書はあまりないらしい。内容は非常に堅実で分かりやすい。理系の学部生レベルなら問題なく読めるかな。\nreviewed by Spiegel on 2019-11-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "GNKF: NKF ぽいなにか の v0.3.0 をリリースした",
      "section": "release",
      "description": "このバージョンで UTF-8 テキスト中の BOM を除去する機能を追加した。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/11/gnkf-v0_3_0-is-released/",
      "published": "2020-11-28T08:57:55+00:00",
      "update": "2020-11-28T08:58:42+00:00",
      "content": "Go 言語における文字列処理の習作 gnkf の v0.3.0 をリリースした。\n Release v0.3.0 · spiegel-im-spiegel/gnkf · GitHub  このバージョンで UTF-8 テキスト中の BOM (Byte Order Mark; U+FEFF) を除去する機能を追加した。\n$ gnkf remove-bom -h Remove BOM character in UTF-8 string. Usage: gnkf remove-bom [flags] Aliases: remove-bom, rbom, rb Flags: -f, --file string path of input text file -h, --help help for remove-bom -o, --output string path of output file Global Flags: --debug for debug たとえば\n$ echo ﻿Hello | gnkf dump 0xef, 0xbb, 0xbf, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x0a こんな感じに BOM が付いてるテキストに対し\n$ echo ﻿Hello | gnkf rb | gnkf dump 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x0a てな感じで BOM を除去できる。\n（東京都の COVID-2019 オープンデータとか） CSV ファイル等に BOM が付いてるものがあって，前々から「誰がこんな要らんことしてんねん」と思っていたが，仕事で再び MS Office ドキュメントを弄るようになって気がついた。 おまえか！\nことあるごとに言っているが， UTF-8 はオクテット単位のストリームなのでエンディアンを指示する BOM は不要である。 てか，付けるべきではない。 大きさを持たないかつ意味のない文字コードを付加するのはリスクである。\n昔は文字列の先頭に BOM があるかどうかで文字エンコーディングを判定する手抜き実装もあったが，流石にそんな頭の悪いシステムはなくなっただろう。\nなお enc, norm, width, kana の各サブコマンドでも --remove-bom オプション（短縮名 -b）を付けることで，前処理として BOM の除去を行うようにした。\n全文をいったんメモリに読み込んで変換処理を行っているので，巨大テキストを処理する際はご注意を。 習作（study）として作ったツールを仕事で使う羽目になるとは orz\nホンマ UTF-8 の BOM は滅びればいいのに。\nブックマーク  GNKF: Network Kanji Filter by Golang  参考図書  プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES) Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳) 丸善出版 2016-06-20 単行本（ソフトカバー） 4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K\u0026amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。\nreviewed by Spiegel on 2016-07-13 (powered by PA-APIv5)\n "
    },
    {
      "title": "「理解」は常にベータ版（『数学を学ぶあなたへ』を読む）",
      "section": "remark",
      "description": "作家さんの頭の中を垣間見ることのできるこの手の本は割と好物だったりする。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2020/11/comprehension/",
      "published": "2020-11-28T03:52:35+00:00",
      "update": "2020-11-28T03:54:01+00:00",
      "content": "「数学ガール」シリーズでおなじみの結城浩さんが面白いデジタル本を公開されている。\n 数学を学ぶあなたへ（結城浩ミニ文庫）｜結城浩  内容は\n 本書は、2020年11月7日〜9日にオンラインで開かれた、第67回早稲田大学理工学術院大学祭「理工展」有志企画「数学ってなにするの？」から依頼を受けて寄稿した文章をもとに、加筆修正したものです 数学を学ぶあなたへより  とのこと。 早速購入した。\n作家さんの頭の中を覗ける機会はそうあるものではない。 それを垣間見ることのできるこの手の本は割と好物だったりする。\n印象的なフレーズは\n 私は、数学を「読むこと」や「学ぶこと」全般の水準器のようにとらえているようです。数学では、日常生活における「常識」から何かを導くのではなく、書かれたことを読み、理解し、それらを組み合わせることが要求されます。そのため、何かを学ぶ上での骨組み・骨格が数学の中に存在していると感じます 数学を学ぶあなたへより  の部分。\n何かを考える際，脳内には「言語的思考」と「非言語的思考」があると思う（脳科学云々はとりあえず無視する）。 私は思考が横滑りしやすいが，横滑りしやすいのは「非言語的思考」の部分だという自覚はある。\n更に言うと「言語的思考」と「非言語的思考」を繋ぐのは存外むずかしい。 「非言語的思考」は思考の自由度が高いが，他者と「対話」したいなら「言語的思考」と「非言語的思考」が何らかの形で繋がっていないといけない。\n これは結城浩さんの「数学ガール」シリーズを読むようになって納得できたことだが，正しい理解には対話が不可欠だと思う。 対話によって「想像の地平線の向こう側」を識ることができるのだ。 ならば「理解とはプロセス」であり，常に現在進行形で不完全なものなのだ。 人はその不完全さを抱いて「理解を進める」のである 『数学ガールの秘密ノート「暗記と理解」』よりより  そうした「思考を繋ぐ」のが数学やプログラミングなんじゃないかと思うようになった。 まぁ，プログラミングは数学の一種でもあるけど（笑）\nまた，思考をいったん「コード」に落とし込むことで「正しさ」を検証（証明）できるようになり，更にそれを外部化できるようになる。 もちろん何を以って「正しい」とするかの criteria を設定する必要があるが。\nたとえば，私は数理パズルが好きで，学生の頃から「数独」とかやりこんでいたが，今や「数独」はプログラムで解ける。 つか「数独」をテーマにした数学論文も結構ある（らしい）。 じゃあ，もう「数独」はつまらないパズルなのかというと，そんなことはない。 本物のパズル好きは「問題を解く」から「問題を作る」にシフトするからだ。 如何に「美しい問題」を作るかに集中し，作った問題の検証はプログラムにさせればいいのだ。\nこれからの時代，「問題を解く」ことはどんどん外部化されていくだろう。 その代わり，如何に上手く問題を立てれるかが重要になってくる。 正しい答えは正しい問いからしか導けない。\nそれこそが「理解」を次のステージに進める一歩である。\nところで\u0026hellip; note のコンテンツを独自ドメインで運用するのはいいのだが，ブラウザ以外でアクセスするとリダイレクトの無限ループにハマってしまう。\n$ curl -L https://mm.hyuki.net/n/n00bf973ae131 curl: (47) Maximum (50) redirects followed （なお mm.hyuki.net に限らない）\nこれって crawler に対する嫌がらせなのかしらん。\nブックマーク  「他者を理解」できるわけがない  参考図書  数学ガールの誕生　理想の数学対話を求めて 結城 浩 (著) SBクリエイティブ 2013-09-13 (Release 2014-09-13) Kindle版 B00NAQA33A (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  結城浩さんの講演集。こういう場所に立ち会える今の学生さんは羨ましい。\nreviewed by Spiegel on 2013-09-21 (powered by PA-APIv5)\n  いかにして問題をとくか G. ポリア (著), Polya,G. (原著), 賢信, 柿内 (翻訳) 丸善 1975-04-01 単行本 4621045938 (ASIN), 9784621045930 (EAN), 4621045938 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  数学書。というか問いの立てかたやものの考え方についての指南書。のようなものかな。\nreviewed by Spiegel on 2014-09-26 (powered by PA-APIv5)\n "
    },
    {
      "title": "GnuPG 2.2.25 がリリースされた",
      "section": "release",
      "description": "どうやら 2.2.24 に regression があったようだ。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2020/11/gnupg-2_2_25-is-released/",
      "published": "2020-11-23T23:24:09+00:00",
      "update": "2020-11-23T23:26:45+00:00",
      "content": "このまえ 2.2.24 が出たばかりだが GnuPG 2.2.25 がリリースされた。\n [Announce] GnuPG 2.2.25 released  どうやら前回の 2.2.24 に regression があったようだ。\n詳細はこちら。\n scd: Fix regression in 2.2.24 requiring gpg --card-status before signing or decrypting. [#5065] gpgsm: Using Libksba 1.5.0 signatures with a rarely used combination of attributes can now be verified. [#5146]  Release-info: https://dev.gnupg.org/T5140 via GnuPG 2.2.25 released  アップデートは計画的に。\nブックマーク  OpenPGP の実装  参考図書  暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n  暗号技術入門 第3版　秘密の国のアリス 結城 浩 (著) SBクリエイティブ 2015-08-25 (Release 2015-09-17) Kindle版 B015643CPE (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;  SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。\nreviewed by Spiegel on 2015-09-20 (powered by PA-APIv5)\n "
    }
  ]
}
