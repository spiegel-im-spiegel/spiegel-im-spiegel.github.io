{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "「プラットフォームとフェデレーションとの競争」",
      "section": "remark",
      "description": "もし Flickr の ActivityPub 対応が実現するなら SNS 活動の軸足を Fediverse へ移してもいいかもしれない。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/new-spark-of-competition-between-platforms-and-federations/",
      "published": "2022-11-25T09:56:07+00:00",
      "update": "2022-11-25T09:56:56+00:00",
      "content": "念のため予防線を張っておくと，私は日本で Mastodon が台頭し始めた2017年春に「GW 過ぎたらみんな忘れてるに100カノッサ」と書いて，見事に賭けに負けた人間である。 まぁ，私自身はつい最近まで本当に忘れていたのだが（笑）\nというわけで， Mastodon マンセー！ とか言うつもりはないのであしからず。\nActivityPub 連合 Mastodon アカウントを復活させてから，あちこち覗いて回っている。 特に以下の記事は2017年よりあとの（特に日本語圏での）状況を知るのに役に立った。 ありがたや 🙇\n【マストドン・Misskeyなど】SNS連合『Fediverse』の遊び方 - DLチャンネル みんなで作る二次元情報サイト！ この記事にも出てくる ActivityPub の W3C 勧告（Recommendation）は 2018-01-23 にリリースされている。\nvia ActivityPub-tutorial-image これに先立ち，2017年秋ごろには Mastodon や PeerTube でも実装されていたようだ。 更に2018年以降 Misskey, Pleroma, Pixelfed といったあたりが対応をはじめた。 更に更に，昨今の「Twitter お家騒動」を受けて Tumblr が ActivityPub に対応すると表明し，我らが Flickr も検討に入ったらしい。\nTumblr to add support for ActivityPub, the social protocol powering Mastodon and other apps • TechCrunch Was just discussing ActivityPub earlier this week internally. Should we add to @Flickr? (No promises, just thinking [err, Tweeting] out loud to gauge interest.) It might be right up our alley, though… https://t.co/MsrPhlwB3Q\n\u0026mdash; Don MacAskill (@DonMacAskill) November 22, 2022 正直に言って「Flickr 対応するかも」というのは心が揺れた。 もしこれが実現するなら SNS 活動の軸足を Fediverse へ移してもいいかもしれない。\nEFF による Mastodon/ActivityPub/Fediverse 解説 昨今の状況を受けて EFF (Electronic Frontier Foundation) も解説記事を出した。\nLeaving Twitter\u0026rsquo;s Walled Garden | Electronic Frontier Foundation Twitterの“囲い込み”から離脱するということ――あるいは Fediverse、Federation、Mastodonとは何か？ | p2ptk[.]org The Fediverse Could Be Awesome (If We Don’t Screw It Up) | Electronic Frontier Foundation フェディバースは（“私たち”次第で）素晴らしいものになる | p2ptk[.]org Is Mastodon Private and Secure? Let’s Take a Look | Electronic Frontier Foundation Fediverse とは federation と universe を組み合わせた造語だそうな。 たとえば Mastodon はそれ自体が連合（federation）型の分散システムだが，そうしたサービス同士が更に緩くフラットに結びついた状態を指すらしい。\nvia How-the-Fediverse-connects - Fediverse - Wikipedia これら連合型システムを結びつける技術要素のひとつが ActivityPub というわけだ。 ぶっちゃけ，どこぞの FinTech 山師が叫ぶ Web3 より，こっちのほうがよほど次期 Web ぽいよな（笑）\nEFF の解説記事では従来の Facebook や Twitter といったサービスを「プラットフォーム」あるいは「中央集権」型に分類し Fediverse と対置しているのが面白い。 単なる「代替サービス」ではないということだ。\n連合には中央機関が存在しないため、Twitter独自の認証バッジなどの複数の機能はまったく意味をなさない。「認証（verified）」に近いものとしては、自分のプロフィールに特定のハイパーリンクを掲載し、外部のウェブページやリソースを管理していることをインスタンスに証明するというものがある。\nfediverseは分散型であるため、投稿を管理したり、アカウントを削除する単一の権限はなく、すべてはユーザとサーバに委ねられている。Mastodonのユーザは一般に、投稿にコンテンツ警告マークをつけている。これは本当にセンシティブなコンテンツ（たとえば、戦争のニュースに関するコンテンツ警告）のためだけではなく、タイムライン上の投稿の足跡を最小化するためにも用いられている。また、ハッシュタグと合わせて、センシティブではない投稿の分類やキュレーションにも用いられている（たとえば、コンテンツ警告：「うちの猫 #pets」）。\nTwitterの“囲い込み”から離脱するということ――あるいは Fediverse、Federation、Mastodonとは何か？ | p2ptk.orgより その上で既存プラットフォームに対して辛辣な評価を下す。\n数週間前まで、ほとんどのソーシャルメディアユーザは“誰に支配されるか”しか選びようがなかった。現在、オンライン・ユーザが抱える多くの問題は、そうした集中によって生み出されている。\nプライバシーを例に取ろう。既存のプラットフォームは、プラットフォーム側が提示する条件を呑むか、アカウントを削除するかというオール・オア・ナッシングの二者択一をユーザに迫っている。設定の奥深くに埋もれたプライバシー・ダッシュボードで多少の調整はできるようになったが、すべてのチェックボックスを外しても大手サービスはあなたのデータの収集をやめようとはしない。主要プラットフォームに依存することによって、我々のプライバシー、セキュリティ、表現の自由の自律性が大幅に損なわれているのだ。\nフェディバースは（“私たち”次第で）素晴らしいものになるより つい最近まで、インターネットの終焉を想像することは、テック企業の終焉を想像するよりも簡単だった。無責任な巨大企業が支配するシステムのもとで暮らすことの問題は、避けられないように思えわれた。だが、こうした中央集権型プラットフォームは成長を停滞させ、Twitterは無様に崩壊しつつある。Twitterの崩壊、混乱は、これが最後ではないだろう。 フェディバースは（“私たち”次第で）素晴らしいものになるより こうしたプラットフォーム型サービスに対する失望感（絶望感？）が今回の「Twitter お家騒動」より派生する諸々の出来事の背景にあるのかもしれない。 そして最後に EFF はこう断ずるのである。\n善き独裁者を選んでも、独裁体制を修正することはできない フェディバースは（“私たち”次第で）素晴らしいものになるより 一方で Fediverse に対しても\nはっきりさせておこう。連合（federated ）によって、これまでの問題が魔法のようにたちどころに解決するわけではない。もし連合型ソーシャルメディアが既存の中央集権型ソーシャルメディアよりも優れているのだとしたら、それはそこに集う人たちが良いものを作りあげようと意識的に選択したからであり、技術的決定論によるものではない。オープンで分散化されたシステムは、より良いオンライン世界に向けた新たな選択肢を提供する。だが、その選択をするのは我々自身なのである。 フェディバースは（“私たち”次第で）素晴らしいものになるより と釘をさしている（強調は私がやりました）。 その上で「連合システムの運用者と利用者に期待される選択肢」として以下を挙げている。\nコンテンツ・モデレーションに関するサンタクララ原則を採用する コミュニティ／ローカル・コントロール コンテンツ・モデレーションのイノベーション 無数のアプリケーション リミックス可能性 多様な資金援助モデル グローバルなアクセシビリティ 政府からの干渉への抵抗／ユーザの側に立つこと 真の連合 相互運用性と次の囲い込みの阻止 反競争的行為の阻止 ポータビリティ 委任可能性（delegability） 詳しくは元記事を参照のこと。\n最後の「反競争的行為の阻止」「ポータビリティ」「委任可能性」3つは “Embrace, Extend, and Extinguish\u0026quot; (EEE)” のカウンタかな。 つか「取り込み、拡張し、抹殺する」とか物騒なフレーズがあるんだな（笑）\n「プラットフォームとフェデレーションとの競争」 コンピュータおよびコンピュータ・システムの歴史は集中と分散の繰り返しである。 ネットも同じ。 プラットフォーム間の覇権争いに巻き込まれてウンザリしたユーザが緩い連合型システムに流れるのも自然なことのように思える。\nしかし，これまで見たように Mastodon は Twitter の代替にはなりそうもない。 Twitter から Mastodon に逃げたユーザが，自分たちの「Twitter 文化」を振りかざして迷惑をまき散らしているという話もちょいちょい聞く1。 リアルの「移民問題」と似たような話がネットでも出てくるというのは興味深い。\nFediverse が「素晴らしいもの」になるか否かが「“私たち”次第」ということは，言い方を変えれば Fediverse は属人性の強い壊れやすいシステムであるということだ。\nEFF の解説記事はこう締めくくる。\n既存のソーシャルメディアと、それに変わる連合型メディアの間には常にトレードオフが存在する。プラットフォームとフェデレーションとの競争という新たな火種は、新たなイノベーションとオンラインにおける我々の自律性の向上という2つの可能性を秘めている。 Twitterの“囲い込み”から離脱するということ――あるいは Fediverse、Federation、Mastodonとは何か？ | p2ptk.orgより ここで EFF が「競争（competition）」と言っていることには意味があると思う。\n「文化とは文化の混血児 (hybrid) 」である。 作られた monolithic な文化は簡単に腐る。 今回の騒動が新たな風を呼び込み generativity に満ちた社会に発展することを期待したい。\nブックマーク SNS「マストドン」に5年くらい居るコーヒー豆屋がユーザー目線でマストドンの初期おすすめムーブを書いてみる何か｜Nelson Coffee Roaster｜note 参考文献 もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来 yomoyomo (著) 達人出版会 2017-12-25 (Release 2019-03-02) デジタル書籍 infoshare2 (tatsu-zine.com) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; WirelessWire News 連載の書籍化。感想はこちら。祝 Kindle 化！\nreviewed by Spiegel on 2018-12-31\nイノベーション 悪意なき嘘 (双書 時代のカルテ) 名和 小太郎 (著) 岩波書店 2007-01-11 単行本 4000280872 (ASIN), 9784000280877 (EAN), 4000280872 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 「両用技術とはどのようなものか。その核心には「矛と楯の論理」がある」（まえがき「予断・診断・独断 そんなばかな」より）\nreviewed by Spiegel on 2015-12-19 (powered by PA-APIv5)\n著作権は文化を発展させるのか: 人権と文化コモンズ 山田 奨治 (著) 人文書院 2021-07-29 (Release 2021-07-29) Kindle版 B099RTG3J7 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 著作権を「ユーザーの人権」という観点から捉え直す。その後 文化→コモンズ→文化コモンズ と進み，本当の意味で「文化の発展に寄与する」とはどういうことか考察していく。 reviewed by Spiegel on 2022-10-23 (powered by PA-APIv5)\n私もちゃんと振る舞えているか自信がない。昔の人は言いました。「3年ROMれ」と。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "Flickr 短縮 URL",
      "section": "golang",
      "description": "Base58 って標準化されてるんじゃないのか orz",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/flickr-short-url/",
      "published": "2022-11-24T12:18:39+00:00",
      "update": "2022-11-24T12:21:46+00:00",
      "content": "Flickr 写真ページの URL を短縮 URL に変換したいなぁ，と思いついた。\nたとえば\nStand-Up Paddleboard (SUP) in 宍道湖 | Flickr という写真を置いている Web ページの URL は\nhttps://www.flickr.com/photos/spiegel/52462249619 となっている。 一般化すると\nhttps://www.flickr.com/photos/{user-id}/{photo-id} - individual photo via Web Page URLs という形式。 これを短縮 URL で表すには\nhttps://flic.kr/p/{base58-photo-id} via Short URLs とすればいのだが（つまり photo-id を Base58 で符号化する），この Base58 ってのが曲者で，どうやらアプリケーションによって微妙に実装が異なるらしい。 なんだよ，それ。 標準化されてるんじゃないのか orz\nちなみに Flickr 版 Base58 の仕様はこちら：\nFlickr: Discussing manufacturing flic.kr style photo URLs in Flickr API 幸いなことに Flickr 版にも対応した Base58 パッケージを公開している人がおられた。\nitchyny/base58-go: Base58 encoding/decoding package and command written in Go ありがたや 🙇\nというわけで，簡単なサンプルコードを書いてみる。\npackage main import ( \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;net/url\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;github.com/itchyny/base58-go\u0026#34; ) func FlickrShortURL(s string) string { u, err := url.Parse(s) if err != nil { return s } if !strings.HasSuffix(u.Hostname(), \u0026#34;flickr.com\u0026#34;) { return s } var photoId string elms := strings.Split(strings.TrimSuffix(u.EscapedPath(), \u0026#34;/\u0026#34;), \u0026#34;/\u0026#34;)[1:] if len(elms) == 3 \u0026amp;\u0026amp; strings.EqualFold(elms[0], \u0026#34;photos\u0026#34;) { photoId = elms[2] } if len(photoId) == 0 || !isDigitString(photoId) { return s } b, err := base58.FlickrEncoding.Encode([]byte(photoId)) if err != nil { return s } return \u0026#34;https://flic.kr/p/\u0026#34; + string(b) } func isDigitString(s string) bool { return strings.IndexFunc(s, func(c rune) bool { return c \u0026lt; \u0026#39;0\u0026#39; || \u0026#39;9\u0026#39; \u0026lt; c }) \u0026lt; 0 } func main() { flag.Parse() args := flag.Args() if len(args) == 0 { fmt.Fprintln(os.Stderr, os.ErrInvalid) return } fmt.Println(FlickrShortURL(args[0])) } FlickrShortURL() が変換関数。 引数の URL 文字列を簡単にチェックして Flickr の写真ページの形式なら短縮 URL に変換して返している。 それ以外なら素通し。\nこれを実行すると\n$ go run sample.go https://www.flickr.com/photos/spiegel/52462249619/ https://flic.kr/p/2nVUK4a と出力される。 念のために検算しておこう。\n件の写真ページにあるシェアボタン をクリックすると，以下のダイアログが表示される。\nここに表示されている短縮 URL が先程のサンプルコードの実行結果と同じなら無問題。\nよーし，うむうむ，よーし。\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n"
    },
    {
      "title": "いまさら『Clean Architecture』の感想文",
      "section": "remark",
      "description": "私はちょいちょい読み返している。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/clean-architecture/",
      "published": "2022-11-23T08:05:54+00:00",
      "update": "2022-11-23T08:07:06+00:00",
      "content": "手遊びで Go でバッチ処理を書いてるのだが，ちょっと作業に飽きてきたので，前々から書こうと思っていた『Clean Architecture』の感想文をやっつけてしまおう。\nRobert C. Martin（通称ボブおじさん）による『Clean ◯◯』シリーズのひとつが『Clean Architecture』である。 この本の中身については以下の解説記事が分かりやすい。\n世界一わかりやすいClean Architecture - nuits.jp blog 本記事を読むくらいなら上のリンク先記事を読むことを強くお勧めする。 以上！\nでは面白くないので，続きを。\n『Clean Architecture』の面白いところは，各トピックが非常に短い文に凝縮されているところ。 たとえば「構造化プログラミング」「オブジェクト指向プログラミング」「関数型プログラミング」の3つのプログラミング・パラダイムについて\n構造化プログラミングは、直接的な制御の移行に規律を課すものである。 『Clean Architecture』第3章より オブジェクト指向プログラミングは、間接的な制御の移行に規律を課すものである。 『Clean Architecture』第3章より 関数型プログラミングは、代入に規律を課すものである。 『Clean Architecture』第3章より などと，ざっくりした文で締めくくっている。 いや，ざっくりしすぎだろう（笑） こういう解説を読んでしまうと， GOTO は悪とか継承がどうのとか多態化だの単態化だの不変だのそれっぽい用語を並べて語るのが馬鹿らしくなる。\n世の中に山ほどのプログラミング言語があるが，すべてこの3つのパラダイムの組み合わせで成り立っていて，これらが課す規律または制約がプログラム・コード→設計→コンポーネント→アーキテクチャにどう影響を及ぼすのか，というのが言語を語る（騙る？）際の最重要ポイントだと思う。\n『Clean Architecture』の主題である「アーキテクチャ」にしてもそう。 この本ではアーキテクチャを「システムに与えた「形状」である」とし，アーキテクチャの形状の目的は「ソフトウェアシステムの開発・デプロイ・運用・保守を容易にすることである」と述べ，さらに\nそれらを容易にするための戦略は、できるだけ長い期間、できるだけ多くの選択肢を残すことである。 『Clean Architecture』第15章より と締めくくる。 ここで私はあの名作を思い出すのである。\n公理によって与えられる暗黙の制約。この制約が集合の要素同士をしっかり結びつける。単純にしばるのではない、相互に秩序ある関係を結ぶ。言い換えれば――公理によって与えられる制約が構造を生み出しているのだ 数学ガール／フェルマーの最終定理より つまり，プログラミング・パラダイムによって与えられる「制約」が巡り巡ってアーキテクチャという「構造」を生み出す。 おー，円環が繋がったぞ（笑）\n以前に『ユニコーン企業のひみつ』の読書会の話を書いたが，私は『Clean Architecture』も同時に読み返していた。 プロダクトのイテレーションを継続するためにはアーキテクチャの「できるだけ多くの選択肢を残す」戦略が必須だと思ったからだ。\nこんな感じで，私はちょいちょい読み返している。 特に設計に迷ったときとか，決して「正解」を教えてくれるわけではないけど，プロダクトやシステムにとって何がコアで何が「仔細」なのか，設計が外道に落ちないようストッパーとしてこの本は効いている。\nブックマーク プログラミングを独習するには10年かかる（Teach Yourself Programming in Ten Years 日本語訳） 参考文献 Clean Architecture　達人に学ぶソフトウェアの構造と設計 (アスキードワンゴ) Ｒｏｂｅｒｔ Ｃ．Ｍａｒｔｉｎ (著), 角 征典 (著), 高木 正弘 (著) ドワンゴ 2018-08-01 (Release 2018-08-01) Kindle版 B07FSBHS2V (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 実務に即効性のある技術解説書というわけではないが，ものの「考え方」を示す本としてはよく出来ている。ソフトウェア技術史の読み物としても面白い。\nreviewed by Spiegel on 2021-04-03 (powered by PA-APIv5)\nユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳) オライリージャパン 2021-04-26 単行本（ソフトカバー） 4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元より電子版も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。\nreviewed by Spiegel on 2022-05-21 (powered by PA-APIv5)\n数学ガール／フェルマーの最終定理 結城 浩 (著) SBクリエイティブ 2008-07-29 (Release 2014-03-12) Kindle版 B00I8AT1CM (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 「フェルマーの最終定理」というサブタイトルをみたとき「なんちう大風呂敷を広げるねん」と思ったものだが，実際に読んでみるとぐいぐい引き込まれる。ひっさびさに頭を使ったような気がする。\nreviewed by Spiegel on 2019-01-13 (powered by PA-APIv5)\n"
    },
    {
      "title": "“Gopher at Mastodon”",
      "section": "remark",
      "description": "Twitter の避難場所として使うのはもったいない",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/gopher-at-mastodon/",
      "published": "2022-11-21T11:27:38+00:00",
      "update": "2022-11-22T11:10:29+00:00",
      "content": "ここのところ Mastodon の話ばっかりでゴメンペコン。 今回はただの覚え書きっス。\nMastodon\u0026hellip;ていうか Fediverse ？ の中の Gopher なアカウントにはどんなのがあるかなぁ，と思って。 とりあえず軽くググってみたら\nGopher at Mastodon : golang というページがあった。\n最初の方に @robpike@inuh.net とか @mattn@mstdn.jp とか @hajimehoshi@mstdn.jp とかおられるな。 おおっ， @TinyGo@mastodon.social とかもある。\nMastodon 上で #golang タグの検索結果を起点に眺めてみると（随時更新）\n@golang_discussions@mastodon.social : Golang Weekly のボット @tenntenn@mstdn.jp @_syumai@mstdn.jp @nobishii@mstdn.jp @sago35@social.tinygo.org とかいったあたりもお見かけしたので follow 申請してみた。 ほかに「こんなアカウントあるよ」とか「わしもおるで」みたいなのがありましたら教えてください。\n最近，ちょっと気が変わって\nMastodon用のshareボタンを設置した話を追記。2017年当時は「どうせ昔のTwitterクローンみたいにすぐ消えるんでしょ」と思ってたし実際いくつかのインスタンスは閉鎖したみたいだが，5年間しぶとく生き残ってるものも結構あるし「遊び場」と割り切ればいいかと思い直している https://t.co/6fEc2q9uEx\n\u0026mdash; Der Spiegel 🪞 im Spiegel 🪞 (@spiegel_2007) November 20, 2022 とか考えはじめている。 Twitter の避難場所として使うのはもったいないように思うのだ。 遊び場として使うなら何かテーマを決めたいところだが，これといって思いつかないので，とりあえず Go 関連の情報を収集するところから始めてみようかな，と。\nまじで golang.social みたいなサーバがあれば引っ越すよ1，多分。\n【追記 2022-11-22】 Golang Weekly より；\n以下のリポジトリでプログラミング言語ごとに Mastodon ユーザのリスト（CSV 形式）を公開指定している。\nprzemekperon/mastodon-it-lists: List of Mastodon users that talk about programming Go 関連ユーザのリストもある。 TinyGo のサーバ（social.tinygo.org）があるんだな。\nブックマーク 【マストドン・Misskeyなど】SNS連合『Fediverse』の遊び方 - DLチャンネル みんなで作る二次元情報サイト！ Go-Fed Golang ActitvityPub · GitHub mattn/go-mastodon: mastodon client for golang 参考 デベロッパーゴースーパーゴラン Tシャツ Geek Go Super Golang Tees ウェア\u0026amp;シューズ B09C2XBC2F (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついカッとなってポチった。反省はしない\nreviewed by Spiegel on 2022-04-10 (powered by PA-APIv5)\nMastodon には別のサーバにアカウントを引っ越す機能があるらしい。試したことはないが。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "もうちょこっと Mastodon",
      "section": "remark",
      "description": "アイコン / サイト連携 / 公式アプリ / シェア / Go パッケージ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/some-little-more-mastodon/",
      "published": "2022-11-20T05:45:05+00:00",
      "update": "2022-11-20T11:13:32+00:00",
      "content": "前回に引き続き，もうちょこっとだけ Mastodon の話。\nFont Awesome Font Awesome に Mastodon のアイコンがないかなぁと思ってたら，ありました。\nMastodon Icon | Font Awesome たとえば，こんな感じに使える。\n\u0026lt;span class=\u0026quot;fa-4x\u0026quot; style=\u0026quot;color:#3088d4;\u0026quot;\u0026gt;\u0026lt;i class=\u0026quot;fa-brands fa-mastodon\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/span\u0026gt; サイト連携 プロフィールの補足情報として各種サイトの URL を載せることができるのだが\nプロフィール補足情報 上の図の右側にも書かれている通り，指定 URL の Web ページで\n\u0026lt;a rel=\u0026#34;me\u0026#34; href=\u0026#34;https://hostname/@username\u0026#34;\u0026gt;Mastodon\u0026lt;/a\u0026gt; のように Mastodon プロフィール・ページを \u0026lt;a\u0026gt; 要素で指示するか，あるいは \u0026lt;head\u0026gt; 要素内に\n\u0026lt;link rel=\u0026#34;me\u0026#34; href=\u0026#34;https://hostname/@username\u0026#34;\u0026gt; などと \u0026lt;link\u0026gt; 要素を設定することで Mastodon と（緩い）連携ができる。 ポイントは rel=\u0026quot;me\u0026quot; の属性を必ず付けること。 上手くいけばプロフィール・ページで\nプロフィール補足情報 のように認証された URL にチェックマークが付くようだ。 先に連携先のサイトで rel=\u0026quot;me\u0026quot; 属性付きのリンクを設定し，そのあとでプロフィール補足情報を設定すると上手くいくっぽい。\n公式アプリ 他の方の toot を見て初めて知ったのだが，スマホ用の公式アプリがあるらしい。\nGet an app for Mastodon - Mastodon 試しにインストールして使ってみたが意図的に機能を簡略化してるように見える。 まぁ，ローカルとか連合（federation）とか follow してもないユーザの toots とか要らんよね。\nというわけで，しばらくこれで遊んでみることにしよう。\nShare ボタンを付けてみたかったのだが\u0026hellip; Web ページに Mastodon への share ボタンがあれば面白いと一瞬思ったのだが\u0026hellip;\nたとえばブラウザで\nhttps://mstdn.jp/share?text=hello+world という URL を叩けば\nてな感じに Toot 画面が開く。 ただしこれは mstdn.jp にアカウントを持っていてサインインしている状態であれば，の話。 分散型の Mastodon ではユーザごとに所属しているサーバは異なるんだから，上のような固定の URL をボタンに紐付けても意味がない。 まぁ，ブラウザに自分専用のブックマークレットでも設置すればいけるのかもしれないが。\nあと web+mastodon scheme ってのがあるそうで，この scheme による連携が Mastodon アプリとブラウザとの間でできていれば\nweb+mastodon://share?text=hello+world などと指定することでいけるらしい。 でも，これも一般的じゃないよなぁ\u0026hellip;\nAndroid 機のブラウザであればシェア 機能で任意のアプリと連携できるし， Web ページ側でボタンを設置するのは諦めるかな。\n【追記】 Mastoshare を使う と思ったが Mastoshare というサービスを使うといいみたい。 ちなみに Hostdon を運営している企業によるサービスのようだ。\n早速このブログ記事の右上に マークのボタンを設置してみた。 このボタンを押すと\nMastoshare という画面が開く。 ここでサーバを選択して [Toot] ボタンを押すと各サーバごとの Toot 画面に遷移するわけだ。 とりあえずこれで運用してみるか。\n似たサービスで donshare ってのもあるらしい。 お好みで。\nGo による Mastodon クライアント・パッケージ そうそう。 Go のパッケージに\nmattn/go-mastodon: mastodon client for golang というのがあるのだが，今もこまめにメンテナンスされてるっぽい。 Go で Mastodon クライアント機能を組み込みたいのであれば参考になるかもしれない。\nブックマーク Mastodon向け簡易シェアボタン - Qiita "
    },
    {
      "title": "八重垣神社チャレンジ",
      "section": "remark",
      "description": "次のチャレンジはもう少し鍛えてからにします。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/challenge-for-the-yaegaki-shrine/",
      "published": "2022-11-19T09:37:49+00:00",
      "update": "2022-11-19T10:26:27+00:00",
      "content": "こういっちゃあなんだけど，八重垣神社は子供の頃の遊び場だったんだよ。 何して遊んでたかって？ カブトムシの幼虫を掘りに行ったに決まってるじゃないか HAHAHA\nというわけで，今回のサイクリング\u0026amp;お散歩カメラはン十年振りにチャリンコで八重垣神社に行ってみた。\nその前に（学園通りに用事があったので）久しぶりの天下一品で腹ごしらえ。\n学園通りに来たので天一 | Flickr では改めて出発。\n松江を北から南下するコースで八重垣神社に向かうと，途中に「矢の原」と呼ばれる丘みたいなところを越える。 私の母校，松江南高校のあるところ。 なんちゃらの憂鬱じゃないが，なんで学校って丘の上にあるのかね。 避難所を兼ねてるから？ そんな苦行は要らんですよ。\nしかし，子供の頃はチャリンコですいすい登ってた記憶があるのだが，今となっては，たったあれだけの丘を越えるのがキツいキツい。 衰えたなぁ。\nというわけで，ヘロヘロになりながらどうにか到着。\n八重垣神社チャレンジ | Flickr 鳥居のすぐ横に駐車場があって，狭いながら駐輪スペースもあった。\n八重垣神社の駐輪場 | Flickr 無造作にメットを引っ掛けてるが，これで盗られたことは（今のところ）ない。 田舎バンザイである。\n鳥居を潜 (くぐ) って，手を清めて境内へ。 とりあえず拝殿はこんな感じ。\n八重垣神社 拝殿 | Flickr 鏡の池のある辺りは昔と変わらず鬱蒼としてるな。\n八重垣神社 鏡の池 | Flickr この辺でカブトムシの幼虫を採っていたのだが，今やったら確実に怒られるだろうな（笑）\n境内を一通り巡って拝殿や祠で柏手を打って参拝終了。 お土産に「子宝飴」を買って帰った。\n八重垣神社 名物 子宝飴 | Flickr 特に意味はない。 糖分が欲しかったのだ。 おうちに帰ってから美味しくいただきました。\nいやぁ，筋力と体力のなさが如実に出たねぇ。 次のチャレンジはもう少し鍛えてからにします。\nブックマーク 外出先でのヘルメットはどうしていますか？ – CyclingEX CLASSIC 参考 アークレイ株式会社 グルコレスキュー (ブドウ糖補給ゼリー) 25g×5包 2箱セット アークレイ株式会社 B06XDPTLDD (ASIN), 4987486118541 (EAN), 4573189972315 (EAN) 低血糖になった場合の緊急措置用に購入。仕事用鞄とプライベート用鞄に忍ばせている。幸いまだお世話になったことはない。\nreviewed by Spiegel on 2022-11-16 (powered by PA-APIv5)\n明治 ヴァーム(VAAM) アスリート 顆粒 栄養ドリンク風味 4.7g×10袋 明治 (Release 2021-03-16) ヘルスケア\u0026amp;ケア用品 B08VMWL13F (ASIN), 4902705035614 (EAN) 運動時に脂肪をエネルギーに変えやすくする働きがあるらしい。お試しで買ってみた。とりあえず1時間以上自転車に乗る場合に服用している。水に溶かさず飲むと書いてあるが，水と一緒に飲まないと大変なことになるので注意（経験済み）\nreviewed by Spiegel on 2022-11-04 (powered by PA-APIv5)\n"
    },
    {
      "title": "Mastodon の復活",
      "section": "remark",
      "description": "当面 ROM に徹する",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/the-return-of-mastodon/",
      "published": "2022-11-19T01:10:54+00:00",
      "update": "2022-11-20T05:45:50+00:00",
      "content": "いや，前にも書いたんだけどね。 Twitter が滅びようが個人的にはどーでもいいと思ってるのよ。 永遠に続くサービスなどありえない。\nでも Signal が\nHello, Mastodon - signalapp@mastodon.world\n\u0026mdash; Signal (@signalapp) November 18, 2022 てな感じで Mastodon アカウントを公開するなら追従しておきたいやん。\nというわけで，長いあいだ放置プレイ状態だった mstdn.jp アカウントを発掘して復活させた。 Qiitadon にもアカウントがあった気がするが1，そっちは引き続き放置プレイで（笑） mstdn.jp って随分前に閉鎖するとか小耳に挟んでたんだけど継続してたんだな。 まぁ，どうでもいいか。\n当面 Mastodon のほうは ROM (Read Only Member) に徹するので，積極的にアカウントは公表しない。 秘密にもしないけど。 まぁ，知ってる人は知ってるかもだが（笑） たとえば Zenn や GitHub アカウントのプロフィール欄に Mastodon の項目が追加されれば公表するかもってくらいで。\n昔の記事を見ると，2017年春に Mastodon が登場して年内には飽きちゃってるんだな，私。 今回もすぐ飽きる気がする。 飽きたらやめるので。 こういうのって相手がいてはじめて成立するサービスだし。 自分しかいない「セカイ」の真ん中で何をいくら叫んでも何処にも届かいない（笑）\n逆に，政治広告まみれ醜聞まみれの Yellow Twitter に本当に嫌気が差したら Mastodon に本格的に移住するかも。 どうなるやら。\n参考文献 【Amazon.co.jp 限定】ストランド版 シャーロック・ホームズの復活 アーサー・コナン・ドイル (著), シドニー・パジェット (イラスト), 寺本 あきら (翻訳) ジョージ・ニューンズ社 2022-10-04 (Release 2022-10-04) 単行本（ソフトカバー） B0B54Z1LQ1 (ASIN), 4571473280092 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ストランド誌に掲載された「シャーロック・ホームズの復活」を日本語化した複製本。挿絵はオリジナルのものが掲載されていて。挿絵のポストカードまで付いている！\nreviewed by Spiegel on 2022-10-08 (powered by PA-APIv5)\nあとで調べたら Qiitadon は 2022-02-28 でサービスを終了していた。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "踊る血糖値",
      "section": "remark",
      "description": "いざというときのためにドラッグストアでブドウ糖を買っておいたほうがいいか知らん",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/dancing-blood-sugar/",
      "published": "2022-11-16T04:03:56+00:00",
      "update": "2022-11-19T09:37:56+00:00",
      "content": "本来の通院日は次の土曜日なのだが，学会がどーたらで休診すると言われ，それならと平日の午前中に有給休暇をとってかかりつけ医にお出かけしてみた。\nせっかく平日に休みをとったので，ついでに色々と用事を済ませてしまおうと張り切ってチャリンコでお出かけしたのだが，これがイケてなかったらしい。 血圧を測ったら上側が $150\\,\\mathrm{mmHg}$ 超えるし，血糖値を測ったら食後2時間なのに $91\\,\\mathrm{mg}/\\mathrm{dL}$ とかなってるし。\n91なら正常値で万々歳だと思うでしょ。 違うのよ。\n実は私は糖尿病の人でさ。 糖尿病ってのは要するに糖代謝の不調または不全のこと。 まぁ，若い頃に「ついカッとなってやった」ことの反動だろうと今は反省している。 で，この頃はいい薬があって私程度の軽症状ならインスリンを直接打ち込まなくても HbA1c ではどうにか正常範囲内をキープできてるわけ。\nでも自前で代謝をコントロールできてるわけではないのでイレギュラーに弱い。 特に今回は「食後2時間」という血糖値が一番上がるであろう時間帯にこの値はちょっとヤバくて1，逆に低血糖になるかもしれないから気をつけろと採血してくれた看護師さんに釘を刺された。 あとでセブンに行く用事があるのでレーズンサンドでも買って帰ろう（笑）\n「サイクリストは糖質ダイエットをしてはいけない」というのはよく聞くのだが，マジで糖代謝が激しいんだな。 今回はちょっとしか乗ってないのに。 はっきり言ってナメてた。 過去に1回だけ低血糖でクラクラしたことがあるのだが，あれは結構キツい2。 いざというときのためにドラッグストアでブドウ糖を買っておいたほうがいいか知らん。\nというわけで，次の通院日は大人しく徒歩＋公共交通機関で移動しようと思います。\n参考 ACTIVIKEスピードウォーター ACTIVIKE その他 B0BFVY33CD (ASIN), 4571507200119 (EAN) ヒルクライムや中近距離ライド用エナジードリンク。ブドウ糖と果糖をバランスよく配合。カリウムを排除してトイレに行く回数を減らせるとかなんとか。\nreviewed by Spiegel on 2022-11-16 (powered by PA-APIv5)\nアークレイ株式会社 グルコレスキュー (ブドウ糖補給ゼリー) 25g×5包 2箱セット アークレイ株式会社 B06XDPTLDD (ASIN), 4987486118541 (EAN), 4573189972315 (EAN) 低血糖になった場合の緊急措置用に購入。仕事用鞄とプライベート用鞄に忍ばせている。幸いまだお世話になったことはない。\nreviewed by Spiegel on 2022-11-16 (powered by PA-APIv5)\n一般的な話じゃなくて，私個人の事情だからね。念のため。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n当時は病院でオマケでもらってたブドウ糖を常時所持していた。今は，あのときよりかなり軽めの処方なのでブドウ糖は持ち歩いてない。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "公式の構造化 Logger (になるかもしれない) slog パッケージ",
      "section": "golang",
      "description": "多少は期待してもいいかもしれない。公式になるといいな。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/golang/maybe-official-structured-logger-package/",
      "published": "2022-11-12T12:26:57+00:00",
      "update": "2022-11-12T12:27:13+00:00",
      "content": "今日の「第4回『Go言語による分散サービス』オンライン読書会」で構造化ログについて話題になったのだが（ちなみに『Go言語による分散サービス』のサンプルコードでは構造化ロガーとして zap を利用している），その中で公式の構造化 logger がプロポーザルとして上がってるという話を聞く。 どうもこれのことらしい。\nproposal: log/slog: structured, leveled logging · Issue #56345 · golang/go · GitHub Proposal: Structured Logging この slog パッケージについて解説記事も見つけたので，これも参考にしながら少し遊んでみようと思う。\n2022年10月末時点で，このパッケージについては\nIn late August 2022, Jonathan Amsterdam of the Go team initiated a discussion with the community about adding structured, log-level support for logging packages to the Go standard library, and formed a consensus proposal.\nJonathan Amsterdam has named the structured logging package slog and plans to put it under log/slog. He also gave the initial implementation of slog under golang.org/x/exp, and the Proposal is officially in review these days. It is not known when it will be officially implemented in the official version of Go.\nvia slog: Golang\u0026#39;s official structured logging package - SoByte という感じらしい。 実際に design doc が公開されレビューが行われているということなら多少は期待してもいいかもしれない。 公式になるといいな。\n試しに簡単なコードを書いてみよう。\npackage main import ( \u0026#34;os\u0026#34; \u0026#34;golang.org/x/exp/slog\u0026#34; ) func main() { slog.SetDefault(slog.New(slog.NewTextHandler(os.Stderr))) slog.Info(\u0026#34;hello world\u0026#34;) } これを実行すると\n$ go run sample1.go time=2022-11-12T19:00:27.704+09:00 level=INFO msg=\u0026#34;hello world\u0026#34; という感じに KEY=VALUE スタイルのログを出力する。 またバックエンド側のハンドラを\npackage main import ( \u0026#34;os\u0026#34; \u0026#34;golang.org/x/exp/slog\u0026#34; ) func main() { slog.SetDefault(slog.New(slog.NewJSONHandler(os.Stderr))) slog.Info(\u0026#34;hello world\u0026#34;) } と差し替えることで\n$ go run sample2.go {\u0026#34;time\u0026#34;:\u0026#34;2022-11-12T19:45:51.816529605+09:00\u0026#34;,\u0026#34;level\u0026#34;:\u0026#34;INFO\u0026#34;,\u0026#34;msg\u0026#34;:\u0026#34;hello world\u0026#34;} と JSON スタイルの出力に切り替えることもできる。 この出力ハンドラは自作することもでき，たとえば zap や zerolog といったサードパーティの logger に接続することもできるらしい。\nvia slog: Golang\u0026#39;s official structured logging package - SoByte もう少し遊んでみよう。 error 値を出力するコードを書いてみる。\npackage main import ( \u0026#34;context\u0026#34; \u0026#34;os\u0026#34; \u0026#34;github.com/goark/errs\u0026#34; \u0026#34;golang.org/x/exp/slog\u0026#34; ) func checkFileOpen(path string) error { file, err := os.Open(path) if err != nil { return errs.Wrap( err, errs.WithContext(\u0026#34;path\u0026#34;, path), ) } defer file.Close() return nil } func main() { logger := slog.New(slog.NewJSONHandler(os.Stderr)).WithContext(context.TODO()) logger.Enabled(slog.DebugLevel) if err := checkFileOpen(\u0026#34;not-exist.txt\u0026#34;); err != nil { logger.Error(\u0026#34;open error\u0026#34;, err) } else { logger.Info(\u0026#34;no error\u0026#34;) } } これを実行すると\n$ go run sample3.go {\u0026#34;time\u0026#34;:\u0026#34;2022-11-12T20:32:38.775783665+09:00\u0026#34;,\u0026#34;level\u0026#34;:\u0026#34;ERROR\u0026#34;,\u0026#34;msg\u0026#34;:\u0026#34;open error\u0026#34;,\u0026#34;err\u0026#34;:\u0026#34;open not-exist.txt: no such file or directory\u0026#34;} となる。 まぁ，予想通り。\nでも，拙作の errs パッケージは errs.Error.MarshalJSON() メソッドを持っているので JSON 形式で出力して欲しい。 苦肉の策で\nlogger.Error(\u0026#34;open error\u0026#34;, err) を\nlogger.Error(\u0026#34;open error\u0026#34;, err, slog.Any(\u0026#34;info\u0026#34;, err)) としてみたが，結果は\n$ go run sample4.go {\u0026#34;time\u0026#34;:\u0026#34;2022-11-12T20:54:04.358245853+09:00\u0026#34;,\u0026#34;level\u0026#34;:\u0026#34;ERROR\u0026#34;,\u0026#34;msg\u0026#34;:\u0026#34;open error\u0026#34;,\u0026#34;info\u0026#34;:\u0026#34;open not-exist.txt: no such file or directory\u0026#34;,\u0026#34;err\u0026#34;:\u0026#34;open not-exist.txt: no such file or directory\u0026#34;} となる。 ソースコードを見ると fmt.Sprint(v.any) なる記述が見れるので error 型は問答無用で Error() メソッドが出力する文字列に変換されてしまうようだ。 ふむむー。 ひょっとしたら slog.JSONHandler を参考に独自のハンドラを組めばどうにかなるかもしれんが，今回は止めておこう。 ホンマに公式になるかどうか分からんし（笑）\nともかく，公式の構造化 logger が登場すればログ周りのシーンはかなり変わるだろう。 楽しみなことである。\nブックマーク Go のエラーハンドリング 参考図書 Go言語による分散サービス ―信頼性、拡張性、保守性の高いシステムの構築 Travis Jeffery (著), 柴田 芳樹 (翻訳) オライリージャパン 2022-08-03 単行本（ソフトカバー） 4873119979 (ASIN), 9784873119977 (EAN), 4873119979 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元でデジタル版を購入。読書会の課題図書。ハンズオンぽい構成でコードがたくさん書かれているのがよい。\nreviewed by Spiegel on 2022-08-03 (powered by PA-APIv5)\nプログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n"
    },
    {
      "title": "いまさら「安全なメッセージング・アプリ」",
      "section": "remark",
      "description": "私から「Signal を入れよう」と持ちかけてもいぢめないであげてください。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2022/11/secure-messaging-apps/",
      "published": "2022-11-10T12:09:00+00:00",
      "update": "2022-11-10T12:11:52+00:00",
      "content": "Twitter TL を眺めてたら Mastodon で Direct Messages on Mastodon are NOT encrypted みたいなのが流れてるんだそうで，そもそも Twitter の DM だって安全じゃないし，複数のサーバが分散している Mastodon なら尚更だと思うのだが，世の中の認識はどんな感じなのだろう。\n大昔のカビの生えた記事で申し訳ないが，2014年に EFF が “Secure Messaging Scorecard” という記事を公開していて，この中で「安全なメッセージング・アプリ」の7項目を挙げている。 曰く\nEncrypted in transit? Encrypted so the provider can\u0026rsquo;t read it? Can you verify contacts\u0026rsquo; identities? Are past comms secure if your keys are stolen? Is the code open to independent review? Is security design properly documented? Has there been any recent code audit? である。 当時は私も便乗記事を書いていたが，その後 EFF は記事をいったん引っ込めている。 現在，跡地として残っている記事には\nThis is version 1.0 of our scorecard; it is out of date, and is preserved here for purely historical reasons. Please visit Surveillance Self-Defense if you\u0026rsquo;re looking for recommendations on specific tools to use to ensure your privacy and security while we work on writing an updated guide to secure messaging. Again, you should not use this scorecard to evaluate the security of any of the listed tools, as many of them have been changed since the scorecard was last updated (some for the better, some for the worse). via Secure Messaging Scorecard | Electronic Frontier Foundation と但し書きがされているのでご注意を。 ただ，まぁ，上に挙げた7項目は「安全なメッセージング・アプリ」を実現するための最低限の条件と言っていいだろう。\nTwitter や Mastodon の DM は電子メール・システムに近い。 ユーザ間を直接的に繋ぐ通信ではなく，最低ひとつのサーバにメッセージが保持され，サービス・プロバイダ側の「なにか」がそのメッセージを見ることは（技術的には）可能である。 簡単に言うと，これらは「はがき」と同程度に「検閲可能」なのだ。\n安全を確保するためのやり方は色々ある。 たとえば，電子メールでは S/MIME や PGP/MIME といった仕組みでメッセージ本文を暗号化できる。 今は廃れているかもしれないが，かつて Jabber とよばれた XMPP 方式のインスタント・メッセージング・サービスは OTR (Off-the-Recording) を組み込むことで，上述の7項目を満たすことに成功した。\n個人的には Signal を推す。 上の “Secure Messaging Scorecard” 跡地で紹介されている “Surveillance Self-Defense” でもメッセージング・アプリとして Signal と OTR と WhatsApp が紹介されている。\nとはいうものの，8年前の記事でも書いたが，結局メッセージング・アプリで一番大事なのは「相手がいること」なのよね。 一応 Signal は入れてるんだよ。 誰も遊んでくれないけど（笑） 仕事では Microsoft Teams を使ってるし，広島の友人との連絡は Facebook Messenger だし，家族との連絡は電話かキャリアメールだ。 まぁ LINE は今だに毛嫌いしてるので，知り合いから「LINE 入れないの？」と言われても頑なに断ってるけど。\nというわけで，私から「Signal を入れよう」と持ちかけてもいぢめないであげてください。\nブックマーク メッセージングアプリSignalが暗号化で妥協しない理由を新プレジデントが語る - YAMDAS現更新履歴 : ちなみにこの記事で Signal の送金機能の話が出ているが，ベータ機能として組み込まれている。私は有効にしてないけど\nAndroid 版 Signal が SMS 対応を取りやめる話\n参考文献 超監視社会 ブルース・シュナイアー (著), 池村 千秋 (翻訳) 草思社 2016-12-13 (Release 2017-02-03) Kindle版 B01MZGVHOA (ASIN) 実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。\nreviewed by Spiegel on 2019-03-23 (powered by PA-APIv5)\n暗号化 プライバシーを救った反乱者たち スティーブン・レビー (著), 斉藤 隆央 (翻訳) 紀伊國屋書店 2002-02-16 単行本 4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！\nreviewed by Spiegel on 2015-03-09 (powered by PA-APIv5)\n"
    }
  ]
}
