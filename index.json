{
  "title": "text.Baldanders.info",
  "url": "https://text.baldanders.info/",
  "feed": "https://text.baldanders.info/index.xml",
  "description": "帰ってきた「しっぽのさきっちょ」",
  "entry": [
    {
      "title": "自転車のリスク・マネジメント 2023",
      "section": "remark",
      "description": "自転車安全利用五則 / メットは被っとけ / 保険は入っとけ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/risk-management-for-bike/",
      "published": "2023-04-16T04:33:36+00:00",
      "update": "2023-04-16T04:39:25+00:00",
      "content": "最近見かけた記事。\nなぜ自転車のヘルメットは努力義務になったのか｜T.Goto｜note いや，うーん。 分からなくもないけど，この記事自体が政治宣伝ぽくて鼻をつまんでしまうんだよなぁ。 電動けりんちょ，おっとキックボード等との抱き合わせの話はみんな思ってることで，たとえば\n小型電動モビリティのヘルメット着用努力義務と、自転車のそれはリンクしている – CyclingEX CLASSIC 程度の認識でいいんじゃないの？ と思う。 抱き合わせで何が悪い。\nというわけで，今までも散発的に書いてたけど，自転車のリスク・マネジメントについてつらつらと書いてみる。\n自転車安全利用五則 「自転車安全利用五則」と呼ばれるものがある。 曰く\n車道が原則、左側を通行\n歩道は例外、歩行者を優先 交差点では信号と一時停止を守って、安全確認 夜間はライトを点灯 飲酒運転は禁止 ヘルメットを着用 自転車の安全利用の促進について - 内閣府より ってことらしい。 また2022年11月から自転車による交通違反の罰則が厳しくなった。\n知っておきたいロードバイクの法改正 - YouTube この辺は致し方ないところであろう。 私が子どもの頃のような長閑な時代ではないのだ。 自転車は歩行者の延長ではなく車の一種である，という点は頭に入れておくべきだろう。\nそういえば，スクランブル交差点で歩行者信号が青になったので自転車に乗って渡ろうとしたら，おまわりさんにとっ捕まったって話があったよね。 でも，スクランブル交差点で自動車信号に合わせて自転車に乗って渡ったらソッコー轢かれるぢゃん。どんな罠だよ（笑）\n公道における自転車の立ち位置は微妙で，それ故に事故リスクが高いルートは避けるなどの自衛も必要になる。\n自転車を安全に乗ろう！街中に潜む危険箇所をご紹介！ - YouTube メットは被っとけ 2022年5月に決議された改正道交法で，自転車に乗る際は年齢を問わずヘルメットを着用することが「努力義務」となった。 そしてこの改正道交法は2023年4月から施行されている。 つまり，いきなり始まったわけじゃなくて，一応11ヶ月の猶予期間はあったんだよ（事前の周知はされてたか怪しいけど）。\n私は2022年9月にクロスバイクを購入したが，その後の2ヶ月後点検の際に遅まきながらヘルメットとグローブを購入している。\n当時の記事でも書いたが，私は若い頃は割と自転車事故に遭っていて，自動車と衝突してふっ飛ばされたこともあるし（自転車は大破したが奇跡的に捻挫のみで済んだ），出会い頭に歩行者を轢きそうになったこともある（急ブレーキに失敗して自転車ごと前転した。歩行者に当たらなくてよかった）。 スポーツサイクルに乗る際にヘルメットやグローブを着用することの重要性は分かっているつもりだ。\nお買い物用のママチャリや子どもの通学用シティサイクルと，今や嗜好品になりつつあるスポーツサイクルをひと絡げに「自転車」として扱うのはどうかとも思うのだが，私の若い頃を思い返してみれば，原チャリでもノーヘル当たり前だった時代もあるし，車のシートベルトやチャイルドシートも定着するまで随分かかった。 自転車のヘルメットも「当たり前」になるまでしばらくかかるのだろう。\nで，問題はヘルメットって乗車時以外は邪魔物なんだよね。 今までは，あご紐でフレームに引っ掛けるだけだったんだが\n八重垣神社の駐輪場 | Flickr これからは安物ヘルメットでもカジュアルに盗むバカとか出そうなので，ヘルメットロックを買うことにした。 ヘルメットロックについては以下の記事が参考になる。\n【ヘルメット】自転車のヘルメットホルダーとして使えそうなアイテム【盗難防止】 – CyclingEX CLASSIC 私が買ったのはこれ。\nクロップス(crops) バイクロック ヘルメットロック UNI Q (ユニーク) | 3桁ダイヤル | CP-SPD07SHT (40, カーボン調) クロップス(Crops) (Release 2019-03-23) Automotive B07MZ8459H (ASIN), 4571144619237 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ヘルメット着用努力義務化に合わせて買った。簡易ロックだが，カジュアル窃盗避けということで（笑）\nreviewed by Spiegel on 2023-04-16 (powered by PA-APIv5)\n自転車のロックを兼ねるならもっとワイヤーが長いほうがいいかも知れないが，私は自転車用のロックは別に持ってるので。\n保険は入っとけ ヘルメットより重要なのが保険。 保険加入の（努力）義務は自治体によって異なる。\n自転車損害賠償責任保険等への加入促進（2023-04-01 時点）より この表には載ってないが，私が住んでいる島根県松江市は個別の条例で努力義務が課せられている。\n自転車利用者は、定期的な点検整備及び事故に備えた損害保険への加入に努めなければならない。 松江市自転車安全利用条例 第5条 3より 私はヘルメットとかを購入したのと同時期に au の保険にも入っている。 年間6K円ほどだが，私が利用しているキャリアが au なので支払いが楽だし，同居家族も対象に含まれるので，これにした。 この辺は人によって違うだろう。\n自転車の性能が上がるほど加害者側になるリスク（＝生起確率×影響度）は馬鹿にできない。 また，東京都とか保険加入が義務になっているところは，勤務先によっては自転車通勤を希望する際に保険の入会証明書を提出しないといけなかったりするらしい。\nまぁ，保険は入っとけってことだよね。\nブックマーク 自転車の灯火についての決まりを全都道府県調べてみた – CyclingEX CLASSIC\n【パーツ】あなたのライトは、明るさ基準値クリアしていますか？！ : この記事の800ルーメンの前照灯を購入した。スマートモードが便利\nはじめての空気圧チェック\nチェーンお掃除を試してみる\n参考 ランニング ポーチ 【駅伝優勝ランナーが認めた】 ウエスト バッグ 大容量 防水 軽量 スマホ ホルダー ボディバッグ フェス ユニセックス ジョギング ウォーキング 登山 釣り IkucheL (グレー 2つ口) IkucheL B082FDBWDH (ASIN), 4580614300292 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ランニングポーチだが自転車に乗る際のウェストポーチとして使っている。ベルトがゴムなので揺れない。大きいポケットにはスマホとモバイルバッテリ（小）を重ねて入れられる。小銭や鍵は小さい方のポケットに。\nreviewed by Spiegel on 2023-04-16 (powered by PA-APIv5)\nモバイルバッテリー 小型 軽量 薄型10000mAh 大容量 PD18W QC3.0【Type-C入出力ポート/Power Delivery対応/Quick Charge3.0対応/PSE認証済】 iPhone/iPad/Android等各種対応 (ブラック) MOXNICE B092CX9HBY (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; コンパクトでランニングポーチに楽々入る。【追記】2023年時点ではもう売ってないらしい。残念。\nreviewed by Spiegel on 2021-11-07 (powered by PA-APIv5)\n"
    },
    {
      "title": "Bluesky に旗を立てろ！",
      "section": "remark",
      "description": "正直，どう使うかまるで考えてない。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/plant-your-flag-mark-your-bluesky-territory/",
      "published": "2023-04-15T09:31:03+00:00",
      "update": "2023-04-15T23:45:58+00:00",
      "content": "今だによく分かってない Bluesky。 なにせ「AT (Authenticated Transfer) Protocol って何？1」ってレベルで分からない（笑）\n最近話題の Mastodon や Nostr と何が違うん？ という感じでスルーしてたのだが（総ユーザ数が一億超えたら考えるって言ってたぢゃん＞自分）， Twitter や Mastodon の TL で連日連呼されるし，運良く invitation をいただける機会があったので，サインアップしてしまった。\n携帯端末は iPhone しか対応してないみたいなので Web クライアントでサインアップしようとしたが， Web クライアントはサードパーティも含めて色々あるのな。 で，公式の Web クライアントは staging.bsky.app だそうな。 ということで，以下でサインアップした。\n@baldanders.info \u0026hellip; xxx.bsky.social みたいなハンドル名にないってない理由は次節をどうぞ。\nフォローはご自由にどうぞ。 正直，どう使うかまるで考えてない。 Nostr と同じで，こちらも “Plant Your Flag, Mark Your Territory” ってことで，旗を立てるだけにしておこう。\n何が生き残るんだろうねぇ。 案外，すったもんだの挙句に残ったのは Twitter だけだった，なんてなオチもありそうだが（笑）\nBluesky のアイデンティティ Twitter は Blue をお金で買えるようになったので論外だが，たとえば Mastodon なら自サイトに\n\u0026lt;link rel=\u0026#34;me\u0026#34; href=\u0026#34;https://social.example.com/@username\u0026#34;\u0026gt; などと記述し，緩くサイト間連携することでアイデンティティを記述できる。 じゃあ Bluesky はどうしてるのかと思ったら，ハンドル名をカスタムドメインに変更できるらしい。\nDomain Names as Handles in Bluesky - Bluesky でも，この記事には手順が書いてないのよね。 ググって最初に見つけた記事では Web API を叩けみたいなことが書いてあったのだが，実際にやってみると \u0026quot;Method Not Implemented\u0026quot; と返ってきて設定できない。 他に情報がないかと探してみたら Zenn に投稿してる方がいた。\n誰でもできる、Blueskyでカスタムドメインを簡単に設定する方法 公式 Web クライアントの Settings にあった “Change my handle” って項目はこれのことか！\nあとは上のリンク先記事の通りにやれば変更できる2。 こうやって Bluesky のユーザは自らのアイデンティティを担保するというわけだ。\nブックマーク Bluesky \u0026ndash; Scrapbox 開発視点から見る、新しい分散型SNS「Bluesky」とAT Protocolの可能性 | gihyo.jp BlueskyのWebクライイアントSkylightとTokimeki Blueskyの比較 – あたしンちのおとうさんの独り言 「Bluesky」はSNSと言い切れない理由、そして世界初のミートアップが東京で行われた事情（1/2 ページ） - ITmedia NEWS 分散型SNS｢Bluesky｣って今どうなってるの？ | ギズモード・ジャパン AT (Absolute Terror) Field の親戚か，思うた（笑）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n当然ながら連携するドメインは自前で用意する必要がある。かつ，ドメインに対して TXT レコードを設定できる権限が必要。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "Go 1.20.3 のリリース【セキュリティ・アップデート】",
      "section": "release",
      "description": "今回は4件の脆弱性修正を含んでいる。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/04/go-1_20_3-is-released/",
      "published": "2023-04-15T01:39:04+00:00",
      "update": "2023-04-15T01:39:29+00:00",
      "content": "毎度遅まきながらで申し訳ない。 予告通り Go 1.20.3 がリリースされた。\n[security] Go 1.20.3 and Go 1.19.8 are released 今回は4件の脆弱性修正を含んでいる。\nCVE-2023-24537 go/parser: infinite loop in parsing Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow. via Go 1.20.3 and Go 1.19.8 are released CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H 深刻度: 重要 (Score: 7.5) 基本評価基準 評価値 攻撃元区分 ネットワーク 攻撃条件の複雑さ 低 必要な特権レベル 不要 ユーザ関与レベル 不要 スコープ 変更なし 機密性への影響 なし 完全性への影響 なし 可用性への影響 高 CVE-2023-24538 html/template: backticks not treated as string delimiters Templates did not properly consider backticks (``` ) as Javascript string delimiters, and as such did not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contained a Go template action within a Javascript template literal, the contents of the action could be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\nAs ES6 template literals are rather complex, and themselves can do string interpolation, we\u0026rsquo;ve decided to simply disallow Go template actions from being used inside of them (e.g. \u0026ldquo;var a = {{.}}\u0026rdquo;), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. Template.Parse will now return an Error when it encounters templates like this, with a currently unexported ErrorCode with a value of 12. This ErrorCode will be exported in the next major release.\nvia Go 1.20.3 and Go 1.19.8 are released うわぁ，なにそれ面倒くさい。\n（以下未稿）\nCVE-2023-24534 net/http, net/textproto: denial of service from excessive memory allocation HTTP and MIME header parsing could allocate large amounts of memory, even when parsing small inputs.\nCertain unusual patterns of input data could cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\nHeader parsing now correctly allocates only the memory required to hold parsed headers.\nvia Go 1.20.3 and Go 1.19.8 are released （以下未稿）\nCVE-2023-24536 net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption ちょっと長いけど，そのまま載せるね。\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes:\nmime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm could undercount the amount of memory consumed, leading it to accept larger inputs than intended. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. ReadForm could allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\nReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\nIn addition, mime/multipart.Reader now imposes the following limits on the size of parsed forms:\nForms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.\nvia Go 1.20.3 and Go 1.19.8 are released （以下未稿）\n例によって\u0026hellip; Ubuntu の APT で管理している Go コンパイラは古いので，ダウンロードページからバイナリ（go1.20.3.linux-amd64.tar.gz）を取ってきてインストールすることを推奨する。 以下は完全手動での作業例。\n$ cd /usr/local/src $ sudo curl -L \u0026#34;https://go.dev/dl/go1.20.3.linux-amd64.tar.gz\u0026#34; -O $ cd .. $ sudo unlink go # 以前の Go が入っている場合 $ sudo tar xvf src/go1.20.3.linux-amd64.tar.gz $ sudo mv go go1.20.3 $ sudo ln -s go1.20.3 go $ go version # /usr/local/go/bin にパスが通っている場合 go version go1.20.3 linux/amd64 Windows はインストールパッケージを取ってきて直接インストールする。 Scoop 経由でも OK\n複数バージョンの Go コンパイラを扱いたい場合は\n$ go install golang.org/dl/go1.20.3@latest $ go1.20.3 download $ go1.20.3 version go version go1.20.3 linux/amd64 てな感じで導入できる。\nアップデートは計画的に。\n参考図書 プログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\n初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド Jon Bodner (著), 武舎 広幸 (翻訳) オライリージャパン 2022-09-26 単行本（ソフトカバー） 4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2021年に出た “Learning Go” の邦訳版。私は版元で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。\nreviewed by Spiegel on 2022-10-11 (powered by PA-APIv5)\n"
    },
    {
      "title": "『はじめて学ぶ ビデオゲームの心理学』は読んどけ！",
      "section": "remark",
      "description": "ユーザーはバカではない。賢くなろうよ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/the-psychology-of-video-games/",
      "published": "2023-04-09T12:31:30+00:00",
      "update": "2023-04-09T23:19:48+00:00",
      "content": "『はじめて学ぶ ビデオゲームの心理学』をようやく読み終わった。 ついでに 2023-04-08 に著者の Celia Hodent さんを招待して開催された Webinar も観た。\n本を手にした第一印象は「字がデカい」「ページ数が薄い（巻末の日本語版解説も併せて184ページしかない）」であった（いや，書く方も翻訳する方も凄い労力だと思うけど）。 私はスキマ時間にチマチマ読んでたので比較的時間がかかったが，メモを取りながらでも1日あれば読める分量だよね。 この本はつまみ食い的に読むのではなく，第1章から順に読んでいくことを強くお勧めする。\n念のために言うと，私はゲームデザイナーでもゲームエンジニアでもない。 ゲームは好きだが，少なくとも社会人になってからはコンシューマー機オンリーだったし，テレビを捨ててからはスマホゲームをスキマ時間でやる程度の雑魚ゲーマーである。 そりゃあ学生時代は可処分時間が有り余ってたし，田舎は娯楽が少ないからゲーセンも通ってたし，なんなら発売日にドラクエを買うためにデパート前の行列に並んでたクチですよ。 それも今は昔。\nじゃあ，なんでこの本に興味を持ったかというと，サブタイトルにある「ユーザー体験（UX）」の単語に惹かれたから。\n『はじめて学ぶ ビデオゲームの心理学』にも書かれているが， UX (User eXperience) って UI (User Interface) とは違うのよ。 たとえば最近だと， IPA が自身のサイト構成を一新した際に旧コンテンツのリンクが切れまくって IT 業界が阿鼻叫喚になった話がある。\n大量のリンク切れをIPAが謝罪 ～重要コンテンツは原則、全件リダイレクトへ - 窓の杜 新しいサイトデザインが UI 的にどれだけ優れているのか知らないが， UX 的には既存ユーザーをぶった切る「（悪意はなくとも）悪い UX」事例と言える。\nあるいはネットサービスの「あるある話」で，どこぞのサブスクリプション・サービスとかに退会機能がないかめちゃめちゃ分かりにくい場所にあってユーザーにストレスを与えるって事例があるよね。 これも「悪い UX」か，意図的であれば「（悪意ある）ダークパターン」って奴だ。\nじゃあ，そういう「悪い UX」や「ダークパターン」を避けるにはどういう設計をすればいいの？ 心理学や社会学の専門家に（お金を払って）来てもらってアドバイスしてもらえばいいの？ って話になる。\nほかのテクノロジー業界（特にソーシャルメディア）に比べて、ゲーム業界がいくらか先に進んでいる点があります。それは、オンラインのマルチプレイゲームのなかで、反社会的な行為（被害者にとって有害と感じられる行動）から、できるだけプレイヤーの安全を守る対策を備えていることです。 『はじめて学ぶ ビデオゲームの心理学』 p.63より つまり，ゲーム開発・運用における UX 実践1 を見ていくことで，ゲーム以外のソフトウェア製品やサービス（特に SNS）にもヒントになるようなものがあるんじゃないか。\nドナルド・ノーマン（大きな影響力をもつ『誰のためのデザイン？ —— 認知科学者のデザイン原論』（Norman, 1990）の著者）は「ユーザー体験（UX：user experience）」という単語を提唱し、製品やそのエコシステム（マーケティング、ウェブサイト、顧客サービスなど）にユーザーが関与するときの体験全般を考えるという方針を示しました。そのため、企業やグローバル戦略も UX に含まれます。 『はじめて学ぶ ビデオゲームの心理学』 p.34より これって私が最近読んでいる『ユニコーン企業のひみつ』や『ピープルウエア』なんかにも通じる話だよね。 個人が趣味や余暇でやってるようなものはともかく，企業が開発・運用する製品（サービス）は，どうやっても「チーム戦」になる。 突出したスーパープログラマ（笑）が職人技でプロダクトを組む時代ではないのだ。 それもエンジニアだけじゃなく，プロダクトオーナーやその上の経営者や，ときにはその筋の専門家をも巻き込んだ「総力戦」だ。 そのような状況で上手く製品のイテレーションを繰り返すには「文化が重要」（『ユニコーン企業のひみつ』p.152）というわけ。\nもっとも『ユニコーン企業のひみつ』や『ピープルウエア』はチーム内あるいは職場内の環境や文化にフォーカスしているが『はじめて学ぶ ビデオゲームの心理学』は「誰の方を向いて仕事をするのか」といったことにフォーカスしていると言える。 そして，それはもちろん「顧客（ユーザー）」の方を向いていなければならない。 考えてみれば当たり前の話なんだけどね。 SF作家の Cory Doctorow さんも言ってるじゃない。\nプラットフォームはこのように滅びていく。まず、ユーザにとって良き存在になる。次に、ビジネス顧客にとって良き存在になるために、ユーザを虐げる。最後に、ビジネス顧客を虐げて、すべての価値を自分たちに向ける。そうして死んでいく。 メタクソ化するTiktokより って。\n『はじめて学ぶ ビデオゲームの心理学』では UX の実践について第2章で「UX マインドセット」と呼んで具体的に解説している。 「マインドセット」とは「個人やチームが確立したものの見方や考え方」（p.34）らしい。 この辺はゲーム関係者だけでなく，他のソフトウェア製品（サービス）の提供者も読んでおくべきだろう。\n第3章と第4章はビデオゲームの良い面と悪い面について「科学」的な視点から論じている。 「科学」というのは，宗教や信仰とは違い，トライ\u0026amp;エラーの繰り返しである。\n他の専門家から問題を指摘された論文が訂正されるのは正常な科学の営みだ。むしろ問題は、論文は撤回することができるが、その主張にもとづいた政策を取り消すのは論文撤回後も容易ではないということだ。したがってゲームに関する政策決定を行う際には、個々の主張にのみ注目するのではなく、学会（科学者集団）でどこまで合意が得られてどのような異論があるかもとりいれる必要がある。 『はじめて学ぶ ビデオゲームの心理学』 p.181-182より 第3章と第4章は引用にあるような「政策決定を行う」人だけでなく子どもを持つ親とかゲーマー自身も読んでおくべきだろう。 子どもがある程度以上の年齢なら親子で読んで議論するのも面白いかも知れない。\n第5章は「ビデオゲーム業界の倫理」について。 この章で「悪い UX」や「ダークパターン」といった単語とその解説が登場する。\nたとえばルートボックス（いわゆる「ガチャ」のこと）について「未成年を標的にするルートボックスは、まちがいなく倫理に反しています」（p.143）と断言し，その理由として\n脳の前頭前野という領域は25歳くらいまで発達を続けます。この脳領域は、衝動や自動的な行動の制御などに関与します。子どもや10代の青少年は前頭前野が未成熟なので、特定の状況で自動的に起きる反応を制御することが、大人に比べてはるかに大変です。このような脳の発達上の理由から、子どもはセルフコントロールが苦手ですし（大人が限度を決めてあげないとうまくいかないことがよくありますよね）、ティーンエージャーはリスクの高い行動をとる傾向が大人より強いのです。 『はじめて学ぶ ビデオゲームの心理学』 p.143-144より と解説している。\n特に，昨今流行りの Generative AI サービスの提供者は必見だと思う。 巷の論調だと LLM に常識や倫理観を求めようと躍起になってるように見えるが，本当に重要なのはサービスを利用するユーザーが常識的かつ倫理的な行動を取りやすいようサービス全体を設計していくことなんじゃないだろうか。 「完全に中立的なデザインは存在しない」（p.152）のなら，まずは提供する側が製品に対して一貫した倫理観を「マインドセット」していく必要がある。\n『はじめて学ぶ ビデオゲームの心理学』には「ゲームはルールによって行動を強制する」（p.153）とあるが，それはどんなサービスでも同じだろう。 適切なルール・メイキングとそれを（浪花節や刷り込みではなく）合理的に無理なく遵守させる仕組みが必要なのだ，と思ったり。\nあとゲーマー（あるいはその親）も第5章は読んでおくべきだろう。 ゲームの中で自分たちが何をしているのか（させられてるのか）自覚できればゲーム内での行動も変わってくるかも知れない。 2023-04-08 の Webinar で Celia Hodent さんが言っておられたが，ユーザーはバカではない。 経験を積み情報を得られれば賢く立ち回れるものである。 賢くなろうよ。\n私は，少なくとも職業エンジニアの矜持 (pride) は「善の実現」にあると思っている。\n理学は、真理の探究であり、工学は善の実現である。そして、藝術は美の表現である\u0026mdash;\u0026mdash;これで所謂「真美善」が揃う はやぶさ―不死身の探査機と宇宙研の物語より でも，その場合「善って何？」という問題が常につきまとう。 『はじめて学ぶ ビデオゲームの心理学』がその問題を照らす最初の取っ掛かりになることを期待したい。\n総評すれば『はじめて学ぶ ビデオゲームの心理学』はみんな読んどけ！ ってことだな。 以上。\n年齢に関わらず、遊びは私たちの精神を鋭敏に保つために重要です。 [\u0026hellip;] 遊ぶことは学ぶことです。 『はじめて学ぶ ビデオゲームの心理学』 p.71より はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳) 福村出版 2022-12-13 単行本（ソフトカバー） 4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想はこちら。\nreviewed by Spiegel on 2023-04-09 (powered by PA-APIv5)\nユニコーン企業のひみつ ―Spotifyで学んだソフトウェアづくりと働き方 Jonathan Rasmusson (著), 島田 浩二 (翻訳), 角谷 信太郎 (翻訳) オライリージャパン 2021-04-26 単行本（ソフトカバー） 4873119464 (ASIN), 9784873119465 (EAN), 4873119464 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 版元より電子版も出ている。 Google や Spotify のような「ユニコーン企業」はどのようにして「ミッション」を遂行しているのか。\nreviewed by Spiegel on 2022-05-21 (powered by PA-APIv5)\nピープルウエア 第3版 トム・デマルコ (著), ティモシー・リスター (著), 松原友夫 (翻訳), 山浦恒央 (翻訳) 日経BP 2013-12-18 単行本（ソフトカバー） 4822285243 (ASIN), 9784822285241 (EAN), 4822285243 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; とりあえず図書館で借りて試し読みしたら面白かったので買うことにした。原書の初版が1987年ということで，当時の雰囲気が漂う感じ。アジャイルやスクラムなど現代につながる開発スタイルの源流とも言える本。\nreviewed by Spiegel on 2023-02-12 (powered by PA-APIv5)\n『はじめて学ぶ ビデオゲームの心理学』では UX を「実装」ではなく「実践」と書かれていたのが印象的だった。つまりシステム設計や実装に限る話ではないということだろう。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "久しぶり，サイクリング\u0026お散歩おカメラ",
      "section": "remark",
      "description": "サイクリング日和で楽しい一日でした。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/09-osanpo-camera/",
      "published": "2023-04-09T08:10:19+00:00",
      "update": "2023-04-09T08:12:08+00:00",
      "content": "いやさ，最近\nhymkor/go-multiline-ny: Readline package supporting multi-lines hymkor/sqlbless: Database commandline client とか面白そうなパッケージが登場したので，これで遊ぼうと思ってたんだけど，空を見たら朝からピーカンで透明度も高くてさ。 予定を変更して自転車で遊びに出ることにした。\n4ヶ月ぶりのサイクリング！ 昨年末の入院騒ぎで冠動脈を広げてもらい，冬の間はフィットネスバイクで緩々と体力回復を図ったおかげなのか，7%勾配の陸橋もチェーンリング（前側のギアね）のギアを下げることなく楽々登れるようになったですよ。\nいつもの7%勾配の陸橋 | Flickr というわけで，まずは今日の宍道湖。\n今日の宍道湖 | Flickr うーん。 やっぱ地平線付近はけぶってるなぁ。 こりゃあ，松江城からの大山もギリギリ見えるかどうか\u0026hellip;\n今日の大山（伯耆富士） from 松江城 | Flickr うーん。 写真じゃほぼ分からんな（笑） 肉眼でどうにか分かる程度だもんな。 気を取り直して，今日の松江城。\n今日の松江城 | Flickr ナメのアングルが好き（笑）\nその後は図書館の学習室で読書タイム。 年度が明けて学生さんらしき人が増えていた。 そろそろおぢさんは遠慮したほうがいいかな。 『はじめて学ぶ ビデオゲームの心理学』をようやく読み終わった。 感想はそのうち。\n体力はまだある感じなので，学園通りにある大戸屋まで足を伸ばす。\n大戸屋で昼飯 | Flickr 食後のアイスコーヒーを飲んだらいい時間になったので，うちに帰るか。 そうそう。 今日の宍道湖，午後の部。\n今日の宍道湖（午後の部） | Flickr 逆光のアングルを狙ってみました（笑）\nサイクリング日和で楽しい一日でした。 選挙？ そんなもんとっくに期日前投票を済ませてるですよ。\n期日前投票キメてきたぜ！ | Flickr 参考図書 はじめて学ぶ ビデオゲームの心理学 脳のはたらきとユーザー体験（UX） セリア ホデント (著), 山根 信二 (監修), 成田 啓行 (翻訳) 福村出版 2022-12-13 単行本（ソフトカバー） 4571210450 (ASIN), 9784571210457 (EAN), 4571210450 (ISBN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; デジタル版が出そうもないので，諦めて紙の本を購入。ゲームデザイナやゲームエンジニアだけでなく，ソフトウェア・エンジニアは全員読むべき。あと，ゲーマーな人も読むといいよ。感想はこちら。\nreviewed by Spiegel on 2023-04-09 (powered by PA-APIv5)\n"
    },
    {
      "title": "2023-04-08 のブックマーク",
      "section": "bookmarks",
      "description": "「大量のリンク切れをIPAが謝罪 ～重要コンテンツは原則、全件リダイレクトへ」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2023/04/08-bookmarks/",
      "published": "2023-04-08T10:28:57+00:00",
      "update": "2023-04-08T10:29:07+00:00",
      "content": "リリース情報 Release v1.5.8 · sashabaranov/go-openai · GitHub Release v1.6.0 · sashabaranov/go-openai · GitHub Release v1.6.1 · sashabaranov/go-openai · GitHub Release v0.5.0 · hymkor/go-multiline-ny · GitHub Release v0.5.1 · hymkor/go-multiline-ny · GitHub Release 1.38.4 · tailscale/tailscale · GitHub Release v0.76.1 · anchore/syft · GitHub Release March 2023 Recovery 1 · microsoft/vscode · GitHub Release v1.7.0 · spf13/cobra · GitHub Release 10.1.0 · mermaid-js/mermaid · GitHub Release v0.8.1 · koki-develop/gat · GitHub セキュリティ＆プライバシー関連 大量のリンク切れをIPAが謝罪 ～重要コンテンツは原則、全件リダイレクトへ - 窓の杜 知財関連 米国インターネットアーカイブの目指すこと――その理念、著作権という現実、AIとの関係 - INTERNET Watch クリエイターは「死後70年間の著作権保護」を望んでいるのだろうか？ | p2ptk[.]org Linux または Ubuntu に関する話題 Ubuntu 23.04 その20 - Ubuntu 23.04 β版がリリースされました・ディスクイメージのダウンロード - kledgeb Go 言語関連 go-readline-ny：カラー化の手引き - 標準愚痴出力 Googleが開発したプログラミング言語「Go」に脆弱性 ～「Go 1.20.3」「Go 1.19.8」が公開 - 窓の杜 cznic / sqlite · GitLab Generative AI golang でストックした記事まとめをchatGPTでつくってみた セレブラスのCEOに聞く、オープンソースでのGPTモデル公開の意義 - ZDNET Japan ChatGPT Gets Its “Wolfram Superpowers”!—Stephen Wolfram Writings AIアートと著作権：「Stable Diffusionを違法化するためのロジック」が人間のアーティストを苦しめるワケ | p2ptk[.]org AI Art Generators and the Online Image Market | Electronic Frontier Foundation AI生成アートとオンライン画像市場：「AIトレーニングに使わせない権利」がクリエイターの仕事を奪うワケ | p2ptk[.]org その他 マイクロソフト、「GitHub Copilot X」をVisual Studioに搭載したデモ動画を公開。コードを自然言語で解説、デバッグ、ユニットテストの生成など － Publickey 「Visual Studio Code」で「GitHub Copilot Chat」体験 ～プレビュー版拡張機能で - 窓の杜 フリーの会計ソフト「GnuCash 5.0」が公開 ～約3年ぶりのメジャーアップデート - 窓の杜 NTT東西、4月3日のアクセス障害は45万弱の回線に影響\u0026ndash;原因は海外メーカー製装置の故障 - ZDNET Japan NTT東西の「フレッツ光」大規模障害、原因は特定のサーバから届いた“特殊なパケット”だった（1/2 ページ） - ITmedia NEWS 桃太郎、犬とキジを解雇　鬼退治の効率化図る : 虚構新聞w かくしてTwitterの青いチェックマークは「嘲笑」のシンボルとなった | p2ptk[.]org "
    },
    {
      "title": "“Copyleft Trolls” とたたかう 2023",
      "section": "remark",
      "description": "「文化の発展に寄与する」ってのは，こういう活動を指すんだよね，本来は！ ",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/copyleft-trolls-2023/",
      "published": "2023-04-08T03:21:36+00:00",
      "update": "2023-04-08T05:21:02+00:00",
      "content": "最近すっかり疎遠になっている Twiter の TL を眺めてたら\nライセンスの執行についての資料を公開しました | クリエイティブ・コモンズ・ジャパン ライセンスの執行 | クリエイティブ・コモンズ・ジャパン 執行に関する原則 | クリエイティブ・コモンズ・ジャパン もしあなたのCCライセンス作品が不適切な利用をされたら | クリエイティブ・コモンズ・ジャパン という記事が紹介されていた。 つか CCjp ってまだ活動してるんだねぇ。 もう看板だけの組織だと思ってたよ（笑）\nいわゆる “copyleft trolls” は1 CC licenses の古いバージョンに起因する不備をついたもので，2022年のはじめ頃に話題になったものだ。\nCC Licenses を悪用した新手の著作権トロルについて 「トロルにエサを与えないでください」 1年以上前の話を今更？ 選挙時期だし，ひょっとして何かの政治宣伝か？ と思ったが，どうも最近になって本家 CC が出した\nStatement of Enforcement Principles - Creative Commons を受けてのものらしい。 CC licences 執行の3つの原則とは以下のとおり：\nThe primary goal of license enforcement should be getting reusers to comply with the license. Legal action should be taken sparingly. Enforcement may involve monetary compensation, but should not be a business model. via Statement of Enforcement Principles 再利用を行う者にライセンスを遵守してもらうことを、ライセンスの執行の第一の目的とすること 法的な措置は頻繁に行われるべきではないこと 金銭的補償をもたらす執行もあり得るが、それがビジネスモデルとなるべきではないこと 執行に関する原則より もう少し言うと「ライセンスの目的は（利用条件を遵守させることにより）知的コモンズを拡大することにあり，（違反を誘発して）お金を巻き上げるビジネスモデルであってはならない」ということだ。\n“Copyleft trolls” の経緯と経過については Cory Doctorow さんが最近書かれた “Flickr to copyleft trolls: drop dead” が詳しい。 4月1日と明記されてたのでエイプリルフールを疑ったが，マジな記事なようだ（笑）\nこれによると Flickr のガイドラインに以下の文言が追加された。\nGive some grace. When you choose to grant permission to your photos under any open license available on Flickr, we ask that you give the reuser a 30-day grace period to fix any possible mistake or misuse of your CC-licensed work with no penalty. Failure to allow a good faith reuser the opportunity to correct errors is against the intent of the license and not in line with the values of our community, and can result in your account being removed. If you use CC licenses, please understand that we support and adhere to the strategy for addressing license enforcement described in the Creative Commons’ Statement of Enforcement Principles. via Flickr Community guidelines | Flickr これは上述した CC の「執行に関する原則」を受けてのものだね。 このガイドラインに違反する「トロル」な行為を受けた場合の報告手段も示されている。\nHow to report Community Guidelines violations – Flickr Help Center Flickr は Yahoo! / Verizon 時代の「技術的負債」を返済するのに忙しく，なかなか前に進んでいないように見えるが\nBut what they have done is modify their policies to create a de facto CC 4.0 environment for their users, by promising to terminate the accounts of any user who repeatedly threatens legal action over bad attribution strings without first offering a 30-day grace period.\nFlickr\u0026rsquo;s done more than that, actually. For one thing, they ditched Pixsy, severing their relationship with the company (Pixsy still lists them on its \u0026ldquo;partner\u0026rdquo; page). They also created the Flickr Foundation, a nonprofit devoted to providing long-term, responsible stewardship for their CC and public domain image respositories:\nhttps://www.flickr.org/\nvia Flickr to copyleft trolls: drop dead とも書かれている。 Flickr Foundation については私も以前に紹介したので参考にどうぞ。\nThe Flickr Foundation 100年の計 あとは Cory Doctorow さん自身が脅迫を受けた（？）話とか書かれていてなかなかに面白いので，ぜひ件の記事をご覧あれ。\nCory Doctorow さんといえば\nTiktok\u0026rsquo;s enshittification （日本語訳） という記事があって，その冒頭でいきなり\nHere is how platforms die: first, they are good to their users; then they abuse their users to make things better for their business customers; finally, they abuse those business customers to claw back all the value for themselves. Then, they die. via Tiktok\u0026#39;s enshittification プラットフォームはこのように滅びていく。まず、ユーザにとって良き存在になる。次に、ビジネス顧客にとって良き存在になるために、ユーザを虐げる。最後に、ビジネス顧客を虐げて、すべての価値を自分たちに向ける。そうして死んでいく。 メタクソ化するTiktokより とか書かれていて，あまりの納得感に思わず笑ってしまったのだが，「ビジネス顧客にとって良き存在になるために、ユーザを虐げる」をプラットフォームの第2フェーズとするなら， Flickr はこのフェーズへの移行をどうにか踏み留まっている状況か。 末永く踏み留まっていただきたいものである。\nまぁ，なんちうか「文化の発展に寄与する」ってのは，こういう活動を指すんだよね，本来は！ どこぞの文化庁やら文科省やら，あるいは某 Twitter とかに於いては，よくよく考えていただきたい。\n参考文献 著作権は文化を発展させるのか: 人権と文化コモンズ 山田 奨治 (著) 人文書院 2021-07-29 (Release 2021-07-29) Kindle版 B099RTG3J7 (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 著作権を「ユーザーの人権」という観点から捉え直す。その後 文化→コモンズ→文化コモンズ と進み，本当の意味で「文化の発展に寄与する」とはどういうことか考察していく。 reviewed by Spiegel on 2022-10-23 (powered by PA-APIv5)\nCC licences は厳密には copyleft ではないので「「コピーレフト・トロール」という言葉は問題があるよね（超意訳）」と yomoyomo さんも書いておられたが，すっかり定着してしまった感がある。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    },
    {
      "title": "復活の自転車",
      "section": "remark",
      "description": "暖かくなってきたので，そろそろ自転車に乗りたい",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/remark/2023/04/a-revival-of-bike/",
      "published": "2023-04-04T12:03:42+00:00",
      "update": "2023-04-04T12:03:50+00:00",
      "content": "復活の自転車 暖かくなってきて「そろそろ自転車に乗りたい」と思うようになり，勤務先からは「4月3日から通勤できるようになるんじゃなかったの？」とか言われ（担当医に訊いてからって言った筈なんだけどなぁ），とりあえず先日，病院の桜並木を見物するついでに担当医に訊いてきた（ウソ。通院のついでに花見してきた）。\n病院の桜並木 | Flickr したら「いいですよ」とあっさり肯定される。 自転車通勤も OK をいただく。 まぁ，検査結果も順調みたいだし。 ちょっとした怪我や鼻血で「血が止まんねー」というのもなくなったし。\nというわけで，上司と相談して本当に4月3日から自転車通勤が復活した。 これに先立ち，前日に自転車の整備を兼ねて30分ほど近所を走り回ったのだが，同じコースでも徒歩（散歩）より心拍数が安定してるのな。 特に上り坂で心拍数が跳ね上がるのが抑えられているのが素晴らしい。 やっぱ自転車のもんよねぇ。\n残念ながら自転車通勤中は運動にカウントされないみたいなので（徒歩通勤ならウォーキングにカウントされるのに），しばらくはフィットネスバイクも継続することになりそう。\nトレーニング用ベルト買うた ところで YouTube 見てたら\nサイクリストの為の腹圧講座 - YouTube というのを見かけて「なるほど，腹圧ってこうやってコントロールすればいいのか」と納得した。 そういやウェイトリフティングの人ってベルト巻いてやるよな。\nとはいえ，うちに余ってるベルトなんかないんだよ（ゴロゴロあるか，そんなもん）。 で，それ用に買うならトレーニング用のを買っちゃえ！ というわけで\u0026hellip;\nトレーニングベルト パワーベルト 【パーソナルトレーナーユウジ推奨】 筋トレ ベルト 腰 リフティングベルト NonModo (M) Non Modo B08LCYBN75 (ASIN), 4573591740021 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 腹圧コントロール用に購入。なんか「Amazon おすすめ」とか表記じてあったので（笑） 値段も手頃。\nreviewed by Spiegel on 2023-04-04 (powered by PA-APIv5)\n買っちゃった \u0026#x1f49b;\nいいわ，これ。 まず，意識しなくても自然と背筋が伸びるので猫背対策にもなる（笑） ほんで本当に腹圧がかけやすい。 腹圧を意識しながらフィットネスバイクを漕ぐのは，なかなかいい感じである。\nフィットネスバイクについてはバイクの負荷を上げるかケイデンスを上げるかで悩んでたのだが，しばらくは腹圧（というか体幹）コントロールの練習ということで，負荷は変えずに継続しよう。 しんどいのを我慢してやるのは（心臓リハビリ的に）本末転倒だしね。\nしかし\u0026hellip; スポーツグッズにお金をかける性格じゃなかった筈なのになぁ。 まぁ，遊びの延長ってことで。 リハビリは楽しくやらないとね！\nブックマーク 心拍数を監視する 心臓リハビリ＠がんばらない 参考 復活のイデオン たいらいさお (メインアーティスト) SUNRISE Music Label 2009-08-26 (Release 2020-11-05) MP3 ダウンロード B08M23DNWH (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 「伝説巨神イデオン」サントラに収録。「復活のイデオン」は名曲だと思う。\nreviewed by Spiegel on 2023-04-04 (powered by PA-APIv5)\n"
    },
    {
      "title": "2023-04-02 のブックマーク",
      "section": "bookmarks",
      "description": "「IPAがセキュリティ情報の収集ツール「mjcheck4」を公開」他",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/bookmarks/2023/04/02-bookmarks/",
      "published": "2023-04-02T08:49:01+00:00",
      "update": "2023-04-02T08:49:53+00:00",
      "content": "リリース情報 Release v3.23.0 · go-task/task · GitHub Announcing Rust 1.68.2 | Rust Blog Release 1.38.3 · tailscale/tailscale · GitHub 「Thunderbird 102.9.1」が公開 ～3件の不具合と1件の脆弱性を修正 - 窓の杜 Release March 2023 · microsoft/vscode · GitHub アクセシビリティの改善を進めた「Visual Studio Code」2023年3月アップデート（v1.77） - 窓の杜 Release v0.76.0 · anchore/syft · GitHub Release v0.8.0 · koki-develop/gat · GitHub LibreOffice 7.5.2 Community available for download - The Document Foundation Blog 「LibreOffice 7.5.2 Community」が公開 ～フリーのオフィス統合環境の最新版 - 窓の杜 Release v0.8.5 · nyaosorg/go-readline-ny · GitHub セキュリティ＆プライバシー関連 「GitHub」のRSA SSH秘密鍵が漏洩、公開リポジトリに短期間露出 - 窓の杜 未成年者のソーシャルメディア利用に年齢認証や「保護者の許可」を必須としてはならない | p2ptk[.]org なぜウェブサイトに年齢認証を義務づけるべきではないのか | p2ptk[.]org Security Vulnerabilities in Snipping Tools - Schneier on Security Windows 11 Snipping Tool privacy bug exposes cropped image content Google Pixel flaw allowed recovery of redacted, cropped images 「nginx」の最新版v1.23.4が公開、「TLS 1.3」をデフォルト有効化 - 窓の杜 Interop: One Protocol to Rule Them All? | Light Blue Touchpaper The Security Vulnerabilities of Message Interoperability - Schneier on Security 我々は「Tiktok（による監視）」を禁止すべきだ | p2ptk[.]org IPAがセキュリティ情報の収集ツール「mjcheck4」を公開 ～Adobe AIR製の旧版は廃止 - 窓の杜 : SBOM をインポートできるらしい NVIDIA製GPUドライバーに17件の脆弱性 ～最新「GeForce」ドライバーへの更新を - 窓の杜 家庭向けルーター不正利用を受けた警視庁の注意喚起についてまとめてみた - piyolog 知財関連 インターネットアーカイブが電子書籍の著作権を巡る大手出版社との著作権訴訟の一審で敗訴 - GIGAZINE Pluralistic: Flickr to copyleft trolls: drop dead (01 Apr 2023) – Pluralistic: Daily links from Cory Doctorow Microsoft 製品（Azure や Windows 等） に関する話題 「Microsoft Teams」のミーティングにアバターが導入へ ～パブリックプレビューを開始 - 窓の杜 Microsoft、「Teams」のWiki機能を2024年1月に廃止 - 窓の杜 Go 言語関連 ChatGPTをターミナルから使うコマンドラインツール(CLI)を作った GitHub - hymkor/go-dutf: The Implementation of DUTF encoder/decoder by the programming language Go : DUTF という Unicode の文字エンコーディングがあるらしい DUTF, a Dynamic Unicode Transformation Format connect-goでgRPCの通信方式4種類を網羅！テスト付き実装ガイド Goのローカルパッケージのインポートについて : よい記事 Java 言語関連 Java Security Managerを有効にしてSpring Bootを起動する - Qiita 天文関連 ミニ企画展　「松江市立天文台History」 | 来待ストーン公式サイト（島根県松江市宍道町） Hubble Finds Saturn\u0026rsquo;s Rings Heating Its Atmosphere 太陽フレアを監視せよ！ | 国立天文台(NAOJ) Generative AI MIT Tech Review: 大規模言語モデルのバイアス問題に「自己修正」の可能性 「ChatGPT」がプラグインに対応、ネットの最新情報を利用可能に - ZDNET Japan 虚構新聞、記事が現実になってしまい謝罪　2016年の「虚構ニュース自動作成ソフト」がAIの進歩で実現（1/2 ページ） - ねとらぼ 大規模言語モデルの驚異と脅威 - Speaker Deck 「企業の機密データをChatGPTに勝手に入力したことがある」という社会人が大量発生しておりセキュリティ上の懸念が高まっているとサイバーセキュリティ企業が指摘 - GIGAZINE ChatGPTの利用を社内で許可すべき？　懸念される情報漏えいリスクとは：事例で学ぶAIガバナンス（1/4 ページ） - ITmedia NEWS 「GPT-4」採用のセキュリティ製品、「Microsoft Security Copilot」が登場 - ZDNET Japan : うーん\u0026hellip; 「AIの開発を直ちに停止せよ」公開書簡が見逃してしまっているAIの現実的なリスク - YAMDAS現更新履歴 その他 オープンソースのクラウドネイティブなFaaS「OpenFunction」がコンテナに加えてWebAssemblyをサポート。ランタイムにWasmEdgeを統合 － Publickey OpenSSL 1.1.1 End of Life - OpenSSL Blog 「OpenSSL 1.1.1」のサポートまで6カ月を切る ～「OpenSSL 3.0/3.1」への移行を - 窓の杜 お金の貧困と時間の貧困：貧乏人ほど「時間税」を支払わされる | p2ptk[.]org 「GitHub Actions extension for VS Code」パブリックベータ公開。VSCodeからワークフローの実行と監視、管理が可能に － Publickey WebAssemblyでサーバレスアプリケーションを開発するフレームワーク「Spin」がバージョン1.0に到達 － Publickey メタクソ化するTiktok：プラットフォームが生まれ、成長し、支配し、滅びるまで | p2ptk[.]org 「実は査読なんかなくてもなんとかなるんじゃないか」説 | p2ptk[.]org シン・仮面ライダー - YAMDAS現更新履歴 これからはビジネスにも動画が必須に！ 自分で作る羽目になった人に捧ぐ「DaVinci Resolve」解説 - 働く人のための「DaVinci Resolve」 - 窓の杜 Twitterが新しいAPIアクセスレベルを発表 ～ほぼ何もできない無償の「Free」を提供 - 窓の杜 組み込みシステムの開発をGitHubでスピードアップ - GitHubブログ Twitter alternative T2 launches new verification program, hires Discord engineering head as CTO | TechCrunch "
    },
    {
      "title": "OpenAI API を使って GPT と遊ぶ gpt-cli をリリースした。",
      "section": "release",
      "description": "先日書いたとおり，ちょっと真面目に ChatGPT で遊んでみることにした。",
      "author": "Spiegel",
      "license": "http://creativecommons.org/licenses/by-sa/4.0/",
      "url": "https://text.baldanders.info/release/2023/03/released-gpt-cli/",
      "published": "2023-03-28T11:49:13+00:00",
      "update": "2023-03-28T11:55:26+00:00",
      "content": "OpenAI API で遊びたい 先日書いたとおり，ちょっと真面目に ChatGPT で遊んでみることにした。 んで，とりあえず Web ブラウザでチャットは何かと辛いので，コマンドライン・ツールで近い機能が実装できないかなぁ，と物色してみたら\nsashabaranov/go-openai: OpenAI ChatGPT, GPT-3, GPT-4, DALL·E, Whisper API wrapper for Go というパッケージを使うのがよさげである。\nというわけで，このパッケージを用いた CLI ツールを作ってみた。\ngoark/gpt-cli: CLI tool for GPT with OpenAI API ぶっちゃけ，この手のツールはみんな思いつくようで， Go 製のものだけでもそこそこ見かける。 でも，まぁ，こういうのは実際にコードを書いて動かしてみないと理解できなかったりするからねぇ。 N番煎じはご容赦を。\n拙作の場合はこんな感じ。\n$ gpt-cli -h CLI tool for GPT with OpenAI API. Usage: gpt-cli [flags] gpt-cli [command] Available Commands: chat Chat with GPT-x help Help about any command version Print the version number Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug -h, --help help for gpt-cli --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) Use \u0026#34;gpt-cli [command] --help\u0026#34; for more information about a command. 今のところはチャット機能しかないが， sashabaranov/go-openai を使えば，いま話題沸騰（笑）の GPT-4 や DALL·E, Whisper あたりもハンドリングできるみたいなので，そのうち挑戦してみたいと思っている。 ちなみに GPT-4 は申請中だが，しばらく順番は回ってこないだろうな。\nOpenAI API Key を取得する 拙作を動かす場合は OpenAI API Key を取得する必要がある。 取得方法は適当にググってください。 OpenAI のアカウントを取ると，最初は無料だけど，無料枠を使い切ると有料（従量制）になるのでご注意を。\nで， OpenAI API Key はコマンドラインで指定することもできるけど，設定ファイルに記述しておくことができる。 規定ファイルは $XDG_CONFIG_HOME/gpt-cli/config.yaml。 中身は YAML 形式で，こんな感じに記述できる。\napi-key: your_api_key_string Linux の場合は， $XDG_CONFIG_HOME は $HOME/.config/ ディレクトリに割り当てられていることが多い。 Windows だと %AppData% フォルダ， macOS (Darwin) だと $HOME/Library/Application/ フォルダになる。 コマンドラインの --config オプションで設定ファイルを指定することもできる。\nGPT とチャットする $ gpt-cli chat -h Chat with GPT-x, input from standard input. Usage: gpt-cli chat [flags] gpt-cli chat [command] Aliases: chat, c Available Commands: history Print chat history interactive Interactive mode Flags: -a, --attach-file strings Path of attach files (text file only) -c, --clipboard Input message from clipboard -h, --help help for chat -m, --message string Chat message -p, --prepare-file string Path of prepare file (JSON format) -f, --save-file string Path of save file (JSON format) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) Use \u0026#34;gpt-cli chat [command] --help\u0026#34; for more information about a command. いちばん簡単な使い方は以下の通り（OpenAI API Key は設定ファイルに記述済みとする）。\n$ gpt-cli c -m \u0026#34;hello\u0026#34; Hello! How can I help you today? save to /home/username/.cache/gpt-cli/chat.2133582955.json OpenAI API を使って “hello” と投げると “Hello! How can I help you today?” と返ってきた。 最後に，やり取りの記録を $XDG_CACHE_HOME/gpt-cli/chat.*.json ファイル1 に格納して終了（保存先は --save-file または -f オプションで指定できる）。 そして，次に起動するときは --prepare-file または -p オプションで記録を格納したファイルを指定すれば続きから始められる。\n--prepare-file オプションを使うことで初期状態をある程度いじることができる。 --prepare-file オプションで指定するファイルは JSON 形式で，たとえば\n{ \u0026#34;model\u0026#34;: \u0026#34;gpt-3.5-turbo-0301\u0026#34;, \u0026#34;max_tokens\u0026#34;: 256, \u0026#34;temperature\u0026#34;: 0.7, \u0026#34;messages\u0026#34;: [ { \u0026#34;role\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;これからプログラムのコードを渡すので，質問に答えてください。\u0026#34; } ] } などと記述しておいて，これを --prepare-file オプションで読み込ませて初期状態にできる。\nチャットにファイルを添付する --attach-file または -a オプションを使ってファイルを添付して評価してもらうこともできる。 こんな感じ。\n$ cat sample/hello.go package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, world.\u0026#34;) } $ gpt-cli c -a sample/hello.go -m \u0026#34;Summarize the source code below.\u0026#34; The source code is a basic program in the Go programming language that prints the text \u0026#34;Hello, world.\u0026#34; to the console. It includes the standard library package \u0026#34;fmt\u0026#34; and a main function that utilizes the \u0026#34;Println\u0026#34; function from the \u0026#34;fmt\u0026#34; package. save to /home/username/.cache/gpt-cli/chat.3658387869.json --attach-file オプションを複数使って複数のファイルを指定することが可能。 また *.go みたいなワイルドカード指定もできる（bash 上などではファイル名が勝手に展開されてしまうので \u0026quot;*.go\u0026quot; のように引用符で囲むとよい）。\nクリップボードの内容をメッセージとして送信する --clipboard または -c オプションを指定することでクリップボードの内容をメッセージとして送信できる。\nたとえば上述の sample/hello.go の内容をクリップボードにコピーした上で\n$ gpt-cli c -c -m \u0026#34;次のコードを要約してください。\u0026#34; このコードは、mainパッケージをインポートし、\u0026#34;Hello, world.\u0026#34;という文字列を出力するプログラムです。 save to /home/username/.cache/gpt-cli/chat.2878035472.json などとできる。 送信の順番は --message オプションで指定した文字列 → クリップボードの内容 → 添付ファイル の順に送信される。\n対話モード $ gpt-cli chat interactive -h Interactive mode in chat. Usage: gpt-cli chat interactive [flags] Aliases: interactive, i Flags: -h, --help help for interactive -p, --profile string Path of profile file (JSON format) -f, --save-file string Path of save file (JSON format) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) こんな感じに使える。\n$ gpt-cli c i Input \u0026#39;q\u0026#39; or \u0026#39;quit\u0026#39; to stop Chat\u0026gt; こんにちは こんにちは！私はAIのアシスタントです。何かお手伝いできることがありますか？ Chat\u0026gt; 科学雑誌の日経サイエンスにChatGPTの特集が載るそうです。どんな内容になるか予想してみましょう。 ChatGPTとは、人工知能による自然言語処理を利用した対話型のチャットボットです。日経サイエンスがChatGPTに特集を組むことから、以下のような予想が考えられます。 1. ChatGPTの機能や特徴の紹介 ChatGPTの性能、動作原理などの詳しい解説や、どのような機能があるのか、どのような場面で活躍するのかなどが紹介される可能性があります。 2. ChatGPTの応用例の紹介 ChatGPTが活用される応用例として、カスタマーサポート、医療支援、人工知能アシスタントなどがあります。特集では、ChatGPTがどのようにこれらの分野で活躍しているのか、具体例を交えて解説されるかもしれません。 3. ChatGPTの進化と今後の展望について ChatGPTは、自然言語処理分野での革新的な技術であり、今後、ますます進化していくことが期待されています。特集では、今後どのような改良がされ、また、普及の度合いがどこまで広がるのか、その展望についても取り上げられるかもしれません。 Chat\u0026gt; ありがとうございます。雑誌を読むのが楽しみです どういたしまして。日経サイエンスは、科学技術に関する話題や最新の研究成果などが掲載され、とても興味深く読める雑誌ですね。ChatGPTに特集が組まれるということで、ますます注目が集まりそうですね。楽しみにしていてください。 Chat\u0026gt; q save to /home/username/.cache/gpt-cli/chat.2788390222.json 入力は1行のみ可（複数行編集の実装は保留中）。 ファイルの添付とかもできない。 本当に文章で対話するだけ（笑）\nチャット履歴を表示 $ gpt-cli chat history -h Print chat history. Usage: gpt-cli chat history [flags] Aliases: history, hist, h Flags: -a, --assistant-name string Assistant name (display name) -h, --help help for history -f, --history-file string Path of history file (JSON format) -u, --user-name string User name (display name) Global Flags: --api-key string OpenAI API key --config string Config file (default /home/username/.config/gpt-cli/config.yaml) --debug for debug --log-dir string Directory for log files (default \u0026#34;/home/username/.cache/gpt-cli\u0026#34;) --log-level string Log level [nop|error|warn|info|debug|trace] (default \u0026#34;nop\u0026#34;) 最後に出力される記録ファイルを読み込んで markdown 風のテキストに整形して出力できる。 オマケ機能。 こんな感じ。\n$ gpt-cli c h -u Spiegel -a ChatGPT -f /home/username/.cache/gpt-cli/chat.2133582955.json # Chat with GPT - `model`: gpt-3.5-turbo-0301 ## Spiegel hello ## ChatGPT Hello! How can I help you today? ChatGPT とのやりとりを Gist に上げたりしてるんだけど，手動で整形するのが面倒くさくて（笑）\nよっしゃ，今日はこれぐらいにしといたるわ というわけで，今回はこのへんで。 しばらく遊んでみて，必要なら機能を足すかも知れん。 こうやって，ツールがカオスになっていくんだねぇ（笑）\nブックマーク ChatGPTに回答の参考文献を提示させるには - ZDNET Japan ChatGPTのプロンプトをLispで書く ChatGPTで開発効率アップ！askiを使ったCLIコードレビュー＆バグ特定 - Qiita TOP 3 open-source AI to code like a PRO 🧠 🤖 - DEV Community go-readline-ny でマルチライン編集 - 標準愚痴出力 参考図書 日経サイエンス2023年5月号（特集：対話するAI　ChatGPT） 日経サイエンス編集部 (編集) 日経サイエンス 2023-03-25 (Release 2023-03-25) 雑誌 B0BXQ2HMQ5 (ASIN), 4910071150534 (EAN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 特集記事が「話す AI 描く AI」ということで，いわゆる Generative AI に関する内容。大規模言語モデル（LLM）の解説も載っている。圏論の記事もあるよ。\nreviewed by Spiegel on 2023-03-28 (powered by PA-APIv5)\nプログラミング言語Go アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著) 丸善出版 2016-06-20 (Release 2021-07-13) Kindle版 B099928SJD (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想はこちら。\nreviewed by Spiegel on 2021-05-22 (powered by PA-APIv5)\nデベロッパーゴースーパーゴラン Tシャツ Geek Go Super Golang Tees ウェア\u0026amp;シューズ B09C2XBC2F (ASIN) 評価\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; ついカッとなってポチった。反省はしない\nreviewed by Spiegel on 2022-04-10 (powered by PA-APIv5)\nLinux では $XDG_CACHE_HOME は $HOME/.cache/ ディレクトリに割り当てられていることが多い。 Windows だと %LocalAppData% フォルダ， macOS (Darwin) だと $HOME/Library/Caches/ フォルダになる。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"
    }
  ]
}
