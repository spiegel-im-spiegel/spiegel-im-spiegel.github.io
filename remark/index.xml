<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>しっぽのさきっちょ — text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/remark/index.xml" />
	<id>tag:text.Baldanders.info,2017-11-24:/hugo</id>
	<updated>2017-11-24T12:07:09+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.31</generator>

	
	<entry>
		<title>「自動販売機の気持ちになって考える」 — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/do-you-understand-what-a-computer-is/" />
		<id>tag:text.Baldanders.info,2017-11-24:/remark/2017/11/do-you-understand-what-a-computer-is/</id>
		<published>2017-11-24T12:07:09+09:00</published>
		<updated>2017-11-24T12:07:09+09:00</updated>
		<summary>機械は人間のようには考えない。「機械（＝コンピュータ）が考える」というのはどういうことなのか。これを過不足なく説明するのは意外に難しい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://twitter.com/hyuki/status/933850105614032897&#34;&gt;結城浩さんの tweet&lt;/a&gt; で&lt;/p&gt;

&lt;div&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;プログラミングの課題で「自動販売機のシミュレータを作れ」というのはいい問題ではないかとよく思う。易しいものから、難しいものまで、仕様しだいでいろいろできる。GUIの有無、商品の種類、在庫管理、金種管理、各種アラート…&lt;/p&gt;&amp;mdash; 結城浩 (@hyuki) &lt;a href=&#34;https://twitter.com/hyuki/status/933850105614032897?ref_src=twsrc%5Etfw&#34;&gt;2017年11月24日&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;

&lt;p&gt;というのがあって，続きの tweets から見ても（プログラミングというよりは）システム設計（もしくは base design）のことを指しているのは明らかなんだけど，私が連想したのは梅津信幸さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774116009/baldandersinf-22/&#34;&gt;あなたはコンピュータを理解していますか？&lt;/a&gt;』だった。&lt;/p&gt;

&lt;p&gt;この本は&lt;a href=&#34;http://www.baldanders.info/spiegel/log/nikki-s/200211.html#1706&#34;&gt;2002年に出版&lt;/a&gt;されていて，これ自体は恐らく絶版なのだが，&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;2007年にリニュール本が出ている&lt;/a&gt;ようだ。
さっそく発注してしまった（笑）&lt;/p&gt;

&lt;p&gt;この本で一番印象に残っていたのが第3章の「自動販売機はコンピュータ理解の始まり」である。
この章では&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;客がお金を入れる&lt;/li&gt;
&lt;li&gt;客が商品（ジュース1本）を注文する&lt;/li&gt;
&lt;li&gt;自動販売機が商品を出す&lt;/li&gt;
&lt;li&gt;自動販売機がお釣りを返す&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という流れを人間がシミュレーションしていて，特に「機械がお金を計算する」方法について図解で説明されているのが秀逸だった。
つまり「自動販売機の気持ちになって考える」わけだ。&lt;/p&gt;

&lt;p&gt;機械は人間のようには考えない。
「機械（＝コンピュータ）が考える」というのはどういうことなのか。
これを過不足なく説明するのは意外に難しい。
用語を並べ立てて煙に巻くか，頭の悪い擬人化でお茶を濁すのがせいぜいだろう。
私もちゃんと説明できるか自信がない。
でも，それを考えるのがプログラミングの最初の1フィートである。&lt;/p&gt;

&lt;p&gt;どうせ学校教育でプログラミングを教えるのなら，「自動販売機の気持ちになって考える」からやっていただきたいものだ。
「プログラミング言語」なんか必要ないのである。
機械が人間の書いたプログラムを「理解」して実行する，というのは大いなる誤解である。
たとえば，そうした誤解が「&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/the-myth-of-the-singularity/&#34; title=&#34;『シンギュラリティの神話』を読む&#34;&gt;シンギュラリティ神話&lt;/a&gt;」へ向かわせるのなら「プログラミング言語」を習うとかむしろ有害かもしれない。&lt;/p&gt;

&lt;p&gt;学生の時に読んだ「日経サイエンス」の記事にティンカートイで3目並べを解くプログラムを組む話があったが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ttc1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ttc1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，どんなにコンピュータ技術が発達しても（量子コンピュータが登場しても）スタートラインは常に「ここ」なので，それを忘れないでほしいのですよ。&lt;/p&gt;

&lt;p&gt;まぁ，本気で AI が発達してノイマン型コンピュータが廃れたら説明の根本が変わるだろうけど，それは当分先の話（多分）。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51W3fP3Q%2BtL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797339497/baldandersinf-22/&#34;&gt;あなたはコンピュータを理解していますか? 10年後、20年後まで必ず役立つ根っこの部分がきっちりわかる！ (サイエンス･アイ新書)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;梅津 信幸 &lt;/dd&gt;&lt;dd&gt;ソフトバンク クリエイティブ 2007-03-16&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797354690/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797354690.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;あなたはネットワークを理解していますか? インターネット時代に欠かせない根っこの知識が確実に身につく! (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4087474283/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4087474283.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;痛快!コンピュータ学 (集英社文庫)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774124222/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774124222.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピュータのしくみを理解するための10章&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797348747/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797348747.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;カラー図解でわかる通信のしくみ あなたはインターネット&amp;モバイル通信をどこまで理解していますか? (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797370939/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797370939.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;図解でかんたんアルゴリズム 情報処理のかなめとなる考え方が手に取るようにわかる! (サイエンス・アイ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822281655/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822281655.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピュータはなぜ動くのか～知っておきたいハードウエア＆ソフトウエアの基礎知識～&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797384298/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797384298.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;コンピューター&amp;テクノロジー解体新書&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822282708/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822282708.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報はなぜビットなのか 知っておきたいコンピュータと情報処理の基礎知識&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4816352481/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4816352481.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;史上最強カラー図解 プロが教えるパソコンのすべてがわかる本&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4794220588/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4794220588.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;文庫 思考する機械コンピュータ (草思社文庫)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;2002年に技術評論社から出た同名タイトルのリニューアルらしい。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-11-24&#34;&gt;2017-11-24&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ttc1&#34;&gt;この話「三目並べをするティンカートイ・コンピュータ」は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4532511135/baldandersinf-22/&#34;&gt;別冊日経サイエンス コンピューターレクリエーション 4 遊びの展開&lt;/a&gt;』に収録されていたのだが，絶版本とは言え，どえらい値段がついてるな（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ttc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>OpenPGP 鍵管理に関する考察 — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/openpgp-key-management/" />
		<id>tag:text.Baldanders.info,2017-11-21:/remark/2017/11/openpgp-key-management/</id>
		<published>2017-11-21T22:34:52+09:00</published>
		<updated>2017-11-24T10:55:23+09:00</updated>
		<summary>OpenPGP 鍵の管理について考えてみるテスト。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;たまたま以下の記事を見かけたのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/moutend/items/5c22d6e57a74845578f6&#34;&gt;gpg (GNU Privacy Guard)の使い方 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このやり方も良さそうだけど，もう少し簡単に運用できないか考えてみる。
なお &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理は目的別にアドホック（ad hoc）な運用も可能なので「これ！」という正解はない。
自分にあったやり方を考えるのも面白いと思う。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の信用モデル&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル&lt;/h2&gt;

&lt;p&gt;鍵の管理について考える前に &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデルについておさらいしておこう。&lt;/p&gt;

&lt;p&gt;最初の登場人物は Alice と Bob。
2人はそれぞれ &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵を持っていて，これを使って秘密のやり取りをしようと考えている。
持っている鍵が信用できることを証明するために，お互い相手の公開鍵に自身の鍵で電子署名を施した。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Bob-- Digital Sign --&gt;Alice
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;鍵に施されている電子署名を確認することでコンテンツに対する暗号文や電子署名が正しい鍵で行われていることが証明できるわけだ。
これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の基本。
公開鍵への電子署名を使って peer-to-peer で信用関係を結ぶ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ksp1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ksp1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ここで3人目の人物 Chris に登場してもらおう。
Bob と Chris は面識があり既にお互いの公開鍵で電子署名を交わしている。
しかし Alice と Chris は面識がなく電子署名を交わす機会がないとする。
Alice から見て Chris の鍵は信用できるだろうか？&lt;/p&gt;

&lt;p&gt;（念のために言うと，ここで言う「信用」は「あなたは人として信用できる」の信用ではなく「この鍵は正しく本人のものであると信用できる」の信用である）&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. trust? .-&gt;Chris
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;まず Alice から見て直接電子署名を交わした Bob の鍵が信用できるのは明らかである。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
 graph LR
   Alice[&#34;Alice&#39;s Public Key&#34;]
   Bob[&#34;Bob&#39;s Public Key&#34;]
   Chris[&#34;Chris&#39;s Public Key&#34;]

   Alice-- Digital Sign --&gt;Bob
   Alice-. trust .-&gt;Bob
   Bob-- Digital Sign --&gt;Alice
   Bob-- Digital Sign --&gt;Chris
   Chris-- Digital Sign --&gt;Bob

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;Alice は Chris の公開鍵に信用できる Bob の公開鍵による電子署名を見つけたため， Bob の公開鍵と同じく Chris の公開鍵も有効であると見なすことができる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  Alice[&#34;Alice&#39;s Public Key&#34;]
  Bob[&#34;Bob&#39;s Public Key&#34;]
  Chris[&#34;Chris&#39;s Public Key&#34;]

  Alice-- Digital Sign --&gt;Bob
  Alice-. validate! .-&gt;Chris
  Alice-. trust .-&gt;Bob
  Bob-- Digital Sign --&gt;Alice
  Bob-- Digital Sign --&gt;Chris
  Chris-- Digital Sign --&gt;Bob
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;これが &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な信用モデル “web of trust” の基本的な考え方である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tm1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tm1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
このことから &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理ににおいて「信用できる鍵」の条件は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;多くの電子署名（とできれば信用）が集まっていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;だと分かる。
更にこのことから派生的に&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;同じ鍵が永続的に使われ続けていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;も「信用できる鍵」の条件となる。
何故なら，鍵が頻繁に変わるとその度に電子署名をやり直すことになり，鍵に署名（＝信用）が集まりにくくなるからである。&lt;/p&gt;

&lt;h2 id=&#34;openpgp-の鍵管理&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵管理&lt;/h2&gt;

&lt;p&gt;以上を踏まえて &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵の管理について考えてみよう。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵で運用する場合&#34;&gt;ひとつの鍵で運用する場合&lt;/h3&gt;

&lt;p&gt;一番簡単なケースで，ひとつの &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵で全てをまかなう場合を考える。
たとえば，ふだん暗号化ツールなんて全然使わないけど git commit に電子署名するためだけに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; を使いたい，など。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の代表的な実装である &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の最新バージョンでは，以下に示すように，鍵の作成処理が（昔と比べて）大幅に簡略化できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵02C94DC57527A786を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d\9416E477EBA825CD1694573102C94DC57527A786.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--batch&lt;/code&gt; オプション&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gk1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:gk1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;（または &lt;code&gt;--pinentry-mode&lt;/code&gt; オプションに &lt;code&gt;loopback&lt;/code&gt; を指定）と &lt;code&gt;--passphrase&lt;/code&gt; オプションを組み合わせて Pinentry によるパスフレーズ入力を回避できる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--quick-generate-key&lt;/code&gt; コマンドの第1引数にユーザID，第2引数にアルゴリズム，第3引数に使用目的，第4引数に有効期限を指定する

&lt;ul&gt;
&lt;li&gt;アルゴリズムに &lt;code&gt;default&lt;/code&gt; を指定するか指定しない場合は既定のアルゴリズム（RSA/2048ビット）で鍵を作成する&lt;/li&gt;
&lt;li&gt;使用目的には主鍵&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:k1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:k1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; の種類を指定する。通常は &lt;code&gt;default&lt;/code&gt; のまま（署名と証明）でよい（指定しなければ &lt;code&gt;default&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;有効期限には期間（1週間なら &lt;code&gt;7d&lt;/code&gt; または &lt;code&gt;1w&lt;/code&gt;，1年なら &lt;code&gt;12m&lt;/code&gt; または &lt;code&gt;1y&lt;/code&gt; など）を指定する。 &lt;code&gt;0&lt;/code&gt; を指定すると無期限になる（指定しないと有効期限が当日になる）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生成された鍵の状態は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;作成した鍵の公開鍵を配布するには&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice &amp;gt; alice-key.asc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として &lt;code&gt;alice-key.asc&lt;/code&gt; を直接配布するか&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --keyserver keys.gnupg.net --send-key alice&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として鍵サーバ（ここでは &lt;a href=&#34;http://keys.gnupg.net/&#34;&gt;&lt;code&gt;keys.gnupg.net&lt;/code&gt;&lt;/a&gt;）にアップロードすればいい。&lt;/p&gt;

&lt;p&gt;注意する点としてはパスフレーズと失効証明書を紛失・漏洩しないよう管理することであろう。
できれば失効証明書は普段使う PC や携帯端末とは別に管理しておくのが望ましい。
ちなみに &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; ではパスフレーズは何処にも保存されないので，パスフレーズを忘れてしまうと全くリカバリできなくなる（だからといってパスフレーズを設定しないというのは通常運用ではあり得ないが）。&lt;/p&gt;

&lt;p&gt;ノートPCや携帯端末には常に紛失・盗難のリスクが付きまとうが，予防に注力しすぎて現実的でない対策を執るよりも，これはもう「起こり得ること」として「事後」がスムーズに行われるようバックアップ等の準備しておくほうが賢明である。&lt;/p&gt;

&lt;h3 id=&#34;ひとつの鍵に複数のユーザidを付与する場合&#34;&gt;ひとつの鍵に複数のユーザIDを付与する場合&lt;/h3&gt;

&lt;p&gt;ユーザIDというのは鍵の名前 “&lt;code&gt;Alice &amp;lt;alice@examle.com&amp;gt;&lt;/code&gt;” の部分である。&lt;/p&gt;

&lt;p&gt;たとえば，以下の鍵があったとき&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これに新しいユーザID “&lt;code&gt;Alice &amp;lt;alice@examle2.com&amp;gt;&lt;/code&gt;” を付加するには &lt;code&gt;--quick-add-uid&lt;/code&gt; コマンドを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-add-uid alice &amp;#34;Alice &amp;lt;alice@examle2.com&amp;gt;&amp;#34;
$ gpg --update-trustdb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:updtd1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:updtd1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。
これで新しいユーザIDが付加された。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC]
      B686F36CA9FDC10057EFC5D58D7E04B8CE947112
uid           [  究極  ] Alice &amp;lt;alice@examle2.com&amp;gt;
uid           [  究極  ] Alice &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに，この鍵を &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; にかけると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --export -a alice | pgpdump -u
Old: Public Key Packet(tag 6)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@example.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 05 21
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1
Old: User ID Packet(tag 13)(25 bytes)
        User ID - Alice &amp;lt;alice@examle2.com&amp;gt;
Old: Signature Packet(tag 2)(334 bytes)
        Ver 4 - new
        Sig type - Positive certification of a User ID and Public Key packet(0x13).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:33:28 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to certify other keys
                Flag - This key may be used to sign data
        Hashed Sub: preferred symmetric algorithms(sub 11)(4 bytes)
                Sym alg - AES with 256-bit key(sym 9)
                Sym alg - AES with 192-bit key(sym 8)
                Sym alg - AES with 128-bit key(sym 7)
                Sym alg - Triple-DES(sym 2)
        Hashed Sub: preferred hash algorithms(sub 21)(5 bytes)
                Hash alg - SHA256(hash 8)
                Hash alg - SHA384(hash 9)
                Hash alg - SHA512(hash 10)
                Hash alg - SHA224(hash 11)
                Hash alg - SHA1(hash 2)
        Hashed Sub: preferred compression algorithms(sub 22)(3 bytes)
                Comp alg - ZLIB &amp;lt;RFC1950&amp;gt;(comp 2)
                Comp alg - BZip2(comp 3)
                Comp alg - ZIP &amp;lt;RFC1951&amp;gt;(comp 1)
        Hashed Sub: features(sub 30)(1 bytes)
                Flag - Modification detection (packets 18 and 19)
        Hashed Sub: key server preferences(sub 23)(1 bytes)
                Flag - No-modify
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 7d 5a
        RSA m^d mod n(2048 bits) - ...
                -&amp;gt; PKCS-1
Old: Public Subkey Packet(tag 14)(269 bytes)
        Ver 4 - new
        Public key creation time - Thu Nov 23 06:22:56 UTC 2017
        Pub alg - RSA Encrypt or Sign(pub 1)
        RSA n(2048 bits) - ...
        RSA e(17 bits) - ...
Old: Signature Packet(tag 2)(310 bytes)
        Ver 4 - new
        Sig type - Subkey Binding Signature(0x18).
        Pub alg - RSA Encrypt or Sign(pub 1)
        Hash alg - SHA256(hash 8)
        Hashed Sub: issuer fingerprint(sub 33)(21 bytes)
         v4 -   Fingerprint - b6 86 f3 6c a9 fd c1 00 57 ef c5 d5 8d 7e 04 b8 ce 94 71 12
        Hashed Sub: signature creation time(sub 2)(4 bytes)
                Time - Thu Nov 23 06:22:56 UTC 2017
        Hashed Sub: key flags(sub 27)(1 bytes)
                Flag - This key may be used to encrypt communications
                Flag - This key may be used to encrypt storage
        Sub: issuer key ID(sub 16)(8 bytes)
                Key ID - 0x8D7E04B8CE947112
        Hash left 2 bytes - 3a a7
        RSA m^d mod n(2047 bits) - ...
                -&amp;gt; PKCS-1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ユーザID毎に電子署名（自己署名）が付与されているのがお分かりだろうか。&lt;/p&gt;

&lt;p&gt;ひとつの鍵に複数のユーザIDを付与することに関しては昔から賛否あるのだが，手段が提供されていることは覚えておいて損はないだろう。&lt;/p&gt;

&lt;h3 id=&#34;用途によって鍵を使い分けたい場合&#34;&gt;用途によって鍵を使い分けたい場合&lt;/h3&gt;

&lt;p&gt;たとえば，暗号化メール，リリースファイルの電子署名， git commit 時の電子署名といった用途毎に異なる鍵を使いたいことがある。
その場合でもそれぞれ鍵を生成して運用すればいいのだが，新しい鍵を作る度にそれぞれの鍵とやり取りを行うユーザが毎度電子署名を行うのは相当に煩雑な作業である。&lt;/p&gt;

&lt;p&gt;そこで「ルート鍵」と「運用鍵」の2種類の鍵を作って運用する。
具体的にはルート鍵と各運用鍵との間で電子署名を交わす。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  rt[Root Key]-- Digital Sign --&gt;op1[Operation Key 1]
  op1-- Digital Sign --&gt;rt

  rt-- Digital Sign --&gt;op2[Operation Key 2]
  op2-- Digital Sign --&gt;rt
&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;運用鍵とやり取りするユーザは，各運用鍵ではなく，ルート鍵と署名を交わし信用度を設定することによって各運用鍵の有効性を確認できる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;mermaid&#34;&gt;
graph LR
  usr[User&#39;s Key]
  rt[Root Key]
  op1[Operation Key 1]
  op2[Operation Key 2]

  usr-- Digital Sign --&gt;rt
  usr-. trust .-&gt;rt
  rt-- Digital Sign --&gt;usr

  usr-. validate .-&gt;op1
  rt-- Digital Sign --&gt;op1

  rt-- Digital Sign --&gt;op2
  usr-. validate .-&gt;op2

&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;この方法ならユーザも各運用鍵もルート鍵とのみ信用関係を構築すればいいので柔軟な運用が可能になる。
欠点としてはルート鍵の管理が煩雑になりがちで信用に関する責務も重くなるため，かなり慎重な運用が求められることであろう。&lt;/p&gt;

&lt;h4 id=&#34;alice-のルート鍵と運用鍵&#34;&gt;Alice のルート鍵と運用鍵&lt;/h4&gt;

&lt;p&gt;では実際にやってみよう。&lt;/p&gt;

&lt;p&gt;まず Alice がルート鍵と運用鍵の運用を行うとする。
ルート鍵は電子署名を行うだけの鍵なので，以下のように署名専用鍵として作成する（アルゴリズムは DSA/3072ビット にしてみた）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34; dsa3072 default 0
gpg: *警告*: いくつかのOpenPGPプログラムはこのダイジェスト長のDSA鍵を扱うことができません
gpg: 鍵B965D53DB907EF0Eを究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;もうひとつ。
運用鍵も作っておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --batch --passphrase pass123 --quick-generate-key &amp;#34;Alice (commit) &amp;lt;alice@example.com&amp;gt;&amp;#34; default default 0
gpg: 鍵DFFC3F67BBB3C083を究極的に信用するよう記録しました
gpg: 失効証明書を &amp;#39;C:/Users/spiegel/AppData/Roaming/gnupg/openpgp-revocs.d\A3CEFEEEDA222024F325C403DFFC3F67BBB3C083.rev&amp;#39; に保管しました。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この2つの鍵でお互いに電子署名を交わす（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -u 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E --quick-sign-key A3CEFEEEDA222024F325C403DFFC3F67BBB3C083

sec  rsa2048/DFFC3F67BBB3C083
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: A3CE FEEE DA22 2024 F325  C403 DFFC 3F67 BBB3 C083

     Alice (commit) &amp;lt;alice@example.com&amp;gt;

$ gpg -u A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

sec  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 究極          有効性: 究極
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで Alice の2つの鍵の署名状態はこんな感じになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-sigs alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  究極  ] Alice (root) &amp;lt;alice@example.com&amp;gt;
sig 3        B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig 3        DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;
sig          B965D53DB907EF0E 2017-11-23  Alice (root) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]
sig          DFFC3F67BBB3C083 2017-11-23  Alice (commit) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一方の主鍵に他方の鍵の電子署名が付与されているのが分かるだろうか。&lt;/p&gt;

&lt;h4 id=&#34;bob-鍵で-alice-のルート鍵に電子署名する&#34;&gt;Bob 鍵で Alice のルート鍵に電子署名する&lt;/h4&gt;

&lt;p&gt;今度は Bob の側である。
まずは Bob の公開鍵をこんな感じで作ってみた（作成操作は省略）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys bob
pub   rsa2048 2017-11-23 [SC]
      B4E708652A1E81445B328A3D93F496726CBE8335
uid           [  究極  ] Bob &amp;lt;bob@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この環境に先程の Alice の公開鍵をインポートしてみる。
まずはルート鍵から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import alice-root.asc
gpg: key B965D53DB907EF0E: 鍵がないため1個の署名は検査しません
gpg: 鍵B965D53DB907EF0E: 公開鍵&amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;をインポートしました
gpg:           処理数の合計: 1
gpg:             インポート: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然ながら，この時点では読み込んだルート鍵の有効性は不明である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  不明  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では，ルート鍵に Bob の鍵で署名しよう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lsign1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:lsign1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;（パスフレースの入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --quick-sign-key 3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E

pub  dsa3072/B965D53DB907EF0E
     作成: 2017-11-23  有効期限: 無期限      利用法: SC
     信用: 不明の        有効性: 不明の
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

     Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでルート鍵の有効性は「充分」になった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さらに信用データベースを更新して信用度も設定する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --update-trustdb
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   1  信用: 0-, 0q, 0n, 0m, 0f, 1u
信用度が指定されていません:
pub   dsa3072 2017-11-23 [SC]
      &amp;#34;Alice (root) &amp;lt;alice@example.com&amp;gt;&amp;#34;
  主鍵フィンガープリント: 3F8E FC47 7F9D 4D49 AA6C  308F B965 D53D B907 EF0E

他のユーザの鍵を正しく検証するために、このユーザの信用度を決めてください
(パスポートを見せてもらったり、他から得たフィンガープリントを検査したり、などなど)

  1 = 知らない、または何とも言えない
  2 = 信用し ない
  3 = まぁまぁ信用する
  4 = 充分に信用する
  s = この鍵はとばす
  q = 終了

あなたの決定は? 4
gpg: 深さ: 1  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 1f, 0u
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ここでは「充分に信用する」を選択した。&lt;/p&gt;

&lt;p&gt;次に運用鍵もインポートする（操作は同じなので省略）。
この時点で Alice の公開鍵の状態を見ると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  充分  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性も既に「充分」になっていることが分かると思う。
ちなみにルート鍵の信用度を「まぁまぁ信用する」にすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   dsa3072 2017-11-23 [SC]
      3F8EFC477F9D4D49AA6C308FB965D53DB907EF0E
uid           [  充分  ] Alice (root) &amp;lt;alice@example.com&amp;gt;

pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [まぁまぁ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;運用鍵の有効性が「まぁまぁ」になる。&lt;/p&gt;

&lt;p&gt;独りでこうした運用をやるメリットは殆どないが，プロジェクト・チーム等で一括して鍵管理を行いたい場合は有効な手段だと思う。&lt;/p&gt;

&lt;h2 id=&#34;有効期限について&#34;&gt;有効期限について&lt;/h2&gt;

&lt;p&gt;この記事ではすべての鍵を「無期限」で設定している。
公開鍵の有効期限をどのようにするかは意見が別れるところだと思うが，私個人としては原則として「無期限」にすることをお薦めする。
何故なら &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は永続性と一貫性が重要だからである。&lt;/p&gt;

&lt;p&gt;公開鍵に有効期限を設ける理由としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;期間の決まったプロジェクト内でのみ使用する鍵である&lt;/li&gt;
&lt;li&gt;チーム・メンバの出入りが激しく無期限では却って管理が煩雑になる&lt;/li&gt;
&lt;li&gt;鍵のセキュリティ強度の問題から期限を切って運用したい（たとえば RSA/2048ビット鍵が acceptable なのは2030年までである）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったところだろうか。
これならば，これまで述べたようにルート鍵と運用鍵を分けて，ルート鍵の方で永続性と一貫性を担保するように運用していくのがよいだろう。&lt;/p&gt;

&lt;p&gt;自分の鍵であれば有効期限はいつでも変更できる（変更時にパスフレーズ入力あり）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E]

$ gpg --quick-set-expire A3CEFEEEDA222024F325C403DFFC3F67BBB3C083 2y

$ gpg --list-keys A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
pub   rsa2048 2017-11-23 [SC] [有効期限: 2019-11-23]
      A3CEFEEEDA222024F325C403DFFC3F67BBB3C083
uid           [  究極  ] Alice (commit) &amp;lt;alice@example.com&amp;gt;
sub   rsa2048 2017-11-23 [E] [有効期限: 2019-11-23]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかし，有効期限を随時延長していく運用は鍵のオーナーもそれを使うユーザも手間が増えるだけであまりメリットがない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:own1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:own1&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 鍵は（今のところ）利用するユーザに公開鍵の変更を自動的に通知・配信する仕組みがないので（それとも cron で鍵サーバへアクセスする？），ユーザ側の手間の多い運用では取りこぼしが出る可能性が大きくなる。&lt;/p&gt;

&lt;h2 id=&#34;鍵を失効させる&#34;&gt;鍵を失効させる&lt;/h2&gt;

&lt;p&gt;秘密鍵が漏洩するなどして鍵の失効が必要になった場合には，鍵作成時に作られた失効証明書を使って失効させる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rvk1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:rvk1&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;。
鍵作成時に作られた失効証明書の中身はこんな感じになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd C:/Users/alice/AppData/Roaming/gnupg/openpgp-revocs.d

$ cat 9416E477EBA825CD1694573102C94DC57527A786.rev
これは失効証明書でこちらのOpenPGP鍵に対するものです:

pub   rsa2048 2017-11-23 [SC]
      9416E477EBA825CD1694573102C94DC57527A786
uid          Alice &amp;lt;alice@example.com&amp;gt;

失効証明書は &amp;#34;殺すスイッチ&amp;#34; のようなもので、鍵がそれ以上使えない
ように公に宣言するものです。一度発行されると、そのような失効証明書は
撤回することはできません。

秘密鍵のコンプロマイズや紛失の場合、これを使ってこの鍵を失効させます。
しかし、秘密鍵がまだアクセス可能である場合、新しい失効証明書を生成し、
失効の理由をつける方がよいでしょう。詳細は、GnuPGマニュアルのgpgコマン
ド &amp;#34;--generate-revocation&amp;#34;の記述をご覧ください。

このファイルを誤って使うのを避けるため、以下ではコロンが5つのダッシュ
の前に挿入されます。この失効証明書をインポートして公開する前に、テク
スト・エディタでこのコロンを削除してください。

:-----BEGIN PGP PUBLIC KEY BLOCK-----
Comment: This is a revocation certificate

iQE2BCABCAAgFiEElBbkd+uoJc0WlFcxAslNxXUnp4YFAloWYkcCHQAACgkQAslN
xXUnp4aG1wf/XoyxQPks2JlJ93ghQALdqCIxFPh015q21K53u0rVwTsMocwdGowR
l+/UppyBxnGyU1uIba68D787INlruMzsOyUTuruCUZ5XJpiuYYVXcRuovUmCREWF
EbW1DGd1lzmrO8cr70qu3yVCMYjGOQ6NA0fh1lpKTpFqHc3GC+ue19RDoVY1KnCC
YsWuNom4PAuUyHlH3uJLM9+F9J2Qec+0PIedxHyxuIStWOSg+/TGjD4cP3FEItIt
giRxx6qLWcK+bfg6WXv7I3+FA2J8eRKjLoD/vsZX+FpxG7T+c4mvfTUgxn0+bZD9
gxTKlFWg2bhKTcxi0EsJ9XAEmocvOolwPQ==
=ShPY
-----END PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際に使う場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;:-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;の先頭のコロンを削除して使う。
失効処理を行うには &lt;code&gt;--import&lt;/code&gt; コマンドで失効証明書をインポートすればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --import 9416E477EBA825CD1694573102C94DC57527A786.rev
gpg: 鍵02C94DC57527A786:&amp;#34;Alice &amp;lt;alice@example.com&amp;gt;&amp;#34;失効証明書をインポートしました
gpg:           処理数の合計: 1
gpg:         新しい鍵の失効: 1
gpg: marginals needed: 3  completes needed: 1  trust model: pgp
gpg: 深さ: 0  有効性:   1  署名:   0  信用: 0-, 0q, 0n, 0m, 0f, 1u&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで鍵の状態は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --list-keys alice
pub   rsa2048 2017-11-23 [SC] [失効: 2017-11-23]
      9416E477EBA825CD1694573102C94DC57527A786
uid           [  失効  ] Alice &amp;lt;alice@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となり失効したことが分かる。
&lt;strong&gt;失効した公開鍵を配布するのを忘れずに！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/OpenPGP-Key-Management.html&#34;&gt;Using the GNU Privacy Guard: OpenPGP Key Management&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-1/&#34;&gt;GnuPG for Windows ― インストール編&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/using-gnupg-modern-version-2/&#34;&gt;GnuPG for Windows ― gpg-agent について&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ksp1&#34;&gt;相手の公開鍵に電子署名するには (1) 相手の公開鍵を貰って &lt;code&gt;--import&lt;/code&gt; （または鍵サーバから &lt;code&gt;--recv-keys&lt;/code&gt;）する (2) インポートした鍵に &lt;code&gt;--sign-key&lt;/code&gt; する (3) 署名した公開鍵を &lt;code&gt;--export&lt;/code&gt; して相手に返す（または鍵サーバへ &lt;code&gt;--send-keys&lt;/code&gt;） といった手順を踏む。これをひとりひとりやるのは割と面倒なので，複数人が一度に電子署名を交わすために「&lt;a href=&#34;https://en.wikipedia.org/wiki/Key_signing_party&#34; title=&#34;Key signing party - Wikipedia&#34;&gt;キーサイン・パーティ（key signing party）&lt;/a&gt;」が行われることがある。日本ではあまり聞かないけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ksp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tm1&#34;&gt;もう少し詳しく言うと，公開鍵への電子署名の際に「信用度」を設定し，集まった「信用度」の累積から公開鍵の「有効性」を機械的に判定する。なので（信用度が分からない）全く未知の人の電子署名がいくらあっても「有効性」は上がりにくい。また公開鍵に電子署名を施すことは相手の鍵をある程度以上信用していることになるため，よく分からない鍵に対して安易に電子署名を行うことは避けるべきである。なお，現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では web of trust 以外にも X.509 や &lt;a href=&#34;https://en.wikipedia.org/wiki/Trust_on_first_use&#34; title=&#34;Trust on first use - Wikipedia&#34;&gt;Tofu (Trust on first use)&lt;/a&gt; といった信用モデルもサポートしている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gk1&#34;&gt;&lt;code&gt;--gen-key&lt;/code&gt; コマンドに &lt;code&gt;--batch&lt;/code&gt; オプションを組み合わせて設定ファイルから鍵を作成することも可能である。詳しい方法は “&lt;a href=&#34;https://www.gnupg.org/documentation/manuals/gnupg/Unattended-GPG-key-generation.html&#34;&gt;Unattended GPG key generation&lt;/a&gt;” が参考になるだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:k1&#34;&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵は1つの主鍵（primary key）と0個以上の副鍵（subkey）で構成されている。主鍵は必ず電子署名用の鍵になっていて，この主鍵にユーザID（とその自己署名）や他の鍵からの電子署名が付与される。副鍵は暗号化または電子署名用の鍵である。たとえば，データの暗号化と復号は実際にはこの副鍵を使って行う。副鍵は個別に追加したり失効したりできる。ちなみに &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では通常のやり方では暗号化機能のみの鍵は作れない。電子署名機能のみの鍵は作ることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:k1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:updtd1&#34;&gt;&lt;code&gt;--update-trustdb&lt;/code&gt; コマンドは信用データベース（trustdb）の更新コマンドである。現行バージョンの &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では信用度は &lt;code&gt;trustdb.gpg&lt;/code&gt; ファイルを使って鍵束とは独立に管理される。通常は鍵の状態が変わると自動的に信用データベースが更新されるのだが，自動更新しない場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドで更新できる。なお，他ユーザの公開鍵に電子署名を施した場合は &lt;code&gt;--update-trustdb&lt;/code&gt; コマンドを起動して署名した鍵の信用度を設定する。信用度の設定は &lt;code&gt;--edit-key&lt;/code&gt; コマンドの編集モードでも設定・変更が可能である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:updtd1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:lsign1&#34;&gt;公開鍵に電子署名したことを公開したくない場合は &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで署名する。 &lt;code&gt;--lsign-key&lt;/code&gt; コマンドで付与した署名はエクスポートされないため他ユーザには公開されない。公開鍵に関する確証はないけど取り敢えず使いたいという場合には有効な手だろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lsign1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:own1&#34;&gt;公開鍵の更新を鍵オーナーの存在証明に使うのは，あまり筋のいい運用とは思えない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:own1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:rvk1&#34;&gt;または &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで失効証明書を作成する。 &lt;code&gt;--gen-revoke&lt;/code&gt; コマンドで作成した場合は失効理由も含めることができる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rvk1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.3 がリリースされた — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/gnupg-2_2_3-released/" />
		<id>tag:text.Baldanders.info,2017-11-21:/remark/2017/11/gnupg-2_2_3-released/</id>
		<published>2017-11-21T17:30:50+09:00</published>
		<updated>2017-11-24T10:01:22+09:00</updated>
		<summary>今回もセキュリティ・アップデートはなし。平和でよい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.3 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q4/000417.html&#34;&gt;[Announce] GnuPG 2.2.3 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回もセキュリティ・アップデートはなし。
平和でよい。
主な修正点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpgsm: Fix initial keybox creation on Windows. [#3507]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix crash in case of a CRL loading error. [#3510]&lt;/li&gt;
&lt;li&gt;Fix the name of the Windows registry key. [Git#4f5afaf1fd]&lt;/li&gt;
&lt;li&gt;gpgtar: Fix wrong behaviour of &lt;code&gt;--set-filename&lt;/code&gt;. [#3500]&lt;/li&gt;
&lt;li&gt;gpg: Silence AKL retrieval messages. [#3504]&lt;/li&gt;
&lt;li&gt;agent: Use clock or clock_gettime for calibration. [#3056]&lt;/li&gt;
&lt;li&gt;agent: Improve robustness of the shutdown pending state. [Git#7ffedfab89]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.3
libgcrypt 1.8.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;追記-gpg4win-3-0-1-もリリース&#34;&gt;【追記】 Gpg4win 3.0.1 もリリース&lt;/h2&gt;

&lt;p&gt;Gpg4win 3.0.1 もリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lists.wald.intevation.org/pipermail/gpg4win-announce/2017-November/000074.html&#34;&gt;[Gpg4win-announce] Gpg4win 3.0.1 released&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://files.gpg4win.org/README-3.0.1.en.txt&#34;&gt;English README file for Gpg4win&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主な修正点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GnuPG: Has been updated to version 2.2.3.&lt;/li&gt;
&lt;li&gt;The mkportable process can be used again to create a portable Gpg4win variant.&lt;/li&gt;
&lt;li&gt;GpgOL: A user interface error for Outlook 2010 has been fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>JSON-LD に対応してみた — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/json-ld/" />
		<id>tag:text.Baldanders.info,2017-11-17:/remark/2017/11/json-ld/</id>
		<published>2017-11-17T23:40:05+09:00</published>
		<updated>2017-11-18T12:50:11+09:00</updated>
		<summary>以前，このサイトを Twitter Cards に対応させたのだが，今回も思いつきで JSON-LD に対応させることにした。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;以前，このサイトを &lt;a href=&#34;http://text.baldanders.info/remark/2017/10/twitter-card-metadata/&#34; title=&#34;Twitter Card メタデータに対応した&#34;&gt;Twitter Cards に対応させた&lt;/a&gt;のだが，今回も思いつきで &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; に対応させることにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://json-ld.org/&#34;&gt;JSON-LD - JSON for Linking Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; の特徴は複数の情報のかたまりを IRI&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:iri&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:iri&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; で繋ぐことで複雑なデータ構造を記述できる点にある。
これを使ってネット上のリソースのメタデータとその関係を表現するわけだ。&lt;/p&gt;

&lt;p&gt;ただし Web ページの場合は， RDFa や Microdata などと違って，語彙を HTML の要素に埋め込むことが出来ないため冗長にならざるを得ない。
まぁ CMS を使ってサイトや Web ページを管理しているなら，一度テンプレート等を作ってしまえば済む話なので，大した手間ではないかもしれないが。&lt;/p&gt;

&lt;p&gt;逆に RESTful API でメタデータを提供する場合は &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; はかなり有力な手段となるだろう。&lt;/p&gt;

&lt;p&gt;真面目に &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; を扱うとなると相当凝ったことができるみたいだが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:jsnld1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:jsnld1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，今回は軽めに Google の検索サービスが解釈できる範囲で調整してみようと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/search/docs/guides/intro-structured-data&#34;&gt;Introduction to Structured Data | Search | Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34;&gt;構造化データ テストツール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; を導入するのなら Microdata の記述はページから削除することをお勧めする。
Microdata は未完成のまま開発が終了しており，もはや推奨されない。&lt;/p&gt;

&lt;h2 id=&#34;web-ページに-json-ld-を埋め込む&#34;&gt;Web ページに &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; を埋め込む&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; を Web ページに埋め込む際は，以下のように &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素で囲む。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;メディア・タイプに注意すること。
どうやらこの記述はページ内にいくつ置いてもいいようだ（少なくとも Google の&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;には怒られなかった）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;json-ld-の詳細&#34;&gt;&lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; の詳細&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; の中身だが，まずは &lt;code&gt;@context&lt;/code&gt; と &lt;code&gt;@type&lt;/code&gt; を指定する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;WebSite&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;@context&lt;/code&gt; で語彙を定義するのだが，どうやら Google は Microdata の語彙（のひとつ）である &lt;a href=&#34;http://schema.org/&#34;&gt;schema.org&lt;/a&gt; を前提にしているらしい。
&lt;code&gt;@type&lt;/code&gt; には &lt;a href=&#34;http://schema.org/&#34;&gt;schema.org&lt;/a&gt; で定義される content type を指定する。
このサイトは一応ブログサイトなので，以下の content type を使うことにする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/WebSite&#34; title=&#34;WebSite - schema.org&#34;&gt;WebSite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/Blog&#34; title=&#34;Blog - schema.org&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/BlogPosting&#34; title=&#34;BlogPosting - schema.org&#34;&gt;BlogPosting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/BreadcrumbList&#34; title=&#34;BreadcrumbList - schema.org&#34;&gt;BreadcrumbList&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更に，これらが参照する content type として以下も使用する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/Person&#34; title=&#34;Person - schema.org&#34;&gt;Person&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://schema.org/ImageObject&#34; title=&#34;ImageObject - schema.org&#34;&gt;ImageObject&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まずは &lt;a href=&#34;http://schema.org/WebSite&#34; title=&#34;WebSite - schema.org&#34;&gt;WebSite&lt;/a&gt; から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;WebSite&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;inLanguage&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;publisher&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#org&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#maker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Spiegel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://www.baldanders.info/spiegel/profile/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/avatar.jpg&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/avatar.jpg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;帰ってきた「しっぽのさきっちょ」&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Organization&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;logo&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ImageObject&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#logo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/avatar.jpg&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;@id&lt;/code&gt; は IRI を定義または参照する。
&lt;code&gt;@id&lt;/code&gt; によって &lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt; のデータを &lt;code&gt;publisher&lt;/code&gt; から参照しているのがお分かりだろうか。
これを&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;にかけるとこんな感じになる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/38448664942/&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4576/38448664942_e96760dd5e.jpg&#34; srcset=&#34;https://farm5.staticflickr.com/4576/38448664942_e96760dd5e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Structured Data Testing Tool (1)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/38448664942/&#34;&gt;Structured Data Testing Tool (1)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;publisher&lt;/code&gt; に &lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt; のデータが入っているのがわかると思う。&lt;/p&gt;

&lt;p&gt;本来の &lt;a href=&#34;http://schema.org/&#34;&gt;schema.org&lt;/a&gt; の定義では &lt;code&gt;publisher&lt;/code&gt; には &lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt; と &lt;a href=&#34;http://schema.org/Person&#34; title=&#34;Person - schema.org&#34;&gt;Person&lt;/a&gt; のどちらも有効な筈なのだが，&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;は &lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt; しか受け付けないようだ。
これではうちのような個人サイトは大変に困るのだが，しょうがないので &lt;a href=&#34;http://schema.org/Organization&#34; title=&#34;Organization - schema.org&#34;&gt;Organization&lt;/a&gt; にテキトーな情報を入れてお茶を濁している。
何とかしてよ Google 先生！&lt;/p&gt;

&lt;p&gt;次は &lt;a href=&#34;http://schema.org/Blog&#34; title=&#34;Blog - schema.org&#34;&gt;Blog&lt;/a&gt; の情報をセットする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Blog&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;inLanguage&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;しっぽのさきっちょ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;とりとめのない四方山話。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/attention/remark.jpg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;publisher&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#org&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/#maker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Spiegel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://www.baldanders.info/spiegel/profile/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/avatar.jpg&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;publisher&lt;/code&gt; の参照先は &lt;a href=&#34;http://schema.org/WebSite&#34; title=&#34;WebSite - schema.org&#34;&gt;WebSite&lt;/a&gt; と同じなので省略する。
これを&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;にかけるとこんな感じになる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37593823405/&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4554/37593823405_a6651f6a94.jpg&#34; srcset=&#34;https://farm5.staticflickr.com/4554/37593823405_a6651f6a94.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Structured Data Testing Tool (2)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37593823405/&#34;&gt;Structured Data Testing Tool (2)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;どんどん行こう。
&lt;a href=&#34;http://schema.org/BlogPosting&#34; title=&#34;BlogPosting - schema.org&#34;&gt;BlogPosting&lt;/a&gt; はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BlogPosting&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/2017/11/qiitadon/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/2017/11/qiitadon/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;mainEntityOfPage&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/2017/11/qiitadon/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;inLanguage&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Qiita って Mastodon やってたのか&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;私にとって今年最初の大外しは「GW 過ぎたら Mastodon のことなんかみんな忘れてる」だったが，本当に忘れていたのは私だけだったようだ。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;headline&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;私にとって今年最初の大外しは「GW 過ぎたら Mastodon のことなんかみんな忘れてる」だったが，本当に忘れていたのは私だけだったようだ。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;keywords&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mastodon, communication&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/attention/remark.jpg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;datePublished&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2017-11-10T13:49:58+09:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;dateModified&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2017-11-16T10:09:40+09:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;publisher&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/#org&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Person&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/2017/11/qiitadon/#maker&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Spiegel&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://www.baldanders.info/spiegel/profile/&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/images/avatar.jpg&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://creativecommons.org/licenses/by-sa/4.0/&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Google 検索は &lt;a href=&#34;http://schema.org/BlogPosting&#34; title=&#34;BlogPosting - schema.org&#34;&gt;BlogPosting&lt;/a&gt; の内容を参照している。
Google 検索が &lt;a href=&#34;http://schema.org/BlogPosting&#34; title=&#34;BlogPosting - schema.org&#34;&gt;BlogPosting&lt;/a&gt; で要求するプロパティは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Properties&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Data Type&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;AMP&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;non-AMP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;mainEntityOfPage&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;recommended&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;headline&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;recommended&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;ImageObject&lt;/code&gt; or &lt;code&gt;URL&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;recommended&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Organization&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher.name&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher.logo&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;ImageObject&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher.logo.url&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher.logo.height&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;publisher.logo.width&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;datePublished&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;dateModified&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;author&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Person&lt;/code&gt; or &lt;code&gt;Organization&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;author.name&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;recommended&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;ignored&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;AMP (Accelerated Mobile Pages) と non-AMP で要求が異なるが，&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;は AMP を前提にしているようで，これらのプロパティがないとエラーまたは警告を吐く&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:tst1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:tst1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;これも&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;にかけてみよう。
こんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37594061745/&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4577/37594061745_323d131e43.jpg&#34; srcset=&#34;https://farm5.staticflickr.com/4577/37594061745_323d131e43.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Structured Data Testing Tool (3)&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37594061745/&#34;&gt;Structured Data Testing Tool (3)&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;最後に &lt;a href=&#34;http://schema.org/BreadcrumbList&#34; title=&#34;BreadcrumbList - schema.org&#34;&gt;BreadcrumbList&lt;/a&gt; （パンくずリスト&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:bcl1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:bcl1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;）はこんな感じになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;application/ld+json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@context&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://schema.org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;BreadcrumbList&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/2017/11/qiitadon/#breadcrumb-list&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34;itemListElement&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ListItem&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;position&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;item&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/&amp;#34;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;@type&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ListItem&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;position&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s2&#34;&gt;&amp;#34;item&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;#34;@id&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://text.baldanders.info/remark/&amp;#34;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Google 検索は &lt;a href=&#34;http://schema.org/BreadcrumbList&#34; title=&#34;BreadcrumbList - schema.org&#34;&gt;BreadcrumbList&lt;/a&gt; の内容も参照している。
Google 検索が &lt;a href=&#34;http://schema.org/BreadcrumbList&#34; title=&#34;BreadcrumbList - schema.org&#34;&gt;BreadcrumbList&lt;/a&gt; で要求するプロパティは以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Properties&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Data Type&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Requirement&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;optional&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Thing&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;required&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;上述のコードでは &lt;code&gt;item&lt;/code&gt; を &lt;code&gt;@id&lt;/code&gt; の参照先と繋げている。
具体的には，最初の階層に &lt;a href=&#34;http://schema.org/WebSite&#34; title=&#34;WebSite - schema.org&#34;&gt;WebSite&lt;/a&gt; データの &lt;code&gt;@id&lt;/code&gt; を，2番目の階層に &lt;a href=&#34;http://schema.org/Blog&#34; title=&#34;Blog - schema.org&#34;&gt;Blog&lt;/a&gt; データの &lt;code&gt;@id&lt;/code&gt; を指定している。
これによって &lt;code&gt;item&lt;/code&gt; の中に &lt;code&gt;name&lt;/code&gt; や &lt;code&gt;image&lt;/code&gt; が含まれるため，不足なく情報を網羅できている。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/narumana/items/b66969b80cce848b2ddf&#34;&gt;Google推奨「JSON-LD」で構造化マークアップ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ko8@github/items/d2cf8786032972d7d090&#34;&gt;Google リッチカードの導入 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.suzukikenichi.com/blog/google-finally-supports-breadcrumbs-with-schema-org/&#34;&gt;schema.orgのパンくずリストをようやくGoogleがサポート開始 | 海外SEO情報ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mizukmb.net/post/apply-json-ld/&#34;&gt;JSON-LDによるブログの構造化データをHugoで実現する | TRIAL DANCE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/1000k/items/2f2258cbbe9c9493551e&#34;&gt;Hugo で JSON-LD 内の URL がなぜかエスケープされる問題 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/y_hokkey/items/f9d8b66b3770a82d4c1c&#34;&gt;HUGOで作れるCMSっぽいパーツ:関連記事・目次・JSON-LDなど - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:iri&#34;&gt;IRI (Internationalized Resource Indicator) というのは &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; 独自の用語のようだが，ここでは大雑把に URL (Uniform Resource Locator) や URI (Uniform Resource Indicator) と同じようにネット上のリソースを一意に識別する識別子であると理解しておけばよい。なお，&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;を見るかぎり Google 検索では IRI からメタデータの場所（URL または URI）を推測して取得するといったことはしないようだ。したがって Web ページに &lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; を設置する場合には，関連する全てのメタデータを記述する必要がある。冗長すぎるやろ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:iri&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:jsnld1&#34;&gt;&lt;a href=&#34;https://json-ld.org/&#34; title=&#34;JSON-LD - JSON for Linking Data&#34;&gt;JSON-LD&lt;/a&gt; の仕様を見るかぎり，Microdata や RDFa の語彙を流用したり自前で語彙を作ったりできるっぽい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:jsnld1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:tst1&#34;&gt;ただし &lt;code&gt;publisher.logo.height&lt;/code&gt; と &lt;code&gt;publisher.logo.width&lt;/code&gt; は例外のようで，これらのプロパティがなくても&lt;a href=&#34;https://search.google.com/structured-data/testing-tool&#34; title=&#34;構造化データ テストツール&#34;&gt;テストツール&lt;/a&gt;ではエラーにならなかった。まぁ画像のサイズは画像データから読み取れるからね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:tst1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:bcl1&#34;&gt;一応説明しておくと「パンくずリスト」とはサイト内のページ位置を見失わないようにするためのナビゲーション表示を指す。名前で想像される通り「ヘンゼルとグレーテル」の童話が語源になっているらしい。まぁ，いまどきパンくずリストがないと迷子になってしまうようなダサい構成のサイトは少なくなってると思うけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:bcl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Qiita って Mastodon やってたのか — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/qiitadon/" />
		<id>tag:text.Baldanders.info,2017-11-10:/remark/2017/11/qiitadon/</id>
		<published>2017-11-10T13:49:58+09:00</published>
		<updated>2017-11-16T10:09:40+09:00</updated>
		<summary>私にとって今年最初の大外しは「GW 過ぎたら Mastodon のことなんかみんな忘れてる」だったが，本当に忘れていたのは私だけだったようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;私にとって2017年最初の大外しは「GW 過ぎたら &lt;a href=&#34;https://github.com/tootsuite/mastodon&#34; title=&#34;tootsuite/mastodon: A GNU Social-compatible microblogging server&#34;&gt;Mastodon&lt;/a&gt; のことなんか&lt;a href=&#34;http://text.baldanders.info/remark/2017/04/mastodon/&#34; title=&#34;GW 過ぎたらみんな忘れてるに100カノッサ&#34;&gt;みんな忘れてる&lt;/a&gt;」だったが，本当に忘れていたのは私だけだったようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://qiita.com/&#34;&gt;Qiita&lt;/a&gt; の記事を眺めててふと見ると「Toot」ボタンが追加されているのに気がついた。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/38300241091/&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4558/38300241091_dfc4d51ace_o.png&#34; srcset=&#34;https://farm5.staticflickr.com/4558/38300241091_dfc4d51ace_o.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Qiitadon Button&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/38300241091/&#34;&gt;Qiitadon Button&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=62406690&#34;&gt;Pixiv が Mastodon を運営してる&lt;/a&gt;ってのは知ってたし，こういうやり方は上手いと感じていたので「&lt;a href=&#34;https://qiita.com/&#34;&gt;Qiita&lt;/a&gt; もやればいいのに」と当時は思っていたが，2017年5月末には既に始めてたのか。
いや，もう，完全にスルーしてたよ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.qiita.com/post/161193715974/qiitadon&#34;&gt;Qiita ユーザー向けの Mastodon インスタンス Qiitadon を試験的に公開しました - Qiita Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というわけで，私も &lt;a href=&#34;https://qiitadon.com/@Spiegel&#34;&gt;@Spiegel@qiitadon.com&lt;/a&gt; でサインアップした。
ついでに &lt;a href=&#34;https://play.google.com/store/apps/details?id=jp.juggler.subwaytooter&#34; title=&#34;Subway Tooter - Google Play&#34;&gt;Subway Tooter&lt;/a&gt; も入れてみた。
まぁ，正直に言って Time-Line サービスには飽き飽きしている部分もあって，あんまり積極的には使わないかもしれないが，少なくとも &lt;a href=&#34;https://qiita.com/&#34;&gt;Qiita&lt;/a&gt; の記事に「Tweet」ボタンを押すことはなくなるだろう。
このサイトに「Toot」ボタンを付けるかどうかはこれから考える。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/tootsuite/mastodon&#34; title=&#34;tootsuite/mastodon: A GNU Social-compatible microblogging server&#34;&gt;Mastodon&lt;/a&gt; は分散システムであることが強みだとよく言われるが，言い方を変えると「&lt;a href=&#34;https://github.com/tootsuite/mastodon&#34; title=&#34;tootsuite/mastodon: A GNU Social-compatible microblogging server&#34;&gt;Mastodon&lt;/a&gt; だけ」のサービスには殆ど存在意義がない。
&lt;a href=&#34;https://pawoo.net/&#34;&gt;Pawoo&lt;/a&gt; や &lt;a href=&#34;https://qiitadon.com/&#34;&gt;Qiitadon&lt;/a&gt; のように既に生態系を形成しているサービスに追加するなら意味はあると思うが。
それとも&lt;a href=&#34;https://social.hyuki.net/@hyuki&#34;&gt;結城浩さんのように自前でインスタンスを立て&lt;/a&gt;てブランド戦略に組み込むか。&lt;/p&gt;

&lt;p&gt;言い訳がましくてホントにゴメンナサイだけど， &lt;a href=&#34;https://github.com/tootsuite/mastodon&#34; title=&#34;tootsuite/mastodon: A GNU Social-compatible microblogging server&#34;&gt;Mastodon&lt;/a&gt; の話題ってちゃんと意識してないと本当に何も聞こえてこない。
ホンマに流行ってるのか？ 英語圏の記事でも &lt;a href=&#34;https://github.com/tootsuite/mastodon&#34; title=&#34;tootsuite/mastodon: A GNU Social-compatible microblogging server&#34;&gt;Mastodon&lt;/a&gt; の話題なんかまず聞こえてこないし。
うーん。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mnm.social/&#34;&gt;Mastodon Network Monitoring&lt;/a&gt; : &lt;a href=&#34;https://pawoo.net/&#34;&gt;Pawoo&lt;/a&gt; スゲー&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://note103.hateblo.jp/entry/2017/06/02/194946&#34;&gt;Qiitadonについて語る - the code to rock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/akihikodaki/2081f7a38c30303519f8398f08ea2c45&#34;&gt;Qiitadonのソースコードを読む · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tateisu/SubwayTooter&#34;&gt;GitHub - tateisu/SubwayTooter: Mastodon client app for Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-mastodon&#34;&gt;mattn/go-mastodon: mastodon client for golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/cannorin/items/f424ade9276599f3a675&#34;&gt;Mastodon の投稿を Twitter に転送する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>GnuPG 2.2.2 がリリースされた — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/gnupg-2_2_2-released/" />
		<id>tag:text.Baldanders.info,2017-11-07:/remark/2017/11/gnupg-2_2_2-released/</id>
		<published>2017-11-07T23:39:38+09:00</published>
		<updated>2017-11-07T23:39:38+09:00</updated>
		<summary>今回はセキュリティ・アップデートはなし。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.2 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2017q4/000416.html&#34;&gt;[Announce] GnuPG 2.2.2 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はセキュリティ・アップデートはなし。
主な修正点は以下の通り。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpg: Avoid duplicate key imports by concurrently running gpg processes. [#3446]&lt;/li&gt;
&lt;li&gt;gpg: Fix creating on-disk subkey with on-card primary key. [#3280]&lt;/li&gt;
&lt;li&gt;gpg: Fix validity retrieval for multiple keyrings. [Debian#878812]&lt;/li&gt;
&lt;li&gt;gpg: Fix &lt;code&gt;--dry-run&lt;/code&gt; and import option show-only for secret keys.&lt;/li&gt;
&lt;li&gt;gpg: Print &amp;ldquo;sec&amp;rdquo; or &amp;ldquo;sbb&amp;rdquo; for secret keys with import option import-show. [#3431]&lt;/li&gt;
&lt;li&gt;gpg: Make import less verbose. [#3397]&lt;/li&gt;
&lt;li&gt;gpg: Add alias &amp;ldquo;Key-Grip&amp;rdquo; for parameter &amp;ldquo;Keygrip&amp;rdquo; and new parameter &amp;ldquo;Subkey-Grip&amp;rdquo; to unattended key generation.  [#3478]&lt;/li&gt;
&lt;li&gt;gpg: Improve &amp;ldquo;factory-reset&amp;rdquo; command for OpenPGP cards.  [#3286]&lt;/li&gt;
&lt;li&gt;gpg: Ease switching Gnuk tokens into ECC mode by using the magic keysize value 25519.&lt;/li&gt;
&lt;li&gt;gpgsm: Fix &lt;code&gt;--with-colon&lt;/code&gt; listing in crt records for fields &amp;gt; 12.&lt;/li&gt;
&lt;li&gt;gpgsm: Do not expect X.509 keyids to be unique.  [#1644]&lt;/li&gt;
&lt;li&gt;agent: Fix stucked Pinentry when using &amp;ndash;max-passphrase-days. [#3190]&lt;/li&gt;
&lt;li&gt;agent: New option &lt;code&gt;--s2k-count&lt;/code&gt;.  [#3276 (workaround)]&lt;/li&gt;
&lt;li&gt;dirmngr: Do not follow https-to-http redirects. [#3436]&lt;/li&gt;
&lt;li&gt;dirmngr: Reduce default LDAP timeout from 100 to 15 seconds. [#3487]&lt;/li&gt;
&lt;li&gt;gpgconf: Ignore non-installed components for commands &lt;code&gt;--apply-profile&lt;/code&gt; and &lt;code&gt;--apply-defaults&lt;/code&gt;. [#3313]&lt;/li&gt;
&lt;li&gt;Add configure option &lt;code&gt;--enable-werror&lt;/code&gt;.  [#2423]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最新版をインストールすると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.2.2
libgcrypt 1.8.1
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>gpgpdump 0.2.0 をリリースした — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/11/gpgpdump-0_2_0-released/" />
		<id>tag:text.Baldanders.info,2017-11-07:/remark/2017/11/gpgpdump-0_2_0-released/</id>
		<published>2017-11-07T22:35:32+09:00</published>
		<updated>2017-11-07T22:35:32+09:00</updated>
		<summary>OpenPGP パケットの内容を視覚化する gpgpdump の 0.2.0 をリリースした。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; パケットの内容を視覚化する &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の 0.2.0 をリリースした。
名前でピンとくる人もいるだろうが，山本和彦さんの &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; の翻案である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:adpt1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:adpt1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
特徴は以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;用のパッケージおよびコマンドライン・インタフェースを提供&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/toml-lang/toml&#34; title=&#34;toml-lang/toml: Tom&#39;s Obvious, Minimal Language&#34;&gt;TOML&lt;/a&gt; （または &lt;a href=&#34;https://tools.ietf.org/html/rfc7159&#34; title=&#34;RFC 7159 - The JavaScript Object Notation (JSON) Data Interchange Format&#34;&gt;JSON&lt;/a&gt;）フォーマットで出力&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;RFC 4880&lt;/a&gt;, &lt;a href=&#34;https://tools.ietf.org/html/rfc5581&#34; title=&#34;RFC 5581 - The Camellia Cipher in OpenPGP&#34;&gt;RFC 5581&lt;/a&gt; および &lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; をサポート&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License Version 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/02/gpgpdump-released/&#34; title=&#34;gpgpdump - OpenPGP packet visualizer&#34;&gt;これまでの 0.1.x&lt;/a&gt; から全面的に書き換えた。
一応 60% くらいは元のコードは残ってるかな。
不正パケットで &lt;a href=&#34;http://blog.golang.org/defer-panic-and-recover&#34; title=&#34;Defer, Panic, and Recover - The Go Blog&#34;&gt;panic&lt;/a&gt; になる状況はだいぶ減ったと思う。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;のパッケージとして使う場合は以下のようなコードになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;openpgpStr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;-----BEGIN PGP SIGNATURE-----
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Version: GnuPG v2
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;iF4EARMIAAYFAlTDCN8ACgkQMfv9qV+7+hg2HwEA6h2iFFuCBv3VrsSf2BREQaT1
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;T1ZprZqwRPOjiLJg9AwA/ArTwCPz7c2vmxlv7sRlRLUI6CdsOqhuO1KfYXrq7idI
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;=ZOTN
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;-----END PGP SIGNATURE-----
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gpgpdump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NewReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;openpgpStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NewOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Packets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Output:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Signature&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Packet&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tag&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コマンドライン・インタフェースは 0.1.x とほぼ変わらず。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump -h
Usage:
  gpgpdump [flags] [PGPfile]

Flags:
  -a, --armor     accepts ASCII input only
  -h, --help      help for gpgpdump
  -i, --int       dumps multi-precision integers
  -j, --json      output with JSON format
  -l, --literal   dumps literal packets (tag 11)
  -m, --marker    dumps marker packets (tag 10)
  -p, --private   dumps private packets (tag 60-63)
  -u, --utc       output with UTC time
  -v, --version   output version of gpgpdump

$ cat sig
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iF4EARMIAAYFAlTDCN8ACgkQMfv9qV+7+hg2HwEA6h2iFFuCBv3VrsSf2BREQaT1
T1ZprZqwRPOjiLJg9AwA/ArTwCPz7c2vmxlv7sRlRLUI6CdsOqhuO1KfYXrq7idI
=ZOTN
-----END PGP SIGNATURE-----

$ cat sig | gpgpdump -u
[[Packet]]
  name = &amp;#34;Packet&amp;#34;
  value = &amp;#34;Signature Packet (tag 2)&amp;#34;
  note = &amp;#34;94 bytes&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Version&amp;#34;
    value = &amp;#34;4&amp;#34;
    note = &amp;#34;new&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Signiture Type&amp;#34;
    value = &amp;#34;Signature of a canonical text document (0x01)&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Public-key Algorithm&amp;#34;
    value = &amp;#34;ECDSA public key algorithm (pub 19)&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Hash Algorithm&amp;#34;
    value = &amp;#34;SHA256 (hash 8)&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Hashed Subpacket&amp;#34;
    note = &amp;#34;6 bytes&amp;#34;

    [[Packet.Item.Item]]
      name = &amp;#34;Signature Creation Time (sub 2)&amp;#34;
      value = &amp;#34;2015-01-24T02:52:15Z&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Unhashed Subpacket&amp;#34;
    note = &amp;#34;10 bytes&amp;#34;

    [[Packet.Item.Item]]
      name = &amp;#34;Issuer (sub 16)&amp;#34;
      value = &amp;#34;0x31fbfda95fbbfa18&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Hash left 2 bytes&amp;#34;
    dump = &amp;#34;36 1f&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Multi-precision integer&amp;#34;
    note = &amp;#34;ECDSA r (256 bits)&amp;#34;

  [[Packet.Item]]
    name = &amp;#34;Multi-precision integer&amp;#34;
    note = &amp;#34;ECDSA s (252 bits)&amp;#34;

$ cat sig | gpgpdump -j -u
{
  &amp;#34;Packet&amp;#34;: [
    {
      &amp;#34;name&amp;#34;: &amp;#34;Packet&amp;#34;,
      &amp;#34;value&amp;#34;: &amp;#34;Signature Packet (tag 2)&amp;#34;,
      &amp;#34;note&amp;#34;: &amp;#34;94 bytes&amp;#34;,
      &amp;#34;Item&amp;#34;: [
        {
          &amp;#34;name&amp;#34;: &amp;#34;Version&amp;#34;,
          &amp;#34;value&amp;#34;: &amp;#34;4&amp;#34;,
          &amp;#34;note&amp;#34;: &amp;#34;new&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Signiture Type&amp;#34;,
          &amp;#34;value&amp;#34;: &amp;#34;Signature of a canonical text document (0x01)&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Public-key Algorithm&amp;#34;,
          &amp;#34;value&amp;#34;: &amp;#34;ECDSA public key algorithm (pub 19)&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Hash Algorithm&amp;#34;,
          &amp;#34;value&amp;#34;: &amp;#34;SHA256 (hash 8)&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Hashed Subpacket&amp;#34;,
          &amp;#34;note&amp;#34;: &amp;#34;6 bytes&amp;#34;,
          &amp;#34;Item&amp;#34;: [
            {
              &amp;#34;name&amp;#34;: &amp;#34;Signature Creation Time (sub 2)&amp;#34;,
              &amp;#34;value&amp;#34;: &amp;#34;2015-01-24T02:52:15Z&amp;#34;
            }
          ]
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Unhashed Subpacket&amp;#34;,
          &amp;#34;note&amp;#34;: &amp;#34;10 bytes&amp;#34;,
          &amp;#34;Item&amp;#34;: [
            {
              &amp;#34;name&amp;#34;: &amp;#34;Issuer (sub 16)&amp;#34;,
              &amp;#34;value&amp;#34;: &amp;#34;0x31fbfda95fbbfa18&amp;#34;
            }
          ]
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Hash left 2 bytes&amp;#34;,
          &amp;#34;dump&amp;#34;: &amp;#34;36 1f&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Multi-precision integer&amp;#34;,
          &amp;#34;note&amp;#34;: &amp;#34;ECDSA r (256 bits)&amp;#34;
        },
        {
          &amp;#34;name&amp;#34;: &amp;#34;Multi-precision integer&amp;#34;,
          &amp;#34;note&amp;#34;: &amp;#34;ECDSA s (252 bits)&amp;#34;
        }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;残りの TODO はこんな感じかな。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パケット解析の未テスト部分を埋める（古いフォーマットのパケットのテストどうしよう）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4880#section-5.6&#34;&gt;Compressed Data Packet (Tag 8)&lt;/a&gt; が未実装。どうやって実現しようか悩み中&lt;/li&gt;
&lt;li&gt;実は ECC (&lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt;) がよく分かってない。もしかしたら解釈を間違えているかもしれない&lt;/li&gt;
&lt;li&gt;最終的には &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; と同等な出力を目指す&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;余暇でやってるので，まぁボチボチやります。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:adpt1&#34;&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で書いた &lt;a href=&#34;http://www.mew.org/~kazu/proj/pgpdump/&#34; title=&#34;pgpdump&#34;&gt;pgpdump&lt;/a&gt; だから &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt;。 gpg-pgp-dump という意図もある。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:adpt1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Twitter Card メタデータに対応した — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/twitter-card-metadata/" />
		<id>tag:text.Baldanders.info,2017-10-29:/remark/2017/10/twitter-card-metadata/</id>
		<published>2017-10-29T16:00:38+09:00</published>
		<updated>2017-11-17T23:45:12+09:00</updated>
		<summary>もう Semantic Web なんか誰も見向きもしなくなってるみたいだし， Web コンテンツを解析する手段は AI 技術を利用したものへシフトしてるようだし，もう（どうでも）いいかな，と。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;なんとなく思いついてこのブログをいわゆる “&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt;” に対応させた。&lt;/p&gt;

&lt;p&gt;実は &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt; が登場し始めたときに Tumblr などで適用していたのだが，あまりに酷い仕様で &lt;a href=&#34;https://validator.w3.org/&#34; title=&#34;The W3C Markup Validation Service&#34;&gt;HTML Validator&lt;/a&gt; にかけるとエラーの嵐になるし，そもそも Semantic Web を無視した設計に腹が立って忌避していたのだ。
しかし，まぁ，もう Semantic Web なんか誰も見向きもしなくなってるみたいだし， Web コンテンツを解析する手段は AI 技術を利用したものへシフトしてるようだし，もう（どうでも）いいかな，と。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt; の仕様も随分シンプルになった。
まず，カード種別が以下の4種類のみになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/player-card&#34; title=&#34;Player card — Twitter Developers&#34;&gt;Player card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/app-card&#34; title=&#34;App card — Twitter Developers&#34;&gt;App card&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/player-card&#34; title=&#34;Player card — Twitter Developers&#34;&gt;Player card&lt;/a&gt; は動画やスライドショウのページ用， &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/app-card&#34; title=&#34;App card — Twitter Developers&#34;&gt;App card&lt;/a&gt; はアプリページ用なので，それ以外の Web ページでは &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt; か &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt; を選択することになる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt; はアイキャッチ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ec1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ec1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 用の大きめの画像（300×157から4096×4096で5MB以下）を含むカードで，メディア・サイトなどが多用するあの&lt;strong&gt;ウザい&lt;/strong&gt;やつである。
とはいえ，写真やイラストなどを中心としたサイトでは &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt; が向いているだろう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt; にしないのなら &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt; を選択する。
うちのブログはもちろん&lt;del&gt;オリーブオイル&lt;/del&gt;おっと &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt; で&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:swli1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:swli1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt; で必須のメタデータは以下の2つである。
これを指定しないと，そもそもカードが表示されない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;twitter:card&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twitter:title&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体的には &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 要素の &lt;code&gt;name&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性の組み合わせを使って以下のように記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:card&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:title&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Codic API を利用するパッケージを作ってみた — プログラミング言語 Go | text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに &lt;code&gt;twitter:card&lt;/code&gt; の値はカード種別ごとに以下の通り。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;カード種別&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;twitter:card 値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;summary_large_image&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/player-card&#34; title=&#34;Player card — Twitter Developers&#34;&gt;Player card&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;player&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/app-card&#34; title=&#34;App card — Twitter Developers&#34;&gt;App card&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;app&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ただ，このままではページの説明（description）やアイコン画像が表示されないため（何故 optional なのに無理くり表示しようとするのだろう），以下のメタデータも追加する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;twitter:description&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twitter:image&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;アイコン画像には144×144から4096×4096までのサイズで5MB以下のデータが使える。
これらを合わせると以下の記述が最低限必要と言える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:card&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;summary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:title&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Codic API を利用するパッケージを作ってみた — プログラミング言語 Go | text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:description&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;spf13/viper を使ってみたかったのだ。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:image&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://text.baldanders.info/images/attention/go-code.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上のメタデータを &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素内に設置する。
これで以下のように表示される（筈）。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37949847556/&#34;&gt;&lt;img src=&#34;https://farm5.staticflickr.com/4510/37949847556_0867f5741b_o.png&#34; srcset=&#34;https://farm5.staticflickr.com/4510/37949847556_0867f5741b_o.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Twitter Card: Summary&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/37949847556/&#34;&gt;Twitter Card: Summary&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;以前は &lt;code&gt;twitter:image&lt;/code&gt; 等を &lt;code&gt;property&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性の組み合わせで記述させようとしていたが（これのせいで &lt;a href=&#34;https://validator.w3.org/&#34; title=&#34;The W3C Markup Validation Service&#34;&gt;HTML Validator&lt;/a&gt; がエラーを吐いていた），さすがに改心したようである（笑）&lt;/p&gt;

&lt;p&gt;サイトのオーナーやページの作成者が Twitter ユーザの場合は以下のメタデータも使える。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;twitter:site&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;twitter:creator&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これも同じように&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:site&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;@spiegel_2007&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;twitter:creator&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;@spiegel_2007&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすればよい。
カードの見た目には全く関係ないが Twitter アナリティクスか何かで使うのだろう，多分。&lt;/p&gt;

&lt;p&gt;メタデータの幾つかは &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; の語彙と置き換えることができる。&lt;/p&gt;

&lt;p&gt;一応説明しておくと， &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; は Facebook が最初に考えた仕様で，元々はネット上のコンテンツと Facebook のアプリを関連付けて制御する仕組みだったのだが&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/rdfa/ogp.svg&#34;&gt;&lt;img src=&#34;http://www.baldanders.info/spiegel/archive/rdfa/ogp.svg&#34; srcset=&#34;http://www.baldanders.info/spiegel/archive/rdfa/ogp.svg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Open Graph の相関図&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/rdfa/ogp.svg&#34;&gt;Open Graph の相関図&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;RDFa の仕様の一部を借用した大変筋の悪いもので，本来の目的は明後日方向に飛んでいき，現在は &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素内にメタデータを記述するための迂遠な手段に堕している&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rdfa1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:rdfa1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
ただし &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; で記述したメタデータを参照するサービスは多いため，今だに SEO 対策として用いられているようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt; のメタデータと置き換え可能な &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; の述語を以下に示す。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;twitter:card&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;og:type&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;twitter:description&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;og:description&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;twitter:title&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;og:title&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;twitter:image&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;og:image&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;これらの述語を既に使っている場合は &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt; のメタデータで記述する必要はない。
なお &lt;code&gt;og:type&lt;/code&gt; は本来はメディア・タイプ（MIME タイプや RDF/RDFa の語彙で定義されるタイプ）を指定するものなので &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Twitter Cards&lt;/a&gt; 用に使うべきではない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; は（一応） RDFa の仕様に従っているのでメタデータ指定には &lt;code&gt;name&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性の組み合わせではなく &lt;code&gt;property&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性の組み合わせで記述する。
例えば以下の通り&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ogp1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ogp1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og: http://ogp.me/ns#&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  ...
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:title&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Codic API を利用するパッケージを作ってみた — プログラミング言語 Go | text.Baldanders.info&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:description&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;spf13/viper を使ってみたかったのだ。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;property&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;og:image&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://text.baldanders.info/images/attention/go-code.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  ...
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素に &lt;code&gt;prefix&lt;/code&gt; 属性を付けるのを忘れずに（&lt;a href=&#34;https://www.w3.org/TR/html5/&#34;&gt;HTML5&lt;/a&gt; の場合）。
なぜ &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 要素ではなく &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素に付けるかというと，  &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; は &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素外での使用を考慮していないからである。
まぁ Twitter 側はそんなこと微塵も気にしてないだろうけど。
おそらく接頭辞を &lt;code&gt;og&lt;/code&gt; 以外にしたら Twitter 側は認識できなくなるんじゃないのかな（馬鹿らしいので試さない）&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:prfx1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:prfx1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 要素内の &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 要素や &lt;code&gt;description&lt;/code&gt; メタデータはまるっと無視するようである。
本当に何でこんな頭の悪い仕様になってるのか知らないが&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ttl1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ttl1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;，最初に書いたように，いまさら Semantic Web なんか気にする人はいないだろうし，どうでもいいか。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cards-dev.twitter.com/validator&#34;&gt;Card Validator | Twitter Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.granfairs.com/blog/staff/setting-twitter-cards&#34;&gt;ツイートにページ情報を表示する「Twitterカード（Twitter Cards）」を設定してみた | 株式会社グランフェアズ&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://saruwakakun.com/html-css/reference/twitter-card&#34;&gt;【2017年版】Twitterカードとは？使い方と設定方法まとめ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/rdfa/&#34;&gt;RDFa 入門 — Baldanders.info&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://scrapbox.io/spiegel-branch/%E3%82%BF%E3%82%A4%E3%83%A0%E3%83%A9%E3%82%A4%E3%83%B3%E3%81%AE%E5%A5%B4%E9%9A%B7&#34;&gt;タイムラインの奴隷 - Spiegel&amp;rsquo;s Branch - Scrapbox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483993195X/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51oaN2iq9xL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483993195X/baldandersinf-22/&#34;&gt;セマンティック HTML/XHTML&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;神崎 正英 &lt;/dd&gt;&lt;dd&gt;毎日コミュニケーションズ 2009-05-28&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4627829310/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4627829310.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;セマンティック・ウェブのためのRDF/OWL入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873114527/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873114527.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;セマンティックWeb プログラミング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4764904276/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4764904276.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Linked Data: Webをグローバルなデータ空間にする仕組み&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274202925/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274202925.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オントロジー構築入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4501542101/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4501542101.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;トピックマップ入門 (セマンティック技術シリーズ)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;残念ながら紙の本は実質的に絶版なんですよねぇ。是非デジタル化を希望します。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-17&#34;&gt;2014/08/17&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ec1&#34;&gt;この記事を書くにあたってちょっと調べたのだが「アイキャッチ」というのは和製英語なんだそうだ。ただし，コメントで頂いた情報では “&lt;a href=&#34;https://www.merriam-webster.com/dictionary/eye-catcher&#34; title=&#34;Eye-catcher | Definition of Eye-catcher by Merriam-Webster&#34;&gt;eye-catcher&lt;/a&gt;” という言葉はあるらしい（thx!）。なお “eye” は “attention” に置き換えることができるそうで，その場合は &lt;a href=&#34;アイキャッチ画像の「アイキャッチ」とは？正しい英語ではどういう？&#34; title=&#34;アイキャッチ画像の「アイキャッチ」とは？正しい英語ではどういう？&#34;&gt;“catch the reader’s attention” みたいな言い回し&lt;/a&gt;になるとか。ふぅ。英語は難しいぜ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ec1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:swli1&#34;&gt;実は一度 &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary-card-with-large-image&#34; title=&#34;Summary with large image — Twitter Developers&#34;&gt;Summary card with large image&lt;/a&gt; を試したのだが，自分で眺めてやっぱりウザかったので &lt;a href=&#34;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&#34; title=&#34;Summary card — Twitter Developers&#34;&gt;Summary card&lt;/a&gt; にした。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:swli1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:rdfa1&#34;&gt;RDF/RDFa は Web 上の（URI で記述可能な）あらゆるリソース同士の関係を「主語・述語・目的語」の3つ組（triple）で表すことで machine-understandable な「意味」を与える Semantic Web の実装のひとつである。もちろん Facebook はそんな思想背景など微塵も考慮していなかったと思うが。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rdfa1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ogp1&#34;&gt;&lt;code&gt;og:image&lt;/code&gt; の目的語は URL なので， RDFa 仕様としては &lt;code&gt;property&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性ではなく（&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 要素を使って） &lt;code&gt;rel&lt;/code&gt;-&lt;code&gt;href&lt;/code&gt; 属性の組み合わせとするのが正しい。のだが， &lt;a href=&#34;http://ogp.me/&#34; title=&#34;The Open Graph protocol&#34;&gt;OGP&lt;/a&gt; は馬鹿なので &lt;code&gt;property&lt;/code&gt;-&lt;code&gt;content&lt;/code&gt; 属性とする（つまりリテラル・データとして扱う）よう求めている。私が間違ってるわけではない，決して。ホントなんだよこのクソ仕様は。ブツブツブツ&amp;hellip;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ogp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:prfx1&#34;&gt;ちなみに &lt;code&gt;prefix&lt;/code&gt; 属性ではなく &lt;code&gt;vocab&lt;/code&gt; 属性を使えば接頭辞が不要になる。どうなるかなんて試さないよ（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:prfx1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ttl1&#34;&gt;ちなみに Facebook は &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 要素を認識して使っている。はっきり言って &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 要素と &lt;code&gt;twitter:title&lt;/code&gt; メタデータが独立して存在してるってのは詐欺の匂いがするんだが，誰も気にしないのかね。アイキャッチ画像につられて詐欺みたいなサイトに誘導されるってのは Facebook でも見られるが（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ttl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>ちょこっと MathJax： インライン数式と別行立て数式 — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/getting-started-mathjax-3/" />
		<id>tag:text.Baldanders.info,2017-10-27:/remark/2017/10/getting-started-mathjax-3/</id>
		<published>2017-10-27T17:24:58+09:00</published>
		<updated>2017-10-27T17:24:58+09:00</updated>
		<summary>MathJax の数式の表示には2種類ある。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-2/&#34; title=&#34;ちょこっと MathJax： 基本的な数式表現&#34;&gt;前回&lt;/a&gt;からだいぶ間があいたけど，そろそろ続きを。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-1/&#34;&gt;ちょこっと MathJax： 初期設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-2/&#34;&gt;ちょこっと MathJax： 基本的な数式表現&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/10/getting-started-mathjax-3/&#34;&gt;ちょこっと MathJax： インライン数式と別行立て数式&lt;/a&gt; ← イマココ&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;インライン数式と別行立て数式&#34;&gt;インライン数式と別行立て数式&lt;/h2&gt;

&lt;p&gt;さて，&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-1/&#34; title=&#34;ちょこっと MathJax： 初期設定&#34;&gt;初期設定&lt;/a&gt;の回でも少し言及したが，&lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; の数式の表示には2種類ある。
まず本文に埋め込まれる形で表示される数式。
これを「インライン数式（in-line math）」と呼ぶ。
インライン数式は &lt;code&gt;\(...\)&lt;/code&gt; で囲んで記述する。&lt;/p&gt;

&lt;p&gt;たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;エネルギーと質量には \(E=mc^2\) の関係がある。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と記述すると&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;エネルギーと質量には \(E=mc^2\) の関係がある。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;のように表示される。&lt;/p&gt;

&lt;p&gt;もうひとつは本文とは行を改めて表示される数式。
これを「別行立て数式（displayed equations）」と呼ぶ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:book1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:book1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
別行立て数式は &lt;code&gt;$$...$$&lt;/code&gt; または &lt;code&gt;\[...\]&lt;/code&gt; で囲んで記述する。&lt;/p&gt;

&lt;p&gt;たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;エネルギーと質量には \[E=mc^2\] の関係がある。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と記述すると&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
エネルギーと質量には \[E=mc^2\] の関係がある。
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;のように表示される。&lt;/p&gt;

&lt;p&gt;$\mathrm{\LaTeX}$ ではインライン数式については &lt;code&gt;\(...\)&lt;/code&gt; ではなく &lt;code&gt;$...$&lt;/code&gt; を使う。
なので &lt;a href=&#34;http://docs.mathjax.org/en/latest/options/preprocessors/tex2jax.html&#34; title=&#34;The tex2jax Preprocessor — MathJax 2.7 documentation&#34;&gt;&lt;code&gt;tex2jax&lt;/code&gt;&lt;/a&gt; オプションをいじって &lt;code&gt;$...$&lt;/code&gt; を有効にしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/x-mathjax-config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;MathJax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;tex2jax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;inlineMath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\\(&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\\)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;processEscapes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;オプション設定について詳しくは&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-1/&#34; title=&#34;ちょこっと MathJax： 初期設定&#34;&gt;初期設定&lt;/a&gt;の回を参照のこと&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:jm1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:jm1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;textstyle-と-displaystyle&#34;&gt;Textstyle と Displaystyle&lt;/h2&gt;

&lt;p&gt;先程の例で挙げた数式 $E=mc^2$ ではインライン数式と別行立て数式表示に（表示位置以外は）さしたる違いは見られないが，数式によっては表示が明らかに異なる場合がある。
たとえば &lt;code&gt;\sum_{k=1}^n a_k&lt;/code&gt; という記述について，インライン数式なら&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;たとえば $\sum_{k=1}^n a_k$ という記述について&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;となるが，別行立て数式では&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
たとえば \[\sum_{k=1}^n a_k\] という記述について
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;となる。
インライン数式では，できるだけ数式が本文からはみ出ないように自動的に調節してくれているのである。
これを意図的に変えるには &lt;code&gt;\textstyle&lt;/code&gt;, &lt;code&gt;\displaystyle&lt;/code&gt;, &lt;code&gt;\limits&lt;/code&gt;, &lt;code&gt;\nolimits&lt;/code&gt; といったコマンドを使う。
以下に各コマンドを使った場合の表示の違いを挙げる。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;$\mathrm{TeX}$ 記法&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;表示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;\textstyle\sum_{k=1}^n a_k&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$\textstyle\sum_{k=1}^n a_k$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;\displaystyle\sum_{k=1}^n a_k&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$\displaystyle\sum_{k=1}^n a_k$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;\textstyle\sum\limits_{k=1}^n a_k&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$\textstyle\sum\limits_{k=1}^n a_k$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;\displaystyle\sum\nolimits_{k=1}^n a_k&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$\displaystyle\sum\nolimits_{k=1}^n a_k$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;分数表記&#34;&gt;分数表記&lt;/h2&gt;

&lt;p&gt;もうひとつ。
インライン数式と別行立て数式で気をつけるべきなのが分数の表記である。
たとえば &lt;code&gt;y=1/x&lt;/code&gt; を $\mathrm{TeX}$ 記法で記述する場合は &lt;code&gt;y=\frac{1}{x}&lt;/code&gt; と書くが，インライン数式の場合は&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;たとえば &lt;code&gt;y=1/x&lt;/code&gt; は $y=\frac{1}{x}$ と書く&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;となり，別行立て数式の場合は&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
たとえば &lt;code&gt;y=1/x&lt;/code&gt; は \[y=\frac{1}{x}\] と書く
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;となる。
しかしインライン数式の場合，これでは文字が小さくなりすぎるし，結局は本文からハミ出してしまう。
なのでインライン数式では &lt;code&gt;\frac&lt;/code&gt; を使うのではなくそのまま &lt;code&gt;$y=1/x$&lt;/code&gt; と書くのが良いとされている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;たとえば &lt;code&gt;y=1/x&lt;/code&gt; は $y=1/x$ と書く&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なお分数でも textstyle と displaystyle に相当する &lt;code&gt;\tfrac&lt;/code&gt; と &lt;code&gt;\dfrac&lt;/code&gt; がある。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;$\mathrm{TeX}$ 記法&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;表示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;y=\tfrac{1}{x}&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$y=\tfrac{1}{x}$&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;y=\dfrac{1}{x}&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;$y=\dfrac{1}{x}$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; でも連分数（&lt;code&gt;\cfrac&lt;/code&gt;）が使える&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:bk2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:bk2&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\[
b_0 + \cfrac{c_1}{b_1 +
  \cfrac{c_2}{b_2 +
  \cfrac{c_3}{b_3 +
  \cfrac{c_4}{b_4 + \cdots}}}}
\]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
\[
b_0 + \cfrac{c_1}{b_1 +
  \cfrac{c_2}{b_2 +
  \cfrac{c_3}{b_3 +
  \cfrac{c_4}{b_4 + \cdots}}}}
\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;流石にこれはインライン数式じゃ無理だよね（笑）&lt;/p&gt;

&lt;h2 id=&#34;インライン数式で高さを揃える&#34;&gt;インライン数式で高さを揃える。&lt;/h2&gt;

&lt;p&gt;インライン数式では &lt;code&gt;$\sqrt{g}$&lt;/code&gt; と &lt;code&gt;$\sqrt{h}$&lt;/code&gt; のように数式によって高さが不揃いになるものがある。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;インライン数式では $\sqrt{g}$ と $\sqrt{h}$ の高さが不揃い&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;高さを揃えるには &lt;code&gt;\mathstrut&lt;/code&gt; コマンドを使って以下のように記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\mathstrut コマンドを使って $\sqrt{\mathstrut g}$ と $\sqrt{\mathstrut h}$ の高さを揃えてみる&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;\mathstrut&lt;/code&gt; コマンドを使って $\sqrt{\mathstrut g}$ と $\sqrt{\mathstrut h}$ の高さを揃えてみる&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;さらに &lt;code&gt;\smash&lt;/code&gt; コマンドとも組み合わせて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\smash コマンドも使って $\sqrt{\smash[b]{\mathstrut g}}$ と $\sqrt{\smash[b]{\mathstrut h}}$ を揃えてみる&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;\smash&lt;/code&gt; コマンドも使って $\sqrt{\smash[b]{\mathstrut g}}$ と $\sqrt{\smash[b]{\mathstrut h}}$ を揃えてみる&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とするともうちょっとだけいい感じになるようである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:smsh1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:smsh1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
折角なのでマクロに組み込んでしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/x-mathjax-config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;MathJax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;TeX&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Macros&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;ssqrt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\\sqrt{\\smash[b]{\\mathstrut #1}}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで以下のように書けば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\smash コマンドも使って $\ssqrt{g}$ と $\ssqrt{h}$ を揃えてみる&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同じ結果が得られる。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;\smash&lt;/code&gt; コマンドも使って $\ssqrt{g}$ と $\ssqrt{h}$ を揃えてみる&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;別行立て数式に番号を振る&#34;&gt;別行立て数式に番号を振る&lt;/h2&gt;

&lt;p&gt;別行立て数式では数式に番号を振ることができる。たとえば &lt;code&gt;\[E=mc^2\]&lt;/code&gt; に (a) をいう番号を振りたければ &lt;code&gt;\tag&lt;/code&gt; コマンドを使って &lt;code&gt;\[E=mc^2 \tag{a}\]&lt;/code&gt; とする。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
\[E=mc^2 \tag{a}\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;この番号にはラベル &lt;code&gt;\label&lt;/code&gt; を付けて参照することができる。
たとえば &lt;code&gt;\[E=mc^2 \tag{b}\label{eq-b}\]&lt;/code&gt; としておいて&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
\[E=mc^2 \tag{b}\label{eq-b}\]
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;このラベルを参照するには &lt;code&gt;\eqref{eq-b}&lt;/code&gt; でこのように →\eqref{eq-b}← できる（&lt;code&gt;$...$&lt;/code&gt; で囲まなくてもよい）&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:anc1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:anc1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&#34;数式に通し番号を振る&#34;&gt;数式に通し番号を振る&lt;/h3&gt;

&lt;p&gt;ページ内で通し番号を振りたい場合は，まず &lt;a href=&#34;http://docs.mathjax.org/en/latest/options/input-processors/TeX.html&#34; title=&#34;The TeX input processor — MathJax 2.7 documentation&#34;&gt;&lt;code&gt;TeX&lt;/code&gt;&lt;/a&gt; オプションで設定を変更する（オプション設定については&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-1/&#34; title=&#34;ちょこっと MathJax： 初期設定&#34;&gt;初期設定&lt;/a&gt;の回を参照）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;text/x-mathjax-config&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;MathJax&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;TeX&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;equationNumbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;autoNumber&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;AMS&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際に番号を振るには数式を &lt;code&gt;\[...\]&lt;/code&gt; で囲むのではなく &lt;code&gt;\begin{equation}...\end{equation}&lt;/code&gt; で囲む。
自動で番号が振られるので &lt;code&gt;\tag&lt;/code&gt; コマンドは不要である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;エネルギーと質量には
\begin{equation}
  E=mc^2 \label{eq-1st}
\end{equation}
の関係がある。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
エネルギーと質量には
\begin{equation}
  E=mc^2 \label{eq-1st}
\end{equation}
の関係がある。
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;参照も同様に →\eqref{eq-1st}← できる。&lt;/p&gt;

&lt;p&gt;余談だが &lt;code&gt;\begin&lt;/code&gt; と &lt;code&gt;\end&lt;/code&gt; で囲まれた領域を $\mathrm{\LaTeX}$  では「環境」と呼ぶ。
&lt;code&gt;\begin{foober}...\end{foober}&lt;/code&gt; なら「&lt;code&gt;foobar&lt;/code&gt; 環境」と呼んだりする。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;equation&lt;/code&gt; にアスタリスクを付けた &lt;code&gt;equation*&lt;/code&gt; 環境では，環境内の数式を自動採番の対象外にできる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:math1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:math1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;エネルギーと質量には
\begin{equation*}
  E=mc^2
\end{equation*}
の関係がある。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
エネルギーと質量には
\begin{equation*}
  E=mc^2
\end{equation*}
の関係がある。
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;equation&lt;/code&gt; 環境以外にも &lt;code&gt;align&lt;/code&gt; 環境や &lt;code&gt;gather&lt;/code&gt; 環境なども自動採番の対象となる（自動採番を無効にするアスタリスクも有効）。
&lt;code&gt;align&lt;/code&gt; 環境などで特定の式に番号を振りたくない場合は &lt;code&gt;\notag&lt;/code&gt; コマンドを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\begin{align}
  (a+b)^2 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^2+2ab+b^2 \\
  (a-b)^2 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^2-2ab+b^2  \notag \\
  (a+b)^3 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^3+3a^{2}b+3ab^2+b^3
\end{align}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
\begin{align}
  (a+b)^2 &amp;= a^2+2ab+b^2 \\
  (a-b)^2 &amp;= a^2-2ab+b^2  \notag \\
  (a+b)^3 &amp;= a^3+3a^{2}b+3ab^2+b^3
\end{align}
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;p&gt;とすればよい。
また複数の数式を &lt;code&gt;split&lt;/code&gt; 環境や &lt;code&gt;aligned&lt;/code&gt; 環境で囲むことで複数の数式の塊に一つの番号を振ることもできる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:math2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:math2&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;\begin{equation}
  \begin{split}
    (a+b)^2 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^2+2ab+b^2 \\
    (a-b)^2 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^2-2ab+b^2 \\
    (a+b)^3 &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;= a^3+3a^{2}b+3ab^2+b^3
  \end{split}
\end{equation}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure&gt;
&lt;blockquote&gt;
\begin{equation}
\begin{split}
  (a+b)^2 &amp;= a^2+2ab+b^2 \\
  (a-b)^2 &amp;= a^2-2ab+b^2 \\
  (a+b)^3 &amp;= a^3+3a^{2}b+3ab^2+b^3
\end{split}
\end{equation}
&lt;/blockquote&gt;&lt;/figure&gt;

&lt;h2 id=&#34;books&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774187054/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774187054/baldandersinf-22/&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;奥村 晴彦 黒木 裕介 &lt;/dd&gt;&lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798118141/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798118141.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;LaTeX2e辞典~用法・用例逆引きリファレンス (DESKTOP REFERENCE)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4535558752/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4535558752.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;公共政策入門 ミクロ経済学的アプローチ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4320112415/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4320112415.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Rで楽しむ統計 (Wonderful R 1)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4000298550/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4000298550.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;岩波データサイエンス Vol.5&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797391383/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797391383.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/積分を見つめて (数学ガールの秘密ノートシリーズ)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4000298569/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4000298569.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;岩波データサイエンス Vol.6&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798115363/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798115363.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;独習 LaTeX2ε&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4785315717/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4785315717.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;具体例から学ぶ 多様体&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774193046/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774193046.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;【改訂第3版】基礎からわかる情報リテラシー&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4768704700/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4768704700.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;はじめて学ぶリー群 ―線型代数から始めよう&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:book1&#34;&gt;「インライン数式」「別行立て数式」という言い回しは『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774187054/baldandersinf-22/&#34; title=&#34;Amazon | [改訂第7版]LaTeX2ε美文書作成入門 | 奥村 晴彦, 黒木 裕介 通販&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』を踏襲している。ちなみに “in-line math”, “displayed equations” は &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; のドキュメントでの言い回し。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:book1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:jm1&#34;&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/09/getting-started-mathjax-1/&#34; title=&#34;ちょこっと MathJax： 初期設定&#34;&gt;初期設定&lt;/a&gt;の回でも言及しているが &lt;code&gt;processEscapes&lt;/code&gt; はパラグラフ &lt;code&gt;&amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;&lt;/code&gt; 内でのみ有効なようだ。つまり &lt;code&gt;processEscapes&lt;/code&gt; が有効な状態では，パラグラフ内の &lt;code&gt;\(...\)&lt;/code&gt; や &lt;code&gt;\[...\]&lt;/code&gt; がエスケープされてしまうので注意すること。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:jm1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:bk2&#34;&gt;出典は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774187054/baldandersinf-22/&#34; title=&#34;Amazon | [改訂第7版]LaTeX2ε美文書作成入門 | 奥村 晴彦, 黒木 裕介 通販&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』より。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:bk2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:smsh1&#34;&gt;これも『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774187054/baldandersinf-22/&#34; title=&#34;Amazon | [改訂第7版]LaTeX2ε美文書作成入門 | 奥村 晴彦, 黒木 裕介 通販&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』を参考にした。いつもお世話になっています。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:smsh1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:anc1&#34;&gt;数式参照用の id は &lt;a href=&#34;https://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; で動的に生成されているので，ページ外からの参照はお勧めできない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:anc1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:math1&#34;&gt;実は &lt;code&gt;\[...\]&lt;/code&gt; は &lt;code&gt;equation*&lt;/code&gt; 環境と等価である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:math1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:math2&#34;&gt;&lt;code&gt;split&lt;/code&gt; 環境は自動採番の対象外である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:math2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>プログラミング言語の暗黙ルール — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2017/10/programmin-language-in-english/" />
		<id>tag:text.Baldanders.info,2017-10-25:/remark/2017/10/programmin-language-in-english/</id>
		<published>2017-10-25T12:32:16+09:00</published>
		<updated>2017-10-25T12:32:16+09:00</updated>
		<summary>これは Scrapbox に書いた記事の再構成です。内容はほぼ同じ</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;（これは &lt;a href=&#34;https://scrapbox.io/spiegel-branch/%E3%80%8C%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%80%8D%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&#34;&gt;Scrapbox に書いた記事&lt;/a&gt;の再構成です。内容はほぼ同じです）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/the-language-of-programming/&#34;&gt;プログラミング言語について | プログラミング | POSTD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;英語不得手な私としてはこの記事で延々と聞かせられる「愚痴」に深く同情はするが，しょせん「愚痴」は「愚痴」でしかない。&lt;/p&gt;

&lt;p&gt;これで思い出したのが「&lt;a href=&#34;http://jp.techcrunch.com/2016/05/17/20160510please-dont-learn-to-code/&#34; title=&#34;頼むからプログラミングを学ばないでくれ | TechCrunch Japan&#34;&gt;頼むからプログラミングを学ばないでくれ&lt;/a&gt;」である。
この記事については私も以前にブログ記事を書いた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/05/lets-programming/&#34;&gt;「だれもがプログラミングを学ぶべき」ではない&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちょうど「小学生の学校教育カリキュラムに『プログラミング』を導入する」などという頭の悪い教育政策を聞かされた頃だったので，反発する意味で書いたのだが&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;日本語や英語を習得するのに文法から習う人はいないだろう（日本の学校教育は違うかもw）。 たくさんの言葉を聞いて話して書いて読んで，そうして少しずつ語彙を飲み込んでいって習得していくものだ。&lt;br&gt;
プログラミング言語は違う。 プログラミング言語で決定的に重要なのは言語仕様つまり文法である。 何故ならプログラミングとは，究極的には，ゼロ知識から論理を積み上げていくことであり，プログラミング言語はそのための道具であり手段なのだ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/05/lets-programming/&#34;&gt;「だれもがプログラミングを学ぶべき」ではない&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;が主張の全てである。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;http://postd.cc/the-language-of-programming/&#34; title=&#34;プログラミング言語について | プログラミング | POSTD&#34;&gt;プログラミング言語について&lt;/a&gt;」で唯一面白かった指摘は，プログラミング言語には言語仕様とは別に暗黙的に決められているルールというか規範のようなものが存在するという点。
それが「名前」である。
この点については日本語圏でも参考になるページが色々ある。
たとえば以下のページ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.find-job.net/startup/english-for-engineers-naming-conventions&#34;&gt;正しいコーディングが身につくエンジニア英語の手引き 〜文法とクラス／メソッド、命名規則〜 | Find Job! Startup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/jnchito/items/459d58ba652bf4763820&#34;&gt;モデルやメソッドに名前を付けるときは英語の品詞に気をつけよう - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;にも「名前」に関する議論がある。
たとえば&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mattn.kaoriya.net/software/20160126101358.htm&#34;&gt;Big Sky :: Names&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のような話だが，ここでも英語の語彙が組み込まれている（ということに今気がついた）。&lt;/p&gt;

&lt;p&gt;つまり，英語圏で作られたプログラミング言語では暗黙的に英語の語彙を要求しているのである。
こればっかりはいくらプログラミングを勉強しても身につかないし，英語を無視して作ったものはまさに「&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E8%AA%9E%E3%81%AE%E9%83%A8%E5%B1%8B&#34; title=&#34;中国語の部屋 - Wikipedia&#34;&gt;中国語の部屋&lt;/a&gt;」と同じく機械的なものにならざるを得ない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lang1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:lang1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;だから若者たちよ。
悪いことは言わないから英語を習得しなはれ。
語彙を育むためには&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;たくさんの言葉を聞いて話して書いて読んで，そうして少しずつ語彙を飲み込んでいって習得していく&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/05/lets-programming/&#34;&gt;「だれもがプログラミングを学ぶべき」ではない&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;しかないのだ。
まぁ，私はこれが大変苦手なのだが。
だからこの歳でもいまだ英語不得手のままである。
とほほ。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/programming-language/&#34;&gt;プログラミング言語との付き合い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/09/programming/&#34;&gt;プログラミングで「計算論的思考」は身につかない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.codic.jp/2015/11/20/release-codic-atom-package/&#34;&gt;Codic ATOM Package - codic blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:lang1&#34;&gt;言い換えれば日本語のプログラミング言語は日本語の語彙を前提にしているわけで，そんなもん日本（語圏）人以外には使えない。ただでさえ日本語は難しいと外国語圏からは言われているのに。いまや IT 後進国の日本が自国語のプログラミング言語を作るとかヘソで茶が沸いてしまう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lang1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
