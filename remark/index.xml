<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>しっぽのさきっちょ — text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/remark/index.xml" />
	<id>tag:text.Baldanders.info,2015-11-07:/hugo</id>
	<updated>2015-11-07T22:01:10+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15-DEV</generator>

	
	<entry>
		<title>gibo による .gitignore 生成（再掲載） — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/gitignore-boilerplates/" />
		<id>tag:text.Baldanders.info,2015-11-07:/remark/2015/gitignore-boilerplates/</id>
		<published>2015-11-07T22:01:10+09:00</published>
		<updated>2015-11-07T22:01:10+09:00</updated>
		<summary>Git の repository を作る際に .gitignore をどうするかは悩みどころだが、 gibo というツールを使えば .gitignore の生成をかなり自動化できるらしい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;以前 &lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/45a4619aafcacc161521&#34;&gt;Qiita で書いた&lt;/a&gt;が，復習を兼ねて再掲載する。&lt;/p&gt;

&lt;p&gt;Git の repository を作る際に &lt;code&gt;.gitignore&lt;/code&gt; をどうするかは悩みどころだが（つか、大概は他の repository からコピってくるのだが）、 &lt;code&gt;gibo&lt;/code&gt; というツールを使えば &lt;code&gt;.gitignore&lt;/code&gt; の生成をかなり自動化できるらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simonwhitaker/gibo&#34;&gt;simonwhitaker/gibo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;導入方法は &lt;code&gt;README.md&lt;/code&gt; に書かれているが，実体はスクリプトのみなので，面倒くさいならプラットフォームごとにスクリプト・ファイル（Windows なら &lt;code&gt;gibo.bat&lt;/code&gt;）を取ってきてパスの通っているフォルダに放り込めばよい。
処理自体は簡単で， &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; で公開されているテンプレートを取ってきて単純に連結しているだけである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;以下は Windows での操作手順。
まずは動作確認と初期化から。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -v
gibo 1.0.4 by Simon Whitaker &amp;lt;sw@netcetera.org&amp;gt;
https://github.com/simonwhitaker/gitignore-boilerplates

C:&amp;gt;gibo -u
Cloning https://github.com/github/gitignore.git to C:\Users\username\AppData\Roaming\.gitignore-boilerplates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;C:\Users\username\AppData\Roaming\.gitignore-boilerplates&lt;/code&gt; に &lt;a href=&#34;https://github.com/github/gitignore&#34; title=&#34;github/gitignore&#34;&gt;github/gitignore&lt;/a&gt; の内容がセットされる。&lt;/p&gt;

&lt;p&gt;使用するにはコマンドラインに言語名やフレームワーク名を並べればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse
### java

*.class

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*


### eclipse

*.pydevproject
.metadata
.gradle
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath

# Eclipse Core
.project

# External tool builders
.externalToolBuilders/

# Locally stored &amp;quot;Eclipse launch configurations&amp;quot;
*.launch

# CDT-specific
.cproject

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Java annotation processor (APT)
.factorypath

# PDT-specific
.buildpath

# sbteclipse plugin
.target

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;出力は標準出力なので &lt;code&gt;.gitignore&lt;/code&gt; にリダイレクトしてあげればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo java eclipse &amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;既に &lt;code&gt;.gitignore&lt;/code&gt; があるのなら追記で OK。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo windows &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;対応している言語等が知りたければ &lt;code&gt;-l&lt;/code&gt; オプションを付けて起動すると一覧が表示される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:&amp;gt;gibo -l
=== Languages ===

Actionscript
Ada
Agda
Android
AppceleratorTitanium
AppEngine
ArchLinuxPackages
Autotools
C
C++
CakePHP
CFWheels
ChefCookbook
Clojure
CMake
CodeIgniter
CommonLisp
Composer
Concrete5
Coq
CraftCMS
CUDA
D
Dart
Delphi
DM
Drupal
Eagle
Elisp
Elixir
Elm
EPiServer
Erlang
ExpressionEngine
ExtJs
Fancy
Finale
ForceDotCom
Fortran
FuelPHP
Gcov
GitBook
Go
Gradle
Grails
GWT
Haskell
Idris
IGORPro
Java
Jboss
Jekyll
Joomla
KiCAD
Kohana
LabVIEW
Laravel
Leiningen
LemonStand
Lilypond
Lithium
Lua
Magento
Maven
Mercury
MetaProgrammingSystem
Nanoc
Nim
Node
Objective-C
OCaml
Opa
OpenCart
OracleForms
Packer
Perl
Phalcon
PlayFramework
Plone
Prestashop
Processing
Python
Qooxdoo
Qt
R
Rails
RhodesRhomobile
ROS
Ruby
Rust
Sass
Scala
SCons
Scrivener
Sdcc
SeamGen
SketchUp
Stella
SugarCRM
Swift
Symfony
SymphonyCMS
TeX
Textpattern
TurboGears2
Typo3
Umbraco
Unity
UnrealEngine
VisualStudio
VVVV
Waf
WordPress
Xojo
Yeoman
Yii
ZendFramework
Zephir

=== Global ===

Anjuta
Archives
BricxCC
Cloud9
CodeKit
CVS
DartEditor
Dreamweaver
Eclipse
EiffelStudio
Emacs
Ensime
Espresso
FlexBuilder
GPG
IPythonNotebook
JDeveloper
JetBrains
Kate
KDevelop4
Lazarus
LibreOffice
Linux
LyX
Matlab
Mercurial
MicrosoftOffice
ModelSim
Momentics
MonoDevelop
NetBeans
Ninja
NotepadPP
OSX
Otto
Redcar
Redis
SBT
SlickEdit
SublimeText
SVN
SynopsysVCS
Tags
TextMate
TortoiseGit
Vagrant
Vim
VirtualEnv
VisualStudioCode
WebMethods
Windows
Xcode
XilinxISE
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;とはいえ自分で処理を書くのは微妙に面倒くさいからね。このツールを作った方には感謝である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:32a1cbcb62001915d1d530155d7e0ff8:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>OpenPGP: First RFC4880bis Draft — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/openpgp-draft-rfc4880bis-first/" />
		<id>tag:text.Baldanders.info,2015-11-05:/remark/2015/openpgp-draft-rfc4880bis-first/</id>
		<published>2015-11-05T20:39:13+09:00</published>
		<updated>2015-11-07T22:01:10+09:00</updated>
		<summary>おおっ！ 次期 OpenPGP の最初のドラフトが登場している。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;おおっ！ 次期 OpenPGP の最初のドラフトが登場している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mailarchive.ietf.org/arch/msg/openpgp/uUKa8eQzWOh3quNElu0BDNrKi2o&#34;&gt;First 4880bis drafts&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/id/draft-koch-openpgp-rfc4880bis-00.txt&#34;&gt;OpenPGP Message Format draft-koch-openpgp-rfc4880bis-00&lt;/a&gt; （&lt;a href=&#34;https://tools.ietf.org/rfcdiff?url2=draft-koch-openpgp-rfc4880bis-00.txt&#34;&gt;差分&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/id/draft-koch-openpgp-rfc4880bis-01.txt&#34;&gt;OpenPGP Message Format draft-koch-openpgp-rfc4880bis-01&lt;/a&gt; （&lt;a href=&#34;https://tools.ietf.org/rfcdiff?url2=draft-koch-openpgp-rfc4880bis-01.txt&#34;&gt;差分&lt;/a&gt;）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;差分を簡単に見れるのは便利だな。&lt;/p&gt;

&lt;p&gt;Repository も公開されている。
以下の URI で取得すればよい。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone git://git.gnupg.org/people/wk/rfc4880bis.git
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://git.gnupg.org/cgi-bin/gitweb.cgi?p=people/wk/rfc4880bis.git&#34;&gt;git.gnupg.org Git - people/wk/rfc4880bis.git/summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現行の &lt;a href=&#34;https://tools.ietf.org/html/rfc4880&#34;&gt;RFC 4880&lt;/a&gt; が&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000356.shtml&#34;&gt;2007年にリリース&lt;/a&gt;され，その後に追加された日本国産の Camellia 暗号（&lt;a href=&#34;https://tools.ietf.org/html/rfc5581&#34;&gt;RFC 5581&lt;/a&gt;）や ECC（Elliptic Curve Cryptography; &lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34;&gt;RFC 6637&lt;/a&gt;）が今回ひとつに統合される。
以前 &lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000866.shtml&#34;&gt;SHA-3 が OpenPGP に組み込まれるかも&lt;/a&gt;，という話があったが，今のところドラフト版には記述がない感じ。
Fingerprint を SHA-2 ベースにするとかいう議論もあったような気がするが，これもないか？&lt;/p&gt;

&lt;p&gt;まぁ週末にでもゆっくり読むか。&lt;/p&gt;

&lt;h2 id=&#34;参考ページ:6e11b638507f03fa7e1d770f041fff8c&#34;&gt;参考ページ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書:6e11b638507f03fa7e1d770f041fff8c&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;第3版出た！ てか，もう Kindle 版出てるのか。紙の本買うのはやまったかなぁ。 SHA-3 や BitCoin/BlockChain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>今日の戯れ言： 人工知能で弁護士は絶滅するか — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/1103-diary/" />
		<id>tag:text.Baldanders.info,2015-11-03:/remark/2015/1103-diary/</id>
		<published>2015-11-03T22:05:33+09:00</published>
		<updated>2015-11-05T16:40:33+09:00</updated>
		<summary>人工知能で弁護士は絶滅するか / AI は「トロッコ問題」をどう解くか / TVer に拒否られた / Node v5.0.0 (Stable)</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;週末に書く予定だった記事。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#lawyer:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;人工知能で弁護士は絶滅するか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trolley-problem:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;AI は「トロッコ問題」をどう解くか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tver:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;TVer に拒否られた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#node:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;Node v5.0.0 (Stable)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;lawyer:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;人工知能で弁護士は絶滅するか&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2015/10/28/computers-replacing-lawyers/&#34;&gt;人工知能は弁護士を絶滅させていく：米国での調査結果 « WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いやぁ？ たぶん「弁護士」という名前の意味が変わるだけじゃないのかな。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://wirelesswire.jp/2015/10/47216/&#34;&gt;「ロボット」の語源は「奴隷（robata）」であり「労働（robota）」でもある&lt;/a&gt;そうだ。&lt;/p&gt;

&lt;p&gt;近代における「奴隷解放」は単に奴隷を解放しただけではなく，それまで奴隷がやっていた労働を一般に開放することを意味する。
これにより「労働」の意味が変わってしまった。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;375&#34; src=&#34;https://www.youtube-nocookie.com/embed/Ps6ck1ejoAw&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Ps6ck1ejoAw&#34;&gt;Smile, Charlie Chaplin , Modern Times, 1936 - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;さらに「ロボット」の台頭は，人々から，その（奴隷解放以後の）「労働」の一部を奪った。
しかも単に人間から「労働」の一部を奪っただけでなく，「労働」の意味が再び変節する。
現在「ロボット」に対抗できる労働者は，それこそ奴隷的な扱いを受けている人たち（たとえば日本なら黒い企業の従業員）だけだろう。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
「2013年以降、労働集約型の海外工場に比べて、自動化設備を積極的に導入した国内工場の方が労務費の面で安く抑えられている」
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://techon.nikkeibp.co.jp/atcl/news/15/102300871/&#34;&gt;「海外生産が安い」はもう古い、エプソンの国内回帰戦略 - 次世代工場 - 日経テクノロジーオンライン&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;同様に AI が本格的に台頭してくれば「労働」の意味が三たび変わる。
特に今まで「知的労働」と呼ばれていたものの一部はネガティブな意味になるかもしれない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0f43d6a6f718f2f8d8d2001cd183e172:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0f43d6a6f718f2f8d8d2001cd183e172:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
どれだけ知識や経験があろうとも，ただ入力に反応しているだけの「オートマトン（automaton）」な人は AI に絶滅させられる。&lt;/p&gt;

&lt;p&gt;これからは自分で問いを立て，そこから何かを生み出せる人でなければ食いっぱぐれる（または機械以下の階層で使役されるだけの存在になる）。
&lt;a href=&#34;https://medium.com/@spiegel/-8fcccfb661&#34; title=&#34;続ける（続いてる）だけではダメ — Medium&#34;&gt;もう一度引用する&lt;/a&gt;が&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「知識のストックに価値があった時代」から、ネットの普及による「知識や価値を生み出す力なしには生き残れない時代」への大転換&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;を迫られている，ということだ。
年寄りにはキツい話だが，しょうがない。&lt;/p&gt;

&lt;h2 id=&#34;trolley-problem:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;AI は「トロッコ問題」をどう解くか&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogos.com/article/142284/&#34;&gt;完全自動運転自動車とトロッコ問題について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あー。
これって「&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00O1VK072/baldandersinf-22/&#34;&gt;われはロボット&lt;/a&gt;」だよね。&lt;/p&gt;

&lt;p&gt;明らかに「正しい解」がない場合，いくつかの近似解の中から妥当と思われるものを選ぶしかない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0f43d6a6f718f2f8d8d2001cd183e172:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0f43d6a6f718f2f8d8d2001cd183e172:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
でも，どの解を選んでも結局「正しい解」ではないのだ。
だから人は葛藤し，さらに後悔する。
「緊急避難」というのは「正しい解」が存在しない場合に「近似解でいいんだよ」ということを法的に担保するものだ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:0f43d6a6f718f2f8d8d2001cd183e172:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:0f43d6a6f718f2f8d8d2001cd183e172:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;AI は（今のところ）近似解に葛藤したりしない。
もちろん後悔だってしない。
その解に辿り着いたのは，機械が自ら考えたのではなく，あくまでも設定された（あるいは構築された）論理に沿って必然的に導かれたものだから（たとえその道筋が人には理解できないものだとしても）。
じゃあ機械が導き出した解を実行した結果の責任は誰が取るの？ ってことである。&lt;/p&gt;

&lt;p&gt;もし AI が近似解に葛藤することがあるなら，それは「知性」が新しい階梯に進んだことを意味する。&lt;/p&gt;

&lt;h3 id=&#34;参考:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/ta26/20151104&#34;&gt;自動運転車の法律問題を総括すると見えてくる難解な課題 - 風観羽　情報空間を羽のように舞い本質を観る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tver:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;TVer に拒否られた&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=jp.hamitv.hamiand1&#34;&gt;民放公式テレビポータル「TVer（ティーバー）」 - Google Play&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://appllio.com/20151026-7241-tver-app&#34;&gt;民放キー局5社の無料見逃し配信「TVer」アプリが登場 | アプリオ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだ対応している番組は少ないそうだが，面白そうなのでインストールしようとしたら Nexus 7 は対応してないと言われた。
どうやらスマホだけ？ らしい。
なにそれ。
やっぱテレビは糞だな。
スマホでちまちま動画なんか見てられねーよ！&lt;/p&gt;

&lt;p&gt;まぁ Hulu である程度見れるし，見れない番組は大きな声では言えないサイトで見ればいいや。&lt;/p&gt;

&lt;h2 id=&#34;node:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;Node v5.0.0 (Stable)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v5.0.0/&#34;&gt;Node v5.0.0 (Stable) | Node.js&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zakiko/items/f1e6db17e243667b8513&#34;&gt;Node v5.0.0 (stable) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/15/nodejs_50.html&#34;&gt;Node.js 5.0がリリース。奇数バージョンは最新機能版、偶数バージョンは長期サポート版 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/LTS/&#34;&gt;LTS (Long-term Support)&lt;/a&gt; の 4.2（11月4日時点の最新は v4.2.2）とは別に v5.0.0 が登場。
LTS 版って Firefox で言うところの &lt;a href=&#34;http://www.mozilla.jp/business/downloads/&#34;&gt;ESR (Extended Support Release) 版&lt;/a&gt;みたいなものかな？&lt;/p&gt;

&lt;p&gt;まだ v4 すら試してないんだよなぁ。
そもそも ECMAScript 2015 (ES6) に脳みそが追いついてない。
なんとかしないとなぁ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/LightSpeedC/items/9dd46c456e7bbdb1c857&#34;&gt;JavaScript ES6 (ES2015) 移行に関する覚書 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v4.2.2/&#34;&gt;Node v4.2.2 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書:0f43d6a6f718f2f8d8d2001cd183e172&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00O1VK072/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51UzGYXJ70L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00O1VK072/baldandersinf-22/&#34;&gt;われはロボット〔決定版〕&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;アイザック アシモフ 小尾芙佐 &lt;/dd&gt;&lt;dd&gt;早川書房 2014-04-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00O2O7JFY/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00O2O7JFY.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;鋼鉄都市&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00N4FBCR8/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00N4FBCR8.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;第二ファウンデーション&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00N4FBCUU/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00N4FBCUU.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ファウンデーション対帝国&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00N4FBCO6/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00N4FBCO6.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ファウンデーション&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00N4FBCQO/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00N4FBCQO.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;サリーはわが恋人&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;ロボットや AI の SF ならこれが古典で定番か？ 面白かったら続けて『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00O2O7JFY/baldandersinf-22/&#34;&gt;鋼鉄都市&lt;/a&gt;』も読むとよい。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-11-03&#34;&gt;2015-11-03&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:0f43d6a6f718f2f8d8d2001cd183e172:a&#34;&gt;「プログラマ」とかね。まぁ日本では既にプログラマを「IT 土方」とか言ったりするけど（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0f43d6a6f718f2f8d8d2001cd183e172:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0f43d6a6f718f2f8d8d2001cd183e172:b&#34;&gt;もちろん「何も選ばない」というのも選択肢のひとつである。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0f43d6a6f718f2f8d8d2001cd183e172:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:0f43d6a6f718f2f8d8d2001cd183e172:c&#34;&gt;しかし，法的に担保されているからといって倫理・道徳的に問題がないとは限らない。しかも倫理観・道徳観念というのは，特に個人主義が進んだ現代では，かつての「大きな物語（meta-narrative）」ほどには機能しない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:0f43d6a6f718f2f8d8d2001cd183e172:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS で Lua — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/nyagos-and-lua/" />
		<id>tag:text.Baldanders.info,2015-11-02:/remark/2015/nyagos-and-lua/</id>
		<published>2015-11-02T21:41:54+09:00</published>
		<updated>2015-11-05T16:35:59+09:00</updated>
		<summary>前回，ConEmu とともに NYAGOS を導入したけど，今回は NYAGOS のセッティングを中心に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;前回&lt;/a&gt;， &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; とともに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入したけど，今回は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; のセッティングを中心に。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の特徴のひとつに， &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のエンジンを内蔵し解釈できる点がある。
というか &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 自身が機能拡張を &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; で実装していて，ユーザも hackable に &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をカスタマイズできる。&lt;/p&gt;

&lt;p&gt;また &lt;code&gt;nyagos.exe&lt;/code&gt; を &lt;code&gt;-f&lt;/code&gt; オプションを付けて起動すると &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; のソースファイルをスクリプトとして実行できる。
たとえば以下のコード &lt;code&gt;hello.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;print &amp;quot;Hello World!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:&amp;gt;nyagos.exe -f hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;これだけだと大したことはないが， &lt;code&gt;nyagos.exe&lt;/code&gt; でスクリプトを実行した場合は &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張が使える。
例えばカレント・フォルダを取得する &lt;code&gt;getwd.lua&lt;/code&gt; を以下のように記述し&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;nyagos.write(nyagos.getwd()..&amp;quot;\n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;nyagos.exe&lt;/code&gt; で実行すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\Users\username&amp;gt;nyagos.exe -f getwd.lua
C:\Users\username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; 拡張については &lt;a href=&#34;https://github.com/zetamatta/nyagos/blob/master/Doc/nyagos_ja.md&#34;&gt;NYAGOS のドキュメント&lt;/a&gt;を参照するとよいだろう。
特筆すべきは &lt;code&gt;alias&lt;/code&gt; 機能で，単純なコマンドの置き換えだけでなく&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nyagos.alias.cmdname = function(args) ... end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;のような形式で新しい内部コマンドを作成することもできる。&lt;/p&gt;

&lt;p&gt;ところで &lt;code&gt;nyagos.exe&lt;/code&gt; を普通に起動して &lt;code&gt;ls -oF&lt;/code&gt; コマンドでファイルの一覧を表示させてみると，拡張子 &lt;code&gt;.lua&lt;/code&gt; のファイルは実行可能ファイルになっていることが分かる。
ただ，実際に起動しようとすると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~&amp;gt; hello.lua
&#39;lua&#39; is not recognized as an internal or external command,
operable program or batch file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と怒られた。
どうやら &lt;code&gt;lua&lt;/code&gt; コマンドがねーよ，と言っているらしい（確かに &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の実行モジュールは入れてないのだが）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; をインストールしたフォルダにある &lt;code&gt;nyagos.d\suffix.lua&lt;/code&gt; ファイルの末尾あたりを見ると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;suffix.pl=&amp;quot;perl&amp;quot;
if nyagos.which(&amp;quot;ipy&amp;quot;) then
  suffix.py=&amp;quot;ipy&amp;quot;
elseif nyagos.which(&amp;quot;py&amp;quot;) then
  suffix.py=&amp;quot;py&amp;quot;
else
  suffix.py=&amp;quot;python&amp;quot;
end
suffix.rb=&amp;quot;ruby&amp;quot;
suffix.lua=&amp;quot;lua&amp;quot;
suffix.awk={&amp;quot;awk&amp;quot;,&amp;quot;-f&amp;quot;}
suffix.js={&amp;quot;cscript&amp;quot;,&amp;quot;//nologo&amp;quot;}
suffix.vbs={&amp;quot;cscript&amp;quot;,&amp;quot;//nologo&amp;quot;}
suffix.ps1={&amp;quot;powershell&amp;quot;,&amp;quot;-file&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっていて，拡張子 &lt;code&gt;.lua&lt;/code&gt; のファイルが &lt;code&gt;lua&lt;/code&gt; コマンドに関連付けられているのが分かる。
ってことは，これを &lt;code&gt;nyagos.exe&lt;/code&gt; に書き換えればいいわけだ。
とはいえ &lt;code&gt;nyagos.d\suffix.lua&lt;/code&gt; ファイルを直接いじるわけにはいかないので（バージョンアップのたびに上書きされる）， &lt;code&gt;%HOME%&lt;/code&gt; または &lt;code&gt;%HOMEPATH%&lt;/code&gt; フォルダにある &lt;code&gt;.nyagos&lt;/code&gt; ファイルに以下の記述を追加する&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt; suffix.lua={&amp;quot;nyagos.exe&amp;quot;,&amp;quot;-f&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで &lt;code&gt;nyagos.exe&lt;/code&gt; を起動し直して &lt;code&gt;hello.lua&lt;/code&gt; ファイルを実行してみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~&amp;gt; hello.lua
Hello World!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;おおっ，うまくいった。
これで &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; スクリプトを &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; 上でバッチファイルのように扱うことができる。&lt;/p&gt;

&lt;p&gt;さぁて，これでいよいよもって &lt;a href=&#34;http://www.lua.org/&#34; title=&#34;The Programming Language Lua&#34;&gt;Lua&lt;/a&gt; の勉強をしないといけなくなった。
Pascal 系の構文は目が滑るんだよなぁ。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク:2947fb7ea07389eeb0d261554825324c&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;h3 id=&#34;nyagos-作者による解説:2947fb7ea07389eeb0d261554825324c&#34;&gt;NYAGOS 作者による解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/a49e3a40201511128508&#34;&gt;環境変数PATHが長すぎて、追加したパスが有効にならないぜ！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c4ad3cc55c5afa74da63&#34;&gt;nyagosスクリプト解説 - svn のサブコマンドを勝手に拡張する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/29a85695813926cafd2c&#34;&gt;nyagosスクリプト解説 - ezoe.lua「コマンドではない。」 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/cdff310f53faf3369e48&#34;&gt;nyagosスクリプト解説 - 逆クォートによるコマンド出力展開編(backquote.lua) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/c08586c85fa73c182a7a&#34;&gt;nyagosスクリプト解説 - CMD.EXEで化けさせず、nyagosの中だけプロンプトをカラー化 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/89a907f4bd46d1750c31&#34;&gt;nyagosスクリプト解説 - VisualStudio れんけー - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zetamatta/items/1fe83f736b0254e02415&#34;&gt;git 付属のPerlやunzipとかを使いたいけどsort,find,lnとかは要らない - Qiita&lt;/a&gt; &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lua-の解説:2947fb7ea07389eeb0d261554825324c&#34;&gt;Lua の解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yohshiy.blog.fc2.com/blog-entry-291.html&#34;&gt;Lua の Windows へのインストールと使い方 | プログラマーズ雑記帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://densan-labs.net/tech/lua/index.html&#34;&gt;Luaプログラミング入門 | densan-labs.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ie.u-ryukyu.ac.jp/~e085739/lua.hajime.html&#34;&gt;高速スクリプト言語 Lua を始めよう — WTOPIA v1.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://handasse.blogspot.com/2010/02/lua.html&#34;&gt;良いもの。悪いもの。: Lua基礎文法最速マスター&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://noriko3.blog42.fc2.com/blog-entry-128.html&#34;&gt;紀子さん＠へぼぷろぐらまの日常 | Luaで日付時間操作。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://symfoware.blog68.fc2.com/blog-entry-454.html&#34;&gt;Luaでファイルの読み書きを行なう - Symfoware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://torus.jp/memo/x200907/lua-coroutine.rd.html&#34;&gt;Lua のコルーチンの使い方〜基本編〜 : torus solutions!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;code&gt;suffix&lt;/code&gt; ではなく &lt;code&gt;alias&lt;/code&gt; で &lt;code&gt;lua&lt;/code&gt; コマンドを定義する手もある。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2947fb7ea07389eeb0d261554825324c:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;最近の &lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git for Windows&lt;/a&gt; は bash 関連のコマンドを &lt;code&gt;Git\usr\bin&lt;/code&gt; フォルダに集めている。 git コマンドだけが必要なら &lt;code&gt;Git\cmd&lt;/code&gt; フォルダにのみパスを通せばよい。 bash を使う場合は &lt;code&gt;Git\bin&lt;/code&gt; フォルダにある &lt;code&gt;bash.exe&lt;/code&gt; を起動するのが一番安全なようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2947fb7ea07389eeb0d261554825324c:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Google Books の Library Book Scan すら Fair Use と言われたのに... — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/google-books-library-project/" />
		<id>tag:text.Baldanders.info,2015-11-01:/remark/2015/google-books-library-project/</id>
		<published>2015-11-01T21:37:18+09:00</published>
		<updated>2015-11-07T22:01:10+09:00</updated>
		<summary>今回の判決について，大原ケイさんの「グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題」を参照しながら簡単に紹介する。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;h2 id=&#34;事の発端は:ec10c53607c9618a0e04a465d986df55&#34;&gt;事の発端は&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Google Books の &lt;a href=&#34;https://www.google.com/googlebooks/library/&#34; title=&#34;Google Books Library Project – Google Books&#34;&gt;Library Project&lt;/a&gt; において米国内の図書館（ハーバード大学図書館など）の蔵書を著作権の有無にかかわらずデジタル化し，検索できるようにしようとしたことである。&lt;/p&gt;

&lt;p&gt;当然のように米国内の作家ギルド（The Authors Guild）や全米出版社協会は反発し，集団訴訟を起こした。
この和解案が示されたのが2009年2月だが，その内容に世界中が騒然となった。
それは Google にとって大幅に有利な内容であるとともに米国内の作家のみならず世界中の作家に影響をおよぼすものであったからだ。
もちろんそれには日本の作家も含まれる。&lt;/p&gt;

&lt;p&gt;この辺の話は名和小太郎さんの「&lt;a href=&#34;https://www.jstage.jst.go.jp/article/johokanri/53/3/53_3_131/_article/-char/ja/&#34;&gt;グーグル・ブック・サーチ，あるいはバベルの図書館 新しいぶどう酒は新しい革袋に&lt;/a&gt;」で詳しく解説されている。
つまり Google が提示する著作権システムは「新しい革袋」を要求しているということだ。
「古い革袋」と「新しい革袋」を対比した表があるので以下に引用してみる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ec10c53607c9618a0e04a465d986df55:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ec10c53607c9618a0e04a465d986df55:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;

&lt;table&gt;
  &lt;tr&gt;
    &lt;th colspan=&#34;2&#34;&gt;&lt;/th&gt;
    &lt;th&gt;古い革袋&lt;/th&gt;
    &lt;th&gt;新しい革袋&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan=&#34;3&#34;&gt;原則&lt;/td&gt;
    &lt;td&gt;人格的な権利&lt;/td&gt;
    &lt;td&gt;不可欠&lt;/td&gt;
    &lt;td&gt;有効利用が前提&lt;br&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;経済的な権利&lt;/td&gt;
    &lt;td&gt;許諾権&lt;/td&gt;
    &lt;td&gt;報酬請求権&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;権利の取得&lt;/td&gt;
    &lt;td&gt;無条件&lt;/td&gt;
    &lt;td&gt;登録が条件&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan=&#34;3&#34;&gt;その他&lt;/td&gt;
    &lt;td rowspan=&#34;2&#34;&gt;保護の対象&lt;/td&gt;
    &lt;td&gt;エリートの閃き&lt;/td&gt;
    &lt;td&gt;投資も&lt;br&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;原著作物が主&lt;/td&gt;
    &lt;td&gt;二次的著作物が重要&lt;br&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;対価&lt;br&gt;&lt;/td&gt;
    &lt;td&gt;ユーザ負担&lt;/td&gt;
    &lt;td&gt;第三者負担も，無償も&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;figcaption&gt;古い革袋 対 新しい革袋&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;特に「経済的な権利」について「新しい革袋」では「報酬請求権」となっているが，これは要するに著作物の利用をオプトアウトで行いましょうというもので，これまでの著作権システムと真っ向から対立する。
それだけ &lt;a href=&#34;https://www.google.com/googlebooks/library/&#34; title=&#34;Google Books Library Project – Google Books&#34;&gt;Library Project&lt;/a&gt; はインパクトのある内容だったのである。&lt;/p&gt;

&lt;p&gt;しかし2011年にニューヨーク地方裁判所がこの和解の承認を拒否。
訴訟は振り出しに戻ってしまった。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;そして2013年にようやく発表された判決は、著者協会側の言い分を全面的に却下、本をスキャンしてデジタル化するのはフェア・ユースの範囲内なので、グーグルは無罪、というもの。
電子書籍黎明期にあって、原告が主張するように、心配されていたことも多々あったけれど、とりあえずこれだけの時間が経ってようやく、デジタル化された本のデータが実際にどう使われるかが見えてきたところで、グーグルのプロジェクトは「フェア・ユース」の範囲内であり、著作権侵害に当たらないという判断が下せるようになった、ということでしょう。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;要するに，和解案で言われていたオプトアウト云々以前に（Google が主張した通り） fair use でええやん，ということになった。
これはある意味すごいことで，和解案で天地がひっくり返りそうになっていたところを fair use として認めることで最小限のインパクトに抑えているのである。&lt;/p&gt;

&lt;p&gt;駄菓子菓子，作家ギルドはこれを不服とし第2巡回区連邦控訴裁判所（日本でいうところの高等裁判所）に上訴した。
その結果が今回の判決である。
だぁ，前置きが長すぎた。&lt;/p&gt;

&lt;h2 id=&#34;本当に-library-project-は-fair-use-か:ec10c53607c9618a0e04a465d986df55&#34;&gt;本当に Library Project は Fair Use か&lt;/h2&gt;

&lt;p&gt;以降は大原ケイさんの「&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題&lt;/a&gt;」を参照しながら簡単に紹介する。&lt;/p&gt;

&lt;p&gt;米国で fair use が成立するためには以下の観点において「公正」であることが認められなければならない。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;利用の目的や本質&lt;/li&gt;
&lt;li&gt;原作品の本質&lt;/li&gt;
&lt;li&gt;抜粋の量や実質性&lt;/li&gt;
&lt;li&gt;原作品の価値への影響&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;利用の目的や本質&lt;/strong&gt;： &lt;a href=&#34;https://www.google.com/googlebooks/library/&#34; title=&#34;Google Books Library Project – Google Books&#34;&gt;Library Project&lt;/a&gt; の目的は本の内容をまるっと見せることではなく「本についての情報」を検索可能にすることである。したがって著作権の切れていない著作物については全文を見れるようにはなっていない。
紙の本で出来なかった「書籍を横断的に検索する」という機能が transformative であるということらしい。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;原作品の本質&lt;/strong&gt;： 集団訴訟の代表者の作品はいずれもノンフィクションだったけど，「事実を書いてるだけだから著作権はない」なんてことはなく，原作品にもちゃんと著作権はあるという確認。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;抜粋の量や実質性&lt;/strong&gt;： 先ほど書いたように&lt;a href=&#34;https://www.google.com/googlebooks/library/&#34; title=&#34;Google Books Library Project – Google Books&#34;&gt;Library Project&lt;/a&gt; では本の全文を見ることは出来ない。
でも検索を可能にするためには全文スキャンしなきゃいけないわけで，それを以って違法とはいえないだろうという判断。
ちなみに&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;短すぎて、数行表示されただけで用が済んでしまうコンテンツ、例えば料理のレシピとか、辞書とか、詩歌や俳句などはブックスキャンのsnippetサービスから除外されています。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なんだそうだ。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;原作品の価値への影響&lt;/strong&gt;： 今回の件では，ここが一番重要だろう。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;つまり、グーグルで検索できることで、調べ物をするのにこの本は要らないや、という判断になることもあり、その分、著者の儲けが減るという可能性もあるだろうけど、全体的に見れば、一部閲覧という形でその本についての情報が得られれば、その情報に基いて本を買う、という判断もあるわけで、原告が主張するように、グーグルで見られるから買わなくなるとばかりは言えないよね、という判断。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というわけで， Google の全面勝訴とあいなった。
作家ギルドは最高裁までいこうとしているようだが，まぁもう決まりだろう。&lt;/p&gt;

&lt;p&gt;記事中で大原ケイさんが書かれている&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;今回の控訴審の判決文を読んで、なるほどなぁ、と思わされたのが「なぜ著作権というものがあって、それを法律で保護するのか」を憲法に基いて再確認しているところ。
もちろん、一義的には、「何かしらクリエイティブなものを生み出した人（＝本を書いた人）が、それを広めるときにそれなりの見返りが得られるようにして、そのクリエイティブな活動を奨励するため」なのですが、広義的・根本的には「すべての人々が知の恩恵を受けられるように、何かを生み出した当人の著作権を認めてその知を広める」ということで、あくまでも「公益」を守るためなんだなぁということがわかります。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;という部分はその通りで，表現やアイデアは基本的に「公衆のもの」であるという点は外すことなく，その上で表現やアイデアを生み出す人たちも幸せになれるにはどうしたらいいか，を考えていかなければならない。
だから表現やアイデアを「私有化」するという方向は基本的にありえないのである。&lt;/p&gt;

&lt;p&gt;ちなみに日本ではこのような判決にはならないだろう。
あらゆる本のスキャンとその検索サービスの提供は国立国会図書館にだけ与えられた特権であり，他の法人・個人には許容されない。
許容するためには著作権法を修正しなければならない。
Fair use のない日本が如何に時代に取り残されつつあるか分かると思う。&lt;/p&gt;

&lt;h2 id=&#34;一方-その頃日本では:ec10c53607c9618a0e04a465d986df55&#34;&gt;一方，その頃日本では&lt;/h2&gt;

&lt;p&gt;まだ「図書館のせいで本が売れない」とか駄々をこねてるようで。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/sp/t_hayashi/35072745/&#34;&gt;「本が売れぬのは図書館のせい」というニュースを見たのでデータを確かめてみました - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちなみに&lt;a href=&#34;http://www3.grips.ac.jp/~ip/paper.html&#34;&gt;政策研究大学院大学の修士論文&lt;/a&gt;に「&lt;span&gt;&lt;a href=&#34;http://www3.grips.ac.jp/~ip/pdf/paper2011/MJI11004nakase.pdf&#34;&gt;公立図書館における書籍の貸出が売上に与える影響について&lt;sup&gt;&lt;i class=&#34;fa fa-file-pdf-o&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;」という論文があるが，分析結果の解釈として&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;分析結果から、図書館による書籍の貸出は、売上に対して、正の影響を与えていることが実証された。
この結果を踏まえれば、貸出を減少させるような行為は、却って売上を減少させることになるため、著作者にとっても不本意な結果をもたらすことになるだろう。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www3.grips.ac.jp/~ip/pdf/paper2011/MJI11004nakase.pdf&#34;&gt;公立図書館における書籍の貸出が売上に与える影響について&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;と結ばれている。
まぁ，この論文には保留されている問題もあるようなので，鵜呑みには出来ないけど。&lt;/p&gt;

&lt;p&gt;本をよく買う人ってのは，自分で買う以上に本を読む人なんだよね。
もしくは蒐集家か。
私なんか子どもの頃は一晩で文庫本8冊くらいなら読める人だったけど（もっと読む人もいた），子どもがそんなに本買えるわけないじゃん。
だからほとんど毎日学校の図書館に通ってたし，ほぼ毎週県立図書館にも通っていた&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ec10c53607c9618a0e04a465d986df55:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ec10c53607c9618a0e04a465d986df55:c&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
本を読む習慣を身につけられるのは子どものうちなんだよ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ec10c53607c9618a0e04a465d986df55:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ec10c53607c9618a0e04a465d986df55:b&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;本を読む習慣のない人は本を買わないし，音楽を聴く習慣のない人は音楽を買わないのだ。
そんな当たり前のことが何故わからない。&lt;/p&gt;

&lt;h2 id=&#34;参考文献:ec10c53607c9618a0e04a465d986df55&#34;&gt;参考文献&lt;/h2&gt;

&lt;h3 id=&#34;参考になるページ:ec10c53607c9618a0e04a465d986df55&#34;&gt;参考になるページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/article/NEWS/20110323/358605/&#34;&gt;ニュース - Google Booksめぐる集団訴訟、連邦地裁が修正和解案を認めず：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/article/NEWS/20130924/506405/&#34;&gt;ニュース - Google、「Google Books」を巡る訴訟でフェアユースを主張&amp;mdash;米英メディアの報道：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/article/NEWS/20131115/518222/&#34;&gt;ニュース - 「Google Books」を巡る係争でGoogleが勝利、フェアユースの主張が認められる：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/news/15/101903421/&#34;&gt;ニュース - 「Google Booksは著作権法に違反せず」米控訴裁、地裁判断を支持：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/lingualina/n/n8e6589a8262b&#34;&gt;グーグル勝訴で浮き彫りになる「フェア・ユース」と著作権（とたぶんTPP）の問題｜りんがる｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2015/10/29/google-books-wins-over-the-authors-guild/&#34;&gt;グーグル勝訴で浮き彫りになるフェア・ユースと著作権の問題 « マガジン航&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考図書:ec10c53607c9618a0e04a465d986df55&#34;&gt;参考図書&lt;/h3&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757102852/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41YkbcP5IyL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757102852/baldandersinf-22/&#34;&gt;著作権２．０ ウェブ時代の文化発展をめざして (NTT出版ライブラリー―レゾナント)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;名和 小太郎 &lt;/dd&gt;&lt;dd&gt;エヌティティ出版 2010-06-24&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4569812902/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4569812902.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;著作権法がソーシャルメディアを殺す (PHP新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4334037070/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4334037070.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;「ネットの自由」vs.著作権: TPPは、終わりの始まりなのか (光文社新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4087202941/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4087202941.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;著作権とは何か―文化と創造のゆくえ (集英社新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4166608347/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4166608347.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビジネスパーソンのための契約の教科書 (文春新書 834)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798119806/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798119806.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;REMIX ハイブリッド経済で栄える文化と商業のあり方&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;名著です。今すぐ買うべきです。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-02&#34;&gt;2014/08/02&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ec10c53607c9618a0e04a465d986df55:a&#34;&gt;余談だがこの表は &lt;a href=&#34;http://www.tablesgenerator.com/&#34;&gt;TablesGenerator.com&lt;/a&gt; で作図した。ちょー便利！
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ec10c53607c9618a0e04a465d986df55:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ec10c53607c9618a0e04a465d986df55:c&#34;&gt;そうして大人になって自分で本や CD が買えるようになると部屋が魔窟になるわけやね（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ec10c53607c9618a0e04a465d986df55:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ec10c53607c9618a0e04a465d986df55:b&#34;&gt;そういや，最近の子どもは漫画の読み方を知らないと聞く。まぁ読んだことないものは読めないよね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ec10c53607c9618a0e04a465d986df55:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>2015年10月の Flattr もしくは「Flattr × GitHub ＝ ♥」 — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/flattred-in-October-2015/" />
		<id>tag:text.Baldanders.info,2015-11-01:/remark/2015/flattred-in-October-2015/</id>
		<published>2015-11-01T12:25:49+09:00</published>
		<updated>2015-11-01T16:23:00+09:00</updated>
		<summary>10月の flattr は4件。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;2015年10月分の &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; Report が来た。
10月の &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; は4件。
うち1件は Instagram で follow している人へ。
残りは以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;(https://flattr.com/thing/114786/timestamp/1443655861&#34; title=&#34;SETI@home - Flattr.com&#34;&gt;SETI@home&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flattr.com/thing/65556/timestamp/1446043319&#34; title=&#34;W3C Validator - Flattr.com&#34;&gt;W3C Validator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flattr.com/thing/2002773/timestamp/1446121725&#34; title=&#34;Maximus5/ConEmu on GitHub - Flattr.com&#34;&gt;Maximus5/ConEmu on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;(https://flattr.com/thing/114786/timestamp/1443655861&#34; title=&#34;SETI@home - Flattr.com&#34;&gt;SETI@home&lt;/a&gt; は Subscription で登録しているので自動的に毎月 &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; される。
&lt;a href=&#34;https://flattr.com/thing/65556/timestamp/1446043319&#34; title=&#34;W3C Validator - Flattr.com&#34;&gt;W3C Validator&lt;/a&gt; はこのサイトを構築時にお世話になったので。
基本的にこのサービスを使う際には &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; するようにしている。
&lt;a href=&#34;https://flattr.com/thing/2002773/timestamp/1446121725&#34; title=&#34;Maximus5/ConEmu on GitHub - Flattr.com&#34;&gt;Maximus5/ConEmu&lt;/a&gt; は&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;前回導入した&lt;/a&gt;時に &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; した。&lt;/p&gt;

&lt;h2 id=&#34;flattr-github:dcc45919474cada287677f839230acb9&#34;&gt;Flattr × GitHub ＝ ♥&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; については本家ブログで紹介したことがあるが，ここでもう一度紹介しておく。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; は “Social microdonation” などと呼ばれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flattr.com/howflattrworks&#34;&gt;How Flattr Works - Flattr.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/jp/news/2010/06/flattr&#34;&gt;どうやって著者にお金を払うか：マイクロペイメントサービスFlattr&lt;/a&gt; : 現在は招待は不要&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;日本語で一番ニュアンスが近い言葉は「投げ銭」だろう。
ただし，他の投げ銭サービスと違って， &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; では月々の寄付額（monthly budget&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dcc45919474cada287677f839230acb9:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dcc45919474cada287677f839230acb9:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）が決まっていて，それを &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; したもの（&lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; では “thing” と呼んでいる）で山分けする仕組みになっている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dcc45919474cada287677f839230acb9:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dcc45919474cada287677f839230acb9:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
これは寄付する側にとってはコントロールしやすいよい仕掛けだ。
逆に寄付を受ける側にとっては如何に &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; を集めるかが鍵となる。
ちなみに “thing” は URL で指示できるものであればなんでもよい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; は他のソーシャル・サービスと連携している。
現在連携しているサービスは以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://500px.com/&#34;&gt;500px&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://app.net/&#34;&gt;App.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://instagram.com/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/&#34;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/&#34;&gt;Vimeo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのサービスとアカウントを連携している場合， “auto flattring” を ON にすれば， like や ☆（star）などをする度に自動的に &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; される（ただし，相手側もアカウントを連携していることが条件）&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dcc45919474cada287677f839230acb9:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dcc45919474cada287677f839230acb9:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
私はプログラマなので，是非 &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; と &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; を連携させることをお勧めする。&lt;/p&gt;

&lt;p&gt;寄付は消費ではない。
個々人の意思による明確な&lt;a href=&#34;http://shinta.tea-nifty.com/nikki/2005/01/donation.html&#34;&gt;社会参加&lt;/a&gt;の形である。
自身がいいと思うもの（あるいは関心があるもの）に対してそうであると表明し，さらにそれが行動へと変わって何らかの形になっていく。
そういうことがもっと自然にできるようになればいいと思う。
だってネットなんだから。&lt;/p&gt;

&lt;h2 id=&#34;参考ページ:dcc45919474cada287677f839230acb9&#34;&gt;参考ページ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000507.shtml&#34;&gt;Flattr で寄付するついでに&amp;hellip; — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000631.shtml&#34;&gt;Like でチャリ～ン — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:dcc45919474cada287677f839230acb9:a&#34;&gt;&lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;Flattr&lt;/a&gt; の決済通貨はユーロである。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dcc45919474cada287677f839230acb9:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:dcc45919474cada287677f839230acb9:b&#34;&gt;ただし，寄付金の全てが相手に渡るのではなく，手数料が引かれる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dcc45919474cada287677f839230acb9:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:dcc45919474cada287677f839230acb9:c&#34;&gt;Facebook と Twitter には残念ながらこの機能はない。まぁ，もしあったら like する度にチャリンチャリンなって大変だろうけど。 Twitter に関しては，以前は &lt;a href=&#34;http://superfav.de/&#34;&gt;SuperFav&lt;/a&gt; 経由で &lt;a href=&#34;https://flattr.com/&#34; title=&#34;Flattr - Social microdonations&#34;&gt;flattr&lt;/a&gt; できたが，現在はこのサイト自体が存在しないらしい？
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dcc45919474cada287677f839230acb9:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「少子化」に関する覚え書き（再掲載） — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/declining-birth-rate-2015/" />
		<id>tag:text.Baldanders.info,2015-10-31:/remark/2015/declining-birth-rate-2015/</id>
		<published>2015-10-31T20:22:12+09:00</published>
		<updated>2015-11-06T10:46:49+09:00</updated>
		<summary>この記事は2014年末に書いた本家ブログの記事「「少子化」に関する覚え書き」を再構成して掲載している。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;この記事は2014年末に書いた&lt;a href=&#34;http://www.baldanders.info/archives.shtml&#34;&gt;本家ブログ&lt;/a&gt;の記事「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000786.shtml&#34;&gt;「少子化」に関する覚え書き&lt;/a&gt;」を再構成して掲載している。
ちなみに2014年の合計特殊出生率は 1.42 とちょっとだけ下がった。
この辺の話も追記している。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#about}:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化」とは&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#impact:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化」で何が起きるか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#politics:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化対策」ではなく「少子社会」を前提とした「育児支援」を&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;about:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化」とは&lt;/h2&gt;

&lt;p&gt;そもそも「少子化」とは何を指すのか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%B0%91%E5%AD%90%E5%8C%96&#34;&gt;Wikipedia の記事&lt;/a&gt;を見ると「少子化」という言葉は結構多義的である。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;出生数が減少すること&lt;/li&gt;
&lt;li&gt;出生率の水準が特に人口置換水準以下にまで低下すること&lt;/li&gt;
&lt;li&gt;（高齢化の対義語として）子どもの割合が低下すること&lt;/li&gt;
&lt;li&gt;子どもの数が減少すること&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;用語を補足しておくと，「出生率」というのは「合計特殊出生率（Total Fertility Rate; TFR）」を指すと思われる。
概念的には「一人の女性が一生に産む子どもの平均数」と考えてよい。&lt;/p&gt;

&lt;p&gt;この合計特殊出生率が特定の水準以上に維持されれば長期的に人口が安定する。
この水準を「人口置換水準（Replacement-level Fertility）」と言う。
直感的に人口置換水準が2程度だと気付くと思うが，実際には2.08程度（国連では2.1を提示している）と2より少し大きい値になる。&lt;/p&gt;

&lt;p&gt;この記事では「少子化」を「合計特殊出生率が人口置換水準を大幅に下回る期間が長く続くこと」と定義しポイントを絞ることにする。&lt;/p&gt;

&lt;h3 id=&#34;合計特殊出生率と期間合計特殊出生率:4464050639beeeebeba692a1ddda3101&#34;&gt;合計特殊出生率と期間合計特殊出生率&lt;/h3&gt;

&lt;p&gt;実際の統計に使われているのは「期間合計特殊出生率」と呼ばれるもので，女性が出産可能な年齢を15歳から49歳と規定し，それぞれ年齢の出生率を足し合わせる。
数式で表すなら，年齢 $x$ の女性の数を $g(x)$，その女性たちが1年間に産んだ子供の合計を $f(x)$ とすると&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;

\[
  TFR = \sum_{x=15}^{49} \frac{f(x)}{g(x)}
\]


&lt;/figure&gt;

&lt;p&gt;と表される。
期間合計特殊出生率のほうが出生率の推移を年単位で把握しやすいため，こちらの値が使われるようだ。&lt;/p&gt;

&lt;h2 id=&#34;impact:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化」で何が起きるか&lt;/h2&gt;

&lt;h3 id=&#34;長期的に見て-人口が減少する:4464050639beeeebeba692a1ddda3101&#34;&gt;（長期的に見て）人口が減少する&lt;/h3&gt;

&lt;p&gt;人口の減少は端的に国力の低下を意味する。&lt;/p&gt;

&lt;p&gt;実は（短期的には）合計特殊出生率は出生数と連動しているとは限らない。
現に「第二次ベビーブーム（1960-1973）」のときは（丙午となる1966年を除いても）合計特殊出生率の上昇はほとんどなかった。
でも長期的には確実に出生数は減少するし，最終的には人口も減少する。&lt;/p&gt;

&lt;p&gt;ちなみに日本では1974年に初めて合計特殊出生率が人口置換水準（2.08）を割り込み，その30年後の2005年以降「人口減」に転じている（一方，近年では，合計特殊出生率は2005年を底にして少しずつ回復している。これについては&lt;a href=&#34;#politics:4464050639beeeebeba692a1ddda3101&#34;&gt;後述&lt;/a&gt;する）。&lt;/p&gt;

&lt;h3 id=&#34;世代間の人口バランスが変化する:4464050639beeeebeba692a1ddda3101&#34;&gt;世代間の人口バランスが変化する&lt;/h3&gt;

&lt;p&gt;「世代間の人口バランスの変化」は社会福祉の構造変革を要求する。&lt;/p&gt;

&lt;p&gt;世代をものすごく大雑把に分けると就労年齢前の「児童」と実際に働いている「就労者」とリタイア後の「高齢者」に分かれると思うが，社会福祉を必要とする「児童」および「高齢者」はどちらも多すぎると「就労者」に過大な負荷がかかる。
「第二次ベビーブーム」の1970年代に日本が少子化を進める政策を行ったのはこのような背景がある（当時は「人口爆発」という言葉もリアルだった）。
もちろん今は状況が反転している。&lt;/p&gt;

&lt;p&gt;「少子化」は相対的に「高齢化社会」の要因になる（もちろん社会が安定し，医療等の文明レベルが高いことが条件だが）。&lt;/p&gt;

&lt;h2 id=&#34;politics:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化対策」ではなく「少子社会」を前提とした「育児支援」を&lt;/h2&gt;

&lt;h3 id=&#34;少子化-は-おそらく-解消しない:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子化」は（おそらく）解消しない&lt;/h3&gt;

&lt;p&gt;社会が安定し人々の経済レベルや教育レベルが向上すれば合計特殊出生率が下がるのは必然と言える。
また，個人主義が進めば結婚・出産・育児が高コストかつ高リスクに見えて当然である。
これを非難することはできない。
近代先進国や新興国では，アメリカ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4464050639beeeebeba692a1ddda3101:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4464050639beeeebeba692a1ddda3101:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; とフランス&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4464050639beeeebeba692a1ddda3101:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4464050639beeeebeba692a1ddda3101:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; が例外的に2以上あることを除けば，多くは2未満（つまり人口置換水準以下）である。&lt;/p&gt;

&lt;p&gt;したがって政策としては&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;「少子社会」を前提とした（つまり世代間の共依存関係を断ち切った）社会福祉に切り替える&lt;/li&gt;
&lt;li&gt;合計特殊出生率を下げる要因を排除する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;くらいしかない。&lt;/p&gt;

&lt;p&gt;注意しなければならないのは，これは「合計特殊出生率を上げる」政策ではないということだ。
日本でアメリカやフランスの真似をしてもおそらく同じ結果にはならない。
もしかしたら合計特殊出生率を多少引き上げるかもしれないが，たとえば1.4が1.8になったからといって人口置換水準以下であることには変わりないのだ。
ならば「少子化の解消」を政治目標として掲げるべきではないし，それを掲げる政治家は嘘つきである。&lt;/p&gt;

&lt;p&gt;実は，日本の合計特殊出生率は2005年の 1.26 を底として少しずつ回復している。
2013年には 1.43 まで回復した。
しかし出生数も人口も依然減り続けていることには変わりない。&lt;/p&gt;

&lt;p&gt;近年，合計特殊出生率が回復している背景には高齢出産の増加があるらしい。
20歳から29歳までの世代の合計特殊出生率は下がり続けているが，それ以降の世代の合計特殊出生率は上がっている。
社会的要因としては晩婚化（とそれに対する社会的受容の変化），医療技術の進歩が挙げられるかもしれない。&lt;/p&gt;

&lt;p&gt;ただし2014年の合計特殊出生率は 1.42 と僅かに下がった。
これは若い世代で下がり続ける合計特殊出生率を30歳以降の先行世代の合計特殊出生率で賄いきれなくなったことによるらしい。
つまり今後も日本では，合計特殊出生率が下がることはあっても上がることは難しいと考えたほうがいいだろう。&lt;/p&gt;

&lt;p&gt;人口の減少および人口バランスの悪化を解消したいのなら「少子化対策」を当てにすべきではない。
これらの政治問題を解消したければ「人の流動化」を促進し外部から人を入れるしかない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4464050639beeeebeba692a1ddda3101:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4464050639beeeebeba692a1ddda3101:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&#34;少子社会-を前提とした-育児支援-を:4464050639beeeebeba692a1ddda3101&#34;&gt;「少子社会」を前提とした「育児支援」を&lt;/h3&gt;

&lt;p&gt;「育児支援」は「少子化対策」の手段のひとつとして挙げられるが，これまで述べたように「少子化」を政治的に解消できないのであれば，「少子社会」を前提とした「育児支援」こそが政治目標になるべきである。
もう「少子化対策」は忘れよう。
育児支援の方法としては結婚・出産・育児のコスト（金銭的なコストだけじゃないよ）とリスクを下げる政策を行う必要がある。&lt;/p&gt;

&lt;p&gt;一番下策なのは「現金をばらまくこと」である。
「お金」は価値可換である。
育児支援でもらったお金を育児に使うとは限らないし（貧困であるほど）そうした目的外の使用を非難することはできない。
まず自分が生き残らなければならないし，一度現金をもらう習慣がついてしまうとそこから抜け出すのは容易ではない。
価値を与えるのであれば「育児」そのものが価値となるような政策を執る必要がある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4464050639beeeebeba692a1ddda3101:d&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4464050639beeeebeba692a1ddda3101:d&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&#34;親はなくとも子は育つ:4464050639beeeebeba692a1ddda3101&#34;&gt;親はなくとも子は育つ？&lt;/h3&gt;

&lt;p&gt;富裕層は経済力を背景に出産や育児にかかるコストやリスクを分散・回避している。
一方，貧困層はこのようなヘッジができず，出産や育児にかかるコストやリスクが全て親にのしかかる。&lt;/p&gt;

&lt;p&gt;昔は「親はなくとも子は育つ」という格言（？）があった。
もちろんこれを言うためには前提条件がある。&lt;/p&gt;

&lt;p&gt;かつて田舎では血縁・地縁コミュニティが寄ってたかって育児をするという暗黙的なシステムがあった。
これによって親は出産や育児にかかるコストやリスクを分散・回避できる。
古いコミュニティは密着型・相互監視型の性格を持ち批判も多いが，こういう面もあることは確かだ。
しかし，特に都会に於いては血縁・地縁コミュニティは崩壊しているといっていいし，今さら昔に戻すことなどできない。
暗黙的なシステムがないのなら，血縁・地縁を超えた，明示的な育児システム（コミュニティ）を構築するしかない。&lt;/p&gt;

&lt;p&gt;日本社会が「生きづらい」と感じるのなら，それは個人に無限の責任を背負わせることにあるからでは，と思う。
本来「責任」というのは「引き受ける」ものであって「背負わせる」ものではない。
誰もが有限の責任をちょっとずつ引き受けることで社会全体として大きなことができるようになる。
出産・育児は社会にとってとても重要な要素であり，それだけに個人で背負いきれないのは当然と言える。&lt;/p&gt;

&lt;h2 id=&#34;参考文献:4464050639beeeebeba692a1ddda3101&#34;&gt;参考文献&lt;/h2&gt;

&lt;h3 id=&#34;参考になるページ:4464050639beeeebeba692a1ddda3101&#34;&gt;参考になるページ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%B0%91%E5%AD%90%E5%8C%96&#34;&gt;少子化 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%90%88%E8%A8%88%E7%89%B9%E6%AE%8A%E5%87%BA%E7%94%9F%E7%8E%87&#34;&gt;合計特殊出生率 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.garbagenews.net/archives/2013423.html&#34;&gt;日本の出生率と出生数をグラフ化してみる(2015年)(最新) - ガベージニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://logmi.jp/30580&#34;&gt;チームラボ・猪子氏「ひとりで子育てできるなんて幻想」 子どもは集団で、いい加減に育てるべき | ログミー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考図書:4464050639beeeebeba692a1ddda3101&#34;&gt;参考図書&lt;/h3&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4903127044/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/417iD4x5N%2BL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4903127044/baldandersinf-22/&#34;&gt;排除型社会―後期近代における犯罪・雇用・差異&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ジョック ヤング Jock Young &lt;/dd&gt;&lt;dd&gt;洛北出版 2007-03&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791764331/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791764331.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;後期近代の眩暈―排除から過剰包摂へ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4255008515/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4255008515.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;断片的なものの社会学&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4796700439/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4796700439.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スティグマの社会学―烙印を押されたアイデンティティ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4791764242/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4791764242.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;新しい貧困 労働消費主義ニュープア&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4062881357/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4062881357.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;弱者の居場所がない社会――貧困・格差と社会的包摂 (講談社現代新書)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000410.shtml&#34;&gt;感想はこちら&lt;/a&gt;。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-15&#34;&gt;2015-09-15&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:4464050639beeeebeba692a1ddda3101:a&#34;&gt;アメリカの合計特殊出生率は主にヒスパニック系の人たちによる貢献が大きいようだ。逆に非ヒスパニック系白人やアジア系の人たちの合計特殊出生率は人口置換水準を下回っている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4464050639beeeebeba692a1ddda3101:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4464050639beeeebeba692a1ddda3101:b&#34;&gt;フランスの合計特殊出生率は1995年に 1.65 まで下がったが，福祉制度の改善や出産・育児を優遇する税制の導入することにより，2006年に 2.01 まで回復した。ただし，フランスの場合は事実婚やひとり親家庭に対して社会が寛容であることと，そういった親たちを支援する形で労働環境や法制度が整備されていることが社会背景としてある。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4464050639beeeebeba692a1ddda3101:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4464050639beeeebeba692a1ddda3101:c&#34;&gt;これってぶっちゃけ「移民」を許容するってことなんだけど，「移民」に対して批判が多いのは承知しているし，移民とうまくやってる国のほうが少ないってのも承知している。また外部からの人を受け入れるということは，外部へ出ていく人も許容するってことでもある（これがまた別の移民問題を引き起こす）。しかし内部で調達できないのなら外部から調達するしかないし，外部調達もダメだというのなら「国力」を競うゲームから降りるしかない。まぁ私個人としては無理スジなゲームからは降りるほうが賢明だと思うけどね。アメリカのエスニック・グループの問題および欧州（とくにイギリス）の移民問題に関してはジョック・ヤングの『排除型社会』とその続編の『後期近代の眩暈』に詳しく解説されているので是非お勧めする。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4464050639beeeebeba692a1ddda3101:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4464050639beeeebeba692a1ddda3101:d&#34;&gt;てな話になるとすぐ「民衆を啓蒙していかなければならない」とかいうバカ政治家が出てくるのが困りモノだが。念のためにいうと，貧困層に対して生活支援や貧困からの脱出を支援していくことを否定しているわけではないよ。これらはまた別の問題である。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4464050639beeeebeba692a1ddda3101:d&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>ようやく ConEmu と NYAGOS を導入した — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/conemu-and-nyagos/" />
		<id>tag:text.Baldanders.info,2015-10-30:/remark/2015/conemu-and-nyagos/</id>
		<published>2015-10-30T00:56:49+09:00</published>
		<updated>2015-11-07T22:01:10+09:00</updated>
		<summary>そんなわけで，えんやらやっと ConEmu を導入することにした。ついでに NYAGOS も入れなおすことに。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;いやぁ， &lt;a href=&#34;http://gohugo.io/&#34; title=&#34;Hugo :: A fast and modern static website engine&#34;&gt;Hugo&lt;/a&gt; 使い出したらコマンドプロンプトがいくらあっても足りないのさ。
そんなわけで，えんやらやっと &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を導入することにした。
ついでに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; も入れなおすことに。&lt;/p&gt;

&lt;h2 id=&#34;nyagos-の導入:ab0c58b1d771644ad2a8c0ace1515d66&#34;&gt;NYAGOS の導入&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34;&gt;NYAOS.ORG - NYAGOS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34;&gt;zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyole&#34;&gt;zetamatta/nyole&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前 &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; を導入した時は&lt;a href=&#34;http://qiita.com/spiegel-im-spiegel/items/9c11acf72fa38ef379f8&#34;&gt;どえら苦労した&lt;/a&gt;が&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases&#34;&gt;最近のバージョン&lt;/a&gt;は64ビット版のビルド済みのものがある。
ありがたくこのまま使わせて頂く。
&lt;a href=&#34;https://github.com/zetamatta/nyole&#34;&gt;nyole&lt;/a&gt; も同梱されているので無問題。&lt;/p&gt;

&lt;p&gt;zip ファイル内のファイル群をフォルダ構成ごと適当な場所に展開すればよい。
展開できたら動作確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\program\nyagos&amp;gt;nyagos.exe
Nihongo Yet Another GOing Shell 4.0.9_10-amd64 Powered by go1.5.1 &amp;amp; Lua 5.3
Copyright (c) 2014,2015 HAYAMA_Kaoru and NYAOS.ORG
C:/program/nyagos&amp;gt;ls
Doc/               lua53.dll          nyagos.lua*        specialfolders.js*
catalog.d/         makeicon.cmd*      nyole.dll
license.txt        nyagos.d/          readme.md
lnk.js*            nyagos.exe*        readme_ja.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ほい，おっけ。&lt;/p&gt;

&lt;h2 id=&#34;conemu-の導入:ab0c58b1d771644ad2a8c0ace1515d66&#34;&gt;ConEmu の導入&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; は Windows 用のターミナルでタブごとに異なる shell を呼び出せるのが特徴。
コマンドプロンプトや上述の &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; はもちろん， &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash や &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; も呼び出せてしまう優れもの&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://conemu.github.io/&#34;&gt;ConEmu - Handy Windows Terminal&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kenpg.bitbucket.org/blog/201506/07.html&#34;&gt;Windows：コマンドプロンプト代替をConsole2からConEmuに変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/1000k/items/4a2f9419b19fdc9ed5f4&#34;&gt;ConEmu + nyagos で Windows ターミナル環境を作る - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thecrumb.com/2013/03/04/configuring-conemu-and-putty/&#34;&gt;Configuring ConEmu and Putty | theCRUMB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kuroeveryday.blogspot.jp/2015/10/ConEmu-PuTTY.html&#34;&gt;ConEmu + PuTTYでSSHクライアントを快適に使う（Windows版） | Black Everyday Company&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以降，覚え書きで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; の設定を晒しておく。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22385157049/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/716/22385157049_4c7af6ef0a.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22385157049/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;フォントは既定のままで問題ない（もちろん好きなフォントに変えてもよい）。
ただし，日本語を使う場合は “Monospace” のチェックは必ず外すこと。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/21949162924/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5792/21949162924_ba2742c857.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/21949162924/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;“Center console in ConEmu workspace” にチェックを入れて数ピクセル程度アキを入れるとウィンドウ境界付近の窮屈感が解消される。
おススメ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22583116011/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/591/22583116011_9e109f185e.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22583116011/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Windows Explorer の context menu 設定。
上段の “ConEmu Here” を登録（register）すると， context menu を開いたフォルダで &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; を起動してくれる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22583116021/&#34;&gt;&lt;img src=&#34;https://farm6.staticflickr.com/5630/22583116021_222c1acaee.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22583116021/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の状態。
“Auto save/restore opened tabs” を選択すると，タブの状態を保持してくれる。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22575095305/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/644/22575095305_4d0c7752e6.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22575095305/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 起動時の環境設定。
コードページの設定（&lt;code&gt;chcp&lt;/code&gt; コマンド）もここでできるし alias の設定もできたりする。
ただし，環境設定は shell 呼び出し時にも個別にできるので，ここでは &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; 全体の設定に限定すべきだろう。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/22388493089/&#34;&gt;&lt;img src=&#34;https://farm1.staticflickr.com/698/22388493089_73bb752b56.jpg&#34; alt=&#34;ConEmu Setting&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/22388493089/&#34;&gt;ConEmu Setting&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Shell 呼び出しの設定例。
ここでは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の bash を呼んでいる。
起動時の calling sequence は以下のとおり。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set MSYSTEM=MSYS &amp;amp; C:\msys64\usr\bin\bash.exe --login -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;前半で環境変数を設定し，後半で実際に bash を呼び出している。
やぁ，これで mintty を使わなくて済むよ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; の場合は以下のようになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\PATH\TO\PuTTY\putty.exe -load &amp;quot;mysession&amp;quot; -new_console
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mysession&lt;/code&gt; には &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; であらかじめ作成したセッション名をセットする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;http://www.nyaos.org/index.cgi?p=NYAGOS&#34; title=&#34;NYAOS.ORG - NYAGOS&#34;&gt;NYAGOS&lt;/a&gt; の場合は &lt;code&gt;nyagos.exe&lt;/code&gt; をフルパスで指定すれば OK。&lt;/p&gt;

&lt;p&gt;ところで設定ダイアログの左下に &lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; ボタンがあるのにお気づきだろうか。
&lt;a href=&#34;https://flattr.com/&#34;&gt;Flattr&lt;/a&gt; アカウントのある人は是非。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;まぁこれは &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; を試すきっかけになったので，結果的にはよかったのだが。  &lt;a href=&#34;http://msys2.github.io/&#34; title=&#34;MSYS2 installer&#34;&gt;MSYS2&lt;/a&gt; の記事はそのうちちゃんと書かないといけないなぁ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;ただし &lt;a href=&#34;https://conemu.github.io/&#34; title=&#34;ConEmu - Handy Windows Terminal&#34;&gt;ConEmu&lt;/a&gt; から &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; を呼び出す場合，サーバ側が UTF-8 だと文字化けするっぽい。ググると「&lt;code&gt;chcp 65001&lt;/code&gt; に設定しろ」みたいなことが書いてあるが， &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;PuTTY&lt;/a&gt; に対しては効いてない感じ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;&lt;code&gt;putty.exe&lt;/code&gt; の代わりに &lt;code&gt;plink.exe&lt;/code&gt; を使う手もあるが，日本語環境で動かしたらぶっ飛んでしまった（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ab0c58b1d771644ad2a8c0ace1515d66:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>今日の戯れ言： GitHub-flow を捨てた ATOM Editor — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/1024-diary/" />
		<id>tag:text.Baldanders.info,2015-10-24:/remark/2015/1024-diary/</id>
		<published>2015-10-24T01:13:56+09:00</published>
		<updated>2015-11-07T22:01:10+09:00</updated>
		<summary>GitHub-flow を捨てた ATOM Editor / 暗号プロトコルのセキュリティ評価 / VoLTE の脆弱性 / 「おかげさまで半世紀も生きちゃったぜ」記念</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#atom:607609ccb6f4d1c721b237710b517ddf&#34;&gt;GitHub-flow を捨てた ATOM Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cipher:607609ccb6f4d1c721b237710b517ddf&#34;&gt;暗号プロトコルのセキュリティ評価&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#volte:607609ccb6f4d1c721b237710b517ddf&#34;&gt;VoLTE の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#birth:607609ccb6f4d1c721b237710b517ddf&#34;&gt;「おかげさまで半世紀も生きちゃったぜ」記念&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;atom:607609ccb6f4d1c721b237710b517ddf&#34;&gt;GitHub-flow を捨てた ATOM Editor&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.atom.io/2015/10/21/introducing-the-atom-beta-channel.html&#34;&gt;Introducing the Atom Beta Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20151022_726976.html&#34;&gt;オープンソースのテキストエディター「Atom」にベータチャンネルが登場 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これまで「Atom」は“master”ブランチ（ソースコードの大元）を直接リリースする形態がとられていた。この方法はシンプルで、機能の追加や不具合の修正をそのままユーザーの元へ届けることができたため、開発当初はうまくいっていたという。しかし、機能が増えるにつれて修正済みの不具合が再発する“リグレッション”が多くなり、ワークフローに混乱が生じることがたびたび発生するようになったようだ。&lt;br&gt;
そこで、GitHubは“master”ブランチを直接リリースする方法をやめ、「Google Chrome」などでお馴染みの“リリースチャンネル”を設ける方針をとることにした。「Atom」の場合、開発を行う“master”ブランチから切り離されたベータ版と、ベータ版でテストされた新機能や不具合修正を盛り込んだ正式版（stable）の2つのリリースチャンネルが設けられる。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20151022_726976.html&#34;&gt;オープンソースのテキストエディター「Atom」にベータチャンネルが登場&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;まぁ要するに &lt;a href=&#34;https://github.com/&#34; title=&#34;GitHub&#34;&gt;GitHub&lt;/a&gt; は， &lt;a href=&#34;https://atom.io/&#34; title=&#34;Atom&#34;&gt;ATOM&lt;/a&gt; に関してはお家芸の GitHub-flow を捨てて Git-flow に切り替えたということらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://scottchacon.com/2011/08/31/github-flow.html&#34;&gt;GitHub Flow – Scott Chacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/Gab-km/3705015&#34;&gt;GitHub Flow (Japanese translation)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;A successful Git branching model » nvie.com&#34;&gt;A successful Git branching model » nvie.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;git-flow cheatsheet&#34;&gt;git-flow cheatsheet&lt;/a&gt; （日本語）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://komaken.me/blog/2013/09/09/git-flow%E3%81%A8github-flow%E3%81%96%E3%81%A3%E3%81%8F%E3%82%8A%E3%81%BE%E3%81%A8%E3%82%81/&#34;&gt;git flowとgithub flowざっくりまとめ | KentaKomai Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どちらがいいのかについては何とも言えないが，複数バージョンを同時に管理していくのであれば Git-flow にせざるを得ないだろう。
個人的には 1.0 系でそれほど不満はないので，敢えてベータ版を使う必要はないかな。&lt;/p&gt;

&lt;h2 id=&#34;cipher:607609ccb6f4d1c721b237710b517ddf&#34;&gt;暗号プロトコルのセキュリティ評価&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nict.go.jp/press/2015/10/20-2.html&#34;&gt;プレスリリース | 暗号プロトコルのセキュリティ評価結果をリスト化・公開 | NICT-情報通信研究機構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://crypto-protocol.nict.go.jp/&#34;&gt;Cryptographic Protocol Verification Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ascii.jp/elem/000/001/068/1068218/&#34;&gt;ASCII.jp：58個の暗号プロトコルをセキュリティ評価！NICTがリスト公開&lt;/a&gt; : 10月23日現在ダウン中&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各種の認証および鍵交換プロトコルの評価一覧。
分かりやすくまとめられてるし技術文書へのリンクもあってとても参考になる。
なんで &lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; なのかは分からないけど。
&lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; の活動って chaotic でイマイチよく分からないんだよなぁ。&lt;/p&gt;

&lt;p&gt;そうそう。
&lt;a href=&#34;http://www.nict.go.jp/&#34; title=&#34;NICT-情報通信研究機構&#34;&gt;NICT&lt;/a&gt; で思い出したけど，また ntpd の脆弱性が見つかったみたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.cisco.com/security/talos/2015-10-ntpd-vulnerabilities&#34;&gt;Cisco Identifies Multiple Vulnerabilities in Network Time Protocol daemon (ntpd)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35072380/&#34;&gt;時刻同期のNTPに複数の脆弱性&amp;ndash;HTTPS接続のバイパスなどを誘発 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やれやれ。&lt;/p&gt;

&lt;h2 id=&#34;volte:607609ccb6f4d1c721b237710b517ddf&#34;&gt;VoLTE の脆弱性&lt;/h2&gt;

&lt;p&gt;脆弱性といえばもうひとつ。
いや4つ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dl.acm.org/citation.cfm?id=2813718&#34;&gt;Breaking and Fixing VoLTE: Exploiting Hidden Data Channels and Mis-implementations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kb.cert.org/vuls/id/943167&#34;&gt;Vulnerability Note VU#943167 - Voice over LTE implementations contain multiple vulnerabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvn.jp/vu/JVNVU93463833/index.html&#34;&gt;JVNVU#93463833: Voice over LTE (VoLTE) の実装に複数の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://news.mynavi.jp/news/2015/10/23/085/&#34;&gt;VoLTEの脆弱性、携帯3社は検証の上で「問題なし」 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ちうことで日本の3大キャリアでは問題なさそうだ。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;GoogleとしてはIMSベアラに直接触れないようにOSを修繕する必要があるので「対策します」ってことになったのでしょうが、基本的にはシステム全体としてはとっくに対策されてるんですよね。あまり知られていませんがVoLTEも実はモデムチップに依存したシステムで、主要チップ屋の実装として端末への直接攻撃も防がれるようになっているみたいですし。まあ、そういう情報は普通はあまり外に漏れないので（漏れたらそれはそれでセキュリティリスクになるし）、理屈上はこうやったらハックできちゃうぜ、って発表されることは悪いことではないと思うのですが、少なくとも、日本やその他情報通信先進国でまともな装置を使っているような国では、このリスクは問題ないと思っていただいて大丈夫だと思いますよ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://wnyan.jp/4204&#34;&gt;ニュースコメント[VoLTEの実装で複数の脆弱性と報告] | 無線にゃん&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;慌てない慌てない。&lt;/p&gt;

&lt;h2 id=&#34;birth:607609ccb6f4d1c721b237710b517ddf&#34;&gt;「おかげさまで半世紀も生きちゃったぜ」記念&lt;/h2&gt;

&lt;p&gt;今月で五十路に突入します。
いやぁ，半世紀も生きちゃったよ。&lt;/p&gt;

&lt;p&gt;半世紀も生きてるのに何かを悟ったとか全然ないし，財や名誉を得たとかも全然ないし，何やってるんだろうね，私は。
50代になったらもっとこうナイスミドル（笑）になってるとかありそうなもんだけど，言動が（歳の割に）幼いのか，いまだに生物年齢相当に見られないのは困ったもんである。&lt;/p&gt;

&lt;p&gt;お祝いを下さった友人方々，本当に有難うございます。
みなさんのおかげで明日からも生きていけると思います。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;a href=&#34;http://japanese.engadget.com/2015/10/22/ascii-jp-ddos-anonymous-it-ascii-jp/&#34;&gt;イルカ漁への抗議で Anonymous が絶賛攻撃中&lt;/a&gt;らしい。 ASCII.jp 関係ないじゃん。迷惑な話。ちなみにイルカは美味い。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:607609ccb6f4d1c721b237710b517ddf:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>SHA-1 衝突問題： 廃止の前倒し — しっぽのさきっちょ</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2015/problem-of-sha1-collision/" />
		<id>tag:text.Baldanders.info,2015-10-22:/remark/2015/problem-of-sha1-collision/</id>
		<published>2015-10-22T14:35:22+09:00</published>
		<updated>2015-11-05T20:53:32+09:00</updated>
		<summary>GPU をふんだんに使った専用ハードウェアやクラウド・サービスなどを組み合わせることにより，近い将来に実用的なコストで SHA-1 攻略が可能になると指摘されている。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;SHA-1 の廃止プロセスが前倒しになるかもしれない。&lt;/p&gt;

&lt;h2 id=&#34;おさらい-sha-1-衝突問題:e82fbe1090627b901c960fa50413bda6&#34;&gt;おさらい： SHA-1 衝突問題&lt;/h2&gt;

&lt;p&gt;そもそもの発端は，2004年に複数の hash 関数において高い確率で hash 値を衝突（collision）させる攻略法が発表されたことだった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eprint.iacr.org/2004/199&#34;&gt;Collisions for Hash Functions MD4, MD5, HAVAL-128 and RIPEMD&lt;/a&gt; : 発端となった論文。この中で SHA-0 も攻略可能であることが示されている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その後の研究で SHA-1 も攻略可能であることが分かってきて暗号技術の周辺は大騒動になった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2005/02/sha1_broken.html&#34;&gt;SHA-1 Broken - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/0603/09/news117.html&#34;&gt;デファクトスタンダード暗号技術の大移行（1）：すべてはここから始まった～SHA-1の脆弱化 (&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt;) - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hash-値の衝突問題:e82fbe1090627b901c960fa50413bda6&#34;&gt;Hash 値の衝突問題&lt;/h3&gt;

&lt;p&gt;暗号技術における hash 関数とは，以下の機能を持ったアルゴリズムである&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;任意のデータ列を一定の長さのデータ列（hash 値）に「要約」する&lt;/li&gt;
&lt;li&gt;Hash 値から元のデータ列を推測できない&lt;/li&gt;
&lt;li&gt;ひとつの hash 値に対して複数のデータ列が（実時間で）見つからない&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hash 関数はメッセージ認証符号（Message Authentication Code; MAC）や電子署名（digital signature）の中核技術のひとつであり，データの「完全性（Integrity）」を担保する重要な要素である。
特に3番目の「ひとつの hash 値に対して複数のデータ列が（実時間で）見つからない」という機能が破られると，その hash 関数では完全性を担保できなくなってしまう。
これを「Hash 値の衝突問題」という。&lt;/p&gt;

&lt;p&gt;よくできた hash 関数であれば， hash 値のビット長を $n$ とすると，衝突の確率は $1 / 2^{\frac{n}{2}}$ であると言われている。
SHA-1 の hash 値の長さは $160\,\mathrm{bits}$ なので，衝突の確率は $1 / 2^{80}$ になるはずだが，実際にはそれよりもずっと大きい $1 / 2^{69}$ で可能，というのが当時の問題だった。&lt;/p&gt;

&lt;h3 id=&#34;2010年問題:e82fbe1090627b901c960fa50413bda6&#34;&gt;2010年問題&lt;/h3&gt;

&lt;p&gt;これを受けて， SHA-1 を2010年までに廃止し SHA-2 (SHA-224/256/364/512) に移行する措置がとられた。
これが暗号技術における「2010年問題」である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:e82fbe1090627b901c960fa50413bda6:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:e82fbe1090627b901c960fa50413bda6:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;ただ，現状では（特に legacy system において）アルゴリズムの置き換えがなかなか進まなかったことと SHA-1 の攻略があまり進展しなかったことにより，この期限は2013年まで延長された。
現在の SHA アルゴリズムの評価と有効期限は以下のとおり。&lt;/p&gt;

&lt;figure lang=&#39;en&#39;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security &lt;br&gt;Strength&lt;/th&gt;
&lt;th&gt;Digital &lt;br&gt;Signatures and &lt;br&gt;hash-only &lt;br&gt;applications&lt;/th&gt;
&lt;th&gt;HMAC&lt;/th&gt;
&lt;th&gt;Key Derivation &lt;br&gt;Functions&lt;/th&gt;
&lt;th&gt;Random &lt;br&gt;Number &lt;br&gt;Generation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#39;right&#39;&gt;80&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td class=&#39;right&#39;&gt;112&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td class=&#39;right&#39;&gt;128&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-1, SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td class=&#39;right&#39;&gt;192&lt;/td&gt;
&lt;td&gt;SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-224, SHA-512/224, SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;td class=&#39;right&#39;&gt;256&lt;/td&gt;
&lt;td&gt;SHA-512&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;td&gt;SHA-256, SHA-512/256, SHA-384, SHA-512&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Hash function that can be used to provide the targeted security strengths (via &lt;q&gt;&lt;a href=&#39;http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf&#39;&gt;SP800-57 Part 1 (Revision 3) &lt;sup&gt;&lt;i class=&#39;fa fa-file-pdf-o&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#39;en&#39;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th colspan=&#39;2&#39;&gt;Security Strength&lt;/th&gt;
&lt;th&gt;2011 through 2013&lt;/th&gt;
&lt;th&gt;2014 through 2030&lt;/th&gt;
&lt;th&gt;2031 and Beyond&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class=&#39;right&#39; rowspan=&#39;2&#39;&gt;80&lt;/td&gt; &lt;td&gt;Applying&lt;/td&gt;                       &lt;td&gt;Deprecated&lt;/td&gt;            &lt;td colspan=&#39;2&#39; class=&#39;center&#39;&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                                      &lt;td&gt;Processing&lt;/td&gt;                     &lt;td colspan=&#39;3&#39; class=&#39;center&#39;&gt;Legacy use&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&#39;right&#39; rowspan=&#39;2&#39;&gt;112&lt;/td&gt;&lt;td&gt;Applying&lt;/td&gt;                       &lt;td rowspan=&#39;2&#39;&gt;Acceptable&lt;/td&gt;&lt;td rowspan=&#39;2&#39;&gt;Acceptable&lt;/td&gt;&lt;td&gt;Disallowed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;                                      &lt;td&gt;Processing&lt;/td&gt;                                                                                   &lt;td&gt;Legacy use&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&#39;right&#39;&gt;128&lt;/td&gt;            &lt;td rowspan=&#39;3&#39;&gt;Applying/Processing&lt;/td&gt;&lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&#39;right&#39;&gt;192&lt;/td&gt;                                                    &lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class=&#39;right&#39;&gt;256&lt;/td&gt;                                                    &lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;            &lt;td&gt;Acceptable&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Security-strength time frames (via &lt;q&gt;&lt;a href=&#39;http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf&#39;&gt;SP800-57 Part 1 (Revision 3) &lt;sup&gt;&lt;i class=&#39;fa fa-file-pdf-o&#39;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/q&gt;)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;しかし現状は全くスケジュールどおりではなく， SHA-1 を使った証明書の発行が停止され始めたのはようやく昨年末頃からだ。
一方，主要ブラウザは2017年以降 SHA-1 を使った証明書を無効にする計画を発表している。&lt;/p&gt;

&lt;h2 id=&#34;sha-1-freestart-collision:e82fbe1090627b901c960fa50413bda6&#34;&gt;SHA-1 Freestart Collision&lt;/h2&gt;

&lt;p&gt;ところが最近になって SHA-1 の攻略について進展があった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/itstheshappening/&#34;&gt;The Shappening: freestart collisions for SHA-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2015/10/sha-1_freestart.html&#34;&gt;SHA-1 Freestart Collision - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arstechnica.com/security/2015/10/sha1-crypto-algorithm-securing-internet-could-break-by-years-end/&#34;&gt;SHA1 algorithm securing e-commerce and software could break by year’s end | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1510/09/news054.html&#34;&gt;「SHA-1の廃止前倒しを」　専門家チームが提言 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これは SHA-1 のアルゴリズム上の更なる危殆化を指すものではないが，最新の計算リソースを効率的に使って，いわば「力任せ」（って言うと御幣があるけど）で攻略している。
GPU をふんだんに使った専用ハードウェアやクラウド・サービスなどを組み合わせることにより，近い将来に実用的なコストで SHA-1 攻略が可能になると指摘されている。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Concretely, we estimate the SHA-1 collision cost today (i.e., Fall 2015) between 75K\$ and 120K\$ renting Amazon EC2 cloud computing over a few months. By contrast, security expert Bruce Schneier previously projected (based on calculations from Jesse Walker) the SHA-1 collision cost to be ~173K\$ by 2018. Note that he deems this to be within the resources of a criminal syndicate. Large corporations and governments may possess even greater resources and may not require Amazon EC2.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://sites.google.com/site/itstheshappening/&#34;&gt;The Shappening: freestart collisions for SHA-1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Mozilla では SHA-1 を使った証明書の無効化を2016年7月以降に前倒しすることを検討している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mozilla.org/security/2015/10/20/continuing-to-phase-out-sha-1-certificates/&#34;&gt;Continuing to Phase Out SHA-1 Certificates | Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://news.mynavi.jp/news/2015/10/22/093/&#34;&gt;Firefox、SHA-1対策を前倒し検討 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GPU ベースのシステムやクラウド・サービス等による巨大計算リソースを使った攻撃は，指摘はありつつも，あまり重視されていなかった。
しかし，今回の例に見るように，攻撃手法として現実的な脅威になりつつある。
状況によっては SHA-1 以外でもセキュリティ・リスクの見直しを迫られるかもしれない。&lt;/p&gt;

&lt;h2 id=&#34;関連記事:e82fbe1090627b901c960fa50413bda6&#34;&gt;関連記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/remark/archives/000048.shtml&#34;&gt;ハッシュ値の衝突問題 &amp;ndash; 戯れ言++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/remark/archives/000204.shtml&#34;&gt;暗号の危殆化と新しいアルゴリズム &amp;ndash; 戯れ言++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/remark/archives/000210.shtml&#34;&gt;「安全な鍵長の下限」とは &amp;ndash; 戯れ言++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000267.shtml&#34;&gt;&amp;ldquo;NIST&amp;rsquo;s Plan for New Cryptographic Hash Functions&amp;rdquo; — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000586.shtml&#34;&gt;『暗号をめぐる最近の話題』 — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000865.shtml&#34;&gt;SHA-3 が正式リリース： あれから10年も&amp;hellip; — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.livedoor.jp/k_urushima/archives/1768181.html&#34;&gt;自堕落な技術者の日記 : 「RFC 7525 TLSとDTLSの安全な利用に関する推奨事項」の公開 - livedoor Blog（ブログ）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35067422/&#34;&gt;「Y!mobileケータイ」で一部サイトへ接続不能に&amp;ndash;サーバ証明書の切り替えで - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.visvirial.com/articles/519&#34;&gt;scryptがGPUに破られる時 | びりあるの研究ノート&lt;/a&gt; : GPU 耐性が高いと言われる scrypt も実時間で攻略できるようになってきたという話&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.livedoor.jp/k_urushima/archives/1782546.html&#34;&gt;自堕落な技術者の日記 : SSL Pulseの統計情報で見るSSL/TLS (2015年10月版) - livedoor Blog（ブログ）&lt;/a&gt; : Alexa 社によるアクセス世界トップ20万サイトを対象にした SSL/TLS 関連の統計情報&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.technet.com/b/jpsecurity/archive/2015/11/02/faq-microsoft-policy-on-sha1-deprecation.aspx&#34;&gt;FAQ: SHA-1 廃止/SHA-2 移行に関するマイクロソフトのポリシー - 日本のセキュリティチーム&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35072827/&#34;&gt;「SHA-1」SSLサーバ証明書の廃止迫る&amp;ndash;「SHA-2」への移行状況とその影響、課題 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;関連図書:e82fbe1090627b901c960fa50413bda6&#34;&gt;関連図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;第3版出た！ てか，もう Kindle 版出てるのか。紙の本買うのはやまったかなぁ。 SHA-3 や BitCoin/BlockChain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:e82fbe1090627b901c960fa50413bda6:a&#34;&gt;他にも $1024\,\mathrm{bits}$ 以下の鍵長の RSA 公開鍵を廃止する，などの措置が盛り込まれていた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:e82fbe1090627b901c960fa50413bda6:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
