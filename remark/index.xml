<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>しっぽのさきっちょ | text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/remark/index.xml" />
	<id>tag:text.Baldanders.info,2021-05-29:/remark</id>
	<updated>2021-05-29T16:58:27+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」。とりとめのない四方山話。</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>CAVOC Web API で遊ぶ</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/cavoc-api-client/" />
		<id>tag:text.Baldanders.info,2021-05-29:/remark/2021/05/cavoc-api-client/</id>
		<published>2021-05-29T16:58:27+09:00</published>
		<updated>2021-05-29T08:00:45+00:00</updated>
		<summary>CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;突然だが「&lt;a href=&#34;http://cavoc.org/&#34;&gt;共通農業語彙（Common Agricaulturel VOcabulary; CAVOC）&lt;/a&gt;」というサイトがあるのだが，この中に農作物の語彙体系を整理したデータベースがある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cavoc.org/cvo.php&#34;&gt;農作物語彙体系(CVO, Crop VOcabulary)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gcavoc&#34;&gt;spiegel-im-spiegel/gcavoc: Common Agricaulturel Vocabulary API Client by Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;動作例を挙げると「せろり」の標準名は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcavoc std せろり
{&amp;#34;term&amp;#34;:&amp;#34;セロリ&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じに取得できる。
また，セロリの Wikipedia ページを取得したいなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcavoc wikipedia セロリ
https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%A2%E3%83%83%E3%82%AF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じ。
いや，なんで「&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%A2%E3%83%83%E3%82%AF&#34;&gt;セルリアック&lt;/a&gt;」のページなんだ？&lt;/p&gt;
&lt;p&gt;とまぁ微妙なんだよな。&lt;/p&gt;
&lt;p&gt;たとえば，同じ「セロリ」にしても収穫・出荷する部位によって異なる「農作物」になるのだが Web API ではそこまで細かく制御できない感じ。
元データはオープンデータで公開されているので，真面目にやりたいなら自前で何とかしろってことかもしれない。&lt;/p&gt;
</content>
	</entry><entry>
		<title>AI がハッキングを始める日</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/when-ais-start-hacking/" />
		<id>tag:text.Baldanders.info,2021-05-15:/remark/2021/05/when-ais-start-hacking/</id>
		<published>2021-05-15T17:12:16+09:00</published>
		<updated>2021-05-15T09:57:51+00:00</updated>
		<summary>日本語翻訳および解説。ありがたや</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Bruce Schneier 先生の AI ハッキングに関する一連の記事をブックマークとして挙げておく。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.belfercenter.org/publication/coming-ai-hackers&#34;&gt;The Coming AI Hackers | Belfer Center for Science and International Affairs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210511/coming-ai-hackers&#34;&gt;ブルース・シュナイアーが予言する「AIがハッカーになり人間社会を攻撃する日」 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/opinion-hackers-used-to-be-humans-soon-ais-will-hack-humanity/&#34;&gt;Hackers Used to Be Humans. Soon, AIs Will Hack Humanity | WIRED&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/04/when-ais-start-hacking.html&#34;&gt;When AIs Start Hacking - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/04/ai.html&#34;&gt;ブログ: AIがハッキングを始めるとき (ブルース・シュナイアー)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私は所謂「&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/the-myth-of-the-singularity/&#34; title=&#34;『シンギュラリティの神話』を読む&#34;&gt;シンギュラリティ&lt;/a&gt;」にはもはや微塵も関心がないが，道具・手段としての「AI 技術」についてリスク・ベネフィットをきちんと評価して規制すべきところは規制すべき，とは考えている。&lt;/p&gt;
&lt;p&gt;「理学」が「真理の追求」なら「工学」は「善の実装」である。
何を以って「善」とするかは議論の余地があるだろうが，エンジニアが自らの首を絞めることにならないよう気をつけなければ。&lt;/p&gt;
&lt;h2&gt;人と機械の責務分担&lt;/h2&gt;
&lt;p&gt;（これで思い出したが，以前に Facebook の TL に書きなぐった戯れ言を以下に記しておく）&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;自立とは、仮想代理人ソフトウェアであるところのエージェントが自ら動き、誰の力も借りずに意思決定できることを言う。 […] 一方、自律というのは哲学的な意味であり、自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができることをいう&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B071FHBGW8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;そろそろ、人工知能の真実を話そう&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この定義で考えると，今の世の中に「自律」機械はまだ登場していないことになる。
もしそのようなものが登場すればシンギュラリティ（特異点）到達ということになるのだろう。
まっ（少なくとも「現在」からの延長線上の未来では）ありえへんけど（笑）&lt;/p&gt;
&lt;p&gt;もう少し踏み込んで考えるなら，機械に「自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができる」ことを期待してはいけないし，そのような期待を前提としたルール・メイキングは意味がない，と思っている。&lt;/p&gt;
&lt;p&gt;であるならルールの適用と運用は人間側に任せるべきで，機械はあくまで運用補佐として振る舞うに留める。
つまり機械に「最終判断」させるべきではない，ということだ。&lt;/p&gt;
&lt;p&gt;ハードでもソフトでもこうした「人と道具・機械との責務分担」をどう設計するかというのはかなり重要で，現状として人の側が最終判断を行うのであれば，システム上のルール設定も（もっと広く）法規制も人の側に寄せた設計をすべきと思っている。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01J1I8PRQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/5132MaXTkGL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01J1I8PRQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;社会は情報化の夢を見る (河出文庫)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;佐藤俊樹 (著)&lt;/dd&gt;
    &lt;dd&gt;河出書房新社 2010-09-03 (Release 2016-07-29)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01J1I8PRQ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;1996年に出版された『ノイマンの夢・近代の欲望―情報化社会を解体する』の改訂新装版。しかし内容はこれまでと変わりなく，繰り返し語られる技術決定論を前提とする安易な未来予測を「情報化」社会論だとして批判する。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-15&#34;&gt;2015-09-15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 社会は情報化の夢を見る --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00JB3F73M?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51VjaQK28FL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00JB3F73M?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;マップス　01 (MFコミックス　フラッパーシリーズ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;長谷川 裕一 (著)&lt;/dd&gt;
    &lt;dd&gt;KADOKAWA 2012-06-23 (Release 2014-03-31)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00JB3F73M (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀を代表するスペースオペラ漫画（のひとつ）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-12-19&#34;&gt;2017-12-19&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- マップス --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00F5P454W?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/515TCUhlSuL._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00F5P454W?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;キカイダー02(1) (角川コミックス・エース)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ＭＥＩＭＵ (著), 石ノ森 章太郎 (その他)&lt;/dd&gt;
    &lt;dd&gt;KADOKAWA 2013-09-17 (Release 2013-10-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00F5P454W (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「キカイダー」を神秘学的視点で再解釈する（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-08-18&#34;&gt;2016-08-18&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- キカイダー02 --&gt;
</content>
	</entry><entry>
		<title>call と start</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/call-and-start-in-windows/" />
		<id>tag:text.Baldanders.info,2021-05-15:/remark/2021/05/call-and-start-in-windows/</id>
		<published>2021-05-15T14:49:33+09:00</published>
		<updated>2021-05-15T05:49:52+00:00</updated>
		<summary>先日書いた Zenn Scrap の内容。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先日 &lt;a href=&#34;https://zenn.dev/spiegel/scraps&#34; title=&#34;Spiegelのスクラップ一覧&#34;&gt;Zenn の Scrap&lt;/a&gt; に書いた記事だが， Scrap は基本的に書き捨てで最終的にはアーカイブ（非表示）化する予定なので，改めてこちらのブログに覚え書きとして記しておく。&lt;/p&gt;
&lt;p&gt;いやね。
バッチファイルって使い方を忘れちゃうのよ。
たとえば「コマンドプロンプトのウィンドウを非表示（または最小化）の状態でコマンド実行するのってどうすんだっけ？」って感じ。&lt;/p&gt;
&lt;p&gt;起動するコマンドを細かく制御したいならコマンドプロンプト（&lt;code&gt;cmd.exe&lt;/code&gt;）の内蔵コマンド &lt;code&gt;start&lt;/code&gt; を使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; start /?
指定されたプログラムまたはコマンドを実行するためにウィンドウを開きます。

START [&amp;#34;タイトル&amp;#34;] [/D パス] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]
      [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]
      [/NODE &amp;lt;NUMA ノード&amp;gt;] [/AFFINITY &amp;lt;16 進数の関係マスク&amp;gt;] [/WAIT] [/B]
      [コマンド/プログラム] [パラメーター]

    &amp;#34;タイトル&amp;#34;  ウィンドウのタイトル バーに表示するタイトル。
    パス        開始するディレクトリ。
    B           新しいウィンドウを作成せずにアプリケーションを起動します。
                アプリケーションは Ctrl + C を無視します。
                アプリケーションで Ctr l+ C を有効にしていない場合、
                Ctrl + Break がアプリケーションを中断する唯一の方法です。
    I           新しい環境は、現在の環境ではなく、cmd.exe に渡された元の環境に
                なります。
    MIN         ウィンドウを最小化の状態で起動します。
    MAX         ウィンドウを最大表示の状態で起動します。
    SEPARATE    16 ビットの Windows プログラムを別メモリ領域で起動します。
    SHARED      16 ビットの Windows プログラムを共有メモリ領域で起動します。
    LOW         IDLE 優先度クラスでアプリケーションを起動します。
    NORMAL      NORMAL 優先度クラスでアプリケーションを起動します。
    HIGH        HIGH 優先度クラスでアプリケーションを起動します。
    REALTIME    REALTIME 優先度クラスでアプリケーションを起動します。
    ABOVENORMAL ABOVENORMAL 優先度クラスでアプリケーションを起動します。
    BELOWNORMAL BELOWNORMAL 優先度クラスでアプリケーションを起動します。
    NODE        優先 NUMA (Non-Uniform Memory Architecture) ノードを 10 進の
                整数で指定します。
    AFFINITY    プロセッサの関係マスクを 16 進数で指定します。
                プロセスはこれらのプロセッサで実行されるように制限されます。

                /AFFINITY と /NODE を組み合わせると、関係マスクは異なって
                解釈されます。NUMA ノードのプロセッサ マスクを右にシフトして
                ビット 0 で始まるかのように関係マスクを指定します。
                プロセスは、指定した関係マスクと NUMA ノードの間で共通する
                プロセッサ上で実行されるように制限されます。共通するプロセッサ
                がない場合は、プロセスは指定した NUMA ノード上で実行される
                ように制限されます。
    WAIT        アプリケーションを起動し、終了するまで待ちます。
    コマンド/プログラム
                内部コマンドまたはバッチ ファイルの場合、コマンド プロセッサ
                は cmd.exe の /K オプションを使用して実行されます。
                これはコマンドの後でもウィンドウが残ることを意味
                します。

                内部コマンドまたはバッチ ファイルではない場合、そのプログラム
                はウィンドウ モードのアプリケーションまたはコンソール
                アプリケーションとして動作します。

    パラメーター
                コマンド/プログラムに渡すパラメーターです。

注意: SEPARATE および SHARED オプションは 64 ビット プラットフォームでは
サポートされません。
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このように &lt;code&gt;start&lt;/code&gt; コマンドではウィンドウの表示状態や優先順位等の制御ができる。
たとえば Windows ログオン時に，コマンドプロンプトのウィンドウを最小化した状態で &lt;code&gt;gpg-agent&lt;/code&gt; を起動させたい場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /min gpg-connect-agent.exe /bye
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という内容のバッチファイルを作ってスタートアップ・フォルダ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; に放り込んでおけばよい。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/wait&lt;/code&gt; オプションを付けるとコマンド終了まで待機してくれる。
&lt;code&gt;start /wait&lt;/code&gt; と &lt;code&gt;call&lt;/code&gt; コマンド（&lt;code&gt;call&lt;/code&gt; も内蔵コマンド）は似ているようで異なった動作をする。
これはバッチ処理をファイル単位で入れ子の構造にするとよく分かる。
簡単な実験をしてみよう。&lt;/p&gt;
&lt;p&gt;まず，以下の内容で &lt;code&gt;alice.cmd&lt;/code&gt; というバッチファイルを作る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;call&lt;/span&gt; bob.cmd
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;alice.cmd&lt;/code&gt; の中で呼び出している &lt;code&gt;bob.cmd&lt;/code&gt; の内容は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Bob!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;alice.cmd&lt;/code&gt; も &lt;code&gt;bob.cmd&lt;/code&gt; も最終行が &lt;code&gt;exit /b&lt;/code&gt; になっているのがポイント。
&lt;code&gt;/b&lt;/code&gt; オプションを付けることでバッチ処理の終了であることを明示し，バッチファイルをモジュール化できる。&lt;/p&gt;
&lt;p&gt;これで &lt;code&gt;alice.cmd&lt;/code&gt; を実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Bob!
Hello, Alice!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となった。
&lt;code&gt;bob.cmd&lt;/code&gt; がサブルーチンのように機能しているのが分かると思う。&lt;/p&gt;
&lt;p&gt;このように Windows バッチ処理では &lt;code&gt;call&lt;/code&gt; と &lt;code&gt;exit /b&lt;/code&gt; を組み合わせてバッチ処理をモジュール化し再利用可能とすることができる&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;次に &lt;code&gt;alice.cmd&lt;/code&gt; の内容を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /b /wait bob.cmd
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とし， call コマンドを start コマンドに置き換える。
これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Bob!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;bob.cmd&lt;/code&gt; バッチ終了のタイミングでバッチ処理全体が終了してしまう。
&lt;code&gt;start&lt;/code&gt; コマンドを使うと &lt;code&gt;cmd.exe /k bob.cmd&lt;/code&gt; 相当のプロセスが走る筈なのだが，子バッチを &lt;code&gt;/b /wait&lt;/code&gt; オプション付きで呼び出した場合は，親子全体でひとつのバッチ処理として解釈されるのか，子バッチ処理が終了した時点で親バッチ処理もろともプロセスが終了してしまうらしい&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
これを回避するための &lt;code&gt;call&lt;/code&gt; コマンドというわけだ。&lt;/p&gt;
&lt;p&gt;ちなみに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /b bob.cmd
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;/wait&lt;/code&gt; オプションを外すと，同じコマンドプロンプト・ウィンドウ上で別プロセスとして駆動するため，出力順が不定になる。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Alice!
Hello, Bob!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じ。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; の start&lt;/h2&gt;
&lt;p&gt;まるっきり余談だが， &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; では &lt;code&gt;start&lt;/code&gt; コマンドは独自内蔵コマンドとして定義されている&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
いや，うっかり &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; 上で &lt;code&gt;start /?&lt;/code&gt; ってやったら， &amp;lsquo;?&amp;rsquo; なんてコマンド知らん（←超意訳）と怒られてしまったのだ（笑）&lt;/p&gt;
&lt;p&gt;あぁ，でも，バッチファイルは &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; から起動しても &lt;code&gt;cmd.exe&lt;/code&gt; 上のプロセスとして走るのでご心配なく。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zetamatta/books/c84cbe23093eee1b5830&#34;&gt;/bin/shに慣れた人に贈るバッチファイルの書き方&lt;/a&gt; : バッチ処理を組む際に参考になる。オススメ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-gnupg-for-windows-2/&#34;&gt;GnuPG for Windows : gpg-agent について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ユーザごとのスタートアップフォルダの位置例： &lt;code&gt;%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;call&lt;/code&gt; と &lt;code&gt;exit /b&lt;/code&gt; の組み合わせは同一ファイル内でも可能。この場合 &lt;code&gt;call :label&lt;/code&gt; のようにラベルで飛び先を指定する。ラベルをアンカーにしたジャンプなので，どうしても記述がアセンブラっぽくなってしまうのがにんともかんとも。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;件の Scrap で教えてもらったが，おそらく DOS 時代のバッチ処理との互換性を維持するためだろう，とのこと。&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;code&gt;start&lt;/code&gt; コマンドは &lt;code&gt;nyagos.d\start.lua&lt;/code&gt; で定義されている。&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>非公開 Facebook Page を晒される</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/facebook-page/" />
		<id>tag:text.Baldanders.info,2021-05-05:/remark/2021/05/facebook-page/</id>
		<published>2021-05-05T10:43:57+09:00</published>
		<updated>2021-05-05T04:18:00+00:00</updated>
		<summary>非公開で何の活動も表示されない本人アカウントと何やら活動してるっぽいなりすましアカウントのどちらを信用するかという話である</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;既に Facebook の TL では既に愚痴ってるが，実害が出る前に注意喚起しておく。&lt;/p&gt;
&lt;p&gt;私はずいぶん前から Facebook の TL に載せる記事を「友人」限定にして Facebook Page も「友人」以外には見えないようにしている。
なので「友人」関係にない人が私の Facebook Page を見てもエラー画面が表示されるだけだったのだ，この前までは！&lt;/p&gt;
&lt;p&gt;実はこの前，職場で間違えて自分の Facebook Page をブラウザで開いてしまったのよ。
したら，いつものエラー画面ではなく，普通に Facebook Page が表示されてビックリしてしまった。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./facebook-page.jpg&#34;&gt;&lt;img src=&#34;./facebook-page.jpg&#34; srcset=&#34;./facebook-page.jpg 1306w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;なにすんねん！！&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./facebook-page.jpg&#34;&gt;なにすんねん！！&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;さすがにプロフィール情報とか TL に上げた記事や写真は非表示になっているが，アテンション画像やアバターアイコン，名前・ニックネーム・1行コメントはそのまま表示される。
これだけなら「なにすんねん」で済む話だが，たちの悪いことに同名または類似名のユーザを列挙してくれやがるのよ。&lt;/p&gt;
&lt;p&gt;この結果なにが起きるかというと情報非公開の Facebook ユーザを容易にサーベイできるわけ。&lt;/p&gt;
&lt;p&gt;マジで要らんことするよね Facebook は！&lt;/p&gt;
&lt;p&gt;この件は Facebook Page を公開している人には「それがどーした」な話だろう。
しかし，今の御時世 SNS を使ってるのはセルフ・ブランディングや自己肯定感を満たす目的の人だけではないのだ。&lt;/p&gt;
&lt;p&gt;私は Facebook を広島時代の友人や大学時代の友人や先輩方との連絡手段として使っている。
ついでに TL で「ド田舎に引きこもっても相変わらず馬鹿やってますよー」と生存証明の記事を上げている。
それがなかったら（&lt;a href=&#34;https://text.baldanders.info/remark/2020/08/divorce-from-instagram/&#34; title=&#34;Instagram から足を洗う方法&#34;&gt;Instagram と同じく&lt;/a&gt;）プライバシーに敵対的なサービスのアカウントなんかとっくに潰してるっての（まぁ BAN されたら復帰せず終了するけどw）。&lt;/p&gt;
&lt;p&gt;最近 Facebook の友人がアバターアイコンをパクられ，なりすましアカウントを作られたと TL で報告していた。
非公開で何の活動も表示されない本人アカウントと何やら活動してるっぽいなりすましアカウントのどちらを（第三者から見て）信用するかという話である。&lt;/p&gt;
&lt;p&gt;というわけで，長すぎるまえがきはここまでにして，本題の注意喚起。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;strong&gt;私名義の Facebook アカウントで私から「友人」申請をすることはありません。もし申請があっても 100% なりすましなのでご注意を！&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;私は現在，リアルで直接知り合った人以外には Facebook の友人申請をしないし受け付けないことにしている。
もし私の活動をフォローしたいという奇特な方がいらっしゃるのであれば，&lt;a href=&#34;https://text.baldanders.info/about-feeds/&#34; title=&#34;更新情報について&#34;&gt;このブログの feed&lt;/a&gt; を食わせるか &lt;a href=&#34;https://twitter.com/spiegel_2007&#34;&gt;Twitter アカウント&lt;/a&gt; をフォローしていただければありがたい。
相互フォローの強要などしないのでご心配なく（笑） どうしても Facebook の「友人」関係が必要であれば直接お会いしましょう。
個別のやりとりで私のケータイ番号をご存知であれば &lt;a href=&#34;https://www.signal.org/&#34;&gt;Signal&lt;/a&gt; がオススメ。&lt;/p&gt;
&lt;p&gt;ちなみに Facebook アカウントのアバターアイコンは（Facebook への抗議の意味を込めて）違うものに差し替えた。
3.11 の復興活動が「収束宣言」するまでは “Pray for Japan” のバッヂの付いたアイコンで通すつもりだったが，残念なことである。&lt;/p&gt;
&lt;p&gt;時代は「ゆく川の流れ」のように移りゆく。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51T6PBdGbyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;超監視社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 池村 千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2016-12-13 (Release 2017-02-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01MZGVHOA (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 超監視社会 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0125TZSZ0?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/616sjle5ITL._SL160_.jpg&#34; width=&#34;109&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0125TZSZ0?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ダナ・ボイド (著), 野中 モモ (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2014-10-09 (Release 2015-07-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0125TZSZ0 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;読むのに1年半以上かかってしまった。ネット，特に SNS 上で自身のアイデンティティやプライバシーを保つにはどうすればいいか。豊富な事例を交えて考察する。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-10&#34;&gt;2016-05-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- つながりっぱなしの日常を生きる --&gt;
</content>
	</entry><entry>
		<title>MISRA-C の思ひ出（または「守られないルールはルール自体に問題がある」）</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/making-rule/" />
		<id>tag:text.Baldanders.info,2021-04-25:/remark/2021/04/making-rule/</id>
		<published>2021-04-25T11:35:57+09:00</published>
		<updated>2021-04-25T02:36:51+00:00</updated>
		<summary>ルール・メイキングは難しい</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;オンライン開催お疲れさまでした&lt;/h2&gt;
&lt;p&gt;2021-04-21 に開催された &lt;a href=&#34;https://gocon.connpass.com/event/208896/&#34;&gt;Go Conference 2021 Spring&lt;/a&gt; は初のオンラインだったそうで，週末の土曜日ということもあって，出不精で人見知りな私でも気軽に参加できたのがありがたかった。
（リアルタイム視聴も含めて）動画や音声のコンテンツはまとまった時間で拘束されてしまうのであまり好きではないのだが，たまにはこういうものに参加するのもよろしかろう。&lt;/p&gt;
&lt;p&gt;そのなかのひとつである&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/lmt_swallow/lets-build-security-guardrails-for-your-go-programs&#34; title=&#34;Go をセキュアに書き進めるための「ガードレール」を整備しよう / Let&#39;s Build Security Guardrails For Your Go Programs! - Speaker Deck&#34;&gt;Go をセキュアに書き進めるための「ガードレール」を整備しよう / Let&amp;rsquo;s Build Security Guardrails For Your Go Programs! - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;は興味深く視聴させてもらった。
特に &lt;a href=&#34;https://github.com/quasilyte/go-ruleguard&#34; title=&#34;quasilyte/go-ruleguard: Define and run pattern-based custom linting rules.&#34;&gt;go-ruleguard&lt;/a&gt; は面白そうだ。
個人でも使う機会があるかもしれない。&lt;/p&gt;
&lt;p&gt;ちなみに，&lt;a href=&#34;https://speakerdeck.com/lmt_swallow/lets-build-security-guardrails-for-your-go-programs&#34; title=&#34;Go をセキュアに書き進めるための「ガードレール」を整備しよう / Let&#39;s Build Security Guardrails For Your Go Programs! - Speaker Deck&#34;&gt;スライド&lt;/a&gt;にも書かれているが， &lt;a href=&#34;https://github.com/securego/gosec&#34; title=&#34;securego/gosec: Golang security checker&#34;&gt;gosec&lt;/a&gt; は &lt;a href=&#34;https://golangci-lint.run/&#34;&gt;golangci-lint&lt;/a&gt; にも組み込まれているので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ golangci-lint run --enable gosec ./...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;といった感じに使うことができる。&lt;/p&gt;
&lt;h2&gt;MISRA-C の思ひ出&lt;/h2&gt;
&lt;p&gt;この発表を視聴しながら思い出していたのは大昔に車載系のプロジェクトに参加したときのことだ。
あのときはアセンブラでベクタテーブルからゴリゴリ書いてたよなぁ（遠い目）&lt;/p&gt;
&lt;p&gt;今は違うと思うが，当時は MISRA-C というガイドラインがあって，これが車載系における事実上の C 言語コーディング基準（criteria）になっていた。&lt;/p&gt;
&lt;p&gt;詳細は割愛するが， MISRA-C には127個のルールがあって「必要（Required）」と「推奨（Advisory）」のいずれかに分類されている。
このうち「必要」ルールは強制的に課せられるルールで，このルールからの逸脱（deviation）を許容する場合には，手続きを踏んで文書化と承認を行わなければならない。
各ルールにはルールの詳細（何故そのルールが必要か）と逸脱可否の判断基準とサンプルコードが載っているので，それを参考に逸脱の可否を判定する。&lt;/p&gt;
&lt;p&gt;MISRA-C が定めるルール自体は合理的な内容なのだが，127個ものルールを机上でチェックするのは不毛なので MISRA-C 対応の lint ツールを使うことになる（当時はこれがバカ高くてねぇ）。
で，当然ながら lint ツールは製品の差別化のために MISRA-C 以外のルールもチェックできるようになっていて，最終的に数百ものルールをチェックすることになる。&lt;/p&gt;
&lt;h2&gt;守られないルールはルール自体に問題がある&lt;/h2&gt;
&lt;p&gt;問題は lint を実施した結果，大量の警告が出た場合である。
あるルールについて大量の逸脱が発生する理由は大きく2つある。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;プログラム設計が根本的に間違っている&lt;/li&gt;
&lt;li&gt;ルールが間違っている&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;プログラマのスキルによるかもしれないが，経験上こういうときに前者が理由であることはほとんどない。
なので，まずは「ルールが間違っている」のではないかと疑ってみるのが定石である。&lt;/p&gt;
&lt;p&gt;基本的に「ルールは守られるべきもの」であるが，ルールもまた人間が考えたものであり，間違っている可能性を常に考慮すべきである。
何故なら人間は間違いを犯す生き物なのだから。&lt;/p&gt;
&lt;p&gt;私は「悪法も法」という考え方には与しない。
「悪法は悪法」であり正すべきだ。
そして「悪法」の判断基準のひとつが「守られないルールはルール自体に問題がある」である。
ルールもリファクタリングの対象となる「コード」なのだ。&lt;/p&gt;
&lt;p&gt;最初に挙げた&lt;a href=&#34;https://speakerdeck.com/lmt_swallow/lets-build-security-guardrails-for-your-go-programs&#34; title=&#34;Go をセキュアに書き進めるための「ガードレール」を整備しよう / Let&#39;s Build Security Guardrails For Your Go Programs! - Speaker Deck&#34;&gt;発表&lt;/a&gt;では &lt;a href=&#34;https://github.com/reviewdog/reviewdog&#34; title=&#34;reviewdog/reviewdog: 🐶 Automated code review tool integrated with any code analysis tools regardless of programming language&#34;&gt;reviewdog&lt;/a&gt; を使って変更部分のみチェックする方法が紹介されていたが， &lt;a href=&#34;https://github.com/reviewdog/reviewdog&#34; title=&#34;reviewdog/reviewdog: 🐶 Automated code review tool integrated with any code analysis tools regardless of programming language&#34;&gt;reviewdog&lt;/a&gt; を常用するのは個人的にお勧めできない。
これが常態化すると「動いてるコードは触るな」という方向に行きがちで，それによってリファクタリングの機会を失うこととなり，最終的に&lt;a href=&#34;https://text.baldanders.info/remark/2020/12/technical-debt-and-hacker/&#34; title=&#34;技術的負債とハッカー&#34;&gt;技術的負債&lt;/a&gt;の返済が遅れることになる。
リファクタリングに厚いのが Go の持ち味なので，これを抑圧するような運用は避けるべきだろう。&lt;/p&gt;
&lt;p&gt;ことほど左様にルール・メイキングというのは難しいのである。
できるなら，煩わしいことは機械に任せて楽しくコードを書きたいものである。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/using-golangci-lint-action/&#34;&gt;golangci-lint を GitHub Actions で使う&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4542503461?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51CAFNAdZPL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4542503461?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;組込み開発者におくるMISRA‐C:2004―C言語利用の高信頼化ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;MISRA‐C研究会 (編集)&lt;/dd&gt;
    &lt;dd&gt;日本規格協会 2006-10-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4542503461 (ASIN), 9784542503465 (EAN), 4542503461 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;私が持っているのはこれよりひとつ古い版だが，まぁいいか。むかし，車載用の組み込みエンジニアをやっていた頃は必読書として読まされました。今はもっと包括的な内容のものがあるはず。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-02-06&#34;&gt;2019-02-06&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 組込み開発者におくるMISRA‐C:2004 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01CYDGUV8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31Q2jh&amp;#43;5SgL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01CYDGUV8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;CODE VERSION 2.0&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ローレンス・レッシグ (著), 山形浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;翔泳社 2007-12-19 (Release 2016-03-14)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01CYDGUV8 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;前著『CODE』改訂版。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-11-17&#34;&gt;2018-11-17&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- CODE VERSION 2.0 --&gt;
</content>
	</entry><entry>
		<title>FinTech の曲がり角</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/cryptocurrency-with-signal/" />
		<id>tag:text.Baldanders.info,2021-04-24:/remark/2021/04/cryptocurrency-with-signal/</id>
		<published>2021-04-24T15:12:30+09:00</published>
		<updated>2021-05-04T04:59:49+00:00</updated>
		<summary>藪をつついて蛇を出す</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;2週間以上前の記事で恐縮だが &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; がいわゆる暗号通貨（cryptocurrency）機能を組み込むらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/signal-mobilecoin-payments-messaging-cryptocurrency/&#34;&gt;Signal Adds a Payments Feature—With a Privacy-Focused Cryptocurrency | WIRED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/04/wtf-signal-adds-cryptocurrency-support.html&#34;&gt;Signal Adds Cryptocurrency Support - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stephendiehl.com/blog/signal.html&#34;&gt;Et tu, Signal?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/04/07/2021-04-06-signal-tests-payments-in-the-uk-using-mobilecoin/&#34;&gt;暗号化チャットのSignalが英国でMobileCoinによる決済機能をテスト中  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210412/signal-cryptcurrency&#34;&gt;メッセージングアプリSignalの暗号通貨による送金機能の追加にブルース・シュナイアーが苦言 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実はこの話はほぼスルーしていたのだが &lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210412/signal-cryptcurrency&#34; title=&#34;メッセージングアプリSignalの暗号通貨による送金機能の追加にブルース・シュナイアーが苦言 - YAMDAS現更新履歴&#34;&gt;yomoyomo さんの記事&lt;/a&gt;を見て，やはり「ログ」として残しておくのがいいだろうという気分になった。&lt;/p&gt;
&lt;p&gt;この問題は Bruce Schneier 先生の以下の一文に集約できるだろう。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;It’s that adding a cryptocurrency to an end-to-end encrypted app muddies the morality of the product, and invites all sorts of government investigative and regulatory meddling: by the IRS, the SEC, FinCEN, and probably the FBI&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/04/wtf-signal-adds-cryptocurrency-support.html&#34;&gt;Signal Adds Cryptocurrency Support&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;日本語でいうと「藪をつついて蛇を出す」。
個人的な印象で恐縮だが，信頼できる暗号化メッセージング・アプリケーションはもはや &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; が唯一と思っているので，マジで勘弁していただきたいところである。
そんなもん入れられるくらいなら普通に &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; に金を払うよ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;そもそも2018年に G20 が「それ」を&lt;a href=&#34;https://text.baldanders.info/remark/2018/12/crypto-assets/&#34; title=&#34;「暗号資産」とやら&#34;&gt;暗号資産（crypto-assets）と定義&lt;/a&gt;した時点で，私の中では「試合終了」だったのよ&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
最近では「通貨」機能は諦めたのか NFT (Non-Fungible Token) が流行りらしいが， Xanadu 未満の駄アイデアにしか見えない。
追記型データベースとしての Blockchain も意外に使い道がなく，むしろ「&lt;a href=&#34;https://wired.jp/2021/03/30/blockchain-cryptocurrency-energy-use/&#34; title=&#34;ブロックチェーンによるエネルギーの大量消費を解消できるか：動き出したイーサリアムと「PoS」の潜在力 | WIRED.jp&#34;&gt;環境にやさしくない&lt;/a&gt;」とか言われているし（笑）&lt;/p&gt;
&lt;p&gt;いずれにしろデジタル・トークンを「通貨」とみなして流通させる季節はとっくに終わってるわけで，あとは「資産」としてのデジタル・トークンの運用で一山当てようという山師的な発想しか見えてこない。&lt;/p&gt;
&lt;p&gt;デジタル・トークンの「資産運用」を全面否定するつもりはないが（私は関わりたくないが）， &lt;a href=&#34;https://signal.org/&#34;&gt;Signal&lt;/a&gt; のようなセキュリティまたはプライバシー上のクリティカル・サービスで山師的機能を付加する動きについては，今後は厳しく監視していく必要があるかもしれない。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/01/cryptocurrency-are-not-crypto/&#34;&gt;「暗号通貨」ってゆーな！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/05/internet-as-a-class-system/&#34;&gt;階級社会としてのインターネット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/02/blockchain-and-trust-by-bruce-schneier/&#34;&gt;“Blockchain and Trust” by Bruce Schneier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;ruby&gt;&lt;rb&gt;無料&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;ただ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;ほど高い「安心安全」はない。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;何故 G20 が「暗号資産」と定義したか考えて欲しい。通貨としての信頼と安定がないからだよ。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>いまさら英語の教科書を買ってみる</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/english-textbook/" />
		<id>tag:text.Baldanders.info,2021-04-24:/remark/2021/04/english-textbook/</id>
		<published>2021-04-24T12:21:34+09:00</published>
		<updated>2021-04-24T03:21:58+00:00</updated>
		<summary>中学生の時に読みたかったよ orz</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;広島でリトルプレスなどの出版関連事業をされている&lt;a href=&#34;https://shiomachi.com/&#34;&gt;しおまち書房&lt;/a&gt;さんで『&lt;a href=&#34;https://www.amazon.co.jp/dp/4906985084?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;with #前置詞といっしょ！&lt;/a&gt;』の&lt;a href=&#34;https://shiomachi.com/6346&#34;&gt;第三刷&lt;/a&gt;の予約を始めるというので，同シリーズの他の2冊と併せて少し前に申し込んだ。
商品が来るまで時間がかかると思っていたのだが，割とすぐに届いたよ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/51127175948/&#34;&gt;&lt;img src=&#34;./51127175948_ce98d303a6_e.jpg&#34; srcset=&#34;./51127175948_ce98d303a6_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;予約していた本が来た！&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/51127175948/&#34;&gt;予約していた本が来た！&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;実はこの本の存在は広島に居た頃から知っていたのだが，何となく買いそびれていたのだ。
郷里の松江に引っ込んでから買うというのも我ながらにんともかんともな感じだが，ネット万歳と好意的に解釈しておこう（笑）&lt;/p&gt;
&lt;p&gt;お恥ずかしい話だが，私は子供の頃から授業で習う「英語」が壊滅的で，コレのせいで大学入試でも志望先のランクをひとつ落とさざるを得なかったし，今でも英語でめっさ苦労している。
大企業なら大抵は専門の翻訳・通訳セクションがあるものなので，英語不得手でも最低限はどうにかなるだろうが，それでもコミュニケーションの齟齬による誤解や勘違いはつきまとうし，なにより自己学習で英語の資料が読めないというのは本当に困る。&lt;/p&gt;
&lt;p&gt;これはプログラミング言語でも同じだが，ある言語を習うということは言語を含む文化的背景も込みで勉強することだ。&lt;/p&gt;
&lt;p&gt;残念なことに，これに気付いたのは社会人になってマジで英語で苦労するようになってからだった。
今回買った本には「英語的な視点」といった言い回しが時々出てくる。
英語を習うということは日本語および日本との文化的差異を習う，つまり「他人の靴を履いてみる（＝ empathy）」ことなのだろう。&lt;/p&gt;
&lt;p&gt;&amp;hellip;ということを（頭のやわらかい）中学生の時に習いたかったよ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07143DX2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41FJD5dKu1L._SL160_.jpg&#34; width=&#34;159&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07143DX2F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;with #前置詞といっしょ！: 電子書籍版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;三戸　雅彦 (著), 木村　ヨーシロー (写真)&lt;/dd&gt;
    &lt;dd&gt; 2017-05-07 (Release 2017-05-07)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07143DX2F (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;対象年齢は小学3年生から。“with” をはじめとしたよく使われる10個の前置詞についてふんわりとしたイメージを掴むことができる。中学生の時に読みたかった orz&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-24&#34;&gt;2021-04-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- with #前置詞といっしょ！ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4906985165?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/61AnalwQPSL._SL160_.jpg&#34; width=&#34;159&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4906985165?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;coffee ＃名詞のヒミツ！～英語を楽しく学ぼう～&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;三戸雅彦 (著)&lt;/dd&gt;
    &lt;dd&gt;しおまち書房 2018-01-01&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4906985165 (ASIN), 9784906985166 (EAN), 4906985165 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;同じ著者による『with #前置詞といっしょ！』の続編と言えるもの。可算名詞や不可算名詞，単数形と複数形で意味が変わるもの，冠詞の使い方，といったことを言葉のイメージを中心に解説している。中学生の時に読みたかった orz&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-24&#34;&gt;2021-04-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- coffee ＃名詞のヒミツ！ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4906985262?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51qgm3W4VeL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4906985262?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;中学→高校の英文法が図解でわかるノート　基礎編　#動詞と踏み出そう！&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;三戸 雅彦 (著)&lt;/dd&gt;
    &lt;dd&gt;しおまち書房 2020-01-01&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4906985262 (ASIN), 9784906985265 (EAN), 4906985262 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;同じ著者による『with #前置詞といっしょ！』『coffee ＃名詞のヒミツ！』の続編と言えるが対象年齢はもう少し「お兄さん・お姉さん」向けの内容。動詞を中心に授業のノートのような紙面構成で書かれていて分かりやすい。勉強中。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-24&#34;&gt;2021-04-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- #動詞と踏み出そう！ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07T35YXVV?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51B9J8lIYrL._SL160_.jpg&#34; width=&#34;110&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07T35YXVV?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ぼくはイエローでホワイトで、ちょっとブルー&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブレイディみかこ (著)&lt;/dd&gt;
    &lt;dd&gt;新潮社 2019-06-21 (Release 2019-06-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B07T35YXVV (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;某書籍で紹介されていたので。気が向いたら読んでみよう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-24&#34;&gt;2021-04-24&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ぼくはイエローでホワイトで、ちょっとブルー --&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>Google vs Oracle の訴訟の行方（最終章）</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/google-vs-oracle-final/" />
		<id>tag:text.Baldanders.info,2021-04-11:/remark/2021/04/google-vs-oracle-final/</id>
		<published>2021-04-11T11:00:27+09:00</published>
		<updated>2021-04-16T23:01:33+00:00</updated>
		<summary>これが日本の法制下であれば，おそらく Google は Oracle に勝てないだろう。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先月に「&lt;a href=&#34;https://text.baldanders.info/remark/2021/03/google-vs-oracle-3/&#34;&gt;Google vs Oracle の訴訟の行方 3&lt;/a&gt;」を書いたばかりで，私としては判決が出るのは早くても夏以降だろうと高をくくっていたのだが，4月早々に判決が出ちゃいました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2021-04-06-supreme-court-sides-with-developers-in-google-v-oracle/&#34;&gt;Supreme Court sides with developers in Google v. Oracle - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35168881/&#34;&gt;グーグル、米最高裁でオラクルに勝訴&amp;ndash;「Android」Javaコード訴訟で - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/10googlejava_se.html&#34;&gt;［速報］10年にわたる著作権訴訟でGoogleがオラクルに勝訴、米連邦最高裁判所で判決。Java SEのコードのコピーはフェアユースの範囲 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これにより Andorid における Java API の利用（コピー）は fair use の範疇であることが認められた。&lt;/p&gt;
&lt;p&gt;念のために書いておくけど，ライブラリやフレームワーク等で提供される API (Application Programming Interface) そのものには著作権があり，その利用（複製・配布・改変）について規制がかかる，という点は覆らない。
その上で各 API の利用が fair use の範疇であるか否かについては個別の案件となる。
これが今回の訴訟における最重要ポイントである。&lt;/p&gt;
&lt;p&gt;これが日本の法制下であれば，おそらく Google は Oracle に勝てないだろう。
何故なら，日本には fair use 規定がなく，争うとすれば「著作権の制限」から攻めるしかないが，「著作権の制限」には「API の公正利用」などという状況は想定されていないからだ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
これだけ見ても，いかに日本の著作権法が時代遅れで「周回遅れ」も宜なるかな，と実感させられるだろう。&lt;/p&gt;
&lt;p&gt;もうひとつ，念のために書いておくと，著作権が規制するのは「表現」であって「アイデア」ではない。
故に著作物を「使用」するだけなら著作権は関知しないし&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，先行者優位もないので独立で公表される「表現」がどれだけ似ていてもお互いに規制することはできない。
まぁ，お互いに「独立の表現」であることを証明するのは，今の情報が溢れかえる時代に於いては「悪魔の証明」に近いかもしれないけど（笑）&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4641243336?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51LanI5bgAL._SL160_.jpg&#34; width=&#34;117&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4641243336?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;著作権法 第3版&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;中山 信弘 (著)&lt;/dd&gt;
    &lt;dd&gt;有斐閣 2020-09-04&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4641243336 (ASIN), 9784641243330 (EAN), 4641243336 (ISBN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;第3版が出てた。第2版は図書館で借りて読んだが，途中でギブアップした。個人が興味本位で読める本ではないらしい（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-10-12&#34;&gt;2020-10-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 著作権法 第3版 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757102852?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41YkbcP5IyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757102852?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;著作権２．０ ウェブ時代の文化発展をめざして (NTT出版ライブラリー―レゾナント)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;名和 小太郎 (著)&lt;/dd&gt;
    &lt;dd&gt;NTT出版 2010-06-24&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4757102852 (ASIN), 9784757102859 (EAN), 4757102852 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;名著です。今すぐ買うべきです。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-02&#34;&gt;2014-08-02&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 著作権２．０ ウェブ時代の文化発展をめざして --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4757122349?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ftPU2g7FL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4757122349?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;〈反〉知的独占　―特許と著作権の経済学&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ミケーレ・ボルドリン (著), デイヴィッド・Ｋ・レヴァイン (著), 山形浩生 (翻訳), 守岡桜　 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;NTT出版 2010-10-22&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4757122349 (ASIN), 9784757122345 (EAN), 4757122349 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「知的財産権は、人類進歩を阻害する！」（帯文より）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-11-17&#34;&gt;2018-11-17&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 〈反〉知的独占 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01CYDGUV8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31Q2jh&amp;#43;5SgL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01CYDGUV8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;CODE VERSION 2.0&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ローレンス・レッシグ (著), 山形浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;翔泳社 2007-12-19 (Release 2016-03-14)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01CYDGUV8 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;前著『CODE』改訂版。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-11-17&#34;&gt;2018-11-17&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- CODE VERSION 2.0 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4622073455?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41bepOIquwL._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4622073455?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;〈海賊版〉の思想‐18世紀英国の永久コピーライト闘争&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;山田 奨治 (著)&lt;/dd&gt;
    &lt;dd&gt;みすず書房 2007-12-20&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4622073455 (ASIN), 9784622073451 (EAN), 4622073455 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「コピーライト永久独占を目論む大書店主に挑む〈海賊出版者〉ドナルドソンの肖像。法廷闘争を軸に著作権を史的に考察する。」（帯文より）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-11-13&#34;&gt;2018-11-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 〈海賊版〉の思想‐18世紀英国の永久コピーライト闘争 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4797334673?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41tEJvyOO2L._SL160_.jpg&#34; width=&#34;97&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4797334673?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;インターネットの法と慣習　かなり奇妙な法学入門 [ソフトバンク新書]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;白田 秀彰 (著)&lt;/dd&gt;
    &lt;dd&gt;ソフトバンククリエイティブ 2006-07-15&lt;/dd&gt;
    &lt;dd&gt;新書&lt;/dd&gt;
    &lt;dd&gt;4797334673 (ASIN), 9784797334678 (EAN), 4797334673 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ライアカ本。 Web 2.0 真っ只中に書かれた本だが，時事的な部分を除けば古びてはいないと思う。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-09-14&#34;&gt;2014-09-14&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- インターネットの法と慣習 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/11/copyright-law-is-revised/&#34;&gt;2019年初の著作権法改正&lt;/a&gt;で「著作権の制限」の幾つかが拡張されたが，これは AI 等へのデータ利用を想定したもので API 等のコード要素そのものを想定したものではない。まぁ「AI 等へのデータ利用」についてようやく2019年初で改正された，というのも数年の周回遅れではあるけどね。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;まぁ，でも， API を「利用」することなく「使用」するという状況は思い浮かばないけど（笑） たとえば Web API のようにプロトコルを規定しているだけの場合でも，プロトコルそのものに著作権が適用されるのなら同じことだ。もちろん API を通してやり取りされるデータにも（データベースの）著作権があるのでご注意を。本当に著作権はエンジニアにとって面倒くさい規制だよ。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>資本主義の走狗としての AI 技術</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/ai-as-a-tool-by-capitalism/" />
		<id>tag:text.Baldanders.info,2021-04-05:/remark/2021/04/ai-as-a-tool-by-capitalism/</id>
		<published>2021-04-05T19:57:54+09:00</published>
		<updated>2021-04-05T11:12:57+00:00</updated>
		<summary>あっ！（私でも知ってる）テッド・チャンの記事だ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;あっ！（私でも知ってる）テッド・チャンの記事だ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210405/ted-chaing-fears-capitalism&#34; title=&#34;テッド・チャンはAIでなく資本主義を恐れる - YAMDAS現更新履歴&#34;&gt;テッド・チャンはAIでなく資本主義を恐れる - YAMDAS現更新履歴&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nytimes.com/2021/03/30/podcasts/ezra-klein-podcast-ted-chiang-transcript.html&#34;&gt;Transcript: Ezra Klein Interviews Ted Chiang - The New York Times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kottke.org/21/04/ted-chiang-fears-of-technology-are-fears-of-capitalism&#34;&gt;Ted Chiang: Fears of Technology Are Fears of Capitalism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;とりあえず『&lt;a href=&#34;https://www.amazon.co.jp/dp/B0823T8D4K?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;息吹&lt;/a&gt;』は &lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210405/ted-chaing-fears-capitalism&#34; title=&#34;テッド・チャンはAIでなく資本主義を恐れる - YAMDAS現更新履歴&#34;&gt;yomoyomo さんのページ&lt;/a&gt;から発注した。
私は『&lt;a href=&#34;https://www.amazon.co.jp/dp/B00O2O7JEA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;あなたの人生の物語&lt;/a&gt;』は「理解」が一番面白いと思ってる人間なので（中二病全開な話は好きなのよ）好みとはズレてるかもしれないが。&lt;/p&gt;
&lt;p&gt;ちなみに私は，上の記事の内容とは少し違う文脈&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; で「十分に発達した技術は魔法と区別がつかない（&lt;a href=&#34;https://en.wikipedia.org/wiki/Clarke%27s_three_laws&#34; title=&#34;Clarke&#39;s three laws - Wikipedia&#34;&gt;Any sufficiently advanced technology is indistinguishable from magic&lt;/a&gt;）」というもの言いには批判的な立場の人間である。
それは「区別がつかない」のではなく単なる「科学技術の放棄」だ。
人類が宇宙に飛び去った後の地球で猫が人類の「遺跡」を使って文明社会っぽい暮らしをしているようなものである（笑） 箸が転んでも「SF だ！」と言う SF 者はそれも SF と言うかもしれないが，科学技術が放棄・失伝された世界観はどちらかというとファンタジーやオカルトに分類される。&lt;/p&gt;
&lt;p&gt;エンジニア，特にソフトウェア・エンジニアには「技術が社会を変える」などというそれこそ中二病な発想をする人がそこそこいる気がする。&lt;/p&gt;
&lt;p&gt;確かに何某かの技術革新がパラダイムシフト（社会構造の根本を変える）トリガーとなることはある。
産業革命とか典型的だし，コンピュータの登場からインターネット・クラウド・人工知能と続く流れも，今世紀末あたりの時点から振り返ればパラダイムシフトだったという歴史認識になるかもしれない。&lt;/p&gt;
&lt;p&gt;でも，それでも人の社会を構成するのは人であり，変えることができるのも人だけだ。
人の社会は人の活動によって連綿と続くものであって，乙女ゲームの美麗スチルのように離散的に派生するイベントの寄せ集めではない。
ポストモダンなどという断絶はないのだ。&lt;/p&gt;
&lt;p&gt;もし「技術が社会を変える」ことがあるなら，それは社会を「変える」のではなく「放棄」だろう。
つまり技術によって作られた「なにか」に社会を明け渡すということに他ならない。
人がそれを善しとするのなら，&lt;a href=&#34;https://www.jp.square-enix.com/nierreplicantv1p2/&#34; title=&#34;NieR Replicant ver.1.22474487139... | SQUARE ENIX&#34;&gt;人類社会はそこで試合終了&lt;/a&gt;である。&lt;/p&gt;
&lt;p&gt;まぁ，この手のデストピアは SF では鉄板ネタだし，だからこそ「&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/the-myth-of-the-singularity/&#34; title=&#34;『シンギュラリティの神話』を読む&#34;&gt;シンギュラリティ（特異点）&lt;/a&gt;」などという妄執に取り憑かれる人も出てくるのだろう。
20世紀末に「超能力」というオカルトが（SF 作品にも出てくるほど）大流行したように，「シンギュラリティ」というオカルトもしばらくは流行り続けるかもしれない。&lt;/p&gt;
&lt;p&gt;話が逸れた。&lt;/p&gt;
&lt;p&gt;結局「&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210405/ted-chaing-fears-capitalism&#34; title=&#34;テッド・チャンはAIでなく資本主義を恐れる - YAMDAS現更新履歴&#34;&gt;AIでなく資本主義を恐れる&lt;/a&gt;」という話は「包丁による刺殺で罪に問われるべきは包丁ではなく（作った人でもなく）それを使った人間である」という定番の話をそれらしく壮大に語っているだけのように見える。&lt;/p&gt;
&lt;p&gt;コンピュータ，インターネット，オープンソースと情報処理技術が「産業機械」として社会に組み込まれていく中で，クラウドは最初から資本主義そのものを想像し象徴するシステムとして登場している。
そして，そのクラウド（に溢れる情報）を効率的に処理する道具（のひとつ）が現在の AI 技術なのである。&lt;/p&gt;
&lt;p&gt;ならば，資本主義の走狗としての AI 技術が人の社会の中で正しく「使われる」よう（規制を含めて）仕組みを整えていくのは人の役割である。
「シンギュラリティ」なるオカルトに引きこもっている場合ではないということだ。&lt;/p&gt;
&lt;p&gt;実際には，情報処理技術をコントロールする「仕組み」自体が情報処理技術で構成されているというのが本当の問題なんだろうけど。
アダム（CompilerZero）を元に作られたエヴァ（CompilerOne）は本当に「正しい」のか，ということだ。&lt;/p&gt;
&lt;p&gt;「正しい」も情報のひとつに過ぎないのだから。&lt;/p&gt;
&lt;p&gt;最初に挙げた &lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210405/ted-chaing-fears-capitalism&#34; title=&#34;テッド・チャンはAIでなく資本主義を恐れる - YAMDAS現更新履歴&#34;&gt;yomoyomo さんの記事&lt;/a&gt;でさらりと紹介されているが，同じくテッド・チャンさんの&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.newyorker.com/culture/annals-of-inquiry/why-computers-wont-make-themselves-smarter&#34;&gt;Why Computers Won’t Make Themselves Smarter | The New Yorker&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/04/blog-post_4.html&#34;&gt;ブログ: なぜ、コンピュータは自ら賢くならないのか?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;を読んだ後に改めて『&lt;a href=&#34;https://www.amazon.co.jp/dp/B00O2O7JEA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;あなたの人生の物語&lt;/a&gt;』の「理解」を読むと，この短い作品が人の「知性」や「知能」といったものへの理解に対する痛烈な皮肉になっていることが分かる。&lt;/p&gt;
&lt;p&gt;やっぱテッド・チャンは面白いわ！&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0823T8D4K?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51kV4fmbdmL._SL160_.jpg&#34; width=&#34;110&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0823T8D4K?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;息吹&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;テッド チャン (著), 大森 望 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;早川書房 2019-12-04 (Release 2019-12-04)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0823T8D4K (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついカッとなってポチった。反省はしない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-05&#34;&gt;2021-04-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 息吹 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00O2O7JEA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51CqKbKl7xL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00O2O7JEA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;あなたの人生の物語&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;テッド チャン (著), 浅倉久志 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;早川書房 2012-08-25 (Release 2014-09-30)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00O2O7JEA (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;短編集。当時は移動中の電車とかで読んでた。個人的に一番好きなのは「理解」だったり。2016年（日本では2017年）に同名の短編が映画化された。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2003-09-22&#34;&gt;2003-09-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- あなたの人生の物語 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B013SEV0DA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51W19wCeK&amp;#43;L._SL160_.jpg&#34; width=&#34;110&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B013SEV0DA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ねこめ（～わく） １ (夢幻燈コミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;竹本泉 (著)&lt;/dd&gt;
    &lt;dd&gt;ハーパーコリンズ・ジャパン 2013-09-24 (Release 2015-08-25)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B013SEV0DA (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;『ねこめ〜わく』から続く，竹本泉さんのライフワーク的作品（？） 惜しむらくも7巻で完結してしまった。続編を望む（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-04-05&#34;&gt;2021-04-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ねこめ（～わく） --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nytimes.com/2021/03/30/podcasts/ezra-klein-podcast-ted-chiang-transcript.html&#34; title=&#34;Transcript: Ezra Klein Interviews Ted Chiang - The New York Times&#34;&gt;インタビュー記事&lt;/a&gt;を見る限り，科学技術と魔術・錬金術との違いは万人に開放されているか否かであり，その意味で科学技術と魔法が「区別がつかない」ということはない，という主張のようだ。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>「情報交換用に推奨される絵文字のリスト」を作ってみた</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/04/emoji-list/" />
		<id>tag:text.Baldanders.info,2021-04-02:/remark/2021/04/emoji-list/</id>
		<published>2021-04-02T22:26:53+09:00</published>
		<updated>2021-04-02T23:07:37+00:00</updated>
		<summary>とりあえずチョー面倒くさいのは分かった。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/03/terrible-emoji/&#34; title=&#34;おそるべき絵文字&#34;&gt;前回&lt;/a&gt;，絵文字についてちょろんと調べた余波で絵文字の一覧を作ってみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/emoji-list/&#34;&gt;情報交換用に推奨される絵文字のリスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/emoji-shortcodes/&#34;&gt;絵文字と Markdown Shortcodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本当はひとつの表にしたかったのだが，ページのレイアウトが崩れまくるので2つに分けた。
まぁ，それでも携帯端末で見たら崩れてると思うけど。&lt;/p&gt;
&lt;p&gt;今回の一覧を作るにあたって Unicode の公式ページから以下の情報を拾って使っている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.unicode.org/Public/UCD/latest/ucd/emoji/&#34;&gt;&lt;code&gt;https://www.unicode.org/Public/UCD/latest/ucd/emoji/&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.unicode.org/Public/UCD/latest/ucd/emoji/ReadMe.txt&#34;&gt;&lt;code&gt;ReadMe.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt&#34;&gt;&lt;code&gt;emoji-data.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-variation-sequences.txt&#34;&gt;&lt;code&gt;emoji-variation-sequences.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/&#34;&gt;&lt;code&gt;https://unicode.org/Public/emoji/&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/13.1/&#34;&gt;13.1/&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/13.1/ReadMe.txt&#34;&gt;&lt;code&gt;ReadMe.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/13.1/emoji-sequences.txt&#34;&gt;&lt;code&gt;emoji-sequences.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/13.1/emoji-zwj-sequences.txt&#34;&gt;&lt;code&gt;emoji-zwj-sequences.txt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なお markdown shortcodes の情報の取得には以下のパッケージを使った。
ありがたや。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kyokomi/emoji&#34;&gt;kyokomi/emoji: emoji terminal output for golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このパッケージは Hugo でも使われているので「&lt;a href=&#34;https://text.baldanders.info/emoji-shortcodes/&#34;&gt;絵文字と Markdown Shortcodes&lt;/a&gt;」にある markdown shortcodes は全て &lt;a href=&#34;https://text.baldanders.info/remark/2020/10/emoji-variation-and-markdown/&#34; title=&#34;絵文字と異体字と Markdown&#34;&gt;Hugo で使える&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;なにせ量が量なので手作業でやるわけにもいかず，データ取得用のパッケージを作った。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/emojis&#34;&gt;spiegel-im-spiegel/emojis: List of Emoji-Sequences&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中身は JSON データ作成用のモジュールと作成した JSON ファイルを読み込むモジュールに別れている。
JSON データ作成用のモジュールで作成した JASON ファイルは，パッケージの &lt;a href=&#34;https://github.com/spiegel-im-spiegel/emojis/tree/main/json&#34;&gt;&lt;code&gt;json/&lt;/code&gt;&lt;/a&gt; ディレクトリに置いている。
JSON データを読むための構造体定義も同じところに置いているので，ご利用はご自由にどうぞ。&lt;/p&gt;
&lt;h2&gt;絵文字の構造&lt;/h2&gt;
&lt;p&gt;今回利用したデータの中身については以下のページに公式の解説がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unicode.org/reports/tr51/&#34;&gt;UTS #51: Unicode Emoji&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以降で簡単に紹介してみる。&lt;/p&gt;
&lt;h3&gt;Emoji Characters&lt;/h3&gt;
&lt;p&gt;まず Unicode 符号点単位の「絵文字文字（emoji characters）」には文字種ごとに以下のプロパティが付与されている。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;プロパティ&lt;/th&gt;
&lt;th&gt;種別&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Extended_Pictographic&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;extended pictographic character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji_Presentation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;default emoji presentation character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji_Component&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji component&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji_Modifier&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji modifier&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji_Modifier_Base&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji modifier base&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;これらのプロパティは独立に付与されていて，複数のプロパティが付与されている符号点コードもある。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/emojis&#34; title=&#34;spiegel-im-spiegel/emojis: List of Emoji-Sequences&#34;&gt;spiegel-im-spiegel/emojis&lt;/a&gt; パッケージでは符号点コードごとにプロパティをチェックできるようにした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EmojiData&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Code&lt;/span&gt;                 &lt;span class=&#34;kt&#34;&gt;rune&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;                 &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Emoji&lt;/span&gt;                &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;EmojiPresentation&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Emoji_Presentation,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;EmojiModifier&lt;/span&gt;        &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Emoji_Modifier,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;EmojiModifierBase&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Emoji_Modifier_Base,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;EmojiComponent&lt;/span&gt;       &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Emoji_Component,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;ExtendedPictographic&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Extended_Pictographic,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;RegionalIndicator&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;Regional_Indicator,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;VariationTextStyle&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;VariationEmojiStyle&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;Emoji Presentation Sequences&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Emoji&lt;/code&gt; プロパティが付与されている符号点コードの直後に絵文字表示セレクタ &lt;code&gt;U+FE0F VARIATION SELECTOR-16&lt;/code&gt; を付けることで絵文字であることを明示できる。
といっても何でも組み合わせればいいというわけではないようで，先ほどの &lt;a href=&#34;https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-variation-sequences.txt&#34;&gt;&lt;code&gt;emoji-variation-sequences.txt&lt;/code&gt;&lt;/a&gt; で定義されているシーケンスのみ有効らしい。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;U+FE0F VARIATION SELECTOR-16&lt;/code&gt; には &lt;code&gt;Emoji_Component&lt;/code&gt; プロパティが付与されている。&lt;/p&gt;
&lt;h3&gt;Emoji Modifiers&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Emoji_Modifier_Base&lt;/code&gt; プロパティが付与されている符号点コードに &lt;code&gt;Emoji_Modifier&lt;/code&gt; プロパティが付与されている符号点コードを付けることで&lt;code&gt;Emoji_Modifier_Base&lt;/code&gt; プロパティが付与されている符号点コードの絵文字を装飾できる。&lt;/p&gt;
&lt;p&gt;といって現在は肌色のトーンを変更する符号点コードしかないのだが。
肌色の異体字については&lt;a href=&#34;https://text.baldanders.info/remark/2021/03/terrible-emoji/&#34; title=&#34;おそるべき絵文字&#34;&gt;前回&lt;/a&gt;の記事を参照のこと。&lt;/p&gt;
&lt;h3&gt;Emoji Flag Sequence&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Emoji_Component&lt;/code&gt; プロパティを持つ符号点コードの中に Regional Indicator に分類されるコードがあるのだが，このコードのうち2文字を組み合わせて国別コードを構成すると国旗の絵文字になるというトンデモ仕様がある。
これについても&lt;a href=&#34;https://text.baldanders.info/remark/2021/03/terrible-emoji/&#34; title=&#34;おそるべき絵文字&#34;&gt;前回&lt;/a&gt;の記事を参照のこと。&lt;/p&gt;
&lt;h3&gt;Emoji Tag Sequence (ETS)&lt;/h3&gt;
&lt;p&gt;まず，文字種を以下のように定義する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;tag_base := emoji_character | emoji_modifier_sequence | emoji_presentation_sequence
tag_spec := [\x{E0020}-\x{E007E}]+
tag_end  := \x{E007F}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;emoji_tag_sequence := tag_base tag_spec tag_end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と定義されるのが emoji tag sequence の構成である。
&lt;code&gt;tag_spec&lt;/code&gt; および &lt;code&gt;tag_end&lt;/code&gt; に含まれる符号点コードには &lt;code&gt;Emoji_Component&lt;/code&gt; プロパティが付与されている。&lt;/p&gt;
&lt;p&gt;Unicode v13 現在は subdivision-flag のみ実装されているようだ。
これについても&lt;a href=&#34;https://text.baldanders.info/remark/2021/03/terrible-emoji/&#34; title=&#34;おそるべき絵文字&#34;&gt;前回&lt;/a&gt;の記事を参照のこと。&lt;/p&gt;
&lt;h3&gt;Emoji Keycap Sequence&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;emoji_keycap_sequence := [0-9#*] \x{FE0F 20E3}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;たったこれだけのためのシーケンス。
なんだかなぁ。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;code&gt;[0-9#*]&lt;/code&gt; はただの半角文字だが &lt;code&gt;Emoji_Component&lt;/code&gt; プロパティが付与されている。
また &lt;code&gt;U+20E3&lt;/code&gt; にも &lt;code&gt;Emoji_Component&lt;/code&gt; プロパティが付与されている。&lt;/p&gt;
&lt;h3&gt;Emoji ZWJ Sequence&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;emoji_zwj_element := emoji_character | emoji_presentation_sequence | emoji_modifier_sequence
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;としたときに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;emoji_zwj_sequence := emoji_zwj_element ( ZWJ emoji_zwj_element )+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で構成される絵文字。
ちなみに &lt;code&gt;U+200D ZWJ&lt;/code&gt; は &lt;code&gt;Emoji_Component&lt;/code&gt; プロパティが付与された結合子で，これを使っていくらでも文字を繋げられるのが恐ろしい点である。
といっても情報交換用として推奨される組み合わせが &lt;a href=&#34;https://unicode.org/Public/emoji/13.1/emoji-zwj-sequences.txt&#34;&gt;&lt;code&gt;emoji-zwj-sequences.txt&lt;/code&gt;&lt;/a&gt; で定義されているので，この中から選択することになるだろう。&lt;/p&gt;
&lt;h2&gt;絵文字の分類&lt;/h2&gt;
&lt;p&gt;結局，絵文字の分類は以下のようになるらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;emoji sequence
&lt;ul&gt;
&lt;li&gt;emoji core sequence
&lt;ul&gt;
&lt;li&gt;emoji character&lt;/li&gt;
&lt;li&gt;emoji presentation sequence&lt;/li&gt;
&lt;li&gt;emoji keycap sequence&lt;/li&gt;
&lt;li&gt;emoji modifier sequence&lt;/li&gt;
&lt;li&gt;emoji flag sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;emoji zwj sequence&lt;/li&gt;
&lt;li&gt;emoji tag sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;emoji character が emoji core sequence に含まれている点に注目。&lt;/p&gt;
&lt;p&gt;で， “&lt;a href=&#34;http://www.unicode.org/reports/tr51/&#34;&gt;UTS #51: Unicode Emoji&lt;/a&gt;” に絵文字を判別するための正規表現ってのが載っていたのだが&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;\p{Regional_Indicator} \p{Regional_Indicator} 
| \p{Emoji} 
  ( \p{Emoji_Modifier} 
  | \x{FE0F} \x{20E3}? 
  | [\x{E0020}-\x{E007E}]+ \x{E007F} )?
  (\x{200D} \p{Emoji}
    ( \p{Emoji_Modifier} 
    | \x{FE0F} \x{20E3}? 
    | [\x{E0020}-\x{E007E}]+ \x{E007F} )?
  )*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;http://www.unicode.org/reports/tr51/&#34;&gt;UTS #51: Unicode Emoji&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;いやいやいや。
符号点コードごとに絵文字プロパティをチェックせんとアカンのかい！ これは面倒くさい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://unicode.org/Public/emoji/13.1/emoji-sequences.txt&#34;&gt;&lt;code&gt;emoji-sequences.txt&lt;/code&gt;&lt;/a&gt; および &lt;a href=&#34;https://unicode.org/Public/emoji/13.1/emoji-zwj-sequences.txt&#34;&gt;&lt;code&gt;emoji-zwj-sequences.txt&lt;/code&gt;&lt;/a&gt; ファイルでは収録している絵文字を以下のように分類している。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分類名&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Basic_Emoji&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Emoji_Presentation&lt;/code&gt; プロパティを含む emoji character または &lt;code&gt;Emoji_Presentation&lt;/code&gt; プロパティを含まない emoji character の emoji presentation sequence で構成された絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Emoji_Keycap_Sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji keycap sequence で構成された絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RGI_Emoji_Flag_Sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji flag sequence で構成される推奨絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RGI_Emoji_Tag_Sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji tag sequence で構成される推奨絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RGI_Emoji_Modifier_Sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji modifier sequence で構成される推奨絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;RGI_Emoji_ZWJ_Sequence&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;emoji zwj sequence で構成される推奨絵文字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ちなみに RGI は “Recommended for General Interchange” の略だそうだ。
超意訳するなら「情報交換用の推奨絵文字」ってところかねぇ。
なお「&lt;a href=&#34;https://text.baldanders.info/emoji-list/&#34;&gt;情報交換用に推奨される絵文字のリスト&lt;/a&gt;」ではこの分類を表示している。
また &lt;a href=&#34;https://github.com/spiegel-im-spiegel/emojis&#34; title=&#34;spiegel-im-spiegel/emojis: List of Emoji-Sequences&#34;&gt;spiegel-im-spiegel/emojis&lt;/a&gt; パッケージでは絵文字シーケンスごとにこの分類をセットしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SequencesType&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeUnknown&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SequencesType&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeBasicEmoji&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeEmojiKeycapSequence&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeRGIEmojiFlagSequence&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeRGIEmojiTagSequence&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeRGIEmojiModifierSequence&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;TypeRGIEmojiZWJSequence&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EmojiSequence&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Sequence&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;         &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;SequenceType&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;types&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SequencesType&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Shortcodes&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,omitempty&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで絵文字の調査は一段落かな。
とりあえずチョー面倒くさいのは分かった。&lt;/p&gt;
</content>
	</entry>
</feed>
