<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2023-05-20:/</id>
	<updated>2023-05-20T09:14:11+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>Zap と go-log を試す</title>
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/zap-and-golog/" />
		<id>tag:text.Baldanders.info,2023-05-20:/golang/zap-and-golog/</id>
		<published>2023-05-20T09:14:08+00:00</published>
		<updated>2023-05-20T09:14:11+00:00</updated>
		<summary>Bluesky の公式 Go パッケージで go-log が使われてるので試してみる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;最近 Bluesky で遊んでいるのだが，これの公式 &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; パッケージってのがあって&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bluesky-social/indigo&#34;&gt;bluesky-social/indigo: Go source code for Bluesky&amp;rsquo;s atproto services. NOT STABLE (yet)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中を見ると logger として &lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; パッケージを使ってるみたいなのね。
&lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; パッケージは &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;zap&lt;/a&gt; のラッパーになっていて，特にログ出力周りの取り回しが楽になるよう設計されているっぽい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;zap&lt;/a&gt; は高速な構造化ロギングを謳っている人気のログ・パッケージである。
といっても，ベンチマークを見る限り&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Package&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Time&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Time % to zap&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Objects Allocated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;zap&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1744 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+0%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;5 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;zap (sugared)&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2483 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+42%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;zerolog&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;918 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;-47%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;go-kit&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;5590 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+221%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;57 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;slog&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;5640 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+223%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;40 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;apex/log&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;21184 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+1115%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;63 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;logrus&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;24338 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+1296%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;79 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;log15&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;26054 ns/op&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;+1394%&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;74 allocs/op&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/uber-go/zap&#34;&gt;uber-go/zap: Blazing fast, structured, leveled logging in Go.&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;スピードだけなら &lt;a href=&#34;https://github.com/rs/zerolog&#34; title=&#34;rs/zerolog: Zero Allocation JSON Logger&#34;&gt;rs/zerolog&lt;/a&gt; のほうがだいぶ速いように見えるのだが&amp;hellip; まぁ，でも， gRPC や分散システムなんかでは事実上の標準みたいな感じになってるし，柔軟なカスタマイズができるためクラウドのログ管理サービスとかとも相性がいいらしい。&lt;/p&gt;
&lt;p&gt;私個人は &lt;a href=&#34;https://github.com/rs/zerolog&#34; title=&#34;rs/zerolog: Zero Allocation JSON Logger&#34;&gt;rs/zerolog&lt;/a&gt; 推しだが &lt;a href=&#34;https://github.com/bluesky-social/indigo&#34; title=&#34;bluesky-social/indigo: Go source code for Bluesky&#39;s atproto services. NOT STABLE (yet)&#34;&gt;indigo&lt;/a&gt; を使うなら &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;zap&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;go-log&lt;/a&gt; も使えるようになっておこうというわけで試してみることにした。
今回は特に拙作の &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;goark/errs&lt;/a&gt; との相性という観点で評価してみる。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;Zap&lt;/a&gt; を試してみる&lt;/h2&gt;
&lt;p&gt;いきなりサンプルコードから。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/goark/errs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;go.uber.org/zap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;errs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s&#34;&gt;&amp;#34;file open error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;errs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithCause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nx&#34;&gt;errs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithContext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewExample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error in checkFileOpen function&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample1.go | jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;level&amp;#34;: &amp;#34;error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;msg&amp;#34;: &amp;#34;error in checkFileOpen function&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;error&amp;#34;: &amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;errorVerbose&amp;#34;: &amp;#34;{\&amp;#34;Type\&amp;#34;:\&amp;#34;*errs.Error\&amp;#34;,\&amp;#34;Err\&amp;#34;:{\&amp;#34;Type\&amp;#34;:\&amp;#34;*errors.errorString\&amp;#34;,\&amp;#34;Msg\&amp;#34;:\&amp;#34;file open error\&amp;#34;},\&amp;#34;Context\&amp;#34;:{\&amp;#34;function\&amp;#34;:\&amp;#34;main.checkFileOpen\&amp;#34;,\&amp;#34;path\&amp;#34;:\&amp;#34;not-exist.txt\&amp;#34;},\&amp;#34;Cause\&amp;#34;:{\&amp;#34;Type\&amp;#34;:\&amp;#34;*fs.PathError\&amp;#34;,\&amp;#34;Msg\&amp;#34;:\&amp;#34;open not-exist.txt: no such file or directory\&amp;#34;,\&amp;#34;Cause\&amp;#34;:{\&amp;#34;Type\&amp;#34;:\&amp;#34;syscall.Errno\&amp;#34;,\&amp;#34;Msg\&amp;#34;:\&amp;#34;no such file or directory\&amp;#34;}}}&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;file&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;案の定 &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Error()&lt;/code&gt; ではエラーメッセージを吐き出すだけのようだ。
&lt;code&gt;errorVerbose&lt;/code&gt; 項目は &lt;code&gt;Error()&lt;/code&gt; メソッドを &lt;code&gt;%+v&lt;/code&gt; 書式で出力してる感じなのだろうか。
でも，テキストとして出力してるんじゃ「構造化」とは言えない。
困ったね。&lt;/p&gt;
&lt;h3&gt;zapcore.ObjectMarshaler&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;Zap&lt;/a&gt; には &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Object()&lt;/code&gt; 関数があって，これを使えば内部構造を出力することができるのだが，そのためには対象のオブジェクトが &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap@v1.24.0/zapcore&#34; title=&#34;zapcore package - go.uber.org/zap/zapcore - Go Packages&#34;&gt;&lt;code&gt;zapcore&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.ObjectMarshaler&lt;/code&gt; 型の interface を満たす必要がある。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ObjectMarshaler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;MarshalLogObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ObjectEncoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一瞬 &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;&lt;code&gt;errs&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Error&lt;/code&gt; 型にこのメソッドを生やすことも考えたのだが，汎用エラー構造体が特定のサードパーティ・パッケージに依存するのは面白くない。&lt;/p&gt;
&lt;h2&gt;zapobject モジュールを作った&lt;/h2&gt;
&lt;p&gt;というわけで，新たに &lt;a href=&#34;https://pkg.go.dev/github.com/goark/errs/zapobject&#34; title=&#34;zapobject package - github.com/goark/errs/zapobject - Go Packages&#34;&gt;goark/errs/zapobject&lt;/a&gt; モジュールを作った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;zapobject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じにエラーインスタンスをラップして使う。&lt;/p&gt;
&lt;p&gt;ちなみに &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;errs&lt;/a&gt; と &lt;a href=&#34;https://pkg.go.dev/github.com/goark/errs/zapobject&#34; title=&#34;zapobject package - github.com/goark/errs/zapobject - Go Packages&#34;&gt;zapobject&lt;/a&gt; は同一リポジトリにあるが，モジュールを分けている。
&lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;errs&lt;/a&gt; は &lt;a href=&#34;https://pkg.go.dev/github.com/goark/errs/zapobject&#34; title=&#34;zapobject package - github.com/goark/errs/zapobject - Go Packages&#34;&gt;zapobject&lt;/a&gt; に依存しないため &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;errs&lt;/a&gt; の依存関係を汚さずに &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Object()&lt;/code&gt; 関数に対応できる。
ついでに言うと， &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;&lt;code&gt;errs&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Error&lt;/code&gt; 型以外の error 型についても &lt;a href=&#34;https://pkg.go.dev/github.com/goark/errs/zapobject&#34; title=&#34;zapobject package - github.com/goark/errs/zapobject - Go Packages&#34;&gt;&lt;code&gt;zapobject&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.New()&lt;/code&gt; でラップすれば &lt;code&gt;Unknown()&lt;/code&gt; メソッドの挙動に従って可能な限り構造化して出力できるようにしている。&lt;/p&gt;
&lt;p&gt;では，先程のコードを書き換えよう（一部省略している）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/goark/errs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/goark/errs/zapobject&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;go.uber.org/zap&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewExample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error in checkFileOpen function&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zapobject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample2.go | jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;level&amp;#34;: &amp;#34;error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;msg&amp;#34;: &amp;#34;error in checkFileOpen function&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;type&amp;#34;: &amp;#34;*errs.Error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;msg&amp;#34;: &amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*errors.errorString&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;file open error&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*fs.PathError&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;type&amp;#34;: &amp;#34;syscall.Errno&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;msg&amp;#34;: &amp;#34;no such file or directory&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;context&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;function&amp;#34;: &amp;#34;main.checkFileOpen&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;path&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;file&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となった。
うんうん。
ちゃんとエラー構造が出力されているね。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; を試してみる&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;Zap&lt;/a&gt; で拙作の &lt;a href=&#34;https://github.com/goark/errs&#34; title=&#34;goark/errs: Error handling for Golang&#34;&gt;&lt;code&gt;errs&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Error&lt;/code&gt; 型の構造を出力できるようになったので，次は &lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; を試してみる。
こちらもいきなりサンプルコードから。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/goark/errs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/goark/errs/zapobject&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/ipfs/go-log/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Errorw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error in checkFileOpen function&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zapobject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;&lt;code&gt;log&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Logger()&lt;/code&gt; 関数で生成される logger の中身はは以下のようになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ZapEventLogger implements the EventLogger and wraps a go-logging Logger
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ZapEventLogger&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SugaredLogger&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// used to fix the caller location when calling Warning and Warningf.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;skipLogger&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SugaredLogger&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;system&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;見ての通り中身は &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.SugaredLogger&lt;/code&gt; 型になっている。
このため構造化ログを出力する場合は &lt;code&gt;Errorw()&lt;/code&gt; などのメソッドを使う必要がある。
&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.SugaredLogger&lt;/code&gt; はちょっと&amp;hellip; というのであれば &lt;code&gt;Deshugar()&lt;/code&gt; すればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Desugar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error in checkFileOpen function&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zapobject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;さて，これを実行してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample3.go | jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2023-05-20T17:04:40.794+0900    ERROR    sample    sample3/sample3.go:30    error in checkFileOpen function    {&amp;#34;error&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;*errs.Error&amp;#34;, &amp;#34;msg&amp;#34;: &amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;, &amp;#34;error&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;*errors.errorString&amp;#34;, &amp;#34;msg&amp;#34;: &amp;#34;file open error&amp;#34;}, &amp;#34;cause&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;*fs.PathError&amp;#34;, &amp;#34;msg&amp;#34;: &amp;#34;open not-exist.txt: no such file or directory&amp;#34;, &amp;#34;cause&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;syscall.Errno&amp;#34;, &amp;#34;msg&amp;#34;: &amp;#34;no such file or directory&amp;#34;}}, &amp;#34;context&amp;#34;: {&amp;#34;function&amp;#34;: &amp;#34;main.checkFileOpen&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;not-exist.txt&amp;#34;}}, &amp;#34;file&amp;#34;: &amp;#34;not-exist.txt&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おぅふ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; は出力先や出力フォーマットを環境変数で制御する。
主な環境変数は以下の通り&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;環境変数&lt;/th&gt;
&lt;th&gt;値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GOLOG_LOG_LEVEL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;dpanic&lt;/code&gt;, &lt;code&gt;panic&lt;/code&gt;, &lt;code&gt;fatal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GOLOG_FILE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ファイルに出力する場合はパスをセットする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GOLOG_OUTPUT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;stderr&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GOLOG_LOG_FMT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;color&lt;/code&gt;, &lt;code&gt;nocolor&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;GOLOG_LOG_LEVEL&lt;/code&gt; はシステムごとに指定できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GOLOG_LOG_LEVEL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;error,subsystem1=info,subsystem2=debug&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;GOLOG_OUTPUT&lt;/code&gt; は複数の出力先を指定できる。
&lt;code&gt;+&lt;/code&gt; で区切って指定すればよい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GOLOG_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/path/to/my/file.log&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GOLOG_OUTPUT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;stderr+file&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;というわけで，環境変数を指定して改めて起動してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ export GOLOG_LOG_FMT=&amp;#34;json&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ export GOLOG_OUTPUT=&amp;#34;stdout&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample3.go | jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;level&amp;#34;:&amp;#34;error&amp;#34;,&amp;#34;ts&amp;#34;:&amp;#34;2023-05-20T17:35:29.669+0900&amp;#34;,&amp;#34;logger&amp;#34;:&amp;#34;sample&amp;#34;,&amp;#34;caller&amp;#34;:&amp;#34;sample3/sample3.go:30&amp;#34;,&amp;#34;msg&amp;#34;:&amp;#34;error in checkFileOpen function&amp;#34;,&amp;#34;error&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;*errs.Error&amp;#34;,&amp;#34;msg&amp;#34;:&amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;,&amp;#34;error&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;*errors.errorString&amp;#34;,&amp;#34;msg&amp;#34;:&amp;#34;file open error&amp;#34;},&amp;#34;cause&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;*fs.PathError&amp;#34;,&amp;#34;msg&amp;#34;:&amp;#34;open not-exist.txt: no such file or directory&amp;#34;,&amp;#34;cause&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;syscall.Errno&amp;#34;,&amp;#34;msg&amp;#34;:&amp;#34;no such file or directory&amp;#34;}},&amp;#34;context&amp;#34;:{&amp;#34;function&amp;#34;:&amp;#34;main.checkFileOpen&amp;#34;,&amp;#34;path&amp;#34;:&amp;#34;not-exist.txt&amp;#34;}},&amp;#34;file&amp;#34;:&amp;#34;not-exist.txt&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;level&amp;#34;: &amp;#34;error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ts&amp;#34;: &amp;#34;2023-05-20T17:35:29.669+0900&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;logger&amp;#34;: &amp;#34;sample&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;caller&amp;#34;: &amp;#34;sample3/sample3.go:30&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;msg&amp;#34;: &amp;#34;error in checkFileOpen function&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;type&amp;#34;: &amp;#34;*errs.Error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;msg&amp;#34;: &amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*errors.errorString&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;file open error&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*fs.PathError&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;type&amp;#34;: &amp;#34;syscall.Errno&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;msg&amp;#34;: &amp;#34;no such file or directory&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;context&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;function&amp;#34;: &amp;#34;main.checkFileOpen&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;path&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;file&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;んー。
何故か標準エラー出力にも出るなぁ。
まぁ，とりあえず標準出力に JSON 形式で出力できた。&lt;/p&gt;
&lt;p&gt;環境変数ではなくコードで設定したい場合もあるだろう。
この場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GetConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Format&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;JSONOutput&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Level&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LevelDebug&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SetupLogging&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cfg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;checkFileOpen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;not-exist.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Desugar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error in checkFileOpen function&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zapobject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;New&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じに設定できる。&lt;/p&gt;
&lt;h3&gt;&amp;ldquo;caller&amp;rdquo; は要らん&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.NewExample()&lt;/code&gt; で logger を生成したときには気づかなかったが，実際にはログ出力に既定で &lt;code&gt;&amp;quot;caller&amp;quot;&lt;/code&gt; 項目が付くんだねぇ。
ファイル名と行番号が付くのはちょっと&amp;hellip; と思って外し方を探してみたが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Desugar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithCaller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じに &lt;code&gt;Desugar()&lt;/code&gt; した上で &lt;code&gt;WithOptions()&lt;/code&gt; を使って明示的に外さないといけないみたい。
んー。
そこまでするのはなぁ。
&lt;code&gt;logger&lt;/code&gt; の型が変わっちゃうし。&lt;/p&gt;
&lt;p&gt;いや&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sample&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SugaredLogger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Desugar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;zap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;WithCaller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sugar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;って感じにすればいいのかな。
これで動かしてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go run sample3b.go | jq .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;level&amp;#34;: &amp;#34;error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;ts&amp;#34;: &amp;#34;2023-05-20T18:01:52.106+0900&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;logger&amp;#34;: &amp;#34;sample&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;msg&amp;#34;: &amp;#34;error in checkFileOpen function&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;type&amp;#34;: &amp;#34;*errs.Error&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;msg&amp;#34;: &amp;#34;file open error: open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;error&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*errors.errorString&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;file open error&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;type&amp;#34;: &amp;#34;*fs.PathError&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;msg&amp;#34;: &amp;#34;open not-exist.txt: no such file or directory&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;cause&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;type&amp;#34;: &amp;#34;syscall.Errno&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;msg&amp;#34;: &amp;#34;no such file or directory&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;context&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;function&amp;#34;: &amp;#34;main.checkFileOpen&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;path&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;file&amp;#34;: &amp;#34;not-exist.txt&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;おー。
消えた消えた。&lt;/p&gt;
&lt;p&gt;まぁ，既に &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;zap&lt;/a&gt; をバリバリにカスタマイズして使ってる人には &lt;a href=&#34;https://github.com/ipfs/go-log&#34; title=&#34;ipfs/go-log: A logging library used by go-ipfs&#34;&gt;ipfs/go-log&lt;/a&gt; はあまりメリットなさそうだけど，これから &lt;a href=&#34;https://pkg.go.dev/go.uber.org/zap&#34; title=&#34;zap package - go.uber.org/zap - Go Packages&#34;&gt;zap&lt;/a&gt; を簡易に使いたいって人にはアリな選択肢かも知れない。&lt;/p&gt;
&lt;p&gt;じゃぁ，&lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;自作ツール&lt;/a&gt;の logger を載せ換えますかね。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
</content>
	</entry><entry>
		<title>コマンドラインで Mastodon に投稿する</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/05/toot-to-mastodon/" />
		<id>tag:text.Baldanders.info,2023-05-14:/remark/2023/05/toot-to-mastodon/</id>
		<published>2023-05-14T04:20:56+00:00</published>
		<updated>2023-05-14T04:21:10+00:00</updated>
		<summary>これで出力の基本機能はできたので，今後は入力側の設計と実装だな。先は長い。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今年の GW は（色々と大人の事情で）遠くに遊びに行くこともなく，ときどき自転車を乗り回す以外はおうちでコードを書くか，その辺に寝転がってラノベか Web 小説を読み耽るという，自堕落な生活を送っていた。&lt;/p&gt;
&lt;p&gt;で，まぁ，その成果として以下の CLI ツールをリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;goark/toolbox: A collection of miscellaneous commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今のところ Mastodon と Bluesky への投稿機能のみ実装している。
最終的には自コンテンツ（主にブログ記事と Flickr 写真）の更新情報の投稿を自動化できればと思っているが，先は長い。&lt;/p&gt;
&lt;p&gt;このうち今回は Mastodon への投稿機能について，覚え書きを兼ねて，記しておく。&lt;/p&gt;
&lt;p&gt;今どきの流行りは Bluesky のほうぢゃねーのかとお思いでしょうが，利用している&lt;a href=&#34;https://github.com/bluesky-social/indigo&#34; title=&#34;bluesky-social/indigo: Go source code for Bluesky&#39;s atproto services. NOT STABLE (yet)&#34;&gt;公式の Go 用パッケージ&lt;/a&gt;の作りが微妙で，ちょっとしたことでエラーを吐くためイマイチな出来。
みんな，あんな雑なエラーハンドリングでよく使えてるよなぁ。
とりあえず 400 を返せばいいみたいなのはどうにかしてほしい。
&lt;a href=&#34;https://zenn.dev/username/articles/20230506-downsizing-images&#34; title=&#34;画像ファイルのサイズを縮小したい&#34;&gt;大きな画像ファイルをアップロードしてエラーを返さない&lt;/a&gt;のはもっと困るけど。&lt;/p&gt;
&lt;p&gt;話がそれた。
では本題へ。&lt;/p&gt;
&lt;h2&gt;アプリケーションの登録&lt;/h2&gt;
&lt;p&gt;Mastodon のハンドリングには以下のパッケージを使わせてもらっている。
ありがたや &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;🙇&lt;/abbr&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-mastodon&#34; title=&#34;mattn/go-mastodon: mastodon client for golang&#34;&gt;mattn/go-mastodon: mastodon client for golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;だがしかし，最初の「認証」部分でいきなり躓く。
あちこちの解説ページを覗いてみるに，どうやら Mastodon の認証は2段階あるらしい。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;サーバに対してアプリケーション登録を行う&lt;/li&gt;
&lt;li&gt;ユーザ認証を行い，アカウントに対してアプリケーションを認証する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1 を行うとクライアントIDとそのシークレットがもらえる。
1 でもらった情報を使って 2 を行うとアクセストークンがもらえる。
さらに 2 の認証にはパスワード認証と OAuth 認証の2つが用意されていて，後者についてはブラウザ操作が必要（？）
アクセストークンは永続的に有効らしい。
1 と 2 で取得した情報を使って Mastodon サーバに対して各種操作を行える。
&amp;hellip;という感じ。&lt;/p&gt;
&lt;p&gt;ここまで辿り着くのにかなり試行錯誤してしまった。&lt;/p&gt;
&lt;p&gt;拙作 &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;toolbox&lt;/a&gt; では &lt;code&gt;mastodon register&lt;/code&gt; コマンドで 1, 2 の処理をまとめて行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ toolbox mastodon register -h
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Register Mastodon application.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  toolbox mastodon register [flags]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Aliases:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  register, reg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help   help for register
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Global Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --bluesky-config string    Config file for Bluesky (default &amp;#34;/home/username/.config/toolbox/bluesky.json&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --cache-dir string         Directory for cache files (default &amp;#34;/home/username/.cache/toolbox&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --config string            Config file (default &amp;#34;/home/username/.config/toolbox/config.yaml&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --debug                    for debug
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --log-dir string           Directory for log files (default &amp;#34;/home/username/.cache/toolbox&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --log-level string         Log level [nop|error|warn|info|debug|trace] (default &amp;#34;nop&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --mastodon-config string   Config file for Mastodon (default &amp;#34;/home/username/.config/toolbox/mastodon.json&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;取得したアクセストークンは &lt;code&gt;--mastodon-config&lt;/code&gt; オプションで指定したファイルに JSON 形式で保存される。
具体的には以下のように，サーバ名，ユーザID，パスワードを尋ねるプロンプトが表示されるので入力していけば OK。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ toolbox mastodon register
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Server (e.g. mastodon.social) &amp;gt; fedibird.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         User (email address) &amp;gt; jphn.do@exsample.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                     Password &amp;gt; your_password
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          server: https://fedibird.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;application name: github.com/goark/toolbox
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         website: https://github.com/goark/toolbox
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          scopes: read write follow
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;output: /home/username/.config/toolbox/mastodon.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功すれば 設定＞アカウント＞認証済みアプリ に認証されたアプリケーションが表示される（表示の仕方はサーバによって違うかも）。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./authorized-apps.png&#34;&gt;&lt;img src=&#34;./authorized-apps.png&#34; srcset=&#34;./authorized-apps.png 1091w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;認証済みアプリ&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./authorized-apps.png&#34;&gt;認証済みアプリ&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;動作確認のために自身の profile を表示してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ toolbox mastodon profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      Username: spiegel
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User ID (full): @spiegel@fedibird.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           URL: https://fedibird.com/@spiegel
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  Display name: Spiegel@がんばらない
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Created at: 2022-11-25 00:00:00 +0000 UTC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Posts: 2289
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       Follows: 46
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     Followers: 98
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;p&amp;gt;mstdn.jp から移住。職業プログラマ。&amp;lt;a href=&amp;#34;https://fedibird.com/tags/golang&amp;#34; class=&amp;#34;mention hashtag&amp;#34; rel=&amp;#34;tag&amp;#34;&amp;gt;#&amp;lt;span&amp;gt;golang&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt; と &amp;lt;a href=&amp;#34;https://fedibird.com/tags/flickr&amp;#34; class=&amp;#34;mention hashtag&amp;#34; rel=&amp;#34;tag&amp;#34;&amp;gt;#&amp;lt;span&amp;gt;flickr&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt; で遊んでいる人。暖かくなったので自転車で「お散歩カメラ」再開。&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;情報収集がメインだが最近は胡乱な発言もチラホラあるので，そこは許して（フォローの付け外しはご自由に）。フォローは特に意味なく頻繁に入れ換えますのであしからず。&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;
&lt;h2&gt;Mastodon に投稿する&lt;/h2&gt;
&lt;p&gt;以上で対象のサーバに &lt;a href=&#34;https://github.com/goark/toolbox&#34; title=&#34;goark/toolbox: A collection of miscellaneous commands&#34;&gt;toolbox&lt;/a&gt; でアクセスできるようになったので，さっそく何か投稿してみる。
Mastodon への投稿は &lt;code&gt;mastodon post&lt;/code&gt; でできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ toolbox mastodon post -h
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Post message to Mastodon.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  toolbox mastodon post [flags]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Aliases:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  post, pst, p, toot, tt, t
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --edit                  Edit message
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help                  help for post
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -i, --image-file strings    Image file
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -m, --message string        Message
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --pipe                  Input from standard-input
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -s, --spoiler-text string   Spoiler text
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -v, --visibility string     Visibility [public|unlisted|private|direct] (default &amp;#34;public&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Global Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --bluesky-config string    Config file for Bluesky (default &amp;#34;/home/username/.config/toolbox/bluesky.json&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --cache-dir string         Directory for cache files (default &amp;#34;/home/username/.cache/toolbox&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --config string            Config file (default &amp;#34;/home/username/.config/toolbox/config.yaml&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --debug                    for debug
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --log-dir string           Directory for log files (default &amp;#34;/home/username/.cache/toolbox&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --log-level string         Log level [nop|error|warn|info|debug|trace] (default &amp;#34;nop&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --mastodon-config string   Config file for Mastodon (default &amp;#34;/home/username/.config/toolbox/mastodon.json&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt; はコマンドライン上で1行メッセージを投稿するのに使うオプション&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--pipe&lt;/code&gt; は標準入力からの入力を投稿するオプション&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--edit&lt;/code&gt; は CUI で複数行編集ができるオプション&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;--pipe&lt;/code&gt;, &lt;code&gt;--edit&lt;/code&gt; は排他オプションで同時に指定できない&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; は画像ファイルをアップローするのに使うオプション。複数指定可能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; は表示範囲を指定するオプション&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;たとえばこんな感じで投稿する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ toolbox mastodon post --edit -i lake-shinjiko.jpg -v direct
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Input &amp;#39;Ctrl+J&amp;#39; or &amp;#39;Ctrl+Enter&amp;#39; to submit message
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Input &amp;#39;Ctrl+D&amp;#39; with no chars to stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 1&amp;gt;はろー，ふぇでぃばーす！
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 2&amp;gt;https://flic.kr/p/2nSUmaa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; 3&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://fedibird.com/@spiegel/110364957384850439
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;するとこんな感じに表示される。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./toot-to-mastodon.png&#34;&gt;&lt;img src=&#34;./toot-to-mastodon.png&#34; srcset=&#34;./toot-to-mastodon.png 627w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Mastodon へ投稿&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./toot-to-mastodon.png&#34;&gt;Mastodon へ投稿&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;よしよし。
ちなみに複数行編集には以下のパッケージを利用している。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny&#34;&gt;hymkor/go-multiline-ny: Readline package supporting multi-lines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;マジ便利。
ありがたや &lt;abbr class=&#34;emoji-chars&#34; title=&#34;ペコン&#34;&gt;🙇&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;Mastodon は表示範囲を指定できるのがいいよね。
とりあえず試し撃ちなら DM で投げればいい。
Bluesky は（多分まだ）表示範囲を指定できないのでテスト用のゴミ投稿も全部 TL に表示されてしまう。
しょうがないから招待コード使ってデバッグ用のアカウントをひとつ確保する羽目になった。&lt;/p&gt;
&lt;p&gt;さて，これで出力の基本機能はできたので，今後は入力側の設計と実装だな。
先は長い。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/S-YOU/items/cf677ae282bd6f38fbbb&#34;&gt;マストドンのタイムラインをgo-mastodon のWebSocketを使用し取得する - Qiita&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/civic/items/7358dc1c54ff8e71c326&#34;&gt;mastodonのaccess tokenをauthorization_codeで取得する例 - Qiita&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/okapies/eab5c6fc217e914ed0cac6c944384e4d&#34;&gt;Mastodon API の叩き方 · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/shinderuman@github/items/c96161caa65c6a9e8ffc&#34;&gt;mastodonのtootを原始人くんが喋ってくれるbot作った - Qiita&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/bookmarks/fediverse/&#34;&gt;Fediverse 関連のブックマーク&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>2023-05-14 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2023/05/14-bookmarks/" />
		<id>tag:text.Baldanders.info,2023-05-14:/bookmarks/2023/05/14-bookmarks/</id>
		<published>2023-05-14T01:56:20+00:00</published>
		<updated>2023-05-14T01:57:33+00:00</updated>
		<summary>「マイクロソフト、Rust言語による開発を含む初めてのWindowsカーネルをInsiderプログラム参加者向けに提供開始」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2 id=&#34;release&#34;&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.6&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.6 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.7&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.7 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.12.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.12.0 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt; : 補完機能が入った！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2023/05/04/tdf-releases-lo753-community/&#34; rel=&#34;nofollow&#34;&gt;The Document Foundation releases LibreOffice 7.5.3 Community - The Document Foundation Blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2023/05/11/libreoffice-7-4-7/&#34; rel=&#34;nofollow&#34;&gt;Announcement of LibreOffice 7.4.7 Community - The Document Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1499039.html&#34; rel=&#34;nofollow&#34;&gt;「LibreOffice 7.5.3 Community」が公開 ～フリーのオフィス統合環境の最新版 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1499177.html&#34; rel=&#34;nofollow&#34;&gt;ピクチャーインピクチャーを強化した「Firefox 113」が公開 ～アニメAVIF画像にも対応 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sashabaranov/go-openai/releases/tag/v1.9.4&#34; rel=&#34;nofollow&#34;&gt;Release v1.9.4 · sashabaranov/go-openai · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tailscale/tailscale/releases/tag/v1.40.1&#34; rel=&#34;nofollow&#34;&gt;Release 1.40.1 · tailscale/tailscale · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.78.1&#34; rel=&#34;nofollow&#34;&gt;Release April 2023 Recovery 1 · microsoft/vscode · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.78.2&#34; rel=&#34;nofollow&#34;&gt;Release April 2023 Recovery 2 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny/releases/tag/v0.8.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.8.0 · hymkor/go-multiline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gitextensions/gitextensions/releases/tag/v4.1&#34; rel=&#34;nofollow&#34;&gt;Release v4.1 · gitextensions/gitextensions · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/plantuml/plantuml/releases/tag/v1.2023.7&#34; rel=&#34;nofollow&#34;&gt;Release v1.2023.7 · plantuml/plantuml · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;security&#34;&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://future-architect.github.io/articles/20230508a/&#34; rel=&#34;nofollow&#34;&gt;5分でできる。Windowsの脆弱性を「Vuls」で今すぐチェック！ | フューチャー技術ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1499327.html&#34; rel=&#34;nofollow&#34;&gt;Microsoft、PCを乗っ取り秘密裏に操る「BlackLotus」ブートキットへの対策を順次展開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nitrokey.com/news/2023/milestone-nitrokey-3-achieved-openpgp-card-one-time-passwords-and-usb-c-availability&#34; rel=&#34;nofollow&#34;&gt;Milestone for Nitrokey 3 Achieved: OpenPGP Card, One-Time Passwords and USB-C Availability! | Nitrokey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2023/05/12/213116&#34; rel=&#34;nofollow&#34;&gt;SIMスワップ詐欺による暗号資産口座への不正送金事案についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2023/05/12/002134&#34; rel=&#34;nofollow&#34;&gt;著名人を狙った金銭目的のSNS公式アカウントののっとりについてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip&#34;&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.archive.org/2023/05/03/dlarc-75000/&#34; rel=&#34;nofollow&#34;&gt;DLARC Radio Library Surpasses 75,000 Items of Ham Radio, Shortwave History | Internet Archive Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/court-sentences-man-for-selling-pirated-textbook-pdfs-230510/&#34; rel=&#34;nofollow&#34;&gt;Court Sentences Man for Selling Pirated Textbook PDFs * TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20230510-elsevier-academic-board-resign/&#34; rel=&#34;nofollow&#34;&gt;学術出版社エルゼビアが掲載料引き下げを拒否したため学術委員会の全科学者が辞任 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bengo4.com/c_23/n_15982/&#34; rel=&#34;nofollow&#34;&gt;画像生成AIの「悪用」に絵師たちが反発、pixiv上でイラスト非公開に…福井健策弁護士に聞く - 弁護士ドットコム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/News/ubuntu2304-ja-remix&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 23.04 日本語 Remix リリース | Ubuntu Japanese Team&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2023/05/ubuntu-2304-29-ubuntu-2304-remix.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 23.04 その29 - Ubuntu 23.04 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows&#34;&gt;Microsoft 製品（Azure や Windows 等） に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1498638.html&#34; rel=&#34;nofollow&#34;&gt;Microsoftクラウドサービスのドメインが大規模引っ越し ～「cloud.microsoft」へ集約 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1498494.html&#34; rel=&#34;nofollow&#34;&gt;日本語入力に問題、「Windows 11 バージョン22H2」で音声認識などが途切れる - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://solution.fielding.co.jp/column/it/windows11/202207_01/&#34; rel=&#34;nofollow&#34;&gt;Windows 11 で画面分割を実施する方法とは！？詳しい使い方を徹底解説  | Windows 11 関連 |【NECフィールディング】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nichepcgamer.com/archives/windows11-l2tp-ipsec-vpn-slow-transfer-speed-problem-caused-by-kb5026372-kb5025305.html&#34; rel=&#34;nofollow&#34;&gt;VPNの速度が異常に遅い不具合。Windows11 22H2にて発生。KB5026372 / KB5025305に起因 | ニッチなPCゲーマーの環境構築Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/_rustwindowsinsider.html&#34; rel=&#34;nofollow&#34;&gt;マイクロソフト、Rust言語による開発を含む初めてのWindowsカーネルをInsiderプログラム参加者向けに提供開始 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;golang&#34;&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/microsoft/articles/28fb0efa7c309e&#34; rel=&#34;nofollow&#34;&gt;Go 言語を使って Azure Blob Storage にコンテナーを作成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/team_soda/articles/golang-build-tags-history&#34; rel=&#34;nofollow&#34;&gt;Goのビルドタグの書き方が// +buildから//go:buildに変わった理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/Togo_Yokoyama/items/514423421be9bd587ae1&#34; rel=&#34;nofollow&#34;&gt;【Vue】×【Go】×【Firebase】ログイン機能の実装例 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SherClockHolmes/webpush-go&#34; rel=&#34;nofollow&#34;&gt;GitHub - SherClockHolmes/webpush-go: Web Push API Encryption with VAPID support.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://devblogs.microsoft.com/microsoft365dev/building-go-applications-with-the-microsoft-graph-go-sdk/&#34; rel=&#34;nofollow&#34;&gt;Building Go applications with the Microsoft Graph Go SDK, now generally available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://semanticdiff.com/blog/semanticdiff-0.8.3/&#34; rel=&#34;nofollow&#34;&gt;SemanticDiff 0.8.3: Support For Go And More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go.dev/blog/survey2023-q1-results&#34; rel=&#34;nofollow&#34;&gt;Go Developer Survey 2023 Q1 Results - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;astronomy&#34;&gt;天文関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apod.nasa.gov/apod/ap230511.html&#34; rel=&#34;nofollow&#34;&gt;APOD: 2023 May 11 - Fomalhaut&amp;rsquo;s Dusty Debris Disk&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sorae.info/astronomy/20230510-fomalhaut-webb.html&#34; rel=&#34;nofollow&#34;&gt;フォーマルハウトを囲むデブリ円盤の全体像　ウェッブ宇宙望遠鏡の観測で明らかに | sorae 宇宙へのポータルサイト&lt;/a&gt; : 相変わらず広告塗れで読む気が失せるサイト&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eco.mtk.nao.ac.jp/koyomi/topics/html/topics2024_1.html&#34; rel=&#34;nofollow&#34;&gt;日本の暦と国の重要文化財『星学手簡』 - 国立天文台暦計算室&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ai&#34;&gt;Generative AI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/microsoft/articles/howtouser-azure-ai-openai&#34; rel=&#34;nofollow&#34;&gt;Azure.AI.OpenAI パッケージで OpenAI と Azure OpenAI Service に繋ぐときの違い&lt;/a&gt; : .NET&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dare-ai.com/&#34; rel=&#34;nofollow&#34;&gt;だれでもAIメーカー | だれでもAIメーカー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://logmi.jp/tech/articles/328614&#34; rel=&#34;nofollow&#34;&gt;ChatGPTは文字コードをどのように解釈しているか　Unicodeの「日本語認識」「括弧の抽出」「旧字体と新字体の変換」を実験してみた  - ログミーTech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/googleaiduet_ai_for_appsheet.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google、自然言語でAIと対話するだけで誰でもアプリが作れる「Duet AI for AppSheet」発表。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/google_cloudaiduet_ai_for_google_cloud.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google Cloudでのシステム開発について何でもAIが教えてくれる「Duet AI for Google Cloud」発表。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/googleaibard.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Googleの生成的AI「Bard」が日本語に対応。ウェイトリストもなくなり、すぐに利用できるように。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/gitlabgoogle_cloudaiai.html&#34; rel=&#34;nofollow&#34;&gt;GitLabがGoogle CloudとAI分野で提携、AIをGitLabツール群に統合。コードの自動生成、コードにある脆弱性の説明、コードレビュアーの推薦など実現 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/googleaigoogle_io_2023.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google、責任あるAIを実現するとして、画像にウォーターマークとメタデータの埋め込みを進めると発表。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.newyorker.com/science/annals-of-artificial-intelligence/will-ai-become-the-new-mckinsey&#34; rel=&#34;nofollow&#34;&gt;Will A.I. Become the New McKinsey? | The New Yorker&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web&#34; rel=&#34;nofollow&#34;&gt;ChatGPT Is a Blurry JPEG of the Web | The New Yorker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2023/05/ted-chiang-on-the-risks-of-ai.html&#34; rel=&#34;nofollow&#34;&gt;Ted Chiang on the Risks of AI - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nogithub.codeberg.page/&#34; rel=&#34;nofollow&#34;&gt;Please don&amp;rsquo;t upload my code on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;others&#34;&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/yusukehirao/articles/gh-actions-split-jobs&#34; rel=&#34;nofollow&#34;&gt;ジョブを細かく分けてGitHub Actionsのテストを効率化する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/p/microsoft&#34; rel=&#34;nofollow&#34;&gt;Microsoft (有志) | Zenn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20230508/proof-of-stake&#34; rel=&#34;nofollow&#34;&gt;ヴィタリック・ブテリン『イーサリアム　若き天才が示す暗号資産の真実と未来』を恵贈いただいた - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20230508/the-end-of-computer-magazines&#34; rel=&#34;nofollow&#34;&gt;アメリカでもコンピュータ雑誌は終焉を迎えようとしている - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20230508/survival-of-the-richest&#34; rel=&#34;nofollow&#34;&gt;ダグラス・ラシュコフの新刊『デジタル生存競争』が来月出るぞ！ - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/shellyln/articles/3fffb16511c625&#34; rel=&#34;nofollow&#34;&gt;SOQLのクエリをER図として可視化するツールを作ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/denojavascripttypescriptdeno_kvdenosqlite.html&#34; rel=&#34;nofollow&#34;&gt;Deno、JavaScript/TypeScriptのためのデータストア「Deno KV」発表。Deno本体にSQLiteを統合、分散環境では強い一貫性も提供 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/webnodejswebcontaineriosipadossafariiphoneipadweb.html&#34; rel=&#34;nofollow&#34;&gt;Webブラウザ上でNode.js環境を実現する「WebContainer」、iOS/iPadOS版Safariに対応。iPhone/iPadでWeb開発環境が起動 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.netandfield.com/shar/2023/05/cgi-from.html&#34; rel=&#34;nofollow&#34;&gt;CGI からメール送信するときのエンベロープ From の変更 - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://booth.pm/ja/items/3069516&#34; rel=&#34;nofollow&#34;&gt;【VRChatワールド用】青空文庫システム - スズ製作所 - BOOTH&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yorozoonews.jp/article/14387235&#34; rel=&#34;nofollow&#34;&gt;VR空間に“自分の書斎”が持てる 「青空文庫システム」誕生 1万6000冊以上から読書が可能｜よろず〜ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.j-cast.com/trend/2023/02/16456014.html?p=all&#34; rel=&#34;nofollow&#34;&gt;メタバースで図書館体験「NDC Library」　青空文庫活用で1万6377冊: J-CAST トレンド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://postd.cc/new-programming-jargon/&#34; rel=&#34;nofollow&#34;&gt;あなたは全部知っていますか？プログラミングの業界用語30選 | POSTD&lt;/a&gt; : 用語つか隠語&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/skanehira/articles/2023-04-23-rust-wasm-runtime&#34; rel=&#34;nofollow&#34;&gt;RustでWasm Runtimeを実装してみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2023-05-08-github-code-search-is-generally-available/&#34; rel=&#34;nofollow&#34;&gt;GitHub code search is generally available | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atpress.ne.jp/news/355297&#34; rel=&#34;nofollow&#34;&gt;トゥギャッターがTwitter APIのエンタープライズプラン利用契約を正式に締結、さらに「Twilog」を買収し統合へ｜トゥギャッター株式会社のプレスリリース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/dart_3100nullapi.html&#34; rel=&#34;nofollow&#34;&gt;「Dart 3」が正式リリース。100％Nullセーフティな言語に、ペイメント、ロケーションなどのAPIも直接呼び出し可能に。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/dart_310material_3webassembly.html&#34; rel=&#34;nofollow&#34;&gt;「Flutter 3.10」正式リリース。カラースキームの自動生成などMaterial 3対応強化、新レンダリングエンジン、WebAssembly対応など。Google I/O 2023 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dxd2023.cto-a.org/&#34; rel=&#34;nofollow&#34;&gt;Developer eXperience Day 2023&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cto-a.connpass.com/event/277153/&#34; rel=&#34;nofollow&#34;&gt;日本CTO協会主催 | Developer eXperience Day 2023 - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.u-tokyo.ac.jp/focus/ja/features/z0405_00014.html&#34; rel=&#34;nofollow&#34;&gt;トルコ・シリア地震後の中東情勢 | 東京大学&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>田んぼの生態系</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/05/ecosystem-of-rice-paddies/" />
		<id>tag:text.Baldanders.info,2023-05-13:/remark/2023/05/ecosystem-of-rice-paddies/</id>
		<published>2023-05-13T12:45:09+00:00</published>
		<updated>2023-05-13T12:53:23+00:00</updated>
		<summary>最近のお散歩カメラの成果</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;私の周辺では GW 前からようやく田起こしが始まって，水を入れて代掻きまで終わってるところもチラホラ，という感じ。
これに伴って田んぼ周辺の鳥たちの活動も活発になり，最近は鳥を撮って遊んでいる。&lt;/p&gt;
&lt;p&gt;というわけで，この頃のお散歩カメラの成果をいくつか紹介してみる。&lt;/p&gt;
&lt;hr&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52846524747/&#34;&gt;&lt;img src=&#34;./52846524747_ff0413699d_e.jpg&#34; srcset=&#34;./52846524747_ff0413699d_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52846524747/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;たぶんイソヒヨドリのオス。
逆光で真っ黒になるかなと思ったがカメラの性能がよかったらしい（笑） 結構お気に入りの構図。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52860599464/&#34;&gt;&lt;img src=&#34;./52860599464_98000bf079_e.jpg&#34; srcset=&#34;./52860599464_98000bf079_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;紅花詰草 (crimson clover) | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52860599464/&#34;&gt;紅花詰草 (crimson clover) | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;子供の頃には見かけなかった花なので何だろうと撮ってみたが紅花詰草 (crimson clover) というらしい。
マメ科特有の地中（根）に窒素を固定できる植物で緑肥植物として重宝されているそうな。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52863523166/&#34;&gt;&lt;img src=&#34;./52863523166_8a1cf2f599_e.jpg&#34; srcset=&#34;./52863523166_8a1cf2f599_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52863523166/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;たぶんイソヒヨドリのメス。
シャッターを押した瞬間に飛び立った偶然の産物。
下手の横好きも数撃ちゃ当たるという見本ですな。
最近のお気に入りの1枚。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52879880273/&#34;&gt;&lt;img src=&#34;./52879880273_059af93ac1_e.jpg&#34; srcset=&#34;./52879880273_059af93ac1_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52879880273/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;トンビがくるりと輪を描いた。
某ラピュタに出てくるかわいそうなロボットではない（笑）&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52882995285/&#34;&gt;&lt;img src=&#34;./52882995285_ee95b0a591_e.jpg&#34; srcset=&#34;./52882995285_ee95b0a591_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のカエルウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52882995285/&#34;&gt;今日のカエルウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;田んぼに水を入れれば当然カエルも出てくるわけさ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885456031/&#34;&gt;&lt;img src=&#34;./52885456031_ce7101bce7_e.jpg&#34; srcset=&#34;./52885456031_ce7101bce7_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885456031/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;そしてカエルが出てくればそれを食べるやつも出てくる。
たぶんアオサギ，かな。
残念ながらカエルを咥えているシーンはシャッターのタイミングが合わず撮れなかった。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52883001445/&#34;&gt;&lt;img src=&#34;./52883001445_d5c90fc619_e.jpg&#34; srcset=&#34;./52883001445_d5c90fc619_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52883001445/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;たぶんセグロセキレイ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885836350/&#34;&gt;&lt;img src=&#34;./52885836350_e0e13933a8_e.jpg&#34; srcset=&#34;./52885836350_e0e13933a8_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885836350/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;そんでムクドリ，かな。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885625999/&#34;&gt;&lt;img src=&#34;./52885625999_c99cfcf01e_e.jpg&#34; srcset=&#34;./52885625999_c99cfcf01e_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今どきのトラクターって吊り目だよね | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52885625999/&#34;&gt;今どきのトラクターって吊り目だよね | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;今どきのトラクターって吊り目だよね。
ウルトラマンオーブに出てくるサンダーブレスターみたいな &lt;del&gt;目つきの悪い&lt;/del&gt; おっと切れ長の吊り目は個人的に萌え要素である。
闇を抱いて光となる！&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52888268814/&#34;&gt;&lt;img src=&#34;./52888268814_db6ea2c130_e.jpg&#34; srcset=&#34;./52888268814_db6ea2c130_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52888268814/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;排気口の上にツバメの巣（食べられないほう）。
巣の中にツバメが居るのがお分かりだろうか。
もう卵を温めてるのかな？ ストレスにならんよう近寄らんとこ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52890164242/&#34;&gt;&lt;img src=&#34;./52890164242_a12fab5145_e.jpg&#34; srcset=&#34;./52890164242_a12fab5145_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52890164242/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;これは私にも分かる。
スズメだな。
スズメのお宿は竹林にて。
いや，笹だけど。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52891123770/&#34;&gt;&lt;img src=&#34;./52891123770_f220cb9a69_e.jpg&#34; srcset=&#34;./52891123770_f220cb9a69_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52891123770/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;よく見たらカルガモ。
なんちうか，露天風呂につかってるおっさんに見える（笑）&lt;/p&gt;
&lt;p&gt;&amp;hellip;というわけで，田んぼの周りは今日も賑やかである。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41MZe0XgHdL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;キヤノン (Release 2020-12-10)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B08L4WKDZ7 (ASIN), 4549292179675 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-04&#34;&gt;2022-12-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PowerShot ZOOM --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01I4WR6B6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51AHmvmQk3L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01I4WR6B6?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ウルトラマンオーブ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ボイジャー (アーティスト)&lt;/dd&gt;
    &lt;dd&gt;円谷プロダクション 2016-07-09 (Release 2016-07-10)&lt;/dd&gt;
    &lt;dd&gt;CD&lt;/dd&gt;
    &lt;dd&gt;B01I4WR6B6 (ASIN), 4562293991923 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;平成ウルトラマンではティガとオーブが名作だと思う。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-05-20&#34;&gt;2018-05-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ウルトラマンオーブ --&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>2023-05-07 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2023/05/07-bookmarks/" />
		<id>tag:text.Baldanders.info,2023-05-07:/bookmarks/2023/05/07-bookmarks/</id>
		<published>2023-05-07T03:37:57+00:00</published>
		<updated>2023-05-07T03:41:32+00:00</updated>
		<summary>「Git security vulnerabilities announced」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2 id=&#34;release&#34;&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/nyagos/releases/tag/4.4.13_2&#34; rel=&#34;nofollow&#34;&gt;Release 4.4.13_2 · nyaosorg/nyagos · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/nyagos/releases/tag/4.4.13_3&#34; rel=&#34;nofollow&#34;&gt;Release 4.4.13_3 · nyaosorg/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/sqlbless/releases/tag/v0.7.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.7.0 · hymkor/sqlbless · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/sqlbless/releases/tag/v0.7.1&#34; rel=&#34;nofollow&#34;&gt;Release v0.7.1 · hymkor/sqlbless · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1496393.html&#34; rel=&#34;nofollow&#34;&gt;「Thunderbird 102.10.1」がリリース ～4件の不具合を修正 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lwn.net/ml/git/xmqqa5yv3n93.fsf@gitster.g/&#34; rel=&#34;nofollow&#34;&gt;[ANNOUNCE] Git v2.40.1 and friends [LWN.net]&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2023-04-25-git-security-vulnerabilities-announced-4/&#34; rel=&#34;nofollow&#34;&gt;Git security vulnerabilities announced | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1496649.html&#34; rel=&#34;nofollow&#34;&gt;「Git」に脆弱性 ～対処した「Git for Windows 2.40.1」が公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.0 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.2&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.2 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.3&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.3 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.4&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.4 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nyaosorg/go-readline-ny/releases/tag/v0.11.5&#34; rel=&#34;nofollow&#34;&gt;Release v0.11.5 · nyaosorg/go-readline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1496713.html&#34; rel=&#34;nofollow&#34;&gt;「Firefox 112.0.2」が公開 ～先週に続く不具合修正 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tailscale/tailscale/releases/tag/v1.40.0&#34; rel=&#34;nofollow&#34;&gt;Release 1.40.0 · tailscale/tailscale · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bytecodealliance/wasmtime/releases/tag/v6.0.2&#34; rel=&#34;nofollow&#34;&gt;Release v6.0.2: Release Wasmtime 6.0.2 (#6274) · bytecodealliance/wasmtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bytecodealliance/wasmtime/releases/tag/v7.0.1&#34; rel=&#34;nofollow&#34;&gt;Release v7.0.1: Release Wasmtime 7.0.1 (#6275) · bytecodealliance/wasmtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bytecodealliance/wasmtime/releases/tag/v8.0.1&#34; rel=&#34;nofollow&#34;&gt;Release v8.0.1: Release Wasmtime 8.0.1 (#6276) · bytecodealliance/wasmtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny/releases/tag/v0.7.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.7.0 · hymkor/go-multiline-ny · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny/releases/tag/v0.7.1&#34; rel=&#34;nofollow&#34;&gt;Release v0.7.1 · hymkor/go-multiline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/go-multiline-ny/releases/tag/v0.7.2&#34; rel=&#34;nofollow&#34;&gt;Release v0.7.2 · hymkor/go-multiline-ny · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sashabaranov/go-openai/releases/tag/v1.9.1&#34; rel=&#34;nofollow&#34;&gt;Release v1.9.1 · sashabaranov/go-openai · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sashabaranov/go-openai/releases/tag/v1.9.2&#34; rel=&#34;nofollow&#34;&gt;Release v1.9.2 · sashabaranov/go-openai · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.78.0&#34; rel=&#34;nofollow&#34;&gt;Release April 2023 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/koki-develop/gat/releases/tag/v0.8.2&#34; rel=&#34;nofollow&#34;&gt;Release v0.8.2 · koki-develop/gat · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser/releases/tag/v1.18.0&#34; rel=&#34;nofollow&#34;&gt;Release v1.18.0 · goreleaser/goreleaser · GitHub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser/releases/tag/v1.18.1&#34; rel=&#34;nofollow&#34;&gt;Release v1.18.1 · goreleaser/goreleaser · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goreleaser/goreleaser/releases/tag/v1.18.2&#34; rel=&#34;nofollow&#34;&gt;Release v1.18.2 · goreleaser/goreleaser · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anchore/syft/releases/tag/v0.80.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.80.0 · anchore/syft · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;security&#34;&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://security.googleblog.com/2023/04/google-authenticator-now-supports.html&#34; rel=&#34;nofollow&#34;&gt;Google Online Security Blog: Google Authenticator now supports Google Account synchronization&lt;/a&gt; : これをどうにかしないと&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/freedom-of-speech/4412&#34; rel=&#34;nofollow&#34;&gt;米国：セキュリティと言論・表現の自由を脅かすSTOP CSAM法案 | p2ptk[.]org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2023/04/your-messaging-service-should-not-be-dea-informant&#34; rel=&#34;nofollow&#34;&gt;Your Messaging Service Should Not Be a DEA Informant | Electronic Frontier Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2023/04/earn-it-bill-back-again-seeking-scan-our-messages-and-photos&#34; rel=&#34;nofollow&#34;&gt;The EARN IT Bill Is Back, Seeking To Scan Our Messages and Photos | Electronic Frontier Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2304/28/news182.html&#34; rel=&#34;nofollow&#34;&gt;フレッツ光の大規模障害、発端は普通のマルチキャストパケットだった──NTT東西（1/2 ページ） - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2023/04/eff-now-has-tor-onions&#34; rel=&#34;nofollow&#34;&gt;EFF Now Has Tor Onions | Electronic Frontier Foundation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2023/05/02/004654&#34; rel=&#34;nofollow&#34;&gt;メルペイを不正使用した詐欺事件についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.jpcert.or.jp/ja/2023/05/dangerouspassword.html&#34; rel=&#34;nofollow&#34;&gt;攻撃キャンペーンDangerousPasswordに関連する攻撃動向 - JPCERT/CC Eyes | JPCERTコーディネーションセンター公式ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/1800-38/draft&#34; rel=&#34;nofollow&#34;&gt;SP 1800-38 (Draft), Migration to Post-Quantum Cryptography (Prelim Draft) | CSRC&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2023/05/nist-draft-document-on-post-quantum-cryptography-guidance.html&#34; rel=&#34;nofollow&#34;&gt;NIST Draft Document on Post-Quantum Cryptography Guidance - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1498028.html&#34; rel=&#34;nofollow&#34;&gt;iPhone、iPad、Macに「緊急セキュリティ対応」、Appleがリリース - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2023/05/06/014208&#34; rel=&#34;nofollow&#34;&gt;公文書管理システムの大量ファイル消失事故についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip&#34;&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://current.ndl.go.jp/car/180723&#34; rel=&#34;nofollow&#34;&gt;国立国会図書館（NDL）、「フロッピーディスクの長期保存対策に関する調査報告書」を公開 | カレントアウェアネス・ポータル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://the-owner.jp/archives/13325&#34; rel=&#34;nofollow&#34;&gt;オードリー・タンが自身の肖像権や著作権を放棄する深い理由 | THE OWNER&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35202842/&#34; rel=&#34;nofollow&#34;&gt;まったく新しい特徴を備えたLinuxデスクトップ「Universal Blue」 - ZDNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35203093/&#34; rel=&#34;nofollow&#34;&gt;「Linux 6.3」がリリース&amp;ndash;より安全、高速に - ZDNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2023/04/ubuntu-2204-360-ubuntu-22043-lts.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 22.04 その360 - Ubuntu 22.04.3 LTSのリリーススケジュール - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35203162/&#34; rel=&#34;nofollow&#34;&gt;信頼性とスピードを兼ね備えた「CachyOS」&amp;ndash;「Arch Linux」を試したい人向け - ZDNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows&#34;&gt;Microsoft 製品（Azure や Windows 等） に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/&#34; rel=&#34;nofollow&#34;&gt;Download a Windows virtual machine - Windows app development | Microsoft Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theregister.com/2023/04/27/microsoft_windows_rust/&#34; rel=&#34;nofollow&#34;&gt;Microsoft is rewriting core Windows libraries in Rust • The Register&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techcommunity.microsoft.com/t5/windows-it-pro-blog/windows-client-roadmap-update/ba-p/3805227&#34; rel=&#34;nofollow&#34;&gt;Windows client roadmap update - Microsoft Community Hub&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1497257.html&#34; rel=&#34;nofollow&#34;&gt;「Windows 10」の最終バージョンは「バージョン 22H2」 ～2025年10月14日でサポート終了 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20230420-microsoft-drops-twitter-from-ad-platform/&#34; rel=&#34;nofollow&#34;&gt;Microsoft広告がTwitterを今後サポートしないと発表してイーロン・マスクが「訴訟の時間だ」と怒りのツイート - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;golang&#34;&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/sugawarayuuta/articles/2a5a3cb3f9a504&#34; rel=&#34;nofollow&#34;&gt;それでも僕はGoで最速のJSONデコーダーを作りたかった&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linderud.dev/blog/golang-crypto/ecdh-and-the-tpm/&#34; rel=&#34;nofollow&#34;&gt;Golang crypto/ecdh and the TPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-co-op/gocron&#34; rel=&#34;nofollow&#34;&gt;GitHub - go-co-op/gocron: Easy and fluent Go cron scheduling. This is a fork from https://github.com/jasonlvhit/gocron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gogap/aop&#34; rel=&#34;nofollow&#34;&gt;GitHub - gogap/aop: Aspect Oriented Programming For Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hymkor/cure&#34; rel=&#34;nofollow&#34;&gt;GitHub - hymkor/cure: CURE.exe - Color-Unicoded moRE.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://totallygamerjet.hashnode.dev/writing-an-os-in-go-the-bootloader&#34; rel=&#34;nofollow&#34;&gt;Writing an OS in Go: The Bootloader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/thaim/articles/2023-04-go-urfavecli-choiceflag&#34; rel=&#34;nofollow&#34;&gt;urfave/cliで選択型の引数解析を実現する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.plural.sh/blog/how-we-integrated-a-react-app-into-a-go-cli/&#34; rel=&#34;nofollow&#34;&gt;How we Integrated a React App into a GO CLI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;java&#34;&gt;Java  言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/javakubernetesjava_operator_sdkoperator_framework.html&#34; rel=&#34;nofollow&#34;&gt;JavaでKubernetesを拡張できる「Java Operator SDK」が、Operator Frameworkの正式なサブプロジェクトに － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fernweh.jp/b/seasar2-sastruts/&#34; rel=&#34;nofollow&#34;&gt;Seasar2入門メモ＠SAStruts(Super Agile Struts) · 学習B5デスノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/tarosa0001/items/889faa2ab5853005f26b&#34; rel=&#34;nofollow&#34;&gt;【超初心者向け】Struts2超入門 - 2018年版 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://piyopiyocs.blog115.fc2.com/blog-entry-228.html&#34; rel=&#34;nofollow&#34;&gt;java、SAStruts、二度押し防止（トークンでのチェック）｜マコトのおもちゃ箱　～ぼへぼへ自営業者の技術メモ～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ne.jp/asahi/hishidama/home/tech/struts/ttoken.html&#34; rel=&#34;nofollow&#34;&gt;トランザクショントークン メモ(Hishidama&amp;rsquo;s struts transaction token Memo)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/okamoai/items/044c03680766f0609d41&#34; rel=&#34;nofollow&#34;&gt;Web API の CSRF 対策まとめ【追記あり】 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/ebichan_88/items/aaae17e72d068517f33f&#34; rel=&#34;nofollow&#34;&gt;【Struts入門】今さらStruts1.3.10を勉強したのでまとめてみた【初心者向け】 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gihyo.jp/book/2008/978-4-7741-3436-9&#34; rel=&#34;nofollow&#34;&gt;Seasar2によるスーパーアジャイルなWeb開発：書籍案内｜技術評論社&lt;/a&gt; : 買うた&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;astronomy&#34;&gt;天文関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://apod.nasa.gov/apod/ap230421.html&#34; rel=&#34;nofollow&#34;&gt;APOD: 2023 April 21 - Solar Eclipse from Western Australia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alma-telescope.jp/news/alma2-project-202304&#34; rel=&#34;nofollow&#34;&gt;ニュース - アルマ2計画の実施が始まりました  - アルマ望遠鏡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apod.nasa.gov/apod/ap230429.html&#34; rel=&#34;nofollow&#34;&gt;APOD: 2023 April 29 - Solar Eclipse from a Ship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2023/05/solarwinds-detected-six-months-earlier.html&#34; rel=&#34;nofollow&#34;&gt;SolarWinds Detected Six Months Earlier - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ai&#34;&gt;Generative AI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2023/04/21/googles-bard-ai-chatbot-can-now-generate-and-debug-code/&#34; rel=&#34;nofollow&#34;&gt;Google&amp;rsquo;s Bard AI chatbot can now generate and debug code | TechCrunch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.netandfield.com/shar/2023/04/chatgpt-pta.html&#34; rel=&#34;nofollow&#34;&gt;ChatGPT で PTA会長あいさつを作った - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://auto-worker.com/blog/?p=6988&#34; rel=&#34;nofollow&#34;&gt;【2023年版】OpenAIのAPIキー発行手順！ChatGPTや文章生成AI、画像生成AIを利用可能 | AutoWorker〜Google Apps Script(GAS)とSikuliで始める業務改善入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&#34; rel=&#34;nofollow&#34;&gt;Best Practices for API Key Safety | OpenAI Help Center&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/catnose99/articles/9183c86d3558e5&#34; rel=&#34;nofollow&#34;&gt;未ログインでも叩けるAPIエンドポイントにレートリミットを導入する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/modernice/jotbot&#34; rel=&#34;nofollow&#34;&gt;GitHub - modernice/jotbot: JotBot generates the missing documentation for your Go and TypeScript codebase. Powered by AI.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/tasukumizuno/n/nbd4f7bbeedeb&#34; rel=&#34;nofollow&#34;&gt;生成AIの法的・倫理的な論点｜水野祐（Tasuku Mizuno）｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ascii.jp/elem/000/004/134/4134143/&#34; rel=&#34;nofollow&#34;&gt;ASCII.jp：画像生成AI「Midjourney」でアニメ絵の似顔絵やアバターを作る方法 (1/3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scrapbox.io/nishio/%E7%84%A1%E8%AA%B2%E9%87%91%E3%81%AEChatGPT%E3%82%92%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%A7%E8%A9%A6%E3%81%97%E3%81%A6%E3%82%8F%E3%81%8B%E3%81%A3%E3%81%9F%E6%B0%97%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%E3%82%92%E3%82%84%E3%82%81%E3%82%8D&#34; rel=&#34;nofollow&#34;&gt;無課金のChatGPTを日本語で試してわかった気になるのをやめろ - 西尾泰和のScrapbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/305661/a-chatbot-that-asks-questions-could-help-you-spot-when-it-makes-no-sense/&#34; rel=&#34;nofollow&#34;&gt;MIT Tech Review: チャットGPT、「質問付き」回答で騙される人が減ることが判明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/shseri/toolsd/1497610.html&#34; rel=&#34;nofollow&#34;&gt;連休こそはじめたい好み丸出しAI画像生成の保存版手順書 - いまからでも遅くない！ツールとして使うAI画像生成 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nowokay.hatenablog.com/entry/2023/04/21/060243&#34; rel=&#34;nofollow&#34;&gt;ChatGPTには感情があるかも？ - きしだのHatena&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;others&#34;&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1496069.html&#34; rel=&#34;nofollow&#34;&gt;「ポートピア連続殺人事件」を題材にしたAI技術デモが無料公開されるも…… - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2023/04/25/Rustup-1.26.0.html&#34; rel=&#34;nofollow&#34;&gt;Announcing Rustup 1.26.0 | Rust Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/web3d2dbabylonjs_650wasm.html&#34; rel=&#34;nofollow&#34;&gt;Webブラウザ上で3D/2Dモデルをぬるぬる動かせる「Babylon.js 6」正式版に。レンダリング性能が最大50倍、WASM化した物理演算エンジン搭載、液体のレンダリングも － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/awsidecicdamazon_codecatalyst.html&#34; rel=&#34;nofollow&#34;&gt;AWS上で開発環境一式、コードリポジトリからテンプレートコード、IDE、CI/CDパイプラインまでを丸ごと提供する「Amazon CodeCatalyst」が正式サービスに － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tailscale.dev/blog/multi-user-tailnet-github-orgs&#34; rel=&#34;nofollow&#34;&gt;Creating a multi-user tailnet with GitHub organizations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/23/typescriptwebassemblytypescript_compilation_sigbytecode_alliance.html&#34; rel=&#34;nofollow&#34;&gt;TypeScriptをコンパイルしてWebAssemblyバイナリに、実現を目指す「TypeScript Compilation SIG」をByteCode Allianceが発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bitair-org/linker.js&#34; rel=&#34;nofollow&#34;&gt;GitHub - bitair-org/linker.js: Access Python &amp;amp; C-shared libraries from Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dot.kde.org/2023/04/25/g10-code-becomes-kde-patron&#34; rel=&#34;nofollow&#34;&gt;g10 Code Becomes a KDE Patron | KDE.news&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tailscale.com/blog/custom-oidc-enterprise/&#34; rel=&#34;nofollow&#34;&gt;Log into Tailscale with any OIDC-enabled identity provider · Tailscale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35203185/&#34; rel=&#34;nofollow&#34;&gt;Box、仮想ホワイトボードツール「Box Canvas」を正式リリース - ZDNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2023/04/27/dropbox-lays-off-500-employees-16-of-staff-ceo-says-due-to-slowing-growth-and-the-era-of-ai/&#34; rel=&#34;nofollow&#34;&gt;Dropbox lays off 500 employees, 16% of staff, CEO says due to slowing growth and &amp;rsquo;the era of AI&amp;rsquo; | TechCrunch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gnupg.org/blog/20230321-adsk.html&#34; rel=&#34;nofollow&#34;&gt;ADSK: The Additional Decryption Subkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pc.watch.impress.co.jp/docs/news/1498034.html&#34; rel=&#34;nofollow&#34;&gt;sudoとsuがRustで書き直される。メモリ安全性向上へ  - PC Watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/301136/these-companies-want-to-go-beyond-batteries-to-store-energy/&#34; rel=&#34;nofollow&#34;&gt;MIT Tech Review: 蓄電池だけじゃない、送電網向けエネルギー貯蔵の選択肢&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://charm.sh/&#34; rel=&#34;nofollow&#34;&gt;Charm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.umetsubo.com/archives/20642&#34; rel=&#34;nofollow&#34;&gt;平安堂梅坪 ｜   新発売「ぷよぷよまんじゅう」のご案内&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>Go 1.20.4 のリリース【セキュリティ・アップデート】</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2023/05/go-1_20_4-is-released/" />
		<id>tag:text.Baldanders.info,2023-05-03:/release/2023/05/go-1_20_4-is-released/</id>
		<published>2023-05-03T03:44:26+00:00</published>
		<updated>2023-05-03T03:44:45+00:00</updated>
		<summary>今回は3件の脆弱性修正を含んでいる。今回は html/template の不具合ばっかりだな。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/vFRFE07dbB8&#34; title=&#34;[security] Go 1.20.4 and Go 1.19.9 pre-announcement&#34;&gt;予告&lt;/a&gt;通り &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; 1.20.4 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU&#34;&gt;[security] Go 1.20.4 and Go 1.19.9 are released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は3件の脆弱性修正を含んでいる。
今回は &lt;a href=&#34;https://pkg.go.dev/html/template&#34; title=&#34;template package - html/template - Go Packages&#34;&gt;&lt;code&gt;html/template&lt;/code&gt;&lt;/a&gt; の不具合ばっかりだな。
Web アプリケーションを組んでいる方は特に気をつけましょう。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2023-24539&#34;&gt;CVE-2023-24539&lt;/a&gt; html/template: improper sanitization of CSS values&lt;/h2&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Angle brackets (&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;) were not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a &amp;lsquo;&lt;code&gt;/&lt;/code&gt;&amp;rsquo; character could result in unexpectedly closing the CSS context and allowing for injection of unexpected HMTL, if executed with untrusted input.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU&#34;&gt;Go 1.20.4 and Go 1.19.9 are released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;（以下未稿）&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2023-24540&#34;&gt;CVE-2023-24540&lt;/a&gt; html/template: improper handling of JavaScript whitespace&lt;/h2&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Not all valid JavaScript whitespace characters were considered to be whitespace. Templates containing whitespace characters outside of the character set &lt;code&gt;&amp;quot;\t\n\f\r\u0020\u2028\u2029&amp;quot;&lt;/code&gt; in JavaScript contexts that also contain actions may not be properly sanitized during execution.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU&#34;&gt;Go 1.20.4 and Go 1.19.9 are released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;うわぁ，面倒くさい。&lt;/p&gt;
&lt;p&gt;（以下未稿）&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2023-29400&#34;&gt;CVE-2023-29400&lt;/a&gt; html/template: improper handling of empty HTML attributes&lt;/h2&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;Templates containing actions in unquoted HTML attributes (e.g. &lt;code&gt;&amp;quot;attr={{.}}&amp;quot;&lt;/code&gt;) executed with empty input could result in output that would have unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/MEb0UyuSMsU&#34;&gt;Go 1.20.4 and Go 1.19.9 are released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;（以下未稿）&lt;/p&gt;
&lt;h2&gt;例によって&amp;hellip;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT で管理している &lt;a href=&#34;https://go.dev/&#34;&gt;Go&lt;/a&gt; コンパイラは古いので，&lt;a href=&#34;https://go.dev/dl/&#34; title=&#34;Downloads - go.dev&#34;&gt;ダウンロードページ&lt;/a&gt;からバイナリ（&lt;a href=&#34;https://go.dev/dl/go1.20.4.linux-amd64.tar.gz&#34;&gt;&lt;code&gt;go1.20.4.linux-amd64.tar.gz&lt;/code&gt;&lt;/a&gt;）を取ってきてインストールすることを推奨する。
以下は完全手動での作業例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cd /usr/local/src
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo curl -L &amp;#34;https://go.dev/dl/go1.20.4.linux-amd64.tar.gz&amp;#34; -O
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cd ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo unlink go # 以前の Go が入っている場合
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo tar xvf src/go1.20.4.linux-amd64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo mv go go1.20.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ sudo ln -s go1.20.4 go
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go version # /usr/local/go/bin にパスが通っている場合
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go version go1.20.4 linux/amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Windows はインストールパッケージを取ってきて直接インストールする。
&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt; 経由でも OK&lt;/p&gt;
&lt;p&gt;複数バージョンの Go コンパイラを扱いたい場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go install golang.org/dl/go1.20.4@latest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go1.20.4 download
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ go1.20.4 version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go version go1.20.4 linux/amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じで導入できる。&lt;/p&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dClAl3WKL._SL160_.jpg&#34; width=&#34;125&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4814400047?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;初めてのGo言語 ―他言語プログラマーのためのイディオマティックGo実践ガイド&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Jon Bodner (著), 武舎 広幸 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2022-09-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4814400047 (ASIN), 9784814400041 (EAN), 4814400047 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2021年に出た “&lt;a href=&#34;https://www.oreilly.com/library/view/learning-go/9781492077206/&#34;&gt;Learning Go&lt;/a&gt;” の邦訳版。私は&lt;a href=&#34;https://www.oreilly.co.jp/books/9784814400041/&#34;&gt;版元&lt;/a&gt;で PDF 版を購入。 Go 特有の語法（idiom）を切り口として Go の機能やパッケージを解説している。 Go 1.19 対応。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-11&#34;&gt;2022-10-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 初めてのGo言語 --&gt;
</content>
	</entry><entry>
		<title>ステムバッグ買うた</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/05/stem-bag-on-bike/" />
		<id>tag:text.Baldanders.info,2023-05-03:/remark/2023/05/stem-bag-on-bike/</id>
		<published>2023-05-03T02:56:35+00:00</published>
		<updated>2023-05-03T03:44:45+00:00</updated>
		<summary>これを称して「衝動買い」という（笑）</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;なんとなく思いついてステムバッグを買うことにした。
これを称して「衝動買い」という（笑）&lt;/p&gt;
&lt;p&gt;こんなやつ。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08K34WLXD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41GknHod8AL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08K34WLXD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[FAIRWEATHER(フェアウェザー)] stem bag x-pac/coyote&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;FAIRWEATHER(フェアウェザー)&lt;/dd&gt;
    &lt;dd&gt;&lt;/dd&gt;
    &lt;dd&gt;B08K34WLXD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;スポーツサイクルのステム部分に取り付けられる小物入れ。防水仕様。底に小さなハトメ穴が空いていて，万一水が入った場合でも排出できるようになっている。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-05-03&#34;&gt;2023-05-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ステムバッグ（stem bag） --&gt;
&lt;p&gt;あっ，ステムってのはスポーツサイクルのヘッドセットとハンドルバーをつなぐこの部分のことね。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./stem.jpg&#34;&gt;&lt;img src=&#34;./stem.jpg&#34; srcset=&#34;./stem.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ステム（stem）&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./stem.jpg&#34;&gt;ステム（stem）&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;装着するとこんな感じ（ステムの左右どちらにも着けられる）。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./stem-bag.jpg&#34;&gt;&lt;img src=&#34;./stem-bag.jpg&#34; srcset=&#34;./stem-bag.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ステムバッグ（stem bag）&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./stem-bag.jpg&#34;&gt;ステムバッグ（stem bag）&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;全体に防水仕様になっていて，上部分は巾着のように絞って閉じることができる。&lt;/p&gt;
&lt;p&gt;実はこれ，底に小さなハトメ穴が空いてるのですよ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./stem-bag-2.jpg&#34;&gt;&lt;img src=&#34;./stem-bag-2.jpg&#34; srcset=&#34;./stem-bag-2.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ステムバッグ（stem bag）&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./stem-bag-2.jpg&#34;&gt;ステムバッグ（stem bag）&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;たとえば，コンビニで買ったペットボトルの水をそのままステムバッグに入れたとしよう。
底に穴が空いていれば，ボトル表面の結露がバッグ内部に溜まらないで排出可能というわけ。
これが購入の決め手になった。
まぁ，でも，たぶんペットボトルは入れないと思う。&lt;/p&gt;
&lt;p&gt;自転車で&lt;a href=&#34;https://text.baldanders.info/tags/osanpo-camera/&#34;&gt;お散歩カメラ&lt;/a&gt;するのに，今はコンデジを&lt;a href=&#34;https://text.baldanders.info/remark/2022/11/blocktech-parka/&#34; title=&#34;ブロックテックパーカを買うた&#34;&gt;アウター&lt;/a&gt;の胸ポケットに入れてるんだけど，これから薄着になったらどこにしまおうか悩んでいたのだ。
で，ステムバッグを自転車に着けて，そこに入れればいいぢゃん，と思いついたのだった。&lt;/p&gt;
&lt;p&gt;ついでに，いざというときのブドウ糖とかニトログリセリン舌下錠とかも入れておけばいいかな。
通勤用のバックパックや遊びに出掛けるときのメッセンジャーバッグにも「バッグ in バッグ」で入るので，自転車に乗らないときもそのまま持ち出せる。
うんうん。&lt;/p&gt;
&lt;h2&gt;【おまけ】チェーンクリーナーが凄い！&lt;/h2&gt;
&lt;p&gt;今まで&lt;a href=&#34;https://text.baldanders.info/remark/2022/09/cleaning-the-chain/&#34; title=&#34;チェーンお掃除を試してみる&#34;&gt;使ってた&lt;/a&gt;チェーンルブが切れたので，今回は違うメーカーのを買ってみた。
クリーナーとセットで購入。&lt;/p&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B091PZZ72F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41YJMpKGjKL._SL160_.jpg&#34; width=&#34;56&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B091PZZ72F?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;シュアラスター チェーンオイル チェーンルブ[セミドライタイプ] S-146 軽いペダリング 汚れにくい 300km耐久&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シュアラスター(Surluster) (Release 2021-05-24)&lt;/dd&gt;
    &lt;dd&gt;Automotive&lt;/dd&gt;
    &lt;dd&gt;B091PZZ72F (ASIN), 4975203103468 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;今までのが切れたので違うメーカーにしてみた。同メーカーのチェーンクリーナーとセットで購入。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-05-03&#34;&gt;2023-05-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- チェーンルブ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B091PN6MNM?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41OcmIHOFNL._SL160_.jpg&#34; width=&#34;59&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B091PN6MNM?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;シュアラスター チェーンクリーナー チェーンクリーナー(自転車用) S-145 強力除去 完全揮発 ブラシ付き&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シュアラスター(Surluster) (Release 2021-05-24)&lt;/dd&gt;
    &lt;dd&gt;Automotive&lt;/dd&gt;
    &lt;dd&gt;B091PN6MNM (ASIN), 4975203103451 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;めがっさ落ちる。水なしで使える。同メーカーのチェーンルブとセットで購入。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-05-03&#34;&gt;2023-05-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- チェーンクリーナー --&gt;
&lt;p&gt;めがっさ落ちる。
素晴らしい！&lt;/p&gt;
&lt;p&gt;今は借家住まいなので洗車に水が使えないのね。
このチェーンクリーナーなら水なしで激落ちくんですよ。
しかも速乾性で，そのままチェーンルブを差しても大丈夫。&lt;/p&gt;
&lt;p&gt;よい買い物でした。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/8-qudioj13s&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8-qudioj13s&#34;&gt;あると重宝するステムバッグを５種類紹介します。 - YouTube&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41MZe0XgHdL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;キヤノン (Release 2020-12-10)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B08L4WKDZ7 (ASIN), 4549292179675 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-04&#34;&gt;2022-12-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PowerShot ZOOM --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B06XDPTLDD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41dUn2llioL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B06XDPTLDD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;アークレイ株式会社 グルコレスキュー (ブドウ糖補給ゼリー) 25g×5包 2箱セット&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アークレイ株式会社&lt;/dd&gt;
    &lt;dd&gt;&lt;/dd&gt;
    &lt;dd&gt;B06XDPTLDD (ASIN), 4987486118541 (EAN), 4573189972315 (EAN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;低血糖になった場合の緊急措置用に購入。仕事用鞄とプライベート用鞄に忍ばせている。幸いまだお世話になったことはない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-11-16&#34;&gt;2022-11-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ブドウ糖 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08P54PQDB?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31yRFa0S-&amp;#43;L._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08P54PQDB?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[クローム] メッセンジャーバッグ SIMPLE MESSENGER/シンプル メッセンジャー BLACK (現行モデル) 12L 防水 メンズ&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;CHROME(クローム)&lt;/dd&gt;
    &lt;dd&gt;ウェア&amp;amp;シューズ&lt;/dd&gt;
    &lt;dd&gt;B08P54PQDB (ASIN), 0841916163973 (EAN), 841916163973 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;プライベートお出かけ用。たまたま安売りの時に購入できた。チャリンコ乗ってても背中がゆさゆさしない。大きすぎず丁度いいサイズ。鞄の蓋がマジックテープでちょっと煩いのが玉に瑕だが，概ね満足。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-10-08&#34;&gt;2022-10-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- メッセンジャーバッグ --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B009FUF6DM?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51OpXtWV5zL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B009FUF6DM?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Amazonベーシック マイクロファイバー クリーニングクロス 24枚入 (400mm x 300mm) 薄手 洗車ふきとり&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Amazonベーシック(Amazon Basics) (Release 2013-09-11)&lt;/dd&gt;
    &lt;dd&gt;Automotive&lt;/dd&gt;
    &lt;dd&gt;B009FUF6DM (ASIN), 0885755921844 (EAN), 5050053546555 (EAN), 0841710104554 (EAN), 841710104554 (UPC), 885755921844 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;自転車掃除用のウェス（waste）として購入。1枚50円程度と考えるなら百均で売ってるのと同程度の値段か？&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-09-25&#34;&gt;2022-09-25&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- マイクロファイバー クリーニングクロス --&gt;
</content>
	</entry><entry>
		<title>eBird と Merlin</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/05/ebird-merlin/" />
		<id>tag:text.Baldanders.info,2023-05-01:/remark/2023/05/ebird-merlin/</id>
		<published>2023-05-01T12:29:43+00:00</published>
		<updated>2023-05-01T22:54:20+00:00</updated>
		<summary>野鳥識別アプリを使ってみた。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;私は特にバードウォッチャーというわけではないが，&lt;a href=&#34;https://text.baldanders.info/remark/2022/12/autumn-color-in-matsue-castle/&#34; title=&#34;Black Friday の戦利品&#34;&gt;昨年末に望遠専用のコンパクトデジカメを買って&lt;/a&gt;以来，その辺にいる野鳥を撮って遊んでたりする。&lt;/p&gt;
&lt;p&gt;私の場合，生き物の外見を「見分ける」のが不得手で人間の顔もなかなか覚えられないのだが，せっかく写真に撮ったんだし，それがどんな鳥なのか知りたいじゃない？ 今までは &lt;a href=&#34;https://lens.google/&#34;&gt;Google Lens&lt;/a&gt; とかで調べてたんだけど， &lt;a href=&#34;https://merlin.allaboutbirds.org/&#34; title=&#34;Merlin Bird ID – Free, instant bird identification help and guide for thousands of birds – Identify the birds you see&#34;&gt;Merlin&lt;/a&gt; というスマホアプリがあるらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://merlin.allaboutbirds.org/&#34;&gt;Merlin Bird ID – Free, instant bird identification help and guide for thousands of birds – Identify the birds you see&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/K0qPBjLcIPk&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=K0qPBjLcIPk&#34;&gt;アプリ「Merlin野鳥識別」の使い方（Explore Merlin Bird ID App） - YouTube&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;このアプリの面白いところは，単に野鳥の種類が調べられるだけでなく， &lt;a href=&#34;https://ebird.org/&#34; title=&#34;eBird - Discover a new world of birding...&#34;&gt;eBird&lt;/a&gt; と連動している点のようだ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote class=&#34;nobox&#34; style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://ebird.org/japan/about/&#34;&gt;&lt;img src=&#34;./eBird-pic.png&#34; srcset=&#34;./eBird-pic.png 3420w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;eBirdについて - eBird Japan&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://ebird.org/japan/about/&#34;&gt;eBirdについて - eBird Japan&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://merlin.allaboutbirds.org/&#34; title=&#34;Merlin Bird ID – Free, instant bird identification help and guide for thousands of birds – Identify the birds you see&#34;&gt;Merlin&lt;/a&gt; で野鳥を調べるには，本体とは別に「バードパック」というのが必要。
最初に起動した際にリージョンに合ったバードパックを勧めてくるので，通常はそのままダウンロード&amp;amp;インストールすればよい。
のだが，データ量が多く，けっこう時間がかかった。&lt;/p&gt;
&lt;p&gt;実際に撮った写真で試してみよう。
たとえば，昨日撮った&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52856884852/&#34;&gt;&lt;img src=&#34;https://text.baldanders.info/remark/2023/04/30-osanpo-camera/52856884852_81a4e36f93_e.jpg&#34; srcset=&#34;https://text.baldanders.info/remark/2023/04/30-osanpo-camera/52856884852_81a4e36f93_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング（松江 楽山公園） | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52856884852/&#34;&gt;今日のバードウォッチング（松江 楽山公園） | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という写真を調べてみる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./merline-0.jpg&#34;&gt;&lt;img src=&#34;./merline-0.jpg&#34; srcset=&#34;./merline-0.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Merlin&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./merline-0.jpg&#34;&gt;Merlin&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;最初のメニューに「写真で識別する」という項目があるので，これを使う。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./merline-1.jpg&#34;&gt;&lt;img src=&#34;./merline-1.jpg&#34; srcset=&#34;./merline-1.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Merlin&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./merline-1.jpg&#34;&gt;Merlin&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;こんな感じで拡大して「次へ」&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./merline-2.jpg&#34;&gt;&lt;img src=&#34;./merline-2.jpg&#34; srcset=&#34;./merline-2.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Merlin&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./merline-2.jpg&#34;&gt;Merlin&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;こんな感じに場所（地図で指定できる）と見つけた日付を入れて「識別」する。
すると&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./merline-3.jpg&#34;&gt;&lt;img src=&#34;./merline-3.jpg&#34; srcset=&#34;./merline-3.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Merlin&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./merline-3.jpg&#34;&gt;Merlin&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;こんな感じに候補が表示される。
これで件の鳥がカルガモだと分かる。&lt;/p&gt;
&lt;p&gt;この状態で「これが私の見つけた鳥です！」ボタンを押すと登録されるのだが，登録するためには &lt;a href=&#34;https://www.birds.cornell.edu/home/&#34; title=&#34;Cornell Lab of Ornithology—Home | Birds, Cornell Lab of Ornithology&#34;&gt;Cornell Lab&lt;/a&gt; のアカウントが必要である。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./merline-4.jpg&#34;&gt;&lt;img src=&#34;./merline-4.jpg&#34; srcset=&#34;./merline-4.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Merlin&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./merline-4.jpg&#34;&gt;Merlin&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;アカウントの作成は Web ブラウザに移動して行う。
住所とか入力させられるので（必須ではないみたいだが），そういうのが嫌な方は登録を諦めるしかない。
なお &lt;a href=&#34;https://secure.birds.cornell.edu/cassso&#34;&gt;Web でサインイン&lt;/a&gt;して後からアカウント設定変更も可能で，削除も簡単にできる。&lt;/p&gt;
&lt;p&gt;アカウントを作成して登録すれば自身のライフリストに記録が残る。
ただし識別に使った写真は登録されないみたい。
あくまで日付と場所と目撃した鳥の種類（推定）が非公開の個人記録として登録されるだけのようだ（学術研究にも使われない）。
&lt;a href=&#34;https://merlin.allaboutbirds.org/&#34; title=&#34;Merlin Bird ID – Free, instant bird identification help and guide for thousands of birds – Identify the birds you see&#34;&gt;Merlin&lt;/a&gt; で行った識別を &lt;a href=&#34;https://ebird.org/&#34; title=&#34;eBird - Discover a new world of birding...&#34;&gt;eBird&lt;/a&gt; 側に登録するには &lt;a href=&#34;https://ebird.org/about/ebird-mobile/&#34; title=&#34;eBird Mobile - eBird&#34;&gt;eBird Mobile&lt;/a&gt; というアプリを入れて連携させる必要があるらしい。
&lt;a href=&#34;https://ebird.org/&#34; title=&#34;eBird - Discover a new world of birding...&#34;&gt;eBird&lt;/a&gt; メインで活動するなら，もう立派にバードウォッチャーかな。&lt;/p&gt;
&lt;p&gt;んー。
最初に言ったように私はバードウォッチャーではないので，今のところ &lt;a href=&#34;https://merlin.allaboutbirds.org/&#34; title=&#34;Merlin Bird ID – Free, instant bird identification help and guide for thousands of birds – Identify the birds you see&#34;&gt;Merlin&lt;/a&gt; で遊ぶくらいでちょうどいいだろう。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ebird.org/japan/home&#34;&gt;eBird Japan - バードウォッチングの世界が広がる…&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ebird.org/japan/news/campaign-ebird-20230510&#34;&gt;キャンペーン「愛鳥週間！ 身近な鳥を観察してeBirdに投稿しよう」 ～スマホで参加する、市民科学プロジェクト～ - eBird Japan&lt;/a&gt; : 5月10〜16日は「愛鳥週間」だそうな&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ebird.org/japan/news/setting_guide&#34;&gt;「eBird/Merlin設定と基本操作ガイド」を公開しました - eBird Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ebird.org/japan/news/specific_name_jp&#34;&gt;eBird/Merlinで種名を日本語表示にするには - eBird Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41MZe0XgHdL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08L4WKDZ7?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Canon コンパクトデジタルカメラ PowerShot ZOOM 写真と動画が撮れる望遠鏡 PSZOOM&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;キヤノン (Release 2020-12-10)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B08L4WKDZ7 (ASIN), 4549292179675 (EAN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;望遠鏡型コンパクトデジカメ。メモリと充電器（要 Power Delivery）は別に用意する必要がある。使い勝手はまぁまぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-04&#34;&gt;2022-12-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- PowerShot ZOOM --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07W7JMHHX?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41FwMnMYpBL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07W7JMHHX?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Crowds&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;WHITE ASH (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;VAP 2013-08-21 (Release 2013-08-21)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B07W7JMHHX (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;アニメ「ガッチャマン クラウズ」 OP 曲収録。 MP3 で買い直した。 WHITE ASH はいいよねぇ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-05-01&#34;&gt;2023-05-01&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 「ガッチャマン クラウズ」 Crowds --&gt;
</content>
	</entry><entry>
		<title>お散歩カメラ 2023-04-30</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2023/04/30-osanpo-camera/" />
		<id>tag:text.Baldanders.info,2023-04-30:/remark/2023/04/30-osanpo-camera/</id>
		<published>2023-04-30T10:26:45+00:00</published>
		<updated>2023-04-30T10:27:03+00:00</updated>
		<summary>そうだ！ 楽山公園に行こう</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;午後から晴れそうな予報だったのと，午前中川津方面に用事があったので，「そうだ！ &lt;a href=&#34;https://goo.gl/maps/3KK9JieJ596Loa7E6&#34;&gt;楽山公園&lt;/a&gt;に行こう」と思い立つ。&lt;/p&gt;
&lt;p&gt;まずは用事を済ませて，昼飯を貪り食う。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857461636/&#34;&gt;&lt;img src=&#34;./52857461636_cb830061fd_e.jpg&#34; srcset=&#34;./52857461636_cb830061fd_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;天一で昼飯 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857461636/&#34;&gt;天一で昼飯 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ほんじゃあ出掛けようか。
いや，待て。
先にトイレを済ませておこう&amp;hellip; と（トイレを借りるために）入った本屋で（雑誌の表紙を見て）つい衝動買いをしてしまう。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858343820/&#34;&gt;&lt;img src=&#34;./52858343820_7dbdcea498_e.jpg&#34; srcset=&#34;./52858343820_7dbdcea498_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;衝動買い | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858343820/&#34;&gt;衝動買い | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;さて，仕切り直し。
&lt;a href=&#34;https://goo.gl/maps/3KK9JieJ596Loa7E6&#34;&gt;楽山公園&lt;/a&gt;へ Go。
道幅が狭い割に車が多いことを除けば，特に難所もなく辿り着いた。&lt;/p&gt;
&lt;p&gt;おおっ。
お池に鴨が。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52856884852/&#34;&gt;&lt;img src=&#34;./52856884852_81a4e36f93_e.jpg&#34; srcset=&#34;./52856884852_81a4e36f93_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング（松江 楽山公園） | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52856884852/&#34;&gt;今日のバードウォッチング（松江 楽山公園） | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;山（というか丘）に登ってみたのだが，あまり手入れがされてないのか鬱蒼としている。
倒木とかそのまま放置されてるし。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857643264/&#34;&gt;&lt;img src=&#34;./52857643264_600915c36d_e.jpg&#34; srcset=&#34;./52857643264_600915c36d_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;松江 楽山公園 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857643264/&#34;&gt;松江 楽山公園 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まぁ，でも，比較的歩きやすい道ではある。
楽山公園から松江城の天守閣も見えた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857469061/&#34;&gt;&lt;img src=&#34;./52857469061_042b810c19_e.jpg&#34; srcset=&#34;./52857469061_042b810c19_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;松江城 from 楽山公園 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857469061/&#34;&gt;松江城 from 楽山公園 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;少し休憩したあと，折角なので松江城にも行ってみた。
全く期待してなかったが，今日は大山が見えた。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857680781/&#34;&gt;&lt;img src=&#34;./52857680781_7234ffd631_e.jpg&#34; srcset=&#34;./52857680781_7234ffd631_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;大山（伯耆富士） from 松江城 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52857680781/&#34;&gt;大山（伯耆富士） from 松江城 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;こいつはラッキーっス！ あっ，鳥が巣を作ってるな。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858190158/&#34;&gt;&lt;img src=&#34;./52858190158_f3c80ce984_e.jpg&#34; srcset=&#34;./52858190158_f3c80ce984_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日のバードウォッチング | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858190158/&#34;&gt;今日のバードウォッチング | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;あれってアオサギかなぁ&amp;hellip;&lt;/p&gt;
&lt;p&gt;ひとしきり遊んだので，夕方まで&lt;a href=&#34;https://www.library.pref.shimane.lg.jp/&#34;&gt;図書館&lt;/a&gt;で読書タイム。
そのうち別れのワルツが流れ出したので帰宅した&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div style=&#34;position: relative; margin: 0 2rem; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe class=&#34;youtube-player&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; src=&#34;https://www.youtube-nocookie.com/embed/C1TI4qc765M&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=C1TI4qc765M&#34;&gt;別れのワルツ　ユージン・コスマン楽団　1956 - YouTube&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;そうそう。
今日の宍道湖っス。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858526243/&#34;&gt;&lt;img src=&#34;./52858526243_d92091e247_e.jpg&#34; srcset=&#34;./52858526243_d92091e247_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;今日の宍道湖 | Flickr&#34; loading=&#34;lazy&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/52858526243/&#34;&gt;今日の宍道湖 | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2022/12/monitoring-heart-rate/&#34; title=&#34;心拍数を監視する&#34;&gt;Fitbit の報告&lt;/a&gt;によると，今日のトータルの歩数（サイクリング分を含む）は15K歩あまり，消費エネルギーにして2.4Mカロリーだそうな。&lt;/p&gt;
&lt;p&gt;今日も楽しく遊びました。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08FSBNJG8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/31vqXm740wL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B08FSBNJG8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;Fitbit Inspire2 フィットネストラッカー Black ブラック L/Sサイズ [日本正規品]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Fitbit (Release 2020-10-02)&lt;/dd&gt;
    &lt;dd&gt;エレクトロニクス&lt;/dd&gt;
    &lt;dd&gt;B08FSBNJG8 (ASIN), 0810038852805 (EAN), 810038852805 (UPC)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;私の場合，心拍数がモニタできればいいので充分な性能。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2022-12-26&#34;&gt;2022-12-26&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Fitbit Inspire2 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0BFG7M98T?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZVRLJRuHL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0BFG7M98T?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;祝福&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;YOASOBI (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;YOASOBI 2022-10-01 (Release 2022-10-01)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B0BFG7M98T (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;アニメ「機動戦士ガンダム 水星の魔女」の OP 曲。最近ヘヴィローテーションしている。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2023-04-25&#34;&gt;2023-04-25&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 祝福 機動戦士ガンダム 水星の魔女--&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>GnuPG 2.4.1 のリリース</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2023/04/gnupg-2_4_1-is-released/" />
		<id>tag:text.Baldanders.info,2023-04-29:/release/2023/04/gnupg-2_4_1-is-released/</id>
		<published>2023-04-29T09:29:31+00:00</published>
		<updated>2023-04-29T09:30:03+00:00</updated>
		<summary>脆弱性の修正はなし。機能の追加と不具合の修正</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.4.1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2023q2/000478.html&#34;&gt;[Announce] GnuPG 2.4.1 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;脆弱性の修正はなし。
その他の改修ポイントは以下の通り。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;If the ~/.gnupg directory does not exist, the keyboxd is now automagically enabled.  [rGd9e7488b17]&lt;/li&gt;
&lt;li&gt;gpg: New option &lt;code&gt;--add-desig-revoker&lt;/code&gt;.  [rG3d094e2bcf]&lt;/li&gt;
&lt;li&gt;gpg: New option &lt;code&gt;--assert-signer&lt;/code&gt;.  [rGc9e95b8dee]&lt;/li&gt;
&lt;li&gt;gpg: New command &lt;code&gt;--quick-add-adsk&lt;/code&gt; and other ADSK features.  [T6395, https://gnupg.org/blog/20230321-adsk.html]&lt;/li&gt;
&lt;li&gt;gpg: New list-option &amp;ldquo;&lt;code&gt;show-unusable-sigs&lt;/code&gt;&amp;rdquo;.  Also show &amp;ldquo;&lt;code&gt;[self-signature]&lt;/code&gt;&amp;rdquo; instead of the &lt;code&gt;user-id&lt;/code&gt; in key signature listings.  [rG103acfe9ca]&lt;/li&gt;
&lt;li&gt;gpg: For symmetric encryption the default S2K hash is now SHA256.  [T6367]&lt;/li&gt;
&lt;li&gt;gpg: Detect already compressed data also when using a pipe.  Also detect JPEG and PNG file formats.  [T6332]&lt;/li&gt;
&lt;li&gt;gpg: New subcommand &amp;ldquo;&lt;code&gt;openpgp&lt;/code&gt;&amp;rdquo; for &lt;code&gt;--card-edit&lt;/code&gt;.  [T6462]&lt;/li&gt;
&lt;li&gt;gpgsm: Verification of detached signatures does now strip trailing zeroes from the input if &lt;code&gt;--assume-binary&lt;/code&gt; is used.  [rG2a13f7f9dc]&lt;/li&gt;
&lt;li&gt;gpgsm: Non-armored detached signature are now created without using indefinite form length octets.  This improves compatibility with some PDF signature verification software.  [rG8996b0b655]&lt;/li&gt;
&lt;li&gt;gpgtar: Emit progress status lines in create mode.  [T6363]&lt;/li&gt;
&lt;li&gt;dirmngr: The LDAP modifyTimestamp is now returned by some keyserver commands.  [rG56d309133f]&lt;/li&gt;
&lt;li&gt;ssh: Allow specification of the order keys are presented to ssh. See the man page entry for &lt;code&gt;--enable-ssh-support&lt;/code&gt;.  [T5996, T6212]&lt;/li&gt;
&lt;li&gt;gpg: Make list-options &amp;ldquo;&lt;code&gt;show-sig-subpackets&lt;/code&gt;&amp;rdquo; work again. Fixes regression in 2.4.0.  [rG5a223303d7]&lt;/li&gt;
&lt;li&gt;gpg: Fix the keytocard command for Yubikeys.  [T6378]&lt;/li&gt;
&lt;li&gt;gpg: Do not continue an export after a cancel for the primary key.  [T6093]&lt;/li&gt;
&lt;li&gt;gpg: Replace the &lt;code&gt;--override-compliance-check&lt;/code&gt; hack by a real fix.  [T5655]&lt;/li&gt;
&lt;li&gt;gpgtar: Fix decryption with input taken from stdin.  [T6355]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Release-info: &lt;a href=&#34;https://dev.gnupg.org/T6454&#34;&gt;https://dev.gnupg.org/T6454&lt;/a&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2023q2/000478.html&#34;&gt;GnuPG 2.4.1 released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とりあえず &lt;code&gt;--quick-add-adsk&lt;/code&gt; オプションと &lt;code&gt;--enable-ssh-support&lt;/code&gt; オプションが気になるところではある。
&lt;code&gt;--quick-add-adsk&lt;/code&gt; オプションおよび ADSK については以下の記事が参考になる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gnupg.org/blog/20230321-adsk.html&#34;&gt;ADSK: The Additional Decryption Subkey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 関連パッケージ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 関連の各パッケージのバージョンは以下の通り（数字は大体の&lt;a href=&#34;https://text.baldanders.info/openpgp/build-gnupg-in-ubuntu/&#34; title=&#34;Ubuntu で最新版 GnuPG をビルドする&#34;&gt;ビルド&lt;/a&gt;順）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;#&lt;/th&gt;
&lt;th&gt;パッケージ名&lt;/th&gt;
&lt;th&gt;バージョン&lt;/th&gt;
&lt;th&gt;公開日&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;更新&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/libgpg-error/&#34;&gt;Libgpg-error&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.47&lt;/td&gt;
&lt;td&gt;2023-04-06&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span&gt;&lt;i class=&#34;fa-solid fa-check&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/libgcrypt/&#34;&gt;Libgcrypt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.8.10 (LTS)&lt;/td&gt;
&lt;td&gt;2023-01-05&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span&gt;&lt;i class=&#34;fa-solid fa-check&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/libgcrypt/&#34;&gt;Libgcrypt&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.10.2&lt;/td&gt;
&lt;td&gt;2023-04-06&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span&gt;&lt;i class=&#34;fa-solid fa-check&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/libassuan/&#34;&gt;Libassuan&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2.5.5&lt;/td&gt;
&lt;td&gt;2021-03-22&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/libksba/&#34;&gt;Libksba&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.6.3&lt;/td&gt;
&lt;td&gt;2022-12-06&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/npth/&#34;&gt;nPth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.6&lt;/td&gt;
&lt;td&gt;2018-07-16&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/ntbtls/&#34;&gt;ntbTLS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.3.1&lt;/td&gt;
&lt;td&gt;2022-04-07&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/&#34;&gt;GnuPG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2.2.41 (LTS)&lt;/td&gt;
&lt;td&gt;2022-12-09&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://gnupg.org/software/&#34;&gt;GnuPG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2.4.1&lt;/td&gt;
&lt;td&gt;2023-04-28&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span&gt;&lt;i class=&#34;fa-solid fa-check&#34;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;現在 &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; には 2.2 系と 2.4 系があり&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;， 2.4 系では AEAD (Authenticated Encryption with Associated Data) 等 &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; で検討されている機能が実装されている。
2.2 系は 2.4 系のサブセットという位置づけで，少なくとも2024年末まではサポートが続けられる予定である。&lt;/p&gt;
&lt;p&gt;別記事でも書いたが，どうも &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; は真面目に &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のメンテナンスをやる気がないようである。
なので，せっかく GW で時間に余裕があるし，近々自前でビルドを行おうかと考えている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.procustodibus.com/blog/2023/02/gpg-2-4-on-ubuntu-22-04/&#34;&gt;Installing GnuPG 2.4 on Ubuntu 22.04 | Pro Custodibus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/iquiw/pinentry-w32-ncg-binary&#34;&gt;iquiw/pinentry-w32-ncg-binary: pinentry-w32, no characters garbled&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;厳密には1.4系もあるが，これは legacy 版と位置付けられており，よほどのバグか脆弱性がない限りは更新されない。もし今だに1.4系（あるいは既にサポートされていない2.0/2.1系）を使っているのなら2.2系以降にアップグレードすることを強くお勧めする。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
