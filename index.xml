<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2019-07-10:/</id>
	<updated>2019-07-10T12:35:19+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>GnuPG 2.2.17 リリース： 公開鍵サーバ・アクセスに関する過激な変更あり</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/07/gnupg-2_2_17-is-released/" />
		<id>tag:text.Baldanders.info,2019-07-10:/release/2019/07/gnupg-2_2_17-is-released/</id>
		<published>2019-07-10T12:29:53+00:00</published>
		<updated>2019-07-10T12:35:19+00:00</updated>
		<summary>今回の変更で公開鍵サーバ上の公開鍵について付帯する電子署名は（自己署名を除いて）捨てられることになった。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;くっそー。
Gmail の野郎が &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; からのアナウンスを迷惑メールとして処理してくれやがったので気づくのが遅れた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 のリリースである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2019q3/000439.html&#34;&gt;[Announce] GnuPG 2.2.17 released to mitigate attacks on keyservers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先日紹介した「&lt;a href=&#34;https://text.baldanders.info/remark/2019/07/openpgp-certificate-flooding/&#34;&gt;OpenPGP 公開鍵サーバにおける公開鍵の汚染問題&lt;/a&gt;」を受けて公開鍵サーバからのインポートをかなり制限することにしたようだ。&lt;/p&gt;

&lt;p&gt;詳細はこちら。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;gpg: Ignore all key-signatures received from keyservers.  This change is required to mitigate a DoS due to keys flooded with faked key-signatures.  The old behaviour can be achieved by adding &lt;code&gt;keyserver-options no-self-sigs-only,no-import-clean&lt;/code&gt; to your &lt;code&gt;gpg.conf&lt;/code&gt;.  [#4607]&lt;/li&gt;
&lt;li&gt;gpg: If an imported keyblocks is too large to be stored in the keybox (&lt;code&gt;pubring.kbx&lt;/code&gt;) do not error out but fallback to an import using the options &amp;quot;&lt;code&gt;self-sigs-only,import-clean&lt;/code&gt;&amp;quot;.  [#4591]&lt;/li&gt;
&lt;li&gt;gpg: New command &lt;code&gt;--locate-external-key&lt;/code&gt; which can be used to refresh keys from the Web Key Directory or via other methods configured with &lt;code&gt;--auto-key-locate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;gpg: New import option &amp;quot;&lt;code&gt;self-sigs-only&lt;/code&gt;&amp;quot;.&lt;/li&gt;
&lt;li&gt;gpg: In &lt;code&gt;--auto-key-retrieve&lt;/code&gt; prefer WKD over keyservers.  [#4595]&lt;/li&gt;
&lt;li&gt;dirmngr: Support the &amp;quot;&lt;code&gt;openpgpkey&lt;/code&gt;&amp;quot; subdomain feature from &lt;code&gt;draft-koch-openpgp-webkey-service-07&lt;/code&gt;. [#4590].&lt;/li&gt;
&lt;li&gt;dirmngr: Add an exception for the &amp;quot;&lt;code&gt;openpgpkey&lt;/code&gt;&amp;quot; subdomain to the CSRF protection.  [#4603]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix endless loop due to http errors 503 and 504.  [#4600]&lt;/li&gt;
&lt;li&gt;dirmngr: Fix TLS bug during redirection of HKP requests.  [#4566]&lt;/li&gt;
&lt;li&gt;gpgconf: Fix a race condition when killing components.  [#4577]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Release-info: &lt;a href=&#34;https://dev.gnupg.org/T4606&#34;&gt;https://dev.gnupg.org/T4606&lt;/a&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2019q3/000439.html&#34;&gt;GnuPG 2.2.17 released to mitigate attacks on keyservers&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;今回の変更で公開鍵サーバ上の公開鍵について付帯する電子署名は（自己署名を除いて）捨てられることになった。
以前の動作に戻したければ &lt;code&gt;gpg.conf&lt;/code&gt; に以下のオプションを追加する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;keyserver-options no-self-sigs-only,no-import-clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しかし現時点でこれはおすすめできない。&lt;/p&gt;

&lt;p&gt;また公開鍵のインポートで &lt;code&gt;--self-sigs-only&lt;/code&gt; オプションが使えるようだ。
状況に応じて使い分けるといいだろう。&lt;/p&gt;

&lt;p&gt;ちなみに拙作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; を使って，公開鍵をインポートする前に鍵の構成をチェックできる。
v0.6.0 から公開鍵サーバ上の公開鍵を直接チェックできるようにしたので上手く使っていただけるとありがたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gpgpdump-v0_6_0-is-released/&#34;&gt;gpgpdump v0.6.0 をリリースした&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;後半の WKD (Web Key Directory) は 2019-07-10 現在ドラフト08が出ている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-koch-openpgp-webkey-service-07&#34;&gt;OpenPGP Web Key Directory draft-koch-openpgp-webkey-service-07&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/draft-koch-openpgp-webkey-service-08&#34;&gt;OpenPGP Web Key Directory draft-koch-openpgp-webkey-service-08&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回の一連を受けて標準化と実装が早まるかもしれない。
私もちょっと検討してみようかな。
OpenPGP のメーリングリストでも議論が行われているんだけどスルーしてたんだよなぁ。&lt;/p&gt;

&lt;p&gt;さて &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; が今回のバージョンをちゃんとリリースしてくれるといいんだけど。
しないのなら本気で私的ビルドを&lt;ruby&gt;&lt;rb&gt;検討&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;どげんか&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;せんといけんかもしれん。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B015643CPE&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go 1.12.7 がリリースされた</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/07/go-1_12_7-is-released/" />
		<id>tag:text.Baldanders.info,2019-07-09:/release/2019/07/go-1_12_7-is-released/</id>
		<published>2019-07-09T11:23:45+00:00</published>
		<updated>2019-07-09T13:29:14+00:00</updated>
		<summary>今回もセキュリティ・アップデートはなし。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.12.7 がリリースされた。
セキュリティ・アップデートはなし。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/-JidGVRIVEc&#34;&gt;Go 1.12.7 and Go 1.11.12 are released - Google Group&lt;/a&gt;&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;go1.12.7 (released 2019/07/08) includes fixes to cgo, the compiler, and the linker. See the &lt;a href=&#34;https://github.com/golang/go/issues?q=milestone%3AGo1.12.7&#34;&gt;Go 1.12.7 milestone&lt;/a&gt; on our issue tracker for details.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.12.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;さらっと書いてるが&lt;a href=&#34;https://github.com/golang/go/issues?q=milestone%3AGo1.12.7&#34;&gt;マイルストーン&lt;/a&gt;を見ると結構ヤバげな内容なんだよねぇ。&lt;/p&gt;

&lt;p&gt;例によって &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT が提供する &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラは2世代も古くて使いものにならないため&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gosup1&#34;&gt;&lt;a href=&#34;#fn:gosup1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，&lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Downloads - The Go Programming Language&#34;&gt;ダウンロードページ&lt;/a&gt;から &lt;a href=&#34;https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz&#34;&gt;&lt;code&gt;go1.12.7.linux-amd64.tar.gz&lt;/code&gt;&lt;/a&gt; を取ってきて任意の場所に展開する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/src
$ sudo curl &amp;#34;https://dl.google.com/go/go1.12.7.linux-amd64.tar.gz&amp;#34; -O
$ cd ..
$ sudo unlink go # 以前の Go が入っている場合
$ sudo tar xvf src/go1.12.7.linux-amd64.tar.gz
$ sudo mv go go1.12.7
$ sudo ln -s go1.12.7 go
$ go version # /usr/local/go/bin にパスが通っている場合
go version go1.12.7 linux/amd64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ほい。
ひと仕事終わり。&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:gosup1&#34;&gt;提供される &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラのサポートは1世代前まで。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gosup1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>7iD リスク</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/07/7id-risk/" />
		<id>tag:text.Baldanders.info,2019-07-07:/remark/2019/07/7id-risk/</id>
		<published>2019-07-07T07:26:46+00:00</published>
		<updated>2019-07-07T07:45:03+00:00</updated>
		<summary>現金決済であれキャッシュレス決済であれ，基盤となるシステムを信用するからこそ成り立つものであり，信用がなくなれば「そこで試合終了」なんだけど。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;7pay の件は Twitter の TL に流れてくる情報を中心に眺めていたが，2010年代も終わろうかという頃に「サイバーノーガード戦法」とかあまりに馬鹿すぎて他山の石にもならないようだ。
リンクは以下の2つだけ張っておけば十分だろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/07/04/065925&#34;&gt;7payの不正利用についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/07/05/055548&#34;&gt;7payを使った不正購入事案についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;被害にあった方々にはお見舞い申し上げるとともに（被害額の返金だけではなく）賠償請求を行ってきちんとペナルティを支払わせることを強くお勧めする。
向こうは「謝罪して返金すりゃいいんだろ」って感じだし。
バブル崩壊以降，ホンマに「謝罪」が安くなったよなぁ。
まぁお金が絡む話に謝罪とか，それこそ一銭の価値もない。&lt;/p&gt;

&lt;p&gt;今回の件は脆弱性（vulnerability）というより設計上の欠陥（defect）と位置づけるのが適切だろう。
そうなると，その認証基盤である &lt;a href=&#34;https://www.omni7.jp/&#34;&gt;7iD（旧 omni7）&lt;/a&gt;ってどうなん？ という話になる。&lt;/p&gt;

&lt;p&gt;で，&lt;a href=&#34;https://www.omni7.jp/&#34;&gt;サイトを覗いてみた&lt;/a&gt;ら提携企業の多さに「これヤバくね？」って感じなのだが，それらの企業は今回の件をどう思っているのかね。
現金決済であれキャッシュレス決済であれ，基盤となるシステムを信用するからこそ成り立つものであり，信用がなくなれば「&lt;a href=&#34;https://dic.nicovideo.jp/a/%E3%81%82%E3%81%8D%E3%82%89%E3%82%81%E3%81%9F%E3%82%89%E3%81%9D%E3%81%93%E3%81%A7%E8%A9%A6%E5%90%88%E7%B5%82%E4%BA%86%E3%81%A0%E3%82%88&#34;&gt;そこで試合終了&lt;/a&gt;」なんだけど。&lt;/p&gt;

&lt;p&gt;今後も情報を集めるとしたら，その辺を重点的に見る必要があるかもなぁ。&lt;/p&gt;

&lt;p&gt;そもそも「QR決済」以前に「QRコード」そのものを信用していないので&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:qr1&#34;&gt;&lt;a href=&#34;#fn:qr1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;，「QRコード」が絡むサービスは極力使わないようにしているのだが，今後もしばらくその状態は続きそうである。&lt;/p&gt;

&lt;p&gt;あと Twitter 眺めてて気になったのだが「2段階認証（2-step authentication）」と「2要素認証（2-factor authentication）」は意味が違うし，昔は「2段階認証」と称してパスワードを2つ登録させる馬鹿なサービスもあって安全性に対する印象が悪いのだけど，みんながみんな「2段階認証」を連呼するのはその辺も踏まえての話なのかね。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/blog/000470/&#34;&gt;ひさしぶり「サイバーノーガード戦法」 | Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E4%BF%A1%E9%A0%BC%E3%81%A8%E8%A3%8F%E5%88%87%E3%82%8A%E3%81%AE%E7%A4%BE%E4%BC%9A-%E3%83%96%E3%83%AB%E3%83%BC%E3%82%B9%E3%83%BB%E3%82%B7%E3%83%A5%E3%83%8A%E3%82%A4%E3%82%A2%E3%83%BC/dp/4757143044?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4757143044&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/413qoSjODUL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E4%BF%A1%E9%A0%BC%E3%81%A8%E8%A3%8F%E5%88%87%E3%82%8A%E3%81%AE%E7%A4%BE%E4%BC%9A-%E3%83%96%E3%83%AB%E3%83%BC%E3%82%B9%E3%83%BB%E3%82%B7%E3%83%A5%E3%83%8A%E3%82%A4%E3%82%A2%E3%83%BC/dp/4757143044?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4757143044&#34;&gt;信頼と裏切りの社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー&lt;/dd&gt;
    &lt;dd&gt;山形 浩生 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;エヌティティ出版 2013-12-24&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4757143044, EAN: 9784757143043&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;社会における「信頼」とは。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:qr1&#34;&gt;だってQRコードのあの図形を見ても何についての情報かすら分からないし（human-readable でない），汎用のスキャナを使って復号した情報を確認してから使うのならまだしも，最近のQRコードを使ったサービスはそれすら省いてる感じだし，使いたくない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:qr1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>2019-07-07 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2019/07/07-bookmarks/" />
		<id>tag:text.Baldanders.info,2019-07-07:/bookmarks/2019/07/07-bookmarks/</id>
		<published>2019-07-07T05:31:35+00:00</published>
		<updated>2019-07-10T03:11:56+00:00</updated>
		<summary>「The Document Foundation announces LibreOffice 6.2.5」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;h2 id=&#34;toc_0&#34;&gt;リリース情報&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2019/07/04/tdf-announces-libreoffice-625/&#34;&gt;The Document Foundation announces LibreOffice 6.2.5 - The Document Foundation Blog&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1194651.html&#34;&gt;フリーのオフィス統合環境「LibreOffice 6.2.5」が公開 ～100件超の問題を修正 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/06/30/181404&#34;&gt;日本旅行の内々定通知誤送信についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/01/2019-06-27-police-body-cam-maker-axon-says-no-to-facial-recognition-for-now/&#34;&gt;警察用ボディーカメラのメーカーが顔認識を「使用しない」ことを決断  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/07/yubico_security.html&#34;&gt;Yubico Security Keys with a Crypto Flaw - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35139259/&#34;&gt;米政府高官ら、エンドツーエンド暗号化の禁止を検討か - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/07/google_releases_1.html&#34;&gt;Google Releases Basic Homomorphic Encryption Tool - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/07/04/065925&#34;&gt;7payの不正利用についてまとめてみた - piyolog&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/07/05/055548&#34;&gt;7payを使った不正購入事案についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/1907/04/news113.html&#34;&gt;「脆弱性は見つからなかった」　セブン・ペイ緊急会見の“甘すぎる認識” (1/2) - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/05/7pay-unauthorized-access/&#34;&gt;【更新あり】7pay以外は大丈夫か？主要Payログイン時の安全性まとめ  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/mobile/articles/1907/04/news101.html&#34;&gt;「7pay」不正利用は全額補償へ　全チャージ＆新規登録停止も、サービス自体は継続 - ITmedia Mobile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://comemo.nikkei.com/n/n3b3fb417e637&#34;&gt;7Payの失態で露呈した本当は怖いIDの話｜楠 正憲（国際大学GLOCOM 客員研究員）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35139554/&#34;&gt;「ガイドラインを遵守していない」--経産省、7pay問題でセキュリティ強化を事業者に要請 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/chinese-border-guards-are-putting-a-surveillance-app-on-tourists-phones/&#34;&gt;MIT Tech Review: 新疆の旅行客に中国官製スパイウェア、日本のバンドも監視対象に&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/05/2019-07-03-amazon-responds-to-a-u-s-senators-inquiry-confirms-alexa-voice-records-are-kept-indefinitely/&#34;&gt;Alexaの音声記録は無期限に保存するとアマゾンが米議員に回答  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139547/&#34;&gt;Amazonの偽SMSに注意--フィッシングサイトへ誘導 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/copyright/2511&#34;&gt;DNS・SNIの暗号化が海賊版サイトブロッキングを&amp;quot;ますます&amp;quot;困難にする | P2Pとかその辺のお話R&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/06/2019-07-05-isp-group-mozilla-internet-villain-dns-privacy/&#34;&gt;プロバイダーの業界団体がMozillaをインターネットの悪党と非難  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/07/applied_cryptog_2.html&#34;&gt;Applied Cryptography is Banned in Oregon Prisons - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;天文関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/nasas-mars-rover-has-spotted-a-huge-methane-spike-could-it-be-life/&#34;&gt;MIT Tech Review: 火星で高濃度メタン検出、生命存在の可能性は？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/149547/all-the-new-mars-missions-being-launched-in-2020/&#34;&gt;MIT Tech Review: 2020年に火星を目指す、探査ミッション4つ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/01/2019-06-27-nasas-dragonfly-will-fly-across-the-surface-of-titan-saturns-ocean-moon/&#34;&gt;NASAのDragonflyが海のある土星の月「タイタン」の探査に向かう  |  TechCrunch Japan&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://scienceportal.jst.go.jp/news/newsflash_review/newsflash/2019/07/20190703_01.html&#34;&gt;2019年7月3日ニュース「大気がある土星の衛星タイタンでドローンを飛ばして探査 NASAがユニークな計画」 | SciencePortal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.planetary.org/explore/projects/lightsail-solar-sailing/lightsail-mission-control.html&#34;&gt;LightSail 2 Mission Control | The Planetary Society&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/06/2019-07-05-new-lightsail-2-mission-dashboard-lets-anyone-check-in-on-solar-sail-spacecrafts-progress/&#34;&gt;太陽帆走に挑戦中のLightSail 2が見られるダッシュボード  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cimss.ssec.wisc.edu/goes/blog/archives/33670&#34;&gt;Solar eclipse in the Southern Hemisphere «  CIMSS Satellite Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/study/subaru20/&#34;&gt;すばる望遠鏡20年の観測成果｜イントロダクション&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;知財関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/copyright/2006&#34;&gt;中国で放映延期となったゲーム・オブ・スローンズ最終話、「無検閲」の海賊版が広まる | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2019/07/02/microsoft-ebook-apocalypse-drm/&#34;&gt;購入した電子書籍が“消滅”する：マイクロソフトの撤退で、再び「DRM」の問題点が浮き彫りに｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/stranger-things-leaks-suggest-netflix-4k-may-have-been-breached-190705/&#34;&gt;&amp;quot;Stranger Things&amp;quot; Leaks Suggest Netflix 4K May Have Been Breached - TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/activism/2592&#34;&gt;チェコ海賊党議員、欧州議会の副議長に選出される | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/mpaa-wants-u-s-govt-to-prosecute-streaming-piracy-operations-190706/&#34;&gt;MPAA Wants U.S. Govt. to Prosecute Streaming Piracy Operations - TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;その他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/29/2019-06-28-smartphone-users-are-upgrading-less-frequently-will-5g-help/&#34;&gt;5G待ち？最近はスマホをあまり買い替えないという調査結果  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.salesanalytics.co.jp/column/no00041/&#34;&gt;第41話｜OODAは先進的で、PDCAサイクルは遅れている？　と聞かれ違うんだけど…… と思ったわけ – セールスアナリティクス&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B07ND6QTN4/baldandersinf-22/&#34;&gt;Amazon.co.jp： ＯＯＤＡ　ＬＯＯＰ（ウーダループ）―次世代の最強組織に進化する意思決定スキル eBook: チェット リチャーズ, 原田 勉: Kindleストア&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/freedom-of-speech/2399&#34;&gt;プライド月間もそうでないときも、プラットフォームは自社ポリシーがLGBTQ+ユーザに及ぼす影響を考えねばならない | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/01/2019-07-01-japan-will-restrict-the-export-of-some-materials-used-in-smartphones-and-chips-to-south-korea/&#34;&gt;経産省がスマホやチップ製造に必要な材料の対韓輸出を規制へ  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139264/&#34;&gt;残業に積極的な中国ネット業界の新卒社員--長時間勤務「996問題」の実態とは - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/19/raspberry_piwebraspberry_pi_4.html&#34;&gt;Raspberry Pi財団、Webサイトを「Raspberry Pi 4クラスタ」で運用中 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139315/&#34;&gt;ランサムウェアに屈した地方自治体がIT担当職員を解雇--フロリダ州レイク・シティ - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/enterprise/articles/1907/02/news037.html&#34;&gt;「なんで設計段階で考えなかったの？」と言われるのは、いつだって完成後 (1/3) - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2019/07/01/electric-buses-havent-taken-over-world/&#34;&gt;クリーンなはずの「電気バス」は、なぜ世界を席巻しないのか？ その理由を考える｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.labot.jp/entry/2019/07/01/183204&#34;&gt;【永久保存版】Gitのあらゆるトラブルが解決する神ノウハウ集を翻訳した - LABOT 機械学習ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/149812/the-one-number-you-need-to-know-about-climate-change/&#34;&gt;MIT Tech Review: 気候変動対策のカギ 「炭素の社会的費用」が浮き彫りにする不都合な真実&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/05/2019-07-04-the-cassette-player-finally-goes-bluetooth/&#34;&gt;カセットプレーヤーがついにBluetoothになった  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/07/06/2019-07-05-mozilla-readies-launch-of-news-subscription-service/&#34;&gt;Mozillaがニュース購読サービスを準備中  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>gpgpdump v0.6.0 をリリースした</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/07/gpgpdump-v0_6_0-is-released/" />
		<id>tag:text.Baldanders.info,2019-07-06:/release/2019/07/gpgpdump-v0_6_0-is-released/</id>
		<published>2019-07-06T12:41:07+00:00</published>
		<updated>2019-07-06T12:49:03+00:00</updated>
		<summary>このバージョンから OpenPGP 公開鍵サーバ上の公開鍵を直接検査できるよう HKP モードを作った。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; パケットの内容を視覚化する &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の v0.6.0 をリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump/releases/tag/v0.6.0&#34;&gt;Release v0.6.0 · spiegel-im-spiegel/gpgpdump · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「&lt;a href=&#34;https://text.baldanders.info/remark/2019/07/openpgp-certificate-flooding/&#34;&gt;OpenPGP 公開鍵サーバにおける公開鍵の汚染問題&lt;/a&gt;」を受け， &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵を直接検査できるよう HKP アクセスモードを作った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump hkp -h
Dumps from OpenPGP key server

Usage:
  gpgpdump hkp [flags] &amp;lt;user id&amp;gt;

Flags:
  -h, --help               help for hkp
      --keyserver string   OpenPGP key server (default &amp;#34;keys.gnupg.net&amp;#34;)
      --port int           port number of OpenPGP key server (default 11371)
      --proxy string       URL of proxy server
      --raw                output raw text from OpenPGP key server
      --secure             enable HKP over HTTPS

Global Flags:
  -a, --armor        accepts ASCII input only
      --debug        for debug
      --indent int   indent size for output string
  -i, --int          dumps multi-precision integers
  -j, --json         output with JSON format
  -l, --literal      dumps literal packets (tag 11)
  -m, --marker       dumps marker packets (tag 10)
  -p, --private      dumps private packets (tag 60-63)
  -t, --toml         output with TOML format
  -u, --utc          output with UTC time&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HKP (HTTP Keyserver Protocol) に対応する公開鍵サーバであれば公開鍵パケットをダウンロードして解析できる。
たとえば &lt;code&gt;0x491F9BDF0F7BD4AD&lt;/code&gt; の鍵を調べたいなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump hkp 0x491F9BDF0F7BD4AD
Public-Key Packet (tag 6) (397 bytes)
    Version: 4 (current)
    Public key creation time: 2008-10-30T02:50:43Z
        49 09 21 03
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (3072 bits)
    RSA public encryption exponent e (17 bits)
User ID Packet (tag 13) (41 bytes)
    User ID: BuZz spacedout   &amp;lt;satoshin@vistomail.com&amp;gt;
Signature Packet (tag 2) (447 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (41 bytes)
        Signature Creation Time (sub 2): 2008-10-30T02:50:43Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 4016.9231134259257 days after (2019-10-30T01:00:00Z)
        Preferred Symmetric Algorithms (sub 11) (6 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
            Symmetric Algorithm: IDEA (sym 1)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x491f9bdf0f7bd4ad
    Hash left 2 bytes
        f5 97
    RSA signature value m^d mod n (3071 bits)
User ID Packet (tag 13) (41 bytes)
    User ID: Satoshi Nakamoto &amp;lt;satoshin@vistomail.com&amp;gt;
Signature Packet (tag 2) (447 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (41 bytes)
        Signature Creation Time (sub 2): 2008-10-30T02:50:43Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 4016.9231134259257 days after
        Preferred Symmetric Algorithms (sub 11) (6 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
            Symmetric Algorithm: IDEA (sym 1)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x491f9bdf0f7bd4ad
    Hash left 2 bytes
        f5 97
    RSA signature value m^d mod n (3071 bits)
Public-Subkey Packet (tag 14) (397 bytes)
    Version: 4 (current)
    Public key creation time: 2008-10-30T02:50:43Z
        49 09 21 03
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (3072 bits)
    RSA public encryption exponent e (17 bits)
Signature Packet (tag 2) (421 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (15 bytes)
        Signature Creation Time (sub 2): 2008-10-30T02:50:43Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
        Key Expiration Time (sub 9): 4016.9231134259257 days after (2019-10-30T01:00:00Z)
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x491f9bdf0f7bd4ad
    Hash left 2 bytes
        57 48
    RSA signature value m^d mod n (3072 bits)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな感じにできる。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;code&gt;--raw&lt;/code&gt; オプションを付けるとダウンロードしたテキストをそのまま表示する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump hkp 0x491F9BDF0F7BD4AD --raw
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;
&amp;lt;!DOCTYPE html PUBLIC &amp;#34;-//W3C//DTD XHTML 1.0 Strict//EN&amp;#34; &amp;#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;#34; &amp;gt;
&amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Public Key Server -- Get &amp;#34;0x491f9bdf0f7bd4ad &amp;#34;&amp;lt;/title&amp;gt;
&amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html;charset=utf-8&amp;#34; /&amp;gt;
&amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt;
/*&amp;lt;![CDATA[*/
 .uid { color: green; text-decoration: underline; }
 .warn { color: red; font-weight: bold; }
/*]]&amp;gt;*/
&amp;lt;/style&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Public Key Server -- Get &amp;#34;0x491f9bdf0f7bd4ad &amp;#34;&amp;lt;/h1&amp;gt;
&amp;lt;pre&amp;gt;
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: SKS 1.1.6
Comment: Hostname: pgpkeys.uk

mQGNBEkJIQMBDADjtKw8NGu8XpU9WgxfiF5O9AkmBO7D9sBeIuNR4ULFLbzdD6MRQOyRYi9G
OxsSHohRgZpG146slEpASDdD//TJCH72yTtModYKWI7z6WWgXSNQvwKb+q2G9SeJ2N+2t1Bk
FuM+WOGstGTQiEB+Oj6OlJPI9I3YoE8T2VC8m5BrHdIi2W4R1vbuCGry0To7L9MygtuxmGfl
qrUiG0teiKNy0mpZaMDXJHAyLLaamHj25HXcHhq8LyyQHCE6iCcXY8iD/Dma98+ZcEEEQDfO
rmK7HVSU/Rh29VNJ2fgnJM+hhsmJnIPpxt6NIwhtY66U0lKWozOHnJSc1xIMv562NMxQUs3P
Vzrqyd5I/3gSnU+dhoHTSkbjNKWvAhIpEHNNYQ/4lub5bEblGhtvVYp67DUgjYrQmxscK3da
svXhegiCRrQ2qSTqH160NMxe/ycF/KlPeRlnPoWmDEEAz4tWxgZOMK/bUyleS5MaU128J1hY
SS9gGME0COycN/2ygCEQOm8AEQEAAbQpQnVaeiBzcGFjZWRvdXQgICA8c2F0b3NoaW5Admlz
dG9tYWlsLmNvbT6JAb8EEwECACkFAkkJIQMCGwMFCRSvv40HCwkIBwMCAQYVCAIJCgsEFgID
AQIeAQIXgAAKCRBJH5vfD3vUrfWXC/9arLWyt3zRKU7RMr8sGtD2Uh2gBsk2okqTgdWF+wn3
z8IPLER7zQ/sLPklTHtwi0lNzY7DS+w5NJTPSF4NbqcM8UOXOrQvqCatlLNHftbOuPCNoJpI
SxEAQygkJIJcsBpmGxJadnnjDZNkAFHJEY8PPHyxm9CBpI2vowCifrEAoYB5lV39YEbY9ur8
mIdJfsvW5HhKEUydvJCQn8Pm1i69MHB1Pv4ZLzbf/3iiH+/2A9Ug5upwB4+QJPBE7mC+88xn
YPWRNVCuGF6Bny0Q+b+MPvnD9rFxCzyQUlPhM229cDnVjwDRWSapEVvC2VDAki93x9fzOOiE
96sINhal0atie/9jwkMqAMIlgWCoVBX+4IrION2k0N562JSzwv1+TfpIURLu1dNuxK20uVWT
E1ltVJqkGVyK4JUKluXeDJORr9pDvkr2GLgLDCx/9ynZK/cR54Tt78d0RfYKzwPnTzTU0V5f
5lfHfHwhA4kuoGMdp9a/dmomq71RZ1SfQgeiPae0KVNhdG9zaGkgTmFrYW1vdG8gPHNhdG9z
aGluQHZpc3RvbWFpbC5jb20+iQG/BBMBAgApBQJJCSEDAhsDBQkUr7+NBwsJCAcDAgEGFQgC
CQoLBBYCAwECHgECF4AACgkQSR+b3w971K31lwv/Wqy1srd80SlO0TK/LBrQ9lIdoAbJNqJK
k4HVhfsJ98/CDyxEe80P7Cz5JUx7cItJTc2Ow0vsOTSUz0heDW6nDPFDlzq0L6gmrZSzR37W
zrjwjaCaSEsRAEMoJCSCXLAaZhsSWnZ54w2TZABRyRGPDzx8sZvQgaSNr6MAon6xAKGAeZVd
/WBG2Pbq/JiHSX7L1uR4ShFMnbyQkJ/D5tYuvTBwdT7+GS823/94oh/v9gPVIObqcAePkCTw
RO5gvvPMZ2D1kTVQrhhegZ8tEPm/jD75w/axcQs8kFJT4TNtvXA51Y8A0VkmqRFbwtlQwJIv
d8fX8zjohPerCDYWpdGrYnv/Y8JDKgDCJYFgqFQV/uCKyDjdpNDeetiUs8L9fk36SFES7tXT
bsSttLlVkxNZbVSapBlciuCVCpbl3gyTka/aQ75K9hi4Cwwsf/cp2Sv3EeeE7e/HdEX2Cs8D
50801NFeX+ZXx3x8IQOJLqBjHafWv3ZqJqu9UWdUn0IHoj2nuQGNBEkJIQMBDADCL3vhbxGE
dtVn1jyzEajYm2Cto1JKGqGVCBU0v3kPYDfhdlHGjeJ3HYfWZABUgeYSzUPVGrS3++j4sxxS
m3peNg8nybmo8aMwrGHJmeP+xerN29Pxra1TNxz/nndM1wZYN+hHA+zrIQiyYQ9IiUROvRSu
z5CSTRYh5P0JdfezuaTFktRMMINizBkSOKNM2Kz/O4e0J7FIIC5oM/uIthAMuwYuivDTR618
nCo0KObuyd4Eak7UxvYlA8L3Da/Vt2Q2zgtq9kmRZNoChfzljBRQb+z4xI/13OV7RmIHjadG
nC/ZJd8OXyln+SWbBPpiJmQ39vZOmxAY4z8M2wkto7ILtlUyL+3DSUjXScYFJVq8VDW55k5W
vKIdBjipXONi9/55LZnJPKhlt5Ip/azFQnZ5ZcVDFK6db257wvLojLqBEHNFhuVuYz3ANmPe
jlsjU4wJi3nNfjcHAzBODzhdvg5kmdaiSQ/mhGE2gzzW7e9jyrNrdxXp8tiARwB4Ke3F/rkA
EQEAAYkBpQQYAQIADwUCSQkhAwIbDAUJFK+/jQAKCRBJH5vfD3vUrVdIDACaghW/bj0njw64
ar1JqtG7QDsTcakTZHIuN62X3ewLqUO/3t2bWgC7YMZqX4IA3Iqz3Z0l2rLYbISFx0Ur19a+
xAA8uUhe400UfVLyPLNlvAL6Qzw3QGokOF45bKuX8Tjd/t0prJF3IBcbHih/bH6tAzLQEj8A
3p9/vkW5pezmQqyemaJaEEE75fDGmgiB/nxGPfL8mS4R2LmgUadqquSqhWXk0S9U9Y2z+vFU
LBFt4/M57YWOzryLO/MOPVDFUe604zCXy7s6LVRdjRI8V0h/WzskmEFE9UBwNDpM6jExl9xo
8M1M2ICOewrxE33HoF0dbbW+QFIH2mCWXt8bzfdOvhMTYzaQWOHvYIKPLZqFVDfFC7TBGdY4
mNx2/kxQ5GARUcd1zKI6RoKD60mq1KciTJdJSp5xdCNNfatGgiSFEcYRn8NsWr9nT+5H/yjz
VVFPo9kHgEuxnT8TTeOj189tiLItQUBx/3ZYkAjhIt/hYpo9wif7KSgqjlF6K1n7ZVA=
=LSEt
-----END PGP PUBLIC KEY BLOCK-----
&amp;lt;/pre&amp;gt;
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵の事前チェックがしやすくなるだろう。&lt;/p&gt;

&lt;p&gt;なお，今回の機能追加により既存の機能を若干変更した。
以前ならファイルを指定して調べる場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump sig.asc
Signature Packet (tag 2) (63 bytes)
    Version: 3 (old)
    Hashed material (5 bytes)
        Signiture Type: Signature of a binary document (0x00)
        Signature creation time: 1998-11-27T09:35:42Z
    Key ID: 0xa79778e247b63037
    Public-key Algorithm: DSA (Digital Signature Algorithm) (pub 17)
    Hash Algorithm: SHA-1 (hash 2)
    Hash left 2 bytes
        27 ae
    DSA value r (159 bits)
    DSA value s (159 bits)
Literal Data Packet (tag 11) (45 bytes)
    Literal data format: b (binary)
    File name: hoge
    Modification time of a file: 1975-04-26T19:41:04Z
    Literal data (35 bytes)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でよかったが，このバージョンからは &lt;code&gt;-f&lt;/code&gt; オプションでファイルを指定する必要がある。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump -f sig.asc
Signature Packet (tag 2) (63 bytes)
    Version: 3 (old)
    Hashed material (5 bytes)
        Signiture Type: Signature of a binary document (0x00)
        Signature creation time: 1998-11-27T09:35:42Z
    Key ID: 0xa79778e247b63037
    Public-key Algorithm: DSA (Digital Signature Algorithm) (pub 17)
    Hash Algorithm: SHA-1 (hash 2)
    Hash left 2 bytes
        27 ae
    DSA value r (159 bits)
    DSA value s (159 bits)
Literal Data Packet (tag 11) (45 bytes)
    Literal data format: b (binary)
    File name: hoge
    Modification time of a file: 1975-04-26T19:41:04Z
    Literal data (35 bytes)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;いや，マジすんません。&lt;/p&gt;

&lt;p&gt;パイプを使う場合は今までどおり&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cat sig.asc | gpgpdump
Signature Packet (tag 2) (63 bytes)
    Version: 3 (old)
    Hashed material (5 bytes)
        Signiture Type: Signature of a binary document (0x00)
        Signature creation time: 1998-11-27T09:35:42Z
    Key ID: 0xa79778e247b63037
    Public-key Algorithm: DSA (Digital Signature Algorithm) (pub 17)
    Hash Algorithm: SHA-1 (hash 2)
    Hash left 2 bytes
        27 ae
    DSA value r (159 bits)
    DSA value s (159 bits)
Literal Data Packet (tag 11) (45 bytes)
    Literal data format: b (binary)
    File name: hoge
    Modification time of a file: 1975-04-26T19:41:04Z
    Literal data (35 bytes)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でオッケ。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/id/draft-shaw-openpgp-hkp-00.txt&#34;&gt;The OpenPGP HTTP Keyserver Protocol (HKP) draft-shaw-openpgp-hkp-00.txt&lt;/a&gt; : HKP の元ネタになっている（らしい）ドラフト案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://people.spodhuis.org/phil.pennock/pgp-keyservers&#34;&gt;PGP HKP Keyservers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ccm.sherry.jp/documents/hkp_protocol.html&#34;&gt;HKPプロトコル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shibukawa.github.io/curl_as_dsl/&#34;&gt;cURL as DSL — cURL as DSL 1.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B015643CPE&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>OpenPGP 公開鍵サーバにおける公開鍵の汚染問題</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/07/openpgp-certificate-flooding/" />
		<id>tag:text.Baldanders.info,2019-07-05:/remark/2019/07/openpgp-certificate-flooding/</id>
		<published>2019-07-05T14:46:33+00:00</published>
		<updated>2019-07-10T12:31:36+00:00</updated>
		<summary>新しい OpenPGP 公開鍵サーバや Autocrypt について調査したほうがいいかしらん。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;7pay のセキュリティ事故があまりにバカすぎるのでブログネタにしてやろうかと思っていたが，個人的にもっと重大な案件が出てきたので，先にこちらの話を書くことにする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139514/&#34;&gt;PGPのSKSキーサーバーネットワークへの証明書ポイズニング--攻撃を受け開発者らが警鐘 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;かなりヤバいというか「ついにやっちゃったか」って感じの話なのだが，記事の後半に書かれている&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;キーサーバーはPGPと、PGPプロトコルにおけるユーザー認証の要となるコンポーネントだ&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139514/&#34;&gt;PGPのSKSキーサーバーネットワークへの証明書ポイズニング--攻撃を受け開発者らが警鐘&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;というのはかなり言い過ぎである。&lt;/p&gt;

&lt;p&gt;というのも，そもそも &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の元祖である &lt;a href=&#34;https://tools.ietf.org/html/rfc1991&#34; title=&#34;RFC 1991 - PGP Message Exchange Formats&#34;&gt;PGP&lt;/a&gt; は必ずしも公開鍵サーバを要件としていたわけではなく（&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4900900028/baldandersinf-22/&#34;&gt;PGP 本&lt;/a&gt;を読めば分かるが，当時はフロッピー運用とか当たり前の時代だった），後継である &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; においてもそのコンセプトが踏襲されているからだ。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の信用モデル（web of trust; 信用の輪）については拙文ながら以下を参考にしてほしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/openpgp-key-management/&#34;&gt;OpenPGP 鍵管理に関する考察&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この信用モデルの下では&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;多くの電子署名が集まっていること&lt;/li&gt;
&lt;li&gt;同じ鍵が永続的に使われ続けていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が鍵の信用を高める条件となっている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:pki1&#34;&gt;&lt;a href=&#34;#fn:pki1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバにおいて鍵や署名の追記しかできないのにはちゃんと理由があるのだ。&lt;/p&gt;

&lt;p&gt;とは言え &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバが鍵運用において大きなウエイトを占めているのは間違いないことで，鍵の所有者が（電子署名や鍵そのものの削除を含めて）制御できないというのはちょっと，いやだいぶ困った事態となっているのも確かである。&lt;/p&gt;

&lt;p&gt;たとえば APT などのパッケージ管理ツールでは，パッケージへの電子署名に &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵を使うが，鍵のインポートの際に公開鍵サーバを利用するようだ。&lt;/p&gt;

&lt;p&gt;この前紹介した &lt;a href=&#34;https://text.baldanders.info/remark/2019/04/mono-in-ubuntu/&#34; title=&#34;Ubuntu に Mono を導入する
&#34;&gt;Mono のインストール&lt;/a&gt;でも&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった感じで鍵サーバから公開鍵をインポートしている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:gpg1&#34;&gt;&lt;a href=&#34;#fn:gpg1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;なので，鍵サーバに登録されている公開鍵が汚染されている（可能性がある）というのは拙いのである。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;回避策1： &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使わない&lt;/h2&gt;

&lt;p&gt;今回のリスクを確実に回避したいのであれば &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使わないのが手っ取り早い。
以下のように，いったんテキストデータとして吐き出して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg -a --export alice@example.com
-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBFofiskBCADjUvPHA3PNscg0K74/Uwxj46+oLsyIy7fYIp/4C4dHejcbbPjx
VFeic9wQ4aQFp3VKjYgONgQrRo/9p40Ei1+PtMAV7D6Oy6dxlV8zyCJcSf74ahpB
B15GyA7v4uvTf0Py+Ujyt241ik0fXeLEuwt7p4SIbgJnQs1Fb+61wo8UcCFOLJO5
An6HjXNgNs6fFoiTad+T4PfaTbRHLfFPkoqmDUKWy40hjWl+Ui0QborXH+PUeUm9
vgHbqZzS0QRDGI7rO9AeJ6LweBkP1A2qbDLyexS/F+WUEcY0b76IQM5XH0txwnnl
uCPYcQfIGWce3US1GWJhChF9s/bMGVXOEJbvABEBAAG0GUFsaWNlIDxhbGljZUBl
eGFtcGxlLmNvbT6JAVQEEwEIAD4CGwMFCwkIBwIGFQgJCgsCBBYCAwECHgECF4AW
IQR5/SuZ88YtLTuFC7yTs1CUdYINXQUCWh+LMAUJA8JnZwAKCRCTs1CUdYINXcKT
B/4tLFaPRe289GcX91yLJ/yPS0JvvJKyZzjpNqLbKHuQHPEqGromMGlP4LcaGdFL
rVZ36W3kVk+75q8JFkld0eRS22vftjz6lA9lyb3W9lU1CayF5s3IsC/Ehj55uaHc
OHnp6rl7zEeIdvca6yV0gwySs3j9VPHy58zNrpN/clHoB4Zozy6vCXFMShyLc/wF
brPySf/5LP/642Uro92M2lbkIvZpDhZCVG7s7Ilz3BzsTTNMPkPd5yvdGa5lHQzK
OmXHaxydOYbEWBgqRGqzEIIoLbEd8KHxJVIVDfcAQCjSWRUjAUSDLpBokGsKoQfp
41NjWwjkIsfyJ2tDUeRPGYRbuQENBFofiskBCACzyYfIB+/ZwJBJXw7WMDlEKdnz
L4abwVpw9rBGAWGXjaC/cu7l0svNilXyTgZNq4uKddJ6aYjs7of0SaBl20I8aj5G
nbw0pG+KkoYhfpZaAZc+bcb+6SprSbAsRhrZ810XNIBUMa8XWsUDn1uv70vGBWBv
keKZZ7FJ4kuQe0nTONmvQ4EwFekV+IXT5LwdgmPWF0QR7cO8jqeb6psHYauktuzZ
2ul4nMLmLLf/m4DwiCAbEdToBXqRA30KshtgBYYQwL1YkWYgknnAdhHyeu6ybJvv
Y57JYzotjFOlnFhtcGITESEWv+pnj0RJUUrlVwLkJhUOKMwL+sbhw0s5+m27ABEB
AAGJATwEGAEIACYCGwwWIQR5/SuZ88YtLTuFC7yTs1CUdYINXQUCWh+LhAUJA8Jn
uwAKCRCTs1CUdYINXXuvB/9IKK3SLgJ6lOc2Vq73rGYsrDqfjYt5rCDXhjIaFRE7
LYmFJcGL5CHJTae438XtAixa+mu6PYG28eknjZs58Cx/bSj9uS6NiLAPCgyTAtvg
ao6usECOm9Y0xf2+ZcZ9Uji+wsCAFmxRC9je0yUErVyuyQRqzNtdqytnszoTzvb9
iOP8sX/YNrjC83BtZ4Vg3fzAu8qvwbObgSbws5M8TBwIKd4WFTjOtSU6F8aioJ1g
mpfd8KGljHkzC0oG8l8fZiTNYqkIMbfyfPpVwsSqsysLKofifFT+mNs79DJdqNFO
HA2W4WzekYmWWmgK7J8kXHYkxUJA6VpSmNAKwUKqXbNV
=hneF
-----END PGP PUBLIC KEY BLOCK-----&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このテキストデータで運用すればいいのだ。&lt;/p&gt;

&lt;p&gt;たとえば私の公開鍵は&lt;a href=&#34;https://baldanders.info/pubkeys/&#34; title=&#34;OpenPGP 公開鍵リスト | Baldanders.info&#34;&gt;本家サイトで公開している&lt;/a&gt;が&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --fetch-keys https://baldanders.info/pubkeys/spiegel.asc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば簡単に鍵束にインポートできる。&lt;/p&gt;

&lt;p&gt;メールの暗号化や署名検証については &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; のような仕組みを使えば鍵サーバを経由せずに鍵のやりとりができるらしい（実はよく知らない）。
ちなみに Thunderbird の &lt;a href=&#34;https://addons.thunderbird.net/thunderbird/addon/enigmail/&#34;&gt;Enigmail&lt;/a&gt; は &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; に対応している。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; についてはちゃんと調べていつか記事にする予定である。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;回避策2： &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵をいきなりインポートしない&lt;/h2&gt;

&lt;p&gt;APT のように &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバを使った鍵運用が必須の場合でも，いきなり鍵束にインポートするのではなく，事前に公開鍵をチェックして問題がないか調べたほうがよさそうである。&lt;/p&gt;

&lt;p&gt;公開鍵をチェックするのであれば &lt;a href=&#34;https://github.com/kazu-yamamoto/pgpdump&#34; title=&#34;kazu-yamamoto/pgpdump: A PGP packet visualizer&#34;&gt;pgpdump&lt;/a&gt; か（手前味噌でナニだが）その &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;版である &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; を使うことをオススメする。&lt;/p&gt;

&lt;p&gt;先ほどの&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;であれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ wget -O - &amp;#34;http://keyserver.ubuntu.com/pks/lookup?search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&amp;amp;op=get&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとすればとすれば Armor テキストでダウンロードできる。
汚染されている公開鍵であればかなり巨大になっているだろうから，ある程度の判断はできそうである。&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;【追記 2019-07-06】 &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; に HKP アクセスモードを追加した&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の v0.6.0 をリリースしたが，このバージョンから HKP アクセスモードを追加した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gpgpdump-v0_6_0-is-released/&#34;&gt;gpgpdump v0.6.0 をリリースした&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この機能を使えば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump hkp --keyserver keyserver.ubuntu.com --port 80 0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
Public-Key Packet (tag 6) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2014-08-04T15:35:03Z
        53 df a8 27
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
User ID Packet (tag 13) (58 bytes)
    User ID: Xamarin Public Jenkins (auto-signing) &amp;lt;releng@xamarin.com&amp;gt;
Signature Packet (tag 2) (284 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2014-09-04T15:26:28Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xc90f9cb90e1fad0c
    Hash left 2 bytes
        9c d7
    RSA signature value m^d mod n (2046 bits)
Signature Packet (tag 2) (284 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA2-256 (hash 8)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2016-12-11T01:14:48Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x01150a655bbd8102
    Hash left 2 bytes
        7f cf
    RSA signature value m^d mod n (2048 bits)
Signature Packet (tag 2) (312 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (34 bytes)
        Signature Creation Time (sub 2): 2014-08-04T15:35:03Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Preferred Symmetric Algorithms (sub 11) (5 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xa6a19b38d3d831ef
    Hash left 2 bytes
        90 e8
    RSA signature value m^d mod n (2047 bits)
Public-Subkey Packet (tag 14) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2014-08-04T15:35:03Z
        53 df a8 27
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
Signature Packet (tag 2) (287 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (9 bytes)
        Signature Creation Time (sub 2): 2014-08-04T15:35:03Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0xa6a19b38d3d831ef
    Hash left 2 bytes
        ac 35
    RSA signature value m^d mod n (2048 bits)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった感じに &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバ上の公開鍵を直接検査できる。
これなら最悪でも &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; がコケるだけなので &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; の鍵束にはダメージがいかないだろう。&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;回避策3： &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 以降を使って電子署名のインポートを拒否する（2019-07-10 追記）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; 2.2.17 から公開鍵サーバ上の公開鍵について付帯する電子署名を（自己署名を除いて）捨てることにしたようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/07/gnupg-2_2_17-is-released/&#34;&gt;GnuPG 2.2.17 リリース： 公開鍵サーバ・アクセスに関する過激な変更あり&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これなら最悪は免れるかな。
公開鍵の管理の仕方が大幅に変わるかもしれないけど。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;新しい keys.openpgp.org を使う&lt;/h2&gt;

&lt;p&gt;今後の話になるだろうが，新しい &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵サーバが登場したので，公開鍵の運用をそちらに移行する手もある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/06/launching-a-new-openpgp-key-server/&#34;&gt;新しい OpenPGP 鍵サーバが Launch したらしい&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「まだベータ運用だし，しばらくは様子見かなぁ」と思っていたが，ちょっと前倒しして調査したほうがいいかしらん。
先ほどの &lt;a href=&#34;https://autocrypt.org/&#34; title=&#34;Autocrypt 1.1.0 documentation&#34;&gt;Autocrypt&lt;/a&gt; の調査も併せて色々調べてみるつもりである。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vice.com/en_us/article/8xzj45/someone-is-spamming-and-breaking-a-core-component-of-pgps-ecosystem&#34;&gt;Someone Is Spamming and Breaking a Core Component of PGP’s Ecosystem - VICE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f&#34;&gt;SKS Keyserver Network Under Attack · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dkg.fifthhorseman.net/blog/openpgp-certificate-flooding.html&#34;&gt;dkg&#39;s blog - OpenPGP Certificate Flooding&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.gentoo.org/news/2019/07/03/sks-key-poisoning.html&#34;&gt;Impact of SKS keyserver poisoning on Gentoo – Gentoo Linux&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/gnupg-cheat-sheet/&#34;&gt;GnuPG チートシート（鍵作成から失効まで）&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/PGP%E2%80%95%E6%9A%97%E5%8F%B7%E3%83%A1%E3%83%BC%E3%83%AB%E3%81%A8%E9%9B%BB%E5%AD%90%E7%BD%B2%E5%90%8D-%E3%82%B7%E3%83%A0%E3%82%BD%E3%83%B3-%E3%82%AC%E3%83%BC%E3%83%95%E3%82%A3%E3%83%B3%E3%82%B1%E3%83%AB/dp/4900900028?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4900900028&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/5132396FFQL._SL160_.jpg&#34; width=&#34;124&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/PGP%E2%80%95%E6%9A%97%E5%8F%B7%E3%83%A1%E3%83%BC%E3%83%AB%E3%81%A8%E9%9B%BB%E5%AD%90%E7%BD%B2%E5%90%8D-%E3%82%B7%E3%83%A0%E3%82%BD%E3%83%B3-%E3%82%AC%E3%83%BC%E3%83%95%E3%82%A3%E3%83%B3%E3%82%B1%E3%83%AB/dp/4900900028?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4900900028&#34;&gt;PGP―暗号メールと電子署名&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;シムソン ガーフィンケル&lt;/dd&gt;
    &lt;dd&gt;Simson Garfinkel (原著), ユニテック (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリー・ジャパン 1996-04&lt;/dd&gt;
    &lt;dd&gt;Book 単行本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4900900028, EAN: 9784900900028&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;3&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;良書なのだが，残念ながら内容が古すぎた。 PGP の歴史資料として読むならいいかもしれない。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-16&#34;&gt;2014-10-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B015643CPE&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E5%8C%96-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%90%E3%82%B7%E3%83%BC%E3%82%92%E6%95%91%E3%81%A3%E3%81%9F%E5%8F%8D%E4%B9%B1%E8%80%85%E3%81%9F%E3%81%A1-%E3%82%B9%E3%83%86%E3%82%A3%E3%83%BC%E3%83%96%E3%83%B3%E3%83%BB%E3%83%AC%E3%83%93%E3%83%BC/dp/4314009071?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4314009071&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E5%8C%96-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%90%E3%82%B7%E3%83%BC%E3%82%92%E6%95%91%E3%81%A3%E3%81%9F%E5%8F%8D%E4%B9%B1%E8%80%85%E3%81%9F%E3%81%A1-%E3%82%B9%E3%83%86%E3%82%A3%E3%83%BC%E3%83%96%E3%83%B3%E3%83%BB%E3%83%AC%E3%83%93%E3%83%BC/dp/4314009071?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4314009071&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー&lt;/dd&gt;
    &lt;dd&gt;斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;Book 単行本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4314009071, EAN: 9784314009072&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-12-16&#34;&gt;2018-12-16&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:pki1&#34;&gt;そういう意味で &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; 公開鍵への電子署名は厳密な「証明（certification）」というよりは小切手の裏書きのようなものを連想してもらうのがいいだろう。つまり今回の「公開鍵の汚染問題」は「裏書き spam」と考えると分かりやすい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:pki1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:gpg1&#34;&gt;ちなみに &lt;code&gt;--keyserver&lt;/code&gt; とか &lt;code&gt;--recv-keys&lt;/code&gt; とかは &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; のオプションである。おそらくこれらのオプションをそのまま &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; に引き渡しているのだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:gpg1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>本家サイトをリニューアルしました</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/07/site-renewal/" />
		<id>tag:text.Baldanders.info,2019-07-04:/remark/2019/07/site-renewal/</id>
		<published>2019-07-04T13:35:58+00:00</published>
		<updated>2019-07-10T03:11:56+00:00</updated>
		<summary>さて，今年の目標は粗かた達成しちゃったな。後半はもう少しノンビリするか。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;リニューアルした本家サイトの公開を行った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://baldanders.info/announce/site-renewal/&#34;&gt;サイトをリニューアルしました — お知らせ | Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最初はできるだけ URL を変えないようにと思っていたが，そもそも&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;を開設した理由は&lt;a href=&#34;https://baldanders.info/blog/000005/&#34; title=&#34;Baldanders.info 正式オープン&#34;&gt;あちこちのサイト・サービスに書き散らしたコンテンツを集約するため&lt;/a&gt;だったので，ひとつの CMS に統合するのは無理だと分かった。
分かってしまった。&lt;/p&gt;

&lt;p&gt;そこで無理に URL を旧版に合わせることはせず &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; で組みやすいよう再構成することにした。
実は知らなかったのだが（もの知らずでゴメン）&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ&#34;&gt;さくらのレンサバ&lt;/a&gt;では &lt;code&gt;.htaccess&lt;/code&gt; を使ったリダイレクトに正規表現が使えるそうなので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;RedirectMatch permanent /spiegel/log2/(\d{6}?).shtml /blog/$1/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;旧 URL の多くは自動でリダイレクトしてくれるはずである。
できなかったらゴメンペコン。&lt;/p&gt;

&lt;p&gt;あと &lt;a href=&#34;https://text.baldanders.info/hugo/&#34;&gt;Hugo セクション&lt;/a&gt;は&lt;a href=&#34;https://baldanders.info/hugo/&#34; title=&#34;ゼロから始める Hugo | Baldanders.info&#34;&gt;本家サイトに移転&lt;/a&gt;させた。
内容が古すぎて手のつけようがないので&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;のアーカイブとして余生を送らせることにする。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の最新情報については引き続きこちらでフォローする予定なので，今後ともよろしく！&lt;/p&gt;

&lt;p&gt;さて，&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/replace-to-https/#2019&#34;&gt;今年の目標&lt;/a&gt;は粗かた達成しちゃったな。
&lt;a href=&#34;https://baldanders.info/&#34; title=&#34;Baldanders.info&#34;&gt;本家サイト&lt;/a&gt;のリニューアルはもっとかかると思っていたが &lt;a href=&#34;https://github.com/PuerkitoBio/goquery&#34; title=&#34;PuerkitoBio/goquery: A little like that j-thing, only in Go.&#34;&gt;&lt;code&gt;goquery&lt;/code&gt;&lt;/a&gt; パッケージを使ったページデータの scraping が思ったより簡単にできてしまったので，あとは Go で変換ツールを組んで shell スクリプトでバッチ化すれば完了という（笑）&lt;/p&gt;

&lt;p&gt;後半はもう少しノンビリするか。
実は今年の隠れ目標は「政治的無関心を装う」なので参院選も（投票には行くが）知らん顔する予定である。
せっかく田舎に帰郷ったんだから，溢れかえる政治広告に振り回されることなく心静かに生きたいものである。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rinopo/sakura-init&#34;&gt;rinopo/sakura-init: さくらのレンタルサーバを借りたとき最初にすること&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/bass-inu/items/d239cdee54a74ec0d3ef&#34;&gt;htaccessで正規表現を使ったリダイレクト - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/replace-to-https/&#34;&gt;（不完全ながら） HTTPS 接続に対応した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/sakura-and-hugo/&#34;&gt;さくらのレンタルサーバ上で Hugo によるサイト管理を行う&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/05/upgrade-sakura/&#34;&gt;さくらのレンタルサーバの Git が「使える！」ようになっていた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%95%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%83%E3%83%81%E3%81%8B%E3%82%891%E6%97%A5%E3%81%A7CMS%E3%82%92%E4%BD%9C%E3%82%8B_%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E9%AB%98%E9%80%9F%E9%96%8B%E7%99%BA%E6%89%8B%E6%B3%95%E5%85%A5%E9%96%80-%E6%94%B9%E8%A8%822%E7%89%88-%E3%82%A2%E3%82%B9%E3%82%AD%E3%83%BC%E3%83%89%E3%83%AF%E3%83%B3%E3%82%B4-%E4%B8%8A%E7%94%B0-%E9%9A%86%E4%B8%80-ebook/dp/B07TSZZPWN?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B07TSZZPWN&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51H%2B4kUhbFL._SL160_.jpg&#34; width=&#34;121&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%95%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%A9%E3%83%83%E3%83%81%E3%81%8B%E3%82%891%E6%97%A5%E3%81%A7CMS%E3%82%92%E4%BD%9C%E3%82%8B_%E3%82%B7%E3%82%A7%E3%83%AB%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E9%AB%98%E9%80%9F%E9%96%8B%E7%99%BA%E6%89%8B%E6%B3%95%E5%85%A5%E9%96%80-%E6%94%B9%E8%A8%822%E7%89%88-%E3%82%A2%E3%82%B9%E3%82%AD%E3%83%BC%E3%83%89%E3%83%AF%E3%83%B3%E3%82%B4-%E4%B8%8A%E7%94%B0-%E9%9A%86%E4%B8%80-ebook/dp/B07TSZZPWN?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B07TSZZPWN&#34;&gt;フルスクラッチから1日でCMSを作る_シェルスクリプト高速開発手法入門 改訂2版 (アスキードワンゴ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;上田 隆一, 後藤 大地&lt;/dd&gt;
    &lt;dd&gt;ＵＳＰ研究所 (監修)&lt;/dd&gt;
    &lt;dd&gt;ドワンゴ 2019-07-05 (Release 2019-07-05)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B07TSZZPWN&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;既存の常識に凝り固まったソフトウェア・エンジニアに「痛恨の一撃」を加える快書もしくは怪書。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-09-21&#34;&gt;2014-09-21&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go 1.13 と 1.14 （Go 2 へ向けて）</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/06/next-steps-toward-go-2/" />
		<id>tag:text.Baldanders.info,2019-06-29:/release/2019/06/next-steps-toward-go-2/</id>
		<published>2019-06-29T07:50:58+00:00</published>
		<updated>2019-06-29T08:30:08+00:00</updated>
		<summary>Go 1.13 のベータ版が登場したようだ。リリースノートも併せて公開されている。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;h2 id=&#34;toc_0&#34;&gt;8月に正式リリースされる &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.13 の主な機能&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.13 のベータ版が登場したようだ。
リリースノートも併せて公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/fmU5r5NfHZs&#34;&gt;Go 1.13 Beta 1 is released - Google Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tip.golang.org/doc/go1.13&#34;&gt;Go 1.13 Release Notes - The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.13 では数値のリテラル表現（2進数表現や浮動小数点数の16進数表現）など色々と重要な機能追加があるが，主なものは以下の通り。&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;errors パッケージへの機能追加&lt;/h3&gt;

&lt;p&gt;以前に紹介した &lt;code&gt;golang.org/x/xerrors&lt;/code&gt; の機能が正式に &lt;code&gt;errors&lt;/code&gt; パッケージに組み込まれるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/xerrors/&#34;&gt;階層化 Error パッケージ “xerrors” を試してみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;golang.org/x/xerrors&lt;/code&gt; の機能をほぼ踏襲しているみたいなので，既に &lt;code&gt;golang.org/x/xerrors&lt;/code&gt; を使っている人は僅かな変更で対応できるだろう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/error-handling-again/&#34;&gt;エラー・ハンドリング再考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;環境変数 GO111MODULE の変更&lt;/h3&gt;

&lt;p&gt;環境変数 &lt;code&gt;GO111MODULE&lt;/code&gt; の値が &lt;code&gt;auto&lt;/code&gt; の際の挙動が変わるようだ。
具体的には&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;The &lt;a href=&#34;https://tip.golang.org/cmd/go/#hdr-Module_support&#34;&gt;&lt;code&gt;GO111MODULE&lt;/code&gt;&lt;/a&gt; environment variable continues to default to &lt;code&gt;auto&lt;/code&gt;, but the &lt;code&gt;auto&lt;/code&gt; setting now activates the module-aware mode of the go command whenever the current working directory contains, or is below a directory containing, a &lt;code&gt;go.mod&lt;/code&gt; file — even if the current directory is within &lt;code&gt;GOPATH/src&lt;/code&gt;.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://tip.golang.org/doc/go1.13&#34;&gt;Go 1.13 Release Notes&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということで &lt;code&gt;GOPATH&lt;/code&gt; 以下にあるソースコードでも &lt;code&gt;go.mod&lt;/code&gt; ファイルがあればモジュール対応モードで管理が可能なようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/go-module-aware-mode/&#34;&gt;モジュール対応モードへの移行を検討する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;GOPRIVATE, GOPROXY/GONOPROXY および GOSUMDB/GONOSUMDB&lt;/h3&gt;

&lt;p&gt;以前&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/mirror-index-and-checksum-database-for-go-module/&#34;&gt;Go モジュールのミラーリングとインデックス化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を紹介したが，この機能を制御するために &lt;code&gt;GOPRIVATE&lt;/code&gt;, &lt;code&gt;GOPROXY&lt;/code&gt;/&lt;code&gt;GONOPROXY&lt;/code&gt; および &lt;code&gt;GOSUMDB&lt;/code&gt;/&lt;code&gt;GONOSUMDB&lt;/code&gt; 各環境変数が追加される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GOPROXY&lt;/code&gt; の既定値は &lt;code&gt;https://proxy.golang.org,direct&lt;/code&gt; となっている。
これを無効にする場合は &lt;code&gt;direct&lt;/code&gt; のみをセットすればよい。&lt;/p&gt;

&lt;p&gt;ちなみに 1.13 からは &lt;code&gt;go env&lt;/code&gt; コマンドが拡張され&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go env -w GOPROXY=direct&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じに設定できるらしい。
これでシステムの環境変数を汚さずに済む（笑）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;GOSUMDB&lt;/code&gt; については&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;The new &lt;a href=&#34;https://tip.golang.org/cmd/go/#hdr-Module_authentication_failures&#34;&gt;&lt;code&gt;GOSUMDB&lt;/code&gt;&lt;/a&gt; environment variable identifies the name, and optionally the public key and server URL, of the database to consult for checksums of modules that are not yet listed in the main module&#39;s &lt;code&gt;go.sum&lt;/code&gt; file. If &lt;code&gt;GOSUMDB&lt;/code&gt; does not include an explicit URL, the URL is chosen by probing the &lt;code&gt;GOPROXY&lt;/code&gt; URLs for an endpoint indicating support for the checksum database, falling back to a direct connection to the named database if it is not supported by any proxy.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://tip.golang.org/doc/go1.13&#34;&gt;Go 1.13 Release Notes&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ということらしい。&lt;/p&gt;

&lt;p&gt;また &lt;code&gt;GOPRIVATE&lt;/code&gt; 環境変数を使えばミラーリングやチェックサム・データベースの対象から外すモジュールを指定できるようだ。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;The new &lt;a href=&#34;https://tip.golang.org/cmd/go/#hdr-Module_configuration_for_non_public_modules&#34;&gt;&lt;code&gt;GOPRIVATE&lt;/code&gt;&lt;/a&gt; environment variable indicates module paths that are not publicly available. It serves as the default value for the lower-level &lt;code&gt;GONOPROXY&lt;/code&gt; and &lt;code&gt;GONOSUMDB&lt;/code&gt; variables, which provide finer-grained control over which modules are fetched via proxy and verified using the checksum database.&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://tip.golang.org/doc/go1.13&#34;&gt;Go 1.13 Release Notes&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Google はミラーリング・サービスとして &lt;a href=&#34;https://proxy.golang.org&#34;&gt;&lt;code&gt;proxy.golang.org&lt;/code&gt;&lt;/a&gt; を，データベース・サービスとして &lt;a href=&#34;https://sum.golang.org/&#34;&gt;&lt;code&gt;sum.golang.org&lt;/code&gt;&lt;/a&gt; を提供しているが，個人的には&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/04/handling-privacy/&#34; title=&#34;誰がプライバシーを支配するのか&#34;&gt;プライバシーに敵対的な企業&lt;/a&gt;のサービスだと思うとあまり利用したくない気分&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://text.baldanders.info/golang/mirror-index-and-checksum-database-for-go-module/&#34;&gt;Go モジュールのミラーリングとインデックス化&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go env -w GOPROXY=direct
$ go env -w GOSUMDB=off&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として無効にするのがいいかな。
まぁ，8月に正式版が出てから様子を見て方針を決めればいいか。&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.14 へ向けて： try() 組み込み関数によるエラー検査&lt;/h2&gt;

&lt;p&gt;以下のブログ記事では &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.14 および最終的な &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 2 へ向けての方針が書かれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/go2-next-steps&#34;&gt;Next steps toward Go 2 - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この中で注目したいのは &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.14 で追加されるというエラー検査機能だ。&lt;/p&gt;

&lt;p&gt;エラーの検査については以前&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/error-handling-in-go-2/&#34;&gt;次期 Go 言語で導入される（かもしれない）新しいエラー・ハンドリングについて予習する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;において &lt;code&gt;check&lt;/code&gt; 式（&lt;code&gt;check&lt;/code&gt; expression）と &lt;code&gt;handle&lt;/code&gt; 構文（&lt;code&gt;handle&lt;/code&gt; statement）の提案を紹介したが，最終的には &lt;code&gt;try()&lt;/code&gt; 組み込み関数を導入することにしたようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go.googlesource.com/proposal/+/master/design/32437-try-builtin.md&#34;&gt;Proposal: A built-in Go error check function,&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体的には&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Tn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という関数に対して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように記述できる。
&lt;code&gt;try()&lt;/code&gt; 組み込み関数は &lt;code&gt;foo()&lt;/code&gt; 関数の返り値の &lt;code&gt;error&lt;/code&gt; 値を見て &lt;code&gt;nil&lt;/code&gt; でなければ値をセットして &lt;code&gt;return&lt;/code&gt; する。
概念的にはこんな感じ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;te&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;te&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;te&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;セットされた &lt;code&gt;error&lt;/code&gt; は &lt;code&gt;defer&lt;/code&gt; 構文で捕まえてまとめて処理できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}()&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;vn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;実際のコードで考えてみよう。
たとえばファイルのコピーを行う関数 &lt;code&gt;copyFile()&lt;/code&gt; は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;copyFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;try()&lt;/code&gt; 組み込み関数と &lt;code&gt;defer&lt;/code&gt; 構文を使って以下のように書き直せる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;copyFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Errorf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;copyFile %s %s: %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}()&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;nf&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;try()&lt;/code&gt; 組み込み関数を導入することにより，演算子や構文を追加することなく後方互換性を確保しつつ仕様を拡張できるというのは大きい。
来年の冬が楽しみだなぁ。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/worldhello/items/9f2fe358d57a8835706e&#34;&gt;try - Go の新しいエラーハンドリング (Go 1.14で導入予定) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>2019-06-29 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2019/06/29-bookmarks/" />
		<id>tag:text.Baldanders.info,2019-06-29:/bookmarks/2019/06/29-bookmarks/</id>
		<published>2019-06-29T03:03:12+00:00</published>
		<updated>2019-06-29T03:54:59+00:00</updated>
		<summary>「太陽系外惑星命名キャンペーン〜IAU100 Name ExoWorlds」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;h2 id=&#34;toc_0&#34;&gt;バベルのインターネット&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/freedom-of-speech/2152&#34;&gt;ソーシャルメディアの「政治的偏向」を政府に判断させてはならない | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/06/24/063000&#34;&gt;オリンピックの偽メール・類似ドメインをめぐる報道についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://it.impressbm.co.jp/articles/-/18130&#34;&gt;再起動せずにLinuxカーネルへの脆弱性パッチを適用するソフト「KernelCare」、GDEP Solutions | IT Leaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35138898/&#34;&gt;OpenSSH、サイドチャネル攻撃に対する防御策を実装 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://stanford.box.com/shared/static/xd35pzvlnl2konx16suee7mqvjvk6nrb.pdf&#34;&gt;Stanford Cyber Policy Center - Securing American Elections - June 6 2019 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/election-security-2020/&#34;&gt;Election Security Is Still Hurting at Every Level | WIRED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/election_securi_3.html&#34;&gt;Election Security - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/25/2019-06-24-cloudflare-outage-affecting-numerous-sites-on-monday-am/&#34;&gt;Cloudflareが一時ダウン、多数のサイトに影響を与える  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.washingtonpost.com/technology/2019/05/28/its-middle-night-do-you-know-who-your-iphone-is-talking/&#34;&gt;Apple promises privacy, but iPhone apps share your data with trackers, ad companies and research firms - The Washington Post&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.msn.com/en-us/news/technology/its-the-middle-of-the-night-do-you-know-who-your-iphone-is-talking-to/ar-AAC1Wvl&#34;&gt;It’s the middle of the night. Do you know who your iPhone is talking to?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/iphone_apps_sur.html&#34;&gt;iPhone Apps Surreptitiously Communicated with Unknown Servers - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/florida_city_pa.html&#34;&gt;Florida City Pays Ransomware - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/field-level-encryption-databases-mongobd/&#34;&gt;A Plan to Stop Breaches With Dead Simple Database Encryption | WIRED&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/mongodb_offers_.html&#34;&gt;MongoDB Offers Field Level Encryption - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theverge.com/2019/6/12/18662968/la-liga-app-illegal-soccer-streaming-fine&#34;&gt;LaLiga’s app listened in on fans to catch bars illegally streaming soccer - The Verge&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/spanish_soccer_.html&#34;&gt;Spanish Soccer League App Spies on Fans - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/06/28/070052&#34;&gt;ゲームアプリのキャンペーンを装ったフィッシングと保証金詐欺メールについてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.atmarkit.co.jp/ait/articles/1906/27/news047.html&#34;&gt;Googleが「Gmail」のセキュリティ機能を強化、特徴は3点：サンドボックスや情報保護モードを提供 - ＠IT&lt;/a&gt; : ビジネス用の G Suite 向けの Gmail 強化らしい。個人ユーザは放置かな（笑）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/06/cellebrite_clai.html&#34;&gt;Cellebrite Claims It Can Unlock Any iPhone - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;天文関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/23/2019-06-23-nasas-curiosity-rover-finds-levels-of-gas-on-mars-that-could-suggest-possibility-of-life/&#34;&gt;NASA探索車が火星にて生命存在の可能性を示すガスレベルを検知  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/were-going-to-hunt-down-a-comet-coming-from-outside-our-solar-system/&#34;&gt;MIT Tech Review: 太陽系外からやって来る彗星を「迎え撃ち」、ESAの新計画&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/25/2019-06-24-watch-spacexs-spectacular-first-falcon-heavy-night-launch-live/&#34;&gt;SpaceXの大型ロケットFalcon Heavyが初の夜間打ち上げ  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/s/148723/life-could-exist-in-a-2d-universe-according-to-physics-anyway/&#34;&gt;MIT Tech Review: 2次元宇宙で生命は存在するか？ 米物理学者が示した意外な可能性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prc.nao.ac.jp/iau/exoworlds2019/&#34;&gt;太陽系外惑星命名キャンペーン〜IAU100 Name ExoWorlds&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/news/topics/2019/20190628-nameexoworlds.html&#34;&gt;IAU100年記念 太陽系外惑星命名キャンペーン、日本での名前募集始まる | 国立天文台(NAOJ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prc.nao.ac.jp/iau/exoworlds2019/hd145457.html&#34;&gt;命名する恒星・惑星について | 太陽系外惑星命名キャンペーン〜IAU100 Name ExoWorlds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://alma-telescope.jp/news/press/uranus-201906&#34;&gt;プレスリリース - 冷たい輝きを放つ天王星の環 - アルマ望遠鏡&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;知財関連&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/copyright/2162&#34;&gt;大手ストリームリッピングサイト「Convert2MP3」が音楽業界団体と和解、サービス終了へ | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kuriharakiyoshi/20190626-00131680/&#34;&gt;キム・カーダシアンはKIMONOを商標登録できるか？(栗原潔) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/copyright-troll-lawyer-appeals-14-year-prison-sentence-190627/&#34;&gt;‘Copyright Troll’ Lawyer Appeals 14 Year Prison Sentence - TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/06/ubuntu-1910-14-ubuntu-19102004.html&#34;&gt;Ubuntu 19.10 その14 - Ubuntu 19.10/20.04 LTS向け32bit版パッケージに関する公式声明・一部の32bit版パッケージの提供継続へ - kledgeb&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2019/06/ubuntu-1910-15-ubuntu-studio32bit.html&#34;&gt;Ubuntu 19.10 その15 - Ubuntu Studioにおける32bit版パッケージの必要性 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;その他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1192081.html&#34;&gt;新しいターミナルアプリ「Windows Terminal」が“Microsoft Store”でプレビュー公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2019/06/24/183000&#34;&gt;米国によるイランへのサイバー攻撃報道についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/19/awsidlsmithy.html&#34;&gt;AWS、言語やプロトコルに依存しないインターフェイス定義言語（IDL）「Smithy」をオープンソースで公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/kikaku/20190618-842276/&#34;&gt;モーション解析、PCB設計、ARとポートフォリオを拡大した「Solid Edge」 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/19/gitlab_1201visual_reviewsip.html&#34;&gt;「GitLab 12.0」リリース、1年ぶりのメジャーアップデート。レビュー中のアプリからフィードバックを書き込める「Visual Reviews」、IPアドレス制限など新機能 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/the-online-advertising-industry-breaks-the-law-says-the-uks-data-watchdog/&#34;&gt;MIT Tech Review: ネット広告の根幹技術に違法の疑い、英規制当局が指摘&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tenki.jp/forecaster/deskpart/2019/06/26/4833.html&#34;&gt;九州北部から近畿　最も遅い梅雨入りの発表(日直予報士 2019年06月26日) - 日本気象協会 tenki.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/a-solar-powered-robot-bee-shows-how-insect-drones-may-take-flight/&#34;&gt;MIT Tech Review: まるで昆虫、太陽光で動く超小型ワイヤレス・ドローン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/27/2019-06-26-nintendo-microsoft-and-sony-pen-letter-highlighting-harm-from-trum/&#34;&gt;任天堂、マイクロソフト、ソニーが3社連名でトランプ関税の「害」を訴える  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139071/&#34;&gt;日本はレガシーシステムの保守で身動きとれず--ガートナー調査 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scienceportal.jst.go.jp/news/newsflash_review/newsflash/2019/06/20190627_01.html&#34;&gt;2019年6月27日ニュース「怖いスーパー爆弾低気圧ができる要因を世界で初めて解明した『地球シミュレータ』使い立正大など」 | SciencePortal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/28/2019-06-27-a-boston-startup-developing-a-nuclear-fusion-reactor-just-got-a-roughly-50-million-boost/&#34;&gt;小型商用核融合炉を開発するボストンのスタートアップが約54億円を調達  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139167/&#34;&gt;広島県庁、職員向けに「Box」導入--働き方改革とBCPの一環で - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/serial/newsbymdn/1193078.html&#34;&gt;超小型6インチでWindows 10 Proを搭載したモバイルビジネスパソコン「GPD MicroPC」発売 - ニュース ―MdN Design Interactive edition― - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Firefox Preview を試してみた</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/06/firefox-preview-with-android/" />
		<id>tag:text.Baldanders.info,2019-06-28:/remark/2019/06/firefox-preview-with-android/</id>
		<published>2019-06-28T13:07:04+00:00</published>
		<updated>2019-06-28T13:10:19+00:00</updated>
		<summary>ここは生暖かく「今後に期待」と見守っておこう。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Android に &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.fenix&#34; title=&#34;Firefox Preview - Google Play&#34;&gt;Firefox Preview&lt;/a&gt; なるものが登場したらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35139189/&#34;&gt;Android版「Firefox」のテスト用プレビューが公開--高速化、プライバシー強化 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/06/28/2019-06-27-mozilla-previews-a-redesigned-and-faster-firefox-for-android/&#34;&gt;Mozillaが最大2倍高速なAndroid版Firefoxをプレビュー  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;さっそく導入してみた。
こんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./firefox-preview-1.png&#34;&gt;&lt;img src=&#34;./firefox-preview-1.png&#34; srcset=&#34;./firefox-preview-1.png 1440w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;他の普段使いのブラウザと区別するためにダークモードにしている。
設定画面はこんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./firefox-preview-3.png&#34;&gt;&lt;img src=&#34;./firefox-preview-3.png&#34; srcset=&#34;./firefox-preview-3.png 1440w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;「トラッキング防止」は最初からオンになっているが検索エンジンを DuckDuckGo にできないという相変わらずのクソ野郎ぶりである。&lt;/p&gt;

&lt;p&gt;ちなみにパソコン用の Firefox Quantum ではトラッキング防止機能は2段階あって&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://text.baldanders.info/release/2019/05/firefox-67-is-released/&#34;&gt;&lt;img src=&#34;https://text.baldanders.info/release/2019/05/firefox-67-is-released/block-list.png&#34; srcset=&#34;https://text.baldanders.info/release/2019/05/firefox-67-is-released/block-list.png 877w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Firefox 67 がリリースされた&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/05/firefox-67-is-released/&#34;&gt;Firefox 67 がリリースされた&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;レベル2に設定するとこのページのフィードバックに使っている Disqus もブロックされるくらい強力に効くのだが &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.fenix&#34; title=&#34;Firefox Preview - Google Play&#34;&gt;Firefox Preview&lt;/a&gt; ではそこまでに至らないないようだ。
この辺り，何とも中途半端な感じで Mozilla はユーザのプライバシーを重視していないということが今回の出来を見ても分かろうというものである（それでも Chrome よりはマシというのがにんともかんとも）。&lt;/p&gt;

&lt;p&gt;はっきり言って &lt;a href=&#34;https://wiki.mozilla.org/Mobile/GeckoView&#34; title=&#34;Mobile/GeckoView - MozillaWiki&#34;&gt;GeckoView&lt;/a&gt; を使ったプライバシー重視のブラウザを使いたいなら &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.focus&#34;&gt;Firefox Focus&lt;/a&gt; を使うことを強くお勧めする&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ddg1&#34;&gt;&lt;a href=&#34;#fn:ddg1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
一般のユーザが &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.fenix&#34; title=&#34;Firefox Preview - Google Play&#34;&gt;Firefox Preview&lt;/a&gt; を使うメリットは（現時点では）万にひとつもない。&lt;/p&gt;

&lt;p&gt;文字通りの preview 版だとしても，同じブラウザエンジンを使った先行アプリがあるのだから，せめて同程度のセキュリティ・プライバシー設定が可能な程度の機能は実装してほしかった。
どうせ iOS/iPadOS 版は出ない（出せない）だろうから Android 特化でチューニングすればいい。&lt;/p&gt;

&lt;p&gt;まぁ，ここは生暖かく「今後に期待」と見守っておこう。
とりあえずアプリは削除だな。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:ddg1&#34;&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.focus&#34;&gt;Firefox Focus&lt;/a&gt; の検索エンジンにも DuckDuckGo は入っていないが，追加して切り換えることはできる。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ddg1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
