<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2021-05-29:/</id>
	<updated>2021-05-29T08:00:45+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>CAVOC Web API で遊ぶ</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/cavoc-api-client/" />
		<id>tag:text.Baldanders.info,2021-05-29:/remark/2021/05/cavoc-api-client/</id>
		<published>2021-05-29T07:58:27+00:00</published>
		<updated>2021-05-29T08:00:45+00:00</updated>
		<summary>CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;突然だが「&lt;a href=&#34;http://cavoc.org/&#34;&gt;共通農業語彙（Common Agricaulturel VOcabulary; CAVOC）&lt;/a&gt;」というサイトがあるのだが，この中に農作物の語彙体系を整理したデータベースがある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cavoc.org/cvo.php&#34;&gt;農作物語彙体系(CVO, Crop VOcabulary)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この CVO 情報を取得する Web API があるみたいなので，これを検証するためのコマンドライン・ツールを作ってみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gcavoc&#34;&gt;spiegel-im-spiegel/gcavoc: Common Agricaulturel Vocabulary API Client by Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;動作例を挙げると「せろり」の標準名は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcavoc std せろり
{&amp;#34;term&amp;#34;:&amp;#34;セロリ&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じに取得できる。
また，セロリの Wikipedia ページを取得したいなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gcavoc wikipedia セロリ
https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%A2%E3%83%83%E3%82%AF
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じ。
いや，なんで「&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%BB%E3%83%AB%E3%83%AA%E3%82%A2%E3%83%83%E3%82%AF&#34;&gt;セルリアック&lt;/a&gt;」のページなんだ？&lt;/p&gt;
&lt;p&gt;とまぁ微妙なんだよな。&lt;/p&gt;
&lt;p&gt;たとえば，同じ「セロリ」にしても収穫・出荷する部位によって異なる「農作物」になるのだが Web API ではそこまで細かく制御できない感じ。
元データはオープンデータで公開されているので，真面目にやりたいなら自前で何とかしろってことかもしれない。&lt;/p&gt;
</content>
	</entry><entry>
		<title>2021-05-23 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2021/05/23-bookmarks/" />
		<id>tag:text.Baldanders.info,2021-05-23:/bookmarks/2021/05/23-bookmarks/</id>
		<published>2021-05-23T05:24:39+00:00</published>
		<updated>2021-05-23T05:26:31+00:00</updated>
		<summary>「FragAttacks: Security flaws in all Wi-Fi devices」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint/releases/tag/v1.40.0&#34; rel=&#34;nofollow&#34;&gt;Release v1.40.0 · golangci/golangci-lint · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mermaid-js/mermaid/releases/tag/8.10.1&#34; rel=&#34;nofollow&#34;&gt;Release 8.10.1 · mermaid-js/mermaid · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.57.0&#34; rel=&#34;nofollow&#34;&gt;Release 1.57.0 · atom/atom · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.56.1&#34; rel=&#34;nofollow&#34;&gt;Release April 2021 Recovery · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tinygo-org/tinygo/releases/tag/v0.18.0&#34; rel=&#34;nofollow&#34;&gt;Release 0.18.0 · tinygo-org/tinygo · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/88.0.1/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Firefox  88.0.1, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.56.2&#34; rel=&#34;nofollow&#34;&gt;Release April 2021 Recovery 2 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2021/05/13/libreoffice-706/&#34; rel=&#34;nofollow&#34;&gt;LibreOffice 7.0.6 has been released - The Document Foundation Blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1324426.html&#34; rel=&#34;nofollow&#34;&gt;「LibreOffice 7.0.6」が公開 ～「LibreOffice 7.0」系のリリースはこれが最後 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint/releases/tag/v1.40.1&#34; rel=&#34;nofollow&#34;&gt;Release v1.40.1 · golangci/golangci-lint · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sonatype-nexus-community/nancy/releases/tag/v1.0.21&#34; rel=&#34;nofollow&#34;&gt;Release v1.0.21 · sonatype-nexus-community/nancy · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thunderbird.net/en-US/thunderbird/78.10.2/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Thunderbird — Release Notes (78.10.2) — Thunderbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bytecodealliance/wasmtime/releases/tag/v0.26.1&#34; rel=&#34;nofollow&#34;&gt;Release v0.26.1: Update CI on the stable-v0.26 branch (#2921) · bytecodealliance/wasmtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bytecodealliance/wasmtime/releases/tag/v0.27.0&#34; rel=&#34;nofollow&#34;&gt;Release v0.27.0: Merge pull request #2924 from cfallin/remove-readme-wasi-tokio · bytecodealliance/wasmtime · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.9_7&#34; rel=&#34;nofollow&#34;&gt;Release 4.4.9_7 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2021/at210022.html&#34; rel=&#34;nofollow&#34;&gt;EC-CUBEのクロスサイトスクリプティングの脆弱性（CVE-2021-20717）に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.belfercenter.org/publication/coming-ai-hackers&#34; rel=&#34;nofollow&#34;&gt;The Coming AI Hackers | Belfer Center for Science and International Affairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210511/coming-ai-hackers&#34; rel=&#34;nofollow&#34;&gt;ブルース・シュナイアーが予言する「AIがハッカーになり人間社会を攻撃する日」 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2021/05/12/051650&#34; rel=&#34;nofollow&#34;&gt;米石油パイプライン企業へのサイバー攻撃についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35170587/&#34; rel=&#34;nofollow&#34;&gt;SSH越しでのGitHub操作にセキュリティキーが利用可能に&amp;ndash;2021年中にパスワードを廃止へ - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://us-cert.cisa.gov/ncas/current-activity/2021/05/11/microsoft-releases-may-2021-security-updates&#34; rel=&#34;nofollow&#34;&gt;Microsoft Releases May 2021 Security Updates | CISA&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20210513-1887772/&#34; rel=&#34;nofollow&#34;&gt;緊急の脆弱性あり、Windows Updateの適用を - 攻撃での悪用確認 | TECH+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fragattacks.com/&#34; rel=&#34;nofollow&#34;&gt;FragAttacks: Security flaws in all Wi-Fi devices&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210512-fragattacks-security-flaws-all-wi-fi-devices/&#34; rel=&#34;nofollow&#34;&gt;事実上ほぼ全てのWi-Fiデバイスに内在する脆弱性「FragAttacks」が公開される、ユーザー名やパスワードの流出、PCの乗っ取りも可能 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20210513-1887755/&#34; rel=&#34;nofollow&#34;&gt;すべてのWi-Fi製品に影響及ぼす可能性ある脆弱性、再び発見 | TECH+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.netandfield.com/shar/2021/05/post-3996.html&#34; rel=&#34;nofollow&#34;&gt;「お前の自慰姿を撮ったぞ」というメールは無視で（笑） - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-flutter-desktop/go-flutter&#34; rel=&#34;nofollow&#34;&gt;GitHub - go-flutter-desktop/go-flutter: Flutter on Windows, MacOS and Linux - based on Flutter Embedding, Go and GLFW.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/microsoft_teamstodo30024.html&#34; rel=&#34;nofollow&#34;&gt;Microsoft Teamsの個人向け無償提供が正式にスタート。友人や家族とのチャット、ToDoリストの共有、当面は300人24時間まで無料のビデオ会議など提供 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/github_7.html&#34; rel=&#34;nofollow&#34;&gt;GitHubが動画のアップロード機能に正式対応。バグの再現手順や機能のデモなどの説明が動画で容易に － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ukkz/articles/02c243a6ba7795&#34; rel=&#34;nofollow&#34;&gt;組み込みで般若心経を扱う際の効率的なメモリ配置方法の検討&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/akatsuki/articles/eac0703845aff2&#34; rel=&#34;nofollow&#34;&gt;Go言語でゲームボーイアドバンスのエミュレータを作った話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2105/19/news154.html&#34; rel=&#34;nofollow&#34;&gt;ワクチン予約システムで話題の「SQLインジェクション」って何？　試すと法律違反？　専門家に聞く - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1325501.html&#34; rel=&#34;nofollow&#34;&gt;macOS版「LibreOffice」に脆弱性 ～修正版のv7.0.6/7.1.3への更新を - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/ransomware-double-encryption/&#34; rel=&#34;nofollow&#34;&gt;Ransomware’s Dangerous New Trick Is Double-Encrypting Your Data | WIRED&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/05/double-encrypting-ransomware.html&#34; rel=&#34;nofollow&#34;&gt;Double-Encrypting Ransomware - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nytimes.com/2021/05/17/technology/apple-china-censorship-data.html&#34; rel=&#34;nofollow&#34;&gt;Inside Apple’s Compromises in China: A Times Investigation - The New York Times&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/05/apple-censorship-and-surveillance-in-china.html&#34; rel=&#34;nofollow&#34;&gt;Apple Censorship and Surveillance in China - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2021/05/ubuntu-2104-25-ubuntu-2104-remix.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 21.04 その25 - Ubuntu 21.04 日本語 Remixがリリースされました・ディスクイメージのダウンロード - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1322739.html&#34; rel=&#34;nofollow&#34;&gt;「Vine Linux」のリリースが終了、国内のLinux普及に大きく貢献 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2021/05/ubuntu-2010-98-ubuntu-2104.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 20.10 その98 - Ubuntu 21.04へアップグレードするには・アップグレードの注意事項 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windows に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/windowslinuxlinuxebpfwindows.html&#34; rel=&#34;nofollow&#34;&gt;WindowsがまたLinuxを取り込む。マイクロソフト、Linuxカーネルが備える拡張機能「eBPF」互換機能をWindowsにもオープンソースで実装へ － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1323215.html&#34; rel=&#34;nofollow&#34;&gt;「Windows 10 バージョン 2004/20H2」に残された最後の非互換性問題が解決 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1325427.html&#34; rel=&#34;nofollow&#34;&gt;「Windows 10 バージョン 21H1」の一般提供が開始 ～年2回の大規模アップデート - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.windows.com/windowsexperience/2021/05/19/the-future-of-internet-explorer-on-windows-10-is-in-microsoft-edge/&#34; rel=&#34;nofollow&#34;&gt;The future of Internet Explorer on Windows 10 is in Microsoft Edge | Windows Experience Blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/05/20/microsoft-internet-end-explorer-support/&#34; rel=&#34;nofollow&#34;&gt;Internet Explorerが2022年6月15日にサポート終了、ただしEdgeのIEモードは2029年までを予定  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jacketblog.seesaa.net/article/478248339.html&#34; rel=&#34;nofollow&#34;&gt;新EdgeでIEモードを有効化: Jacket Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1325705.html&#34; rel=&#34;nofollow&#34;&gt;ブログシステム「WordPress」でも7月の「WordPress 5.8」から「IE 11」対応が終了 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/sanpo_shiho/articles/09d1da9af91998&#34; rel=&#34;nofollow&#34;&gt;Go公式のlinter、Golintが非推奨になった&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/baenencalin/how-do-i-disable-the-golang-s-auto-formatting-on-file-save-in-vscode-1nh&#34; rel=&#34;nofollow&#34;&gt;How do I disable GoLang&amp;rsquo;s auto-formatting on file save in VSCode? - DEV Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2021-05-21&#34; rel=&#34;nofollow&#34;&gt;『プログラミング言語Go』のKindle版が出ました：柴田 芳樹 (Yoshiki Shibata)：SSブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://millhouse.dev/posts/graceful-shutdowns-in-golang-with-signal-notify-context&#34; rel=&#34;nofollow&#34;&gt;Graceful Shutdowns in Golang with signal.NotifyContext · Taliesin Millhouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/tenntenn/scraps/34a31252cce4ef&#34; rel=&#34;nofollow&#34;&gt;Go 1.17(?)で入るFuzzingについて調べるぞ！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210511/an-internet-in-your-head&#34; rel=&#34;nofollow&#34;&gt;我々の脳はコンピュータよりもインターネットに近い？ 脳の働きの新しいパラダイムをもたらす新刊 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/thibiki/n/n7c689870ca9b&#34; rel=&#34;nofollow&#34;&gt;電子だけ売れてるマンガなんてもうないよ｜竹村響　Hibiki  Takemura｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kotaproj/articles/945aa998ec073fb3a387&#34; rel=&#34;nofollow&#34;&gt;ラズパイを使って、iPadをスワイプするよ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ulwlu/articles/cc2443d32e2444&#34; rel=&#34;nofollow&#34;&gt;git gc の仕組みを原理から理解してサイズを 136MB → 7.2MB(95%減)まで削減した時の勉強メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zenn/articles/setup-zenn-github-with-export&#34; rel=&#34;nofollow&#34;&gt;Zennで途中からGitHubリポジトリ連携をはじめるときの手順&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35170664/&#34; rel=&#34;nofollow&#34;&gt;マイクロソフト、「Azure Blockchain Service」を2021年9月に終了 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/pdfwordexcelgoogle_translation_api.html&#34; rel=&#34;nofollow&#34;&gt;PDFやWord、Excelファイルを読み込み、レイアウトなどはそのまま内容だけを翻訳。Google Translation APIに新機能 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35170677/&#34; rel=&#34;nofollow&#34;&gt;マイクロソフト「Teams」、ウェビナー機能の提供を開始 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/jquerybootstrap_5iertl.html&#34; rel=&#34;nofollow&#34;&gt;jQuery依存を脱した「Bootstrap 5」正式リリース、IEもついにサポート対象外に。右からの横書き「RTL」など新機能 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npr.org/sections/coronavirus-live-updates/2021/05/12/996284927/covid-19-was-a-preventable-disaster-who-ordered-report-states&#34; rel=&#34;nofollow&#34;&gt;COVID-19 Was &amp;lsquo;A Preventable Disaster,&amp;rsquo; WHO-Ordered Report Says : Coronavirus Updates : NPR&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/05/covid-19who.html&#34; rel=&#34;nofollow&#34;&gt;ブログ: COVID-19は「予防可能な災害」だった、WHOが報告書を提出&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/catnose99/articles/3d2f439e8ed161&#34; rel=&#34;nofollow&#34;&gt;絵文字をファビコンとして表示する簡単な方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/catnose99/articles/ab3afcb4338cbe&#34; rel=&#34;nofollow&#34;&gt;Notion APIのLimit（リクエスト制限）で気になったことまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ginifab.com/feeds/cm_to_inch/actual_size_ruler.ja.html&#34; rel=&#34;nofollow&#34;&gt;ブラウザ定規,単位測定ツール,実寸WEB定規（物差し）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35170763/&#34; rel=&#34;nofollow&#34;&gt;Excelから発展&amp;ndash;「Power Fx」から見えるローコード開発環境の未来 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zetamatta.hatenablog.com/entry/2021/05/18/194901&#34; rel=&#34;nofollow&#34;&gt;私的 goawk リポート - 標準愚痴出力&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2021/05/19/055949&#34; rel=&#34;nofollow&#34;&gt;ワクチン予約接種関連のシステムトラブルについてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/googlematerial_yougooglegoogle_io_2021.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google、新デザインフレームワーク「Material You」発表。デバイスからアプリケーションまでGoogleの製品すべてに適用へ。Google I/O 2021 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/googleproject_starline3dgoogle_io_2021.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google、目の前に相手が実在するかのような「Project Starline」発表。精細な3Dモデルのリアルタイム伝送と裸眼立体視で、Google I/O 2021 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2021-05-18-github-artifact-exporter-open-source-release/&#34; rel=&#34;nofollow&#34;&gt;GitHub Artifact Exporter open source release | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/google1tpu_v4google.html&#34; rel=&#34;nofollow&#34;&gt;［速報］Google、1エクサフロップを超える性能を持つ「TPU v4」発表、Google史上最高性能のシステム。Google I/O 2021 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/05/20/2021-05-19-undead-again-google-brings-back-rss/&#34; rel=&#34;nofollow&#34;&gt;グーグルがRSSを復活させる  |  TechCrunch Japan&lt;/a&gt; : 不要w&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mozilla.org/security/2021/05/18/introducing-site-isolation-in-firefox/&#34; rel=&#34;nofollow&#34;&gt;Introducing Site Isolation in Firefox - Mozilla Security Blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1325423.html&#34; rel=&#34;nofollow&#34;&gt;「Firefox」にも新しいサイト分離アーキテクチャー「Fission」が導入へ - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35171043/&#34; rel=&#34;nofollow&#34;&gt;グーグルのアプリ開発プラットフォーム「Firebase」に多数のアップデート - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35171016/&#34; rel=&#34;nofollow&#34;&gt;グーグル、クロスプラットフォームフレームワーク「Flutter 2.2」発表 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/canonno/articles/db86a09f11432e&#34; rel=&#34;nofollow&#34;&gt;Excelの表をパワポにひたすらコピペするだけのマクロ組んだ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prtimes.jp/main/html/rd/p/000000101.000045988.html&#34; rel=&#34;nofollow&#34;&gt;まつもと泉先生原作の大ブームを巻き起こした人気作！「きまぐれオレンジ☆ロード」より、鮎川まどか、檜山ひかるをイメージした香水が発売です。２人のヒロインの香りは「Like or Love？」｜フェアリーテイル株式会社のプレスリリース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>GNKF: NKF ぽいなにか の v0.5.0 をリリースした</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/05/gnkf-v0_5_0-is-released/" />
		<id>tag:text.Baldanders.info,2021-05-23:/release/2021/05/gnkf-v0_5_0-is-released/</id>
		<published>2021-05-23T05:11:55+00:00</published>
		<updated>2021-05-23T05:12:31+00:00</updated>
		<summary>データのハッシュ値を取得・検証する機能を追加した。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;における文字列処理の習作 &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf&#34; title=&#34;spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang&#34;&gt;gnkf&lt;/a&gt; の v0.5.0 をリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf/releases/tag/v0.5.0&#34;&gt;Release v0.5.0 · spiegel-im-spiegel/gnkf · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このバージョンでデータのハッシュ値を取得・検証する機能を追加した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gnkf hash -h
Print or check hash value.
  Support algorithm:
  MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256

Usage:
  gnkf hash [flags] [file]

Aliases:
  hash, h

Flags:
  -a, --algorithm string   hash algorithm (default &amp;#34;SHA-256&amp;#34;)
  -c, --check              don&amp;#39;t fail or report status for missing files
  -h, --help               help for hash
      --ignore-missing     don&amp;#39;t fail or report status for missing files (with check option)
      --quiet              don&amp;#39;t print OK for each successfully verified file (with check option)

Global Flags:
      --debug   for debug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, および SHA-512/256 各アルゴリズムに対応している&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
既定のアルゴリズムは SHA-256 で，それ以外を使う場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ echo Hello World | gnkf h -a md5
e59ff97941044f85df5297e1c302d260  -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;などとアルゴリズム名を指定する。&lt;/p&gt;
&lt;p&gt;また，リリースファイルに対して &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf/releases/download/v0.5.0/gnkf_0.5.0_checksums.txt&#34;&gt;&lt;code&gt;gnkf_0.5.0_checksums.txt&lt;/code&gt;&lt;/a&gt; のようなハッシュ値の情報があれば， &lt;code&gt;-c&lt;/code&gt; オプションを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl -L https://github.com/spiegel-im-spiegel/gnkf/releases/download/v0.5.0/gnkf_0.5.0_checksums.txt -O
$ curl -L https://github.com/spiegel-im-spiegel/gnkf/releases/download/v0.5.0/gnkf_0.5.0_Linux_64bit.tar.gz -O
$ gnkf h --ignore-missing -c gnkf_0.5.0_checksums.txt
gnkf_0.5.0_Linux_64bit.tar.gz: OK
WARNING in 9 items: no such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;といった感じにダウンロードしたファイルの検証を行うことができる。&lt;/p&gt;
&lt;p&gt;まぁ Linux とかなら &lt;code&gt;sha256sum&lt;/code&gt; コマンド等を使えばいいのだけど， Windows 環境で互換性のあるコマンドが見当たらなかったので &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf&#34; title=&#34;spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang&#34;&gt;gnkf&lt;/a&gt; に組み込んでみたのだった。
以前に &lt;a href=&#34;https://text.baldanders.info/release/2020/10/gnkf-v0_2_0-is-released/&#34;&gt;BASE64 符号化のサブコマンド&lt;/a&gt;を組み込んだことがあったので，これもありかなと（笑）&lt;/p&gt;
&lt;p&gt;余談だが &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; で MD5 や SHA-1 アルゴリズムを使うと &lt;a href=&#34;https://github.com/securego/gosec&#34; title=&#34;securego/gosec: Golang security checker&#34;&gt;gosec&lt;/a&gt; に叱られる。
これを回避するには G501 および G505 のワーニングを除外すればよい。&lt;/p&gt;
&lt;p&gt;たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ golangci-lint run --enable gosec --exclude &amp;#34;G501|G505&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;みたいな感じ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/gnkf/&#34;&gt;GNKF: Network Kanji Filter by Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-05-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B094PRR7PZ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;SHA-3 は標準パッケージにないので今回は見送った。ちなみに &lt;a href=&#34;https://pkg.go.dev/golang.org/x/crypto/sha3&#34; title=&#34;sha3 · pkg.go.dev&#34;&gt;&lt;code&gt;golang.org/x/crypto/sha3&lt;/code&gt;&lt;/a&gt; パッケージを使えば SHA-3 アルゴリズムも簡単に組み込める。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>golang.org/x/net/html パッケージの脆弱性報告</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/05/vulnerability-in-go-external-package/" />
		<id>tag:text.Baldanders.info,2021-05-22:/release/2021/05/vulnerability-in-go-external-package/</id>
		<published>2021-05-22T01:51:21+00:00</published>
		<updated>2021-05-22T01:54:53+00:00</updated>
		<summary>アップデートは計画的に</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;標準ではないが公式の &lt;a href=&#34;https://pkg.go.dev/golang.org/x/net&#34; title=&#34;net · pkg.go.dev&#34;&gt;&lt;code&gt;golang.org/x/net&lt;/code&gt;&lt;/a&gt; パッケージに脆弱性が見つかったそうで，更新を呼びかけている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Version v0.0.0-20210520170846-37e1c6afe023 of &lt;a href=&#34;http://golang.org/x/net&#34;&gt;&lt;code&gt;golang.org/x/net&lt;/code&gt;&lt;/a&gt; fixes a vulnerability in the &lt;a href=&#34;http://golang.org/x/net/html&#34;&gt;&lt;code&gt;golang.org/x/net/html&lt;/code&gt;&lt;/a&gt; package which could cause a denial of service.&lt;/p&gt;
&lt;p&gt;An attacker can craft an input to ParseFragment that would cause it to enter an infinite loop and never return.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/wPunbCPkWUg&#34;&gt;Vulnerability in golang.org/x/net/html&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2021-31525&#34;&gt;CVE-2021-33194&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;（未稿）&lt;/p&gt;
&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;余談だが&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;Amazon.co.jp： プログラミング言語Go eBook: アラン・ドノバン, ブライアン・カーニハン, 柴田芳樹: Kindleストア&#34;&gt;『プログラミング言語Go』の Kindle 版&lt;/a&gt;がリリースされたそうだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yshibata.blog.ss-blog.jp/2021-05-21&#34;&gt;『プログラミング言語Go』のKindle版が出ました：柴田 芳樹 (Yoshiki Shibata)：SSブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;もちろん紙の本も持っているが Kindle 版もソッコーでポチった。
この手の本は使い倒してナンボだと思うので，使いやすいほうでどうぞ。
紙の本を買った当時の感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-05-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B094PRR7PZ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;!-- eof --&gt;
</content>
	</entry><entry>
		<title>Excel → CSV 変換ツールを作ってみた</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/05/xls2csv/" />
		<id>tag:text.Baldanders.info,2021-05-17:/release/2021/05/xls2csv/</id>
		<published>2021-05-17T10:16:06+00:00</published>
		<updated>2021-05-22T01:54:53+00:00</updated>
		<summary>CLI ツールで，機能としては Excel データを CSV 形式に変換するだけの簡単なお仕事。 </summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先日 Zenn に&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20210516-excel-to-csv&#34;&gt;Go で簡単 Excel → CSV 変換&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という記事を書いたが，同等の機能の汎用ツールを作ってみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/xls2csv&#34;&gt;spiegel-im-spiegel/xls2csv: Export CSV Text from Excel Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLI ツールで，機能としては Excel データの行・列の情報を単純に読み込んで CSV 形式に変換するだけの簡単なお仕事。
Pure Go で書かれているので Excel がない環境（たとえば Linux）でも問題なく動く。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ xls2csv -h
Export CSV text from Excel data.

Usage:
  xls2csv [flags] &amp;lt;Excel file&amp;gt;

Flags:
      --debug             for debug
  -h, --help              help for xls2csv
  -o, --output string     path of output CSV file
  -p, --password string   password in Excel file
  -s, --sheet string      sheet name in Excel file
  -t, --tsv               output with TSV format
  -v, --version           output version of xls2csv
  -w, --win-newline       output with CRLF newline

$ xls2csv conv/testdata/test-pw.xlsx -p passwd
名前,年齢
Alice,18
Bob,19
太郎,20
花子,21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このようにパスワードロックされている Excel ファイルも読み込める&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;なお &lt;a href=&#34;https://xuri.me/excelize/&#34; title=&#34;Excelize Official Docs&#34;&gt;Excelize&lt;/a&gt; パッケージを使っているので Excel 2007 までの古い形式（拡張子が &lt;code&gt;.xls&lt;/code&gt; のファイル）には対応していない。
あしからず。&lt;/p&gt;
&lt;p&gt;文字エンコードは UTF-8 で改行コードは LF の CSV 形式のテキストを標準出力に返す。
先頭の BOM は付かない（付ける気もない）。
なお改行コードは &lt;code&gt;-w&lt;/code&gt; オプションで CRLF に変更可能である。
文字エンコードを変える機能はないので， Shift-JIS とかにする必要があるなら拙作の &lt;a href=&#34;https://text.baldanders.info/release/gnkf/&#34; title=&#34;GNKF: Network Kanji Filter by Golang
&#34;&gt;gnkf&lt;/a&gt; との組み合わせでどうぞ。&lt;/p&gt;
&lt;p&gt;機能がニッチ過ぎるので需要はないだろうけど，まっ，自分用ということで（笑）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xuri.me/excelize/&#34; title=&#34;Excelize Official Docs&#34;&gt;Excelize&lt;/a&gt; パッケージのドキュメントって日本語版もあるんだねぇ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xuri.me/excelize/ja/&#34;&gt;Excelize ドキュメンテーション&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;いろいろと遊べそうである。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-05-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B094PRR7PZ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Shell のプロンプトやバッチファイルに直接パスワードを記述するのはオススメできないが， Excel のパスワード・ロックなんてザルだからなぁ&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>AI がハッキングを始める日</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/when-ais-start-hacking/" />
		<id>tag:text.Baldanders.info,2021-05-15:/remark/2021/05/when-ais-start-hacking/</id>
		<published>2021-05-15T08:12:16+00:00</published>
		<updated>2021-05-15T09:57:51+00:00</updated>
		<summary>日本語翻訳および解説。ありがたや</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Bruce Schneier 先生の AI ハッキングに関する一連の記事をブックマークとして挙げておく。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.belfercenter.org/publication/coming-ai-hackers&#34;&gt;The Coming AI Hackers | Belfer Center for Science and International Affairs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210511/coming-ai-hackers&#34;&gt;ブルース・シュナイアーが予言する「AIがハッカーになり人間社会を攻撃する日」 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wired.com/story/opinion-hackers-used-to-be-humans-soon-ais-will-hack-humanity/&#34;&gt;Hackers Used to Be Humans. Soon, AIs Will Hack Humanity | WIRED&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/04/when-ais-start-hacking.html&#34;&gt;When AIs Start Hacking - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/04/ai.html&#34;&gt;ブログ: AIがハッキングを始めるとき (ブルース・シュナイアー)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私は所謂「&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/the-myth-of-the-singularity/&#34; title=&#34;『シンギュラリティの神話』を読む&#34;&gt;シンギュラリティ&lt;/a&gt;」にはもはや微塵も関心がないが，道具・手段としての「AI 技術」についてリスク・ベネフィットをきちんと評価して規制すべきところは規制すべき，とは考えている。&lt;/p&gt;
&lt;p&gt;「理学」が「真理の追求」なら「工学」は「善の実装」である。
何を以って「善」とするかは議論の余地があるだろうが，エンジニアが自らの首を絞めることにならないよう気をつけなければ。&lt;/p&gt;
&lt;h2&gt;人と機械の責務分担&lt;/h2&gt;
&lt;p&gt;（これで思い出したが，以前に Facebook の TL に書きなぐった戯れ言を以下に記しておく）&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;自立とは、仮想代理人ソフトウェアであるところのエージェントが自ら動き、誰の力も借りずに意思決定できることを言う。 […] 一方、自律というのは哲学的な意味であり、自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができることをいう&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B071FHBGW8?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;そろそろ、人工知能の真実を話そう&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この定義で考えると，今の世の中に「自律」機械はまだ登場していないことになる。
もしそのようなものが登場すればシンギュラリティ（特異点）到達ということになるのだろう。
まっ（少なくとも「現在」からの延長線上の未来では）ありえへんけど（笑）&lt;/p&gt;
&lt;p&gt;もう少し踏み込んで考えるなら，機械に「自らが行動する際の基準と目的を明確を持ち、自ら規範を作り出すことができる」ことを期待してはいけないし，そのような期待を前提としたルール・メイキングは意味がない，と思っている。&lt;/p&gt;
&lt;p&gt;であるならルールの適用と運用は人間側に任せるべきで，機械はあくまで運用補佐として振る舞うに留める。
つまり機械に「最終判断」させるべきではない，ということだ。&lt;/p&gt;
&lt;p&gt;ハードでもソフトでもこうした「人と道具・機械との責務分担」をどう設計するかというのはかなり重要で，現状として人の側が最終判断を行うのであれば，システム上のルール設定も（もっと広く）法規制も人の側に寄せた設計をすべきと思っている。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01J1I8PRQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/5132MaXTkGL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01J1I8PRQ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;社会は情報化の夢を見る (河出文庫)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;佐藤俊樹 (著)&lt;/dd&gt;
    &lt;dd&gt;河出書房新社 2010-09-03 (Release 2016-07-29)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01J1I8PRQ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;1996年に出版された『ノイマンの夢・近代の欲望―情報化社会を解体する』の改訂新装版。しかし内容はこれまでと変わりなく，繰り返し語られる技術決定論を前提とする安易な未来予測を「情報化」社会論だとして批判する。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-15&#34;&gt;2015-09-15&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 社会は情報化の夢を見る --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00JB3F73M?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51VjaQK28FL._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00JB3F73M?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;マップス　01 (MFコミックス　フラッパーシリーズ)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;長谷川 裕一 (著)&lt;/dd&gt;
    &lt;dd&gt;KADOKAWA 2012-06-23 (Release 2014-03-31)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00JB3F73M (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀を代表するスペースオペラ漫画（のひとつ）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-12-19&#34;&gt;2017-12-19&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- マップス --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00F5P454W?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/515TCUhlSuL._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00F5P454W?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;キカイダー02(1) (角川コミックス・エース)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ＭＥＩＭＵ (著), 石ノ森 章太郎 (その他)&lt;/dd&gt;
    &lt;dd&gt;KADOKAWA 2013-09-17 (Release 2013-10-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00F5P454W (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「キカイダー」を神秘学的視点で再解釈する（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-08-18&#34;&gt;2016-08-18&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- キカイダー02 --&gt;
</content>
	</entry><entry>
		<title>call と start</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/call-and-start-in-windows/" />
		<id>tag:text.Baldanders.info,2021-05-15:/remark/2021/05/call-and-start-in-windows/</id>
		<published>2021-05-15T05:49:33+00:00</published>
		<updated>2021-05-15T05:49:52+00:00</updated>
		<summary>先日書いた Zenn Scrap の内容。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;先日 &lt;a href=&#34;https://zenn.dev/spiegel/scraps&#34; title=&#34;Spiegelのスクラップ一覧&#34;&gt;Zenn の Scrap&lt;/a&gt; に書いた記事だが， Scrap は基本的に書き捨てで最終的にはアーカイブ（非表示）化する予定なので，改めてこちらのブログに覚え書きとして記しておく。&lt;/p&gt;
&lt;p&gt;いやね。
バッチファイルって使い方を忘れちゃうのよ。
たとえば「コマンドプロンプトのウィンドウを非表示（または最小化）の状態でコマンド実行するのってどうすんだっけ？」って感じ。&lt;/p&gt;
&lt;p&gt;起動するコマンドを細かく制御したいならコマンドプロンプト（&lt;code&gt;cmd.exe&lt;/code&gt;）の内蔵コマンド &lt;code&gt;start&lt;/code&gt; を使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; start /?
指定されたプログラムまたはコマンドを実行するためにウィンドウを開きます。

START [&amp;#34;タイトル&amp;#34;] [/D パス] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]
      [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]
      [/NODE &amp;lt;NUMA ノード&amp;gt;] [/AFFINITY &amp;lt;16 進数の関係マスク&amp;gt;] [/WAIT] [/B]
      [コマンド/プログラム] [パラメーター]

    &amp;#34;タイトル&amp;#34;  ウィンドウのタイトル バーに表示するタイトル。
    パス        開始するディレクトリ。
    B           新しいウィンドウを作成せずにアプリケーションを起動します。
                アプリケーションは Ctrl + C を無視します。
                アプリケーションで Ctr l+ C を有効にしていない場合、
                Ctrl + Break がアプリケーションを中断する唯一の方法です。
    I           新しい環境は、現在の環境ではなく、cmd.exe に渡された元の環境に
                なります。
    MIN         ウィンドウを最小化の状態で起動します。
    MAX         ウィンドウを最大表示の状態で起動します。
    SEPARATE    16 ビットの Windows プログラムを別メモリ領域で起動します。
    SHARED      16 ビットの Windows プログラムを共有メモリ領域で起動します。
    LOW         IDLE 優先度クラスでアプリケーションを起動します。
    NORMAL      NORMAL 優先度クラスでアプリケーションを起動します。
    HIGH        HIGH 優先度クラスでアプリケーションを起動します。
    REALTIME    REALTIME 優先度クラスでアプリケーションを起動します。
    ABOVENORMAL ABOVENORMAL 優先度クラスでアプリケーションを起動します。
    BELOWNORMAL BELOWNORMAL 優先度クラスでアプリケーションを起動します。
    NODE        優先 NUMA (Non-Uniform Memory Architecture) ノードを 10 進の
                整数で指定します。
    AFFINITY    プロセッサの関係マスクを 16 進数で指定します。
                プロセスはこれらのプロセッサで実行されるように制限されます。

                /AFFINITY と /NODE を組み合わせると、関係マスクは異なって
                解釈されます。NUMA ノードのプロセッサ マスクを右にシフトして
                ビット 0 で始まるかのように関係マスクを指定します。
                プロセスは、指定した関係マスクと NUMA ノードの間で共通する
                プロセッサ上で実行されるように制限されます。共通するプロセッサ
                がない場合は、プロセスは指定した NUMA ノード上で実行される
                ように制限されます。
    WAIT        アプリケーションを起動し、終了するまで待ちます。
    コマンド/プログラム
                内部コマンドまたはバッチ ファイルの場合、コマンド プロセッサ
                は cmd.exe の /K オプションを使用して実行されます。
                これはコマンドの後でもウィンドウが残ることを意味
                します。

                内部コマンドまたはバッチ ファイルではない場合、そのプログラム
                はウィンドウ モードのアプリケーションまたはコンソール
                アプリケーションとして動作します。

    パラメーター
                コマンド/プログラムに渡すパラメーターです。

注意: SEPARATE および SHARED オプションは 64 ビット プラットフォームでは
サポートされません。
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このように &lt;code&gt;start&lt;/code&gt; コマンドではウィンドウの表示状態や優先順位等の制御ができる。
たとえば Windows ログオン時に，コマンドプロンプトのウィンドウを最小化した状態で &lt;code&gt;gpg-agent&lt;/code&gt; を起動させたい場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /min gpg-connect-agent.exe /bye
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という内容のバッチファイルを作ってスタートアップ・フォルダ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; に放り込んでおけばよい。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/wait&lt;/code&gt; オプションを付けるとコマンド終了まで待機してくれる。
&lt;code&gt;start /wait&lt;/code&gt; と &lt;code&gt;call&lt;/code&gt; コマンド（&lt;code&gt;call&lt;/code&gt; も内蔵コマンド）は似ているようで異なった動作をする。
これはバッチ処理をファイル単位で入れ子の構造にするとよく分かる。
簡単な実験をしてみよう。&lt;/p&gt;
&lt;p&gt;まず，以下の内容で &lt;code&gt;alice.cmd&lt;/code&gt; というバッチファイルを作る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-batch&#34; data-lang=&#34;batch&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;call&lt;/span&gt; bob.cmd
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;alice.cmd&lt;/code&gt; の中で呼び出している &lt;code&gt;bob.cmd&lt;/code&gt; の内容は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Bob!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;alice.cmd&lt;/code&gt; も &lt;code&gt;bob.cmd&lt;/code&gt; も最終行が &lt;code&gt;exit /b&lt;/code&gt; になっているのがポイント。
&lt;code&gt;/b&lt;/code&gt; オプションを付けることでバッチ処理の終了であることを明示し，バッチファイルをモジュール化できる。&lt;/p&gt;
&lt;p&gt;これで &lt;code&gt;alice.cmd&lt;/code&gt; を実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Bob!
Hello, Alice!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となった。
&lt;code&gt;bob.cmd&lt;/code&gt; がサブルーチンのように機能しているのが分かると思う。&lt;/p&gt;
&lt;p&gt;このように Windows バッチ処理では &lt;code&gt;call&lt;/code&gt; と &lt;code&gt;exit /b&lt;/code&gt; を組み合わせてバッチ処理をモジュール化し再利用可能とすることができる&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;次に &lt;code&gt;alice.cmd&lt;/code&gt; の内容を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /b /wait bob.cmd
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とし， call コマンドを start コマンドに置き換える。
これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Bob!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;bob.cmd&lt;/code&gt; バッチ終了のタイミングでバッチ処理全体が終了してしまう。
&lt;code&gt;start&lt;/code&gt; コマンドを使うと &lt;code&gt;cmd.exe /k bob.cmd&lt;/code&gt; 相当のプロセスが走る筈なのだが，子バッチを &lt;code&gt;/b /wait&lt;/code&gt; オプション付きで呼び出した場合は，親子全体でひとつのバッチ処理として解釈されるのか，子バッチ処理が終了した時点で親バッチ処理もろともプロセスが終了してしまうらしい&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
これを回避するための &lt;code&gt;call&lt;/code&gt; コマンドというわけだ。&lt;/p&gt;
&lt;p&gt;ちなみに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span class=&#34;p&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; off
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;start&lt;/span&gt; /b bob.cmd
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; Hello, Alice!
&lt;span class=&#34;k&#34;&gt;exit&lt;/span&gt; /b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;/wait&lt;/code&gt; オプションを外すと，同じコマンドプロンプト・ウィンドウ上で別プロセスとして駆動するため，出力順が不定になる。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;gt; alice.cmd
Hello, Alice!
Hello, Bob!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じ。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; の start&lt;/h2&gt;
&lt;p&gt;まるっきり余談だが， &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; では &lt;code&gt;start&lt;/code&gt; コマンドは独自内蔵コマンドとして定義されている&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
いや，うっかり &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; 上で &lt;code&gt;start /?&lt;/code&gt; ってやったら， &amp;lsquo;?&amp;rsquo; なんてコマンド知らん（←超意訳）と怒られてしまったのだ（笑）&lt;/p&gt;
&lt;p&gt;あぁ，でも，バッチファイルは &lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; から起動しても &lt;code&gt;cmd.exe&lt;/code&gt; 上のプロセスとして走るのでご心配なく。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zetamatta/books/c84cbe23093eee1b5830&#34;&gt;/bin/shに慣れた人に贈るバッチファイルの書き方&lt;/a&gt; : バッチ処理を組む際に参考になる。オススメ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-gnupg-for-windows-2/&#34;&gt;GnuPG for Windows : gpg-agent について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ユーザごとのスタートアップフォルダの位置例： &lt;code&gt;%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;call&lt;/code&gt; と &lt;code&gt;exit /b&lt;/code&gt; の組み合わせは同一ファイル内でも可能。この場合 &lt;code&gt;call :label&lt;/code&gt; のようにラベルで飛び先を指定する。ラベルをアンカーにしたジャンプなので，どうしても記述がアセンブラっぽくなってしまうのがにんともかんとも。&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;件の Scrap で教えてもらったが，おそらく DOS 時代のバッチ処理との互換性を維持するためだろう，とのこと。&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid Commandline Shell betweeeeeeen UNIX &amp;amp; DOS&#34;&gt;NYAGOS&lt;/a&gt; の &lt;code&gt;start&lt;/code&gt; コマンドは &lt;code&gt;nyagos.d\start.lua&lt;/code&gt; で定義されている。&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>Go 1.16.4 のリリース【セキュリティ・アップデート】</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/05/go-1_16_4-is-released/" />
		<id>tag:text.Baldanders.info,2021-05-09:/release/2021/05/go-1_16_4-is-released/</id>
		<published>2021-05-09T04:52:11+00:00</published>
		<updated>2021-05-22T01:54:53+00:00</updated>
		<summary>脆弱性 CVE-2021-31525 の修正</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.16.4 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/cu9SP4eSXMc&#34;&gt;Go 1.16.4 and Go 1.15.12 are released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は1件の脆弱性修正を含んでいる。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;go1.16.4 (released 2021/05/06) includes a security fix to the &lt;code&gt;net/http&lt;/code&gt; package, as well as bug fixes to the runtime, the compiler, and the &lt;code&gt;archive/zip&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;syscall&lt;/code&gt; packages. See the &lt;a href=&#34;https://github.com/golang/go/issues?q=milestone%3AGo1.16.4+label%3ACherryPickApproved&#34;&gt;Go 1.16.4 milestone&lt;/a&gt; on our issue tracker for details&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.16.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2021-31525&#34;&gt;CVE-2021-31525&lt;/a&gt;&lt;/h2&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;&lt;code&gt;ReadRequest&lt;/code&gt; and &lt;code&gt;ReadResponse&lt;/code&gt; in &lt;code&gt;net/http&lt;/code&gt; can hit an unrecoverable panic when reading a very large header (over 7MB on 64-bit architectures, or over 4MB on 32-bit ones). &lt;code&gt;Transport&lt;/code&gt; and &lt;code&gt;Client&lt;/code&gt; are vulnerable and the program can be made to crash by a malicious server.  &lt;code&gt;Server&lt;/code&gt; is not vulnerable by default, but can be if the default max header of 1MB is overridden by setting &lt;code&gt;Server.MaxHeaderBytes&lt;/code&gt; to a higher value, in which case the program can be made to crash by a malicious client&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/cu9SP4eSXMc&#34;&gt;Go 1.16.4 and Go 1.15.12 are released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;この脆弱性は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://golang.org/x/net/http2/h2c&#34;&gt;&lt;code&gt;golang.org/x/net/http2/h2c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HeaderValuesContainsToken&lt;/code&gt; in &lt;a href=&#34;http://golang.org/x/net/http/httpguts&#34;&gt;&lt;code&gt;golang.org/x/net/http/httpguts&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;にも影響するらしい。
該当のパッケージを利用している場合は最新リビジョンにアップデートすること。&lt;/p&gt;
&lt;p&gt;（以下未稿）&lt;/p&gt;
&lt;h2&gt;例によって&amp;hellip;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT で管理している &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラは古いので，&lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Downloads - The Go Programming Language&#34;&gt;ダウンロードページ&lt;/a&gt;からバイナリ（&lt;a href=&#34;https://golang.org/dl/go1.16.4.linux-amd64.tar.gz&#34;&gt;&lt;code&gt;go1.16.4.linux-amd64.tar.gz&lt;/code&gt;&lt;/a&gt;）を取ってきて手動でインストールすることを強く推奨する。
以下は手動での作業例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/src
$ sudo curl -L &amp;#34;https://golang.org/dl/go1.16.4.linux-amd64.tar.gz&amp;#34; -O
$ cd ..
$ sudo unlink go # 以前の Go が入っている場合
$ sudo tar xvf src/go1.16.4.linux-amd64.tar.gz
$ sudo mv go go1.16.4
$ sudo ln -s go1.16.4 go
$ go version # /usr/local/go/bin にパスが通っている場合
go version go1.16.1 linux/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B094PRR7PZ?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-05-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B094PRR7PZ (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>2021-05-09 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2021/05/09-bookmarks/" />
		<id>tag:text.Baldanders.info,2021-05-09:/bookmarks/2021/05/09-bookmarks/</id>
		<published>2021-05-09T04:24:00+00:00</published>
		<updated>2021-05-09T04:24:43+00:00</updated>
		<summary>「アメリカでは「集団免疫」に到達するのは難しいと専門家は考えている」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.syntevo.com/blog/?p=5110&#34; rel=&#34;nofollow&#34;&gt;SmartGit 20.2.5 – syntevo blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.56.0&#34; rel=&#34;nofollow&#34;&gt;Release April 2021 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/tools/releases/tag/gopls/v0.6.11&#34; rel=&#34;nofollow&#34;&gt;Release gopls/v0.6.11 · golang/tools · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.9_6&#34; rel=&#34;nofollow&#34;&gt;Release 4.4.9_6 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thunderbird.net/en-US/thunderbird/78.10.1/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Thunderbird — Release Notes (78.10.1) — Thunderbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/88.0.1/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Firefox  88.0.1, See All New Features, Updates and Fixes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/security/advisories/mfsa2021-20/&#34; rel=&#34;nofollow&#34;&gt;Security Vulnerabilities fixed in Firefox 88.0.1, Firefox for Android 88.1.3 — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2021/05/06/libreoffice-7-1-3/&#34; rel=&#34;nofollow&#34;&gt;LibreOffice 7.1.3 Community available for download - The Document Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1323061.html&#34; rel=&#34;nofollow&#34;&gt;「Visual Studio Code」の4月更新 ～タブ切り替えのターミナルをプレビュー提供 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://us-cert.cisa.gov/ics/advisories/icsa-21-119-04&#34; rel=&#34;nofollow&#34;&gt;Multiple RTOS (Update A) | CISA&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://thinkit.co.jp/news/bn/18332&#34; rel=&#34;nofollow&#34;&gt;US-CERT、RTOSに存在する緊急の脆弱性について注意喚起、数多くのプロダクトが要対策 | Think IT（シンクイット）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/05/tesla-remotely-hacked-from-a-drone.html&#34; rel=&#34;nofollow&#34;&gt;Tesla Remotely Hacked from a Drone - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35170372/&#34; rel=&#34;nofollow&#34;&gt;「CentOS」の代替OS「AlmaLinux」、CloudLinuxが複数のサポートオプション提供 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Windows に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zetamatta.hatenablog.com/entry/2021/05/07/063951&#34; rel=&#34;nofollow&#34;&gt;nmake と set - 標準愚痴出力&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/sh_komine/articles/35527f84a2be3a&#34; rel=&#34;nofollow&#34;&gt;少人数での爆速開発を目指してgolang×GCPの技術選定をした話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nishinatoshiharu.com/restapi-echo-gorm/&#34; rel=&#34;nofollow&#34;&gt;【Go言語】EchoとGORMでREST API（CRUD）を実装する | Enjoy IT Life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/greenteabiscuit/items/282ae184b3aad7edf92f&#34; rel=&#34;nofollow&#34;&gt;go-gin + mysql + gorm + Dockerで開発用APIサーバーを立ててみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/nishina555/items/6ad228a459866bc776b4&#34; rel=&#34;nofollow&#34;&gt;『ホットリロード x Go言語 x MySQL』なHTTPサーバのDocker環境構築手順 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ikawaha/articles/20210503-3d72f1747f43efd3bdc9&#34; rel=&#34;nofollow&#34;&gt;Goa v3 で go:embed を利用する試行錯誤&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shizuoka-go.appspot.com/entry/7b8e7ff0-28e3-4f58-8561-f757f1305913&#34; rel=&#34;nofollow&#34;&gt;A Tour of Go 実装完了 [Shizuoka.go]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/tatsurom/articles/golang-simple-json-api&#34; rel=&#34;nofollow&#34;&gt;[初心者向け] Golang でシンプルな JSON API を作る&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gpl-reading.connpass.com/event/212824/&#34; rel=&#34;nofollow&#34;&gt;第13回『プログラミング言語Go』オンライン読書会 - connpass&lt;/a&gt; : 次回は参加する&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/05/blog-post_4.html&#34; rel=&#34;nofollow&#34;&gt;ブログ: アメリカでは「集団免疫」に到達するのは難しいと専門家は考えている&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/05/blog-post_3.html&#34; rel=&#34;nofollow&#34;&gt;ブログ: プログラマがドキュメントを書かない理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wired.jp/2021/05/05/covid-19-april-2021/&#34; rel=&#34;nofollow&#34;&gt;変異株と闘う世界で進むワクチン接種、3回目の追加接種を模索する動きも：新型コロナウイルスと世界のいま（2021年4月） | WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/taketo1024/books/850b20937af93b&#34; rel=&#34;nofollow&#34;&gt;プログラマのための圏論 (執筆中)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/suzuki_hoge/books/2021-05-authentication-and-authorization-0259d3f&#34; rel=&#34;nofollow&#34;&gt;認証と認可の超サマリ　OAuth とか OpenID Connect とか SAML とかをまとめてざっと把握する本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/koukyo1994/articles/9b1da2482d8ba1&#34; rel=&#34;nofollow&#34;&gt;テーブルデータ向けの自然言語特徴抽出術&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>非公開 Facebook Page を晒される</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/05/facebook-page/" />
		<id>tag:text.Baldanders.info,2021-05-05:/remark/2021/05/facebook-page/</id>
		<published>2021-05-05T01:43:57+00:00</published>
		<updated>2021-05-05T04:18:00+00:00</updated>
		<summary>非公開で何の活動も表示されない本人アカウントと何やら活動してるっぽいなりすましアカウントのどちらを信用するかという話である</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;既に Facebook の TL では既に愚痴ってるが，実害が出る前に注意喚起しておく。&lt;/p&gt;
&lt;p&gt;私はずいぶん前から Facebook の TL に載せる記事を「友人」限定にして Facebook Page も「友人」以外には見えないようにしている。
なので「友人」関係にない人が私の Facebook Page を見てもエラー画面が表示されるだけだったのだ，この前までは！&lt;/p&gt;
&lt;p&gt;実はこの前，職場で間違えて自分の Facebook Page をブラウザで開いてしまったのよ。
したら，いつものエラー画面ではなく，普通に Facebook Page が表示されてビックリしてしまった。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./facebook-page.jpg&#34;&gt;&lt;img src=&#34;./facebook-page.jpg&#34; srcset=&#34;./facebook-page.jpg 1306w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;なにすんねん！！&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./facebook-page.jpg&#34;&gt;なにすんねん！！&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;さすがにプロフィール情報とか TL に上げた記事や写真は非表示になっているが，アテンション画像やアバターアイコン，名前・ニックネーム・1行コメントはそのまま表示される。
これだけなら「なにすんねん」で済む話だが，たちの悪いことに同名または類似名のユーザを列挙してくれやがるのよ。&lt;/p&gt;
&lt;p&gt;この結果なにが起きるかというと情報非公開の Facebook ユーザを容易にサーベイできるわけ。&lt;/p&gt;
&lt;p&gt;マジで要らんことするよね Facebook は！&lt;/p&gt;
&lt;p&gt;この件は Facebook Page を公開している人には「それがどーした」な話だろう。
しかし，今の御時世 SNS を使ってるのはセルフ・ブランディングや自己肯定感を満たす目的の人だけではないのだ。&lt;/p&gt;
&lt;p&gt;私は Facebook を広島時代の友人や大学時代の友人や先輩方との連絡手段として使っている。
ついでに TL で「ド田舎に引きこもっても相変わらず馬鹿やってますよー」と生存証明の記事を上げている。
それがなかったら（&lt;a href=&#34;https://text.baldanders.info/remark/2020/08/divorce-from-instagram/&#34; title=&#34;Instagram から足を洗う方法&#34;&gt;Instagram と同じく&lt;/a&gt;）プライバシーに敵対的なサービスのアカウントなんかとっくに潰してるっての（まぁ BAN されたら復帰せず終了するけどw）。&lt;/p&gt;
&lt;p&gt;最近 Facebook の友人がアバターアイコンをパクられ，なりすましアカウントを作られたと TL で報告していた。
非公開で何の活動も表示されない本人アカウントと何やら活動してるっぽいなりすましアカウントのどちらを（第三者から見て）信用するかという話である。&lt;/p&gt;
&lt;p&gt;というわけで，長すぎるまえがきはここまでにして，本題の注意喚起。&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;&lt;strong&gt;私名義の Facebook アカウントで私から「友人」申請をすることはありません。もし申請があっても 100% なりすましなのでご注意を！&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;私は現在，リアルで直接知り合った人以外には Facebook の友人申請をしないし受け付けないことにしている。
もし私の活動をフォローしたいという奇特な方がいらっしゃるのであれば，&lt;a href=&#34;https://text.baldanders.info/about-feeds/&#34; title=&#34;更新情報について&#34;&gt;このブログの feed&lt;/a&gt; を食わせるか &lt;a href=&#34;https://twitter.com/spiegel_2007&#34;&gt;Twitter アカウント&lt;/a&gt; をフォローしていただければありがたい。
相互フォローの強要などしないのでご心配なく（笑） どうしても Facebook の「友人」関係が必要であれば直接お会いしましょう。
個別のやりとりで私のケータイ番号をご存知であれば &lt;a href=&#34;https://www.signal.org/&#34;&gt;Signal&lt;/a&gt; がオススメ。&lt;/p&gt;
&lt;p&gt;ちなみに Facebook アカウントのアバターアイコンは（Facebook への抗議の意味を込めて）違うものに差し替えた。
3.11 の復興活動が「収束宣言」するまでは “Pray for Japan” のバッヂの付いたアイコンで通すつもりだったが，残念なことである。&lt;/p&gt;
&lt;p&gt;時代は「ゆく川の流れ」のように移りゆく。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51T6PBdGbyL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B01MZGVHOA?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;超監視社会&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ブルース・シュナイアー (著), 池村 千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2016-12-13 (Release 2017-02-03)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B01MZGVHOA (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;実は積ん読のまま読んでない。そろそろちゃんと最後まで読まないと。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-23&#34;&gt;2019-03-23&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 超監視社会 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B0125TZSZ0?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/616sjle5ITL._SL160_.jpg&#34; width=&#34;109&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B0125TZSZ0?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ダナ・ボイド (著), 野中 モモ (翻訳)&lt;/dd&gt;
    &lt;dd&gt;草思社 2014-10-09 (Release 2015-07-21)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B0125TZSZ0 (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;読むのに1年半以上かかってしまった。ネット，特に SNS 上で自身のアイデンティティやプライバシーを保つにはどうすればいいか。豊富な事例を交えて考察する。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-10&#34;&gt;2016-05-10&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- つながりっぱなしの日常を生きる --&gt;
</content>
	</entry>
</feed>
