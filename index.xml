<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2019-02-03:/</id>
	<updated>2019-02-03T17:00:13+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.54.0</generator>

	
	<entry>
		<title>Go 言語で画像のサイズ変更：定義済み draw.Scaler の比較 - golang</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/resize-image-2/" />
		<id>tag:text.Baldanders.info,2019-02-03:/golang/resize-image-2/</id>
		<published>2019-02-03T11:30:42+09:00</published>
		<updated>2019-02-03T11:30:42+09:00</updated>
		<summary>golang.org/x/image/draw パッケージで定義済みの4つの draw.Scaler について性能比較を試みる。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/resize-image/&#34; title=&#34;Go 言語で画像のサイズを変更する&#34;&gt;前回&lt;/a&gt; &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で画像データのサイズ変換を行う手順を紹介したが，その際に使われる &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34;&gt;golang.org/x/image/draw&lt;/a&gt; パッケージで定義済みの4つの &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Scaler&lt;/code&gt; について性能比較を試みる。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34;&gt;golang.org/x/image/draw&lt;/a&gt; パッケージでは以下の4つの &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Scaler&lt;/code&gt; が定義されている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// NearestNeighbor is the nearest neighbor interpolator. It is very fast,
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// but usually gives very low quality results. When scaling up, the result
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// will look &amp;#39;blocky&amp;#39;.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;NearestNeighbor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Interpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;nnInterpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// ApproxBiLinear is a mixture of the nearest neighbor and bi-linear
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// interpolators. It is fast, but usually gives medium quality results.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// It implements bi-linear interpolation when upscaling and a bi-linear
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// blend of the 4 nearest neighbor pixels when downscaling. This yields
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// nicer quality than nearest neighbor interpolation when upscaling, but
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// the time taken is independent of the number of source pixels, unlike the
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// bi-linear interpolator. When downscaling a large image, the performance
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// difference can be significant.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;ApproxBiLinear&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Interpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ablInterpolator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// BiLinear is the tent kernel. It is slow, but usually gives high quality
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// results.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;BiLinear&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// CatmullRom is the Catmull-Rom kernel. It is very slow, but usually gives
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// very high quality results.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// It is an instance of the more general cubic BC-spline kernel with parameters
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// B=0 and C=0.5. See Mitchell and Netravali, &amp;#34;Reconstruction Filters in
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// Computer Graphics&amp;#34;, Computer Graphics, Vol. 22, No. 4, pp. 221-228.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;CatmullRom&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では，早速コードを組んでみよう。
こんな感じでどうだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;

	&lt;span class=&#34;s&#34;&gt;&amp;#34;golang.org/x/image/draw&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rectangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Image&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewRGBA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Bounds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Over&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;exportFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;png&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;scalers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Scaler&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}{&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;NearestNeighbor.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NearestNeighbor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ApproxBiLinear.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ApproxBiLinear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;BiLinear.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BiLinear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CatmullRom.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CatmullRom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;//open original image file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;circle.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;//original image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;imgSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;//scale down
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//size of scaled image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scalers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;imgSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;exportFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scaler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;元画像の &lt;code&gt;circle.png&lt;/code&gt; は &lt;a href=&#34;https://github.com/nfnt/resize&#34; title=&#34;nfnt/resize: Pure golang image resizing&#34;&gt;github.com/nfnt/resize&lt;/a&gt; のサンプル画像を拝借した。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./circle.png&#34;&gt;&lt;img src=&#34;./circle.png&#34; srcset=&#34;./circle.png 1000w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;circle.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./circle.png&#34;&gt;circle.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ブラウザ経由だと自動でリサイズしてしまうので分かりづらいだろうけど 1,000×1,000 の同心円を描いた画像である。
これを 320×320 に変換する。&lt;/p&gt;

&lt;p&gt;では実行してみよう（私の PC はかなり遅いので変換時間は参考程度でお願いします）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run scaler.go
NearestNeighbor.png 2.0001ms
ApproxBiLinear.png 2.0001ms
BiLinear.png 16.001ms
CatmullRom.png 21.0012ms&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;変換結果は以下の通り。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./NearestNeighbor.png&#34;&gt;&lt;img src=&#34;./NearestNeighbor.png&#34; srcset=&#34;./NearestNeighbor.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;NearestNeighbor.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./NearestNeighbor.png&#34;&gt;NearestNeighbor.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./ApproxBiLinear.png&#34;&gt;&lt;img src=&#34;./ApproxBiLinear.png&#34; srcset=&#34;./ApproxBiLinear.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ApproxBiLinear.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./ApproxBiLinear.png&#34;&gt;ApproxBiLinear.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./BiLinear.png&#34;&gt;&lt;img src=&#34;./BiLinear.png&#34; srcset=&#34;./BiLinear.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;BiLinear.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./BiLinear.png&#34;&gt;BiLinear.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./CatmullRom.png&#34;&gt;&lt;img src=&#34;./CatmullRom.png&#34; srcset=&#34;./CatmullRom.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;CatmullRom.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./CatmullRom.png&#34;&gt;CatmullRom.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.NearestNeighbor&lt;/code&gt; と &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.ApproxBiLinear&lt;/code&gt; は変換速度は早いが品質としては実用に耐える感じではなさそうである。
サムネイルとかを作成するならこちらでもいいかも知れない。&lt;/p&gt;

&lt;p&gt;品質でいうならやはり &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.BiLinear&lt;/code&gt; や &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.CatmullRom&lt;/code&gt; が妥当かな。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Go 言語で画像のサイズを変更する - golang</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/resize-image/" />
		<id>tag:text.Baldanders.info,2019-02-02:/golang/resize-image/</id>
		<published>2019-02-02T17:54:21+09:00</published>
		<updated>2019-02-03T11:30:42+09:00</updated>
		<summary> ちょっと画像データを弄る機会があったので，やったことを忘れないうちに記しておく。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;今回は小ネタ。
ちょっと&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/escape-from-flickr/&#34; title=&#34;Flickr から写真を引き揚げました&#34;&gt;画像データを弄る機会があった&lt;/a&gt;ので，やったことを忘れないうちに記しておく。&lt;/p&gt;

&lt;h2 id=&#34;画像の-width-height-の値を取得する&#34;&gt;画像の Width/Height の値を取得する&lt;/h2&gt;

&lt;p&gt;画像のサイズを変更するにはまず元の画像のサイズが分かっていないといけない。
これは標準の &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt; パッケージを使って実装できる。
いきなりコードを書くとこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/gif&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/jpeg&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NArg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ErrInvalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    
    &lt;span class=&#34;c1&#34;&gt;//open image file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//maybe file path
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//decode image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Type of image:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//rectange info of image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;rct&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Bounds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Width:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Height:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rct&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Decode()&lt;/code&gt; 関数で画像データをデコードし &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Image.Bounds()&lt;/code&gt; 関数で画像全体の矩形情報（&lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Rectangle&lt;/code&gt;）を取得する&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:img1&#34;&gt;&lt;a href=&#34;#fn:img1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
ポイントは &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Decode()&lt;/code&gt; 関数が factory method のように機能していて画像フォーマットを意識する必要はないという点。
ではどこで依存（dependency）を注入しているかというと，パッケージのインポート&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/gif&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/jpeg&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;の部分。
この場合は GIF, JPEG, PNG 形式に対応していることを示す。
もちろんこれらと互換性のある独自パッケージを使ってもよい&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:register1&#34;&gt;&lt;a href=&#34;#fn:register1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;では早速&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://photo.baldanders.info/flickr/7444837/&#34;&gt;&lt;img src=&#34;https://photo.baldanders.info/flickr/image/7444837_o.jpg&#34; srcset=&#34;https://photo.baldanders.info/flickr/image/7444837_o.jpg 640w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Frog&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://photo.baldanders.info/flickr/7444837/&#34;&gt;Frog&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;の画像を読み込んでみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run sample1.go 7444837_o.jpg
Type of image: jpeg
Width: 640
Height: 480&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;画像のサイズを変更する&#34;&gt;画像のサイズを変更する&lt;/h2&gt;

&lt;p&gt;次に画像のサイズを変更してみよう。
ググってみると &lt;a href=&#34;https://github.com/nfnt/resize&#34; title=&#34;nfnt/resize: Pure golang image resizing&#34;&gt;github.com/nfnt/resize&lt;/a&gt; を使った例をよく見かけるが，件のリポジトリを見てみると&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This package is no longer being updated! Please look for alternatives if that bothers you.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/nfnt/resize&#34;&gt;nfnt/resize: Pure golang image resizing&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;と書かれていて2018年2月を最後に活動を停止しているようである。
代わりのパッケージとして&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34;&gt;golang.org/x/image/draw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://godoc.org/gopkg.in/gographics/imagick.v2/imagick&#34;&gt;gopkg.in/gographics/imagick.v2/imagick&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が&lt;a href=&#34;https://github.com/nfnt/resize/issues/63&#34; title=&#34;I&#39;m no longer updating this package. · Issue #63 · nfnt/resize&#34;&gt;紹介&lt;/a&gt;されている。&lt;/p&gt;

&lt;p&gt;そこで今回は &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34;&gt;golang.org/x/image/draw&lt;/a&gt; パッケージを使って画像のサイズ変更を行ってみる。
これもいきなりコードを書くとこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;flag&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;image/gif&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;image/jpeg&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;image/png&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;s&#34;&gt;&amp;#34;golang.org/x/image/draw&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NArg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ErrInvalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//open original image file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//maybe src file path
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//decode image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;imgSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Type of image:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//rectange of image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Bounds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Width:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Height:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//scale down by 1/2
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewRGBA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Rect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Dy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CatmullRom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Scale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Bounds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rctSrc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;draw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Over&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//create resized image file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//maybe dst file path
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;defer&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;//encode resized image
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;jpeg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;jpeg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jpeg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Quality&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;gif&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;png&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Encode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;imgDst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;format error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このコードでは Width/Height を半分のサイズにしたイメージをファイル出力している。&lt;/p&gt;

&lt;p&gt;前半の画像の読み込み部分は先程と同じ。
その次に &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.NewRGBA()&lt;/code&gt; 関数で Width/Height を半分のサイズにした空のインスタンスを生成し &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.CatmullRom.Scale()&lt;/code&gt; 関数で変換した画像データを流し込んでいる。
その後ファイルに出力するのだが，出力するフォーマットごとに異なる &lt;code&gt;Encode()&lt;/code&gt; 関数になっている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.CatmullRom&lt;/code&gt; はサイズ変換のための &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Scaler&lt;/code&gt; インタフェースを持つ &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Kernel&lt;/code&gt; 型インスタンスで，以下のように定義されている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// CatmullRom is the Catmull-Rom kernel. It is very slow, but usually gives
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// very high quality results.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// It is an instance of the more general cubic BC-spline kernel with parameters
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// B=0 and C=0.5. See Mitchell and Netravali, &amp;#34;Reconstruction Filters in
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// Computer Graphics&amp;#34;, Computer Graphics, Vol. 22, No. 4, pp. 221-228.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;CatmullRom&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.CatmullRom&lt;/code&gt; はどちらかというと品質優先の &lt;a href=&#34;https://godoc.org/golang.org/x/image/draw&#34; title=&#34;draw - GoDoc&#34;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Scaler&lt;/code&gt; のようだが，他にもいくつか定義済みのインスタンスがある。
性能について詳しくは&lt;a href=&#34;https://text.baldanders.info/golang/resize-image-2/&#34; title=&#34;Go 言語で画像のサイズ変更：定義済み draw.Scaler の比較&#34;&gt;次回の記事&lt;/a&gt;を参考にしてほしい。&lt;/p&gt;

&lt;p&gt;では，実際に動かしてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run sample2.go 7444837_o.jpg out.jpg
Type of image: jpeg
Width: 640
Height: 480&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;出力結果は以下の通り。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./out.jpg&#34;&gt;&lt;img src=&#34;./out.jpg&#34; srcset=&#34;./out.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;out.jpg&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;./out.jpg&#34;&gt;out.jpg&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;うむうむ。
いい感じである。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/from_Unknown/items/40d1947292c53fe7ea74&#34;&gt;GolangでアニメーションGifをリサイズする - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/aclements/599107a2e3f187f8a2c0&#34;&gt;Scale down by 2x using x/image/draw · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/logrusorgru/570d64fd6a051e0441014387b89286ca&#34;&gt;Golang resize png images using different interpolations · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:img1&#34;&gt;&lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Image&lt;/code&gt; は interface 型で抽象化されている。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:img1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:register1&#34;&gt;厳密に言うと &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.RegisterFormat()&lt;/code&gt; 関数で登録する。例えば &lt;a href=&#34;https://golang.org/pkg/image/jpeg/&#34; title=&#34;jpeg - The Go Programming Language&#34;&gt;&lt;code&gt;image/jpeg&lt;/code&gt;&lt;/a&gt; パッケージの場合は &lt;code&gt;init()&lt;/code&gt; 関数内で &lt;a href=&#34;https://golang.org/pkg/image/&#34; title=&#34;image - The Go Programming Language&#34;&gt;&lt;code&gt;image&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.RegisterFormat()&lt;/code&gt; 関数が呼ばれている。このようなデザイン・パターンは &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;ではよく見られるので覚えておくとよいだろう（参考：&lt;a href=&#34;https://text.baldanders.info/golang/calculating-hash-value/&#34;&gt;Hash 値を計算するパッケージを作ってみた&lt;/a&gt;）。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:register1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>我々は「情報弱者」である - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/02/information-illiterate/" />
		<id>tag:text.Baldanders.info,2019-02-01:/remark/2019/02/information-illiterate/</id>
		<published>2019-02-01T23:17:14+09:00</published>
		<updated>2019-02-03T17:00:13+09:00</updated>
		<summary>今年はいよいよ本腰を入れて I2P とか検討してみるかねぇ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;先週の &lt;a href=&#34;https://www.ccc.co.jp/news/2018/20180121_005470.html&#34;&gt;CCC による「令状なしで官憲にユーザのプライバシーを売り飛ばします」宣言&lt;/a&gt;には苦笑してしまったが（もちろんTカードなど持ってないので他人事），やはり市場はユーザのプライバシーになど鼻くそほどの価値もおいてないようである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35131920/&#34;&gt;「モジラはChromiumを採用すべき」--マイクロソフト社員がツイート、反撃を受ける - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://9to5mac.com/2019/01/28/facetime-bug-hear-audio/&#34;&gt;Major iPhone FaceTime bug lets you hear the audio of the person you are calling ... before they pick up - 9to5Mac&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2019/01/iphone_facetime.html&#34;&gt;iPhone FaceTime Vulnerability - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/01/29/2019-01-28-nasty-facetime-bug-could-allows-others-to-eavesdrop-on-your-microphone-or-camera/&#34;&gt;FaceTimeのバグであなたのマイクロフォンとカメラを誰でも盗聴盗視可能に  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.technologyreview.jp/nl/a-security-bug-in-apples-facetime-lets-people-snoop-on-others/&#34;&gt;MIT Tech Review: アップルの「フェイスタイム」にバグ、応答前の音声がダダ漏れ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/01/31/2019-01-29-facebook-project-atlas/&#34;&gt;若者に金を払い彼らをスパイするアプリをインストールさせるFacebook  |  TechCrunch Japan&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/02/01/2019-01-31-apple-ban-google-data-app/&#34;&gt;Apple、Googleの証明書乱用を受け社内iOSアプリを使用禁止に  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35132111/&#34;&gt;グーグルの社内用iOSアプリも使用禁止に--規約違反で - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/02/01/2019-01-31-mess-with-the-cook/&#34;&gt;Apple、スパイ活動制裁の後Facebookの社内アプリを復活  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/02/01/2019-01-31-amazon-government-data-demands/&#34;&gt;Amazonのただでさえ透明でない透明性レポートがいっそう不透明になった  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/02/01/2019-01-30-cheap-internet-of-things-gadgets-betray-you-even-after-you-toss-them-in-the-trash/&#34;&gt;安物のIoT機器は、たとえゴミ箱に叩き込んだあとでも持ち主を裏切り続ける  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんちうか，ネット・メディアは何かのキャンペーンでもやってるのかな（笑）&lt;/p&gt;

&lt;p&gt;ユーザのプライバシーを重視すると&lt;a href=&#34;https://text.baldanders.info/remark/2018/06/web-browser-as-the-technical-debt/&#34; title=&#34;技術的負債としての Web ブラウザ&#34;&gt;嘯く Mozilla&lt;/a&gt; も&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1167068.html&#34;&gt;Mozilla、トラッキング防止ポリシーを公開 ～「Firefox」におけるプライバシー保護の姿勢を鮮明に - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とか言っているが，トラッキングを防止するならまず検索エンジンの既定を &lt;a href=&#34;https://duckduckgo.com/&#34;&gt;DuckDuckGo&lt;/a&gt; にすべきじゃないのかね。&lt;/p&gt;

&lt;p&gt;現在のインターネットにおいて情報は技術的ゲートキーパーとそれを利用するユーザとの間で非対称になっている。
その意味で私たちの殆どは「&lt;a href=&#34;https://text.baldanders.info/remark/2018/05/information-illiterate/&#34; title=&#34;「情報弱者」を再々定義する&#34;&gt;情報弱者&lt;/a&gt;」なのである。&lt;/p&gt;

&lt;p&gt;今年はいよいよ本腰を入れて &lt;a href=&#34;https://medium.com/@mhatta/-c08ec9de225d&#34; title=&#34;Speeding up your I2P network – Masayuki Hatta – Medium&#34;&gt;I2P とか&lt;/a&gt;検討してみるかねぇ。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;
    &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;&lt;img src=&#34;https://tatsu-zine.com/images/books/877/cover_s.jpg&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
    &lt;dl class=&#34;fn&#34;&gt;
      &lt;dt&gt;&lt;a href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;yomoyomo&lt;/dd&gt;
      &lt;dd&gt;達人出版会 2017-12-25&lt;/dd&gt;
      &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;
        &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
        &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
        &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
        &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
        &lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;
      &lt;/abbr&gt;&lt;/dd&gt;
    &lt;/dl&gt;
    &lt;p class=&#34;description&#34;&gt;&lt;a href=&#34;https://wirelesswire.jp/author/yomoyomo/&#34;&gt;WirelessWire News 連載&lt;/a&gt;の書籍化。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2019/01/infoshare2/&#34;&gt;こちら&lt;/a&gt;&lt;/p&gt;
    &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34;&gt;2018-12-31&lt;/abbr&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Amazon アイテム検索・情報取得ツール v0.2.1 をリリースした - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/01/amazon-item-v0_2_1-is-released/" />
		<id>tag:text.Baldanders.info,2019-01-27:/release/2019/01/amazon-item-v0_2_1-is-released/</id>
		<published>2019-01-27T17:45:46+09:00</published>
		<updated>2019-01-27T17:45:46+09:00</updated>
		<summary>amazon-item review コマンドは v0.2.0 で追加した。せめてバイナリをリリースしておこう。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;なんか Amakuri の作者の方が &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; について言及してくださっていて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/387&#34;&gt;Amakuriからの乗り換え先にこれは良いんじゃないか Part2 - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;公開しているツールとはいえ万人に優しい作りではないので，少々あせってたり。
せめてバイナリをリリースしておこう。&lt;/p&gt;

&lt;p&gt;というわけで &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; v0.2.1 をリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item/releases/tag/v0.2.1&#34;&gt;Release v0.2.1 · spiegel-im-spiegel/amazon-item · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各種プラットフォーム用の実行バイナリを用意したので &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;のビルド環境なしに利用できる。
コードには &lt;a href=&#34;https://raw.githubusercontent.com/spiegel-im-spiegel/amazon-item/master/LICENSE&#34;&gt;MIT ライセンスを付与&lt;/a&gt;している。
ソースコード，実行バイナリともに自由にご利用下さい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/01/amazon-product-advertising-api/&#34; title=&#34;しょうがないので Amazon アフィリエイト・リンク作成ツールを作ったですよ&#34;&gt;前の記事&lt;/a&gt;と重複するが，以下に使い方を簡単に説明しておこう。&lt;/p&gt;

&lt;h2 id=&#34;事前準備&#34;&gt;事前準備&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; を使うには Amazon Associate ID を持っていて Amazon &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;Product Advertising API&lt;/a&gt; の Access Key および Secret Key まで取得済みであることが前提となる。
&lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の各キーの取得方法はググると色々出てくるので，ここでは割愛する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.apitore.com/2016/08/01/amazon-product-advertising-api/&#34;&gt;AmazonのProduct Advertising APIの使い方 | Apitore blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://haniwaman.com/amazon-api-1/&#34;&gt;「Amazon API」の使い方を紹介します！最安値やランキング取得できるよ①－アソシエイトID（タグ）登録編－ | HPcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2019年1月23日より &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の&lt;a href=&#34;https://affiliate.amazon.co.jp/help/topic/t52/&#34; title=&#34;[重要] Product Advertising API 利用ポリシーの変更について&#34;&gt;利用ポリシーが変更&lt;/a&gt;になったため，状況によってキーが取得できないことがあるが悪しからず。
これについては&lt;a href=&#34;#api-policy&#34;&gt;後述&lt;/a&gt;する。&lt;/p&gt;

&lt;p&gt;必要な情報が取得できたら &lt;code&gt;$HOME&lt;/code&gt; ディレクトリ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:home1&#34;&gt;&lt;a href=&#34;#fn:home1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; に &lt;code&gt;.paapi.yaml&lt;/code&gt; ファイルを作って値を格納しておく（ファイル・アクセス管理に注意）。
たとえばこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;associate-tag: mytag-20
access-key: AKIAIOSFODNN7EXAMPLE
secret-key: 1234567890&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なお &lt;code&gt;associate-tag&lt;/code&gt; とは Amazon Associate ID のことである。&lt;/p&gt;

&lt;h2 id=&#34;amazon-item-のインストール&#34;&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; のインストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; の&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item/releases&#34; title=&#34;Releases · spiegel-im-spiegel/amazon-item&#34;&gt;リリースページ&lt;/a&gt;から各種プラットフォーム向けの書庫ファイルをダウンロードする。
たとえば Windows 64bit 版なら &lt;code&gt;amazon-item_0.2.1_Windows_64bit.zip&lt;/code&gt; をダウンロードすればよい。&lt;/p&gt;

&lt;p&gt;書庫ファイルを展開すると実行ファイル（&lt;code&gt;amazon-item&lt;/code&gt; または &lt;code&gt;amazon-item.exe&lt;/code&gt;）があるので，これを &lt;code&gt;$PATH&lt;/code&gt; の通っているディレクトリに置けば完了である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:path1&#34;&gt;&lt;a href=&#34;#fn:path1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; はコマンドライン・ツールなので各種 shell あるいはコマンド・プロンプト上で使用する。
試しに以下のコマンドを叩いて動作確認しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item version
amazon-item 0.2.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また &lt;code&gt;-h&lt;/code&gt; オプションで簡単な使い方が表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item -h
Searching Amazon Items, Powered by Product Advertising API

Usage:
  amazon-item [flags]
  amazon-item [command]

Available Commands:
  help        Help about any command
  lookup      Lookup Amazon Item
  review      Make review data for Amazon item
  search      Search Amazon Items
  version     Print the version number

Flags:
      --access-key string      Access Key ID
      --associate-tag string   Associate Tag
      --config string          config file (default $HOME/.paapi.yaml)
  -h, --help                   help for amazon-item
      --marketplace string     Marketplace (default &amp;#34;webservices.amazon.co.jp&amp;#34;)
      --secret-key string      Secret Access Key

Use &amp;#34;amazon-item [command] --help&amp;#34; for more information about a command.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なお，書庫ファイルに入っている &lt;code&gt;template/&lt;/code&gt; フォルダ内のファイルは出力整形用のテンプレートファイルのサンプルである。&lt;/p&gt;

&lt;h2 id=&#34;amazon-アイテムの検索&#34;&gt;Amazon アイテムの検索&lt;/h2&gt;

&lt;p&gt;キーワードをもとに Amazon アイテムを検索するには &lt;code&gt;amazon-item search&lt;/code&gt; コマンドを使う。
たとえば以下のような感じでキーワードを指定する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item search &amp;#34;数学ガール+フェルマーの最終定理+kindle&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;検索結果は JSON 形式で標準出力に出力される。&lt;/p&gt;

&lt;p&gt;たとえば &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; コマンドを使えば JSON 出力を任意にフィルタリング・整形できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item search &amp;#34;数学ガール+フェルマーの最終定理+kindle&amp;#34; | jq .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;またテンプレート・ファイルを指定することで任意のテキスト形式に整形することもできる。
たとえばサンプルの &lt;code&gt;template/item-list.md&lt;/code&gt; ファイルを使えば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item search -t template/item-list.md 数学ガール+フェルマーの最終定理+kindle
| ASIN | Title | Author | Binding | Publisher | PublicationDate | URL |
| ---- | ----- | ------ | ------- | --------- | --------------- | --- |
| B00AXUD4EQ | 数学ガール　フェルマーの最終定理　1 (MFコミックス　フラッパーシリーズ) |  春日旬 | Kindle版 | KADOKAWA / メディアファクトリー | 2012-11-01 | https://www.amazon.co.jp/exec/obidos/ASIN/B00AXUD4EQ/mytag-20 |
| B00I8AT1CM | 数学ガール／フェルマーの最終定理 |  結城 浩 | Kindle版 | SBクリエイティブ | 2008-07-29 | https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20 |
| B00DONBQAI | 数学ガール　フェルマーの最終定理　3 (MFコミックス　フラッパーシリーズ) |  春日 旬 | Kindle版 | KADOKAWA / メディアファクトリー | 2013-06-27 | https://www.amazon.co.jp/exec/obidos/ASIN/B00DONBQAI/mytag-20 |
| B00AXUD4F0 | 数学ガール　フェルマーの最終定理　2 (MFコミックス　フラッパーシリーズ) |  春日旬 | Kindle版 | KADOKAWA / メディアファクトリー | 2012-11-01 | https://www.amazon.co.jp/exec/obidos/ASIN/B00AXUD4F0/mytag-20 |
| B009T4TN7Y | 数学ガール　上 (MFコミックス　フラッパーシリーズ) |  日坂 水柯 結城 浩 | Kindle版 | KADOKAWA / メディアファクトリー | 2012-09-01 | https://www.amazon.co.jp/exec/obidos/ASIN/B009T4TN7Y/mytag-20 |
| B009T4TNB0 | 数学ガール　下 (MFコミックス　フラッパーシリーズ) |  日坂 水柯 結城 浩 | Kindle版 | KADOKAWA / メディアファクトリー | 2012-09-01 | https://www.amazon.co.jp/exec/obidos/ASIN/B009T4TNB0/mytag-20 |
| B0756XMQBN | 数学ガール フェルマーの最終定理 |  春日旬 春日 旬 | Kindle版 |  |  | https://www.amazon.co.jp/exec/obidos/ASIN/B0756XMQBN/mytag-20 |
| B00ZEIEY1E | [まとめ買い] 数学ガール　フェルマーの最終定理（コミックフラッパー） |  春日旬 春日 旬 | Kindle版 |  |  | https://www.amazon.co.jp/exec/obidos/ASIN/B00ZEIEY1E/mytag-20 |&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように markdown の表形式で出力する。
ちなみに &lt;code&gt;template/item-list.md&lt;/code&gt; ファイルの中身は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;| ASIN | Title | Author | Binding | Publisher | PublicationDate | URL |
| ---- | ----- | ------ | ------- | --------- | --------------- | --- |
{{ range .Items }}| {{ .ASIN }} | {{ .ItemAttributes.Title }} | {{ range .ItemAttributes.Author }} {{ . }}{{ end }} | {{ .ItemAttributes.Binding }} | {{ .ItemAttributes.Publisher }} | {{ .ItemAttributes.PublicationDate }} | {{ .URL }} |
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;テンプレート制御は &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;の標準パッケージ &lt;a href=&#34;https://golang.org/pkg/text/template/&#34; title=&#34;template - The Go Programming Language&#34;&gt;&lt;code&gt;text/template&lt;/code&gt;&lt;/a&gt; を利用している。
文法にちょっとクセがあるが，最近はググれば色々と情報が出てくるのでサンプルと併せて各自でチューニングしてほしい。&lt;/p&gt;

&lt;p&gt;なお文字エンコーディングは UTF-8 を前提としている&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:char1&#34;&gt;&lt;a href=&#34;#fn:char1&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。
ご注意を。&lt;/p&gt;

&lt;h2 id=&#34;レビュー用のメタデータを作成する&#34;&gt;レビュー用のメタデータを作成する&lt;/h2&gt;

&lt;p&gt;個々の Amazon アイテムの情報を取得するには &lt;code&gt;amazon-item lookup&lt;/code&gt; または &lt;code&gt;amazon-item review&lt;/code&gt; コマンドを使う&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:rv1&#34;&gt;&lt;a href=&#34;#fn:rv1&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。
両者の機能はよく似ているが &lt;code&gt;amazon-item review&lt;/code&gt; コマンドはレビュー用の情報をセットできるのが特徴である。
今回は &lt;code&gt;amazon-item review&lt;/code&gt; コマンドを使ってレビューを含む Amazon アフィリエイト・リンクを作成する方法を紹介する。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;amazon-item review&lt;/code&gt; コマンドの使い方は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item review -h
Make review data for Amazon item, lookup item by ItemLookup Method

Usage:
  amazon-item review [flags] description

Flags:
  -h, --help                    help for review
  -p, --id-type string          IdType (default &amp;#34;ASIN&amp;#34;)
  -d, --item-id string          ItemId
  -r, --rating int              Rating of product
  -g, --response-group string   ResponseGroup (default &amp;#34;Images,ItemAttributes,Small&amp;#34;)
      --review-date string      Date of review
  -t, --template string         Template file

Global Flags:
      --access-key string      Access Key ID
      --associate-tag string   Associate Tag
      --config string          config file (default $HOME/.paapi.yaml)
      --marketplace string     Marketplace (default &amp;#34;webservices.amazon.co.jp&amp;#34;)
      --secret-key string      Secret Access Key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;たとえば ASIN コード &lt;code&gt;B00I8AT1CM&lt;/code&gt; の情報を出力するならコマンドラインを&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item review -d B00I8AT1CM -r 4 &amp;#34;数学ガールめっさ面白い！&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとする。
これも出力は JSON 形式だがテンプレート・ファイルを指定して出力を整形できる。
たとえばサンプルの &lt;code&gt;template/review.html&lt;/code&gt; ファイルを使うと&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item review -d B00I8AT1CM -r 4 -t template/review.html &amp;#34;数学ガールめっさ面白い！&amp;#34;
&amp;lt;div class=&amp;#34;hreview&amp;#34;&amp;gt;
  &amp;lt;div class=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;a class=&amp;#34;item url&amp;#34; href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;https://images-fe.ssl-images-amazon.com/images/I/41vT2D6sERL._SL160_.jpg&amp;#34; width=&amp;#34;113&amp;#34; alt=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;dl class=&amp;#34;fn&amp;#34;&amp;gt;
    &amp;lt;dt&amp;gt;&amp;lt;a href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;数学ガール／フェルマーの最終定理&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;
	&amp;lt;dd&amp;gt;結城 浩&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;SBクリエイティブ 2008-07-29 (Release 2014-03-12)&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;eBooks Kindle版&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;ASIN: B00I8AT1CM&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;評価&amp;lt;abbr class=&amp;#34;rating fa-sm&amp;#34; title=&amp;#34;4&amp;#34;&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;far fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/abbr&amp;gt;&amp;lt;/dd&amp;gt;
  &amp;lt;/dl&amp;gt;
  &amp;lt;p class=&amp;#34;description&amp;#34;&amp;gt;数学ガールめっさ面白い！&amp;lt;/p&amp;gt;
  &amp;lt;p class=&amp;#34;powered-by&amp;#34; &amp;gt;reviewed by &amp;lt;a href=&amp;#39;#maker&amp;#39; class=&amp;#39;reviewer&amp;#39;&amp;gt;mytag-20&amp;lt;/a&amp;gt; on &amp;lt;abbr class=&amp;#34;dtreviewed&amp;#34; title=&amp;#34;2019-01-27&amp;#34;&amp;gt;2019-01-27&amp;lt;/abbr&amp;gt; (powered by &amp;lt;a href=&amp;#34;https://github.com/spiegel-im-spiegel/amazon-item&amp;#34; &amp;gt;amazon-item&amp;lt;/a&amp;gt; v0.2.1)&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じになる。
これを Web ページで表示させるとこんな感じになる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:css1&#34;&gt;&lt;a href=&#34;#fn:css1&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41vT2D6sERL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&#34;&gt;数学ガール／フェルマーの最終定理&lt;/a&gt;&lt;/dt&gt;
	&lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2008-07-29 (Release 2014-03-12)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B00I8AT1CM&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;数学ガールめっさ面白い！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;mytag-20&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-01-27&#34;&gt;2019-01-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.1)&lt;/p&gt;
&lt;/div&gt;

&lt;figcaption&gt;amazon-item 出力例&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;レビューの description は標準入力から指定することもできる。
たとえば以下のように cat (Windows なら type) コマンドの出力をパイプで繋いで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cat B00I8AT1CM.txt
数学ガールめっさ面白い！

$ cat B00I8AT1CM.txt | amazon-item review -d B00I8AT1CM -r 4 --review-date 2019-01-27
&amp;lt;div class=&amp;#34;hreview&amp;#34;&amp;gt;
  &amp;lt;div class=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;a class=&amp;#34;item url&amp;#34; href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;https://images-fe.ssl-images-amazon.com/images/I/41vT2D6sERL._SL160_.jpg&amp;#34; width=&amp;#34;113&amp;#34; alt=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;dl class=&amp;#34;fn&amp;#34;&amp;gt;
    &amp;lt;dt&amp;gt;&amp;lt;a href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;数学ガール／フェルマーの最終定理&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;
	&amp;lt;dd&amp;gt;結城 浩&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;SBクリエイティブ 2008-07-29 (Release 2014-03-12)&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;eBooks Kindle版&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;ASIN: B00I8AT1CM&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;評価&amp;lt;abbr class=&amp;#34;rating fa-sm&amp;#34; title=&amp;#34;4&amp;#34;&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;fas fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;#34;far fa-star&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/abbr&amp;gt;&amp;lt;/dd&amp;gt;
  &amp;lt;/dl&amp;gt;
  &amp;lt;p class=&amp;#34;description&amp;#34;&amp;gt;数学ガールめっさ面白い！&amp;lt;/p&amp;gt;
  &amp;lt;p class=&amp;#34;powered-by&amp;#34; &amp;gt;reviewed by &amp;lt;a href=&amp;#39;#maker&amp;#39; class=&amp;#39;reviewer&amp;#39;&amp;gt;mytag-20&amp;lt;/a&amp;gt; on &amp;lt;abbr class=&amp;#34;dtreviewed&amp;#34; title=&amp;#34;2019-01-27&amp;#34;&amp;gt;2019-01-27&amp;lt;/abbr&amp;gt; (powered by &amp;lt;a href=&amp;#34;https://github.com/spiegel-im-spiegel/amazon-item&amp;#34; &amp;gt;amazon-item&amp;lt;/a&amp;gt; v0.2.1)&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとする。
これで Amazon アイテムデータの作成をバッチ処理化できる。&lt;/p&gt;

&lt;p&gt;本当は SQLite か何かでデータベース化できればいいんだろうけど，私自身がそんなに頻繁に利用するツールではないので，それは後回しということで。&lt;/p&gt;

&lt;h2 id=&#34;api-policy&#34;&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; 利用ポリシーに注意&lt;/h2&gt;

&lt;p&gt;最初に述べたように2019年1月23日より &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の利用ポリシーが変更になった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/help/topic/t52/&#34;&gt;[重要] Product Advertising API 利用ポリシーの変更について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事から少し引用すると&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;初期リクエスト可能数 : 1日あたり 8,640リクエスト（API利用開始より60日間）&lt;/li&gt;
&lt;li&gt;PA-APIより取得した商品リンクより発生した、過去30日間の発送済み商品売上$0.05（日本円で約5円）ごとに1リクエスト追加&lt;/li&gt;
&lt;li&gt;1日の最大リクエスト可能数は、1日あたり864,000リクエスト&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、発送済み商品売上が過去30日以内に発生していない場合、PA-APIをご利用いただけなくなる恐れがございます。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/help/topic/t52/&#34;&gt;Product Advertising API 利用ポリシーの変更について&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;となるらしい&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:wp1&#34;&gt;&lt;a href=&#34;#fn:wp1&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。
また商品へのリンク URL についても &lt;code&gt;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&lt;/code&gt; のような従来の形式ではなく &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; が吐き出す長ったらしい URL を使う必要がある。&lt;/p&gt;

&lt;p&gt;先程のテンプレート &lt;code&gt;template/item-list.md&lt;/code&gt; を例にすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;| ASIN | Title | Author | Binding | Publisher | PublicationDate | URL |
| ---- | ----- | ------ | ------- | --------- | --------------- | --- |
{{ range .Items }}| {{ .ASIN }} | {{ .ItemAttributes.Title }} | {{ range .ItemAttributes.Author }} {{ . }}{{ end }} | {{ .ItemAttributes.Binding }} | {{ .ItemAttributes.Publisher }} | {{ .ItemAttributes.PublicationDate }} | {{ .URL }} |
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;{{ range .Items }} ... {{ .URL }} ... {{ end }}&lt;/code&gt; の部分で &lt;code&gt;{{ .URL }}&lt;/code&gt; ではなく &lt;code&gt;{{ .DetailPageURL }}&lt;/code&gt; を使う必要があるわけだ。&lt;/p&gt;

&lt;p&gt;うちのサイトは積極的に商売をしているわけではなく，書影などのメタデータを合法的に利用したいだけなので「発送済み商品売上が過去30日以内に発生していない」と &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の利用が停止されるというのは結構厳しい条件だったり&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:aa1&#34;&gt;&lt;a href=&#34;#fn:aa1&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;また Amazon アソシエイトや &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の利用資格を一度剥奪されると再取得が難しいみたいな話も聞く。
ホンマ個人ユーザにとっては面倒なことである。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/331&#34;&gt;Amakuriからの乗り換え先に、Amazon公式のWordPressプラグイン「Amazon Associates Link Builder」が良さそう - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5-AWS%E8%AA%8D%E5%AE%9A-%E3%82%BD%E3%83%AA%E3%83%A5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88-%E3%82%A2%E3%82%BD%E3%82%B7%E3%82%A8%E3%82%A4%E3%83%88%E6%95%99%E7%A7%91%E6%9B%B8-%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-ebook/dp/B07M7S9GDL?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B07M7S9GDL&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/512lfKHsI%2BL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5-AWS%E8%AA%8D%E5%AE%9A-%E3%82%BD%E3%83%AA%E3%83%A5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%88-%E3%82%A2%E3%82%BD%E3%82%B7%E3%82%A8%E3%82%A4%E3%83%88%E6%95%99%E7%A7%91%E6%9B%B8-%E5%BE%B9%E5%BA%95%E6%94%BB%E7%95%A5%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-ebook/dp/B07M7S9GDL?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B07M7S9GDL&#34;&gt;徹底攻略 AWS認定 ソリューションアーキテク
ト – アソシエイト教科書 徹底攻略シリーズ&lt;/a&gt;&lt;/dt&gt;
        &lt;dd&gt;鳥谷部 昭寛, 宮口 光平, 菖蒲淳司&lt;/dd&gt;
    &lt;dd&gt;インプレス 2019-01-18 (Release 2019-01-18)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B07M7S9GDL&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-01-27&#34;&gt;2019-01-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:home1&#34;&gt;Windows の場合は &lt;code&gt;%USERPROFILE%&lt;/code&gt; フォルダ直下に &lt;code&gt;.paapi.yaml&lt;/code&gt; ファイルを置くとよい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:home1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:path1&#34;&gt;Windows で &lt;code&gt;PATH&lt;/code&gt; 環境変数を参照・設定するには&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1805/11/news035.html&#34; title=&#34;Windows 10でPath環境変数を設定／編集する：Tech TIPS - ＠IT&#34;&gt;こちらのページ&lt;/a&gt;を参考にするとよいだろう。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:path1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:char1&#34;&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; が吐き出す XML データが UTF-8 というのもあるし &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;のコード自体が UTF-8 を前提にしているので他の文字エンコーディングを扱うのは&lt;a href=&#34;https://text.baldanders.info/golang/transform-character-encoding/&#34; title=&#34;文字エンコーディング変換&#34;&gt;少し面倒&lt;/a&gt;なのですよ。そういえば以前，遊びで&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/like-nkf/&#34;&gt;「nkf っぽいなにか」を作った&lt;/a&gt;な。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:char1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:rv1&#34;&gt;&lt;code&gt;amazon-item review&lt;/code&gt; コマンドは v0.2.0 で追加した。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:rv1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:css1&#34;&gt;スタイルシートは&lt;a href=&#34;https://text.baldanders.info/css/addon.css&#34;&gt;こちら&lt;/a&gt;。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:css1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:wp1&#34;&gt;WordPress プラグインの Amazon Link Builder は制限の例外らしい。よく分からない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:wp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:aa1&#34;&gt;Amazon アソシエイト ID があるなら &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; が利用できなくてもアソシエイト・ツールバー等が使えるそうだが，今更あんなの使えるかい。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:aa1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>新減塩生活 - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/01/low-salt-diet-life/" />
		<id>tag:text.Baldanders.info,2019-01-26:/remark/2019/01/low-salt-diet-life/</id>
		<published>2019-01-26T22:19:11+09:00</published>
		<updated>2019-01-26T22:19:11+09:00</updated>
		<summary>でも，たまには「おおごっつぉ」もいいぢゃない。トータルで減塩できていればOK。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;通院する病院（厳密には医院だが）がかわって改めて色々と検査してもらい，かかりつけ医と相談した結果，降圧剤を一段軽いものにすることにした。
利尿作用が少ないタイプだそうで，これでシモの不安が少し解消された（笑）&lt;/p&gt;

&lt;p&gt;その代わり，改めて塩分コントロールに留意するよう釘を差された。
&lt;a href=&#34;https://baldanders.info/spiegel/remark/archives/000042.shtml&#34; title=&#34;減塩生活 -- 戯れ言++&#34;&gt;以前はかなり気を使っていた&lt;/a&gt;が近年は忘れてたな。
ちうわけで「食塩1グラム相当の調味料」の一覧を再掲載しておこう。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;調味料&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;食塩（グラム）&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;カロリー（Kcal）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;塩&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;醤油&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;減塩醤油&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;中味噌&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;白味噌&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ウスターソース&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;トマトケチャップ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;味付けポン酢&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;めんつゆ（2～3倍希釈）&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;コンソメ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;和風だしの素&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;―&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;マヨネーズ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;300&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;フレンチドレッシング&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;130&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;醤油入りドレッシング&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;なお，この資料を貰ったのは10年以上も前なので数値自体は昔と今では異なっていると思う。
目安程度に考えていただければありがたい。&lt;/p&gt;

&lt;p&gt;これを見て思い出したが，いわゆる「かける調味料」として醤油はあまり使わなくなってしまった。
代わりによく使うのが味付けポン酢だったり。
あと，めんつゆは煮物とかで昔から普通に使っている。
万能調味料（笑）&lt;/p&gt;

&lt;p&gt;減塩生活では旨味と酸味を上手に使うのがコツである。
あと無理をしないこと（続かないから）。
たまには「おおごっつぉ」もいいぢゃない。
トータルで減塩できていればOK。&lt;/p&gt;

&lt;p&gt;今は減塩調味料とか普通に売ってるし，醤油とかでも使いすぎないよう容器が工夫されてたりする。
いい世の中になったよなぁ。&lt;/p&gt;

&lt;p&gt;そういや加工食品の原材料表示の切り替え猶予まであと1年なんだっけ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gov-online.go.jp/useful/article/201505/1.html&#34;&gt;安全・健康のため食品を選びやすく！　新しい食品表示のルールが始まります | 暮らしに役立つ情報 | 政府広報オンライン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;企業側は大変と聞いてるけど，みんなにとっていい方向に向かうといいねぇ。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Go 1.11.5 のリリース 【セキュリティ・アップデート】 - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/01/go-1_11_5-is-released/" />
		<id>tag:text.Baldanders.info,2019-01-26:/release/2019/01/go-1_11_5-is-released/</id>
		<published>2019-01-26T19:08:12+09:00</published>
		<updated>2019-01-26T19:08:12+09:00</updated>
		<summary>今回は楕円曲線暗号まわりの脆弱性が修正されている。アップデートは計画的に。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;コンパイラの 1.11.5 および 1.10.8 がリリースされた。
今回はセキュリティ・アップデートを含んでいるので必ずアップデートすること。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#%21topic/golang-announce/mVeX35iXuSw&#34;&gt;[security] Go 1.11.5 and Go 1.10.8 are released - Google group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/go/issues/29903&#34;&gt;crypto/elliptic: CPU DoS vulnerability affecting P-521 and P-384 · Issue #29903 · golang/go · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下のインシデントに対して修正が行われている。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;This DoS vulnerability in the crypto/elliptic implementations of the P-521 and P-384 elliptic curves may let an attacker craft inputs that consume excessive amounts of CPU.&lt;br&gt;
These inputs might be delivered via TLS handshakes, X.509 certificates, JWT tokens, ECDH shares or ECDSA signatures. In some cases, if an ECDH private key is reused more than once, the attack can also lead to key recovery.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/forum/#%21topic/golang-announce/mVeX35iXuSw&#34;&gt;Go 1.11.5 and Go 1.10.8 are released&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;想定される影響&#34;&gt;想定される影響&lt;/h2&gt;

&lt;h3 id=&#34;cve-2019-6486-https-nvd-nist-gov-vuln-detail-cve-2019-6486&#34;&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2019-6486&#34;&gt;CVE-2019-6486&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&lt;/code&gt; (深刻度7.5) :&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本評価基準&lt;/th&gt;
&lt;th&gt;評価値&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;攻撃元区分&lt;/td&gt;
&lt;td&gt;ネットワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;攻撃条件の複雑さ&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;必要な特権レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ユーザ関与レベル&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スコープ&lt;/td&gt;
&lt;td&gt;変更なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;機密性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完全性への影響&lt;/td&gt;
&lt;td&gt;なし&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;可用性への影響&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;可用性への影響が高いとしているが，とりあえず鍵の漏洩とかは心配しなくていい？&lt;/p&gt;

&lt;p&gt;アップデートは計画的に。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>さくらのレンタルサーバ上で Hugo によるサイト管理を行う - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/01/sakura-and-hugo/" />
		<id>tag:text.Baldanders.info,2019-01-21:/remark/2019/01/sakura-and-hugo/</id>
		<published>2019-01-21T23:03:56+09:00</published>
		<updated>2019-01-21T23:03:56+09:00</updated>
		<summary>サーバ側で動く CMS なんか今さら使う気にもならないし，でもこれで多少は楽にサイト管理ができそうである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;前回， &lt;a href=&#34;https://text.baldanders.info/remark/2019/01/escape-from-flickr/&#34; title=&#34;Flickr から写真を引き揚げました&#34;&gt;Flickr から引き揚げた写真を展示するためにサイトを公開した話&lt;/a&gt;をしたが，&lt;a href=&#34;https://photo.baldanders.info/&#34; title=&#34;photo.Baldanders.info&#34;&gt;このサイト&lt;/a&gt;は静的サイト・ジェネレータである &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; で管理を行っている。
今回は「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上で &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; によるサイト管理を行う手順について覚え書きとして記しておく。&lt;/p&gt;

&lt;h2 id=&#34;さくらのレンタルサーバ-について&#34;&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」について&lt;/h2&gt;

&lt;p&gt;まず「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」でサイトを公開するまでの手順については以下のページが参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rinopo/sakura-init&#34;&gt;rinopo/sakura-init: さくらのレンタルサーバを借りたとき最初にすること&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;リンク先の記事は特にマルチドメインでサイトを運用する際に有用な情報となるだろう。
今回の記事では &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ直下にサイトを公開する場合の手順について書くが，マルチドメインでもそれほど変わらないはずである。&lt;/p&gt;

&lt;p&gt;前提として「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上で &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; が動作する必要がある。
昔は自前で &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; をインストールする必要があったが，今は予め用意されているようである。
ただし，私が利用しているサーバではエラく古いバージョンだった（なんで？）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ which git
/usr/local/bin/git

$ git version
git version 2.7.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;しかも git-submodule すら入っていない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git submodule version
fatal: git was built without support for git-submodule (NO_PERL=1).&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで，サイト管理用のリポジトリを構成する場合には注意が必要である。&lt;/p&gt;

&lt;h2 id=&#34;hugo-用にベア-リポジトリを作成する&#34;&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用にベア・リポジトリを作成する&lt;/h2&gt;

&lt;p&gt;まずは &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用にベア・リポジトリを「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」上に作成する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git init --bare ~/repos/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;~/repos/hugo-env.git&lt;/code&gt; ディレクトリに &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 用のベア・リポジトリが作成される。
当然ながら &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ以下には作らないこと。&lt;/p&gt;

&lt;p&gt;このベア・リポジトリをリモートから clone するには以下のコマンドラインでよい（&lt;code&gt;example.com&lt;/code&gt; ドメインで構成している場合&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sakura1&#34;&gt;&lt;a href=&#34;#fn:sakura1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[client] $ git clone ssh://example.com/home/username/repos/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;あとは任意の環境でコンテンツを記述できる。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; にはサーバモード（簡易サーバとして構成することも可能）があるので&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[client] $ hugo server -D -w&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとするとよい。
&lt;code&gt;-D&lt;/code&gt; (または &lt;code&gt;--buildDrafts&lt;/code&gt;) オプションはドラフト・ページを含めてビルドしてくれる。
また &lt;code&gt;-w&lt;/code&gt; (または &lt;code&gt;--watch&lt;/code&gt;) オプションを付けておけば &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; 環境内のファイルが更新されるたびに自動的にリビルドしてくれる。&lt;/p&gt;

&lt;p&gt;サーバモードは本当に便利で，特に &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; のサーバモードは一瞬でサイトを更新してくれるので，ブラウザで出来上がりをリアルタイムで見ながら編集できる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:ll1&#34;&gt;&lt;a href=&#34;#fn:ll1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
これのおかげでテキスト・エディタの markdown previewer 機能が要らなくなりました（笑）&lt;/p&gt;

&lt;h2 id=&#34;サーバ側に-deploy-用のリポジトリを作成する&#34;&gt;サーバ側に Deploy 用のリポジトリを作成する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; でビルドしたコンテンツを deploy できるように，サーバ側でリポジトリを clone する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git clone ~/hugo-env.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これも当然だが &lt;code&gt;~/www/&lt;/code&gt; ディレクトリ以下には作らないこと。&lt;/p&gt;

&lt;p&gt;更に &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の実行バイナリを &lt;code&gt;$PATH&lt;/code&gt; の通っているディレクトリに入れる。
&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の実行バイナリは&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; title=&#34;Releases · gohugoio/hugo&#34;&gt;リリースページ&lt;/a&gt;で取得できる。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」は FreeBSD で構成されているので &lt;code&gt;hugo_x.xx_FreeBSD-64bit.tar.gz&lt;/code&gt; (&lt;code&gt;x.xx&lt;/code&gt; はバージョン番号) をダウンロードし中にある &lt;code&gt;hugo&lt;/code&gt; ファイルを使えばよい。
Go 製ツールはシングル・バイナリで動くのが素敵。&lt;/p&gt;

&lt;p&gt;Build &amp;amp; deploy は &lt;code&gt;hugo&lt;/code&gt; コマンド一発でできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd ~/hugo-env
$ hugo -d ~/www&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでビルドした結果をまるっと &lt;code&gt;~/www/&lt;/code&gt; ディレクトリに出力してくれる。&lt;/p&gt;

&lt;h2 id=&#34;deploy-の自動化&#34;&gt;Deploy の自動化&lt;/h2&gt;

&lt;p&gt;コンテンツを修正するたびにサーバに入って手動で pull &amp;amp; build &amp;amp; deploy というのも芸がないので，ベア・リポジトリに対して自動化の設定を行う。&lt;/p&gt;

&lt;p&gt;具体的にはベア・リポジトリの &lt;code&gt;hooks/&lt;/code&gt; ディレクトリに以下の内容で &lt;code&gt;post-update&lt;/code&gt; を追加する（実行権限の付与を忘れないこと）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /home/username/hugo-env &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;unset&lt;/span&gt; GIT_DIR
git pull origin master &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
hugo -d /home/username/www&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでリモートからの push でベア・リポジトリの内容が更新されるたびに上の shell スクリプトが走って deploy まで自動的に行ってくれる。
今回作成した &lt;a href=&#34;https://photo.baldanders.info/&#34;&gt;photo.Baldanders.info&lt;/a&gt; は regular page で2,900ページ余りあるのだが，上書き更新なら5秒前後でビルドが完了する。
不安なら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo -d /home/username/www &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/nul &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とかでもいいかも。&lt;/p&gt;

&lt;p&gt;本当はコンテナを起動して云々とかやれば CI (Continuous Integration) ぽくてカッコよかったかも知れないが，この構成でも特に不自由しないし，問題ないだろう。&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://www.sakura.ne.jp/&#34; title=&#34;さくらのレンタルサーバ | 高速・安定WordPressなら！無料2週間お試し&#34;&gt;さくらのレンタルサーバ&lt;/a&gt;」はスタンダード・プランでもストレージが100GBもあるので「もっとリッチに使えれば」と常々思っていたが，&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/cms/&#34;&gt;サーバ側で動く CMS なんか今さら使う気にもならない&lt;/a&gt;し，でもこれで多少は楽にサイト管理ができそうである。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wdkk.co.jp/lab/hugo/&#34;&gt;Hugoサイト構築 | Watanabe-DENKI Inc. 渡辺電気株式会社&lt;/a&gt; : &lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; の基本的な使い方はこちらがオススメ&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/hugo/&#34;&gt;ゼロから始める Hugo&lt;/a&gt; : 拙文ご容赦&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://utwang.io/2013/01/04/jekyll-on-sakura/&#34;&gt;さくらのレンタルサーバ上でJekyllブログを公開 | Dev SandBox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- eof --&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:sakura1&#34;&gt;独自ドメインを使わない場合は &lt;code&gt;ssh://username@username.sakura.ne.jp/home/...&lt;/code&gt; のようにドメイン名の前に必ず「ユーザ名@」を付記すること。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sakura1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:ll1&#34;&gt;ブラウザ側は &lt;a href=&#34;https://github.com/livereload/livereload-js&#34; title=&#34;livereload/livereload-js: LiveReload JavaScript code that communicates with the server and implements reloading&#34;&gt;livereload-js&lt;/a&gt; で自動的に更新しているようだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:ll1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Flickr から写真を引き揚げました - remark</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/01/escape-from-flickr/" />
		<id>tag:text.Baldanders.info,2019-01-20:/remark/2019/01/escape-from-flickr/</id>
		<published>2019-01-20T19:16:46+09:00</published>
		<updated>2019-01-21T20:48:11+09:00</updated>
		<summary>ただの「写真置き場」なら自分のところに置いておけばいいぢゃん，と気がついた。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;私にとって Web 2.0 そして SaaS を象徴するのは blog でも SNS でもなくて &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; なのですよ。
更に言えば &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; は Creative Commons の「&lt;a href=&#34;https://mag.osdn.jp/03/09/29/0955208&#34; title=&#34;クリエイティヴ・コモンズに関する悲観的な見解 | OSDN Magazine&#34;&gt;ブートストラップ問題&lt;/a&gt;」を解消した功労者のひとつでもある。&lt;/p&gt;

&lt;p&gt;当時は私も Pro 会員だった。
それも今は昔の話。&lt;/p&gt;

&lt;p&gt;昨年11月に &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; から無料会員に対し，アップできる写真を最大1,000枚に制限する旨のアナウンスがあった（CC Licenses 下で既に公開しているものについては執行猶予あり）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.flickr.net/en/2018/11/01/changing-flickr-free-accounts-1000-photos/&#34;&gt;Why we’re changing Flickr  free accounts | Flickr Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2018/11/03/2018-11-02-flickrs-new-business-model-could-see-works-deleted-from-creative-commons/&#34;&gt;Flickrの新しいビジネスモデルでCreative Commonsの作品は消されるのか  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techcrunch.com/2018/11/07/flickr-says-it-wont-delete-creative-commons-photos/&#34;&gt;Flickr says it won’t delete Creative Commons photos – TechCrunch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;正直に言って Pro 会員に戻ろうか悩んだ。&lt;/p&gt;

&lt;p&gt;確かに今の私は（色々あって）ビンボーだけど，ゼロ年代からお世話になっているサービスだし，必要であるならお金を払うことに吝かではない。
でも現時点で &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; にお金を払って何が得られるか考えたときに，写真の枚数以外に何もないことに気がついた。&lt;/p&gt;

&lt;p&gt;現在の殆どの Web サービスは，人と情報をサービス内部に囲い込むように構成されている。
でも写真共有サービスはサービスを横断して，息をするように共有できなければただの「写真置き場」になってしまう。
ただの「写真置き場」なら自分のところに置いておけばいいぢゃんか（今更&lt;code&gt;w&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;ちうわけで &lt;a href=&#34;https://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; の写真を引き揚げて自サイトに写真置き場を作りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://photo.baldanders.info/&#34;&gt;photo.Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;写真の画像データとメタデータ（JSON 形式）については昨年のうちにバックアップ済みだったのだが，メタデータからページをおこすための変換ツール作成（なにせ2,600枚以上あるのだ）に着手するまでに私事で色々あり過ぎてすっかり遅くなってしまった。&lt;/p&gt;

&lt;p&gt;変換ツールについても最初はなるべく汎用的に作ってオープンソースで公開しようと思ったが個人レベルのチューニングを上手く外だしにできなかった。
幸いなことに GitHub が無料ユーザにもプライベート・リポジトリを開放してくれたので，そっち側にリポジトリを作って作業した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.github.com/2019-01-07-new-year-new-github/&#34;&gt;New year, new GitHub: Announcing unlimited free private repos and unified Enterprise offering | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2019/01/08/2019-01-07-github-free-users-now-get-unlimited-private-repositories/&#34;&gt;朗報、GitHub無料ユーザーも無制限にプライベートリポジトリを使えるようになる  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/19/github_4.html&#34;&gt;GitHub、無料ユーザーもプライベートリポジトリを無制限に作成可能に － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1161195.html&#34;&gt;“GitHub”の非公開リポジトリ、無償プランでも無制限に ～新しい料金プランが発表 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なので変換ツールは非公開です。
ゴメンペコン。&lt;/p&gt;

&lt;p&gt;これでようやく肩の荷が下りたよ。
今後は呑気に本家サイトの再構築に取り掛かるとしよう。
今回の作業で再構築に必要なものとか大体わかったので，今度はもう少し上手くやる。&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>しょうがないので Amazon アフィリエイト・リンク作成ツールを作ったですよ - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/01/amazon-product-advertising-api/" />
		<id>tag:text.Baldanders.info,2019-01-13:/release/2019/01/amazon-product-advertising-api/</id>
		<published>2019-01-13T22:45:09+09:00</published>
		<updated>2019-01-27T17:45:46+09:00</updated>
		<summary>ただし CLI (Command-Line Interface) ツール。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;昨年「&lt;a href=&#34;https://text.baldanders.info/remark/2018/10/amazon-affiliate-with-amakuri/&#34;&gt;Amazon アフィリエイトリンク作成サービスを Amakuri へ移行&lt;/a&gt;」したと書いたのだが Amazon の締めつけが厳しくて閉鎖するらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/159&#34;&gt;【Amakuri】2019年01月16日のPA-API利用ポリシー変更で気に掛かること - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/194&#34;&gt;【Amakuri】Amakuri は来年1月16日以降使えなくなるだろうという話 - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/235&#34;&gt;【Amakuri】来年15日にAmakuriは閉鎖いたします - dadadadoneのメモ帳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;何してくれやがるですか Amazon さん &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;しょうがないので，自前で Amazon アフィリエイト・リンク作成ツールを作ったですよ。
ただし CLI (Command-Line Interface) ツール。
下手にサービスなんか作って BAN されるの嫌だし，なにより Web サービスは管理・運用が面倒臭い。&lt;/p&gt;

&lt;h2 id=&#34;ツールのインストール&#34;&gt;ツールのインストール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34;&gt;GitHub - spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだテストもしていない出来たてホヤホヤ（笑） まぁ，でも，ひと通りは動く。&lt;/p&gt;

&lt;p&gt;バイナリを用意していないので，インストールには &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt; 1.11 以降のビルド環境（git を含む）が必要。
適当なフォルダで以下のコマンドを実行すれば &lt;code&gt;$GOPATH/bin&lt;/code&gt; フォルダにインストールされる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ export GO111MODULE=on
$ go mod init tools
$ go get github.com/spiegel-im-spiegel/amazon-item@latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一応，動作確認。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item -h
Searching Amazon Items, Powered by Product Advertising API

Usage:
  amazon-item [flags]
  amazon-item [command]

Available Commands:
  help        Help about any command
  lookup      Lookup Amazon Item
  search      Search Amazon Items
  version     Print the version number

Flags:
      --access-key string      Access Key ID
      --associate-tag string   Associate Tag
      --config string          config file (default $HOME/.paapi.yaml)
  -h, --help                   help for amazon-item
      --marketplace string     Marketplace (default &amp;#34;webservices.amazon.co.jp&amp;#34;)
      --secret-key string      Secret Access Key

Use &amp;#34;amazon-item [command] --help&amp;#34; for more information about a command.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;追記-2019-01-27-バイナリを含む-v0-2-1-をリリースした&#34;&gt;【追記 2019-01-27】 バイナリを含む v0.2.1 をリリースした&lt;/h3&gt;

&lt;p&gt;v0.2.1 をリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/01/amazon-item-v0_2_1-is-released/&#34;&gt;Amazon アイテム検索・情報取得ツール v0.2.1 をリリースした&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各種プラットフォーム向けのバイナリも併せてリリースしているので，自前でビルドしなくてもよくなった。
改めてよろしく。&lt;/p&gt;

&lt;h2 id=&#34;使用準備&#34;&gt;使用準備&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; を使うには Amazon Associate ID を持っていて Amazon &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;Product Advertising API&lt;/a&gt; の Access Key および Secret Key まで取得済みであることが前提となる。
取得できたら &lt;code&gt;$HOME&lt;/code&gt; ディレクトリに &lt;code&gt;.paapi.yaml&lt;/code&gt; ファイルを作って値を格納しておく（ファイル・アクセス管理に注意）。&lt;/p&gt;

&lt;p&gt;たとえばこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;associate-tag: mytag-20
access-key: AKIAIOSFODNN7EXAMPLE
secret-key: 1234567890&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なお &lt;code&gt;associate-tag&lt;/code&gt; とは Amazon Associate ID のことである。&lt;/p&gt;

&lt;p&gt;これで準備 OK&lt;/p&gt;

&lt;h2 id=&#34;商品の検索&#34;&gt;商品の検索&lt;/h2&gt;

&lt;p&gt;商品の検索には &lt;code&gt;amazon-item search&lt;/code&gt; コマンドを使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item search -h
Search Amazon Items by ItemSearch Method

Usage:
  amazon-item search [flags] keyword

Flags:
  -h, --help                    help for search
  -g, --response-group string   ResponseGroup (default &amp;#34;ItemAttributes,Small&amp;#34;)
  -s, --search-index string     SearchIndex (default &amp;#34;All&amp;#34;)
  -t, --template string         Template file

Global Flags:
      --access-key string      Access Key ID
      --associate-tag string   Associate Tag
      --config string          config file (default $HOME/.paapi.yaml)
      --marketplace string     Marketplace (default &amp;#34;webservices.amazon.co.jp&amp;#34;)
      --secret-key string      Secret Access Key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;たとえば結城浩さんの『数学ガール/フェルマーの最終定理』の Kindle 版を探すなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;amazon-item search 数学ガール+フェルマーの最終定理+kindle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとすればよい。
検索結果は JSON 形式で標準出力に出力される。
&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; コマンドなどで整形すれば見やすくなるだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;amazon-item search 数学ガール+フェルマーの最終定理+kindle | jq .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;テンプレート・ファイルを用意すれば出力を任意に整形できる。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cat template/item-list.md
| ASIN | Title | Author | Binding | EAN | Publisher | PublicationDate | URL |
| ---- | ----- | ------ | ------- | --- | --------- | --------------- | --- |
{{ range .Items }}| {{ .ASIN }} | {{ .ItemAttributes.Title }} | {{ .ItemAttributes.Author }} | {{ .ItemAttributes.Binding }} | {{ .ItemAttributes.EAN }} | {{ .ItemAttributes.Publisher }} | {{ .ItemAttributes.ReleaseDate }} | {{ .URL }} |
{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のようなテンプレートを用意して以下のように使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item search -t template/item-list.md 数学ガール+フェルマーの最終定理+kindle
| ASIN | Title | Author | Binding | EAN | Publisher | PublicationDate | URL |
| ---- | ----- | ------ | ------- | --- | --------- | --------------- | --- |
| B00AXUD4EQ | 数学ガール　フェルマーの最終定理　1 (MFコミックス　フラッパーシリーズ) |  春日旬 | Kindle版 |  | KADOKAWA / メディアファクトリー | 2012-12-19 | https://www.amazon.co.jp/exec/obidos/ASIN/B00AXUD4EQ/mytag-20 |
| B00I8AT1CM | 数学ガール／フェルマーの最終定理 |  結城 浩 | Kindle版 |  | SBクリエイティブ | 2014-03-12 | https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20 |
| B00DONBQAI | 数学ガール　フェルマーの最終定理　3 (MFコミックス　フラッパーシリーズ) |  春日 旬 | Kindle版 |  | KADOKAWA / メディアファクトリー | 2013-06-27 | https://www.amazon.co.jp/exec/obidos/ASIN/B00DONBQAI/mytag-20 |
| B00AXUD4F0 | 数学ガール　フェルマーの最終定理　2 (MFコミックス　フラッパーシリーズ) |  春日旬 | Kindle版 |  | KADOKAWA / メディアファクトリー | 2012-12-19 | https://www.amazon.co.jp/exec/obidos/ASIN/B00AXUD4F0/mytag-20 |
| B0756XMQBN | 数学ガール フェルマーの最終定理 |  春日旬 春日 旬 | Kindle版 |  |  |  | https://www.amazon.co.jp/exec/obidos/ASIN/B0756XMQBN/mytag-20 |
| B00ZEIEY1E | [まとめ買い] 数学ガール　フェルマーの最終定理（コミックフラッパー） |  春日旬 春日 旬 | Kindle版 |  |  |  | https://www.amazon.co.jp/exec/obidos/ASIN/B00ZEIEY1E/mytag-20 |&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで出力結果を markdown の表形式に整形できた。&lt;/p&gt;

&lt;h2 id=&#34;amazon-アフィリエイト-リンクを作成する&#34;&gt;Amazon アフィリエイト・リンクを作成する&lt;/h2&gt;

&lt;p&gt;ある商品に対して Amazon アフィリエイト・リンクを作成するには &lt;code&gt;amazon-item lookup&lt;/code&gt; コマンドを使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item lookup -h
Lookup Amazon Item by ItemLookup Method

Usage:
  amazon-item lookup [flags]

Flags:
  -h, --help                    help for lookup
  -p, --id-type string          IdType (default &amp;#34;ASIN&amp;#34;)
  -d, --item-id string          ItemId
  -g, --response-group string   ResponseGroup (default &amp;#34;Images,ItemAttributes,Small&amp;#34;)
  -t, --template string         Template file
  -x, --xml                     Output with XML format

Global Flags:
      --access-key string      Access Key ID
      --associate-tag string   Associate Tag
      --config string          config file (default $HOME/.paapi.yaml)
      --marketplace string     Marketplace (default &amp;#34;webservices.amazon.co.jp&amp;#34;)
      --secret-key string      Secret Access Key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;商品を指定するには ASIN コードを使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item lookup -d B00I8AT1CM&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;特に指定しなければ JSON 形式で標準出力に出力される。
また &lt;code&gt;-x&lt;/code&gt; オプションをつければ XML 形式で（というか &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の返す結果がそのまま）出力される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;amazon-item lookup&lt;/code&gt; コマンドもテンプレート・ファイルで出力を整形できる。
たとえば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cat template/lookup.md
{{ range .Items }}&amp;lt;div class=&amp;#34;hreview&amp;#34;&amp;gt;
  &amp;lt;div class=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;a class=&amp;#34;item url&amp;#34; href=&amp;#34;{{ .URL }}&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;{{ .MediumImage.URL }}&amp;#34; width=&amp;#34;{{ .MediumImage.Width }}&amp;#34; alt=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;dl class=&amp;#34;fn&amp;#34;&amp;gt;
    &amp;lt;dt&amp;gt;&amp;lt;a href=&amp;#34;{{ .URL }}&amp;#34;&amp;gt;{{ .ItemAttributes.Title }}&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;
    {{ with .ItemAttributes.Author }}&amp;lt;dd&amp;gt;{{ . }}&amp;lt;/dd&amp;gt;{{ end }}
    &amp;lt;dd&amp;gt;{{ .ItemAttributes.Publisher }}{{ with .ItemAttributes.PublicationDate }} {{ . }}{{ end }}{{ with .ItemAttributes.ReleaseDate }} (Release {{ . }}){{ end }}&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;{{ .ItemAttributes.ProductGroup }} {{ .ItemAttributes.Binding }}&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;ASIN: {{ .ASIN }}{{ with .ItemAttributes.EAN }}, EAN: {{ . }}{{ end }}&amp;lt;/dd&amp;gt;
  &amp;lt;/dl&amp;gt;
  &amp;lt;p class=&amp;#34;powered-by&amp;#34; &amp;gt;reviewed by &amp;lt;a href=&amp;#39;#maker&amp;#39; class=&amp;#39;reviewer&amp;#39;&amp;gt;Spiegel&amp;lt;/a&amp;gt; on &amp;lt;abbr class=&amp;#34;dtreviewed&amp;#34; title=&amp;#34;{{ $.Today }}&amp;#34;&amp;gt;{{ $.Today }}&amp;lt;/abbr&amp;gt; (powered by &amp;lt;a href=&amp;#34;{{ $.AppURL }}&amp;#34; &amp;gt;{{ $.AppName }}&amp;lt;/a&amp;gt; {{ $.AppVersion }})&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった感じにテンプレートファイルを作って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item lookup -d B00I8AT1CM -t template/lookup.html
&amp;lt;div class=&amp;#34;hreview&amp;#34;&amp;gt;
  &amp;lt;div class=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;a class=&amp;#34;item url&amp;#34; href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;https://images-fe.ssl-images-amazon.com/images/I/41vT2D6sERL._SL160_.jpg&amp;#34; width=&amp;#34;113&amp;#34; alt=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;dl class=&amp;#34;fn&amp;#34;&amp;gt;
    &amp;lt;dt&amp;gt;&amp;lt;a href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B00I8AT1CM/mytag-20&amp;#34;&amp;gt;数学ガール／フェルマーの最終定理&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;
    &amp;lt;dd&amp;gt;結城 浩&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;SBクリエイティブ 2008-07-29 (Release 2014-03-12)&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;eBooks Kindle版&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;ASIN: B00I8AT1CM&amp;lt;/dd&amp;gt;
  &amp;lt;/dl&amp;gt;
  &amp;lt;p class=&amp;#34;powered-by&amp;#34; &amp;gt;reviewed by &amp;lt;a href=&amp;#39;#maker&amp;#39; class=&amp;#39;reviewer&amp;#39;&amp;gt;Spiegel&amp;lt;/a&amp;gt; on &amp;lt;abbr class=&amp;#34;dtreviewed&amp;#34; title=&amp;#34;2019-01-13&amp;#34;&amp;gt;2019-01-13&amp;lt;/abbr&amp;gt; (powered by &amp;lt;a href=&amp;#34;https://github.com/spiegel-im-spiegel/amazon-item&amp;#34; &amp;gt;amazon-item&amp;lt;/a&amp;gt; v0.1.0)&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などと整形することができる。&lt;/p&gt;

&lt;p&gt;これで &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; の利用を Amazon から拒絶されなければ自前で何とかいけそうかな。
でも売上実績がないと &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34; title=&#34;Product Advertising API&#34;&gt;PA-API&lt;/a&gt; が使えなくなるんだよなぁ。
ホンマに勘弁してよ Amazon さん &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;追記-go-amazon-product-api-パッケージの置き換え&#34;&gt;【追記】 go-amazon-product-api パッケージの置き換え&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; title=&#34;spiegel-im-spiegel/amazon-item: Searching Amazon Items, Powered by PA-API&#34;&gt;amazon-item&lt;/a&gt; では &lt;a href=&#34;https://github.com/DDRBoxman/go-amazon-product-api&#34; title=&#34;DDRBoxman/go-amazon-product-api: Wrapper for the Amazon Product Advertising API&#34;&gt;DDRBoxman/go-amazon-product-api&lt;/a&gt; パッケージを使っているのだが &lt;code&gt;ItemAttributes&lt;/code&gt; の &lt;code&gt;Author&lt;/code&gt; および &lt;code&gt;Creator&lt;/code&gt; 項目の取り扱いに難があって複数の &lt;code&gt;Author&lt;/code&gt; や &lt;code&gt;Creator&lt;/code&gt; を上手く取り込めない。
これを改良したものを &lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-amazon-product-api&#34; title=&#34;spiegel-im-spiegel/go-amazon-product-api: Wrapper for the Amazon Product Advertising API&#34;&gt;spiegel-im-spiegel/go-amazon-product-api&lt;/a&gt; で公開している。&lt;/p&gt;

&lt;p&gt;パッケージを置き換えるには，最初のインストールのときにできる &lt;code&gt;go.mod&lt;/code&gt; ファイルに以下の行を追記する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;replace github.com/DDRBoxman/go-amazon-product-api v0.0.0-20190113062856-6736abd38089 =&amp;gt; github.com/spiegel-im-spiegel/go-amazon-product-api v0.0.0-20190113075218-1369f41b1e57&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この状態で再度&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get github.com/spiegel-im-spiegel/amazon-item@latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば &lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-amazon-product-api&#34; title=&#34;spiegel-im-spiegel/go-amazon-product-api: Wrapper for the Amazon Product Advertising API&#34;&gt;spiegel-im-spiegel/go-amazon-product-api&lt;/a&gt; に置き換えてくれる。
やぁ 1.11 の&lt;a href=&#34;https://text.baldanders.info/golang/go-module-aware-mode/&#34; title=&#34;モジュール対応モードへの移行を検討する&#34;&gt;モジュール・モード&lt;/a&gt;は本当に便利だなや。&lt;/p&gt;

&lt;p&gt;これで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;{{ range .Items }}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hreview&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;photo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;item url&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .URL }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .MediumImage.URL }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .MediumImage.Width }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;photo&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ .URL }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .ItemAttributes.Title }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    {{ if .ItemAttributes.Author }}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ range $i, $v := .ItemAttributes.Author }}{{ if ne $i 0 }}, {{ end }}{{ $v }}{{ end }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}
    {{ if .ItemAttributes.Creator }}&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ range $i, $v := .ItemAttributes.Creator }}{{ if ne $i 0 }}, {{ end }}{{ $v.Value }}{{ with $v.Role }} ({{ . }}){{ end }}{{ end }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .ItemAttributes.Publisher }}{{ with .ItemAttributes.PublicationDate }} {{ . }}{{ end }}{{ with .ItemAttributes.ReleaseDate }} (Release {{ . }}){{ end }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ .ItemAttributes.ProductGroup }} {{ .ItemAttributes.Binding }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;ASIN: {{ .ASIN }}{{ with .ItemAttributes.EAN }}, EAN: {{ . }}{{ end }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;powered-by&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;reviewed by &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;#maker&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;reviewer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Spiegel&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; on &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;abbr&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;dtreviewed&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ $.Today }}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ $.Today }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;abbr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; (powered by &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{ $.AppURL }}&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ $.AppName }}&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; {{ $.AppVersion }})&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のようにテンプレートを記述すれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ amazon-item lookup -d B01IGW5IIW -t template/lookup.html
&amp;lt;div class=&amp;#34;hreview&amp;#34;&amp;gt;
  &amp;lt;div class=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;a class=&amp;#34;item url&amp;#34; href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01IGW5IIW/mytag-20&amp;#34;&amp;gt;&amp;lt;img src=&amp;#34;https://images-fe.ssl-images-amazon.com/images/I/51gC8Tmq1kL._SL160_.jpg&amp;#34; width=&amp;#34;113&amp;#34; alt=&amp;#34;photo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;dl class=&amp;#34;fn&amp;#34;&amp;gt;
    &amp;lt;dt&amp;gt;&amp;lt;a href=&amp;#34;https://www.amazon.co.jp/exec/obidos/ASIN/B01IGW5IIW/mytag-20&amp;#34;&amp;gt;リーン開発の現場 カンバンによる大規模プロジェクトの
運営&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;
    &amp;lt;dd&amp;gt;ＨｅｎｒｉｋＫｎｉｂｅｒｇ, 角谷信太郎&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;市谷聡啓 (翻訳), 藤原大 (翻訳)&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;オーム社 2013-10-25 (Release 2017-07-15)&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;eBooks Kindle版&amp;lt;/dd&amp;gt;
    &amp;lt;dd&amp;gt;ASIN: B01IGW5IIW&amp;lt;/dd&amp;gt;
  &amp;lt;/dl&amp;gt;
  &amp;lt;p class=&amp;#34;powered-by&amp;#34; &amp;gt;reviewed by &amp;lt;a href=&amp;#39;#maker&amp;#39; class=&amp;#39;reviewer&amp;#39;&amp;gt;Spiegel&amp;lt;/a&amp;gt; on &amp;lt;abbr class=&amp;#34;dtreviewed&amp;#34; title=&amp;#34;2019-01-13&amp;#34;&amp;gt;2019-01-13&amp;lt;/abbr&amp;gt; (powered by &amp;lt;a href=&amp;#34;https://github.com/spiegel-im-spiegel/amazon-item&amp;#34; &amp;gt;amazon-item&amp;lt;/a&amp;gt; v0.1.0)&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように整形される。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/DDRBoxman/go-amazon-product-api&#34; title=&#34;DDRBoxman/go-amazon-product-api: Wrapper for the Amazon Product Advertising API&#34;&gt;DDRBoxman/go-amazon-product-api&lt;/a&gt; に pull request を送るか悩み中。
割と破壊的変更なんだよね。
もう少し考えてから判断しよう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/&#34;&gt;アソシエイト・セントラル&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;Product Advertising API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://webservices.amazon.co.jp/scratchpad/&#34;&gt;Product Advertising API Scratchpad (beta)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/AWSECommerceService/latest/DG/Welcome.html&#34;&gt;Product Advertising API&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://images-na.ssl-images-amazon.com/images/G/09/associates/paapi/dg/index.html&#34;&gt;Product Advertising API&lt;/a&gt; : 内容は古いが日本語&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://blog.apitore.com/2016/08/01/amazon-product-advertising-api/&#34;&gt;AmazonのProduct Advertising APIの使い方 | Apitore blog&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://haniwaman.com/amazon-api-1/&#34;&gt;「Amazon API」の使い方を紹介します！最安値やランキング取得できるよ①－アソシエイトID（タグ）登録編－ | HPcode&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://blog.dadadadone.com/archives/331&#34;&gt;Amakuriからの乗り換え先に、Amazon公式のWordPressプラグイン「Amazon Associates Link Builder」が良さそう - dadadadoneのメモ帳&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;出力例&#34;&gt;出力例&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%95%B0%E5%AD%A6%E3%82%AC%E3%83%BC%E3%83%AB%EF%BC%8F%E3%83%95%E3%82%A7%E3%83%AB%E3%83%9E%E3%83%BC%E3%81%AE%E6%9C%80%E7%B5%82%E5%AE%9A%E7%90%86-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B00I8AT1CM?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B00I8AT1CM&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41vT2D6sERL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%95%B0%E5%AD%A6%E3%82%AC%E3%83%BC%E3%83%AB%EF%BC%8F%E3%83%95%E3%82%A7%E3%83%AB%E3%83%9E%E3%83%BC%E3%81%AE%E6%9C%80%E7%B5%82%E5%AE%9A%E7%90%86-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B00I8AT1CM?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B00I8AT1CM&#34;&gt;数学ガール／フェルマーの最終定理&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    
    &lt;dd&gt;SBクリエイティブ 2008-07-29 (Release 2014-03-12)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B00I8AT1CM&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;「フェルマーの最終定理」というサブタイトルをみたとき「なんちう大風呂敷を広げるねん」と思ったものだが，実際に読んでみるとぐいぐい引き込まれる。ひっさびさに頭を使ったような気がする。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-01-13&#34;&gt;2019-01-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.1.0)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%AA%E3%83%BC%E3%83%B3%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E5%A0%B4-%E3%82%AB%E3%83%B3%E3%83%90%E3%83%B3%E3%81%AB%E3%82%88%E3%82%8B%E5%A4%A7%E8%A6%8F%E6%A8%A1%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E9%81%8B%E5%96%B6-%EF%BC%A8%EF%BD%85%EF%BD%8E%EF%BD%92%EF%BD%89%EF%BD%8B%EF%BC%AB%EF%BD%8E%EF%BD%89%EF%BD%82%EF%BD%85%EF%BD%92%EF%BD%87-ebook/dp/B01IGW5IIW?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01IGW5IIW&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51gC8Tmq1kL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%AA%E3%83%BC%E3%83%B3%E9%96%8B%E7%99%BA%E3%81%AE%E7%8F%BE%E5%A0%B4-%E3%82%AB%E3%83%B3%E3%83%90%E3%83%B3%E3%81%AB%E3%82%88%E3%82%8B%E5%A4%A7%E8%A6%8F%E6%A8%A1%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E9%81%8B%E5%96%B6-%EF%BC%A8%EF%BD%85%EF%BD%8E%EF%BD%92%EF%BD%89%EF%BD%8B%EF%BC%AB%EF%BD%8E%EF%BD%89%EF%BD%82%EF%BD%85%EF%BD%92%EF%BD%87-ebook/dp/B01IGW5IIW?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B01IGW5IIW&#34;&gt;リーン開発の現場 カンバンによる大規模プロジェクトの運営&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ＨｅｎｒｉｋＫｎｉｂｅｒｇ, 角谷信太郎&lt;/dd&gt;
    &lt;dd&gt;市谷聡啓 (翻訳), 藤原大 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オーム社 2013-10-25 (Release 2017-07-15)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B01IGW5IIW&lt;/dd&gt;
    &lt;dd&gt;評価&amp;nbsp;&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;
      &lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;
    &lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;私はこれで勉強しました。もう一回読み直すかな。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-01-13&#34;&gt;2019-01-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.1.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.4.0 がリリースされた - release</title>
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/01/nyagos-4_4_0-is-released/" />
		<id>tag:text.Baldanders.info,2019-01-12:/release/2019/01/nyagos-4_4_0-is-released/</id>
		<published>2019-01-12T17:23:12+09:00</published>
		<updated>2019-01-19T12:27:55+09:00</updated>
		<summary>実験レベルながら Linux に対応したですよ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>https://baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="https://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.4.0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.0_0&#34;&gt;Release 4.4.0_0 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;変更点は以下の通り。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Support Linux (experimental)&lt;/li&gt;
&lt;li&gt;Fix the problem that current directories per drive were not inherited to child processes.&lt;/li&gt;
&lt;li&gt;Use the library &amp;quot;mattn/go-tty&amp;quot; instead of &amp;quot;zetamatta/go-getch&amp;quot;&lt;/li&gt;
&lt;li&gt;Stop using msvcrt.dll via &amp;quot;syscall&amp;quot; directly&lt;/li&gt;
&lt;li&gt;On linux, the filename NUL equals /dev/null&lt;/li&gt;
&lt;li&gt;Add lua-variable nyagos.goos&lt;/li&gt;
&lt;li&gt;(#341) Fix an unexpected space is inserted after wide characters

&lt;ul&gt;
&lt;li&gt;On Windows10, enable stdout virtual terminal processing always&lt;/li&gt;
&lt;li&gt;If git.exe push disable virtual terminal processing, enable again.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;(#339) Fix that wildcard pattern .??* matches ..

&lt;ul&gt;
&lt;li&gt;It requires github.com/zetamatta/go-findfile tagged 20181223-2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Linux サポート(実験レベル)&lt;/li&gt;
&lt;li&gt;ドライブ毎のカレントディレクトリが子プロセスに継承されなかった問題を修正&lt;/li&gt;
&lt;li&gt;ライブラリ &amp;quot;zetamatta/go-getch&amp;quot; のかわりに &amp;quot;mattn/go-tty&amp;quot; を使うようにした&lt;/li&gt;
&lt;li&gt;msvcrt.dll を直接syscall経由で使わないようにした。&lt;/li&gt;
&lt;li&gt;Linux でも NUL を /dev/null 相当へ&lt;/li&gt;
&lt;li&gt;Lua変数 nyagos.goos を追加&lt;/li&gt;
&lt;li&gt;(#341) Windows10で全角文字の前に文字を挿入すると、不要な空白が入る不具合を修正

&lt;ul&gt;
&lt;li&gt;それに伴い、Windows10 では virtual terminal processing を常に有効に&lt;/li&gt;
&lt;li&gt;git.exe pushが無効にしても再び有効にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;(#339) ワイルドカード .??* が .. にマッチする問題を修正

&lt;ul&gt;
&lt;li&gt;要 github.com/zetamatta/go-findfile tagged 20181230-2&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.0_beta&#34;&gt;Release 4.4.0_beta&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Remove beta&lt;/li&gt;
&lt;li&gt;To call a batchfile, stop to use &lt;code&gt;/V:ON&lt;/code&gt; for CMD.EXE&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;βを外した&lt;/li&gt;
&lt;li&gt;バッチファイルを呼ぶ時に、&lt;code&gt;/V:ON&lt;/code&gt; を CMD.EXE に使わないようにした&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.0_0&#34;&gt;Release 4.4.0_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;実験レベルながら Linux に対応したですよ。
これって Windows を捨てようとしている私へのご褒美？ 正直に言って Linux に移行する際の shell をどうしようか悩んでたのよ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:lua1&#34;&gt;&lt;a href=&#34;#fn:lua1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
まぁ，当分先の話だが。&lt;/p&gt;

&lt;h2 id=&#34;追記-2019-01-19-nyagos-4-4-0-1-がリリースされた&#34;&gt;【追記 2019-01-19】 NYAGOS 4.4.0_1 がリリースされた&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.0_1&#34;&gt;Release 4.4.0_1 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Abolished &amp;quot;--go-colorable&amp;quot; and &amp;quot;--enable-virtual-terminal-processing&amp;quot;&lt;/li&gt;
&lt;li&gt;Implemented &lt;code&gt;killall&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Implemented &lt;code&gt;copy&lt;/code&gt; and &lt;code&gt;move&lt;/code&gt; for Linux&lt;/li&gt;
&lt;li&gt;(#351) Fix that &lt;code&gt;END&lt;/code&gt; (and &lt;code&gt;F11&lt;/code&gt;) key did not work&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;--go-colorable&amp;quot; と &amp;quot;--enable-virtual-terminal-processing&amp;quot; を廃止&lt;/li&gt;
&lt;li&gt;&lt;code&gt;killall&lt;/code&gt; コマンドを実装&lt;/li&gt;
&lt;li&gt;Linux用の &lt;code&gt;copy&lt;/code&gt; と &lt;code&gt;move&lt;/code&gt; を実装&lt;/li&gt;
&lt;li&gt;(#351) &lt;code&gt;END&lt;/code&gt; と &lt;code&gt;F11&lt;/code&gt; キーが動作もキー割り当てもできなかった不具合を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.0_1&#34;&gt;Release 4.4.0_1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/19/gnu_bash_5010.html&#34;&gt;「GNU Bash 5.0」リリース、10年ぶりのメジャーバージョンアップ － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:lua1&#34;&gt;普段は bash でいいのだが，現在 &lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 上で運用している Lua スクリプトを Linux でも使いたいなぁ，なんて。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:lua1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
</feed>
