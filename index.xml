<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2021-09-12:/</id>
	<updated>2021-09-12T02:19:04+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>2021-09-12 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2021/09/12-bookmarks/" />
		<id>tag:text.Baldanders.info,2021-09-12:/bookmarks/2021/09/12-bookmarks/</id>
		<published>2021-09-12T02:12:19+00:00</published>
		<updated>2021-09-12T02:19:04+00:00</updated>
		<summary>「誰でも無料でアメリカ天文学会が発行する学術誌を閲覧可能になることが決定」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.88.1-relnotes/&#34; rel=&#34;nofollow&#34;&gt;Hugo 0.88.1: One Fix | Hugo&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.88.1&#34; rel=&#34;nofollow&#34;&gt;Release v0.88.1 · gohugoio/hugo · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-task/task/releases/tag/v3.7.3&#34; rel=&#34;nofollow&#34;&gt;Release v3.7.3 · go-task/task · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mermaid-js/mermaid/releases/tag/8.12.1&#34; rel=&#34;nofollow&#34;&gt;Release 8.12.1 · mermaid-js/mermaid · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golangci/golangci-lint/releases/tag/v1.42.1&#34; rel=&#34;nofollow&#34;&gt;Release v1.42.1 · golangci/golangci-lint · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thunderbird.net/en-US/thunderbird/91.1.0/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Thunderbird — Release Notes (91.1.0) — Thunderbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thunderbird.net/en-US/thunderbird/78.14.0/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Thunderbird — Release Notes (78.14.0) — Thunderbird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/92.0/releasenotes/&#34; rel=&#34;nofollow&#34;&gt;Firefox  92.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2021/09/09/Rust-1.55.0.html&#34; rel=&#34;nofollow&#34;&gt;Announcing Rust 1.55.0 | Rust Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/golang/tools/releases/tag/gopls/v0.7.2&#34; rel=&#34;nofollow&#34;&gt;Release gopls/v0.7.2 · golang/tools · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2021/09/09/libreoffice-7-1-6-community/&#34; rel=&#34;nofollow&#34;&gt;Announcement of LibreOffice 7.1.6 Community - The Document Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.documentfoundation.org/blog/2021/09/09/libreoffice-getting-started-guide-7-2/&#34; rel=&#34;nofollow&#34;&gt;LibreOffice Getting Started Guide 7.2 - The Document Foundation Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1349914.html&#34; rel=&#34;nofollow&#34;&gt;「OpenSSL 3.0.0」が公開 ～ライセンスは「Apache License 2.0」に - 窓の杜&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/yamayuski/articles/66054afa3155e5&#34; rel=&#34;nofollow&#34;&gt;OpenSSL 3.0.0 が出たので変更点を確認する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nrkbeta.no/2021/09/02/someone-could-be-tracking-you-through-your-headphones/&#34; rel=&#34;nofollow&#34;&gt;Someone could be tracking you through your headphones&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/09/tracking-people-by-their-mac-addresses.html&#34; rel=&#34;nofollow&#34;&gt;Tracking People by their MAC Addresses - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/enterprise/articles/2109/06/news028.html&#34; rel=&#34;nofollow&#34;&gt;Bluetoothスタックに16個の脆弱性が見つかる　1400以上の製品に影響か - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2109/06/news151.html&#34; rel=&#34;nofollow&#34;&gt;小説投稿サイト「カクヨム」の偽サイトに注意　作品を無断転載　UIも本物そっくりにコピー - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vice.com/en/article/k789me/omg-cables-keylogger-usbc-lightning&#34; rel=&#34;nofollow&#34;&gt;This Seemingly Normal Lightning Cable Will Leak Everything You Type&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/09/lightning-cable-with-embedded-eavesdropping.html&#34; rel=&#34;nofollow&#34;&gt;Lightning Cable with Embedded Eavesdropping - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1349608.html&#34; rel=&#34;nofollow&#34;&gt;Androidの2021年9月のセキュリティ更新が発表 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ciadr/vul/20210908-ms.html&#34; rel=&#34;nofollow&#34;&gt;Microsoft Windows 製品の Microsoft MSHTML の脆弱性対策について(CVE-2021-40444)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2021/at210038.html&#34; rel=&#34;nofollow&#34;&gt;Microsoft MSHTMLの脆弱性（CVE-2021-40444）に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20210909-1967803/&#34; rel=&#34;nofollow&#34;&gt;Ghostscriptnにリモードコード実行の脆弱性、概念実証コードが公開 | TECH+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/09/2021-09-08-twitter-tests-a-safety-feature-on-web-to-remove-followers-without-blocking-them/&#34; rel=&#34;nofollow&#34;&gt;ツイッターが「ブロックせずにフォロワー解除」する機能をテスト中  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2021-09-08-github-security-update-vulnerabilities-tar-npmcli-arborist/&#34; rel=&#34;nofollow&#34;&gt;GitHub security update: Vulnerabilities in tar and @npmcli/arborist | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bloomberg.com/tosv2.html?vid=&amp;amp;uuid=d838d613-12f9-11ec-8906-78686a546762&amp;amp;url=L25ld3MvZmVhdHVyZXMvMjAyMS0wOS0wMi9qdW5pcGVyLW15c3RlcnktYXR0YWNrcy10cmFjZWQtdG8tcGVudGFnb24tcm9sZS1hbmQtY2hpbmVzZS1oYWNrZXJz&#34; rel=&#34;nofollow&#34;&gt;Bloomberg - Are you a robot?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210904-aas-journal-open-access/&#34; rel=&#34;nofollow&#34;&gt;誰でも無料でアメリカ天文学会が発行する学術誌を閲覧可能になることが決定 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fr-toen.cocolog-nifty.com/blog/2021/09/post-d9a3a5.html&#34; rel=&#34;nofollow&#34;&gt;第４４４回：利用者のフェアディーリングの権利と著作者の権利の間のバランスを言うカナダ最高裁の判決: 無名の一知財政策ウォッチャーの独言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2021/09/ubuntu-1804-463-ubuntu-18046-lts.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 18.04 その463 - Ubuntu 18.04.6 LTSの追加リリースへ - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35176373/&#34; rel=&#34;nofollow&#34;&gt;LinuxカーネルにNTFSドライバーが追加、トーバルズ氏はGitHub経由のマージに苦言 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Azure や Windows に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1348911.html&#34; rel=&#34;nofollow&#34;&gt;プレビュー版「Windows Terminal」のタブバーにアクリル効果、スタイリッシュな見栄えに - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35176228/&#34; rel=&#34;nofollow&#34;&gt;「Windows Subsystem for Android」が「Microsoft Store」に？ - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.netandfield.com/shar/2021/09/windows-update-kb5004296.html&#34; rel=&#34;nofollow&#34;&gt;Windows Update KB5004296 成功せず - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/qt-luigi/daprgo&#34; rel=&#34;nofollow&#34;&gt;DaprのGo紹介 [機能紹介編]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://moshe-beladev-mb.medium.com/tips-for-effective-go-tests-6b9f1e242f02&#34; rel=&#34;nofollow&#34;&gt;Tips For Effective Go Tests. Skipping tests is common practice… | by Moshe Beladev | Aug, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/qt-luigi/items/bca23f8f52987c193c4b&#34; rel=&#34;nofollow&#34;&gt;Azure SDK for Goの管理ライブラリーセットがリニューアル - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2021-09-07-increasing-developer-happiness-github-code-scanning/&#34; rel=&#34;nofollow&#34;&gt;Increasing developer happiness with GitHub code scanning | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/nobonobo/articles/e9f17d183c19f6&#34; rel=&#34;nofollow&#34;&gt;Go製CGOフリーなSQLiteドライバーでentを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/hsaki/books/golang-httpserver-internal&#34; rel=&#34;nofollow&#34;&gt;Deep Dive into The Go&amp;rsquo;s Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/go-gimei&#34; rel=&#34;nofollow&#34;&gt;GitHub - mattn/go-gimei&lt;/a&gt; : ダミーデータ作成用に&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Java  言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hxn.blog.jp/archives/19459614.html&#34; rel=&#34;nofollow&#34;&gt;Spring Boot DBからファイルをダウンロード : showeryのブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://future-architect.github.io/articles/20210909a/&#34; rel=&#34;nofollow&#34;&gt;Spring Bootアプリケーションのネイティブイメージが簡単に作れるSpring Nativeの紹介 | フューチャー技術ブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oreilly.co.jp//books/9784873119632/&#34; rel=&#34;nofollow&#34;&gt;O&amp;rsquo;Reilly Japan - メタファーとしての発酵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://booth.pm/ja/items/913273&#34; rel=&#34;nofollow&#34;&gt;プロフェッショナルIPv6（無料版） - Professional IPv6 - BOOTH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/Mine02C4/items/8114e23fb6b4148f06b8&#34; rel=&#34;nofollow&#34;&gt;パソコンユーザーのためのDRAM入門 Part 1 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kaityo256/articles/inside_the_index&#34; rel=&#34;nofollow&#34;&gt;Gitのインデックスの中身&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kaityo256/articles/objects_of_git&#34; rel=&#34;nofollow&#34;&gt;Gitのオブジェクトの中身&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kawarimidoll/articles/4fbfa878a0a004&#34; rel=&#34;nofollow&#34;&gt;GitHub Sponsors 登録手順&lt;/a&gt; : 面倒くさいw&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ganariya/articles/deno-cli-derain&#34; rel=&#34;nofollow&#34;&gt;CLI を作る中でわかった deno のうれしさ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wasm4.org/&#34; rel=&#34;nofollow&#34;&gt;WASM-4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/denodeno_deploy2fiie_system_api.html&#34; rel=&#34;nofollow&#34;&gt;Denoの分散ホスティング「Deno Deploy」ベータ2公開。FiIe System API追加、クラッシュレポートなど － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/zenn/articles/hide-comment&#34; rel=&#34;nofollow&#34;&gt;Zennで特定のコメントを非表示にする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.mercari.com/blog/entry/gears-microservices/&#34; rel=&#34;nofollow&#34;&gt;マイクロサービスの開発とテストファースト／テスト駆動開発  【Mercari Gears Lecture Series】 | メルカリエンジニアリング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1348929.html&#34; rel=&#34;nofollow&#34;&gt;貼り付けたコードの言語をAIが自動で推測 ～「Visual Studio Code」の2021年8月更新 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35175631/&#34; rel=&#34;nofollow&#34;&gt;グーグルの「時間結晶」研究と量子コンピューターにみる可能性 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/webassemblywebglonnx_runtime_webort_web.html&#34; rel=&#34;nofollow&#34;&gt;マイクロソフト、WebAssemblyとWebGLで推論エンジンを実装した「ONNX Runtime Web」（ORT Web）をオープンソースで公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fredrikholmqvist.com/posts/why-erlang/&#34; rel=&#34;nofollow&#34;&gt;Why Erlang? | Fredrik Holmqvist&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/09/erlang.html&#34; rel=&#34;nofollow&#34;&gt;ブログ: なぜ、Erlangなのか?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/92awsaws.html&#34; rel=&#34;nofollow&#34;&gt;9月2日木曜日に発生したAWS東京リージョンの大規模障害、原因はネットワークデバイスの新プロトコル処理に潜在的なバグがあったこと。AWSが報告書を公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/googlememory_poisoning_recoverygoogle_cloud.html&#34; rel=&#34;nofollow&#34;&gt;Google、訂正不可能なメモリエラーによるクラッシュを回避する「Memory Poisoning Recovery」をGoogle Cloudで提供へ － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210909-red-roulette-china/&#34; rel=&#34;nofollow&#34;&gt;中国政府の告発本を出版した男性、出版直前に行方不明だった元妻から「出版をキャンセルして」と告げられたことを明かす - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fortee.jp/flutterkaigi-2021/proposal/7c59b637-5932-4b8a-a85a-e838a1b7e08e&#34; rel=&#34;nofollow&#34;&gt;FlutterのバックグラウンドDartコード実行を理解する by Kurogoma4D | プロポーザル | FlutterKaigi 2021 #FlutterKaigi - fortee.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/amazon_elasticsearch_serviceamazon_opensearch_serviceelasticsearchopensearch.html&#34; rel=&#34;nofollow&#34;&gt;「Amazon Elasticsearch Service」の名称が「Amazon OpenSearch Service」に変更。ElasticsearchからフォークしたOpenSearchも採用 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/amazon_eks_anywhereamazon_ekskubernetes.html&#34; rel=&#34;nofollow&#34;&gt;Amazon EKS Anywhereが正式リリース。オンプレミスにAmazon EKSと同様のKubernetes環境を無料で構築可能 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/ketaiorg/ss-250149770&#34; rel=&#34;nofollow&#34;&gt;テスト文字列に「うんこ」と入れるな&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infiniteloop.co.jp/blog/2021/09/unko/&#34; rel=&#34;nofollow&#34;&gt;新卒向け研修資料「テスト文字列に&amp;quot;うんこ&amp;quot;と入れるな」を公開しました | 株式会社インフィニットループ技術ブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/umi_mori/articles/0a05161ad6be53&#34; rel=&#34;nofollow&#34;&gt;【アップデート解説】Welcome to Flutter 2.5 !!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://positron.exblog.jp/32426499/&#34; rel=&#34;nofollow&#34;&gt;「部屋裏のバイテン」第3巻 : ぽじとろんの竹本泉観察記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/09/2021-09-08-paypal-acquires-japans-paidy-for-2-7b-to-crack-the-buy-now-pay-later-market-in-asia/&#34; rel=&#34;nofollow&#34;&gt;米PayPalが日本のペイディを3000億円で買収、アジアで「BNPL」後払い市場に参入  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/09/lenovo-tab-new-flagship-p12-pro-amoled/&#34; rel=&#34;nofollow&#34;&gt;レノボが12.6インチAndroidタブ「Lenovo Tab P12 Pro」発表、120Hz有機EL採用で重量565g  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eff.org/deeplinks/2021/08/when-it-comes-antitrust-its-all-connected&#34; rel=&#34;nofollow&#34;&gt;When It Comes to Antitrust, It’s All Connected | Electronic Frontier Foundation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/antitrust/3371&#34; rel=&#34;nofollow&#34;&gt;すべては反トラストに通ず：水平方向の独占と垂直方向の独占 | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2109/11/news031.html&#34; rel=&#34;nofollow&#34;&gt;Epic対Apple訴訟に判決　Appleにアプリ内購入の強制禁止命令もEpicは控訴か - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/syumai/scraps/005ec946eac85f&#34; rel=&#34;nofollow&#34;&gt;iframe sandboxのメモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>gpgpdump v0.12.5 をリリースした</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/09/gpgpdump-v0_12_5-is-released/" />
		<id>tag:text.Baldanders.info,2021-09-11:/release/2021/09/gpgpdump-v0_12_5-is-released/</id>
		<published>2021-09-11T12:05:29+00:00</published>
		<updated>2021-09-11T12:06:26+00:00</updated>
		<summary>鍵の有効期限日が上手く表示されてなかったので修正した。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; パケットの内容を可視化する &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の v0.12.2 をリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump/releases/tag/v0.12.5&#34;&gt;Release v0.12.5 · spiegel-im-spiegel/gpgpdump · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実は，この前の &lt;a href=&#34;https://text.baldanders.info/remark/2021/09/install-texlive-in-ubuntu-again/&#34; title=&#34;改めて TeX Live を Ubuntu に（APT を使わずに）導入する&#34;&gt;TeX Live 2021 のインストール&lt;/a&gt;時に気が付いたのだが &lt;a href=&#34;http://www.tug.org/texlive/files/texlive.asc&#34;&gt;TUG の公開鍵&lt;/a&gt;のように有効期限を電子署名を追記する形で更新している場合に新しいほうの有効期限日が上手く表示されてなかった。
ついでに，有効期限日数の表示がおかしなことになっていたので小数点以下を切り上げて表示することにした。&lt;/p&gt;
&lt;p&gt;最新バージョンで件の公開鍵を見ると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpgpdump fetch http://www.tug.org/texlive/files/texlive.asc -u
Public-Key Packet (tag 6) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2016-03-19T01:48:04Z
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
User ID Packet (tag 13) (40 bytes)
    User ID: TeX Live Distribution &amp;lt;tex-live@tug.org&amp;gt;
Signature Packet (tag 2) (318 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (40 bytes)
        Signature Creation Time (sub 2): 2016-03-19T01:48:04Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 540 days after (2017-09-10T01:48:04Z)
        Preferred Symmetric Algorithms (sub 11) (5 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        89 fd
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (312 bytes)
    Version: 4 (current)
    Signiture Type: Positive certification of a User ID and Public-Key packet (0x13)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (34 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to certify other keys.
            Flag: This key may be used to sign data.
        Preferred Symmetric Algorithms (sub 11) (5 bytes)
            Symmetric Algorithm: AES with 256-bit key (sym 9)
            Symmetric Algorithm: AES with 192-bit key (sym 8)
            Symmetric Algorithm: AES with 128-bit key (sym 7)
            Symmetric Algorithm: CAST5 (128 bit key, as per) (sym 3)
            Symmetric Algorithm: TripleDES (168 bit key derived from 192) (sym 2)
        Preferred Hash Algorithms (sub 21) (5 bytes)
            Hash Algorithm: SHA2-256 (hash 8)
            Hash Algorithm: SHA-1 (hash 2)
            Hash Algorithm: SHA2-384 (hash 9)
            Hash Algorithm: SHA2-512 (hash 10)
            Hash Algorithm: SHA2-224 (hash 11)
        Preferred Compression Algorithms (sub 22) (3 bytes)
            Compression Algorithm: ZLIB &amp;lt;RFC1950&amp;gt; (comp 2)
            Compression Algorithm: BZip2 (comp 3)
            Compression Algorithm: ZIP &amp;lt;RFC1951&amp;gt; (comp 1)
        Features (sub 30) (1 bytes)
            Flag: Modification Detection (packets 18 and 19)
        Key Server Preferences (sub 23) (1 bytes)
            Flag: No-modify
        Signature Creation Time (sub 2): 2016-03-19T04:07:41Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        01 d6
    RSA signature value m^d mod n (2048 bits)
Signature Packet (tag 2) (540 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA2-512 (hash 10)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2016-03-20T01:57:31Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x6caca448860cdc13
    Hash left 2 bytes
        5a ec
    RSA signature value m^d mod n (4096 bits)
Signature Packet (tag 2) (284 bytes)
    Version: 4 (current)
    Signiture Type: Generic certification of a User ID and Public-Key packet (0x10)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (6 bytes)
        Signature Creation Time (sub 2): 2016-03-20T23:53:54Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x0716748a30d155ad
    Hash left 2 bytes
        21 c4
    RSA signature value m^d mod n (2047 bits)
Public-Subkey Packet (tag 14) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2016-03-19T01:48:04Z
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
Signature Packet (tag 2) (293 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (15 bytes)
        Signature Creation Time (sub 2): 2016-03-19T01:48:04Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
        Key Expiration Time (sub 9): 540 days after (2017-09-10T01:48:04Z)
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        a3 a8
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (287 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (9 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to encrypt communications.
            Flag: This key may be used to encrypt storage.
        Signature Creation Time (sub 2): 2016-03-19T04:09:15Z
    Unhashed Subpacket (10 bytes)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        d7 48
    RSA signature value m^d mod n (2047 bits)
Public-Subkey Packet (tag 14) (269 bytes)
    Version: 4 (current)
    Public key creation time: 2016-03-19T01:49:00Z
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    RSA public modulus n (2048 bits)
    RSA public encryption exponent e (17 bits)
Signature Packet (tag 2) (580 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (15 bytes)
        Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Key Expiration Time (sub 9): 540 days after (2017-09-10T01:49:00Z)
    Unhashed Subpacket (297 bytes)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
    Hash left 2 bytes
        91 40
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (603 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (38 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                c7 8b 82 d8 c7 95 12 f7 9c c0 d7 c8 0d 5e 5d 91 06 ba b6 bc
        Signature Creation Time (sub 2): 2017-09-06T23:56:27Z
        Key Expiration Time (sub 9): 902 days after (2018-09-06T23:56:27Z)
    Unhashed Subpacket (297 bytes)
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        0d 16
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (603 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (38 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                c7 8b 82 d8 c7 95 12 f7 9c c0 d7 c8 0d 5e 5d 91 06 ba b6 bc
        Signature Creation Time (sub 2): 2018-08-31T16:19:24Z
        Key Expiration Time (sub 9): 1261 days after (2019-08-31T16:19:12Z)
    Unhashed Subpacket (297 bytes)
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        d4 df
    RSA signature value m^d mod n (2044 bits)
Signature Packet (tag 2) (603 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA-1 (hash 2)
    Hashed Subpacket (38 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                c7 8b 82 d8 c7 95 12 f7 9c c0 d7 c8 0d 5e 5d 91 06 ba b6 bc
        Signature Creation Time (sub 2): 2019-03-13T00:38:24Z
        Key Expiration Time (sub 9): 1479 days after (2020-04-06T00:38:24Z)
    Unhashed Subpacket (297 bytes)
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        0f 14
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (603 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA2-512 (hash 10)
    Hashed Subpacket (38 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                c7 8b 82 d8 c7 95 12 f7 9c c0 d7 c8 0d 5e 5d 91 06 ba b6 bc
        Signature Creation Time (sub 2): 2020-04-06T02:40:10Z
        Key Expiration Time (sub 9): 1960 days after (2021-07-30T02:40:10Z)
    Unhashed Subpacket (297 bytes)
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        69 4e
    RSA signature value m^d mod n (2047 bits)
Signature Packet (tag 2) (603 bytes)
    Version: 4 (current)
    Signiture Type: Subkey Binding Signature (0x18)
    Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
    Hash Algorithm: SHA2-512 (hash 10)
    Hashed Subpacket (38 bytes)
        Key Flags (sub 27) (1 bytes)
            Flag: This key may be used to sign data.
        Issuer Fingerprint (sub 33) (21 bytes)
            Version: 4 (need 20 octets length)
            Fingerprint (20 bytes)
                c7 8b 82 d8 c7 95 12 f7 9c c0 d7 c8 0d 5e 5d 91 06 ba b6 bc
        Signature Creation Time (sub 2): 2021-07-02T22:45:27Z
        Key Expiration Time (sub 9): 2322 days after (2022-07-27T22:45:27Z)
    Unhashed Subpacket (297 bytes)
        Embedded Signature (sub 32) (284 bytes)
            Signature Packet (tag 2) (284 bytes)
                Version: 4 (current)
                Signiture Type: Primary Key Binding Signature (0x19)
                Public-key Algorithm: RSA (Encrypt or Sign) (pub 1)
                Hash Algorithm: SHA-1 (hash 2)
                Hashed Subpacket (6 bytes)
                    Signature Creation Time (sub 2): 2016-03-19T01:49:00Z
                Unhashed Subpacket (10 bytes)
                    Issuer (sub 16): 0x4ce1877e19438c70
                Hash left 2 bytes
                    f3 8d
                RSA signature value m^d mod n (2046 bits)
        Issuer (sub 16): 0x0d5e5d9106bab6bc
    Hash left 2 bytes
        89 0c
    RSA signature value m^d mod n (2048 bits)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;長ったらしくなって申し訳ないが，毎年1年ずつ有効期限を延長しているのが分かる。
私もこういう鍵運用にしようかなぁ。
やっぱ鍵そのものを度々替えるのはダメだよねぇ。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/release/gpgpdump/&#34;&gt;OpenPGP パケットを可視化する gpgpdump&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51ZRZ62WKCL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4314009071?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号化 プライバシーを救った反乱者たち&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レビー (著), 斉藤 隆央 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;紀伊國屋書店 2002-02-16&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4314009071 (ASIN), 9784314009072 (EAN), 4314009071 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;20世紀末，暗号技術の世界で何があったのか。知りたかったらこちらを読むべし！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-03-09&#34;&gt;2015-03-09&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号化 プライバシーを救った反乱者たち --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
</content>
	</entry><entry>
		<title>仮名・ローマ字変換する Go パッケージを作ってみた</title>
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/kana-roman-conversion/" />
		<id>tag:text.Baldanders.info,2021-09-11:/golang/kana-roman-conversion/</id>
		<published>2021-09-11T03:31:49+00:00</published>
		<updated>2021-09-12T02:11:33+00:00</updated>
		<summary>ついカッとなってやった。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://twitter.com/mattn_jp/status/1436388661231177730&#34;&gt;@mattn_jp さんの tweet&lt;/a&gt; で偽名や偽住所を生成できる &lt;a href=&#34;https://github.com/mattn/go-gimei&#34; title=&#34;mattn/go-gimei&#34;&gt;mattn/go-gimei&lt;/a&gt; という &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; パッケージを知る。
なにそれ便利。
さっそく使わせてもらおう。&lt;/p&gt;
&lt;p&gt;ところでこれローマ字があるといいよね。&lt;/p&gt;
&lt;p&gt;というわけで，仮名からローマ字に変換するパッケージを作ってしまった（笑）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/krconv&#34; title=&#34;spiegel-im-spiegel/krconv: Convert kana-character to roman-alphabet&#34;&gt;spiegel-im-spiegel/krconv: Convert kana-character to roman-alphabet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こんな感じで使うことができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;krconv_test&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

	&lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/krconv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ExampleConvert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;マツエ テッペイ　めっちゃほりでぃ ﾅﾝﾊﾞかげつで まんざい みるんだょっ&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;krconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//Output:
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//matsue teppei metchahoridei nambakagetsude manzai mirundayotsu
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ちなみに UTF-8 文字列が前提ね。&lt;/p&gt;
&lt;p&gt;これと先程の &lt;a href=&#34;https://github.com/mattn/go-gimei&#34; title=&#34;mattn/go-gimei&#34;&gt;mattn/go-gimei&lt;/a&gt; を組み合わせてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//go:build run
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// +build run
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;

	&lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/mattn/go-gimei&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/krconv&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;gimei&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;氏名：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Kanji&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;カナ：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Katakana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ローマ字：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ToTitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;krconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hiragana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;krconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hiragana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())))&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Email：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;rune&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;krconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hiragana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;krconv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hiragana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;@example.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出力結果はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run sample.go 
氏名： 上原 弥璃
カナ： ウエハラ イヨリ
ローマ字： UEHARA Iyori
Email： i.uehara@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;どやさ！&lt;/p&gt;
&lt;p&gt;変換については，以下のページを参考に，ヘボン式にしている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pref.kanagawa.jp/osirase/02/2315/hepburn.html&#34;&gt;ヘボン式ローマ字｜神奈川県パスポートセンター公式サイト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ezairyu.mofa.go.jp/passport/hebon.html&#34;&gt;ヘボン式ローマ字綴方表&lt;/a&gt;（外務省のページ？）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ただし，長音の扱い（大野（おおの）→ [☓] oono , [○] ono）については判定が難しそうなので無視している&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
そうそう，これに関連して長音の記号（ー）は変換後の文字列から削除することにした。&lt;/p&gt;
&lt;p&gt;全体の処理手順としては&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;半角全角変換（全角英数・記号は半角に，半角カナは全角に，カナの濁点・半濁点の合成列は事前合成形に）&lt;/li&gt;
&lt;li&gt;カタカナ→平仮名変換&lt;/li&gt;
&lt;li&gt;文字単位（&lt;code&gt;rune&lt;/code&gt; 単位ではない）に分割&lt;/li&gt;
&lt;li&gt;文字単位でローマ字への置き換え&lt;/li&gt;
&lt;li&gt;拗音の変換&lt;/li&gt;
&lt;li&gt;撥音・促音の変換&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という感じ。
仮名文字以外の英数字や漢字や記号（「々」等）は素通しなのであしからず。
ヷ，ヸ，ヹ，ヺ はどう変換していいか分からなかったので，これも素通ししている。
「あ゙」のような対応するローマ字のない合成列も同様。&lt;/p&gt;
&lt;p&gt;あとヒープを潤沢に使ってループもぐるぐる回してかなり富豪的なコードになっているので，大規模文字列やクリティカルな処理には向いてない。&lt;/p&gt;
&lt;p&gt;というわけで，こんなんでよろしければどうぞ。&lt;/p&gt;
&lt;h2&gt;【2021-09-12 追記】&lt;/h2&gt;
&lt;p&gt;変換ロジックを見直した v0.1.2 をリリースした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/krconv/releases/tag/v0.1.2&#34;&gt;Release v0.1.2 · spiegel-im-spiegel/krconv · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/krconv&#34; title=&#34;spiegel-im-spiegel/krconv: Convert kana-character to roman-alphabet&#34;&gt;krconv&lt;/a&gt; パッケージの変換ロジックは，同じく拙作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf&#34; title=&#34;spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang&#34;&gt;gnkf&lt;/a&gt; からのコピペなのだが，仮名文字を平仮名に寄せると「ば」「ぱ」のような濁点・半濁点の結合文字を付加した合成列に対応できてないことに気が付いた。&lt;/p&gt;
&lt;p&gt;そこで変換手順の前半を&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;平仮名→カタカナ変換&lt;/li&gt;
&lt;li&gt;半角全角変換（全角英数・記号は半角に，半角カナは全角に，濁点・半濁点の合成列は事前合成形に）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と入れ替えることで対応した。
仮名文字を全角カタカナに寄せた上で変換するわけですな。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://fukoto.com/english-kuso1/&#34;&gt;英語で「ー」長音はどう書けば良いのか  |  ふーらいの思うこと&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fukoto.com/english-kuso2/&#34;&gt;【思うこと】URLに悩む　その2  |  ふーらいの思うこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/spiegel/articles/20210408-unicode-characters&#34;&gt;Unicode 文字列を「文字」単位に分離する&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ヘボン式では基本的に長音は表記しないらしい。&lt;a href=&#34;http://www.pref.kanagawa.jp/osirase/02/2315/hepburn.html&#34; title=&#34;ヘボン式ローマ字｜神奈川県パスポートセンター公式サイト&#34;&gt;例示&lt;/a&gt;では「佐藤（さとう） 」の「う」は長音で「SATO」と表記するけど「松浦（まつうら）」の「う」は長音ではないので「MATSUURA」と書けとある。分かるか！ こんなもん。要するに仮名文字からそれが長音かどうか判定するのは不可能なんだよ。せいぜい「ー」のような明確な長音記号を省くくらいしかできないわけ。機械的な処理はこれが限界と諦めた。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>Go 1.17.1 のリリース【セキュリティ・アップデート】</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2021/09/go-1_17_1-is-released/" />
		<id>tag:text.Baldanders.info,2021-09-10:/release/2021/09/go-1_17_1-is-released/</id>
		<published>2021-09-10T10:58:44+00:00</published>
		<updated>2021-09-10T11:00:22+00:00</updated>
		<summary>Go 1.16.5 の修正が直りきってなかったようだ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.17.1 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/dx9d7IOseHw&#34;&gt;[security] Go 1.17.1 and Go 1.16.8 are released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は1件の脆弱性修正を含んでいる。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;go1.17.1 (released 2021-09-09) includes a security fix to the &lt;code&gt;archive/zip&lt;/code&gt; package, as well as bug fixes to the compiler, linker, the go command, and to the &lt;code&gt;crypto/rand&lt;/code&gt;, &lt;code&gt;embed&lt;/code&gt;, &lt;code&gt;go/types&lt;/code&gt;, &lt;code&gt;html/template&lt;/code&gt;, and &lt;code&gt;net/http&lt;/code&gt; packages. See the &lt;a href=&#34;https://github.com/golang/go/issues?q=milestone%3AGo1.17.1+label%3ACherryPickApproved&#34;&gt;Go 1.17.1 milestone&lt;/a&gt; on our issue tracker for details&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release#go1.17.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2021-39293&#34;&gt;CVE-2021-39293&lt;/a&gt;&lt;/h2&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;The fix for CVE-2021-33196 can be bypassed by crafted inputs. As a result, the &lt;code&gt;NewReader&lt;/code&gt; and &lt;code&gt;OpenReader&lt;/code&gt; functions in &lt;a href=&#34;https://pkg.go.dev/archive/zip&#34;&gt;&lt;code&gt;archive/zip&lt;/code&gt;&lt;/a&gt; can still cause a panic or an unrecoverable fatal error when reading an archive that claims to contain a large number of files, regardless of its actual size&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/g/golang-announce/c/dx9d7IOseHw&#34;&gt;Go 1.17.1 and Go 1.16.8 are released&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/2021/06/go-1_16_5-is-released/&#34;&gt;Go 1.16.5 の修正&lt;/a&gt;が直りきってなかったようだ。
&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2021-33196&#34;&gt;CVE-2021-33196&lt;/a&gt; は CVSSv3.1 基本評価値が 7.5 とヤバめの値だったので，今回も早めに対処するのがいいだろう。&lt;/p&gt;
&lt;p&gt;（以下未稿）&lt;/p&gt;
&lt;h2&gt;例によって&amp;hellip;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT で管理している &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラは古いので，&lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Downloads - The Go Programming Language&#34;&gt;ダウンロードページ&lt;/a&gt;からバイナリ（&lt;a href=&#34;https://golang.org/dl/go1.17.1.linux-amd64.tar.gz&#34;&gt;&lt;code&gt;go1.17.1.linux-amd64.tar.gz&lt;/code&gt;&lt;/a&gt;）を取ってきて手動でインストールすることを強く推奨する。
以下は手動での作業例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/src
$ sudo curl -L &amp;#34;https://golang.org/dl/go1.17.1.linux-amd64.tar.gz&amp;#34; -O
$ cd ..
$ sudo unlink go # 以前の Go が入っている場合
$ sudo tar xvf src/go1.17.1.linux-amd64.tar.gz
$ sudo mv go go1.17.1
$ sudo ln -s go1.17.1 go
$ go version # /usr/local/go/bin にパスが通っている場合
go version go1.17.1 linux/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>改めて TeX Live を Ubuntu に（APT を使わずに）導入する</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/09/install-texlive-in-ubuntu-again/" />
		<id>tag:text.Baldanders.info,2021-09-09:/remark/2021/09/install-texlive-in-ubuntu-again/</id>
		<published>2021-09-09T13:20:36+00:00</published>
		<updated>2021-09-10T09:57:54+00:00</updated>
		<summary>LuaLaTeX でソースコードを含む文書を PDF 出力するところまで。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;6月にパソコンを買い換えてから新しいマシンには $\mathrm{\TeX}$ 環境を入れてなかったのだが，先日『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』第8版の&lt;a href=&#34;https://text.baldanders.info/remark/2021/09/latex-primer/&#34; title=&#34;改訂第8版『LaTeX2ε美文書作成入門』を眺める&#34;&gt;読書感想文を書いた&lt;/a&gt;ばかりなので，調子に乗って &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2021 を入れてしまおうと思い立った。&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』の付録Aには&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;あらかじめ &lt;code&gt;/usr/local/texlive&lt;/code&gt; というディレクトリを作成し，インストールする人の権限で書き込めるようにしておくのが簡単です&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08MZ98Z1Q?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;［改訂第8版］LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書かれてあって「やっぱそーなのか」と納得してしまった。
激しくダサい気がするがしょうがないか。
まぁ，今回は個人パソコンなので素直に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/
$ sudo mkdir texlive
$ sudo chown -R username:username texlive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;としてしおう。&lt;/p&gt;
&lt;p&gt;サーバ機などでは，インストール完了後にオーナーを &lt;code&gt;root&lt;/code&gt; に書き戻し&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local
$ sudo chown -R root:root texlive
$ cd texlive/2021/bin/x86_64-linux/
$ sudo ./tlmgr path add
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と &lt;code&gt;/usr/local/bin/&lt;/code&gt; 等パスの通ったディレクトリへシンボリック・リンクを張っておけば複数ユーザで共有できるようになる。
アップグレード等で元に戻す場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr path remove
$ cd /usr/local/
$ sudo chown -R username:username texlive
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という感じに，いったんシンボリック・リンクを削除してから諸々の作業を行うといいだろう。&lt;/p&gt;
&lt;h2&gt;OpenPGP 公開鍵を取ってくる&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; のサイトでは検証用に OpenPGP 公開鍵を公開している。
これを取ってきて自分の鍵束にインポートしてしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gpg --fetch-key http://www.tug.org/texlive/files/texlive.asc
gpg: 鍵を&amp;#39;http://www.tug.org/texlive/files/texlive.asc&amp;#39;から要求
gpg: 鍵0D5E5D9106BAB6BC: 公開鍵&amp;#34;TeX Live Distribution &amp;lt;tex-live@tug.org&amp;gt;&amp;#34;をインポートしました
gpg: 処理数の合計: 1
gpg:               インポート: 1

$ gpg --list-keys 0D5E5D9106BAB6BC
pub   rsa2048 2016-03-19 [SC]
      C78B82D8C79512F79CC0D7C80D5E5D9106BAB6BC
uid           [  不明  ] TeX Live Distribution &amp;lt;tex-live@tug.org&amp;gt;
sub   rsa2048 2016-03-19 [E]
sub   rsa2048 2016-03-19 [S] [有効期限: 2022-07-27]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これはアレだな。
&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; がアップグレードされるたびに更新しろってことだな。&lt;/p&gt;
&lt;h2&gt;インストーラのダウンロードと検証&lt;/h2&gt;
&lt;p&gt;では続きを。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ curl -L &amp;#34;https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz&amp;#34; -O
$ curl -L &amp;#34;https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz.sha512&amp;#34; -O
$ curl -L &amp;#34;https://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz.sha512.asc&amp;#34; -O
$ gpg -d install-tl-unx.tar.gz.sha512.asc
gpg: 署名されたデータが&amp;#39;install-tl-unx.tar.gz.sha512&amp;#39;にあると想定します
gpg: 2021年09月08日 08時53分40秒 JSTに施された署名
gpg:                RSA鍵4CE1877E19438C70を使用
gpg: &amp;#34;TeX Live Distribution &amp;lt;tex-live@tug.org&amp;gt;&amp;#34;からの正しい署名 [不明の]
gpg: *警告*: この鍵は信用できる署名で証明されていません!
gpg:          この署名が所有者のものかどうかの検証手段がありません。
主鍵フィンガープリント: C78B 82D8 C795 12F7 9CC0  D7C8 0D5E 5D91 06BA B6BC
     副鍵フィンガープリント: D8F2 F860 57A8 57E4 2A88  106A 4CE1 877E 1943 8C70

$ sha512sum -c install-tl-unx.tar.gz.sha512
install-tl-unx.tar.gz: OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なんちう回りくどい&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
普通にダウンロードファイルに署名すりゃいいぢゃん &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ちなみに拙作の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gnkf&#34; title=&#34;spiegel-im-spiegel/gnkf: Network Kanji Filter by Golang&#34;&gt;gnkf&lt;/a&gt; を使っても&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ gnkf hash -a SHA-512 -c install-tl-unx.tar.gz.sha512
install-tl-unx.tar.gz: OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;てな感じで検証できる。
&lt;code&gt;sha512sum&lt;/code&gt; コマンドがない環境でどうぞ。
宣伝でした（笑）&lt;/p&gt;
&lt;h2&gt;よーやくインストール開始&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ tar xvf install-tl-unx.tar.gz
$ cd install-tl-20210908/
$ ./install-tl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;リポジトリを指定する必要はないみたい。
適当に近場を探してくれてるようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;======================&amp;gt; TeX Live installation procedure &amp;lt;=====================

======&amp;gt;   Letters/digits in &amp;lt;angle brackets&amp;gt; indicate   &amp;lt;=======
======&amp;gt;   menu items for actions or customizations      &amp;lt;=======
= help&amp;gt;   https://tug.org/texlive/doc/install-tl.html   &amp;lt;=======

 Detected platform: GNU/Linux on x86_64
 
 &amp;lt;B&amp;gt; set binary platforms: 1 out of 16

 &amp;lt;S&amp;gt; set installation scheme: scheme-full

 &amp;lt;C&amp;gt; set installation collections:
     40 collections out of 41, disk space required: 7135 MB

 &amp;lt;D&amp;gt; set directories:
   TEXDIR (the main TeX directory):
     /usr/local/texlive/2021
   TEXMFLOCAL (directory for site-wide local files):
     /usr/local/texlive/texmf-local
   TEXMFSYSVAR (directory for variable and automatically generated data):
     /usr/local/texlive/2021/texmf-var
   TEXMFSYSCONFIG (directory for local config):
     /usr/local/texlive/2021/texmf-config
   TEXMFVAR (personal directory for variable and automatically generated data):
     ~/.texlive2021/texmf-var
   TEXMFCONFIG (personal directory for local config):
     ~/.texlive2021/texmf-config
   TEXMFHOME (directory for user-specific files):
     ~/texmf

 &amp;lt;O&amp;gt; options:
   [ ] use letter size instead of A4 by default
   [X] allow execution of restricted list of programs via \write18
   [X] create all format files
   [X] install macro/font doc tree
   [X] install macro/font source tree
   [ ] create symlinks to standard directories

 &amp;lt;V&amp;gt; set up for portable installation

Actions:
 &amp;lt;I&amp;gt; start installation to hard disk
 &amp;lt;P&amp;gt; save installation profile to &amp;#39;texlive.profile&amp;#39; and exit
 &amp;lt;Q&amp;gt; quit

Enter command: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;必要に応じて設定を変えて（既定のままでも無問題）問題なければ &lt;code&gt;I&lt;/code&gt; を入力してインストールを開始する。
私の環境では1時間近くかかった。
お茶菓子を用意しておくか（笑）&lt;/p&gt;
&lt;p&gt;環境変数については &lt;code&gt;~/.profile&lt;/code&gt; ファイルに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Expand $PATH to include the directory where TeX Live applications go.&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/local/texlive/2021&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin/x86_64-linux&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$texlive_path&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -a -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -a -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
  &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$texlive_bin_path&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;unset&lt;/span&gt; texlive_path texlive_bin_path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と追記しておけばいいかな。
一応，動作確認しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ lualatex -v
This is LuaHBTeX, Version 1.13.2 (TeX Live 2021)

Execute  &amp;#39;luahbtex --credits&amp;#39;  for credits and version details.

There is NO warranty. Redistribution of this software is covered by
the terms of the GNU General Public License, version 2 or (at your option)
any later version. For more information about these matters, see the file
named COPYING and the LuaTeX source.

LuaTeX is Copyright 2021 Taco Hoekwater and the LuaTeX Team.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;マニュアルに関しては &lt;code&gt;texdoc&lt;/code&gt; コマンドを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ texdoc luatex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;などとすれば対応する PDF ファイルが開く。
便利！&lt;/p&gt;
&lt;h2&gt;自動実行可能な外部コマンドの指定&lt;/h2&gt;
&lt;p&gt;とりあえず &lt;code&gt;shell_escape_commands&lt;/code&gt; の値を変更しておく。
インストール直後は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,extractbb,gregorio,kpsewhich,makeindex,repstopdf,texosquery-jre8,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となっているので &lt;code&gt;/usr/ocal/texlive/texmf-local/web2c/texmf.cnf&lt;/code&gt; ファイルを作成し以下を記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;shell_escape_commands = \
bibtex,bibtex8,pbibtex,jbibtex,\
extractbb,\
gregorio,\
kpsewhich,\
makeindex,mendex,\
repstopdf,epspdf,\
texosquery-jre8,\
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで &lt;code&gt;shell_escape_commands&lt;/code&gt; の値が上書きされて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,pbibtex,jbibtex,extractbb,gregorio,kpsewhich,makeindex,mendex,repstopdf,epspdf,texosquery-jre8,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となる。&lt;/p&gt;
&lt;p&gt;設定を変更したら &lt;code&gt;mktexlsr&lt;/code&gt; で状態を更新しておくこと。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ mktexlsr
mktexlsr: Updating /usr/local/texlive/2021/texmf-config/ls-R... 
mktexlsr: Updating /usr/local/texlive/2021/texmf-dist/ls-R... 
mktexlsr: Updating /usr/local/texlive/2021/texmf-var/ls-R... 
mktexlsr: Updating /usr/local/texlive/texmf-local/ls-R... 
mktexlsr: Done.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;LuaLaTeX でなんか出力してみる&lt;/h2&gt;
&lt;p&gt;そうだ。
プログラムコードを出してみよう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/writing-code-with-lualatex/&#34;&gt;LuaLaTeX でコードを書いてみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;その前に &lt;a href=&#34;https://ctan.org/tex-archive/macros/latex/contrib/listings&#34; title=&#34;CTAN: /tex-archive/macros/latex/contrib/listings&#34;&gt;&lt;code&gt;listings&lt;/code&gt;&lt;/a&gt; パッケージで Go コードの syntax highlight が効くよう &lt;a href=&#34;https://github.com/julienc91/listings-golang&#34; title=&#34;julienc91/listings-golang: Golang support for the listings package in LaTeX&#34;&gt;&lt;code&gt;listings-golang&lt;/code&gt;&lt;/a&gt; を取ってくる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/texlive/texmf-local/tex/latex/
$ git clone git@github.com:julienc91/listings-golang.git
$ mktexlsr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そうそう。
$\mathrm{Lua\LaTeX}$ を使うならフォントキャッシュも念の為にアップデートしておくか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ luaotfload-tool -fu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用意したテキストはこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;jlreq&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[jis2004,deluxe]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% Japanese fonts
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\setmonofont&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[AutoFakeSlant,BoldItalicFeatures={FakeSlant},Scale=MatchLowercase]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Inconsolatazi4&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% use Inconsolata
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;graphicx,xcolor&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;% \usepackage{listings}
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;listings-golang&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% import this package after listings
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\lstset&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    frame=single,
    basicstyle=&lt;span class=&#34;k&#34;&gt;\small\ttfamily&lt;/span&gt;,
    tabsize=4,
    commentstyle=&lt;span class=&#34;k&#34;&gt;\color&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;darkgray&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    keywordstyle=&lt;span class=&#34;k&#34;&gt;\color&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;brown&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\bfseries&lt;/span&gt;,
    stringstyle=&lt;span class=&#34;k&#34;&gt;\color&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;blue&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
    showstringspaces=false
&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\section&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Go 言語による Hello World&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;lstlisting&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[language=Golang]
package main

import &amp;#34;fmt&amp;#34;

func main() &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
    for i := 0; i &amp;lt; 10; i++ &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;
        fmt.Println(&amp;#34;Hello, world&amp;#34;) //Hello, 世界
    &lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;lstlisting&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\section&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;シェルスクリプト&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;lstlisting&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[language=sh]
#!/bin/sh
for i in `seq 100`; do
  j=&amp;#34;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;i&amp;#34;
&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;  if &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt; `expr &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;i &lt;span class=&#34;c&#34;&gt;% 3` == 0 ]; then echo -n &amp;#39;Fizz&amp;#39;; j=&amp;#39;&amp;#39;; fi
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;  if [ `expr &lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;i &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;% 5` == 0 ]; then echo -n &amp;#39;Buzz&amp;#39;; j=&amp;#39;&amp;#39;; fi
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;  echo &amp;#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;$&lt;/span&gt;j&amp;#34;
done
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;lstlisting&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;へっへっへ。
&lt;code&gt;jlreq&lt;/code&gt; ドキュメントクラスを使ってみたぜ。&lt;/p&gt;
&lt;p&gt;これを処理した結果は以下の通り。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;./sample.pdf&#34;&gt;&lt;img src=&#34;./sample.png&#34; srcset=&#34;./sample.png 1252w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;sample.pdf&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;./sample.pdf&#34;&gt;sample.pdf&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;うんうん。
こんなもんだろう。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; に &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34; title=&#34;LaTeX Workshop - Visual Studio Marketplace&#34;&gt;LaTeX Workshop&lt;/a&gt; を導入する&lt;/h2&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』でも紹介されていた &lt;a href=&#34;https://code.visualstudio.com/&#34; title=&#34;Visual Studio Code - Code Editing. Redefined&#34;&gt;VS Code&lt;/a&gt; 用の &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34; title=&#34;LaTeX Workshop - Visual Studio Marketplace&#34;&gt;LaTeX Workshop&lt;/a&gt; を導入してみた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ code --install-extension James-Yu.latex-workshop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;たとえば，以下の内容で &lt;code&gt;.latexmkrc&lt;/code&gt; ファイルを用意しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# LaTeX commands&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$pdflatex&lt;/span&gt;            &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;lualatex %O -synctex=1 %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$latex&lt;/span&gt;               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;uplatex %O -synctex=1 %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$latex_silent_switch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;-interaction=batchmode -c-style-errors&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# bibTeX commands&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$bibtex&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;upbibtex %O %B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$biber&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;biber %O --bblencoding=utf8 -u -U --output_safechars %B&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$makeindex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;mendex %O -o %D %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Device Driver&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$dvipdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dvipdfmx %O -z9 -V 7 -o %D %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$dvips&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dvips %O -z -f %S | convbkmk -u &amp;gt; %D&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$ps2pdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;ps2pdf14 -dPDFA -dPDFACompatibilityPolicy=1 -sProcessColorModel=DeviceCMYK %O %S %D&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Typeset mode (generate a PDF)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$pdf_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 0: do not generate a pdf , 1: using $pdflatex , 2: using $ps2pdf , 3: using $dvipdf&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Other configuration&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$pvc_view_file_via_temporary&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$max_repeat&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;したら $\mathrm{\LaTeX}$ テキストを保存するたびに上の設定でタイプセットが自動実行されて PDF まで作ってしまうわけですよ。
めっさ便利。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/acquire-netinstall.html&#34;&gt;Installing TeX Live over the Internet - TeX Users Group&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://texwiki.texjp.org/&#34;&gt;TeX Wiki&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/04/install-texlive-in-ubuntu/&#34;&gt;TeX Live を Ubuntu に（APT を使わずに）導入する&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2019/06/upgrade-texlive-from-2018-to-2019/&#34;&gt;TeX Live 2018 から 2019 へのアップグレード&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/04/upgrade-texlive-2020/&#34;&gt;TeX Live 2020 へのアップグレード&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41xmBlTiwlL._SL160_.jpg&#34; width=&#34;126&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[改訂第8版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村晴彦 (著), 黒木裕介 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2020-11-14&lt;/dd&gt;
    &lt;dd&gt;大型本&lt;/dd&gt;
    &lt;dd&gt;4297117126 (ASIN), 9784297117122 (EAN), 4297117126 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2020年末に第8版が出てたのに気付かなかったよ。可能なら紙の本も買って常に側に置いておくのが吉。&lt;a href=&#34;https://gihyo.jp/book/2020/978-4-297-11712-2&#34;&gt;版元&lt;/a&gt;には PDF 版もある。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-09-05&#34;&gt;2021-09-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- LaTeX2ε美文書作成入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;電子署名の検証で「&lt;code&gt;*警告*: この鍵は信用できる署名で証明されていません!&lt;/code&gt;」と表示されているが，気にしなくてよい。その前の「&lt;code&gt;&amp;quot;TeX Live Distribution &amp;lt;tex-live@tug.org&amp;gt;&amp;quot;からの正しい署名&lt;/code&gt;」が表示されていればOK。警告が出るのはインポートした公開鍵に自鍵で署名したり有効度を設定したりしてないからだが，直接手渡しされた鍵でもないのに安易に信用するのは危険であると言っておこう。もちろん何らかの手段で鍵と所有者が確定できるのであれば署名するなり有効度を設定するなりすればよい。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>予防接種へ行ってきた（第2話）</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/09/vaccines-are-go-2nd/" />
		<id>tag:text.Baldanders.info,2021-09-07:/remark/2021/09/vaccines-are-go-2nd/</id>
		<published>2021-09-07T02:03:27+00:00</published>
		<updated>2021-09-07T02:13:21+00:00</updated>
		<summary>流石ドラッグストアは商売上手だ（笑）</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/08/vaccines-are-go/&#34; title=&#34;予防接種へ行ってきた（第1話）&#34;&gt;前半&lt;/a&gt;からの続き。&lt;/p&gt;
&lt;h2&gt;予防接種前日まで&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/08/vaccines-are-go/&#34; title=&#34;予防接種へ行ってきた（第1話）&#34;&gt;1回目&lt;/a&gt;は勤務先の夏季休暇のタイミングで予約できたが，2回目はこちらでタイミングを選べない。
できれば週末付近にしてほしかったが，思いっきり月曜日になってしまった。
会場は&lt;a href=&#34;https://text.baldanders.info/remark/2021/08/vaccines-are-go/&#34; title=&#34;予防接種へ行ってきた（第1話）&#34;&gt;1回目&lt;/a&gt;と同じ&lt;a href=&#34;http://www.matsue-cityhospital.jp/&#34; title=&#34;松江市立病院&#34;&gt;市立病院&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;というわけで，勤務先の上司に話したところ&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;「念のため翌日も有給休暇にしなさい」と言われ休むことにした。
翌朝になって発熱して休暇願いするとか，勤務中に具合が悪くなったりするくらいなら最初から休みにしたほうがマシだろうという判断である。&lt;/p&gt;
&lt;h2&gt;予防接種当日&lt;/h2&gt;
&lt;p&gt;午後イチの会議にちょっとだけ参加して帰るつもりが（午後から半休を申請済み），いつものように紛糾して予定より20分遅れで退勤。
一旦帰宅してから接種会場に向かうつもりである。&lt;/p&gt;
&lt;p&gt;帰り道でふと思い出した。&lt;/p&gt;
&lt;div class=&#34;center&#34;&gt;
「しまった。予診票書いてない！」
&lt;/div&gt;
&lt;p&gt;帰宅してから大慌てで予診票を書き（前回と同じ内容だしw），準備して会場に向かう。
お薬手帳も忘れないように！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2021/08/vaccines-are-go/&#34; title=&#34;予防接種へ行ってきた（第1話）&#34;&gt;前回&lt;/a&gt;の教訓から，できるだけ待ちなしにできるよう予約時刻15分前キッチリに会場に到着する。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/51428920226/&#34;&gt;&lt;img src=&#34;./51428920226_c85cc81427_e.jpg&#34; srcset=&#34;./51428920226_c85cc81427_e.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ヤクをキメてくるぜ！ | Flickr&#34;&gt;&lt;/a&gt;&lt;figcaption&gt;&lt;div&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/51428920226/&#34;&gt;ヤクをキメてくるぜ！ | Flickr&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;したら「待ち」どころか待機エリアに誰もいなかった。
さすが月曜日といったところか。
そのまま整理券をもらって入場。
会場内も待ち行列はなく，予約時刻の10分前にはお注射完了してしまった（笑） ちなみに予診票に不備があって赤ペンを入れられてしまったヨ。
慌てて書くもんじゃないよね。
ゴメンペコン。&lt;/p&gt;
&lt;p&gt;接種後の待機エリアにて持参してきた Kindle 端末でラノベを読みながら15分ほど和んで帰宅。
本当は病院内のカフェで茶でもシバいてから帰りたかったが，このご時世で開いてなかった。
残念。&lt;/p&gt;
&lt;p&gt;予診の担当医から「2回目は熱が出やすい」とアドバイスされたので，帰りがけに会場近くのドラッグストアで解熱剤を買うことにした。
いや，流石だね。
入口近くのエリアに解熱剤の特設コーナーがあったよ（笑）&lt;/p&gt;
&lt;p&gt;アスピリンとイブプロフェンのどちらにしようか悩んだが，某ダイ・ハードのせいでアスピリンは頭痛薬の印象が強い（イブプロフェンも頭痛・生理痛に効くけどね）。
とういうわけで，イブプロフェンが主成分の解熱剤を買って帰った。
まぁ，ドラッグストアで処方箋なしで買える薬なんだから気休め程度で。&lt;/p&gt;
&lt;h2&gt;予防接種翌日&lt;/h2&gt;
&lt;p&gt;いつもどおりに起きる。
熱は平熱。
そういや今日は着替えなくてよかった。
燃えるゴミの日なのでゴミ出しして，今日はのんびり過ごそう。&lt;/p&gt;
&lt;h2&gt;もし SARS-CoV-2 に感染したら&lt;/h2&gt;
&lt;p&gt;勤務先は「予防接種は任意で」というスタンスをとっている。
なので実施する場合は今回のように有給休暇をとる必要がある。
ただし，松江市でもようやく職域接種が始まるので，そちらの取りまとめはしてくれたらしい。
若い人はどうしても出遅れてるので（政治が悪いw）職域接種はありがたいかもしれない。&lt;/p&gt;
&lt;p&gt;感染時の手当も特にないらしいが，そもそも病気で数週間休んだ場合は傷病手当が日割り計算でもらえるので，そっちを積極的に利用してくれと言われている。
また，重症化して費用がかさんだ場合は高額療養費が貰えるはず。
実は私も持病関係でコレのお世話になっている。&lt;/p&gt;
&lt;p&gt;大抵の「病院」は申し出れば費用に関して相談に乗ってくれるセクションがあるので（病院側も貰いっぱぐれるのは困るからね）積極的に利用すべきだろう。&lt;/p&gt;
&lt;p&gt;今や誰でも「コロナは&lt;ruby&gt;&lt;rb&gt;伝染&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;うつ&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;るもの」と認識して準備・行動すべきだ。
おそらく年末には別の変異種も登場するだろう。
日頃の（美徳シグナリングではない）衛生管理は当たり前だが，一方で「水際対策」云々と騒ぐ季節はとうに過ぎている。&lt;/p&gt;
&lt;p&gt;「コロナ平気症」も「コロナ恐怖症」も百害あって一利なしだ。
避けられない病なら上手く付き合うことがリスク・マネジメントの基本だし，それを福祉や経済等で支援・補償するのは「政治」の仕事である。&lt;/p&gt;
&lt;p&gt;ついでに「脅威」だけを「&lt;a href=&#34;https://text.baldanders.info/remark/2020/08/information-howling/&#34; title=&#34;情報の「遠吠え」&#34;&gt;遠吠え&lt;/a&gt;」するク◯メディアは滅びろ！ と言いたい（笑）&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nytimes.com/2021/05/03/health/covid-herd-immunity-vaccine.html&#34;&gt;Reaching ‘Herd Immunity’ Is Unlikely in the U.S., Experts Now Believe - The New York Times&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/05/blog-post_4.html&#34;&gt;ブログ: アメリカでは「集団免疫」に到達するのは難しいと専門家は考えている&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07H93B9JF?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51vIDNhUdoL._SL160_.jpg&#34; width=&#34;160&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07H93B9JF?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;サンダーバード ARE GO (Original TV Soundtrack)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Ben Foster &amp;amp; Nick Foster (メインアーティスト)&lt;/dd&gt;
    &lt;dd&gt;Rambling RECORDS (Release 2016-01-20)&lt;/dd&gt;
    &lt;dd&gt;MP3 ダウンロード&lt;/dd&gt;
    &lt;dd&gt;B07H93B9JF (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;サンダーバードの曲は上がる！&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-08-13&#34;&gt;2021-08-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- Thunderbirds are go --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B07CXRPT4J?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51O&amp;#43;1sdBA1L._SL160_.jpg&#34; width=&#34;120&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B07CXRPT4J?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;ダイ・ハード2 (吹替版)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ウィリアム・アザートン (出演), レニー・ハーリン (監督)&lt;/dd&gt;
    &lt;dd&gt; (Release 2000-01-01)&lt;/dd&gt;
    &lt;dd&gt;Prime Video&lt;/dd&gt;
    &lt;dd&gt;B07CXRPT4J (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;まだ髪がある頃のブルース・ウィリスが観れる（笑） ちなみに私は野沢那智さんのファンなので吹替版が好み。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-09-04&#34;&gt;2021-09-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- ダイ・ハード2 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;念のために言うと，勤務先は有給休暇の理由を訊くとか野暮なことはしない。今時は当たり前かもしれないが。でも，まぁ，今回は理由が理由なので事前に言っておいたほうがいいと私が判断したのだ。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>改訂第8版『LaTeX2ε美文書作成入門』を眺める</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/09/latex-primer/" />
		<id>tag:text.Baldanders.info,2021-09-05:/remark/2021/09/latex-primer/</id>
		<published>2021-09-05T08:42:03+00:00</published>
		<updated>2021-09-05T09:54:36+00:00</updated>
		<summary>2020年11月に出てたの？ 完全に見落としてたよ orz</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;Twitter の TL を見て気が付いた。
あれ？ 『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』の第8版って出てるの？ 完全に見落としてたよ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』は Kindle 版もあるし&lt;a href=&#34;https://gihyo.jp/book/2020/978-4-297-11712-2&#34; title=&#34;［改訂第8版］LaTeX2ε美文書作成入門：書籍案内｜技術評論社&#34;&gt;版元&lt;/a&gt;で買えば PDF 版もあるんだけど，今回は紙の本を買った。
この手のリファレンス本は，一覧性という観点では，まだ紙のほうが有利。
デジタル版が好みなら PDF 版を買うのがいいだろう。
悪いが，この手の本で Kindle 版はない。&lt;/p&gt;
&lt;p&gt;第7版からの3年間で大きく変わったことといえば $\mathrm{Lua\LaTeX}$ 日本語環境の台頭だろう。
序文でも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;本書も $\mathrm{Lua\LaTeX}$ と新しい jleq ドキュメントクラスと原ノ味で組版しました&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08MZ98Z1Q?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;［改訂第8版］LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;と書かれている。
えっ，これ原ノ味フォントなの？ そういや巻末に原ノ味フォントの全グリフが載ってるな（笑）&lt;/p&gt;
&lt;p&gt;入力環境（第2章）についても真っ先に &lt;a href=&#34;https://cloudlatex.io/&#34; title=&#34;Cloud LaTeX | Build your own LaTeX environment, in seconds&#34;&gt;Cloud LaTeX&lt;/a&gt; が紹介されているし&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;（これは第7版でもそうか），コラム内とはいえ VS Code 用の &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop&#34; title=&#34;LaTeX Workshop - Visual Studio Marketplace&#34;&gt;LaTeX Workshop&lt;/a&gt; が紹介されていたりする。
また jleq ドキュメントクラスについても14章で詳しく解説している。
時代が変わったんだねぇ。&lt;/p&gt;
&lt;p&gt;グラフィック周りについては第7版に引き続き付録Dで &lt;a href=&#34;https://github.com/pgf-tikz&#34; title=&#34;pgf-tikz&#34;&gt;$\mathrm{Ti}k\mathrm{Z}$/PGF&lt;/a&gt; を詳しく解説している。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;$\mathrm{Ti}k\mathrm{Z}$ に慣れると &lt;code&gt;picture&lt;/code&gt; 環境は使いたくなくなります&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;&lt;q&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B08MZ98Z1Q?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;［改訂第8版］LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/q&gt;より&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;とか書かれてあって，ちょっと笑ってしまう。&lt;/p&gt;
&lt;p&gt;第8版では R, gnuplot 以外に Python を使った例を挙げている。
ちなみに Go 言語でも &lt;a href=&#34;https://github.com/gonum/plot&#34; title=&#34;gonum/plot: A repository for plotting and visualizing data&#34;&gt;gonum.org/v1/plot&lt;/a&gt; パッケージで $\mathrm{Ti}k\mathrm{Z}$ 出力をサポートしている。
また，みんな大好き &lt;a href=&#34;https://graphviz.org/doc/info/lang.html&#34; title=&#34;DOT Language | Graphviz&#34;&gt;DOT 言語&lt;/a&gt;でも &lt;a href=&#34;https://dot2tex.readthedocs.io/&#34; title=&#34;dot2tex - A Graphviz to LaTeX converter — dot2tex 2.11.3 documentation&#34;&gt;dot2tex&lt;/a&gt; というツール（Python 製）を使うと $\mathrm{Ti}k\mathrm{Z}$ 形式に変換してくれるらしい。
もっとも &lt;a href=&#34;https://dot2tex.readthedocs.io/&#34; title=&#34;dot2tex - A Graphviz to LaTeX converter — dot2tex 2.11.3 documentation&#34;&gt;dot2tex&lt;/a&gt; には &lt;a href=&#34;https://dot2tex.readthedocs.io/en/latest/tipsandtricks.html#the-dot2texi-latex-package&#34;&gt;&lt;code&gt;dot2texi&lt;/code&gt; $\mathrm{\LaTeX}$ パッケージ&lt;/a&gt;もあるようなので，こっちのほうが便利かもしれないが。
あと &lt;a href=&#34;https://plantuml.com/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw beautiful UML diagrams.&#34;&gt;PlantUML&lt;/a&gt; でもベータ版ながら &lt;a href=&#34;https://plantuml.com/ja/latex&#34;&gt;$\mathrm{Ti}k\mathrm{Z}$ 形式に対応&lt;/a&gt;しているようだ。&lt;/p&gt;
&lt;p&gt;ぶっちゃけ &lt;a href=&#34;https://text.baldanders.info/remark/2020/06/pdfa-with-luatex/&#34; title=&#34;LuaLaTeX で PDF/A を構成する&#34;&gt;PDF を最終出力とする&lt;/a&gt;のなら $\mathrm{Lua\LaTeX}$ で必要十分だよな。
まぁ，論文を書くとなると各学会用のドキュメントクラスを使わないといけないので簡単ではないだろうが。&lt;/p&gt;
&lt;p&gt;最近は $\mathrm{Lua\LaTeX}$ を直にゴリゴリ書く機会は無くなったが『&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34; title=&#34;[改訂第8版]LaTeX2ε美文書作成入門 | 奥村晴彦, 黒木裕介 |本 | 通販 | Amazon&#34;&gt;LaTeX2ε美文書作成入門&lt;/a&gt;』を眺めていると色々遊びたくなってくる。
今の仕事が落ち着いたら試してみたいところである。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://texwiki.texjp.org/&#34;&gt;TeX Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/moinslut/items/bc1d1b1e13cb38377406&#34;&gt;LaTeX Workshopってなに？どうやって使うの？調べてみた！ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mynote-jp.com/entry/TikZ-examples-2D-graph&#34;&gt;TikZ実例集〜2Dグラフ編 - Notes_JP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mynote-jp.com/entry/TikZ-examples&#34;&gt;TikZ実例集〜3D編 - Notes_JP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41xmBlTiwlL._SL160_.jpg&#34; width=&#34;126&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4297117126?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[改訂第8版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村晴彦 (著), 黒木裕介 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2020-11-14&lt;/dd&gt;
    &lt;dd&gt;大型本&lt;/dd&gt;
    &lt;dd&gt;4297117126 (ASIN), 9784297117122 (EAN), 4297117126 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;2020年末に第8版が出てたのに気付かなかったよ。可能なら紙の本も買って常に側に置いておくのが吉。&lt;a href=&#34;https://gihyo.jp/book/2020/978-4-297-11712-2&#34;&gt;版元&lt;/a&gt;には PDF 版もある。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-09-05&#34;&gt;2021-09-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- LaTeX2ε美文書作成入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://cloudlatex.io/&#34; title=&#34;Cloud LaTeX | Build your own LaTeX environment, in seconds&#34;&gt;Cloud LaTeX&lt;/a&gt; 連携用の &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=cloudlatex.cloudlatex&#34; title=&#34;Cloud LaTeX - Visual Studio Marketplace&#34;&gt;VS Code 拡張機能&lt;/a&gt;があるんだな。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>失敗体験という技術</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2021/09/trial-and-error/" />
		<id>tag:text.Baldanders.info,2021-09-05:/remark/2021/09/trial-and-error/</id>
		<published>2021-09-05T02:26:57+00:00</published>
		<updated>2021-09-05T02:59:57+00:00</updated>
		<summary>技能は成功体験で技術は失敗体験</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今回は Facebook の TL で見かけた記事を起点に戯れ言を書いてみる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://logmi.jp/business/articles/324932&#34;&gt;今の子どもを苦しめているのは、昔の常識を教える大人　植松努氏が実感した、日本教育の世界との“ズレ”  - ログミーBiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教育機関の最終目標は教育機関から離陸させることであり「企業はおそらく最終教育機関」てのはダメなんじゃないのかなぁ。
教育機関があろうとなかろうと人は一生勉強だよ。
まぁ「教育機関」としての企業を踏み台にして別の企業や事業へキャリア・アップするというのなら，労働者側にとってはアリかもしれないが（笑）&lt;/p&gt;
&lt;p&gt;何も知らずに IT 業界に入ったばかりの頃は色々叩き込まれたが，そのうちのひとつは「プログラミング設計は異常系を書ききること」だ。&lt;/p&gt;
&lt;p&gt;正常系は基本的に一本道だが異常系は無数にある。
それらをひとつひとつ迷路パズルの袋小路を塗りつぶすように塞いでいくのがプログラミングだろう。
これはプログラムをフローで認識しているうちは気づかない。
だから新人のうちは状態遷移表を大量に書かされた&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;でも異常系の列挙は，それを予め知ってないと書けないんだよね。&lt;/p&gt;
&lt;p&gt;この「予め知る」ための失敗体験こそが &lt;ruby&gt;&lt;rb&gt;技能&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;スキル&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;ではなく技術の源泉だと思う。
そういう意味で「制御された失敗」を蓄積することはエンジニアとしては正しいやり方と言える。
エンジニアが言う「もう二度とやらない」は「次やるときは上手くやる」という意味である（笑）&lt;/p&gt;
&lt;p&gt;また当時は「技能はモノに付くが技術は人に付く」とも教えられた。
今回紹介した記事に絡めるなら技能は成功体験で技術は失敗体験と言えるかもしれない。
技能と技術は開発の両輪で，どちらもなくてはならないものだ。&lt;/p&gt;
&lt;p&gt;よく整備された散歩道を歩くのは気持ちいいし，それはそれでよい体験だと思うが，散歩道に施されている「整備」に気付けるのは脇道や寄り道も歩いてこそである。
まぁ，今の世知辛い世の中では，失敗を許容する余裕がないから技術も蓄積されないのかもしれないが。
技術斜陽国ニッポン（笑）&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4816412174?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51EnOXOZbdL._SL160_.jpg&#34; width=&#34;111&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4816412174?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;迷路で行こう&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;忠之, 坂本 (著), 博, 吉岡 (著), 一之, 湯沢 (著), ニコリ (編集)&lt;/dd&gt;
    &lt;dd&gt;波書房 1991-12-01&lt;/dd&gt;
    &lt;dd&gt;単行本&lt;/dd&gt;
    &lt;dd&gt;4816412174 (ASIN), 9784816412172 (EAN), 4816412174 (ISBN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;私はニコリで迷路の解き方を教えてもらいました。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-09-05&#34;&gt;2021-09-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 迷路で行こう --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4873114985?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/512xgQsxaML._SL160_.jpg&#34; width=&#34;114&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/4873114985?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;子どもが体験するべき50の危険なこと (Make: Japan Books)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Gever Tulley (著), Julie Spiegler (著), 金井 哲夫 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;オライリージャパン 2011-05-26&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4873114985 (ASIN), 9784873114989 (EAN), 4873114985 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ただ守るだけではダメなのよ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-10-08&#34;&gt;2014-10-08&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 子どもが体験するべき50の危険なこと --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00O1VJZLO?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51DLzSbrC9L._SL160_.jpg&#34; width=&#34;107&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B00O1VJZLO?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;火星の人&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アンディ ウィアー (著), 小野田和子 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;早川書房 2014-08-25 (Release 2014-09-30)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00O1VJZLO (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;面白かった。やっぱ原作のほうがいいな。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-02-20&#34;&gt;2016-02-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 火星の人 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;知らない人のために解説すると，状態遷移表とは「状態」と「イベント」を行・列の表として列挙して，交差する各要素に処理を記述したもの。ちなみに，フローはコードを見れば分かるからフローチャートは要らんと言われた。顧客への言い訳用に書かされたことはあったけど（笑） 現在主流になりつつある関数型言語ではそもそもフロー記述が通用しないかな。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>定数生成器 iota についてちゃんと書く</title>
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/iota-constant-generator/" />
		<id>tag:text.Baldanders.info,2021-09-05:/golang/iota-constant-generator/</id>
		<published>2021-09-04T22:28:46+00:00</published>
		<updated>2021-09-04T23:52:58+00:00</updated>
		<summary>ポイントは iota はインデックス値であってカウンタではないということだ。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;「&lt;a href=&#34;https://gpl-reading.connpass.com/event/221591/&#34;&gt;第16回『プログラミング言語Go』オンライン読書会&lt;/a&gt;」で出た話題を過去の失敗を含めて &lt;a href=&#34;https://zenn.dev/spiegel/articles/20210904-value-of-iota&#34; title=&#34;iota 出現時の値はゼロとは限らない&#34;&gt;Zenn で書いた&lt;/a&gt;が，微妙に反応がある気がするので，今後の自分のためにも &lt;code&gt;iota&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; についてちゃんと書いておいたほうがいいかもしれない。&lt;/p&gt;
&lt;p&gt;まずは用語から入るとしよう。&lt;/p&gt;
&lt;p&gt;定数の中でも &lt;code&gt;rune&lt;/code&gt;，整数（&lt;code&gt;int&lt;/code&gt; など），浮動小数点数（&lt;code&gt;float64&lt;/code&gt; など），複素数（&lt;code&gt;complex128&lt;/code&gt; など）の定数をまとめて「数値定数（&lt;span lang=&#34;en&#34;&gt;numeric constants&lt;/span&gt;）」と呼ぶ。
数値定数の定数式（&lt;span lang=&#34;en&#34;&gt;constant expression&lt;/span&gt;）は以下のようにリテラルで表すことができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Rune&lt;/span&gt;         &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Integer&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;FloatingPont&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.4&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Complex&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.6&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;7.8i&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rune&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FloatingPont&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 97 4 3.4 (5.6+7.8i)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（型付けなし定数（&lt;span lang=&#34;en&#34;&gt;untyped constant&lt;/span&gt;）として宣言されている点に注意）&lt;/p&gt;
&lt;p&gt;定数生成器（&lt;span lang=&#34;en&#34;&gt;constant generator&lt;/span&gt;）&lt;code&gt;iota&lt;/code&gt; は数値定数の中で事前に宣言された型付けなし整数を表す識別子で，以下の性質を持つ。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Within a &lt;a href=&#34;https://golang.org/ref/spec#Constant_declarations&#34;&gt;constant declaration&lt;/a&gt;, the predeclared identifier &lt;code&gt;iota&lt;/code&gt; represents successive untyped integer &lt;a href=&#34;https://golang.org/ref/spec#Constants&#34;&gt;constants&lt;/a&gt;. Its value is the &lt;strong&gt;index of the respective ConstSpec&lt;/strong&gt; in that constant declaration, starting at zero&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/ref/spec#Iota&#34;&gt;The Go Programming Language Specification - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;強調は私がやりました。
ポイントは &lt;code&gt;iota&lt;/code&gt; は（&lt;code&gt;const (...)&lt;/code&gt; 内の）インデックス値であってカウンタではないということだ。&lt;/p&gt;
&lt;p&gt;私が過去にやらかした&lt;a href=&#34;https://zenn.dev/spiegel/articles/20210904-value-of-iota&#34; title=&#34;iota 出現時の値はゼロとは限らない&#34;&gt;勘違い&lt;/a&gt;について敢えて解説すると，もともと定数宣言は&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;Within a parenthesized &lt;code&gt;const&lt;/code&gt; declaration list the expression list may be omitted from any but the first ConstSpec. Such an empty list is equivalent to the textual substitution of the first preceding non-empty expression list and its type if any. Omitting the list of expressions is therefore equivalent to repeating the previous list&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/ref/spec#Constant_declarations&#34;&gt;The Go Programming Language Specification - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;という性質があり，同じ定数式の繰り返しを省略することができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c2&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c3&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1 1 1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これとインデックス値 &lt;code&gt;iota&lt;/code&gt; を組み合わせて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c2&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c3&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1 2 3
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のように書けるのだが，この字面から何となく &lt;code&gt;iota&lt;/code&gt; をカウンタと思い込んでいたのだった。
嗚呼，恥ずかしい&amp;hellip;&lt;/p&gt;
&lt;p&gt;上の定数宣言は以下と等価である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// c1 == 1 (iota == 0)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// c2 == 2 (iota == 1)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;c3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// c3 == 3 (iota == 2)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また ConstSpec 単位のインデックス値なので，こんな変態的な記述もできる（笑）&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote class=&#34;nobox&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;bit0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mask0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;iota&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// bit0 == 1, mask0 == 0  (iota == 0)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;bit1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mask1&lt;/span&gt;                          &lt;span class=&#34;c1&#34;&gt;// bit1 == 2, mask1 == 1  (iota == 1)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;                                 &lt;span class=&#34;c1&#34;&gt;//                        (iota == 2, unused)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;bit3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;mask3&lt;/span&gt;                          &lt;span class=&#34;c1&#34;&gt;// bit3 == 8, mask3 == 7  (iota == 3)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;&lt;div&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/ref/spec#Iota&#34;&gt;The Go Programming Language Specification - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;というわけで，どっとはらい。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/416Stewy0NS._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl&gt;
    &lt;dt class=&#34;item&#34;&gt;&lt;a class=&#34;fn url&#34; href=&#34;https://www.amazon.co.jp/dp/B099928SJD?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;アラン・ドノバン (著), ブライアン・カーニハン (著), 柴田芳樹 (著)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20 (Release 2021-07-13)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B099928SJD (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;Kindle 版出た！ 一部内容が古びてしまったが，この本は Go 言語の教科書と言ってもいいだろう。感想は&lt;a href=&#34;https://text.baldanders.info/remark/2016/07/go-programming-language/&#34; &gt;こちら&lt;/a&gt;。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2021-05-22&#34;&gt;2021-05-22&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ちなみに iota は「イオタ」と読む。ギリシャ文字のイオタ（Ι / ι）を指す言葉である。&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>2021-09-04 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2021/09/04-bookmarks/" />
		<id>tag:text.Baldanders.info,2021-09-04:/bookmarks/2021/09/04-bookmarks/</id>
		<published>2021-09-04T11:29:06+00:00</published>
		<updated>2021-09-04T11:29:35+00:00</updated>
		<summary>「Improving Git protocol security on GitHub」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.4.10_3&#34; rel=&#34;nofollow&#34;&gt;Release 4.4.10_3 · zetamatta/nyagos · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.88.0-relnotes/&#34; rel=&#34;nofollow&#34;&gt;Go 1.17 Update | Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.60.0&#34; rel=&#34;nofollow&#34;&gt;Release August 2021 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lawfareblog.com/solarwinds-and-holiday-bear-campaign-case-study-classroom&#34; rel=&#34;nofollow&#34;&gt;SolarWinds and the Holiday Bear Campaign: A Case Study for the Classroom - Lawfare&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2021/08/excellent-write-up-of-the-solarwinds-security-breach.html&#34; rel=&#34;nofollow&#34;&gt;Excellent Write-up of the SolarWinds Security Breach - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35175898/&#34; rel=&#34;nofollow&#34;&gt;「Azure Cosmos DB」に重大な脆弱性&amp;ndash;「Jupyter Notebook」の利用者は要注意 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2021/at210037.html&#34; rel=&#34;nofollow&#34;&gt;Confluence ServerおよびData Centerの脆弱性（CVE-2021-26084）に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/02/2021-08-31-fortress-home-security-rapid7/&#34; rel=&#34;nofollow&#34;&gt;人気スマートホームセキュリティ製品の遠隔操作で解除できる欠陥を研究者が発表  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/2021-09-01-improving-git-protocol-security-github/&#34; rel=&#34;nofollow&#34;&gt;Improving Git protocol security on GitHub | The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineers.ntt.com/entry/2021/09/02/162022&#34; rel=&#34;nofollow&#34;&gt;次世代の監視技術 - Telemetry技術のご紹介 - NTT Communications Engineers&#39; Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210903-o-mg-cable-leak-key-type/&#34; rel=&#34;nofollow&#34;&gt;一見普通のUSBケーブルなのにキーボードで打ち込んだ内容をすべてWi-Fi経由で外部に送信してしまう「O.MGケーブル」が登場 - GIGAZINE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/news/articles/2108/30/news065.html&#34; rel=&#34;nofollow&#34;&gt;結局、「漫画村」は死んでないのではないか：小寺信良のIT大作戦（1/3 ページ） - ITmedia NEWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.yahoo.co.jp/byline/kuriharakiyoshi/20210901-00256147&#34; rel=&#34;nofollow&#34;&gt;マツモトキヨシの音商標審査が知財高裁で逆転：他人の氏名を含む商標の登録は可能になるのか？（栗原潔） - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/03/2021-09-01-google-appeals-disproportionate-french-copyright-talks-fine/&#34; rel=&#34;nofollow&#34;&gt;グーグルが仏当局によるニュース発行者の著作権をめぐる罰金を不当として控訴  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2021/08/ubuntu-2110-10.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 21.10 その10 - 壁紙コンテストの結果発表・プリインストールされる壁紙の決定 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2021/08/ubuntu-2204-1-ubuntu-2204-lts.html&#34; rel=&#34;nofollow&#34;&gt;Ubuntu 22.04 その1 - Ubuntu 22.04 LTSのリリーススケジュール - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Azure や Windows に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1346975.html&#34; rel=&#34;nofollow&#34;&gt;Windows 11が第7世代Intel Core CPUの一部に対応 ～Surface Studio 2も更新可能に - 窓の杜&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/08/30/windows-11-not-update-old-cpus/&#34; rel=&#34;nofollow&#34;&gt;マイクロソフトが「Windows 11を手動で入れた古いPCにはアップデート提供しない」可能性を示唆  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1346972.html&#34; rel=&#34;nofollow&#34;&gt;Windows 11へ更新できるかチェックするMicrosoft公式ツール、プレビュー版が再公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/09/01/2021-08-31-windows-11-launches-october-5/&#34; rel=&#34;nofollow&#34;&gt;Windows 11の提供開始は10月5日から、マイクロソフトが発表  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35176000/&#34; rel=&#34;nofollow&#34;&gt;「Windows 11」のAndroidアプリ対応、リリース時には含まれず - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1348400.html&#34; rel=&#34;nofollow&#34;&gt;「Windows 11」「Windows 10 バージョン 21H2」の商用プレビューが開始 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35176194/&#34; rel=&#34;nofollow&#34;&gt;Azureデータベースサービスの使い方&amp;ndash;マイクロソフトが解説 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Go 言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-go/releases/tag/v57.0.0&#34; rel=&#34;nofollow&#34;&gt;Release v57.0.0 · Azure/azure-sdk-for-go · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/hsaki/books/golang-context&#34; rel=&#34;nofollow&#34;&gt;よくわかるcontextの使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ikawaha/articles/20210828-f24a0f5a8f0359&#34; rel=&#34;nofollow&#34;&gt;pkg.go.devのドキュメントのVariablesに載せる大域変数は初期化していないといけない？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/knieriem/odf&#34; rel=&#34;nofollow&#34;&gt;GitHub - knieriem/odf: Packages odf and odf/ods that allow basic read-only access to Open Document Spreadsheets in Go (golang).&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/jp_ibis/items/506911b0deaa5ff94687&#34; rel=&#34;nofollow&#34;&gt;Goでods(Open Office Spreadsheet)ファイルを読み込む - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Java  言語関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/shindo_ryo/items/af7d12be264c2cc4b252&#34; rel=&#34;nofollow&#34;&gt;【Spring Data JPA】自動実装されるメソッドの命名ルール - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/oh_yeah_sayryo/items/913646e31bd2064ba5c9&#34; rel=&#34;nofollow&#34;&gt;Thymeleafチートシート （ver3.0.11） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/yakumo3390/items/6b3fcc9e00f7a682660c&#34; rel=&#34;nofollow&#34;&gt;Thymeleaf 構文一覧 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;天文関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/astro/sky/2021/09-topics03.html&#34; rel=&#34;nofollow&#34;&gt;中秋の名月（2021年9月） | 国立天文台(NAOJ)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://eco.mtk.nao.ac.jp/koyomi/wiki/C3E6BDA9A4CECCBEB7EEA4C8A4CF.html&#34; rel=&#34;nofollow&#34;&gt;暦Wiki/中秋の名月とは - 国立天文台暦計算室&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/08/28/2021-08-27-linux-5-14-set-to-boost-future-enterprise-application-security/&#34; rel=&#34;nofollow&#34;&gt;30歳を迎えたLinuxがカーネルを5.14にアップデート、エンタープライズセキュリティを強化  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mynote-jp.com/entry/TikZ-examples&#34; rel=&#34;nofollow&#34;&gt;TikZ実例集〜3D編 - Notes_JP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/ymmmtym/articles/github-cli-gh-extension&#34; rel=&#34;nofollow&#34;&gt;GitHub CLI v2.0 のカスタムコマンドを試す&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/nvidiavspherenvidia_ai_enterprisegpu.html&#34; rel=&#34;nofollow&#34;&gt;NVIDIA、vSphere環境で稼働する「NVIDIA AI Enterprise」提供開始。GPUの能力を仮想化でスケーラブルに提供 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://internet.watch.impress.co.jp/docs/yajiuma/1347019.html&#34; rel=&#34;nofollow&#34;&gt;国民生活センターがスマホ副業を宣伝？「タイトルを自動変更するGoogleの新仕様」で大混乱【やじうまWatch】 - INTERNET Watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gigazine.net/news/20210831-arm-china-robbed-ip/&#34; rel=&#34;nofollow&#34;&gt;Armの中国合弁企業がArmからの独立を宣言、一部ライセンスや中国市場の顧客をそのまま横取り - GIGAZINE&lt;/a&gt; : チャイナ・リスク&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/nhk_syuzai/n/n9ccbd599da50&#34; rel=&#34;nofollow&#34;&gt;（追記あり）記者に「プログラミングのスキル」って必要なの？ちなみにNHKニュースの画像生成も記者がコードを書いてます｜NHK取材ノート｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2021/08/31/codh-kuzusiji-recognition-app/&#34; rel=&#34;nofollow&#34;&gt;江戸時代のくずし字をAIにより文字認識し現代の書体に変換（翻刻）するアプリ「みを」をCODHが無料公開  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1347283.html&#34; rel=&#34;nofollow&#34;&gt;「Microsoft Office」が「ODF 1.3」対応へ ～「LibreOffice」でも扱えるオープンなファイル形式 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.blog/jp/2021-08-30-githubs-engineering-team-moved-codespaces/&#34; rel=&#34;nofollow&#34;&gt;GitHub開発チームでのCodespacesの利用 - GitHubブログ&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/features/codespaces&#34; rel=&#34;nofollow&#34;&gt;GitHub Codespaces · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/codespaces&#34; rel=&#34;nofollow&#34;&gt;GitHub Codespaces Documentation - GitHub Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/Alt225/items/5d904fafc779e6505768&#34; rel=&#34;nofollow&#34;&gt;Github CodeSpace 触ってみた - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.eastpress.co.jp/goods/detail/9784781619989&#34; rel=&#34;nofollow&#34;&gt;書籍詳細 - コモンズとしての日本近代文学｜イースト・プレス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.com/tiyu/n/n34e917d87120&#34; rel=&#34;nofollow&#34;&gt;「NTR」という言葉の発祥は、たぶん2001年7月18日｜ちゆ12歳｜note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/kaityo256/articles/inside_the_branch&#34; rel=&#34;nofollow&#34;&gt;Gitのブランチの実装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/pacchiy/articles/e4dcd7bd29d387&#34; rel=&#34;nofollow&#34;&gt;【2021年版】faviconの設定方法と画像の作り方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/21/it_2022.html&#34; rel=&#34;nofollow&#34;&gt;ITフリーランスを対象とした国の労災保険「特別加入制度」が今日からスタート。フリーランスでも通勤や仕事によるケガ、病気、障害、死亡など補償 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20210902/philip-glass-on-ai&#34; rel=&#34;nofollow&#34;&gt;フィリップ・グラスが人工知能と芸術について語る - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://p2ptk.org/monopoly/antitrust/3358&#34; rel=&#34;nofollow&#34;&gt;獣を飢えさせよ：独占力と政治的腐敗 | P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://positron.exblog.jp/32420467/&#34; rel=&#34;nofollow&#34;&gt;webアクション「部屋裏のバイテン」第17話 : ぽじとろんの竹本泉観察記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tomshardware.com/news/apple-looking-for-risc-v-programmers&#34; rel=&#34;nofollow&#34;&gt;Apple Exploring RISC-V, Hiring RISC-V &amp;lsquo;High Performance&amp;rsquo; Programmers | Tom&amp;rsquo;s Hardware&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2021/09/applerisc-vrisc-v.html&#34; rel=&#34;nofollow&#34;&gt;ブログ: AppleはRISC-Vを探究、RISC-Vの「高性能」プログラマを採用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
</feed>
