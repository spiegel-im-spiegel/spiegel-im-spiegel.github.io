<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2016-06-04:/</id>
	<updated>2016-06-04T09:08:09+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info//images/avatar.jpg</icon>
	<logo>http://text.baldanders.info//images/avatar.jpg</logo>
	<generator uri="http://gohugo.io/">Hugo 0.15</generator>

	
	<entry>
		<title>ハード屋が書く C ソースコードが凄まじかった思い出（再掲載） - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/06/code-by-hardware-engineer/" />
		<id>tag:text.Baldanders.info,2016-06-04:/remark/2016/06/code-by-hardware-engineer/</id>
		<published>2016-06-04T09:08:09+09:00</published>
		<updated>2016-06-04T09:08:09+09:00</updated>
		<summary>この件では，若いころのほろ苦い思い出がある。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;これは&lt;a href=&#34;https://medium.com/@spiegel/-1ca9e4895f4c&#34;&gt;ちょうど1年前に Medium で書いた記事&lt;/a&gt;の再掲載である。
今は Medium を全く利用しないので，昔書いたもので（私が）面白いと思った記事は少しずつこっちに移転しようかな。&lt;/p&gt;

&lt;hr /&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;この記事で面白いのは、Michael Barr が20ヶ月以上にわたりトヨタ車で使われているソースコードを、Philip Koopman カーネギーメロン大学教授がトヨタのエンジニアリングの安全プロセスを精査した話で、両者ともトヨタのソフトウェアがスパゲッティコード山盛りなことを証言している。
&lt;br&gt;
トヨタの生産方式はアジャイル方面においてソフトウェア開発手法に多大な影響を与えている。ところでそのトヨタが開発するソフトウェアの品質はどうなんだろう、というのは多くの人の頭に浮かぶ疑問だろう。組み込みソフトウェアのエキスパートによると、ものすごく複雑で、複雑すぎてテストもメンテもできない関数がたくさんあるとか、グローバル変数が1万個以上あるとかなかなか壮絶らしい……。マジかよ。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20150604/toyota&#34;&gt;トヨタの車のソースコードはスパゲッティコード山盛り？ - YAMDAS現更新履歴&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;この件では，若いころのほろ苦い思い出がある。&lt;/p&gt;

&lt;p&gt;私は若いころは「システムハウス」と呼ばれる類の会社にいたのだが，そこではハードとソフトの両面で開発を進められるのが「売り」だった。
&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000529.shtml&#34; title=&#34;私はこうしてプログラミングを覚えた — Baldanders.info&#34;&gt;私はハードは壊滅的にダメ&lt;/a&gt;なのでソフトウェア担当。
当時のハード屋は自分が組んだ回路の実証のために自分でもプログラムを組んで動作確認する。
私たちソフト屋はそのコードをもらって実際のコードを書くわけだが，この実証コードが凄まじかった。&lt;/p&gt;

&lt;p&gt;まず変数は全てグローバル変数。
スコープとかカプセル化なんて知るか！ という気概が感じられる。
そして関数は果てしなく長い main 関数のみ。
無間地獄のネスト。
goto 文で飛びまくり。
なのに異常系の記述は皆無。
世に聞く「スパゲッティ・コード」とはこのようなものなのかと感嘆したよ。&lt;/p&gt;

&lt;p&gt;一番凄かったのは，とあるチップを使った30次のバンドパスフィルタを組むのに「サンプルがあるのから簡単でしょ」と言われてサンプルを見たら世にも悍ましいコードで，解析するだけで半月もかかってしまった。&lt;/p&gt;

&lt;p&gt;まぁ，ハード屋がこういうコードを書くのは理由があって，変数を記述するときはメモリ上のマッピングをそのまま置き換えようとするし，ロジックも基本的にマシン語のインストラクションをそのまま C に置き換えようとするから「関数」という概念がそもそもないことが多い&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:915bc088b3e2a5197ecd6e7bb5cb3635:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:915bc088b3e2a5197ecd6e7bb5cb3635:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;おかげで私は「他人のコードを読む」ことがすんごい得意になってしまった。
アレに比べればソフト屋の書くコードなんて絵本を読むように分かりやすい（笑） でも，こんなしょうもない特技でも後年ちゃんと役に立ってるんだから世の中というのは分からないものである。&lt;/p&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/427406932X/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51llL1uygcL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/427406932X/baldandersinf-22/&#34;&gt;リーン開発の現場 カンバンによる大規模プロジェクトの運営&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Henrik Kniberg 角谷 信太郎 &lt;/dd&gt;&lt;dd&gt;オーム社 2013-10-26&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4897979358/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4897979358.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハイブリッドアジャイルの実践&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/462108786X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/462108786X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Fearless Change アジャイルに効く アイデアを組織に広めるための48のパターン&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/482228350X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/482228350X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;リーン開発の本質&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798130613/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798130613.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ディシプリンド・アジャイル・デリバリー エンタープライズ・アジャイル実践ガイド (Object Oriented SELECTION)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117097/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117097.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Serverspec&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;「かんばん方式」もだいぶ浸透してきましたよね。私はこれで勉強しました。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-02-17&#34;&gt;2015/02/17&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:915bc088b3e2a5197ecd6e7bb5cb3635:a&#34;&gt;ハード屋は call インストラクションを「特殊なジャンプ」程度にしか認識していない（まぁ確かにそうなのだが）。あるプロジェクトで見せてもらったアセンブラコードでは call で積んだスタックをいじって戻り先アドレスを変えて return する記述が頻出していた。これはアセンブラ・コードにパッチを当てる際の基本テクニックらしい。大昔の話だよ（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:915bc088b3e2a5197ecd6e7bb5cb3635:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Open Source License API ? - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/open-source-license-api/" />
		<id>tag:text.Baldanders.info,2016-05-30:/remark/2016/05/open-source-license-api/</id>
		<published>2016-05-30T04:14:11+09:00</published>
		<updated>2016-05-30T04:14:11+09:00</updated>
		<summary>どうやらオープンソース・ライセンスに関する情報（メタデータ）を取り出せる仕組みのようだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20160529/ossapi&#34;&gt;yomoyomo さんの記事&lt;/a&gt;から。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://opensource.org/node/822&#34;&gt;Announcing the Open Source License API | Open Source Initiative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/OpenSourceOrg/api&#34;&gt;OpenSourceOrg/api: Light API based on the licenses spec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;う～ん？ どうやらオープンソース・ライセンスに関する情報（メタデータ）を取り出せる仕組みのようだ。&lt;/p&gt;

&lt;p&gt;たとえば Apache License 2.0 の情報を取り出すには &lt;a href=&#34;https://api.opensource.org/license/Apache-2.0&#34;&gt;https://api.opensource.org/license/Apache-2.0&lt;/a&gt; にリクエストを投げる。
すると結果が JSON 形式で返ってくる。
（以下は見やすいように適当に改行を入れている。
各項目の Schema はリポジトリの &lt;a href=&#34;https://github.com/OpenSourceOrg/api/blob/master/doc/endpoints.md&#34;&gt;doc/endpoints.md&lt;/a&gt; に説明がある）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;id&amp;quot;:&amp;quot;Apache-2.0&amp;quot;,
    &amp;quot;identifiers&amp;quot;:
        [
            {
                &amp;quot;identifier&amp;quot;:&amp;quot;Apache-2.0&amp;quot;,
                &amp;quot;scheme&amp;quot;:&amp;quot;DEP5&amp;quot;
            },
            {
                &amp;quot;identifier&amp;quot;:&amp;quot;Apache-2.0&amp;quot;,
                &amp;quot;scheme&amp;quot;:&amp;quot;SPDX&amp;quot;
            },
            {
                &amp;quot;identifier&amp;quot;:&amp;quot;License :: OSI Approved :: Apache Software License&amp;quot;,
                &amp;quot;scheme&amp;quot;:&amp;quot;Trove&amp;quot;
            }
        ],
    &amp;quot;links&amp;quot;:
        [
            {
                &amp;quot;note&amp;quot;:&amp;quot;tl;dr legal&amp;quot;,
                &amp;quot;url&amp;quot;:&amp;quot;https://tldrlegal.com/license/apache-license-2.0-%28apache-2.0%29&amp;quot;
            },
            {
                &amp;quot;note&amp;quot;:&amp;quot;Wikipedia page&amp;quot;,
                &amp;quot;url&amp;quot;:&amp;quot;https://en.wikipedia.org/wiki/Apache_License&amp;quot;
            },
            {
                &amp;quot;note&amp;quot;:&amp;quot;OSI Page&amp;quot;,
                &amp;quot;url&amp;quot;:&amp;quot;https://opensource.org/licenses/Apache-2.0&amp;quot;
            }
        ],
    &amp;quot;name&amp;quot;:&amp;quot;Apache License, Version 2.0&amp;quot;,
    &amp;quot;other_names&amp;quot;:[],
    &amp;quot;superseded_by&amp;quot;:null,
    &amp;quot;keywords&amp;quot;:
        [
            &amp;quot;osi-approved&amp;quot;,
            &amp;quot;popular&amp;quot;,
            &amp;quot;permissive&amp;quot;
        ],
    &amp;quot;text&amp;quot;:
        [
            {
                &amp;quot;media_type&amp;quot;:&amp;quot;text/html&amp;quot;,
                &amp;quot;title&amp;quot;:&amp;quot;HTML&amp;quot;,
                &amp;quot;url&amp;quot;:&amp;quot;https://www.apache.org/licenses/LICENSE-2.0&amp;quot;
            }
        ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;あるいは &lt;a href=&#34;https://spdx.org/&#34; title=&#34;SPDX | Software Package Data Exchange&#34;&gt;SPDX&lt;/a&gt; の識別子を使って &lt;a href=&#34;https://api.opensource.org/license/SPDX/Apache-2.0&#34;&gt;https://api.opensource.org/license/SPDX/Apache-2.0&lt;/a&gt; にリクエストを投げても同じ結果が帰ってくる。&lt;/p&gt;

&lt;p&gt;キーワードで検索することもできるようだ。
たとえば Copyleft なライセンスを探すのであれば &lt;a href=&#34;https://api.opensource.org/licenses/copyleft&#34;&gt;https://api.opensource.org/licenses/copyleft&lt;/a&gt; とリクエストを投げれば，先程のようなライセンス情報が配列で返ってくる。
ちなみに licenses/ のうしろに何もキーワードを付けないと&lt;a href=&#34;https://github.com/OpenSourceOrg/licenses&#34; title=&#34;OpenSourceOrg/licenses: machine readable OSI license information&#34;&gt;登録されている全ライセンス&lt;/a&gt;の情報&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a92494d475b5626cb605c4abf5ca3999:0&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a92494d475b5626cb605c4abf5ca3999:0&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; が返ってくるようだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/OpenSourceOrg/api&#34; title=&#34;OpenSourceOrg/api: Light API based on the licenses spec&#34;&gt;リポジトリ&lt;/a&gt;を見ると &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;による実装がある&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a92494d475b5626cb605c4abf5ca3999:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a92494d475b5626cb605c4abf5ca3999:a&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
こんな感じで使える。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;

	&amp;quot;github.com/opensourceorg/api/client&amp;quot;
)

func ohshit(err error) {
	if err != nil {
		panic(err)
	}
}

func main() {
	license, err := client.Get(&amp;quot;Apache-2.0&amp;quot;)
	ohshit(err)
	fmt.Printf(&amp;quot;%s\n&amp;quot;, license.Name)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを実行すると以下のような出力になる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ go run sample.go
Apache License, Version 2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;キーワードで探すならこんな感じかな。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;fmt&amp;quot;

	&amp;quot;github.com/opensourceorg/api/client&amp;quot;
)

func ohshit(err error) {
	if err != nil {
		panic(err)
	}
}

func main() {
	licenses, err := client.Tagged(&amp;quot;copyleft&amp;quot;)
	ohshit(err)
	for _, license := range licenses {
		fmt.Printf(&amp;quot;%s\n&amp;quot;, license.Name)
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコードの実行結果は以下のとおり。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ go run sample2.go
GNU General Public License, Version 2.0
GNU General Public License, Version 3.0
GNU Lesser General Public License, Version 2.1
GNU Lesser General Public License, Version 3.0
Licence Libre du Québec – Réciprocité forte, Version 1.1
Licence Libre du Québec – Réciprocité, Version 1.1
Mozilla Public License, Version 2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;う～ん。
正直に言って，既に &lt;a href=&#34;https://spdx.org/&#34; title=&#34;SPDX | Software Package Data Exchange&#34;&gt;SPDX&lt;/a&gt; のようなサービスがあるのに，わざわざこのような仕組みを作る意味がよく分からない。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;The concept behind this API is to be a &#34;hub&#34; to store a central list of crosswalks and common identifiers to other services, allowing third parties who are already license-aware to provide their mappings, and pull OSI approval status programatically. As a proof of concept, SPDX identifiers have been added, trivially allowing cross-walks to SPDX datasets. This allows anyone to take an SPDX license ID, and determine if it&#39;s OSI approved by asking the OSI API.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://opensource.org/node/822&#34;&gt;Announcing the Open Source License API&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;OSI がやることに意味があるということだろうか。
あるいは &lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000861.shtml&#34; title=&#34;Google vs Oracle の訴訟の行方 — Baldanders.info&#34;&gt;API に著作権があるとされた昨年の判決&lt;/a&gt;を受けての防衛措置だったりして。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a92494d475b5626cb605c4abf5ca3999:0&#34;&gt;ライセンス・データおよび API は CC0 で提供されているようである。 API を利用するなら金よこせとか言うどこぞの企業とは違うらしい（笑）
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a92494d475b5626cb605c4abf5ca3999:0&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a92494d475b5626cb605c4abf5ca3999:a&#34;&gt;他にも &lt;a href=&#34;https://github.com/opensourceorg/python-opensource&#34; title=&#34;OpenSourceOrg/python-opensource: Python bindings to the Open Source License API&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://github.com/opensourceorg/ruby-opensourceapi&#34; title=&#34;OpenSourceOrg/ruby-opensourceapi: Ruby API Bindings to the OSI License API&#34;&gt;Ruby&lt;/a&gt;, &lt;a href=&#34;https://github.com/OpenSourceOrg/haskell-opensource&#34; title=&#34;OpenSourceOrg/haskell-opensource: Haskell API Bindings to the Open Source License API&#34;&gt;Haskell&lt;/a&gt; による実装がある。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a92494d475b5626cb605c4abf5ca3999:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： Barack Obama 米国大統領の来広 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/28-stories/" />
		<id>tag:text.Baldanders.info,2016-05-28:/remark/2016/05/28-stories/</id>
		<published>2016-05-28T22:59:50+09:00</published>
		<updated>2016-06-01T22:19:58+09:00</updated>
		<summary>Barack Obama 米国大統領の来広 / Google vs Oracle の訴訟の行方 2 / Windows 7 用の Rollup が出た / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今参加してるプロジェクトが「徒労感」半端ない。
はずれクジ引いちゃったかなぁ。
週末はぐったりして寝てるだけのことも多い。
倒れないうちに手を打ったほうがいいか？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#hrsm:db518096416c98449c9400640ad3c6ac&#34;&gt;Barack Obama 米国大統領の来広&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api:db518096416c98449c9400640ad3c6ac&#34;&gt;Google vs Oracle の訴訟の行方 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rlup:db518096416c98449c9400640ad3c6ac&#34;&gt;Windows 7 用の Rollup が出た&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other:db518096416c98449c9400640ad3c6ac&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;hrsm:db518096416c98449c9400640ad3c6ac&#34;&gt;Barack Obama 米国大統領の来広&lt;/h2&gt;

&lt;p&gt;いやぁ，昨日は大変だったみたいですな（以下の動画の26分頃から）。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;281&#34; src=&#34;https://www.youtube-nocookie.com/embed/QHIPZhrma6I&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=QHIPZhrma6I&#34;&gt;President Obama Participates in a Wreath Laying Ceremony - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.whitehouse.gov/the-press-office/2016/05/27/remarks-president-obama-and-prime-minister-abe-japan-hiroshima-peace&#34;&gt;Remarks by President Obama and Prime Minister Abe of Japan at Hiroshima Peace Memorial | whitehouse.gov&lt;/a&gt; （&lt;a href=&#34;http://japanese.japan.usembassy.gov/j/p/tpj-20160527-02.html&#34;&gt;日本語訳&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kantei.go.jp/jp/97_abe/statement/2016/0527hiroshima.html&#34;&gt;平成28年5月27日 広島訪問　日米両首脳によるステートメント | 平成28年 | 総理の演説・記者会見など | 記者会見 | 首相官邸ホームページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;私は職場が郊外なので（ただし通勤するために市街地を経由しなければならない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:db518096416c98449c9400640ad3c6ac:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:db518096416c98449c9400640ad3c6ac:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;）通勤時間をずらして回避できたが，市街地はほぼマヒ状態だったようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pref.hiroshima.lg.jp/site/police19/gyouji-kisei.html&#34;&gt;【お願い】オバマ米国大統領広島訪問に伴う交通規制について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.netandfield.com/shar/2016/05/post-2540.html&#34;&gt;いやあ、昨日はひどい目にあった(^^; - 電気ウナギ的○○&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;オバマ大統領は「メッセージだけの大統領」と揶揄されることもあるが，本当の変化は100年単位でゆるゆると進むものである。
今回の来広が，2009年のプラハ演説と同じく，100年先の変化へのトリガーとなれば今はそれで充分だと思う（まぁ次の大統領が誰になるかでちゃぶ台がひっくり返される可能性もあるわけだが）。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;これはまさに、核保有国と非保有国の格差を永続化させる従来の核不拡散体制の理念を再度打ち出したものである。違いがどこにあるかといえば、この格差を維持することが困難であることが明白となり、新たに核保有を行なおうとする国を抑制する新たな体制を構築する必要が出てきたことである。そのために、まず保有国側が核軍縮の努力を示すことによって倫理的優位性を確保する必要が認識された。オバマのプラハ演説は倫理的優位性の確保と、軍事的優位性の確保を両方得ようとする戦略的な言説である。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.fsight.jp/5104&#34;&gt;「核兵器なき世界」の本当の意味と「日本の役割」：池内恵 | 中東―危機の震源を読む&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;api:db518096416c98449c9400640ad3c6ac&#34;&gt;Google vs Oracle の訴訟の行方 2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://arstechnica.com/tech-policy/2016/05/google-wins-trial-against-oracle-as-jury-finds-android-is-fair-use/&#34;&gt;Google beats Oracle—Android makes “fair use” of Java APIs | Ars Technica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/business/35083291/&#34;&gt;グーグル、Java API使用が「フェアユース」と認められる&amp;ndash;対オラクル訴訟 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://itpro.nikkeibp.co.jp/atcl/news/16/052701526/?rt=nocnt&#34;&gt;ニュース - Java著作権訴訟でGoogleが勝訴、「フェアユース」が認められる：ITpro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/31/20160527copyright-questions-remain-after-googles-fair-use-victory/&#34;&gt;Googleの「公正使用」勝訴後も残る著作権に関する疑問 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000861.shtml&#34;&gt;Google vs Oracle の訴訟の行方&lt;/a&gt;」でも書いたが， Java API の著作権を巡る争いは「著作権の有無」から著作権を認めた上で Java API の（使用ではなく）利用が fair use にあたるかどうかに争点が移った。&lt;/p&gt;

&lt;p&gt;米国で fair use が成立するためには以下の観点において「公正」であることが認められなければならない。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;利用の目的や本質&lt;/li&gt;
&lt;li&gt;原作品の本質&lt;/li&gt;
&lt;li&gt;抜粋の量や実質性&lt;/li&gt;
&lt;li&gt;原作品の価値への影響&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;連邦地方裁判所の陪審は fair use であると評したようだが，恐らくこれから本格的な議論になるだろう。
しかし私たちエンジニアの側はあらゆる可能性を考えて備えておかなければならない。&lt;/p&gt;

&lt;p&gt;たとえば &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;は内部パッケージを含めて MIT ライセンスで提供されている。
API がこのようなことになることで，標準ライブラリやフレームワーク等の扱いが明確でない多くの言語は FLOSS にせざるを得なくなっていくだろう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:db518096416c98449c9400640ad3c6ac:b&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:db518096416c98449c9400640ad3c6ac:b&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
そういう意味で，私企業がコントロールを手放さない Java は高リスクな「終わってる言語」と言える。
日本人は何故か Java が大好きだが，新たにこれから何かを作るのであれば Java は忌避すべきある。&lt;/p&gt;

&lt;h2 id=&#34;rlup:db518096416c98449c9400640ad3c6ac&#34;&gt;Windows 7 用の Rollup が出た&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.microsoft.com/en-us/kb/3156417&#34;&gt;May 2016 update rollup for Windows 7 SP1 and Windows Server 2008 R2 SP1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Update で KB3156417 を導入すればよい。
これを当てることによってこれまで非表示にしていた更新が元に戻るといったことはないようである。
あとは Windows 10 のアップグレード強制さえなくなればなぁ。
早く無料キャンペーン終わってくれ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/windows-10-upgrade-problem/&#34;&gt;また Windows 10 にヤラレタ（KB3112343 の恐怖）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/1605/26/news029.html&#34;&gt;Tech TIPS：終わらないWindows 7のWindows Updateの問題を解決する - ＠IT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other:db518096416c98449c9400640ad3c6ac&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://googleblog.blogspot.jp/2016/05/introducing-spaces-tool-for-small-group.html&#34;&gt;Official Google Blog: Introducing Spaces, a tool for small group sharing&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/17/20160516google-tries-its-hand-at-social-again-with-launch-of-group-chat-app-spaces/&#34;&gt;Google、ソーシャル・サービスに再挑戦―グループチャット・アプリのSpacesをリリース | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jacksuzuki/items/b2fa6b44962e73a53d08&#34;&gt;ロシアの天才ハッカーによる【新人エンジニアサバイバルガイド】 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ieee0824/items/13435fc6de5f22cdb2f4&#34;&gt;コマンドラインからググれてもいいと思ったので作った - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tsaka1.blogspot.jp/2016/05/blog-post.html&#34;&gt;tsaka1&amp;rsquo;s blog: ノイマンの自然数(非負整数)生成プログラムについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2016/04/52669/&#34;&gt;電子書籍の未来を握るのはインディー系 - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2016/05/24/beyond-cool-japan-06/&#34;&gt;英米のEブックを支えている読者は誰？ « マガジン航[kɔː]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/shuho_sato/n/n736593947e6c&#34;&gt;電子書籍は漫画家の希望となるか？｜佐藤秀峰｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://p2ptk.org/copyright/350&#34;&gt;「フェアユースでも使用料を払え」というソニーミュージックの横暴と、それを許すYouTubeのコンテンツID – P2Pとかその辺のお話R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://efcl.info/2015/09/10/introduce-textlint/&#34;&gt;textlintで日本語の文章をチェックする | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.cnet.com/news/service/35083036/&#34;&gt;スノーデン氏、グーグルの新メッセージアプリ「Allo」を「危険」と批判 - CNET Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.us-cert.gov/ncas/alerts/TA16-144A&#34;&gt;WPAD Name Collision Vulnerability | US-CERT&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/ta/JVNTA91048063/&#34;&gt;JVNTA#91048063: WPAD と名前衝突の問題&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1605/25/news073.html&#34;&gt;LinkedInからの流出情報、自分の被害の有無を確認可能に - ITmedia エンタープライズ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://haveibeenpwned.com/&#34;&gt;Have I been pwned? Check if your email has been compromised in a data breach&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.airspacemag.com/space/new-seti-search-180959126/?is_pocket=1&#34;&gt;SETI Gets an Upgrade | Space | Air &amp;amp; Space Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書:db518096416c98449c9400640ad3c6ac&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106037866/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51QsC2WBr5L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106037866/baldandersinf-22/&#34;&gt;【中東大混迷を解く】 サイクス=ピコ協定 百年の呪縛 (新潮選書)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;池内 恵 &lt;/dd&gt;&lt;dd&gt;新潮社 2016-05-27&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4120048349/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4120048349.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;増補新版 イスラーム世界の論じ方&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4484162164/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4484162164.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アステイオン84 【特集】帝国の崩壊と呪縛&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4591149641/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4591149641.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;(089)コーランの読み方: イスラーム思想の謎に迫る (ポプラ新書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4480016376/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4480016376.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;イスラームの論理 (筑摩選書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4584125007/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4584125007.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;イスラム国「世界同時テロ」 (ベスト新書)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;これから読む。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-28&#34;&gt;2016-05-28&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:db518096416c98449c9400640ad3c6ac:a&#34;&gt;以前から思ってるけど，これって広島市の都市設計における最大の欠点だよね。広島市の都市設計は前時代的で郊外の道路は基本的に市街地（広島市民の間では「旧市内」と呼ばれている）から放射状に敷設されている。したがって郊外から郊外へ移動するためには一度市街地を通らなければならない。これはバス路線や電車も同じ。自動車道については市街地を迂回するための高速道路やバイパスが造られたが（広島は地理的に関西・九州間の通り道にあるため，大昔は長距離トラックが市街地を猛スピードで走っていた），公共交通機関については全く改善されないため朝晩の通勤時には（たかだか100万人ほどしかいない）地方都市とは思えないほどの混雑になる（褒めてないよ）。海外では広島市は「コンパクト・シティ」として評価されていると聞くが，それは市街地の中だけの話である。地元 J1 チームのサンフレッチェが市街地ど真ん中にある市民球場跡地への移転にこだわるのはちゃんと理由があるのだ。アストラムラインを環状線にする案も提案されたが，アストラムラインの経営状態は単年でかろうじて黒字で初期の建設費も返せない状況。このままサンフレッチェがいなくなって施設が老朽化したらどうするつもりだろうね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:db518096416c98449c9400640ad3c6ac:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:db518096416c98449c9400640ad3c6ac:b&#34;&gt;そういう意味で Microsoft が &lt;a href=&#34;http://jp.techcrunch.com/2015/04/30/20150429microsoft-launches-its-net-distribution-for-linux-and-mac/&#34;&gt;.NET Core をオープンソースにした&lt;/a&gt;のは慧眼だよね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:db518096416c98449c9400640ad3c6ac:b&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>コマンドラインからググる - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/google-cli/" />
		<id>tag:text.Baldanders.info,2016-05-21:/remark/2016/05/google-cli/</id>
		<published>2016-05-21T16:27:42+09:00</published>
		<updated>2016-05-21T16:27:42+09:00</updated>
		<summary>ちょっとしたことなんだけどね。キャラクタ端末メインで仕事してる時はこういうのが便利だったりする。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;面白いツールが公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/ieee0824/items/13435fc6de5f22cdb2f4&#34;&gt;コマンドラインからググれてもいいと思ったので作った - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;もちろん Windows のコマンドプロンプトでも使える。
たとえば&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ ggr -i ググレカス
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と打ち込めば，既定のブラウザが開いて&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a data-flickr-embed=&#34;true&#34; href=&#34;https://www.flickr.com/photos/spiegel/27143946615/&#34;&gt;&lt;img src=&#34;https://farm8.staticflickr.com/7117/27143946615_45a9c04842.jpg&#34; alt=&#34;ググレカス&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/27143946615/&#34;&gt;ググレカス&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;などと表示される。
ちょっとしたことなんだけどね。
キャラクタ端末メインで仕事してる時はこういうのが便利だったりする。
面白いのでうちの子として迎え入れることにした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ieee0824/ggr&#34;&gt;コード&lt;/a&gt;を見たら &lt;a href=&#34;https://github.com/ieee0824/ggr/blob/master/main.go&#34;&gt;main.go&lt;/a&gt; に全部入っていて，それはそれで全然いいんだけど，折角なので fork してパッケージ化してみることにした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/ggr&#34;&gt;spiegel-im-spiegel/ggr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これで main 関数（&lt;a href=&#34;https://github.com/spiegel-im-spiegel/ggr/blob/master/ggr/cli.go&#34;&gt;ggr/cli.go&lt;/a&gt;）はこうなる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
	&amp;quot;flag&amp;quot;
	&amp;quot;os&amp;quot;

	&amp;quot;github.com/spiegel-im-spiegel/ggr&amp;quot;
	&amp;quot;github.com/toqueteos/webbrowser&amp;quot;
)

// sample url
// https://www.google.co.jp/search?q=test&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;hl=ja

func main() {
	var (
		imageFlag bool
		newsFlag  bool
		shopFlag  bool
	)

	f := flag.NewFlagSet(os.Args[0], flag.ExitOnError)
	f.BoolVar(&amp;amp;imageFlag, &amp;quot;i&amp;quot;, false, &amp;quot;image flag&amp;quot;)
	f.BoolVar(&amp;amp;newsFlag, &amp;quot;n&amp;quot;, false, &amp;quot;new flag&amp;quot;)
	f.BoolVar(&amp;amp;shopFlag, &amp;quot;s&amp;quot;, false, &amp;quot;shop flag&amp;quot;)

	f.Parse(os.Args[1:])
	q := f.Args()

	t := ggr.TypeNormal
	if imageFlag {
		t = ggr.TypeImage
	} else if newsFlag {
		t = ggr.TypeNews
	} else if shopFlag {
		t = ggr.TypeShop
	}

	g := ggr.NewGgr(ggr.LangJa, t, q)
	webbrowser.Open(g.GetSearchURL())
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まぁ，パッケージ化していいことがあるかと言われれば微妙なんだけど，最近は CLI ツールでもロジック（DDD で言うところのドメイン・レイヤ）はパッケージとして独立させたほうが何かと使い勝手がいいような気がしている。&lt;/p&gt;

&lt;p&gt;というわけで，絶賛中断中の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34;&gt;gpgpdump&lt;/a&gt; は全面的に書きなおす予定。&lt;/p&gt;

&lt;p&gt;いやぁ，最近仕事（Java アプリケーション）で煮詰まってたので，いい気分転換になったよ。
やはり自分の自由に書けるコードは楽しい。&lt;/p&gt;

&lt;p&gt;（ちなみに，いつものようにブランチでの作業を GitHub 上で自分に PR しようとして間違えて作者様に PR してしまったのは内緒だ。 Fork したリポジトリからの PR は必ず Fork 元に飛んじゃんだね。もうしません。反省）&lt;/p&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41aCueik45L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;プログラミング言語Go&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Alan A.A. Donovan Brian W. Kernighan 柴田 芳樹 &lt;/dd&gt;&lt;dd&gt;丸善出版 2016-06-15&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117526/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117526.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Go言語によるWebアプリケーション開発&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117607/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117607.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;マイクロサービスアーキテクチャ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117402/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117402.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ハイパフォーマンスPython&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/0134190440/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/0134190440.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;The Go Programming Language (Addison-Wesley Professional Computing Series)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774166340/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774166340.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Vim script テクニックバイブル ~Vim使いの魔法の杖&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。買おうかどうか悩み中。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-03-12&#34;&gt;2016-03-12&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「だれもがプログラミングを学ぶべき」ではない - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/lets-programming/" />
		<id>tag:text.Baldanders.info,2016-05-17:/remark/2016/05/lets-programming/</id>
		<published>2016-05-17T23:50:28+09:00</published>
		<updated>2016-05-17T23:50:28+09:00</updated>
		<summary>考えてもみたまえ。「掛け算は順序が大事」などと言ってはばからない未開人の国がどうやってプログラミングを教えるというのだ。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;プログラミングが注目されたことにより、問題を理解することよりも、それを「正しい方法で」解決することに重きが置かれるようになった。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/17/20160510please-dont-learn-to-code/&#34;&gt;頼むからプログラミングを学ばないでくれ | TechCrunch Japan&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;いや，まったくもってその通り。&lt;/p&gt;

&lt;p&gt;プログラミング言語は日本語や英語のようなものとは決定的に異なる。&lt;/p&gt;

&lt;p&gt;日本語や英語を習得するのに文法から習う人はいないだろう（日本の学校教育は違うかもw）。
たくさんの言葉を聞いて話して書いて読んで，そうして少しずつ語彙を飲み込んでいって習得していくものだ。&lt;/p&gt;

&lt;p&gt;プログラミング言語は違う。
プログラミング言語で決定的に重要なのは言語仕様つまり文法である。
何故ならプログラミングとは，究極的には，ゼロ知識から論理を積み上げていくことであり，プログラミング言語はそのための道具であり手段なのだ。
論理を積み上げることで語彙が増え，更にその語彙を使って論理を積み上げることができるなら，その言語は良い言語だと言える。&lt;/p&gt;

&lt;p&gt;そういう意味でプログラミング言語はむしろ「数式」に近い（実際プログラミングの半分以上は数学だが。残りは工学）。&lt;/p&gt;

&lt;p&gt;最近はプログラミング言語を「第三言語」などともてはやしたり，あまつさえ小学校の必修科目にしようなどというお馬鹿な国まで登場する始末だ。
しかし。
考えてもみたまえ。
「&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000744.shtml&#34; title=&#34;日本の「算数」は壊れてる？ — Baldanders.info&#34;&gt;掛け算は順序が大事&lt;/a&gt;」などと言ってはばからない未開人の国がどうやってプログラミングを教えるというのだ。
どう考えても破滅的な未来しか想像できない。&lt;/p&gt;

&lt;p&gt;私がよくひきあいに出すのは「数学の問題を解くのに公式の暗記から始める人はプログラマには向かない」というものだ。
念のために言うが，これは単純に向き不向きの問題で優劣の問題ではない。
しかし本質的に「向かない」人が教育と称してそれを無理やりやらされることが本当にその人のためになるのか？ 私が学生時代に語学でメチャメチャ苦労した挙句に何も身につかなかったように「労多くして功少なし」ということになりかねない。&lt;/p&gt;

&lt;p&gt;もちろん「好きで学ぶ」のは結構なことだ。
好きでやるのなら向いていようがいまいが関係ない。
しかし「教育」としてそれを学ばされたり，仕事を得るためにやるのであれば話が別だ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://postd.cc/implementers-solvers-and-finders/&#34;&gt;インプリメンタ、ソルバ、ファインダ : プログラマのキャリアに関する3つの肩書きの提唱 | キャリア・働き方 | POSTD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;向いてないのに苦労した挙句に「インプリメンタ」でくすぶり続けたいのなら止めはしないが（そういう人は掃いて捨てるほどいる），しかしこれを国家レベルでやるのは勘弁して頂きたいところである&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:f20cc9a3ef7405d78f8aeea182d67298:a&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:f20cc9a3ef7405d78f8aeea182d67298:a&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797329734/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51xj-xFKUXL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797329734/baldandersinf-22/&#34;&gt;プログラマの数学&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;ソフトバンククリエイティブ 2005-03-24&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274067556/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274067556.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマのための論理パズル 難題を突破する論理思考トレーニング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873116694/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873116694.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アルゴリズムパズル ―プログラマのための数学パズル入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4048869558/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4048869558.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマの考え方がおもしろいほど身につく本 問題解決能力を鍛えよう!&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/479803925X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/479803925X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラムはこうして作られるプログラマの頭の中をのぞいてみよう&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/479814245X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/479814245X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマ脳を鍛える数学パズル シンプルで高速なコードが書けるようになる70問&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;プログラマ必修の教科書（笑）&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-17&#34;&gt;2016-05-17&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621045938/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51XGP8AFX2L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621045938/baldandersinf-22/&#34;&gt;いかにして問題をとくか&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;G. ポリア 柿内 賢信 &lt;/dd&gt;&lt;dd&gt;丸善 1975-04-01&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621085298/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4621085298.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;いかにして問題をとくか・実践活用編&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4061497863/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4061497863.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学的思考法―説明力を鍛えるヒント  講談社現代新書&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/462108819X/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/462108819X.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学×思考=ざっくりと  いかにして問題をとくか&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797375698/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797375698.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4185086180/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4185086180.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;授業研究に学ぶ高校新数学科の在り方&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34; &gt;数学書。というか問いの立てかたやものの考え方についての指南書。のようなものかな。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#34;#maker&#34; class=&#34;reviewer&#34;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-09-26&#34;&gt;2014/09/26&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:f20cc9a3ef7405d78f8aeea182d67298:a&#34;&gt;大昔に「将来ソフトエンジニアが10万人単位で足りなくなる」とか言われて世の中に大量に輩出させた挙句，バブルが弾けて大勢のエンジニアが路頭に迷ったあの時を，私は絶対に忘れない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:f20cc9a3ef7405d78f8aeea182d67298:a&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： 水星の日面経過 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/15-stories/" />
		<id>tag:text.Baldanders.info,2016-05-15:/remark/2016/05/15-stories/</id>
		<published>2016-05-15T18:46:06+09:00</published>
		<updated>2016-05-15T18:46:06+09:00</updated>
		<summary>水星の日面経過 / 今週はセキュリティ・アップデート週間でした / クラウドな仕事道具 / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#tran:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;水星の日面経過&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#upd:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;今週はセキュリティ・アップデート週間でした&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cld:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;クラウドな仕事道具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;tran:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;水星の日面経過&lt;/h2&gt;

&lt;p&gt;５月9日は水星の日面経過がありました。
ただし日本では見られず。
（以下の動画は再生時に音楽が流れるのでご注意を）&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;281&#34; src=&#34;https://www.youtube-nocookie.com/embed/8J4LoX3eOWc&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=8J4LoX3eOWc&#34;&gt;A Mercury Transit Music Video from SDO - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;特に，経過中に ISS が横切る以下の映像は面白い。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;281&#34; src=&#34;https://www.youtube-nocookie.com/embed/Le-B2AnFiWw&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Le-B2AnFiWw&#34;&gt;Double solar transits of Mercury with the ISS and a plane - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ちなみに「経過（transit）」というのは観測者から見て大きな天体の手前を小さな天体が横切る現象を指す天文学用語。
これの反対が「&lt;ruby&gt;&lt;rb&gt;掩蔽&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;えんぺい&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」。
ただしメディアや学校の教科書では「通過」と書かれるらしい。
どちらでも間違いではないようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://optik2.mtk.nao.ac.jp/~somamt/notes/transit.htm&#34;&gt;「日面経過」の用語について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ブックマーク:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;ブックマーク&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hinode.nao.ac.jp/news/160509MercuryTransit/&#34;&gt;「ひので」衛星が見た水星の太陽面通過&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://apod.nasa.gov/apod/ap160511.html&#34;&gt;APOD: 2016 May 11 - A Mercury Transit Music Video from SDO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://apod.nasa.gov/apod/ap160513.html&#34;&gt;APOD: 2016 May 13 - ISS and Mercury Too&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;upd:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;今週はセキュリティ・アップデート週間でした&lt;/h2&gt;

&lt;p&gt;毎月第2週水曜日はセキュリティ・アップデートの日。
主なものは以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.technet.microsoft.com/jpsecurity/2016/05/11/201605-security-bulletin/&#34;&gt;2016 年 5 月のセキュリティ情報 (月例) – MS16-051 ～ MS16-062, MS16-064 ～ MS16-067 | 日本のセキュリティチーム&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2016/at160022.html&#34;&gt;2016年 5月 Microsoft セキュリティ情報 (緊急 8件含) に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/ciadr/vul/20160511-ms.html&#34;&gt;Microsoft 製品の脆弱性対策について(2016年5月)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2016/at160023.html&#34;&gt;Adobe Reader および Acrobat の脆弱性 (APSB16-14) に関する注意喚起&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/ciadr/vul/20160511-adobereader.html&#34;&gt;Adobe Reader および Acrobat の脆弱性対策について(APSB16-14)(CVE-2016-1045等)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/ciadr/vul/20160511-adobeflashplayer.html&#34;&gt;Adobe Flash Player の脆弱性対策について(APSA16-02)(CVE-2016-4117)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2016/at160024.html&#34;&gt;Adobe Flash Player の脆弱性 (APSB16-15) に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.talosintel.com/2016/05/multiple-7-zip-vulnerabilities.html&#34;&gt;Cisco Talos Blog: Multiple 7-Zip Vulnerabilities Discovered by Talos&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20160513_757356.html&#34;&gt;「7-Zip」v16.00には危険な脆弱性の修正も。「PeaZip」にもアップデートが提供される - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というわけできちんと対応しましょう。&lt;/p&gt;

&lt;p&gt;あー，早く Windows 10 の無料アップグレード期間が終わらんかな。
こいつのせいで Windows Update を「自動更新」にできない。
鬱陶しいことこの上ない。
&lt;a href=&#34;http://text.baldanders.info/remark/2016/03/13-stories/#win:717e7722a178792caabc6c325915d05e&#34;&gt;サイバーテロ企業&lt;/a&gt;め！&lt;/p&gt;

&lt;p&gt;個人的な印象論で申し訳ないが，こういうのは詐欺と同じで，きちんとアップデートしないユーザは「セキュリティに関心が薄い」とみなされ犯罪者の格好の標的となる&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c41e546ebb0903c93794e1b92b0265c5:s&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c41e546ebb0903c93794e1b92b0265c5:s&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
無差別の phishing メールの malware が（普通ならとっくに塞がれているはずの）少し古い脆弱性を突いてくるのは，「カモネギ」なユーザか見極めているのではないかと思ったり。&lt;/p&gt;

&lt;h2 id=&#34;cld:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;クラウドな仕事道具&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; の新しい料金体系。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blog/2164-introducing-unlimited-private-repositories&#34;&gt;Introducing unlimited private repositories&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/16/github7.html&#34;&gt;［速報］GitHub、月額7ドルでプライベートリポジトリを無制限に作成可能に。新料金プランを発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;日常生活も仕事も徐々にクラウドに移行しつつあるが，正直に言って「これ！」ってのがない。&lt;/p&gt;

&lt;p&gt;PIM (Personal Information Management) に関しては通常は Gmail と Google Calendar で問題ない。
ただし仕事絡みのメールに関しては &lt;a href=&#34;https://protonmail.com/&#34; title=&#34;Secure email: ProtonMail is free encrypted email.&#34;&gt;ProtonMail&lt;/a&gt; に移行したいところである。
でもこれも相手がいてこそだからなぁ。&lt;/p&gt;

&lt;p&gt;個人的なやり取りは SMS かキャリアメール（あるいは Facebook の Messenger&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c41e546ebb0903c93794e1b92b0265c5:l&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:c41e546ebb0903c93794e1b92b0265c5:l&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;）でしかやり取りできない人がほとんどなので諦めた。&lt;/p&gt;

&lt;p&gt;仕事のプロジェクトに参加するとそれぞれでアドレスを割り振ってもらえるが，こっちは非公開でしかも特定の groupware と関連付けられていることが多く融通が効かないのがアレである。&lt;/p&gt;

&lt;p&gt;Storage は今のところ &lt;a href=&#34;https://www.box.com/&#34;&gt;Box&lt;/a&gt; がメイン。
最近は広島の企業でも &lt;a href=&#34;https://www.box.com/&#34;&gt;Box&lt;/a&gt; を利用するところが増えてきつつあるし。
ただし &lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt; じゃないと使い勝手が悪いアプリもあるので，そこはしょうがなく。&lt;/p&gt;

&lt;p&gt;写真は &lt;a href=&#34;http://www.amazon.co.jp/gp/feature.html?docId=3077664656&#34;&gt;Amazon Cloud Drive&lt;/a&gt; にぶち込んでる（公になったら社会的に死ぬような写真は撮らない主義なので無問題）。
Prime に加入したので無制限に使えるのが魅力。
まぁこれは完全に「物置」代わり。&lt;/p&gt;

&lt;p&gt;Evernote や Google Drive はなんか気持ち悪いので使わなくなった。
Evernote は無料版だと他サービスと連携できなくて使い勝手が悪いってのもあり，最終的には捨てる予定。
でも古い資産が結構残ってるので他所に移さないといけないんだよなぁ。&lt;/p&gt;

&lt;p&gt;今借りてるレンタルサーバの容量が余りまくってるので「&lt;a href=&#34;https://www.sakura.ad.jp/press/2015/0312_sakurapocket/&#34; title=&#34;さくらインターネット、さくらのレンタルサーバをオンラインストレージとして使えるスマートフォンアプリ「さくらぽけっと」をiOS／Androidで提供開始&#34;&gt;さくらぽけっと&lt;/a&gt;」も考えたのだが，今時 EUC-JP を要求するクソ仕様なので（何故 UTF-8 にしない）使えない。&lt;/p&gt;

&lt;p&gt;Workplace は &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; または &lt;a href=&#34;https://bitbucket.org/&#34; title=&#34;Bitbucket — The Git solution for professional teams&#34;&gt;Bitbucket&lt;/a&gt;。
&lt;a href=&#34;https://bitbucket.org/&#34; title=&#34;Bitbucket — The Git solution for professional teams&#34;&gt;Bitbucket&lt;/a&gt; は private repository が必要な場合のみ利用している。
&lt;a href=&#34;https://gitlab.com/&#34; title=&#34;Code, test, and deploy together with GitLab open source git repo management software | GitLab&#34;&gt;GitLab.com&lt;/a&gt; は割とよさ気な感じなので &lt;a href=&#34;https://bitbucket.org/&#34; title=&#34;Bitbucket — The Git solution for professional teams&#34;&gt;Bitbucket&lt;/a&gt; にある private repository の一部をこっちに移すのもありかなぁ，と思っている。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.backlog.jp/&#34;&gt;Backlog&lt;/a&gt; は個人的にとても好みなのだが，容量の割にお値段高めで手が出ない。&lt;/p&gt;

&lt;p&gt;Storage と workplace に関してはそろそろちゃんとお金を払ってどこかに定住したいのだが，何処にしようか悩み中。
たとえば， &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; に月7ドル払うのなら「&lt;a href=&#34;http://vps.sakura.ad.jp/&#34; title=&#34;VPS（仮想専用サーバー）｜さくらインターネット - 無料お試し実施中&#34;&gt;さくらの VPS&lt;/a&gt;」で環境を作ったほうがいいんじゃないか，とも思うわけよ。&lt;/p&gt;

&lt;p&gt;あるいは storage だけに絞って &lt;a href=&#34;https://spideroak.com/&#34;&gt;SpiderOak&lt;/a&gt; に月12ドル払って 1TB の安全な環境を確保する手もある。
&lt;a href=&#34;https://www.box.com/&#34;&gt;Box&lt;/a&gt; や &lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt; に&lt;a href=&#34;http://jp.techcrunch.com/2014/10/13/20141011edward-snowden-new-yorker-festival/&#34; title=&#34;スノーデンのプライバシーに関する助言：Dropboxは捨てろ、FacebookとGoogleには近づくな | TechCrunch Japan&#34;&gt;プライベートなファイルは置きたくない&lt;/a&gt;。
&lt;a href=&#34;http://www.publickey1.jp/blog/16/dropboxproject_infinite.html&#34; title=&#34;Dropbox、クラウドとのファイル同期をファイルへのアクセス時にオンデマンド実行してくれる「Project Infinite」プレビュー、チームのファイル共有向け － Publickey&#34;&gt;これから実装されるという Project Infinite&lt;/a&gt; は魅力だけど，所詮 Windows と Mac だけの話だし，これから Windows を捨てようかという私には関係ない気がする。&lt;/p&gt;

&lt;p&gt;まぁ，もう少し考えてみるか。&lt;/p&gt;

&lt;h2 id=&#34;other:c41e546ebb0903c93794e1b92b0265c5&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/go-ole/go-ole&#34;&gt;go-ole/go-ole: win32 ole implementation for golang&lt;/a&gt; : Go 言語で OLE/COM を操作できるらしい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://masudalaw.wordpress.com/2016/05/06/ccl-basics/&#34;&gt;【解説】 クリエイティブ・コモンズ・ライセンス入門 【知財管理65巻6号掲載】 | 弁護士 増田雅史の記録帳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wired.jp/2016/05/08/about-telomere/&#34;&gt;死を司る「テロメア」とは何なのか？｜WIRED.jp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20160508/drmnightmare&#34;&gt;DRMの悪夢：KoboをアップグレードするとSonyリーダから受け継いだ電子書籍がライブラリから消えてしまう - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepass.info/news/n160507_2.33.html&#34;&gt;News: KeePass 2.33 available! - KeePass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scienceportal.jst.go.jp/news/newsflash_review/newsflash/2016/05/20160511_02.html&#34;&gt;2016年5月11日ニュース「太陽系外惑星、新たに1284個発見 地球型も9個」 | SciencePortal&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.space.com/32850-nasa-kepler-telescope-finds-1284-alien-planets.html&#34;&gt;NASA Finds 1,284 Alien Planets, Biggest Haul Yet, with Kepler Space Telescope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/13/20160512astronomers-announce-largest-batch-of-new-planets-ever-discovered/&#34;&gt;NASA、太陽系外惑星1284個を発見 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kaztaira.wordpress.com/2016/05/12/%E3%83%80%E3%83%B3%E3%83%BB%E3%82%AE%E3%83%AB%E3%83%A2%E3%82%A2%E8%91%97%E3%80%8E%E3%81%82%E3%81%AA%E3%81%9F%E3%81%8C%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E3%80%80%E3%82%BD%E3%83%BC%E3%82%B7%E3%83%A3/&#34;&gt;ダン・ギルモア著『あなたがメディア　ソーシャル新時代の情報術』を全文公開します | 新聞紙学的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2016/05/13/panama-papers-and-fifth-estate/&#34;&gt;パナマ文書事件が明らかにした「第五階級」とは « マガジン航[kɔː]&lt;/a&gt; : 確かに WikiLeaks とは異なるが， WikiLeaks の次の段階とも言える&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4106037866/baldandersinf-22/&#34;&gt;Amazon.co.jp： 【中東大混迷を解く】 サイクス=ピコ協定 百年の呪縛: 池内 恵: 本&lt;/a&gt; : とりあえず予約した

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ikeuchisatoshi.com/%E3%80%90%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%83%9A%E3%83%BC%E3%82%B8%E9%96%8B%E8%A8%AD%E3%80%91%E3%80%8E%E3%82%B5%E3%82%A4%E3%82%AF%E3%82%B9%EF%BC%9D%E3%83%94%E3%82%B3%E5%8D%94%E5%AE%9A-%E7%99%BE/&#34;&gt;【サポートページ開設】『サイクス＝ピコ協定 百年の呪縛』のカテゴリーを設定しました – 中東・イスラーム学の風姿花伝&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jp.techcrunch.com/2016/05/12/20160509the-internet-of-things-is-security-nightmare-warns-eff/&#34;&gt;「モノのインターネットは、セキュリティの面では悪夢だ」EFFの警告 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:c41e546ebb0903c93794e1b92b0265c5:s&#34;&gt;「セキュリティに関心が薄い」ユーザなら侵入が発覚するまでかなりの時間を稼げるからだ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c41e546ebb0903c93794e1b92b0265c5:s&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:c41e546ebb0903c93794e1b92b0265c5:l&#34;&gt;LINE は随分前に捨てた。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c41e546ebb0903c93794e1b92b0265c5:l&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>『つながりっぱなしの日常を生きる』を読む - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/its-complicated/" />
		<id>tag:text.Baldanders.info,2016-05-10:/remark/2016/05/its-complicated/</id>
		<published>2016-05-10T18:30:53+09:00</published>
		<updated>2016-05-10T18:30:53+09:00</updated>
		<summary>たぶん私がこの本をひととおり理解するには，あと2,3回は再読しないといけないような気がする。なんでみんなスラスラ理解できるの？ 羨ましい。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』は Danah Boyd さんによって2014年に発刊された。
邦訳本も同じ2014年に発刊され，私も早々に購入したのだが読むのに随分かかってしまった。&lt;/p&gt;

&lt;p&gt;この本の特徴は「ティーン（13歳から19歳）」を対象に2005年から2012年の8年間に渡るフィールドワークがベースになっている点である。
論点も多岐にわたっていて，目次を見るだけでも&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;アイデンティティ&lt;/li&gt;
&lt;li&gt;プライバシー&lt;/li&gt;
&lt;li&gt;中毒&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a3c2974a66bf388b9737c9ba2bcde879:adct&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a3c2974a66bf388b9737c9ba2bcde879:adct&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;危険&lt;/li&gt;
&lt;li&gt;いじめ&lt;/li&gt;
&lt;li&gt;不平等&lt;/li&gt;
&lt;li&gt;リテラシー&lt;/li&gt;
&lt;li&gt;パブリック&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;とかなり広範である。
掘り下げれば各章だけで本が書けそうな勢いだ。
しかも各論点は独立しているのではなくお互いに絡み合っていて，まさに原題のとおり “It&amp;rsquo;s Complicated” なのである。&lt;/p&gt;

&lt;p&gt;私が読了するまでに1年半以上かかってしまったのも無理からぬと察して欲しい（いや，途中から本業が忙しくなって1年近く積ん読状態だったのだが）。
たぶん私がこの本をひととおり理解するには，あと2,3回は再読しないといけないような気がする。
なんでみんなスラスラ理解できるの？ 羨ましい。&lt;/p&gt;

&lt;p&gt;この読書感想文で全部を網羅するのは無理なので，今回は「プライバシー」を中心に書いてみる。&lt;/p&gt;

&lt;h2 id=&#34;公開されたプライバシー:a3c2974a66bf388b9737c9ba2bcde879&#34;&gt;公開されたプライバシー&lt;/h2&gt;

&lt;p&gt;私が『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』に注目した理由のひとつは『日経サイエンス』 2008年12月号の特集記事に出てきた「公開されたプライバシー」というフレーズがずうっと気になっていたからだ。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;もともとのプライバシーは空間概念と一体になっている。つまり私的領域と公的領域を区別することである。しかしインターネット，特に Web 2.0 以降は，情報は空間概念から切り離される。場所が不定になるのだ。だから，それをコントロールしたければ，情報へのアクセス性を対象にせざるを得なくなる。感覚的には分かっていても，改めて「公開されたプライバシー」という言葉を与えられると少し見方が変わってくる。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000415.shtml&#34;&gt;「ネットが蝕むプライバシー」を読む&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』では「プライバシー」をこう記述している。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;それは人々が印象や情報の流れや文脈を管理することにより社会的状況をコントロールしようとするのに用いられるプロセスなのだ。&lt;/q&gt;（p.122）
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;つまり特定の人達の間で&lt;strong&gt;のみ&lt;/strong&gt;共有される「文脈」と「私」との関係が重要なのだ。
これはネット以前では物理的な「空間」によって保証されていた。
ネットは空間概念を無意味化する。
故に「プライバシーは信用の問題」（p.118）であり，プライバシーを守るということは「ひとつの主体性の表現」（p.123）なのである。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;ティーンは自分たちが見られていることを前提として、公共性に対立するのではなく、公的環境の中でプライバシーを見つけようとする。&lt;/q&gt;（p.119）
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;僅かにシェアしていることによって、何もシェアしないでいるよりもプライバシーがもたらされる&lt;/q&gt;（p.120）
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;言い方を変えるなら “nothing to hide” と言うのは対象の主体性を否定するのと同義である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a3c2974a66bf388b9737c9ba2bcde879:nth&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a3c2974a66bf388b9737c9ba2bcde879:nth&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/hattamasayuki/20160430-00057230/&#34;&gt;やましくなければプライバシーは要らない？ nothing to hideを巡って(八田真行) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;プライバシーを守るためのリテラシー:a3c2974a66bf388b9737c9ba2bcde879&#34;&gt;プライバシーを守るためのリテラシー&lt;/h2&gt;

&lt;p&gt;しかし，公の場において限られた人たちの間でのみ「文脈」を維持し，さらに個人のプライバシーを守るというのはけっこう大変である。
（なぜ公の場でそのようなことをするのか，あるいはせざるを得ないのかについてが『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』の主要テーマのひとつである）&lt;/p&gt;

&lt;p&gt;『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』では特定の友人たちとの間でのみ共感を交わす方法として歌詞を引用する例を挙げている（p.108-109）。
友人たちとの間で交わされる「おしゃべり」に介入する親を回避するため，当人たち以外には反対の意味に解釈される唄の歌詞を引用する。&lt;/p&gt;

&lt;p&gt;こういう当人同士でのみ通用する「符牒&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:a3c2974a66bf388b9737c9ba2bcde879:c&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:a3c2974a66bf388b9737c9ba2bcde879:c&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;」を用いるのは文脈を共有する手法としては割とありがちである。
オタクが奇異な言動で他者から「キモい」と呼ばれることが「業界ではごほうび」なのもそうだし，中年サラリーマンが居酒屋トークで使う妙な代名詞もそれである。（もっとも最近は居酒屋トークで取引先っぽい相手を身も蓋もなく名指しで愚痴る人がいるが「お前社会的に死ぬ気か？」とか思ってしまうw）&lt;/p&gt;

&lt;p&gt;しかしこれは個人および所属するコミュニティのリテラシーに大きく依存する。
『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』ではリテラシーやスキルの巧拙による経済階級間の「デジタル・デバイド」は世代間のそれよりも大きいと指摘する。&lt;/p&gt;

&lt;p&gt;この本における Danah Boyd さんの関心は若者の生態にあるので必然的に若者が中心になるが，ネットを俯瞰してみれば「若者の問題」は先行世代にも通底するものがある。
しかし大人の「未熟さ」は子どもに対して直接的な障壁として立ちはだかる。&lt;/p&gt;

&lt;p&gt;子どもたちが直面する障壁とそれをどのように迂回または乗り越えているかを知ることは社会と社会に連接するネットを知る大きな手がかりとなるだろう。&lt;/p&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/616sjle5ITL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34;&gt;つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;ダナ・ボイド 野中 モモ &lt;/dd&gt;&lt;dd&gt;草思社 2014-10-09&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0141TUJHY/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0141TUJHY.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;角川インターネット講座５　ネットコミュニティの設計と力　つながる私たちの時代&lt;角川インターネット講座&gt; (角川学芸出版全集)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01CZK0B2Y/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01CZK0B2Y.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;これからの世界をつくる仲間たちへ&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B01B1CKZQO/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B01B1CKZQO.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ForbesJapan (フォーブスジャパン) 2016年 03月号 [雑誌]&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B010LYGB34/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B010LYGB34.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;「炎上」と「拡散」の考現学&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0191AIN6W/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0191AIN6W.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ぼくらの仮説が世界をつくる&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;読むのに1年半以上かかってしまった。ネット，特に SNS 上で自身のアイデンティティやプライバシーを保つにはどうすればいいか。豊富な事例を交えて考察する。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-05-10&#34;&gt;2016-05-10&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:a3c2974a66bf388b9737c9ba2bcde879:adct&#34;&gt;&lt;ruby&gt;&lt;rb&gt;嗜癖&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;しへき&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;（addiction）のこと。日常使う言葉ではないかもしれないが「嗜癖」という単語があるのだから，安易に「中毒」という言葉を使わないで欲しい。たとえば「アルコール中毒」と「アルコール嗜癖（または依存症）」はそれぞれ別の症状を指す。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a3c2974a66bf388b9737c9ba2bcde879:adct&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a3c2974a66bf388b9737c9ba2bcde879:nth&#34;&gt;念のために言っておくと八田真行さんが書かれているプライバシーの問題は文脈が異なる。しかし政府機関などが “nothing to hide” を理由にプライバシーを踏みにじる行為は「人を見たら泥棒と思え」と言っているのと同じであり，国家と個人の間の信頼関係の崩壊であるとも言える。その意味でも「プライバシーは信用の問題」なのかもしれないが。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a3c2974a66bf388b9737c9ba2bcde879:nth&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:a3c2974a66bf388b9737c9ba2bcde879:c&#34;&gt;『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0125TZSZ0/baldandersinf-22/&#34; title=&#34;Amazon.co.jp: つながりっぱなしの日常を生きる：ソーシャルメディアが若者にもたらしたもの 電子書籍: ダナ・ボイド, 野中 モモ: Kindleストア&#34;&gt;つながりっぱなしの日常を生きる&lt;/a&gt;』では「ソーシャルステガノグラフィ」と呼んでいる。ちなみに「ステガノグラフィ」は「隠蔽」技術のひとつであり「暗号」ではない。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:a3c2974a66bf388b9737c9ba2bcde879:c&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>「老いに備える知的生活」を読む - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/old-age/" />
		<id>tag:text.Baldanders.info,2016-05-09:/remark/2016/05/old-age/</id>
		<published>2016-05-09T22:28:57+09:00</published>
		<updated>2016-05-10T08:23:09+09:00</updated>
		<summary>現代日本では「老」という字には年齢に関するネガティブなイメージがあるが，「老練」とか「老成」という言葉が示す通り，「老」は本来歳をとることではない。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;http://www.hyuki.com/mini/&#34;&gt;結城浩さんのミニ文庫&lt;/a&gt;より。
&lt;a href=&#34;https://note.mu/&#34;&gt;note&lt;/a&gt; で購入できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/hyuki/n/nc024927d233c&#34;&gt;老いに備える知的生活（結城浩ミニ文庫）｜結城浩｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前の &lt;a href=&#34;https://note.mu/&#34;&gt;note&lt;/a&gt; は au WALLET をクレジットカードとして受け付けてくれずイライラしたが，最近は「au かんたん決済」の決済方法のひとつとして au WALLET が選べるようだ。
ブラボー！&lt;/p&gt;

&lt;p&gt;現代日本では「老」という字には年齢に関するネガティブなイメージがあるが，「老練」とか「老成」という言葉が示す通り，「老」は本来歳をとることではない。&lt;/p&gt;

&lt;p&gt;若いころは如何にして「老成」できるかを考えていた。
しかし具体的なイメージがつかめないまま四十路を迎える。
四十路を過ぎてもちっとも「不惑」にならないし，五十路も迎えた今になっても相変わらずフラフラしてて家族に呆れられる今日このごろである。&lt;/p&gt;

&lt;p&gt;私が本格的に年齢による生物的な衰えを感じるようになったのは40代半ば辺りから。
やはり「記憶力の低下」が違和感の始まりである。
なんというか「もの忘れがひどくなる」というより「ものが覚えられない」のだ。
昔から人の顔や名前を覚えるのが苦手だったが，これが更にひどくなった。
好きな唄の旋律や歌詞がなかなか頭に定着しない。
標準ライブラリや API の関数名が出てこず何度もグーグル先生にお伺いを立てる。
マジでこの世にコンピュータやインターネットがなかったら私はどうなっていたんだろう。&lt;/p&gt;

&lt;p&gt;あるいは若いころの思い出が変質する。
若いころに苦労したことはあまり思い出せなくなってきた。
それなりに苦労したはずだし悩みもしたはずだが「青春時代が夢なんて後からほのぼの想うもの」になってしまう。
若い世代特有の問題を議論する際に先行世代が口を挟むのはホンマに危険だ。
そういう意味で政治家は60歳過ぎたら次の選挙は遠慮すべきだと思う。&lt;/p&gt;

&lt;p&gt;ここ2,3年は視力が低下した。
あきらかに老眼である。
老眼と遠視が異なるものだと初めて知った。
私は重度の乱視と近視なのだが，これに老眼が加わるとどこにもピントが合わなくなる（笑）&lt;/p&gt;

&lt;p&gt;いいこともある。
物事に「時間をかける」ことが苦痛でなくなった。&lt;/p&gt;

&lt;p&gt;若いうちはせっかちなものである。
できるだけ早く「結論」を得ようとする。
しかし，世の中は「不定解」や「不能解」のほうが圧倒的に多いのだ。
これまで「不定解」や「不能解」を避けて手近な近似解で満足していたのが，歳をとることで「不定解」や「不能解」についてもゆっくりゆっくり考えるようになる。&lt;/p&gt;

&lt;p&gt;好きなこと・やりたいことにたっぷりの時間をかけ，さらにそこから何かしらを得る，というのは現代においてとても贅沢なことになっている。&lt;/p&gt;

&lt;p&gt;歳をとるとだんだん「動かないもの」に興味を持つようになるのだそうだ。
たとえば若いころに「園芸」を趣味にしていた人が歳をとって「陶芸」に傾倒するようになり，そこからさらに「石」そのものに興味が向かっていく，とか。
私は園芸にも陶芸にも興味はないが，「動かないもの」に興味が向くようになるということは，それだけ好きなことに時間をかけれるようになるってことなのかもしれない。&lt;/p&gt;

&lt;p&gt;地球上のあらゆる生命にとって時間とは命（寿命）そのものである。
その命を喰らって私たちは生きるのである。
それが「老いる」ということだと想う。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;iframe class=&#34;youtube-player&#34; width=&#34;500&#34;  height=&#34;375&#34; src=&#34;https://www.youtube-nocookie.com/embed/VRQXis8vaZ0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VRQXis8vaZ0&#34;&gt;間寛平　Jijy - YouTube&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
</content>
	</entry>
	
	<entry>
		<title>Twitter アカウントが凍結されました - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/my-twitter-account-was-suspended/" />
		<id>tag:text.Baldanders.info,2016-05-08:/remark/2016/05/my-twitter-account-was-suspended/</id>
		<published>2016-05-08T23:45:44+09:00</published>
		<updated>2016-05-10T12:46:19+09:00</updated>
		<summary>Twitter アカウントが凍結されました。つってもメインじゃなくて @security_inci のほう。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;つっても&lt;a href=&#34;https://twitter.com/spiegel_2007&#34;&gt;メイン&lt;/a&gt;じゃなくて &lt;a href=&#34;https://twitter.com/security_inci&#34;&gt;@security_inci&lt;/a&gt; のほう。
理由は不明。
何か気に入らないことがあったんだろう。
まぁ &lt;a href=&#34;http://www.itmedia.co.jp/news/articles/1605/06/news066.html&#34;&gt;Twitter 有料化の噂&lt;/a&gt;がまことしやかに流れたりするし，そろそろ潮時かもね。&lt;/p&gt;

&lt;p&gt;たとえば &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; のアカウントが止まったらメチャメチャ困るが，正直に言って Twitter のアカウントが止まっても小指の先ほども困らない。
いや， &lt;a href=&#34;https://medium.com/&#34;&gt;Medium&lt;/a&gt; のアカウントは Twitter アカウントに紐付いてるので，そっちは&amp;hellip; やっぱ困らないな（笑）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/security_inci&#34;&gt;@security_inci&lt;/a&gt; でセキュリティ情報を取っていた方がいらっしゃったら，申し訳ないですが諦めてください。
復旧させる気はありません。
なお，国内情報に限れば IPA による &lt;a href=&#34;https://twitter.com/ICATalerts/&#34;&gt;@ICATalerts&lt;/a&gt; を follow するのがおすすめです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipa.go.jp/security/vuln/icat.html&#34;&gt;サイバーセキュリティ注意喚起サービス「icat for JSON」：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;個人的には津田大介さんの『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4862484824/baldandersinf-22/&#34; title=&#34;Amazon.co.jp： Twitter社会論 ~新たなリアルタイム・ウェブの潮流: 津田 大介: 本&#34;&gt;Twitter 社会論&lt;/a&gt;』が登場した時点で Twiter は終わったと思ってるので，まぁしょうがないかな，と。
&lt;a href=&#34;https://twitter.com/spiegel_2007&#34;&gt;メイン&lt;/a&gt;のほうも垢バンされる前に手を打ったほうがいいかな。&lt;/p&gt;

&lt;p&gt;さてこれからセキュリティ情報をどうやって取るかな。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000387.shtml&#34;&gt;Twitter によるセキュリティ情報配信をはじめました — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000710.shtml&#34;&gt;@security_inci を整理した — Baldanders.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>週末スペシャル： 自前でブックマークを運用することにしました - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2016/05/07-stories/" />
		<id>tag:text.Baldanders.info,2016-05-07:/remark/2016/05/07-stories/</id>
		<published>2016-05-07T20:36:22+09:00</published>
		<updated>2016-05-07T20:36:22+09:00</updated>
		<summary>自前でブックマークを運用することにしました / GnuPG 2.1.12 and Libgcrypt 1.7.0 released / その他の気になる記事</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#bkmk:38da96eb5c447fe545608f6a472dd65c&#34;&gt;自前でブックマークを運用することにしました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gpg:38da96eb5c447fe545608f6a472dd65c&#34;&gt;GnuPG 2.1.12 and Libgcrypt 1.7.0 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#other:38da96eb5c447fe545608f6a472dd65c&#34;&gt;その他の気になる記事&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;bkmk:38da96eb5c447fe545608f6a472dd65c&#34;&gt;自前でブックマークを運用することにしました&lt;/h2&gt;

&lt;p&gt;先月&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2016/04/delicious-to-del_icio_us/&#34;&gt;delicious.com が del.icio.us に移行するらしい（出戻り？）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と書いたのだが，その後無事に移行が完了した。&lt;/p&gt;

&lt;p&gt;ただねぇ。
Markdown でリンクを列挙するのがメチャメチャ楽ちんなことに気づいてしまった。
もう folksonomy な時代じゃないだろうし，今年に入ってから &lt;a href=&#34;https://del.icio.us/&#34;&gt;del.icio.us&lt;/a&gt; のデザインが一新したけど，イマイチ使い勝手がよくないんだよな。&lt;/p&gt;

&lt;p&gt;というわけで &lt;a href=&#34;http://text.baldanders.info/bookmarks/&#34;&gt;Bookmarks&lt;/a&gt; セクションを追加して，そこにブックマークを蓄積していくことにした。
タグが使えなくなるけどソースコードの markdown ファイルを全文検索できるので，まぁ問題ないかと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://del.icio.us/spiegel&#34;&gt;del.icio.us/spiegel&lt;/a&gt; にあるブックマークは「&lt;a href=&#34;http://text.baldanders.info/bookmarks/2016/04/export-from-delicious/&#34;&gt;Export from Delicious.com&lt;/a&gt;」に移した。
ただ &lt;a href=&#34;https://del.icio.us/&#34;&gt;del.icio.us&lt;/a&gt; の Export 機能がうまく動いてなくて古いブックマークが取れない。
あと「&lt;a href=&#34;http://text.baldanders.info/bookmarks/2016/04/export-from-delicious/&#34;&gt;Export from Delicious.com&lt;/a&gt;」にあるリンクが膨大で表示に結構時間がかかるので迂闊に開かないほうがいいようだ（笑）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/bookmarks/&#34;&gt;Bookmarks&lt;/a&gt; セクションの記事は&lt;a href=&#34;http://text.baldanders.info/index.xml&#34;&gt;メインの RSS&lt;/a&gt; に含めないことにした。
RSS を撮りたいという奇特な方は&lt;a href=&#34;http://text.baldanders.info/bookmarks/index.xml&#34;&gt;こちら&lt;/a&gt;からどうぞ。&lt;/p&gt;

&lt;h2 id=&#34;gpg:38da96eb5c447fe545608f6a472dd65c&#34;&gt;GnuPG 2.1.12 and Libgcrypt 1.7.0 released&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2016q2/000387.html&#34;&gt;[Announce] GnuPG 2.1.12 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-announce/2016q2/000386.html&#34;&gt;[Announce] Libgcrypt 1.7.0 released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;セキュリティ・アップデートはなし。&lt;/p&gt;

&lt;p&gt;GnuPG 2.1.12 の変更点は以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gpg: New &lt;code&gt;--edit-key&lt;/code&gt; sub-command &amp;ldquo;&lt;code&gt;change-usage&lt;/code&gt;&amp;rdquo; for testing purposes.&lt;/li&gt;
&lt;li&gt;gpg: Out of order key-signatures are now systematically detected and fixed by &lt;code&gt;--edit-key&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;gpg: Improved detection of non-armored messages.&lt;/li&gt;
&lt;li&gt;gpg: Removed the extra prompt needed to create Curve25519 keys.&lt;/li&gt;
&lt;li&gt;gpg: Improved user ID selection for &lt;code&gt;--quick-sign-key&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;gpg: Use the root CAs provided by the system with &amp;ndash;fetch-key.&lt;/li&gt;
&lt;li&gt;gpg: Add support for the experimental Web Key Directory key location service.&lt;/li&gt;
&lt;li&gt;gpg: Improve formatting of Tofu messages and emit new Tofu specific status lines.&lt;/li&gt;
&lt;li&gt;gpgsm: Add option &lt;code&gt;--pinentry-mode&lt;/code&gt; to support a loopback pinentry.&lt;/li&gt;
&lt;li&gt;gpgsm: A new pubring.kbx is now created with the header blob so that gpg can detect that the keybox format needs to be used.&lt;/li&gt;
&lt;li&gt;agent: Add read support for the new private key protection format openpgp-s2k-ocb-aes.&lt;/li&gt;
&lt;li&gt;agent: Add read support for the new extended private key format.&lt;/li&gt;
&lt;li&gt;agent: Default to &lt;code&gt;--allow-loopback-pinentry&lt;/code&gt; and add option &lt;code&gt;--no-allow-loopback-pinentry&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;scd: Changed to use the new libusb 1.0 API for the internal CCID driver.&lt;/li&gt;
&lt;li&gt;dirmngr: The dirmngr-client does now auto-detect the PEM format.&lt;/li&gt;
&lt;li&gt;g13: Add experimental support for dm-crypt.&lt;/li&gt;
&lt;li&gt;w32: Tofu support is now available with the Speedo build method.&lt;/li&gt;
&lt;li&gt;w32: Removed the need for libiconv.dll.&lt;/li&gt;
&lt;li&gt;The man pages for gpg and gpgv are now installed under the correct name (gpg2 or gpg - depending on a configure option).&lt;/li&gt;
&lt;li&gt;Lots of internal cleanups and bug fixes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ふむ。
Windows 版では libiconv.dll は不要になったらしい。&lt;/p&gt;

&lt;p&gt;Libgcrypt 1.7.0 について 1.6 系からの変更点は以下のとおり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;New algorithms and modes:

&lt;ul&gt;
&lt;li&gt;SHA3-224, SHA3-256, SHA3-384, SHA3-512, and MD2 hash algorithms.&lt;/li&gt;
&lt;li&gt;SHAKE128 and SHAKE256 extendable-output hash algorithms.&lt;/li&gt;
&lt;li&gt;ChaCha20 stream cipher.&lt;/li&gt;
&lt;li&gt;Poly1305 message authentication algorithm&lt;/li&gt;
&lt;li&gt;ChaCha20-Poly1305 Authenticated Encryption with Associated Data mode.&lt;/li&gt;
&lt;li&gt;OCB mode.&lt;/li&gt;
&lt;li&gt;HMAC-MD2 for use by legacy applications.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;New curves for ECC:

&lt;ul&gt;
&lt;li&gt;Curve25519.&lt;/li&gt;
&lt;li&gt;sec256k1.&lt;/li&gt;
&lt;li&gt;GOST R 34.10-2001 and GOST R 34.10-2012.&lt;/li&gt;
&lt;li&gt;Performance:&lt;/li&gt;
&lt;li&gt;Improved performance of KDF functions.&lt;/li&gt;
&lt;li&gt;Assembler optimized implementations of Blowfish and Serpent on ARM.&lt;/li&gt;
&lt;li&gt;Assembler optimized implementation of 3DES on x86.&lt;/li&gt;
&lt;li&gt;Improved AES using the SSSE3 based vector permutation method by Mike Hamburg.&lt;/li&gt;
&lt;li&gt;AVX/BMI is used for SHA-1 and SHA-256 on x86.  This is for SHA-1 about 20% faster than SSSE3 and more than 100% faster than the generic C implementation.&lt;/li&gt;
&lt;li&gt;40% speedup for SHA-512 and 72% for SHA-1 on ARM Cortex-A8.&lt;/li&gt;
&lt;li&gt;60-90% speedup for Whirlpool on x86.&lt;/li&gt;
&lt;li&gt;300% speedup for RIPE MD-160.&lt;/li&gt;
&lt;li&gt;Up to 11 times speedup for CRC functions on x86.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Other features:

&lt;ul&gt;
&lt;li&gt;Improved ECDSA and FIPS 186-4 compliance.&lt;/li&gt;
&lt;li&gt;Support for Montgomery curves.&lt;/li&gt;
&lt;li&gt;gcry_cipher_set_sbox to tweak S-boxes of the gost28147 cipher algorithm.&lt;/li&gt;
&lt;li&gt;gcry_mpi_ec_sub to subtract two points on a curve.&lt;/li&gt;
&lt;li&gt;gcry_mpi_ec_decode_point to decode an MPI into a point object.&lt;/li&gt;
&lt;li&gt;Emulation for broken Whirlpool code prior to 1.6.0.  [from 1.6.1]&lt;/li&gt;
&lt;li&gt;Flag &amp;ldquo;pkcs1-raw&amp;rdquo; to enable PCKS#1 padding with a user supplied hash part.&lt;/li&gt;
&lt;li&gt;Parameter &amp;ldquo;saltlen&amp;rdquo; to set a non-default salt length for RSA PSS.&lt;/li&gt;
&lt;li&gt;A SP800-90A conforming DRNG replaces the former X9.31 alternative random number generator.&lt;/li&gt;
&lt;li&gt;Map deprecated RSA algo number to the RSA algo number for better backward compatibility. [from 1.6.2]&lt;/li&gt;
&lt;li&gt;Use ciphertext blinding for Elgamal decryption [CVE-2014-3591]. See &lt;a href=&#34;http://www.cs.tau.ac.il/~tromer/radioexp/&#34;&gt;http://www.cs.tau.ac.il/~tromer/radioexp/&lt;/a&gt; for details. [from 1.6.3]&lt;/li&gt;
&lt;li&gt;Fixed data-dependent timing variations in modular exponentiation [related to CVE-2015-0837, Last-Level Cache Side-Channel Attacks are Practical]. [from 1.6.3]&lt;/li&gt;
&lt;li&gt;Flag &amp;ldquo;no-keytest&amp;rdquo; for ECC key generation.  Due to a bug in the parser that flag will also be accepted but ignored by older version of Libgcrypt. [from 1.6.4]&lt;/li&gt;
&lt;li&gt;Speed up the random number generator by requiring less extra seeding. [from 1.6.4]&lt;/li&gt;
&lt;li&gt;Always verify a created RSA signature to avoid private key leaks due to hardware failures. [from 1.6.4]&lt;/li&gt;
&lt;li&gt;Mitigate side-channel attack on ECDH with Weierstrass curves [CVE-2015-7511].  See &lt;a href=&#34;http://www.cs.tau.ac.IL/~tromer/ecdh/&#34;&gt;http://www.cs.tau.ac.IL/~tromer/ecdh/&lt;/a&gt; for details. [from 1.6.5]&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Internal changes:

&lt;ul&gt;
&lt;li&gt;Moved locking out to libgpg-error.&lt;/li&gt;
&lt;li&gt;Support of the SYSROOT envvar in the build system.&lt;/li&gt;
&lt;li&gt;Refactor some code.&lt;/li&gt;
&lt;li&gt;The availability of a 64 bit integer type is now mandatory.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Bug fixes:

&lt;ul&gt;
&lt;li&gt;Fixed message digest lookup by OID (regression in 1.6.0).&lt;/li&gt;
&lt;li&gt;Fixed a build problem on NetBSD&lt;/li&gt;
&lt;li&gt;Fixed memory leaks in ECC code.&lt;/li&gt;
&lt;li&gt;Fixed some asm build problems and feature detection bugs.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストール後はこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;$ gpg --version
gpg (GnuPG) 2.1.12
libgcrypt 1.7.0
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ********
サポートしているアルゴリズム:
公開鍵: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
暗号方式: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
    CAMELLIA128, CAMELLIA192, CAMELLIA256
ハッシュ: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
圧縮: 無圧縮, ZIP, ZLIB, BZIP2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;other:38da96eb5c447fe545608f6a472dd65c&#34;&gt;その他の気になる記事&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2016/05/01/editors-note-12/&#34;&gt;「出版不況論」をめぐる議論の混乱について « マガジン航[kɔː]&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magazine-k.jp/2016/05/02/literature-in-2066/&#34;&gt;対談「50年後の文芸はどうなっているのか？」藤谷治✕藤井大洋 « マガジン航[kɔː]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wildhawkfield.com/2016/05/real-light-novel-market.html&#34;&gt;ライトノベル市場は衰退どころか拡大傾向にある ── 『ORICONエンタメ・マーケット白書2015』より:見て歩く者 by 鷹野凌&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/hattamasayuki/20160430-00057230/&#34;&gt;やましくなければプライバシーは要らない？ nothing to hideを巡って(八田真行) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.apple.com/ja-jp/HT206338&#34;&gt;About the security content of Xcode 7.3.1 - Apple サポート&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2315&#34;&gt;Vulnerability Summary for CVE-2016-2315&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-2324&#34;&gt;Vulnerability Summary for CVE-2016-2324&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1605/06/news042.html&#34;&gt;AppleがXcodeの更新版を公開、Gitの脆弱性を修正 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jpcert.or.jp/at/2016/at160021.html&#34;&gt;ImageMagick の脆弱性 (CVE-2016-3714) に関する注意喚起&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20160504/1462352882&#34;&gt;ImageMagickの脆弱性(CVE-2016-3714他)についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sixapart.jp/movabletype/news/2016/05/06-1452.html&#34;&gt;[重要] ImageMagick の脆弱性 ImageTragick (CVE-2016-3714) への対応について | Movable Type ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.forest.impress.co.jp/docs/news/20160506_756180.html&#34;&gt;「OpenSSL」に6件の脆弱性、修正を施した最新版v1.0.2h/v1.0.1tが公開 - 窓の杜&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itmedia.co.jp/enterprise/articles/1605/06/news046.html&#34;&gt;OpenSSLの更新版公開、複数の脆弱性を修正 - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://japan.zdnet.com/article/35082166/&#34;&gt;OpenSSLに2件の深刻な脆弱性&amp;ndash;早急にパッチの適用を - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v0.10.45/&#34;&gt;Node v0.10.45 (Maintenance) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v0.12.14/&#34;&gt;Node v0.12.14 (Maintenance) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v4.4.4/&#34;&gt;Node v4.4.4 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v5.11.1/&#34;&gt;Node v5.11.1 (Stable) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/blog/release/v6.1.0/&#34;&gt;Node v6.1.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/chrome-and-firefox-block-tpb-as-phishing-site-160507/&#34;&gt;Chrome, Firefox and Safari Block Pirate Bay as &amp;ldquo;Phishing&amp;rdquo; Site - TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bylines.news.yahoo.co.jp/kuriharakiyoshi/20160506-00057409/&#34;&gt;ローリングストーンズにはドナルドトランプ氏に楽曲の使用中止を命じる権利があるのか(栗原潔) - 個人 - Yahoo!ニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
</feed>
