<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2019-05-05:/</id>
	<updated>2019-05-05T02:50:26+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>「令」のゲシュタルト崩壊</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/gestaltzerfall-of-reiwa/" />
		<id>tag:text.Baldanders.info,2019-05-05:/remark/2019/05/gestaltzerfall-of-reiwa/</id>
		<published>2019-05-05T02:49:46+00:00</published>
		<updated>2019-05-05T02:50:26+00:00</updated>
		<summary>デザインの一部として書く（描く）なら，せめて楷書体にしてくれないだろうか。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;自慢じゃないけど，こちとら中3まで習字教室（書道ではない&lt;code&gt;w&lt;/code&gt;）に通ってたですよ。
今回は「だからどうした」という話。&lt;/p&gt;

&lt;p&gt;いやね。
改元のお祭り騒ぎは（消費税増税前の一時的個人消費拡大という意味でも）結構なんだけどさ。
こうもアチコチで「令和」が連呼されるとゲシュタルト崩壊を起こしそうになるのよ。
特に「令」の字。&lt;/p&gt;

&lt;p&gt;元々の来歴はともかく，私達がふだん目にしている明朝体やゴシック体は活字印刷された文章で使うことを想定した書体なのですよ。
それに「領」とか「玲」とか「零」とかいった画数の多い字の一部としてみれば明朝体の「令」はよくできたデザインだと思う。
でもこの字だけを取り出すと「これじゃない」感が半端ないわけさ。&lt;/p&gt;

&lt;p&gt;デザインの一部として書く（描く）なら，せめて楷書体にしてくれないだろうか。&lt;/p&gt;

&lt;p&gt;と思ってフリーの楷書体フォントを探してみるも，なかなかないものだね。
近いもので以下のサイトを見つけた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hakusyu.com/&#34;&gt;白舟書体 伝統的書体から遊び心溢れるデザイン筆文字のフォントまで&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「&lt;a href=&#34;http://www.hakusyu.com/licensing.htm&#34;&gt;使用許諾&lt;/a&gt;」によると個人サイトでデザインの一部として使うなら「追加契約・追加料金なしで可能」らしい。
というわけで，「白舟楷書教漢」書体と先日公開した&lt;a href=&#34;https://text.baldanders.info/remark/2019/03/book-cover-for-aozora-bunko/&#34; title=&#34;「青空文庫」用の書影がほしい&#34;&gt;「青空文庫」用の書影&lt;/a&gt;と組み合わせてみよう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c1&#34;&gt;&lt;a href=&#34;#fn:c1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./reiwa.png&#34;&gt;&lt;img src=&#34;./reiwa.png&#34; srcset=&#34;./reiwa.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;どや，楷書体かっこええやろ！ （CV &lt;a href=&#34;https://www.aoni.co.jp/search/hisakawa-aya.html&#34;&gt;久川綾&lt;/a&gt;）&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%82%AB%E3%83%BC%E3%83%89%E3%82%AD%E3%83%A3%E3%83%97%E3%82%BF%E3%83%BC%E3%81%95%E3%81%8F%E3%82%89-1%E6%9C%9F-2%E6%9C%9F-%E3%82%B3%E3%83%B3%E3%83%97%E3%83%AA%E3%83%BC%E3%83%88-DVD-BOX/dp/B004JSTW5S?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B004JSTW5S&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51nAq5nBXKL._SL160_.jpg&#34; width=&#34;106&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%82%AB%E3%83%BC%E3%83%89%E3%82%AD%E3%83%A3%E3%83%97%E3%82%BF%E3%83%BC%E3%81%95%E3%81%8F%E3%82%89-1%E6%9C%9F-2%E6%9C%9F-%E3%82%B3%E3%83%B3%E3%83%97%E3%83%AA%E3%83%BC%E3%83%88-DVD-BOX/dp/B004JSTW5S?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B004JSTW5S&#34;&gt;カードキャプターさくら 1期+2期+3期 コンプリート DVD-BOX [Import]&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;IDP&lt;/dd&gt;
    &lt;dd&gt;DVD DVD&lt;/dd&gt;
    &lt;dd&gt;ASIN: B004JSTW5S, EAN: 3760000568838&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;3期分合わせて4千円弱とか太っ腹！ まぁ私は &lt;a href=&#34;https://www.happyon.jp/cardcaptor-sakura&#34;&gt;Hulu で観る&lt;/a&gt;けどね。たまに観たくなるのよ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-05-05&#34;&gt;2019-05-05&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦, 黒木 裕介&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;Book 大型本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4774187054, EAN: 9784774187051&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:c1&#34;&gt;このブログは基本的に &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34; title=&#34;Creative Commons — Attribution-ShareAlike 4.0 International — CC BY-SA 4.0&#34;&gt;BY-SA&lt;/a&gt; ライセンスで公開しているが，この画像に関しては適用外とする。「白舟楷書教漢」書体の翻案扱いになりそうだし。フォントの利用については&lt;a href=&#34;http://www.hakusyu.com/&#34; title=&#34;白舟書体 伝統的書体から遊び心溢れるデザイン筆文字のフォントまで&#34;&gt;該当サイト&lt;/a&gt;へどうぞ。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>『気象がわかる数式入門』を立ち読みした</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/meteorology-and-math/" />
		<id>tag:text.Baldanders.info,2019-05-04:/remark/2019/05/meteorology-and-math/</id>
		<published>2019-05-04T10:11:39+00:00</published>
		<updated>2019-05-04T10:20:16+00:00</updated>
		<summary>こういう本は是非本棚に置いていつでも引っ張り出せるようにしておきたいものである。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;長いお休みももう少しで終わり。
みなさん GW はいかがお過ごしですか。&lt;/p&gt;

&lt;p&gt;この GW は天気がよかったので散歩がてら&lt;a href=&#34;https://www.library.pref.shimane.lg.jp/&#34;&gt;県立図書館&lt;/a&gt;へ行ってまったりとしていたのだが，また面白い本を見つけてしまったのですよ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/32809967787/&#34;&gt;&lt;img src=&#34;./meteorology-and-math.jpg&#34; srcset=&#34;./meteorology-and-math.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;なにこれ。面白そう！&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/32809967787/&#34;&gt;なにこれ。面白そう！&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;その場でパラパラとページをめくって中身を確認し，ケータイを取り出して Amazon でポチりました（笑）&lt;/p&gt;

&lt;p&gt;最近はいい本がいっぱいあるんだなぁ。
これを子供の頃に読んでいれば...&lt;/p&gt;

&lt;p&gt;前にもどこかで書いたような気がするが，独学というのはどうしても「つまみ食い」になりがちで，ひとつのジャンルを体系的に学ぶのが難しい。&lt;/p&gt;

&lt;p&gt;私は科学と数学は相補的な関係にあると思っているが『&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4274202712/baldandersinf-22/&#34; title=&#34;気象がわかる数式入門 | 二宮 洸三 |本 | 通販 | Amazon&#34;&gt;気象がわかる数式入門&lt;/a&gt;』は数学と科学の間にある本という感じだろうか。
内容的には高校生物理くらいのレベルだと思うが基本的なことをきちんと押さえているので読んでても迷いにくい。
たぶん中学生くらいでも理解できるんじゃないかな。&lt;/p&gt;

&lt;p&gt;この本と何か適当な数学書があれば完璧じゃないだろうか。
たとえば「数学ガール」シリーズ（微積分あたりの巻）とか（笑） こういう本は是非本棚に置いていつでも引っ張り出せるようにしておきたいものである。&lt;/p&gt;

&lt;p&gt;というわけで，今回は借りずに買ったのであった（ちなみに別の本を借りたのだが，それはまた後日）。&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%B0%97%E8%B1%A1%E3%81%8C%E3%82%8F%E3%81%8B%E3%82%8B%E6%95%B0%E5%BC%8F%E5%85%A5%E9%96%80-%E4%BA%8C%E5%AE%AE-%E6%B4%B8%E4%B8%89/dp/4274202712?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4274202712&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/4154nBSFWSL._SL160_.jpg&#34; width=&#34;114&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%B0%97%E8%B1%A1%E3%81%8C%E3%82%8F%E3%81%8B%E3%82%8B%E6%95%B0%E5%BC%8F%E5%85%A5%E9%96%80-%E4%BA%8C%E5%AE%AE-%E6%B4%B8%E4%B8%89/dp/4274202712?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4274202712&#34;&gt;気象がわかる数式入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;二宮 洸三&lt;/dd&gt;
    &lt;dd&gt;オーム社 2006-07-01&lt;/dd&gt;
    &lt;dd&gt;Book 単行本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4274202712, EAN: 9784274202711&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;気象に入る前に「次元」や「単位系」といった基本中の基本の話から始まり，そこから誤差論（の最初のほう）とかだんだんと核心に入っていく。順番に読んでいけば無理なく「気象」を始めとする物理学の初歩が理解できるよう構成されている教科書的な内容。これが私の子供の頃にあったらなぁ。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-05-04&#34;&gt;2019-05-04&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go モジュールの依存関係を可視化するツール ggm v0.2.0 をリリースした</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/05/ggm-0_2_0-is-released/" />
		<id>tag:text.Baldanders.info,2019-05-04:/release/2019/05/ggm-0_2_0-is-released/</id>
		<published>2019-05-04T09:09:55+00:00</published>
		<updated>2019-05-04T09:11:20+00:00</updated>
		<summary>前回作ったツールが思ったより有用なことに気がついて「これはちゃんとコードを書こう」と思い立った。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;前回「&lt;a href=&#34;https://text.baldanders.info/release/2019/05/ggm/&#34;&gt;Go モジュールの依存関係を可視化するツールを作った&lt;/a&gt;」のだが，思ったより有用なことに気がついて「これはちゃんとコードを書こう」と思い立った。&lt;/p&gt;

&lt;p&gt;ちうわけで，リリースしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/ggm/releases/tag/v0.2.0&#34;&gt;Release v0.2.0 · spiegel-im-spiegel/ggm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はちゃんとバイナリも用意しているぞ（笑）&lt;/p&gt;

&lt;p&gt;使い方はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ggm -h
Usage:
  ggm [flags] [input file]

Flags:
  -c, --config string   Configuration file
      --debug           Debug flag
  -h, --help            help for ggm
  -v, --version         Output version of ggm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/release/2019/05/ggm/&#34; title=&#34;Go モジュールの依存関係を可視化するツールを作った&#34;&gt;前回&lt;/a&gt;と異なるのは &lt;code&gt;-c&lt;/code&gt; オプションを付けたことか。
たとえば以下の内容で &lt;code&gt;ggm.toml&lt;/code&gt; というファイルを作って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fontname&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Inconsolata&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下のコマンドラインで DOT ファイルを生成すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go mod graph | ggm -c ggm.toml
digraph G {
	ID = &amp;#34;G&amp;#34;;
	
	n1[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/spiegel-im-spiegel/ggm&amp;#34;];
	n2[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/BurntSushi/toml\nv0.3.1&amp;#34;];
	n3[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/emicklei/dot\nv0.9.3&amp;#34;];
	n4[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/spf13/cobra\nv0.0.3&amp;#34;];
	n5[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/spf13/pflag\nv1.0.3&amp;#34;];
	n6[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;github.com/spiegel-im-spiegel/gocli\nv0.9.5&amp;#34;];
	n7[fontname=&amp;#34;Inconsolata&amp;#34;,label=&amp;#34;golang.org/x/xerrors\nv0.0.0-20190410155217-1f06c39b4373&amp;#34;];
	n1-&amp;gt;n2;
	n1-&amp;gt;n3;
	n1-&amp;gt;n4;
	n1-&amp;gt;n5;
	n1-&amp;gt;n6;
	n1-&amp;gt;n7;
	
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな感じで &lt;code&gt;fontname&lt;/code&gt; 属性を仕込むことができる。
これを &lt;code&gt;dot&lt;/code&gt; コマンドに流し込むと&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go mod graph | ggm -c ggm.toml | dot -Tpng -o ggm.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;ggm.png&#34;&gt;&lt;img src=&#34;./ggm.png&#34; srcset=&#34;./ggm.png 2380w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ggm.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;ggm.png&#34;&gt;ggm.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;てな風にフォントを &lt;a href=&#34;https://www.levien.com/type/myfonts/inconsolata.html&#34;&gt;Inconsolata&lt;/a&gt; にすることができるのですよ（勿論あらかじめフォントがインストールされていることが条件ね）。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-c&lt;/code&gt; オプションで指定するファイルは &lt;a href=&#34;https://github.com/toml-lang/toml&#34; title=&#34;toml-lang/toml: Tom&#39;s Obvious, Minimal Language&#34;&gt;TOML&lt;/a&gt; 形式で &lt;code&gt;node&lt;/code&gt; と &lt;code&gt;edge&lt;/code&gt; の属性を設定することができる。
ただし手抜き実装で属性名やその値の正しさについてはノーチェックなのでご注意を（つまり &lt;code&gt;key=value&lt;/code&gt; で表されるものなら何でも入る&lt;code&gt;w&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;今回 &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT 言語&lt;/a&gt;用のビルダ・パッケージには &lt;a href=&#34;https://github.com/emicklei/dot&#34; title=&#34;emicklei/dot: Go package for writing descriptions using the Graphviz DOT language&#34;&gt;github.com/emicklei/dot&lt;/a&gt; を利用している。
シンプルな設計で（簡単な図であれば）使い勝手がよい。&lt;/p&gt;

&lt;p&gt;本当は本家の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラが &lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT 言語&lt;/a&gt;で吐いてくれればこんなの要らないんだけどねぇ。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go モジュールのバージョン管理</title>
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/versioning-of-go-modules/" />
		<id>tag:text.Baldanders.info,2019-05-04:/golang/versioning-of-go-modules/</id>
		<published>2019-05-04T04:08:19+00:00</published>
		<updated>2019-05-05T01:17:07+00:00</updated>
		<summary>試して壊して試して壊して... を繰り返した成果が今回の記事である。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;今回の長期休暇を利用して今まで公開したツールやパッケージ類をチューニングしているのだが， &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.11 以降から実装されているモジュール対応モード（module-aware mode）のバージョン管理の挙動が（ドキュメントを読んだだけでは）ピンとこなかったので，この際いろいろと試してみることにした。&lt;/p&gt;

&lt;p&gt;試して壊して試して壊して... を繰り返した成果が今回の記事である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:e1&#34;&gt;&lt;a href=&#34;#fn:e1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
まとめは&lt;a href=&#34;#digest&#34;&gt;最後に書いておく&lt;/a&gt;のであしからず。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;みんな大好き Hello World&lt;/h2&gt;

&lt;p&gt;まずは以下の簡単なパッケージを作ってみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hello/
├── go.mod
└── hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;go.mod&lt;/code&gt; ファイルの内容は以下の通り。
今回の記事では先頭行の &lt;code&gt;module&lt;/code&gt; ディレクティブに注目する。
&lt;code&gt;module&lt;/code&gt; ディレクティブはパッケージのモジュール・パスを定義するもので，このモジュールパスとバージョンのセットがモジュールの IDentity となる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module github.com/spiegel-im-spiegel/hello

go 1.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;hello.go&lt;/code&gt; ファイルの内容は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このパッケージをリポジトリに push してバージョンタグ &lt;code&gt;v1.0.0&lt;/code&gt; を付ける。&lt;/p&gt;

&lt;p&gt;パッケージを使う側のコードも書いておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/hello&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを実行すると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello v1.0.0
go: downloading github.com/spiegel-im-spiegel/hello v1.0.0
go: extracting github.com/spiegel-im-spiegel/hello v1.0.0
Hello World&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このとき，パッケージを使う側の &lt;code&gt;go.mod&lt;/code&gt; は以下のようになっているはずである（モジュール名は適当）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require github.com/spiegel-im-spiegel/hello v1.0.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前準備はこれで OK&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;パッケージのバージョンを v2 にアップグレードする&lt;/h2&gt;

&lt;p&gt;ではこの &lt;code&gt;hello&lt;/code&gt; パッケージを少し弄ってみよう。
まずは安直に &lt;code&gt;hello.go&lt;/code&gt; 関数を以下のように変更する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;by v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Hello()&lt;/code&gt; 関数の後方互換性が失われたのでメジャーバージョンを上げることにしよう。
このコードを push してバージョンタグ &lt;code&gt;v2.0.0&lt;/code&gt; を付ける。&lt;/p&gt;

&lt;p&gt;この新しいパッケージで使う側のコードを修正してみる。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/hello&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;	&lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Golang&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;go.mod&lt;/code&gt; ファイルも直さないとね。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

&lt;span class=&#34;hl&#34;&gt;require github.com/spiegel-im-spiegel/hello v2.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これを実行すると以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello v2.0.0
go: downloading github.com/spiegel-im-spiegel/hello v0.0.0-20190503134808-f31e6a72de0f
go: extracting github.com/spiegel-im-spiegel/hello v0.0.0-20190503134808-f31e6a72de0f
Hello Golang by v2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ありゃりゃ。
&lt;code&gt;v2.0.0&lt;/code&gt; のモジュールを見つけたまではよかったが，ダウンロード時にバージョンタグを認識していない？&lt;/p&gt;

&lt;p&gt;ここで思い出したのが &lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt; のルールである。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://research.swtch.com/vgo-import&#34;&gt;&lt;img src=&#34;https://research.swtch.com/impver.png&#34; srcset=&#34;https://research.swtch.com/impver.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;Semantic Import Versioning&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://research.swtch.com/vgo-import&#34;&gt;Semantic Import Versioning&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;ひょっとして &lt;code&gt;v2&lt;/code&gt; ディレクトリを切ったらいいのか？ 試してみよう&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sv1&#34;&gt;&lt;a href=&#34;#fn:sv1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;v2 ディレクトリによる分離&lt;/h2&gt;

&lt;p&gt;先ほどのコミットはなかったことにして， &lt;code&gt;hello&lt;/code&gt; パッケージの構成を以下のように変える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hello/
├── go.mod
├── hello.go
└── v2/
    └── hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;hello.go&lt;/code&gt; が &lt;code&gt;v1&lt;/code&gt; のコードで &lt;code&gt;v2/hello.go&lt;/code&gt; が &lt;code&gt;v2&lt;/code&gt; のコードである。&lt;/p&gt;

&lt;p&gt;このパッケージを使う側のコードも以下のように変える。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/hello/v2&amp;#34;&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Golang&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;go.mod&lt;/code&gt; はこんな感じ？&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

&lt;span class=&#34;hl&#34;&gt;require github.com/spiegel-im-spiegel/hello/v2 v2.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;これで実行してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello/v2 v2.0.0
go: github.com/spiegel-im-spiegel/hello/v2@v2.0.0: go.mod has non-.../v2 module path &amp;#34;github.com/spiegel-im-spiegel/hello&amp;#34; (and .../v2/go.mod does not exist) at revision v2.0.0
go: error loading module requirements&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ええつと？ あぁ，そうか。
パッケージ側の&lt;code&gt;v2/&lt;/code&gt; ディレクトリにも &lt;code&gt;go.mod&lt;/code&gt; ファイルがいるのか。&lt;/p&gt;

&lt;p&gt;んじゃあ，以下の内容の &lt;code&gt;v2/go.mod&lt;/code&gt; ファイルを追加して &lt;code&gt;v2.0.1&lt;/code&gt; タグを付ける。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module github.com/spiegel-im-spiegel/hello/v2

go 1.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これでパッケージの構成は以下のようになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hello/
├── go.mod
├── hello.go
└── v2/
    ├── go.mod
    └── hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;では，このパッケージを使って先ほどのコードを動かしてみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello/v2 v2.0.1
go: downloading github.com/spiegel-im-spiegel/hello/v2 v2.0.1
go: extracting github.com/spiegel-im-spiegel/hello/v2 v2.0.1
Hello Golang by v2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ようやく動いたよ... &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;インポートパスをリダイレクトしたかったのだが...&lt;/h2&gt;

&lt;p&gt;パッケージ側の構成はこれでいいとして，パッケージをインポートする側は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/hello&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で &lt;code&gt;v2&lt;/code&gt; のコードを動かしたいよね。
というわけで &lt;code&gt;go.mod&lt;/code&gt; を以下のように書いてみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require github.com/spiegel-im-spiegel/hello/v2 v2.0.1

replace github.com/spiegel-im-spiegel/hello v2.0.1 =&amp;gt; github.com/spiegel-im-spiegel/hello/v2 v2.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで動かすとどうなるか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello v2.0.1
go: finding github.com/spiegel-im-spiegel/hello/v2 v2.0.1
go: downloading github.com/spiegel-im-spiegel/hello/v2 v2.0.1
go: extracting github.com/spiegel-im-spiegel/hello/v2 v2.0.1
Hello Golang by v2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;おっ，うまくいったっぽい？ でも &lt;code&gt;go.mod&lt;/code&gt; ファイルを見てみると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require (
	github.com/spiegel-im-spiegel/hello v0.0.0-20190503144136-a8f02ef988d2 // indirect
	github.com/spiegel-im-spiegel/hello/v2 v2.0.1
)

replace github.com/spiegel-im-spiegel/hello v0.0.0-20190503144136-a8f02ef988d2 =&amp;gt; github.com/spiegel-im-spiegel/hello/v2 v2.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;てな感じに書き換えられてしまった。
ふむむむむ？&lt;/p&gt;

&lt;p&gt;どうもパッケージ内のディレクトリ名とバージョンタグを暗黙的に関連付けているようだ。
なので &lt;code&gt;v2.x&lt;/code&gt; タグは &lt;code&gt;hello/v2/&lt;/code&gt; ディレクトリに関連付けられてしまう。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello-graph.dot&#34;&gt;&lt;img src=&#34;./hello-graph.png&#34; srcset=&#34;./hello-graph.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;たとえば同じリビジョンに &lt;code&gt;v1.0.1&lt;/code&gt; タグを付ければ&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello-graph2.dot&#34;&gt;&lt;img src=&#34;./hello-graph2.png&#34; srcset=&#34;./hello-graph2.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;という感じで &lt;code&gt;hello/&lt;/code&gt; ディレクトリにもバージョンタグが割り当てられる。
もっともそれで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require (
	github.com/spiegel-im-spiegel/hello v1.0.1
	github.com/spiegel-im-spiegel/hello/v2 v2.0.1
)

replace github.com/spiegel-im-spiegel/hello v1.0.1 =&amp;gt; github.com/spiegel-im-spiegel/hello/v2 v2.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;としたところで更なる混乱を招くだけだけどね。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;“Malformed Module Path”&lt;/h3&gt;

&lt;p&gt;ならば，旧い &lt;code&gt;v1&lt;/code&gt; の方を別ディレクトリに移動すればいんじゃね？ って思うよね。
私は思った。&lt;/p&gt;

&lt;p&gt;で，パッケージ側を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hello/
├── go.mod
├── hello.go
└── v1/
    ├── go.mod
    └── hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という構成にし，呼び出す側の &lt;code&gt;go.mod&lt;/code&gt; ファイルを&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require github.com/spiegel-im-spiegel/hello v1.0.1

replace github.com/spiegel-im-spiegel/hello v1.0.1 =&amp;gt; github.com/spiegel-im-spiegel/hello/v1 v1.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とかやってみたんだけど&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;invalid module version github.com/spiegel-im-spiegel/hello/v1: malformed module path: github.com/spiegel-im-spiegel/hello/v1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とか言われたですよ。
いや “malformed module path” て &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;結局 &lt;em&gt;モジュール対応モード下でメジャー・バージョンを上げたならモジュール・パスも変えるしかない&lt;/em&gt; ということらしい。&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;v2 ブランチを切って運用する&lt;/h2&gt;

&lt;p&gt;とはいえバージョンごとに物理的にディレクトリを切って運用するというのは今時ありえないダサさである。
そこで物理的にディレクトリを切るのではなくリポジトリ上でブランチを切って運用することを考える。&lt;/p&gt;

&lt;p&gt;パッケージのディレクトリ構成は &lt;code&gt;v1&lt;/code&gt; と同じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;hello/
├── go.mod
└── hello.go&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これに対して &lt;code&gt;v2&lt;/code&gt; ブランチを切り， &lt;code&gt;v2&lt;/code&gt; ブランチ上で &lt;code&gt;go.mod&lt;/code&gt; を以下のように変更する。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;hl&#34;&gt;module github.com/spiegel-im-spiegel/hello2/v2
&lt;/span&gt;
go 1.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;モジュールのパスと物理パスが異なっている&lt;/em&gt; が気にしないで先に進む。
&lt;code&gt;hello.go&lt;/code&gt; を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;hello&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;by v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;として &lt;code&gt;go.mod&lt;/code&gt; とともに &lt;code&gt;v2&lt;/code&gt; ブランチに commit &amp;amp; push し，バージョンタグ &lt;code&gt;v2.0.0&lt;/code&gt; を付与する。&lt;/p&gt;

&lt;p&gt;パッケージを使用する側のコードは以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/hello/v2&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;hello2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Golang&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 
go: finding github.com/spiegel-im-spiegel/hello/v2 v2.0.0
go: downloading github.com/spiegel-im-spiegel/hello/v2 v2.0.0
go: extracting github.com/spiegel-im-spiegel/hello/v2 v2.0.0
Hello Golang by v2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;という感じでうまく動いたようだ。
&lt;code&gt;go.mod&lt;/code&gt; の内容も&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module work

go 1.12

require github.com/spiegel-im-spiegel/hello/v2 v2.0.0 // indirect&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となっていた。
よーし，うむうむ，よーし。&lt;/p&gt;

&lt;p&gt;ブランチとモジュール・パスの関係は以下のような感じだろうか。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./hello-graph3.dot&#34;&gt;&lt;img src=&#34;./hello-graph3.png&#34; srcset=&#34;./hello-graph3.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;h2 id=&#34;digest&#34;&gt;まとめると...&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;v1&lt;/code&gt; 以降，メジャーバージョンを上げる度にモジュール・パスを変更して管理を分ける

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;v2.x&lt;/code&gt; なら &lt;code&gt;path/to/module/v2&lt;/code&gt; などとする。最後の &lt;code&gt;v2&lt;/code&gt; がポイント&lt;/li&gt;
&lt;li&gt;パスの最後がバージョン番号（&lt;code&gt;v2&lt;/code&gt; など）になっていれば，暗黙的にバージョンタグが対応する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;モジュール・パスを変更するには &lt;code&gt;go.mod&lt;/code&gt; ファイルの &lt;code&gt;module&lt;/code&gt; ディレクティブを変更する

&lt;ul&gt;
&lt;li&gt;物理的にディレクトリを切るのであれば &lt;code&gt;go.mod&lt;/code&gt; ファイルも含める&lt;/li&gt;
&lt;li&gt;バージョンごとにブランチを切って管理するのであれば，各ブランチの &lt;code&gt;go.mod&lt;/code&gt; ファイルで指定するモジュール・パスに注意する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;パッケージを利用する側はリポジトリの物理パスとモジュール・パスが異なる場合があるため &lt;code&gt;go.mod&lt;/code&gt; ファイルに記述されているモジュール・パスを確認する&lt;/li&gt;
&lt;li&gt;同一パッケージの異なるメジャー・バージョンのモジュール・パスを &lt;code&gt;replace&lt;/code&gt; で繋がないこと。更に分かりにくくなるか指定によってはエラーになる&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;といったところだろうか。&lt;/p&gt;

&lt;p&gt;バージョンごとにパッケージのパスを分けるため &lt;a href=&#34;https://labix.org/gopkg.in&#34; title=&#34;gopkg.in - Stable APIs for the Go language&#34;&gt;gopkg.in&lt;/a&gt; といったサービスが使われることがあるが，リポジトリの物理パスとモジュール・パスが異なる場合は注意が必要である。
うまくパッケージをダウンロードできない場合は &lt;code&gt;go.mod&lt;/code&gt; ファイル内に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;replace gopkg.in/russross/blackfriday.v2 v2.0.1 =&amp;gt; github.com/russross/blackfriday/v2 v2.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;といった記述が必要になるかもしれない（というかそれが元々の &lt;code&gt;replace&lt;/code&gt; ディレクティブの機能）。&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/go-module-aware-mode/&#34;&gt;モジュール対応モードへの移行を検討する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:e1&#34;&gt;実際にはこの記事で書いた量の三倍くらいは試して壊して... を繰り返している。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:e1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sv1&#34;&gt;ちなみに &lt;code&gt;v0&lt;/code&gt; から &lt;code&gt;v1&lt;/code&gt; へのアップグレード時にはこのようなことは起きない。一般的に &lt;code&gt;v0&lt;/code&gt; 系はベータ版と認識されていて後方互換性については煩くない。 &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;のモジュール対応モードでもチェックが入らないようだ。言い方を変えると &lt;code&gt;v1&lt;/code&gt; 以降は（&lt;a href=&#34;http://semver.org/&#34; title=&#34;Semantic Versioning 2.0.0 | Semantic Versioning&#34;&gt;Semantic Versioning&lt;/a&gt; に従うなら）後方互換性についてちゃんと考えないといけないってこともであるのだが。バージョン設計と運用は意外と難しい？
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sv1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>「人生はスタートの繰り返し」</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/endless-starting/" />
		<id>tag:text.Baldanders.info,2019-05-03:/remark/2019/05/endless-starting/</id>
		<published>2019-05-03T00:54:37+00:00</published>
		<updated>2019-05-03T01:23:45+00:00</updated>
		<summary>「頑張ること」を頑張るなど「頑張る」の無駄遣いである。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;「人生はスタートの繰り返し」と言ったのは長田佳奈さんの『2KZ』だったかな。
「&lt;a href=&#34;https://cakes.mu/series/339&#34; title=&#34;数学ガールの秘密ノート｜結城浩｜cakes（ケイクス）&#34;&gt;数学ガールの秘密ノート&lt;/a&gt;」の最近の連載「確率の冒険」を読む度に連想するのはこのフレーズである。&lt;/p&gt;

&lt;p&gt;ところで Facebook の TL で&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://note.mu/okaji/n/na3e7aeaefdb6&#34;&gt;頑張れなかった人達の増加スピードが人の寿命を上回っている｜Yasunori Okajima｜note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という記事が紹介されていて， TL 上の（紹介された方の）コメントも合わせて面白くはあるのだが，私はむしろこの記事自体に「もやつく」ので脊髄反射的にこの記事を書いてみる。&lt;/p&gt;

&lt;p&gt;私は三十歳代半ばで&lt;a href=&#34;https://baldanders.info/spiegel/log/nikki/&#34; title=&#34;Spiegelの闘病日記&#34;&gt;ちょっと死にかけて&lt;/a&gt;それまでの生活を変えざるを得なくなった。
思考スピードと記憶力の低下を明確に感じるようになったのは四十歳代半ば頃である。
諸々の事情で「職業エンジニア」を諦めたのは五十歳代半ばの現在である。&lt;/p&gt;

&lt;p&gt;歳をとれば肉体的に衰えるのは当然で，しかも「自分は自分が考えるようには考えない」ことに気がつくのもけっこう歳いってからだったりする。
その度にひとつづつ何かを諦めるのだが，それは「頑張れなかった」からではない。&lt;/p&gt;

&lt;p&gt;上で示した記事を見ても思うのだが，みんな「頑張ること」を頑張ってないかい？ それは間違い。
「仕事を頑張ってる自分」に耽溺するのは workaholic といって嗜癖問題の一種である。&lt;/p&gt;

&lt;p&gt;若いうちは無茶もできるし何でもできる気分に浸れるが，肉体的に衰え脳の働きも衰えれば必然的に「頑張る」という希少リソースをどう配分するかが問題になる。
「頑張ること」を頑張るなど「頑張る」の無駄遣いである。&lt;/p&gt;

&lt;p&gt;役割が異なれば使うツールも異なって当たり前。
管理職になったんならドキュメントなんか部下に書かせろよ。
そしてドキュメントを書いた部下とその成果を正しく評価すればよい。
メールや Slack 等のチャットに時間を使うのも無駄。
それならば，そうしたコミュニケーション・ツールで交わされる会話を要約するコードを書かせて普段はそれを使うべき。
これからは AI の時代なんだろ。 AI にメールやチャットを任せればくだらない時候の挨拶とかもなくなるだろう（笑）&lt;/p&gt;

&lt;p&gt;「降りる」ことは悪いことではない。
むしろ降りたほうが賢明なこともある。
「頑張る」は希少リソースなのだから。
そして「次」を希望するならまたスタートし直せばいいのだ。&lt;/p&gt;

&lt;p&gt;「人生はスタートの繰り返し」である。
人生のあらゆる局面が「一発勝負」なら人類は永遠に進化できない。
繰り返すからこそ確率と統計に意味があるのである。&lt;/p&gt;

&lt;p&gt;どんな境遇でも「またスタートすればいい」と期待できるうちは人生はそれほど悪いものではないし，そう思えるよう「社会」を設計すべきである。&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/2KZ-%E3%81%B6%E3%82%93%E3%81%8B%E7%A4%BE%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9-%E9%95%B7%E7%94%B0%E4%BD%B3%E5%A5%88-ebook/dp/B0105ZQSEQ?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B0105ZQSEQ&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/5145gj6sIOL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/2KZ-%E3%81%B6%E3%82%93%E3%81%8B%E7%A4%BE%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9-%E9%95%B7%E7%94%B0%E4%BD%B3%E5%A5%88-ebook/dp/B0105ZQSEQ?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B0105ZQSEQ&#34;&gt;2KZ (ぶんか社コミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;長田佳奈&lt;/dd&gt;
    &lt;dd&gt;ぶんか社 (Release 2015-06-22)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B0105ZQSEQ&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;名作。私も座敷わらしになりたい（笑） 連載はちゃんと完結したのに単行本は最後まで収録されなかったのが悔やまれる。2巻を出すか長田佳奈さんの他の作品に入れてほしい。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-05-03&#34;&gt;2019-05-03&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>Go モジュールの依存関係を可視化するツールを作った</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/05/ggm/" />
		<id>tag:text.Baldanders.info,2019-05-02:/release/2019/05/ggm/</id>
		<published>2019-05-02T09:33:20+00:00</published>
		<updated>2019-05-02T09:34:02+00:00</updated>
		<summary>main.go いっこだけの簡単なお仕事（笑）</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に &lt;a href=&#34;https://www.graphviz.org/&#34; title=&#34;Graphviz - Graph Visualization Software&#34;&gt;graphviz&lt;/a&gt; を&lt;a href=&#34;https://text.baldanders.info/remark/2019/03/using-ubuntu/#gvz&#34; title=&#34;Ubuntu で遊ぶ&#34;&gt;インストールした&lt;/a&gt;ので「何か動作確認できるものはないかなぁ」と思い &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; モジュールの依存関係を可視化するツールを作ってみた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/ggm&#34;&gt;spiegel-im-spiegel/ggm: Graph of Go Modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;main.go&lt;/code&gt; いっこだけの簡単なお仕事（笑）&lt;/p&gt;

&lt;p&gt;ダウンロードとインストールは以下の通りでよい（モジュール・モードがオンの場合）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go get github.com/spiegel-im-spiegel/ggm@latest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで作成される &lt;code&gt;ggm&lt;/code&gt; コマンドへ &lt;code&gt;go mod graph&lt;/code&gt; の結果を流し込む。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go mod graph | ggm
digraph gomod {
	N1-&amp;gt;N2;
	N1 [ label=&amp;#34;github.com/spiegel-im-spiegel/ggm&amp;#34; ];
	N2 [ label=&amp;#34;github.com/awalterschulze/gographviz\nv0.0.0-20190221210632-1e9ccb565bca&amp;#34; ];

}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを更に &lt;code&gt;dot&lt;/code&gt; コマンドに流し込んで画像ファイルを出力する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go mod graph | ggm | dot -Tpng -o ggm.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;結果は以下の通り。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;ggm.png&#34;&gt;&lt;img src=&#34;./ggm.png&#34; srcset=&#34;./ggm.png 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;ggm.png&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;ggm.png&#34;&gt;ggm.png&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://graphviz.gitlab.io/_pages/doc/info/lang.html&#34; title=&#34;The DOT Language&#34;&gt;DOT 言語&lt;/a&gt;への変換は簡単なので直接書いてもよかったが，今回は &lt;a href=&#34;https://github.com/awalterschulze/gographviz&#34; title=&#34;awalterschulze/gographviz: Parses the Graphviz DOT language in golang&#34;&gt;awalterschulze/gographviz&lt;/a&gt; パッケージを使ってみた。
これ，色々と応用できるかもねぇ。&lt;/p&gt;

&lt;p&gt;ちなみに &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; のソースコードから UML 図（&lt;a href=&#34;http://plantuml.com/ja/&#34; title=&#34;Open-source tool that uses simple textual descriptions to draw beautiful UML diagrams.&#34;&gt;PlantUML&lt;/a&gt;）を生成するツールは以下の方が公開しておられる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kazukousen/gouml&#34;&gt;kazukousen/gouml: Automatically generate PlantUML from Go Code.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://i101330.hatenablog.com/entry/2019/04/14/205522&#34;&gt;GoのコードからPlantUMLコードを生成する静的解析ツールを作っている - 日記マン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;感謝！&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/rubytomato@github/items/51779135bc4b77c8c20d&#34;&gt;Graphvizとdot言語でグラフを描く方法のまとめ - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/golang/go-mod-graph/&#34;&gt;“go mod graph” を視覚化する&lt;/a&gt; : 今回のツールの元ネタ。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>ビンボー人は TODO をやってはいけない</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/05/no-todo-no-life/" />
		<id>tag:text.Baldanders.info,2019-05-02:/remark/2019/05/no-todo-no-life/</id>
		<published>2019-05-02T06:07:38+00:00</published>
		<updated>2019-05-02T06:07:54+00:00</updated>
		<summary>富裕層は経済力でリスクを回避し経済力で「時間」を買う。ビンボー人はそれ以外の方法でリスクを回避し時間を作り出すしかない。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;タイトルは釣りです，もちろん。&lt;/p&gt;

&lt;p&gt;富裕層は経済力でリスクを回避し経済力で「時間」を買う。
ビンボー人はそれ以外の方法でリスクを回避し時間を作り出すしかない。&lt;/p&gt;

&lt;p&gt;昨年末の&lt;a href=&#34;https://text.baldanders.info/remark/2018/12/move-with-trello/&#34; title=&#34;Trello で引っ越し&#34;&gt;引っ越しを Trollo で管理&lt;/a&gt;してみて痛感したが， TODO 管理の目的は「TODO をなくす」ことである。&lt;/p&gt;

&lt;p&gt;TODO 管理を行うにあたって最初にやることは TODO を列挙しトリアージしていくことだが，大雑把に以下の3つに分類できるだろう。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;必ずやらなければならないこと&lt;/li&gt;
&lt;li&gt;いつかやらなければならないが優先順位の低いこと&lt;/li&gt;
&lt;li&gt;やりたいこと&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これを縦軸として，横軸に時間（有効期限）を加えたものが TODO 全体の分布になる（縦横の向きはどっちでもいいけど）。&lt;/p&gt;

&lt;p&gt;で，この中に「毎日必ずやらなければならないこと」が存在する筈である。
例えば日常の家事など。
そういったものに時間を割り当てていくと「毎日必ずやらなければならないこと」に殆ど「時間」が奪われてしまうか，場合にとっては「時間」が足りないことに気がつくだろう。
いわゆる「日常に忙殺される」ってやつで「やりたいこと」ができる未来など何処にも見えないのである。&lt;/p&gt;

&lt;p&gt;これを改善しないまま TODO 管理を続けていくと，それがどんなに優れたワークフローであっても，必ず破綻する。
しかし改善するには「必ずやらなければならないこと」を減らすしかないのだ。&lt;/p&gt;

&lt;p&gt;最初に述べたように，富裕層は「毎日必ずやらなければならないこと」を減らすために経済力を使う。
たとえば，家事はヘルパーさんを雇う，仕事上の雑事も秘書を雇う，移動に時間がかかるなら自家用飛行機を買う，といった感じに。&lt;/p&gt;

&lt;p&gt;じゃあ経済力が使えないビンボー人はどうするか。
「毎日必ずやらなければならないこと」を複数人で分け合うか，それもできないならオミットするしかない！&lt;/p&gt;

&lt;p&gt;ポイントは TODO を遂行するために自身やその時間を売り渡すのではなく TODO のほうを削り落とすことである。
ほんでもって，これこそが「断・捨・離」の本質だと私は思う。
「本棚にあふれる本を捨ててスッキリ」なんてのはただの気分の問題であり，何の解決にもなっていないのだ。&lt;/p&gt;

&lt;p&gt;「持たざる人」が唯一所有できるのが自分自身とその時間であるなら，それを搾取する存在（TODO）を近づけてはいけない。&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%A2%E3%83%A2-%E5%B2%A9%E6%B3%A2%E5%B0%91%E5%B9%B4%E6%96%87%E5%BA%AB-%E3%83%9F%E3%83%92%E3%83%A3%E3%82%A8%E3%83%AB%E3%83%BB%E3%82%A8%E3%83%B3%E3%83%87-ebook/dp/B073PPWX7L?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B073PPWX7L&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51y5V0dPX1L._SL160_.jpg&#34; width=&#34;112&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%A2%E3%83%A2-%E5%B2%A9%E6%B3%A2%E5%B0%91%E5%B9%B4%E6%96%87%E5%BA%AB-%E3%83%9F%E3%83%92%E3%83%A3%E3%82%A8%E3%83%AB%E3%83%BB%E3%82%A8%E3%83%B3%E3%83%87-ebook/dp/B073PPWX7L?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B073PPWX7L&#34;&gt;モモ (岩波少年文庫)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;ミヒャエル・エンデ, 大島 かおり&lt;/dd&gt;
    &lt;dd&gt;岩波書店 2005-06-16 (Release 2017-07-20)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B073PPWX7L&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;そういえばこの作品を紹介してくれたのは同じ学科の先輩だった。それからハマってミヒャエル・エンデの作品を買いまくったんだよなぁ。あの頃は若かった。まぁ当時の本は殆ど処分したけど。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-05-02&#34;&gt;2019-05-02&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>gpgpdump v0.5.1 をリリースした（v0.5.2 もリリースした）</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2019/05/gpgpdump-v0_5_1-is-released/" />
		<id>tag:text.Baldanders.info,2019-05-01:/release/2019/05/gpgpdump-v0_5_1-is-released/</id>
		<published>2019-05-01T04:37:53+00:00</published>
		<updated>2019-05-01T08:39:43+00:00</updated>
		<summary>リテラルパケットのファイル名に含まれる改行コードなどの制御コードを符号点表示に展開するようにした。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; パケットの内容を視覚化する &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; の v0.5.1 をリリースした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump/releases/tag/v0.5.1&#34;&gt;Release v0.5.1 · spiegel-im-spiegel/gpgpdump · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はバグ修正（？）版。&lt;/p&gt;

&lt;p&gt;いや &lt;a href=&#34;https://www.ietf.org/mailman/listinfo/openpgp&#34;&gt;OpenPGP のメーリングリスト&lt;/a&gt;で以下の記事が流れてきたのだが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mailarchive.ietf.org/arch/msg/openpgp/_JZSrjvFaoPMJoV-z8Lz5hYLtBM&#34;&gt;Spoofing OpenPGP and S/MIME Signatures in Emails&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の&lt;a href=&#34;https://text.baldanders.info/release/2018/06/gnupg-2_2_8-and-libgcrypt-1_8_3-are-released/&#34; title=&#34;GnuPG 2.2.8 および Libgcrypt 1.8.3 がリリース（セキュリティ・アップデート）&#34;&gt;脆弱性の話なんて昨年のこと&lt;/a&gt;だし他の問題にしたって MUA の実装上の不具合ではあろうけど脆弱性とは言い難いし「なんだかなぁ」という感じで眺めていたのだが，「リテラルパケット（tag11）については &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; も対処しておいたほうがいいかな」と思い立ち修正してみた。&lt;/p&gt;

&lt;p&gt;具体的にはリテラルパケットのファイル名に含まれる改行コードなどの制御コードを &lt;code&gt;(U+000A)&lt;/code&gt; のように符号点表示に展開するようにした。
制御コードの判定には &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;標準の &lt;a href=&#34;https://golang.org/pkg/unicode/&#34; title=&#34;unicode - The Go Programming Language&#34;&gt;&lt;code&gt;unicode&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.IsControl()&lt;/code&gt; 関数を使っている（手抜き実装&lt;code&gt;w&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;他にも UTF-8 以外の文字エンコーディングの場合は &lt;code&gt;&amp;quot;invalid text string&amp;quot;&lt;/code&gt; と表記するようにした。
まぁ Shift-JIS とか EUC とか軒並み引っかかっちゃうんだけど，もう気にしないことにした（今までだって文字化けしてまともに表示できなかった筈）。&lt;/p&gt;

&lt;p&gt;それにしても &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; は快適だね。
今まで Windows で作業してたのが馬鹿みたいだよ。
Microsoft が今後 PWA (Progressive Web Apps) へのシフトを進めていくと Windows はどんどん「&lt;ruby&gt;&lt;rb&gt;コントローラ&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Progammable Controller&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」になっていくだろうし，そうなると「&lt;ruby&gt;&lt;rb&gt;パソコン&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;Personal Computer&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;」と言えるのは macOS や &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; のような UNIX 系のデスクトップ OS だけになるかもしれないねぇ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:subs1&#34;&gt;&lt;a href=&#34;#fn:subs1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;【追記】 &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump&#34; title=&#34;spiegel-im-spiegel/gpgpdump: OpenPGP packet visualizer&#34;&gt;gpgpdump&lt;/a&gt; v0.5.2 をリリースした&lt;/h2&gt;

&lt;p&gt;v0.5.1 をリリースしたばっかだが v0.5.2 を出した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gpgpdump/releases/tag/v0.5.2&#34;&gt;Release v0.5.2 · spiegel-im-spiegel/gpgpdump · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いやぁ，よく考えたらリテラルのテキストを扱うのはリテラルパケットだけじゃなかった。
ちうわけでコード内を浚って生データをそのまま string にキャストして出力してる部分を修正した。
アホだなぁ，私。&lt;/p&gt;

&lt;p&gt;これで大丈夫なはず。&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%9A%97%E5%8F%B7%E6%8A%80%E8%A1%93%E5%85%A5%E9%96%80-%E7%AC%AC3%E7%89%88-%E7%A7%98%E5%AF%86%E3%81%AE%E5%9B%BD%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%B9-%E7%B5%90%E5%9F%8E-%E6%B5%A9-ebook/dp/B015643CPE?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=B015643CPE&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;eBooks Kindle版&lt;/dd&gt;
    &lt;dd&gt;ASIN: B015643CPE&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9EGo-ADDISON-WESLEY-PROFESSIONAL-COMPUTING-Donovan/dp/4621300253?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4621300253&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan, Brian W. Kernighan&lt;/dd&gt;
    &lt;dd&gt;柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;Book 単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4621300253, EAN: 9784621300251&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-10-20&#34;&gt;2018-10-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:subs1&#34;&gt;と考えると Windows のサブシステムに Linux を入れたのは本当にお馬鹿な選択だったと言わざるを得ない。包含関係が逆だよ。 Linux 環境下で Windows がサブシステムとして動作できるようにしないと。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:subs1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>BOINC による学術分散コンピューティング・プロジェクトでの活動を再開した</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/academic-distributed-computing-projects-by-boinc/" />
		<id>tag:text.Baldanders.info,2019-04-30:/remark/2019/04/academic-distributed-computing-projects-by-boinc/</id>
		<published>2019-04-30T11:13:42+00:00</published>
		<updated>2019-04-30T11:14:08+00:00</updated>
		<summary>「計算機・ネットワークは有益な目的に使おう」</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;OS 移行の準備のためにこの一ヶ月ほど &lt;a href=&#34;https://boinc.berkeley.edu/&#34;&gt;BOINC (Berkeley Open Infrastructure for Network Computing)&lt;/a&gt; での活動を中断していたのだが，換装した &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; も安定的に稼働しているようだし，再開することにした。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://www.flickr.com/photos/spiegel/33863325058/&#34;&gt;&lt;img src=&#34;./boinc-manager.jpg&#34; srcset=&#34;./boinc-manager.jpg 500w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;OS 移行のため中断していたが BOINC による学術分散コンピューティング・プロジェクトの活動を再開した&#34;&gt;&lt;/a&gt;
&lt;figcaption&gt;&lt;a href=&#34;https://www.flickr.com/photos/spiegel/33863325058/&#34;&gt;OS 移行のため中断していたが BOINC による学術分散コンピューティング・プロジェクトの活動を再開した&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Linux 版の BOINC クライアントのインストールは&lt;a href=&#34;https://boinc.berkeley.edu/wiki/Installing_BOINC&#34; title=&#34;Installing BOINC - BOINC]&#34;&gt;パッケージ管理ツールを使うことを推奨&lt;/a&gt;しているようで &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; でも APT (Advanced Package Tool) を使うのがいいようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ apt show boinc-client
Package: boinc-client
Version: 7.14.2+dfsg-3
Priority: optional
Section: universe/net
Source: boinc
Origin: Ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というわけで早速インストール。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install boinc-client boinc-manager
パッケージリストを読み込んでいます... 完了
依存関係ツリーを作成しています                
状態情報を読み取っています... 完了
以下の追加パッケージがインストールされます:
  libboinc7 libwxbase3.0-0v5 libwxgtk-webview3.0-gtk3-0v5 libwxgtk3.0-gtk3-0v5
提案パッケージ:
  boinc-client-opencl boinc-client-nvidia-cuda libgl1-mesa-glx
以下のパッケージが新たにインストールされます:
  boinc-client boinc-manager libboinc7 libwxbase3.0-0v5 libwxgtk-webview3.0-gtk3-0v5 libwxgtk3.0-gtk3-0v5
アップグレード: 0 個、新規インストール: 6 個、削除: 0 個、保留: 0 個。
7,421 kB のアーカイブを取得する必要があります。
この操作後に追加で 29.5 MB のディスク容量が消費されます。&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;まずは計算リソースの割り当てを少なめにして様子を見る予定だ。&lt;/p&gt;

&lt;p&gt;私としては &lt;a href=&#34;https://setiathome.berkeley.edu/&#34;&gt;SETI@home&lt;/a&gt; を通じて学んだ&lt;/p&gt;

&lt;p&gt;「&lt;a href=&#34;https://baldanders.info/spiegel/log2/000581.shtml&#34;&gt;&lt;strong&gt;計算機・ネットワークは有益な目的に使おう&lt;/strong&gt;&lt;/a&gt;」&lt;/p&gt;

&lt;p&gt;という教えを胸に刻みつつ，今後も活動を継続していく所存である。&lt;/p&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/SETI-home%E3%83%95%E3%82%A1%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E2%80%95%E3%81%8A%E3%81%86%E3%81%A1%E3%81%AE%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A7%E5%AE%87%E5%AE%99%E4%BA%BA%E6%8E%A2%E3%81%97-%E9%87%8E%E5%B0%BB-%E6%8A%B1%E4%BB%8B/dp/4898140866?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4898140866&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51A74XV7MDL._SL160_.jpg&#34; width=&#34;108&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/SETI-home%E3%83%95%E3%82%A1%E3%83%B3%E3%83%96%E3%83%83%E3%82%AF%E2%80%95%E3%81%8A%E3%81%86%E3%81%A1%E3%81%AE%E3%83%91%E3%82%BD%E3%82%B3%E3%83%B3%E3%81%A7%E5%AE%87%E5%AE%99%E4%BA%BA%E6%8E%A2%E3%81%97-%E9%87%8E%E5%B0%BB-%E6%8A%B1%E4%BB%8B/dp/4898140866?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4898140866&#34;&gt;SETI@homeファンブック―おうちのパソコンで宇宙人探し&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;野尻 抱介&lt;/dd&gt;
    &lt;dd&gt;ローカス 2000-01&lt;/dd&gt;
    &lt;dd&gt;Book 単行本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4898140866, EAN: 9784898140864&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;内容は古いけど当時の「熱」を伝えた名著だと思うけどなぁ。著者の方が自己出版で Kindle で出してくれたらいいのに。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2019-03-28&#34;&gt;2019-03-28&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; 0.2.1)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry><entry>
		<title>TeX Live を Ubuntu に（APT を使わずに）導入する</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2019/04/install-texlive-in-ubuntu/" />
		<id>tag:text.Baldanders.info,2019-04-30:/remark/2019/04/install-texlive-in-ubuntu/</id>
		<published>2019-04-30T08:49:27+00:00</published>
		<updated>2019-04-30T09:09:17+00:00</updated>
		<summary>Windows と異なり，設定用の各コマンドは管理者権限（sudo）で起動する点に気をつける必要がある。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/spiegel/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; 環境に &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; を導入するには APT (Advanced Package Tool) を使う方法と &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; が提供する &lt;code&gt;install-tl&lt;/code&gt; を使う方法がある。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;前者の場合は，他のパッケージと同様に統一的な管理ができますが，ディストリビューションによっては提供されているパッケージのバージョンが古いことがあります．後者の場合は，パッケージ管理システムによる管理からは外れてしまいますが，tlmgr を使って最新の状態にアップデートし続けることが可能です．&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://texwiki.texjp.org/?Linux&#34;&gt;Linux - TeX Wiki&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;なかなか悩ましい選択だが，今回は &lt;code&gt;install-tl&lt;/code&gt; を使って導入と運用をしてみよう。
なお，対象は &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2018 で（2019 はまだリリースされていない）。&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2018 のインストール&lt;/h2&gt;

&lt;p&gt;今回は初めてのインストールなので関係ないが，以前の環境があれば削除しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ rm -rf /usr/local/texlive/2018
$ rm -rf ~/.texlive2018&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ダウンロードページから &lt;code&gt;install-tl-unx.tar.gz&lt;/code&gt; をダウンロードし中身を展開する。
その後 &lt;code&gt;install-tl&lt;/code&gt; を管理者権限で起動する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ tar xvf install-tl-unx.tar.gz

$ ls install-tl*
install-tl-unx.tar.gz

install-tl-20190227:
LICENSE.CTAN  LICENSE.TL  install-tl  release-texlive.txt  texmf-dist  tlpkg

$ cd install-tl-20190227

$ sudo ./install-tl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ミラーサイトのリポジトリを使うなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo ./install-tl --repository http://mirror.ctan.org/systems/texlive/tlnet/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とするらしい（後で気がついた）。&lt;/p&gt;

&lt;p&gt;起動直後の画面はこんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;======================&amp;gt; TeX Live installation procedure &amp;lt;=====================

======&amp;gt;   Letters/digits in &amp;lt;angle brackets&amp;gt; indicate   &amp;lt;=======
======&amp;gt;   menu items for actions or customizations      &amp;lt;=======

 Detected platform: GNU/Linux on x86_64
 
 &amp;lt;B&amp;gt; set binary platforms: 1 out of 17

 &amp;lt;S&amp;gt; set installation scheme: scheme-full

 &amp;lt;C&amp;gt; set installation collections:
     40 collections out of 41, disk space required: 5806 MB

 &amp;lt;D&amp;gt; set directories:
   TEXDIR (the main TeX directory):
     !! default location: /usr/local/texlive/2018
     !! is not writable or not allowed, please select a different one!
   TEXMFLOCAL (directory for site-wide local files):
     /usr/local/texlive/texmf-local
   TEXMFSYSVAR (directory for variable and automatically generated data):
     /usr/local/texlive/2018/texmf-var
   TEXMFSYSCONFIG (directory for local config):
     /usr/local/texlive/2018/texmf-config
   TEXMFVAR (personal directory for variable and automatically generated data):
     ~/.texlive2018/texmf-var
   TEXMFCONFIG (personal directory for local config):
     ~/.texlive2018/texmf-config
   TEXMFHOME (directory for user-specific files):
     ~/texmf

 &amp;lt;O&amp;gt; options:
   [ ] use letter size instead of A4 by default
   [X] allow execution of restricted list of programs via \write18
   [X] create all format files
   [X] install macro/font doc tree
   [X] install macro/font source tree
   [ ] create symlinks to standard directories

 &amp;lt;V&amp;gt; set up for portable installation

Actions:
 &amp;lt;I&amp;gt; start installation to hard disk
 &amp;lt;P&amp;gt; save installation profile to &amp;#39;texlive.profile&amp;#39; and exit
 &amp;lt;H&amp;gt; help
 &amp;lt;Q&amp;gt; quit

Enter command: &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;オプション等を見て問題なければ &lt;code&gt;I&lt;/code&gt; を入力してインストールを開始する。
おそらく既定のままで大丈夫。&lt;/p&gt;

&lt;p&gt;さてここからは長いのでしばらく放置で大丈夫だろう。
今回は（&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/install-tex-live-2017-for-windows/&#34; title=&#34;そうだ， TeX Live 2017 をインストールしよう！&#34;&gt;前回の経験&lt;/a&gt;を活かし）寝る直前にインストーラを仕掛けた。
私はやればできる子なのだ（自画自賛）。&lt;/p&gt;

&lt;p&gt;インストールが無事に完了すれば最後に以下のメッセージが表示される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Welcome to TeX Live!


See /usr/local/texlive/2018/index.html for links to documentation.
The TeX Live web site (https://tug.org/texlive/) contains any updates and
corrections. TeX Live is a joint project of the TeX user groups around the
world; please consider supporting it by joining the group best for you. The
list of groups is available on the web at https://tug.org/usergroups.html.


Add /usr/local/texlive/2018/texmf-dist/doc/man to MANPATH.
Add /usr/local/texlive/2018/texmf-dist/doc/info to INFOPATH.
Most importantly, add /usr/local/texlive/2018/bin/x86_64-linux
to your PATH for current and future sessions.
Logfile: /usr/local/texlive/2018/install-tl.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;toc_1&#34;&gt;パス設定&lt;/h2&gt;

&lt;p&gt;パス設定については手動で行ってもいいのだが &lt;code&gt;tlmgr&lt;/code&gt; コマンドを使うほうが簡単である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo /usr/local/texlive/2018/bin/x86_64-linux/tlmgr path add&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;具体的には &lt;code&gt;/usr/local/texlive/2018/&lt;/code&gt; 以下の各種ファイルに対して &lt;code&gt;/usr/local/bin/&lt;/code&gt; 等へシンボリック・リンクを張っているらしい。
逆にリンクを削除する場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr path remove&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とすれば安全に処理できる。&lt;/p&gt;

&lt;div class=&#34;box&#34;&gt;&lt;h3&gt;環境変数の指定&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; は1年毎にアップグレードされるし，その度にリンクを切った張ったは微妙に嫌だったので， &lt;code&gt;/etc/profile.d/&lt;/code&gt; ディレクトリに以下の内容を書いたファイル &lt;code&gt;texlive-paths.sh&lt;/code&gt; を置いてみた（ファイル名は適当）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# shellcheck shell=sh&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Expand $PATH to include the directory where TeX Live applications go.&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/local/texlive/2018&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin/x86_64-linux&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; -a -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;##*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MANPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MANPATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/texmf-dist/doc/man
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;INFOPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;INFOPATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/texmf-dist/doc/info
    &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;:&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;texlive_bin_path&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ログイン時にこのファイルが実行され環境変数がセットされる。
この方法の欠点は管理者権限での実行時にはパスが通らないため&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr version
sudo: tlmgr: コマンドが見つかりません&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と言われてしまう点だろう。
普段使いなら問題ないんだけどね。
結局，シンボリック・リンクを張ったほうがいいみたい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; を削除する際は &lt;code&gt;tlmgr path remove&lt;/code&gt; でリンクを削除するのを忘れずに。&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; をアップデートしようとしたが...&lt;/h2&gt;

&lt;p&gt;まずは参照するリポジトリを指定をしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet
tlmgr: setting default package repository to http://mirror.ctan.org/systems/texlive/tlnet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このあと &lt;code&gt;tlmgr&lt;/code&gt; でアップデートを行おうとしたが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo tlmgr update --self --all
TeX Live 2018 is frozen forever and will no
longer be updated.  This happens in preparation for a new release.

If you&amp;#39;re interested in helping to pretest the new release (when
pretests are available), please read https://tug.org/texlive/pretest.html.
Otherwise, just wait, and the new release will be ready in due time.
tlmgr: package repository http://ctan.math.washington.edu/tex-archive/systems/texlive/tlnet (verified)
tlmgr: saving backups to /usr/local/texlive/2018/tlpkg/backups&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と言われてしまった。
そうか。
夏には 2019 が出るから現行版の更新は既に凍結されているのか。
迂闊だった &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;各種設定変更&lt;/h2&gt;

&lt;p&gt;Windows と異なり，設定用の各コマンドは管理者権限（&lt;code&gt;sudo&lt;/code&gt;）で起動する点に気をつける必要がある。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;自動実行可能な外部コマンドの指定&lt;/h3&gt;

&lt;p&gt;まずは &lt;code&gt;shell_escape_commands&lt;/code&gt; の値を変更する。
インストール直後は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,extractbb,gregorio,kpsewhich,makeindex,repstopdf,texosquery-jre8,&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となっているので &lt;code&gt;/usr/ocal/texlive/texmf-local/web2c/texmf.cnf&lt;/code&gt; ファイルを作成し以下を記述する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;shell_escape_commands = \
bibtex,bibtex8,pbibtex,jbibtex,\
extractbb,\
gregorio,\
kpsewhich,\
makeindex,mendex,\
repstopdf,epspdf,\
texosquery-jre8,\&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで &lt;code&gt;shell_escape_commands&lt;/code&gt; の値が上書きされて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kpsewhich -var-value=shell_escape_commands
bibtex,bibtex8,pbibtex,jbibtex,extractbb,gregorio,kpsewhich,makeindex,mendex,repstopdf,epspdf,texosquery-jre8,&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となる。&lt;/p&gt;

&lt;p&gt;設定を変更したら &lt;code&gt;mktexlsr&lt;/code&gt; で状態を更新しておくこと。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo mktexlsr
mktexlsr: Updating /usr/local/texlive/2018/texmf-config/ls-R... 
mktexlsr: Updating /usr/local/texlive/2018/texmf-dist/ls-R... 
mktexlsr: Updating /usr/local/texlive/2018/texmf-var/ls-R... 
mktexlsr: Updating /usr/local/texlive/texmf-local/ls-R... 
mktexlsr: Done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;toc_5&#34;&gt;日本語フォントの埋め込み設定&lt;/h3&gt;

&lt;p&gt;日本語フォントの埋め込み設定はどうなってるんだろうと思ったが&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kanji-config-updmap status
CURRENT family for ja: ipaex
Standby family : ipa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ありゃりゃ， IPA フォントしかないのか。
そりゃそうか。
Linux だもんな。&lt;/p&gt;

&lt;p&gt;ちなみに日本語フォントの埋め込みを行わない（非推奨）場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ kanji-config-updmap --user nofont&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする。
変更結果は &lt;code&gt;~/.texlive2018/&lt;/code&gt; ディレクトリに反映される。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--user&lt;/code&gt; ではなく &lt;code&gt;--sys&lt;/code&gt; オプションをつけてシステム全体の設定を変更する場合は管理者権限で起動すること&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:kanji1&#34;&gt;&lt;a href=&#34;#fn:kanji1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;そういえば &lt;a href=&#34;https://ipafont.ipa.go.jp/&#34; title=&#34;IPAexフォント/IPAフォント | IPAフォントのダウンロードサイトです&#34;&gt;IPAex&lt;/a&gt; フォントの Ver.004.01 がリリースされている。
あの&lt;a href=&#34;https://text.baldanders.info/remark/2017/12/character-of-the-new-era-name/&#34; title=&#34;新元号「文字」という技術的負債&#34;&gt;負の遺産&lt;/a&gt;のひとつ「元号の合成文字」である「令和（U+32FF “SQUARE ERA NAME REIWA”）」が追加されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ipafont.ipa.go.jp/node21&#34;&gt;リリースノート(Release Note) | IPAexフォント/IPAフォント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1182604.html&#34;&gt;情報処理推進機構、新元号“令和”の合字に対応した「IPAexフォント」v004.01を公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず &lt;code&gt;/usr/local/texlive/2018/texmf-dist/fonts/truetype/public/ipaex&lt;/code&gt; ディレクトリにあるフォントファイルを差し替えればいいかな。
たぶん 2019 かその次の 2020 あたりで正式にアップデートされるだろう。&lt;/p&gt;

&lt;p&gt;その他フォントの設定については以下の拙文を参照のこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/using-source-han-fonts-by-japanese-tex/&#34;&gt;TeX 日本語環境で「源ノ」フォントを使ってみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/math-fonts/&#34;&gt;数式用フォントで遊ぶ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;試しに何かタイプセットしてみる&lt;/h2&gt;

&lt;p&gt;ちうわけでいつものあの文書ですね。
20世紀な内容でゴメン。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/charset_document&#34;&gt;spiegel-im-spiegel/charset_document: 「文字コードとその実装」 upLaTeX ドキュメント&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ latexmk charset.tex
...
Latexmk: All targets (charset.pdf charset.dvi) are up-to-date
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;よし。
ちゃんと動いた。
Lunux 環境でも問題なさそうだな。
ついでに PDF/A への変換もやっておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ps2pdf14 -dPDFA -dPDFACompatibilityPolicy=1 -sProcessColorModel=DeviceCMYK charset.pdf charset-pdfa.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これもちゃんと動いた。
フォントも正しく埋め込まれているようだ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./font-property.png&#34;&gt;&lt;img src=&#34;./font-property.png&#34; srcset=&#34;./font-property.png 570w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;もうひとつ， $\mathrm{Lua\LaTeX}$ で以下のタイプセットも試してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/writing-code-with-lualatex/&#34;&gt;LuaLaTeX でコードを書いてみる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;結果はこんな感じ。&lt;/p&gt;

&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./output.png&#34;&gt;&lt;img src=&#34;./output.png&#34; srcset=&#34;./output.png 686w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tug.org/texlive/quickinstall.html&#34;&gt;Quick install - TeX Live - TeX Users Group&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://xartaky.hatenablog.jp/entry/2016-12-27-texlive-on-ubuntu&#34;&gt;Ubuntu 16.04 に TeX Live を入れる - 毎日もくもく&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/09/install-tex-live-2017-for-windows/&#34;&gt;そうだ， TeX Live 2017 (for Windows) をインストールしよう！&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/%E6%94%B9%E8%A8%82%E7%AC%AC7%E7%89%88-LaTeX2%CE%B5%E7%BE%8E%E6%96%87%E6%9B%B8%E4%BD%9C%E6%88%90%E5%85%A5%E9%96%80-%E5%A5%A5%E6%9D%91-%E6%99%B4%E5%BD%A6/dp/4774187054?SubscriptionId=AKIAJYVUJ3DMTLAECTHA&amp;tag=baldandersinf-22&amp;linkCode=xm2&amp;camp=2025&amp;creative=165953&amp;creativeASIN=4774187054&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦, 黒木 裕介&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;Book 大型本&lt;/dd&gt;
    &lt;dd&gt;ASIN: 4774187054, EAN: 9784774187051&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://github.com/spiegel-im-spiegel/amazon-item&#34; &gt;amazon-item&lt;/a&gt; v0.2.0)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:kanji1&#34;&gt;&lt;code&gt;kanji-config-updmap-sys&lt;/code&gt; コマンドでも同様。つか &lt;code&gt;kanji-config-updmap-sys&lt;/code&gt; コマンドは内部で &lt;code&gt;kanji-config-updmap --sys&lt;/code&gt; を起動しているだけなんだけど。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:kanji1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
</feed>
