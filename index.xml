<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="https://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="https://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2020-06-17:/</id>
	<updated>2020-06-17T07:35:14+00:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>https://text.baldanders.info/images/avatar.jpg</icon>
	<logo>https://text.baldanders.info/images/avatar.jpg</logo>

	<entry>
		<title>次期 Go 言語で導入される総称型について予習する（その2）</title>
		<category term="golang" label="golang" scheme="https://text.baldanders.info/golang/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/golang/generics-in-go-2-update/" />
		<id>tag:text.Baldanders.info,2020-06-17:/golang/generics-in-go-2-update/</id>
		<published>2020-06-17T07:33:04+00:00</published>
		<updated>2020-06-17T07:35:14+00:00</updated>
		<summary>総称型について仕様が変わったらしい。早ければ2021年8月のリリースでお披露目されるかもしれないとのこと。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;以前書いた&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/golang/generics-in-go-2/&#34;&gt;次期 Go 言語で導入される（かもしれない）総称型について予習する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;に関して，仕様が変わったらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/generics-next-step&#34;&gt;The Next Step for Generics - The Go Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-type-parameters.md&#34;&gt;Type Parameters - Draft Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そこで，これまでのおさらいと変更点について簡単に紹介する。&lt;/p&gt;
&lt;h2&gt;「総称型」のおさらい&lt;/h2&gt;
&lt;p&gt;次期 &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で導入される「総称型（generics）」について，これまで提案されていた仕様は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ordered&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ordered&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Max()&lt;/code&gt; 関数の &lt;code&gt;(type T ordered)&lt;/code&gt; の部分が「型パラメータ（type parameter）」で，これによって型 &lt;code&gt;T&lt;/code&gt; が総称型であることを示す。
また &lt;code&gt;ordered&lt;/code&gt; は「型コントラクト（type contract）」と呼ばれ，総称型に対する制約（constraint）として機能している。&lt;/p&gt;
&lt;h2&gt;制約の定義&lt;/h2&gt;
&lt;p&gt;新しい提案では，型コントラクトを捨て，制約の定義を以下のように変更する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ordered&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;	&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;		&lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uintptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;		&lt;span class=&#34;kt&#34;&gt;float32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;		&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ordered&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;y&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以前の型コントラクトとの違いは &lt;strong&gt;既存のキーワードがそのまま使える&lt;/strong&gt; ことである。
文法も &lt;code&gt;interface&lt;/code&gt; 型の宣言とほぼ同じだが &lt;code&gt;type int, int8, ...&lt;/code&gt; といった感じに型の列挙ができる点がこれまでと異なる。&lt;/p&gt;
&lt;p&gt;これにより，制約 &lt;code&gt;ordered&lt;/code&gt; を満たす型であれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;               &lt;span class=&#34;c1&#34;&gt;//Output: 3
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%#U\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;あ&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;い&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//Output: U+3044 &amp;#39;い&amp;#39;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;などと記述できる。&lt;/p&gt;
&lt;p&gt;なお，これまでの &lt;code&gt;interface&lt;/code&gt; 型も制約として使える。
たとえば，こんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SayError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;SayError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//Output: EOF
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更に &lt;code&gt;interface&lt;/code&gt; 型を入れ子にすることで複雑な制約条件を構成することもできる。&lt;/p&gt;
&lt;h2&gt;注入するか単態化するか&lt;/h2&gt;
&lt;p&gt;ところで先程の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SayError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は，わざわざ総称型を使わなくとも今までの書き方で&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;SayError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;としても見た目の結果は同じになる。&lt;/p&gt;
&lt;p&gt;しかし，今までの書き方が実行時に動的ディスパッチを行う「依存の注入（depencency injection）」であるのに対し，総称型を使った記述はコンパイル時に型ごとに別々の関数として展開される。
これを「単態化（monomorphization）」と呼ぶ。&lt;/p&gt;
&lt;p&gt;依存の注入と単態化ではリソース管理の戦略がまるで異なる。&lt;/p&gt;
&lt;p&gt;たとえば上述の &lt;code&gt;SayError()&lt;/code&gt; 関数を総称型で記述するのは，どう考えても効率が悪い。
&lt;code&gt;error&lt;/code&gt; に包摂される型は必要に応じていくらでも定義可能であり，それらの型ごとに単態化されるなどぞんぞがさばる。&lt;/p&gt;
&lt;p&gt;逆に &lt;code&gt;Max()&lt;/code&gt; 関数なんかは，基本型の振る舞いを &lt;code&gt;interface&lt;/code&gt; で括るのが難しいこともあり，コストの高い &lt;code&gt;float64&lt;/code&gt; 型の &lt;a href=&#34;https://pkg.go.dev/math&#34; title=&#34;math package · pkg.go.dev&#34;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Max()&lt;/code&gt; くらいしか標準では実装されてなかったりする。
こういったものを総称型で記述できるようになれば（OAOO 原則の観点から考えても）コード管理しやすくなるだろう。&lt;/p&gt;
&lt;p&gt;「&lt;a href=&#34;https://slide.baldanders.info/shimane-go-2020-01-23/&#34;&gt;Go プログラマは息をするように依存を注入する&lt;/a&gt;」。
他のプログラミング言語が総称型で書いているかなりの部分を依存の注入で簡単に纏めてしまえるのが &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;の強みであるが，使える道具は多いことに越したことはない。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 2 Playground&lt;/h2&gt;
&lt;p&gt;次期 &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;用に新しい Playground が公開されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://go2goplay.golang.org/&#34;&gt;&lt;code&gt;https://go2goplay.golang.org/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;総称型についてもここで色々と試せるようなので，遊びに行ってみてはいかがだろうか。&lt;/p&gt;
&lt;h2&gt;早ければ &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.17 でお披露目？&lt;/h2&gt;
&lt;p&gt;だいぶ仕様が固まってきた総称型であるが，早ければ2021年8月にリリース予定の &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.17 で&lt;a href=&#34;https://blog.golang.org/generics-next-step&#34; title=&#34;The Next Step for Generics - The Go Blog&#34;&gt;お披露目されるかもしれない&lt;/a&gt;とのこと。&lt;/p&gt;
&lt;p&gt;たのしみ！&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pixelstech.net/article/1559993656-Why-no-max-min-function-for-integer-in-GoLang&#34;&gt;Why no max/min function for integer in GoLang | Pixelstech.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/04/subtyping/&#34;&gt;それは Duck Typing ぢゃない（らしい）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>#golang Unicode パッケージの脆弱性</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/06/vulnerability-in-golang-unicode-package/" />
		<id>tag:text.Baldanders.info,2020-06-17:/release/2020/06/vulnerability-in-golang-unicode-package/</id>
		<published>2020-06-17T01:34:55+00:00</published>
		<updated>2020-06-17T01:35:26+00:00</updated>
		<summary>golang.org/x/text/encoding/unicode パッケージで脆弱性が見つかった模様。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/golang.org/x/text/encoding/unicode&#34; title=&#34;unicode package · pkg.go.dev&#34;&gt;&lt;code&gt;golang.org/x/text/encoding/unicode&lt;/code&gt;&lt;/a&gt; パッケージで脆弱性が見つかった模様。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;p&gt;Version v0.3.3 of &lt;a href=&#34;http://golang.org/x/text&#34;&gt;&lt;code&gt;golang.org/x/text&lt;/code&gt;&lt;/a&gt; fixes a vulnerability in the &lt;a href=&#34;http://golang.org/x/text/encoding/unicode&#34;&gt;&lt;code&gt;golang.org/x/text/encoding/unicode&lt;/code&gt;&lt;/a&gt; package which could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory.&lt;/p&gt;
&lt;p&gt;An attacker could provide a single byte to a &lt;a href=&#34;https://pkg.go.dev/golang.org/x/text/encoding/unicode?tab=doc#UTF16&#34;&gt;&lt;code&gt;UTF16&lt;/code&gt;&lt;/a&gt; decoder instantiated with &lt;code&gt;UseBOM&lt;/code&gt; or &lt;code&gt;ExpectBOM&lt;/code&gt; to trigger an infinite loop if the &lt;a href=&#34;https://pkg.go.dev/golang.org/x/text/encoding?tab=doc#Decoder.String&#34;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; function on the &lt;code&gt;Decoder&lt;/code&gt; is called, or the &lt;code&gt;Decoder&lt;/code&gt; is passed to &lt;a href=&#34;https://pkg.go.dev/golang.org/x/text/transform?tab=doc#String&#34;&gt;&lt;code&gt;golang.org/x/text/transform.String&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/bXVeAmGOqz0&#34;&gt;[security] Vulnerability in golang.org/x/text/encoding/unicode&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;というわけで，件のパッケージを使って UTF-16 符号化・復号化の操作を行っている場合は最新バージョンのパッケージに差し替えること。
とりあえず &lt;code&gt;go.mod&lt;/code&gt; ファイルを見て&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;require golang.org/x/text v0.3.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とか v0.3.3 未満になっている場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;require golang.org/x/text latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と最新版に書き換えてコンパイルし直せばいいだろう。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://nvd.nist.gov/vuln/detail/CVE-2020-14040&#34;&gt;CVE-2020-14040&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;未稿。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry><entry>
		<title>2020-06-13 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2020/06/13-bookmarks/" />
		<id>tag:text.Baldanders.info,2020-06-13:/bookmarks/2020/06/13-bookmarks/</id>
		<published>2020-06-13T02:18:08+00:00</published>
		<updated>2020-06-14T01:23:57+00:00</updated>
		<summary>「ISAS、公募型小型4号機にSolar-C（EUVST）を選定」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/atom/atom/releases/tag/v1.48.0&#34;&gt;Release 1.48.0 · atom/atom · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode/releases/tag/1.46.0&#34;&gt;Release 1.46.0 · microsoft/vscode · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/mozillav8firefox.html&#34;&gt;Mozilla、今後はV8の正規表現エンジンをFirefoxにそのまま取り込むと表明。そのための互換レイヤを開発 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35153985/&#34;&gt;プログラミング言語「Rust」、バージョン1.0のリリースから5年を経た今 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/googlemysqlpostgresqlcross-region_replica_for_cloud_sql.html&#34;&gt;Google、MySQL/PostgreSQLでクロスリージョンのレプリカを実現する「cross-region replica for Cloud SQL」発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://budougumi0617.github.io/2020/06/08/circleci_cimg_go_2020/&#34;&gt;[Go]次世代イメージcimg/goとcircleci/go Orbsを使った2020年版CircleCIの環境構築 - My External Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35154938/&#34;&gt;完全準同型暗号を使いやすく&amp;ndash;IBMがツールキット公開 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2020/06/10/030123&#34;&gt;国内外の工場に影響したホンダへのサイバー攻撃についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1257725.html&#34;&gt;「Firefox 79」からtarget=“_blank”なリンクの挙動が変更、より安全な仕様に - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/09/2020-06-08-ibm-ends-all-facial-recognition-work-as-ceo-calls-out-bias-and-inequality/&#34;&gt;IBMが顔認識技術から撤退、CEOは偏向と不平等の廃絶を訴える  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/09/2020-06-08-homeland-security-windows-10-wormable-bug/&#34;&gt;米国土安全保障省がSMBの脆弱性を突くWindows 10のワーム化可能なバグを警告  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.zdnet.com/article/35155054/&#34;&gt;「IBM Cloud」で障害、世界規模で影響&amp;ndash;復旧中 - ZDNet Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2020/06/q-web.html&#34;&gt;ブログ: Q&amp;amp;A: Web暗号のパイオニアが語る認証の未来&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2020/06/new-exploits-plunder-crypto-keys-and-more-from-intels-ultrasecure-sgx/&#34;&gt;Plundering of crypto keys from ultrasecure SGX sends Intel scrambling again | Ars Technica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/06/another_intel_s.html&#34;&gt;Another Intel Speculative Execution Vulnerability - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://japan.cnet.com/article/35155203/&#34;&gt;Zoom、人権団体のアカウントを一時停止&amp;ndash;天安門事件の会議開催で - CNET Japan&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/13/2020-06-11-zoom-admits-to-shutting-down-activist-accounts-at-the-request-of-the-chinese-government/&#34;&gt;Zoomが中国政府の要請で人権活動家のアカウントを一時停止したことを認める  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.f-secure.com/ja/reforming-the-uks-computer-misuse-act-has-economic-security-benefits-for-the-nation/&#34;&gt;英国に経済的、セキュリティ上の効果をもたらす、コンピュータ不正使用法の改正 - F-Secure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://monoist.atmarkit.co.jp/mn/articles/2006/12/news027.html&#34;&gt;米国NISTが定めるIoT機器製造者向けセキュリティ指針と医療機器の関係性 (1/3) - MONOist（モノイスト）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;天文関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.isas.jaxa.jp/topics/002369.html&#34;&gt;ISAS、公募型小型4号機にSolar-C（EUVST）を選定 | 宇宙科学研究所&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lawson.co.jp/company/news/detail/1400063_2504.html&#34;&gt;「スペースからあげクン」正式に“宇宙日本食認証”｜ローソン公式サイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/man-who-sold-raspberry-pi-devices-modded-to-receive-sky-for-free-avoids-prison-200610/&#34;&gt;Man Who Sold Raspberry Pi Devices Modded to Receive Sky For Free Avoids Prison * TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aozora.gr.jp/aozorablog/?p=4450&#34;&gt;aozorablog » 青空文庫’20/04月-’20/05月の月間アクセス増率分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kazu-yamamoto.hatenablog.jp/entry/2020/06/09/155236&#34;&gt;Implementing HTTP/3 in Haskell - あどけない話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1258224.html&#34;&gt;8月31日まで無料 ～カシオ、オンライン学習ツール“ClassPad.net”の日本語版を提供開始 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scienceportal.jst.go.jp/news/newsflash_review/newsflash/2020/06/20200610_01.html&#34;&gt;2020年6月10日ニュース「北太平洋で『豊かな海』を育む仕組み解明 中層の栄養分が地形の影響で表層へ」 | SciencePortal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/amazon_s3mongodb_atlas_data_lakemongodb.html&#34;&gt;Amazon S3のデータを直接検索できる「MongoDB Atlas Data Lake」正式リリース。データベースへの転送不要、MongoDBのクエリ言語を直接実行 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/mongodb_realmdbdb.html&#34;&gt;モバイルアプリ用プラットフォーム「MongoDB Realm」正式リリース。モバイルDB、リアルタイム同期、サーバレス、クラウドDBなどを統合 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sakura.ad.jp/information/announcements/2020/06/10/1968204052/&#34;&gt;さくらのレンタルサーバ　新機能「コンテンツブースト」提供開始のお知らせ | さくらインターネット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.golang.org/vscode-go&#34;&gt;The VS Code Go extension joins the Go project - The Go Blog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1258066.html&#34;&gt;プログラミング言語「Go」のVisual Studio Code拡張機能がMicrosoftからGoプロジェクトへ移管 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/cloudflarecloudflaretv24365.html&#34;&gt;Cloudflareが「Cloudflare.tv」を開始、24時間365日のオンラインテレビ局。新型コロナ時代のテクノロジーカンファレンスとして － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20200608/open-source-sustainability&#34;&gt;2020年においてもオープンソースの持続可能性、そしてビジネスモデルは一筋縄にはいかない - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamdas.hatenablog.com/entry/20200608/vr-dos&#34;&gt;バーチャルリアリティー環境のパソコンでDOSを動かす……ってなんじゃそりゃ！ - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/atmol/items/26cb52dfd8812663fede&#34;&gt;超便利。Markdownでグラフと数式の入った文書を簡単に書く（Atom + gnuplot/matplotlib）。 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>「特別定額給付金」申請のナニがダメだったのか（その2）</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/06/bottleneck2/" />
		<id>tag:text.Baldanders.info,2020-06-12:/remark/2020/06/bottleneck2/</id>
		<published>2020-06-12T03:14:23+00:00</published>
		<updated>2020-06-12T11:31:19+00:00</updated>
		<summary>個人番号カードを使わせるとか余計なことは考えず，最初からちゃっちゃと郵送したほうが最終的にスムーズにいったのではないかと邪推してしまう。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;一応「&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/bottleneck/&#34;&gt;「特別定額給付金」申請のナニがダメだったのか&lt;/a&gt;」の続きだが，今回は完全に愚痴なので読まなくてもいいです。&lt;/p&gt;
&lt;p&gt;いや，この記事を見て嘲笑わずにはいられなかったのよ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;立憲民主党の蓮舫副代表が11日、参議院予算委員会で給付金のITシステムを巡る質問をした際に、「サーバーは増やすんじゃなくて、時代はもうクラウドなんですよ！」と断言した。しかし、クラウドもサーバーにあることに変わりはなく、他党の議員やネット民から「IT系弱すぎる」「知ったかぶり」などと失笑を買う事態になっている&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;http://agora-web.jp/archives/2046561.html&#34;&gt;「クラウド蓮舫」国会質問でIT弱者ぶりが露見して失笑買う – アゴラ&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;まず絵面が完全に「ヤンキー集会」。
国会議員の方々，ホンマご苦労さまです（笑）&lt;/p&gt;
&lt;p&gt;あと「立憲民主党の蓮舫副代表」による「時代はもうクラウド」という発言。
そこだけ切り取ったら10年前の記事だと言われても疑わないね，私は（笑）&lt;/p&gt;
&lt;p&gt;そして「クラウドもサーバーにあることに変わりはなく」という的はずれな感想（？）&lt;/p&gt;
&lt;p&gt;与野党議員とメディアによる「三馬鹿トリオ」爆誕である！&lt;/p&gt;
&lt;p&gt;ネット・サービスに於いて「可用性（availability）」がセキュリティ要件として重視されるのは，それが毀損されることによって「名目上の経済損失」が発生するからだ。
そして，いわゆる「クラウド（cloud）」の特徴である scalability を上手く使えば可用性リスクを抑制することが可能，というのがゼロ年代に持て囃された話だ。&lt;/p&gt;
&lt;p&gt;そういう意味では（オンプレミスから）クラウドへの移行は，今からでも悪い選択ではない。
いまや&lt;a href=&#34;https://www.sakura.ne.jp/function/contentboost/&#34; title=&#34;コンテンツブースト - レンタルサーバーはさくらインターネット&#34;&gt;レンサバですら CDN は当たり前&lt;/a&gt;だしね。&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;&lt;rb&gt;駄菓子菓子&lt;/rb&gt;&lt;rp&gt; (&lt;/rp&gt;&lt;rt&gt;だがしかし&lt;/rt&gt;&lt;rp&gt;) &lt;/rp&gt;&lt;/ruby&gt;。&lt;/p&gt;
&lt;p&gt;今回の「特別定額給付金」のオンライン申請に限れば可用性リスクはさして重要ではない。
理由は以下の3つ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;営利ではなく行政サービスなので可用性毀損による「名目上の経済損失」は発生しない&lt;/li&gt;
&lt;li&gt;申請書の郵送が始まるまでの極短期サービス&lt;/li&gt;
&lt;li&gt;そもそも「個人番号カード」の所持率が低い（筈だった&lt;code&gt;w&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まぁ，金くれるんなら一刻も早くってのは当然の心理だけど。
それで緊急事態下の役所窓口が大混乱するとか，個人番号カード所持や口座情報登録の義務化とか，まさに「泥棒を捕らえてから縄を綯う」の典型例だよな（笑）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/05/bottleneck/&#34; title=&#34;「特別定額給付金」申請のナニがダメだったのか&#34;&gt;前回も書いた&lt;/a&gt;が，最大の障害（ボトルネック）は，サービスが落っこちたことではなく，申請後の受理作業が「人力」である点だろう。&lt;/p&gt;
&lt;p&gt;敢えて今回の件を総括するなら「サーバを増やす」でも「時代はクラウド」でも「個人番号カード所持や口座情報登録の義務化」でもなく「オンライン申請させないほうがよかった」だと思う。
個人番号カードを使わせるとか余計なことは考えず，最初からちゃっちゃと郵送したほうが最終的にスムーズにいったのではないかと邪推してしまう。&lt;/p&gt;
&lt;p&gt;もし個人番号やそれに紐づく住基データを使いたいのであれば，システム全体に渡って &lt;strong&gt;人力を介さず&lt;/strong&gt; 自動化するフレームワークを確立するところから始めるべきだろう。&lt;/p&gt;
&lt;p&gt;デジタル・データというのはそこにあるだけではダメで，データへのアクセス設計をセットにして初めて意味を持つ。
ダダ漏れが駄目なのは当たり前だが，闇雲に制限すればいいというものでもない。
個人情報保護法があろうとなかろうと，人力の力技なんか下の下である。
お金を使うところが間違っている。&lt;/p&gt;
&lt;p&gt;「公僕」とは言うけれど，お役人は奴隷じゃないのよ。
庶民もね。
今回のようなことを繰り返すのなら日本に「ブラック国家」の称号を与えよう（笑）&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B009LFBL4Y?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/412TwuSJT1L._SL160_.jpg&#34; width=&#34;114&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B009LFBL4Y?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;グーグル　ネット覇者の真実&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;スティーブン・レヴィ (著), 仲達志；池村千秋 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;CCCメディアハウス 2011-12-16 (Release 2012-08-31)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B009LFBL4Y (ASIN)&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;そういえばこれ Kindle で買い直したのに途中まで読んでそのまま積ん読だったよ。ゼロ年代の Google を中心とした話なのでちょっと古びた感はあるが歴史書としては今でも通用するだろう。書評は&lt;a href=&#34;https://www.yamdas.org/booklog/intheplex.html&#34; title=&#34;yomoyomoの読書記録 - スティーブン・レヴィ『グーグル　ネット覇者の真実　追われる立場から追う立場へ』（阪急コミュニケーションズ）&#34;&gt;こちら&lt;/a&gt;が参考になる。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-12-11&#34;&gt;2018-12-11&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- グーグル　ネット覇者の真実 --&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B00QAQEOSW?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51wDPAx18RL._SL160_.jpg&#34; width=&#34;102&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B00QAQEOSW?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;だがしかし（１） (少年サンデーコミックス)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;コトヤマ (著)&lt;/dd&gt;
    &lt;dd&gt;小学館 2014-09-18 (Release 2014-12-08)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B00QAQEOSW (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;永遠の夏休み（笑）&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2020-06-12&#34;&gt;2020-06-12&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- だがしかし --&gt;
</content>
	</entry><entry>
		<title>LuaLaTeX でも履歴書を書きたい！</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/06/resume-with-lualatex/" />
		<id>tag:text.Baldanders.info,2020-06-11:/remark/2020/06/resume-with-lualatex/</id>
		<published>2020-06-11T07:52:45+00:00</published>
		<updated>2020-06-11T07:53:01+00:00</updated>
		<summary>後方互換性が崩れるので pull request を投げていいか思案中。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2018/11/resume-in-latex/&#34; title=&#34;LaTeX で履歴書を書こう&#34;&gt;2018年の記事&lt;/a&gt;で&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tamacom.com/rireki-j.html&#34;&gt;履歴書スタイルファイル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shigio/rireki-style&#34;&gt;shigio/rireki-style: Style file for writing resume.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;を紹介した。&lt;/p&gt;
&lt;p&gt;その後いろいろ試してみて，サンプルの &lt;code&gt;rireki.tex&lt;/code&gt; の最初の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;jarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;rireki&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;の部分を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[b5j]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ltjsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[deluxe,nfssonly]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;rireki&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と書き換えれば一応 $\mathrm{Lua\LaTeX}$ でも通ることが分かったのだが，この状態では顔写真を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\顔&lt;/span&gt;写真&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;photo.jpg&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と指定しても上手く貼り付けられない。&lt;/p&gt;
&lt;p&gt;しょうがないので &lt;code&gt;rireki.sty&lt;/code&gt; を眺めていたら冒頭部分に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dvipdfmx]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;graphicx&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とか書かれていた。&lt;/p&gt;
&lt;p&gt;ドライバが &lt;code&gt;dvipdfmx&lt;/code&gt; 決め打ちか。
そりゃあ $\mathrm{Lua\LaTeX}$ で上手くいかんわな。&lt;/p&gt;
&lt;p&gt;そこで &lt;code&gt;rireki.sty&lt;/code&gt; の &lt;code&gt;graphicx&lt;/code&gt; パッケージの記述をコメントアウトして &lt;code&gt;rireki.tex&lt;/code&gt; を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[b5j]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ltjsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[deluxe,nfssonly]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[luatex]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;graphicx&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;rireki&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;としたら&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; 問題なく顔写真を貼り付けられた。
これでますます $\mathrm{p\LaTeX}$/$\mathrm{up\LaTeX}$ は「要らない子」になるね（笑）&lt;/p&gt;
&lt;p&gt;なお，今回改変した &lt;code&gt;rireki.sty&lt;/code&gt; を使って $\mathrm{p\LaTeX}$/$\mathrm{up\LaTeX}$ で処理する場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[uplatex,b5j]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;jsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[dvipdfmx]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;graphicx&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;rireki&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;などとすればOK&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;ちなみに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env perl&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# LaTeX commands&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$pdflualatex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;lualatex %O -synctex=1 %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$latex&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;uplatex %O -synctex=1 %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Device Driver&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$dvipdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#39;dvipdfmx %O -z9 -p jisb5 -V 7 -o %D %S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Typeset mode (generate a PDF)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$pdf_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 0: do not generate a pdf , 1: using $pdflatex , 2: using $ps2pdf , 3: using $dvipdf , 4: using $pdflualatex&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;という内容で &lt;code&gt;.latexmkrc&lt;/code&gt; ファイルを作成すれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$pdf_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で $\mathrm{p\LaTeX}$/$\mathrm{up\LaTeX}$ 用，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$pdf_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で $\mathrm{Lua\LaTeX}$ 用の設定になる。
あとは&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ latexmk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で &lt;code&gt;*.tex&lt;/code&gt; ファイルを探して勝手に全部処理してくれる。&lt;/p&gt;
&lt;p&gt;ところで，私が PDF 文書の紙出力に利用している&lt;a href=&#34;http://www.printing.ne.jp/&#34;&gt;ネットプリント&lt;/a&gt;が 2020-06-15 から値上げするらしいのだが。
今は求職活動で履歴書乱発中なんだよ。
とほほ &lt;code&gt;orz&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://doratex.hatenablog.jp/entry/20160610/1465560005&#34;&gt;pdfTeX による見開きPDFの結合・分割 - TeX Alchemist Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www2.japanriver.or.jp/search_kasen/search_help/refer_year.htm&#34;&gt;西暦・元号対照表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦 (著), 黒木 裕介 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;大型本&lt;/dd&gt;
    &lt;dd&gt;4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- [改訂第7版]LaTeX2ε美文書作成入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;ドライバ指定を省略して &lt;code&gt;\usepackage{graphicx}&lt;/code&gt; でも可。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;後方互換性が崩れるので &lt;a href=&#34;https://github.com/spiegel-im-spiegel/rireki-style&#34;&gt;pull request を投げ&lt;/a&gt;ていいか思案中。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>LuaLaTeX で PDF/A を構成する</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/06/pdfa-with-luatex/" />
		<id>tag:text.Baldanders.info,2020-06-09:/remark/2020/06/pdfa-with-luatex/</id>
		<published>2020-06-08T15:14:11+00:00</published>
		<updated>2020-06-11T03:14:39+00:00</updated>
		<summary>pdfx パッケージを使って PDF/A-2u を構成してみる。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;今回は $\mathrm{Lua\LaTeX}$ で PDF/A を構成してみる。&lt;/p&gt;
&lt;h2&gt;PDF/A とは&lt;/h2&gt;
&lt;p&gt;PDF/A とは自己完結性と永続性を考慮した PDF 構成で， ISO 19005 シリーズとして定義されている。
PDF/A の種別は大まかに&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PDF/A-1 : ISO 19005-1 (PDF 1.4 相当)
&lt;ul&gt;
&lt;li&gt;PDF/A-1a : PDF/A-1 レベルA&lt;/li&gt;
&lt;li&gt;PDF/A-1b : PDF/A-1 レベルB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PDF/A-2 : ISO 19005-2 (PDF 1.7 相当)
&lt;ul&gt;
&lt;li&gt;PDF/A-2a : PDF/A-2 レベルA&lt;/li&gt;
&lt;li&gt;PDF/A-2b : PDF/A-2 レベルB&lt;/li&gt;
&lt;li&gt;PDF/A-2u : PDF/A-2 レベルU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PDF/A-3 : ISO 19005-3 (PDF/A-2 拡張)
&lt;ul&gt;
&lt;li&gt;PDF/A-2a : PDF/A-2 レベルA&lt;/li&gt;
&lt;li&gt;PDF/A-2b : PDF/A-2 レベルB&lt;/li&gt;
&lt;li&gt;PDF/A-2u : PDF/A-2 レベルU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;といった感じに分かれている。&lt;/p&gt;
&lt;p&gt;まず PDF/A-1 については&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;カラーの再現性の保証&lt;/li&gt;
&lt;li&gt;フォント埋め込み&lt;/li&gt;
&lt;li&gt;XMPメタデータの埋め込み&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が要求され，逆に暗号化によるアクセス制限やコードの埋め込み等は禁止されている。&lt;/p&gt;
&lt;p&gt;PDF/A-2 では PDF/A 文書の添付や圧縮機能の一部などが許容されている。
更に PDF/A-3 では任意のドキュメント・データの埋め込みが許容されているが，さすがにこれは自己完結性の観点からは要らない機能と言えるだろう。&lt;/p&gt;
&lt;p&gt;これらの条件に加えてレベルUでは ToUnicode CMap による Unicode 対応が要求され（テキスト抽出等に必要），最高レベルのAではタグによる論理構造の埋め込みも要求される。&lt;/p&gt;
&lt;p&gt;論理構造の埋め込みはちょっと辛いし（論理構造をきちんと設計するのは大変）そもそも今回使用する &lt;code&gt;pdfx&lt;/code&gt; パッケージではレベルAの要求を完全には満たせないらしいので，レベルBまたはUの PDF/A を構成することを考える。&lt;/p&gt;
&lt;h2&gt;最初の LuaLaTeX テキスト&lt;/h2&gt;
&lt;p&gt;手始めに以下の $\mathrm{Lua\LaTeX}$ テキストを用意してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ltjsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[deluxe,nfssonly]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\renewcommand&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\emph&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[1]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textsf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textgt&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;#1&lt;span class=&#34;nb&#34;&gt;}}}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% 強調をゴシック体と Sans Serif に変更する
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\title&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\emph&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;はじめてのLua&lt;span class=&#34;k&#34;&gt;\TeX&lt;/span&gt;-ja&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\author&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Spiegel&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\date&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2020-06-08&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\maketitle&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\section&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;はじめてのLua&lt;span class=&#34;k&#34;&gt;\TeX&lt;/span&gt;-ja&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

ちゃんとLua&lt;span class=&#34;k&#34;&gt;\TeX&lt;/span&gt;-jaで日本語が出るかな？

&lt;span class=&#34;k&#34;&gt;\subsection&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;出たかな？&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

長い文章を入力するとちゃんと右端のところで折り返されるかな？
大丈夫そうな気がするけど．ちょっと不安だけど何事も挑戦だよね．

&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを処理した結果がこんな感じ。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;./output.png&#34;&gt;&lt;img src=&#34;./output.png&#34; srcset=&#34;./output.png 815w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;ちなみに &lt;code&gt;pdfinfo&lt;/code&gt; で中身を見ると，こんな感じになっている&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdfinfo sample.pdf 
Creator:        TeX
Producer:       LuaTeX-1.12.0
CreationDate:   Mon Jun  8 20:36:09 2020 JST
ModDate:        Mon Jun  8 20:36:09 2020 JST
Tagged:         no
UserProperties: no
Suspects:       no
Form:           none
JavaScript:     no
Pages:          1
Encrypted:      no
Page size:      595.276 x 841.89 pts (A4)
Page rot:       0
File size:      26856 bytes
Optimized:      no
PDF version:    1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PDF version が 1.5 である点に注目。&lt;/p&gt;
&lt;h2&gt;pdfx パッケージとメタデータの追加&lt;/h2&gt;
&lt;p&gt;PDF/A を構成するために &lt;code&gt;pdfx&lt;/code&gt; パッケージとメタデータを追加する。
こんな感じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;c&#34;&gt;% XMPメタデータ
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\RequirePackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;filecontents&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;filecontents*&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\jobname&lt;/span&gt;.xmpdata&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;\Title&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;はじめてのLuaTeX-ja&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;\Subject&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ちゃんとLuaTeX-jaで日本語が出るかな？&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;\Author&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Spiegel&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;filecontents*&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ltjsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[deluxe,nfssonly]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\renewcommand&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\emph&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;[1]&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textsf&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\textgt&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;#1&lt;span class=&#34;nb&#34;&gt;}}}&lt;/span&gt; &lt;span class=&#34;c&#34;&gt;% 強調をゴシック体と Sans Serif に変更する
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[a-2u]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;pdfx&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;   &lt;span class=&#34;c&#34;&gt;% PDF/A-2u を構成
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\pdfvariable&lt;/span&gt; omitcidset=1 &lt;span class=&#34;c&#34;&gt;% LuaTeX で PDF/A-2 を作る際に必要
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\title&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\emph&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;はじめてのLua&lt;span class=&#34;k&#34;&gt;\TeX&lt;/span&gt;-ja&lt;span class=&#34;nb&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\author&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;Spiegel&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\date&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2020-06-08&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;XMPメタデータの指定を &lt;code&gt;\documentclass&lt;/code&gt; の前に記述するのがポイント。&lt;/p&gt;
&lt;p&gt;これを処理して中身を見るとこんな感じになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdfinfo sample.pdf 
&lt;span class=&#34;hl&#34;&gt;Title:          はじめてのLuaTeX-ja
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;Subject:        ちゃんとLuaTeX-jaで日本語が出るかな？
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;Author:         Spiegel
&lt;/span&gt;Creator:        LaTeX with hyperref
Producer:       LuaTeX
CreationDate:   Mon Jun  8 20:36:09 2020 JST
ModDate:        Mon Jun  8 20:36:09 2020 JST
Tagged:         no
UserProperties: no
Suspects:       no
Form:           none
JavaScript:     no
Pages:          1
Encrypted:      no
Page size:      595.276 x 841.89 pts (A4)
Page rot:       0
File size:      40669 bytes
Optimized:      no
&lt;span class=&#34;hl&#34;&gt;PDF version:    1.4
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;PDF subtype:    PDF/A-2u:2010
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Title:         ISO 19005 - Electronic document file format for long-term preservation (PDF/A)
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Abbreviation:  PDF/A-2
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Subtitle:      Part 2: Use of ISO 32000-1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Standard:      ISO 19005-2
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;    Conformance:   Level U, Unicode support
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Title, Subject, および Author のメタデータが追加され， PDF version が 1.4 の PDF/A-2u として構成されているのが分かる。&lt;/p&gt;
&lt;h3&gt;pdfx パッケージのオプション&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pdfx&lt;/code&gt; パッケージでは PDF/E や PDF/X 等も構成できるが，ここでは PDF/A のオプションに限って紹介しておく。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;オプション&lt;/th&gt;
&lt;th&gt;構成&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-1a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-1a : ただし不完全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-1b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-1b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-2a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-2a : ただし不完全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-2b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-2b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-2u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-2u&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-3a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-3a : ただし不完全&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-3b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-3b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;a-3u&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;PDF/A-3u&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;レベルAは使わないほうがいいだろう（笑） 一般的には最小構成の PDF/A-1b で十分なようだ。
ただし &lt;code&gt;pdfx&lt;/code&gt; パッケージはレベルB指定でも ToUnicode CMap を埋め込んだままにするらしいので，今回のように，敢えて PDF/A-2u にする手もある。&lt;/p&gt;
&lt;h3&gt;pdfx パッケージで設定可能な XMP メタデータ項目&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;filecontents&lt;/code&gt; 環境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;filecontents*&lt;span class=&#34;nb&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\jobname&lt;/span&gt;.xmpdata&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
  ...
&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;filecontents*&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;内に記述する XMP メタデータ項目のうち，主なものは以下の通り。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;項目名&lt;/th&gt;
&lt;th&gt;XMP 要素&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Author&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:creator&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sep&lt;/code&gt; で複数指定可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:title&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Language&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:language&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;ja-JP&lt;/code&gt; など，&lt;code&gt;\sep&lt;/code&gt; で複数指定可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Keywords&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:subject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sep&lt;/code&gt; で複数指定可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Publisher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:publisher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\sep&lt;/code&gt; で複数指定可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Subject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:description&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;著作権情報を載せる場合には以下の項目も使える&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;項目名&lt;/th&gt;
&lt;th&gt;XMP 要素&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Copyright&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:rights&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;利用規約等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\CopyrightURL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xmpRights:WebStatement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Copyrighted&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xmpRights:Marked&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;公有の場合は &lt;code&gt;False&lt;/code&gt; をセットする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Owner&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xmpRights:Owner&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;著作権者が別にいる場合，&lt;code&gt;\sep&lt;/code&gt; で複数指定可能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\CertificateURL&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;xmpRights:Certificate&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;YYYY-MM-DD&lt;/code&gt; または &lt;code&gt;YYYY-MM&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\Relation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:relation&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\URLlink&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;dc:identifier&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;その他，設定可能な項目については &lt;a href=&#34;https://www.ctan.org/pkg/pdfx&#34;&gt;&lt;code&gt;pdfx&lt;/code&gt; パッケージのドキュメント&lt;/a&gt;を参照のこと。&lt;/p&gt;
&lt;p&gt;なお &lt;code&gt;filecontents&lt;/code&gt; 環境の内容は &lt;code&gt;*.xmpdata&lt;/code&gt; ファイルに吐き出されるが，既にファイルがある場合は上書き保存されないため，メタデータを変更したらこのファイルを削除してから再処理する必要がある。
もし &lt;code&gt;.latexmkrc&lt;/code&gt; ファイルでビルドの制御を行っているなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$clean_ext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;xmpdata&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;の記述を追加することで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ latexmk -c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;コマンドで，他の一時ファイルと共に &lt;code&gt;*.xmpdata&lt;/code&gt; ファイルも削除してくれる。&lt;/p&gt;
&lt;p&gt;実際に PDF ファイルに埋め込まれる XMP メタデータの内容は &lt;code&gt;pdfa.xmpi&lt;/code&gt; に出力されているので参考になると思う。
また，すでに生成済みの PDF に対しては&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdfinfo -meta sample.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で XMP メタデータを抽出できる。&lt;/p&gt;
&lt;h2&gt;日本語の ToUnicode CMap はなくても大丈夫（らしい）&lt;/h2&gt;
&lt;p&gt;レベルUの要件として PDF に ToUnicode CMap が埋め込まれている必要があるが，&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;のような Adobe-Japan1 フォントについては例外のようだ。&lt;/p&gt;
&lt;p&gt;試しに &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; コマンドで&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;の ToUnicode CMap を削除してみる&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdf-rm-tuc --newline-before-endstream sample.pdf sample-tuc.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PDF/A ドキュメントを処理する場合は &lt;code&gt;--newline-before-endstream&lt;/code&gt; オプションが必須になるらしいので注意。&lt;/p&gt;
&lt;p&gt;これで&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdffonts sample-tuc.pdf 
name                                 type              encoding         emb sub uni object ID
------------------------------------ ----------------- ---------------- --- --- --- ---------
JKVWEI+LMRoman10-Regular             CID Type 0C       Identity-H       yes yes yes     22  0
&lt;span class=&#34;hl&#34;&gt;IECCEF+HaranoAjiMincho-Regular       CID Type 0C       Identity-H       yes yes no      23  0
&lt;/span&gt;XKBUGM+LMSans17-Regular              CID Type 0C       Identity-H       yes yes yes     24  0
&lt;span class=&#34;hl&#34;&gt;JYWTWW+HaranoAjiGothic-Regular       CID Type 0C       Identity-H       yes yes no      25  0
&lt;/span&gt;RHMEBC+LMRoman12-Regular             CID Type 0C       Identity-H       yes yes yes     26  0
RHDCZK+LMSans12-Regular              CID Type 0C       Identity-H       yes yes yes     27  0

$ pdfinfo sample-tuc.pdf 
Title:          はじめてのLuaTeX-ja
Subject:        ちゃんとLuaTeX-jaで日本語が出るかな？
Author:         Spiegel
Creator:        LaTeX with hyperref
Producer:       LuaTeX
CreationDate:   Mon Jun  8 20:36:09 2020 JST
ModDate:        Mon Jun  8 20:36:09 2020 JST
Tagged:         no
UserProperties: no
Suspects:       no
Form:           none
JavaScript:     no
Pages:          1
Encrypted:      no
Page size:      595.276 x 841.89 pts (A4)
Page rot:       0
File size:      39154 bytes
Optimized:      no
PDF version:    1.4
PDF subtype:    PDF/A-2u:2010
    Title:         ISO 19005 - Electronic document file format for long-term preservation (PDF/A)
    Abbreviation:  PDF/A-2
    Subtitle:      Part 2: Use of ISO 32000-1
    Standard:      ISO 19005-2
    Conformance:   Level U, Unicode support
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のように PDF/A-2u を維持しつつ&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;の ToUnicode CMap を削除することができた。
念のため，この PDF ファイルを &lt;a href=&#34;https://verapdf.org/&#34; title=&#34;veraPDF | Industry Supported PDF/A Validation&#34;&gt;veraPDF&lt;/a&gt; で検査してみたが “PDF/A-2U validation profile” でちゃんとパスしたので本当に問題ないのだろう。&lt;/p&gt;
&lt;p&gt;さらに &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; コマンドに &lt;code&gt;--linearize&lt;/code&gt; および &lt;code&gt;--object-streams=generate&lt;/code&gt; オプションを付けて実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdf-rm-tuc --newline-before-endstream --linearize --object-streams=generate sample.pdf sample-tuc.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PDF version 1.5 のドキュメントとして出力される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdfinfo sample-tuc.pdf 
Title:          はじめてのLuaTeX-ja
Subject:        ちゃんとLuaTeX-jaで日本語が出るかな？
Author:         Spiegel
Creator:        LaTeX with hyperref
Producer:       LuaTeX
CreationDate:   Mon Jun  8 20:36:09 2020 JST
ModDate:        Mon Jun  8 20:36:09 2020 JST
Tagged:         no
UserProperties: no
Suspects:       no
Form:           none
JavaScript:     no
Pages:          1
Encrypted:      no
Page size:      595.276 x 841.89 pts (A4)
Page rot:       0
File size:      34742 bytes
&lt;span class=&#34;hl&#34;&gt;Optimized:      yes
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;PDF version:    1.5
&lt;/span&gt;PDF subtype:    PDF/A-2u:2010
    Title:         ISO 19005 - Electronic document file format for long-term preservation (PDF/A)
    Abbreviation:  PDF/A-2
    Subtitle:      Part 2: Use of ISO 32000-1
    Standard:      ISO 19005-2
    Conformance:   Level U, Unicode support
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;よーし，うむうむ，よーし。&lt;/p&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.antenna.co.jp/pdf/reference/PDFA.htm&#34;&gt;PDF/Aとはなにか | アンテナハウス PDF資料室&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/PDF/A&#34;&gt;PDF/A - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦 (著), 黒木 裕介 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;大型本&lt;/dd&gt;
    &lt;dd&gt;4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- [改訂第7版]LaTeX2ε美文書作成入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;pdfinfo&lt;/code&gt; および &lt;code&gt;pdffonts&lt;/code&gt; は &lt;a href=&#34;https://poppler.freedesktop.org/&#34;&gt;Poppler&lt;/a&gt; のコマンド。 Windows 版 &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; には既定で同梱されているらしい。他のプラットフォームについては「&lt;a href=&#34;https://texwiki.texjp.org/?Poppler&#34;&gt;Poppler - TeX Wiki&lt;/a&gt;」を参考に導入すればいいだろう。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;基本的に © マークや “Copyright” の文言は不要。その代わり著作（権）者名と公開年と許諾条件を表記するとよい（他のメタデータで代替できるのであればそれも不要だが）。 CC Licenses のようなライセンス・ツールを使うのであれば &lt;code&gt;\CopyrightURL&lt;/code&gt; 項目に（コモンズ証などの）許諾条件を記した Web ページの URL をセットすればよい。なお CC Licenses について詳しくは拙文「&lt;a href=&#34;https://text.baldanders.info/cc-licenses/&#34;&gt;改訂3版： CC Licenses について&lt;/a&gt;」を参考にどうぞ。 PDF/A はアクセス制限を禁止するので CC Licenses と相性がいいよね♪ &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; コマンドの導入については拙文「&lt;a href=&#34;https://text.baldanders.info/remark/2020/06/remove-tounicode-cmap-from-pdf/&#34;&gt;LuaTeX で生成した PDF から ToUnicode CMap を除去する&lt;/a&gt;」を参考にどうぞ。 &lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>LuaTeX で生成した PDF から ToUnicode CMap を除去する</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/06/remove-tounicode-cmap-from-pdf/" />
		<id>tag:text.Baldanders.info,2020-06-08:/remark/2020/06/remove-tounicode-cmap-from-pdf/</id>
		<published>2020-06-08T08:31:44+00:00</published>
		<updated>2020-06-08T23:47:52+00:00</updated>
		<summary>原ノ味フォントの作者が pdf-rm-tuc というツールを公開されている。ありがたや。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/04/haranoaji-fonts-with-texlive-2020/&#34; title=&#34;TeX Live 2020 で原ノ味フォントを使う&#34;&gt;以前に紹介&lt;/a&gt;した&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;だが， $\mathrm{Lua\LaTeX}$ で組版 &amp;amp; PDF 出力する際に Adobe-Identity-0 フォントとして埋め込まれてしまうそうで，フォントの性能を上手く活かしきれてないらしい。
しかも&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;LuaTeX はフォントの cmap テーブルから逆変換で ToUnicode CMap を生成しているようで、縦書き用グリフを使った場合や異字体を使った場合など、テキスト抽出すると意図しない結果になることがあります&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc/blob/master/README.ja.md&#34;&gt;PDF から ToUnicode CMap を削除するツール&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;そこで&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;の作者が &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; というツールを公開されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34;&gt;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;このツールを使うと&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;PDF から原ノ味フォントの ToUnicode CMap を削除し、原ノ味フォントの ROS を Adobe-Identity-0 から 元の Adobe-Japan1-7 に変更します。 これによってテキスト抽出で意図しない結果になることを防げると考えています&lt;/q&gt;&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc/blob/master/README.ja.md&#34;&gt;PDF から ToUnicode CMap を削除するツール&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;更に言うと PDF ファイルのサイズがちょびっとだけ小さくなる。
ありがたや &lt;code&gt;m(_ _)m&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;pdf-rm-tuc&lt;/a&gt; のビルドとインストール&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; はソースコードのみの公開なので GCC を使って自前でビルドする必要がある&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
ここでは &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; プラットフォームを前提に紹介する。&lt;/p&gt;
&lt;h3&gt;事前準備&lt;/h3&gt;
&lt;p&gt;たまに GCC が入ってないことがあるので，入ってなければ APT でインストールしておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install build-essential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更に &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; の GitHub リポジトリを clone して直接ビルドする場合は Autoconf および Automake が必要になる。
もし入ってなければ，これもインストールしておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install autoconf automake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更に更にビルドの際に lib&lt;a href=&#34;https://github.com/qpdf/qpdf&#34; title=&#34;qpdf/qpdf: Primary QPDF source code and documentation&#34;&gt;qpdf&lt;/a&gt; が必要らしいので，これもインストールしておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ sudo apt install libqpdf-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで準備完了。&lt;/p&gt;
&lt;h3&gt;ビルドとインストール&lt;/h3&gt;
&lt;p&gt;では，ビルドからインストールまで一気にやってしまおう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ git clone https://github.com/trueroad/pdf-rm-tuc.git
$ cd pdf-rm-tuc
$ ./autogen.sh
$ mkdir build
$ cd build
$ ../configure
$ make
$ make check # TeX Live 2020 が導入済みであること
$ sudo make install
$ pdf-rm-tuc -V
Remove ToUnicode CMap from PDF 1.0.0
Copyright (C) 2019 Masamichi Hosoda. All rights reserved.
License: BSD-2-Clause

https://github.com/trueroad/pdf-rm-tuc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;インストールが成功すれば &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; コマンドが以下に置かれる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ which pdf-rm-tuc
/usr/local/bin/pdf-rm-tuc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;pdf-rm-tuc&lt;/a&gt; を試してみる&lt;/h2&gt;
&lt;p&gt;入力テキストは以下の通り。
&lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; 2020 が導入されていることが前提ね。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;&lt;span class=&#34;k&#34;&gt;\documentclass&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;ltjsarticle&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[deluxe]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-preset&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;\usepackage&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;luatexja-otf&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\begin&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\mcfamily\ltseries&lt;/span&gt; ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・細字）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\par&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\mcfamily&lt;/span&gt;          ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・中字）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\par&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\mcfamily\bfseries&lt;/span&gt; ☂ は夜更け過ぎに ☃ へとかわるだろう。（明朝体・太字）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\par&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\gtfamily&lt;/span&gt;          ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・中字）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\par&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\gtfamily\bfseries&lt;/span&gt; ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・太字）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\par&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\gtfamily\ebseries&lt;/span&gt; ☂ は夜更け過ぎに ☃ へとかわるだろう。（ゴシック体・極太）&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;\end&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;document&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを組版すると以下のような結果になる。&lt;/p&gt;
&lt;figure style=&#39;margin:0 auto;text-align:center;&#39;&gt;
&lt;a href=&#34;https://text.baldanders.info/remark/2020/04/haranoaji-fonts-with-texlive-2020/lualatex-sample.png&#34;&gt;&lt;img src=&#34;https://text.baldanders.info/remark/2020/04/haranoaji-fonts-with-texlive-2020/lualatex-sample.png&#34; srcset=&#34;https://text.baldanders.info/remark/2020/04/haranoaji-fonts-with-texlive-2020/lualatex-sample.png 1388w&#34; sizes=&#34;(min-width:600px) 500px, 80vw&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;このときのフォント情報はこんな風になっている&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdffonts lualatex-sample.pdf 
name                                 type              encoding         emb sub uni object ID
------------------------------------ ----------------- ---------------- --- --- --- ---------
OLUZKZ+HaranoAjiMincho-Light         CID Type 0C       Identity-H       yes yes yes      4  0
PTNBJH+HaranoAjiMincho-Regular       CID Type 0C       Identity-H       yes yes yes      5  0
BMAPJQ+HaranoAjiMincho-Bold          CID Type 0C       Identity-H       yes yes yes      6  0
HOSFGF+HaranoAjiGothic-Regular       CID Type 0C       Identity-H       yes yes yes      7  0
ULINFN+HaranoAjiGothic-Bold          CID Type 0C       Identity-H       yes yes yes      8  0
PJPUYK+HaranoAjiGothic-Heavy         CID Type 0C       Identity-H       yes yes yes      9  0
JFRMQG+LMRoman10-Regular             CID Type 0C       Identity-H       yes yes yes     10  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;uni&lt;/code&gt; の項目が ToUnicode CMap の有無を示すもので，&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;の全てに ToUnicode CMap があるのが分かる。&lt;/p&gt;
&lt;p&gt;では &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; を実行してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdf-rm-tuc lualatex-sample.pdf lualatex-sample-notuc.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実行結果は以下の通り。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ pdffonts lualatex-sample-notuc.pdf 
name                                 type              encoding         emb sub uni object ID
------------------------------------ ----------------- ---------------- --- --- --- ---------
JFRMQG+LMRoman10-Regular             CID Type 0C       Identity-H       yes yes yes     10  0
PTNBJH+HaranoAjiMincho-Regular       CID Type 0C       Identity-H       yes yes no       5  0
OLUZKZ+HaranoAjiMincho-Light         CID Type 0C       Identity-H       yes yes no       4  0
BMAPJQ+HaranoAjiMincho-Bold          CID Type 0C       Identity-H       yes yes no       6  0
HOSFGF+HaranoAjiGothic-Regular       CID Type 0C       Identity-H       yes yes no       7  0
ULINFN+HaranoAjiGothic-Bold          CID Type 0C       Identity-H       yes yes no       8  0
PJPUYK+HaranoAjiGothic-Heavy         CID Type 0C       Identity-H       yes yes no       9  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/trueroad/HaranoAjiFonts&#34; title=&#34;trueroad/HaranoAjiFonts: 原ノ味フォント&#34;&gt;原ノ味フォント&lt;/a&gt;の &lt;code&gt;uni&lt;/code&gt; 項目が全て &lt;code&gt;no&lt;/code&gt; になっていることが確認できた。
よーし，うむうむ，よーし。&lt;/p&gt;
&lt;h2&gt;注意事項&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;$\mathrm{up\LaTeX}$ 等で組版したものを &lt;code&gt;dvipdfmx&lt;/code&gt; で PDF に出力する場合は Adobe-Japan1 フォントであれば ToUnicode CMap の生成・埋め込みはしないので &lt;a href=&#34;https://github.com/trueroad/pdf-rm-tuc&#34; title=&#34;trueroad/pdf-rm-tuc: Remove ToUnicode CMap from PDF&#34;&gt;&lt;code&gt;pdf-rm-tuc&lt;/code&gt;&lt;/a&gt; は不要&lt;/li&gt;
&lt;li&gt;PDF ビュア側で Adobe-Japan1-UCS2 等の ToUnicode CMap を持っていない場合は PDF 側の ToUnicode CMap を削除すると日本語のテキスト抽出が上手く行かないらしい。 &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; に標準で入ってる &lt;a href=&#34;https://wiki.gnome.org/Apps/Evince&#34;&gt;Evince&lt;/a&gt; は画面から普通にコピペできたけど，大丈夫ってこと？&lt;/li&gt;
&lt;li&gt;PDF/A を構成する場合，適合レベルによっては ToUnicode CMap を削除すると拙い場合があるのだが &lt;a href=&#34;https://text.baldanders.info/remark/2020/06/pdfa-with-luatex/&#34; title=&#34;LuaLaTeX で PDF/A を構成する&#34;&gt;Adobe-Japan1 フォントについては例外&lt;/a&gt;らしい？ &lt;a href=&#34;https://verapdf.org/&#34; title=&#34;veraPDF | Industry Supported PDF/A Validation&#34;&gt;veraPDF&lt;/a&gt; 等の Validator で確認したほうがいいかも&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trueroad/tr-TeXConf2019&#34;&gt;trueroad/tr-TeXConf2019: TeXConf 2019 一般講演「原ノ味フォントと ToUnicode CMap」関連資料&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51E5K7B53aL._SL160_.jpg&#34; width=&#34;127&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4774187054?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;[改訂第7版]LaTeX2ε美文書作成入門&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;奥村 晴彦 (著), 黒木 裕介 (著)&lt;/dd&gt;
    &lt;dd&gt;技術評論社 2017-01-24&lt;/dd&gt;
    &lt;dd&gt;大型本&lt;/dd&gt;
    &lt;dd&gt;4774187054 (ASIN), 9784774187051 (EAN), 4774187054 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;4&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;far fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;ついに第7版が登場。紙の本で買って常に側に置いておくのが吉。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2017-09-27&#34;&gt;2017-09-27&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- [改訂第7版]LaTeX2ε美文書作成入門 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Windows であれば &lt;a href=&#34;https://text.baldanders.info/remark/2016/03/gcc-msys2-1/&#34; title=&#34;MSYS2 による gcc 開発環境の構築 ― MSYS2 のインストールから初期化処理まで&#34;&gt;MSYS2 等の環境&lt;/a&gt;が必要になるかもしれない。あるいは &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; ひっくるめて WSL2 に引っ越すか（笑） &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;pdffonts&lt;/code&gt; は &lt;a href=&#34;https://poppler.freedesktop.org/&#34;&gt;Poppler&lt;/a&gt; のコマンドのひとつ。 Windows 版 &lt;a href=&#34;http://www.tug.org/texlive/&#34; title=&#34;TeX Live - TeX Users Group&#34;&gt;TeX Live&lt;/a&gt; には既定で同梱されているらしい。他のプラットフォームについては「&lt;a href=&#34;https://texwiki.texjp.org/?Poppler&#34;&gt;Poppler - TeX Wiki&lt;/a&gt;」を参考に導入すればいいだろう。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>2020-06-07 のブックマーク</title>
		<category term="bookmarks" label="bookmarks" scheme="https://text.baldanders.info/bookmarks/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/bookmarks/2020/06/07-bookmarks/" />
		<id>tag:text.Baldanders.info,2020-06-07:/bookmarks/2020/06/07-bookmarks/</id>
		<published>2020-06-07T08:50:23+00:00</published>
		<updated>2020-06-13T02:20:11+00:00</updated>
		<summary>「「屋根裏のバイテン」第2話」他</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;h2&gt;リリース情報&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/news/0.72.0-relnotes/&#34;&gt;URL rewrites in dev server | Hugo&lt;/a&gt; : Hugo 0.72.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lore.kernel.org/git/xmqqzh9mu4my.fsf@gitster.c.googlers.com/T/&#34;&gt;[ANNOUNCE] Git v2.27.0&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-for-windows/git/releases/tag/v2.27.0.windows.1&#34;&gt;Release Git for Windows 2.27.0 · git-for-windows/git · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.rust-lang.org/2020/06/04/Rust-1.44.0.html&#34;&gt;Announcing Rust 1.44.0 | Rust Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;バベルのインターネット&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/02/2020-06-01-facebook-employees-stage-virtual-walkout-in-protest-of-companys-stance-on-trump-posts/&#34;&gt;Facebook社員がバーチャルストを敢行、トランプ米大統領の投稿に対する会社の態度に抗議  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/02/2020-06-01-twitter-matt-gaetz-antifa-tweet/&#34;&gt;Twitterが共和党議員の反ファシズムツイートを「暴力賛美」として制限表示に  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;セキュリティ＆プライバシー関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.ieee-security.org/TC/SPW2020/ConPro/papers/bhagavatula-conpro20.pdf&#34;&gt;(How) Do People Change Their Passwords After a Breach? &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/06/password_changi.html&#34;&gt;Password Changing After a Breach - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2020/06/apple-fixes-bug-that-could-have-given-hackers-unauthorized-to-user-accounts/&#34;&gt;Apple fixes bug that could have given hackers full access to user accounts | Ars Technica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://thehackernews.com/2020/05/sign-in-with-apple-hacking.html&#34;&gt;Critical &amp;lsquo;Sign in with Apple&amp;rsquo; Bug Could Have Let Attackers Hijack Anyone&amp;rsquo;s Account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/06/sign_in_with_ap.html&#34;&gt;&amp;ldquo;Sign in with Apple&amp;rdquo; Vulnerability - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/gitlab20.html&#34;&gt;GitLab、セキュリティ演習で社員にフィッシングメールを送信。その内容と、20％が引っ掛かったことを公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/03/2020-06-02-how-to-delete-old-facebook-posts-manage-activity/&#34;&gt;Facebookが過去投稿を一括削除できるツールを発表、プライバシー管理を強化  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techxplore.com/news/2020-06-wallpaper-image-android.html&#34;&gt;Wallpaper image crashing Android phones&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/06/wallpaper_that_.html&#34;&gt;Wallpaper that Crashes Android Phones - Schneier on Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/03/2020-06-02-remove-china-apps-google-play-store/&#34;&gt;Googleが「Remove China Apps」をPlay Storeから取り去る  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.schneier.com/blog/archives/2020/06/zooms_commitmen.html&#34;&gt;Zoom&amp;rsquo;s Commitment to User Security Depends on Whether you Pay It or Not - Schneier on Security&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bloomberg.com/tosv2.html?vid=&amp;amp;uuid=3dcb6db0-a6cd-11ea-8a9d-3587c366f127&amp;amp;url=L3RlY2hub2xvZ3k=&#34;&gt;Bloomberg - Are you a robot?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2020/06/04/170423&#34;&gt;お名前.com Naviの不具合によるCoincheckとbitbankのドメイン名ハイジャックについてまとめてみた - piyolog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.itmedia.co.jp/enterprise/articles/2006/09/news045.html&#34;&gt;セキュリティインシデントの報告書で信頼を高める——コインチェックの対応に学べ (1/2) - ITmedia エンタープライズ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kb.cert.org/vuls/id/636397&#34;&gt;VU#636397 - IP-in-IP protocol routes arbitrary traffic by default&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CERTCC/PoC-Exploits/tree/master/cve-2020-10136&#34;&gt;PoC-Exploits/cve-2020-10136 at master · CERTCC/PoC-Exploits · GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20200604-1047869/&#34;&gt;IP-in-IPに対応したデバイスが悪用される問題あり、確認と対処を | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/06/2020-06-04-tycoon-java-ransomware/&#34;&gt;新手のランサムウェアがWindowsとLinuxを攻撃、Javaイメージファイルを悪用  |  TechCrunch Japan&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tyablog.net/2020/04/11/java-packages-with-jlink/&#34;&gt;Javaアプリケーション配布方法 ~jlink ランタイム作成~ | tyablog.net&lt;/a&gt; : JIMAGE について&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wirelesswire.jp/2020/06/75720/&#34;&gt;国際標準と部品レベルの対応が急務になるIoT機器のセキュリティ対策のこれから - WirelessWire News（ワイヤレスワイヤーニュース）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://piyolog.hatenadiary.jp/entry/2020/06/07/125835&#34;&gt;データセンターの電源故障の影響で起きた自治体サイト接続障害についてまとめてみた - piyolog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;天文関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/01/2020-05-30-nasa-astronauts-successfully-pilot-spacexs-crew-dragon-spacecraft-manually-for-the-first-time/&#34;&gt;宇宙空間でのCrew Dragonの手動操縦に初成功、同じ操縦をシミュレータで誰でも試せる  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tmt.org/news/466&#34;&gt;Latest Poll Shows 2-1 Margin in Support of TMT on Maunakea | TMT International Observatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sorae.info/astronomy/20200602-einstein-ring.html&#34;&gt;1987年発見のアインシュタインリング、元になった天体までの距離が100億光年と判明 | sorae 宇宙へのポータルサイト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;知財関連&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://torrentfreak.com/project-gutenberg-public-domain-library-blocked-in-italy-for-copyright-infringement-200603/&#34;&gt;Project Gutenberg Public Domain Library Blocked in Italy For Copyright Infringement * TorrentFreak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Linux または Ubuntu に関する話題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2020/06/ubuntu-2004-73-ubuntulinuxoslenovothink.html&#34;&gt;Ubuntu 20.04 その73 - Ubuntu/LinuxデスクトップOSの市場シェア拡大・LenovoがThinkPadとThinkStationにLinux認定モデルを追加 - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kledgeb.blogspot.com/2020/06/ubuntu-2004-74-ubuntuuefi.html&#34;&gt;Ubuntu 20.04 その74 - UbuntuとUEFIセキュアブート - kledgeb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/stack_overflow5javascriptrust.html&#34;&gt;Stack Overflowの調査によると、デベロッパーの5割以上が「フルスタック」エンジニアを自認。最も使われている言語はJavaScript、最も愛されている言語はRust － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/red_hatquarkusjavalinux.html&#34;&gt;Red Hatが「Quarkus」の商用サポートを開始。JavaコードをコンパイルしてLinuxバイナリを生成、省メモリ高速起動でコンテナ環境に最適 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://scienceportal.jst.go.jp/clip/20200601_01.html&#34;&gt;サイエンスクリップ「米有人宇宙船がISS到着、シャトル廃止以来9年ぶり悲願達成」| SciencePortal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dc.watch.impress.co.jp/docs/news/1256/119/index.html&#34;&gt;現存する日本最古のカメラ雑誌「アサヒカメラ」が休刊に - デジカメ Watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/swiftaws_lambdaswiftswift_aws_lambda_runtime.html&#34;&gt;Swift言語がAWS Lambdaで利用可能に。Swift開発チームが「Swift AWS Lambda Runtime」公開 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nao.ac.jp/news/science/2020/20200602-cfca.html&#34;&gt;巨大ブラックホールの種になる星たち―大規模シミュレーションが描く新しい形成メカニズム― | 国立天文台(NAOJ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20200602-1047066/&#34;&gt;Linuxカーネルソースコード、80行制限を100行まで緩和 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/visual_studiokuberneteslocal_process_with_kubernetes.html&#34;&gt;Visual Studioの新機能、クラウド上のKubernetesクラスタの一部をローカルマシンに引き込んで開発できる「Local Process with Kubernetes」発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.publickey1.jp/blog/20/vmwaregpubitfusionvsphere_7.html&#34;&gt;VMware、GPUを仮想化する「Bitfusion」、vSphere 7への統合完了を発表 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.useanvil.com/&#34;&gt;Anvil - Streamline Information Gathering. Automate Workflows.&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/04/2020-06-03-paperwork-automation-platform-anvil-raises-5-million-from-googles-gradient-ventures/&#34;&gt;PDFベースの共同編集・電子署名サービスのAnvilがグーグル系VCから5億円超を調達  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://okuranagaimo.blogspot.com/2020/06/whocovid-19.html&#34;&gt;ブログ: 政府とWHOは、小さな米国企業の疑わしいデータに基づいてCOVID-19の方針を変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2020/06/05/2020-06-04-signal-now-has-built-in-face-blurring-for-photos/&#34;&gt;秘匿性の高いメッセージングアプリ「Signal」に顔をぼかす機能が加わる  |  TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://newcss.net/&#34;&gt;new.css&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://oxal.org/projects/sakura/&#34;&gt;sakura: a minimal classless css framework / theme.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://positron.exblog.jp/31219434/&#34;&gt;Webアクション「屋根裏のバイテン」第2話 : ぽじとろんの竹本泉観察記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry><entry>
		<title>Edwards-curve Digital Signature Algorithm</title>
		<category term="remark" label="remark" scheme="https://text.baldanders.info/remark/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/remark/2020/06/eddsa/" />
		<id>tag:text.Baldanders.info,2020-06-07:/remark/2020/06/eddsa/</id>
		<published>2020-06-07T08:33:37+00:00</published>
		<updated>2020-06-08T01:12:54+00:00</updated>
		<summary>SP 800-57 Part 1 Rev.5 が正式リリースした記念に EdDSA に関する情報を覚え書きの形で記しておく。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;ネットであちこち眺めていて気がついたのだが SP 800-57 第一部の Rev.5 最終版が2020年5月にリリースされていた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final&#34;&gt;SP 800-57 Part 1 Rev. 5, Recommendation for Key Management: Part 1 – General | CSRC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私はセキュリティや暗号技術の専門家ではないし Rev.5 の変更点が（軽微なものも合わせて）67項目もあって全部は紹介しきれないので，ひとつだけ&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;In Section 2.2, EdDSA was added. Modified ECDSA&lt;/q&gt;.
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://doi.org/10.6028/NIST.SP.800-57pt1r5&#34;&gt;SP 800-57 Part 1 Revision 5&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;について関連情報を覚え書きの形で記しておく。&lt;/p&gt;
&lt;h2&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8032.html&#34; title=&#34;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&#34;&gt;RFC 8032&lt;/a&gt;: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/h2&gt;
&lt;p&gt;EdDSA のオリジナルは2011年に公開された “&lt;span&gt;&lt;a href=&#34;http://ed25519.cr.yp.to/ed25519-20110926.pdf&#34;&gt;High-speed high-security signatures &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;” らしい。
その後も改良版が出たり色々あって，2017年に &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8032.html&#34; title=&#34;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&#34;&gt;RFC 8032&lt;/a&gt; として標準化された。&lt;/p&gt;
&lt;p&gt;EdDSA は以下の特徴を持っている。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;EdDSA provides high performance on a variety of platforms;&lt;/li&gt;
&lt;li&gt;The use of a unique random number for each signature is not required;&lt;/li&gt;
&lt;li&gt;It is more resilient to side-channel attacks;&lt;/li&gt;
&lt;li&gt;EdDSA uses small public keys (32 or 57 bytes) and signatures (64 or 114 bytes) for Ed25519 and Ed448, respectively;&lt;/li&gt;
&lt;li&gt;The formulas are &amp;ldquo;complete&amp;rdquo;, i.e., they are valid for all points on the curve, with no exceptions.  This obviates the need for EdDSA to perform expensive point validation on untrusted public values; and&lt;/li&gt;
&lt;li&gt;EdDSA provides collision resilience, meaning that hash-function collisions do not break this system (only holds for PureEdDSA).&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8032.html&#34;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;特に2番目が重要。&lt;/p&gt;
&lt;p&gt;これまでの NIST 標準の（ECDSA を含む） DSA は署名の度にランダムな値をひとつ決めないといけないのだが，ここの実装をサボると，最悪の場合，秘密鍵の漏洩に繋がる。
更に言うと，かつて SP 800-90A に載っていた疑似乱数生成器 Dual_EC_DRBG に NSA の関与が疑われる欠陥が発覚し &lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/800-90a/rev-1/final&#34; title=&#34;SP 800-90A Rev. 1, Random Number Generation Using Deterministic RBGs | CSRC&#34;&gt;SP 800-90A を改訂&lt;/a&gt;する騒ぎにまで発展したこともある。&lt;/p&gt;
&lt;p&gt;このように DSA の具体的な実装について常に懸念が付きまとっているため，より安全性が高いとされる EdDSA が注目されることとなった&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;EdDSA で使える楕円曲線には&lt;span&gt;&lt;a href=&#34;http://ed25519.cr.yp.to/eddsa-20150704.pdf&#34;&gt;かなりのバリエーションがある &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; のだが， &lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8032.html&#34; title=&#34;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&#34;&gt;RFC 8032&lt;/a&gt; に記載されているのは以下の2つである&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;楕円曲線名&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;鍵長（bytes）&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;強度（bits）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;edwards25519&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;128&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edwards448&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;224&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;生成した ECC 鍵を2031年以降も使い続けるにはセキュリティ強度にして128ビット以上必要だが，この2つの楕円曲線であれば十分であることが分かる。&lt;/p&gt;
&lt;h2&gt;NIST 標準としての EdDSA&lt;/h2&gt;
&lt;p&gt;EdDSA の RFC 化に伴い，以下の NIST 標準文書にも EdDSA が追加されることになった。
ただし今のところはまだドラフト版である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/fips/186/5/draft&#34;&gt;FIPS 186-5 (Draft), Digital Signature Standard (DSS) | CSRC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/publications/detail/sp/800-186/draft&#34;&gt;SP 800-186 (Draft), Discrete Logarithm-Based Crypto: Elliptic Curve Parameters | CSRC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ちなみに両方共パブリックコメントは2020年初に締め切られている。&lt;/p&gt;
&lt;p&gt;FIPS 186-5 および SP 800-186 が正式リリースされれば，政府調達でもなんでも，大手を振って EdDSA を使えるようになる（笑）&lt;/p&gt;
&lt;h2&gt;EdDSA の実装&lt;/h2&gt;
&lt;h3&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; と &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; は &lt;a href=&#34;https://tools.ietf.org/html/rfc6637&#34; title=&#34;RFC 6637 - Elliptic Curve Cryptography (ECC) in OpenPGP&#34;&gt;RFC 6637&lt;/a&gt; で正式に ECC を組み込んだが，この中に EdDSA は含まれていない。
ただし，次期 &lt;a href=&#34;http://tools.ietf.org/html/rfc4880&#34; title=&#34;RFC 4880 - OpenPGP Message Format&#34;&gt;OpenPGP&lt;/a&gt; となる &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; では EdDSA を組み込み済みで &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; の最新版では既に EdDSA 鍵を生成し使用することができる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://text.baldanders.info/openpgp/using-ecc-with-gnupg/&#34;&gt;そろそろ GnuPG でも ECC を標準で使うのがいいんじゃないかな&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なお，最新の &lt;a href=&#34;https://gnupg.org/&#34; title=&#34;The GNU Privacy Guard&#34;&gt;GnuPG&lt;/a&gt; では edwards25519 のみサポートしているようだ。&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://www.openssh.com/&#34;&gt;OpenSSH&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.openssh.com/&#34;&gt;OpenSSH&lt;/a&gt; では EdDSA/edwards25519 鍵を生成・使用できる。
鍵生成は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ ssh-keygen -t ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で可能。&lt;/p&gt;
&lt;h3&gt;&lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;現在の &lt;a href=&#34;https://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; は EdDSA をサポートしている。
edwards25519 および edwards448 を指定可能。&lt;/p&gt;
&lt;h2&gt;【おまけ】 量子コンピュータ耐性&lt;/h2&gt;
&lt;p&gt;現在，公開鍵暗号の主流である IFC (Integer Factorization Cryptosystems) および FFC (Finite Field Cryptosystems) の各アルゴリズムは量子コンピュータによる攻略法が既にあり，十分な性能を獲得すれば短時間で攻略可能になると考えられている。
ECC も FFC のバリエーションであり，これに含まれる。&lt;/p&gt;
&lt;p&gt;しかし，2020年時点の性能では128ビット以上のセキュリティ強度であれば現実的な脅威には至っていないようだ。&lt;/p&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;例えば、量子コンピュータを用いて2048ビットRSA合成数の素因数分解を行う場合には、量子誤りが一切ないという理想的な環境下でも、4098量子ビットが必要であり、1012～1013回のゲート演算が必要であると見積もられています。また、量子誤りがあるという現実的な環境下では、2000万量子ビットが必要であるという見積もりもあります&lt;/q&gt;。&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.cryptrec.go.jp/topics/cryptrec-er-0001-2019.html&#34;&gt;現在の量子コンピュータによる暗号技術の安全性への影響&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;blockquote&gt;&lt;q&gt;量子コンピュータの性能を測る上での指標（量子ビット数、量子誤りの大きさ、演算可能回数など）や、量子コンピュータの開発状況もあわせて考慮にいれると、近い将来に、2048ビットの素因数分解や256ビットの楕円曲線上の離散対数問題が解かれる可能性は低いと考えます&lt;/q&gt;。&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://www.cryptrec.go.jp/topics/cryptrec-er-0001-2019.html&#34;&gt;現在の量子コンピュータによる暗号技術の安全性への影響&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;ただし，量子コンピュータ開発は成長が著しい分野でもあり，今後も成り行きを注視していく必要がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.cryptrec.go.jp/report/cryptrec-rp-2000-2018.pdf&#34;&gt;CRYPTREC Report 2018: 暗号技術評価委員会報告 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt; : 素因数分解問題および楕円曲線上の離散対数問題の困難性に関する計算量評価のレポートあり&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;a href=&#34;https://www.cryptrec.go.jp/report/cryptrec-tr-2001-2018.pdf&#34;&gt;耐量子計算機暗号の研究動向調査報告書 &lt;sup&gt;&lt;i class=&#34;far fa-file-pdf&#34;&gt;&lt;/i&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;ブックマーク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://ed25519.cr.yp.to/&#34;&gt;Ed25519: high-speed high-security signatures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cryptrec.go.jp/topics/cryptrec-er-0001-2013.html&#34;&gt;擬似乱数生成アルゴリズム Dual_EC_DRBG について&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2017/10/key-parameters/&#34;&gt;暗号鍵関連の各種変数について&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://text.baldanders.info/remark/2020/06/upgrade-openssh-key/&#34;&gt;OpenSSH 鍵をアップグレードする（さようなら SHA-1）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; width=&#34;113&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/B015643CPE?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;結城 浩 (著)&lt;/dd&gt;
    &lt;dd&gt;SBクリエイティブ 2015-08-25 (Release 2015-09-17)&lt;/dd&gt;
    &lt;dd&gt;Kindle版&lt;/dd&gt;
    &lt;dd&gt;B015643CPE (ASIN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- 暗号技術入門 第3版 --&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;DSA に対する懸念は，実装に必要な技術要素が多すぎる点にあるかもしれない。如何にシンプルな設計で要件を満たすかってのは安全性を考える上でも重要であるというよい事例になっていると思う。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;edwards25519 は &lt;a href=&#34;http://cr.yp.to/ecdh.html&#34; title=&#34;Curve25519: high-speed elliptic-curve cryptography&#34;&gt;Curve25519&lt;/a&gt; と双有理同値である。ちなみに &lt;a href=&#34;http://cr.yp.to/ecdh.html&#34; title=&#34;Curve25519: high-speed elliptic-curve cryptography&#34;&gt;Curve25519&lt;/a&gt; は ECDH 用の楕円曲線およびそのライブラリで，公有（public domain）のソフトウェアとして公開されている。 &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
	</entry><entry>
		<title>Go 1.14.4 がリリースされた</title>
		<category term="release" label="release" scheme="https://text.baldanders.info/release/" />
		<link rel="alternate" type="text/html" href="https://text.baldanders.info/release/2020/06/go-1_14_4-is-released/" />
		<id>tag:text.Baldanders.info,2020-06-02:/release/2020/06/go-1_14_4-is-released/</id>
		<published>2020-06-02T01:33:09+00:00</published>
		<updated>2020-06-02T01:33:58+00:00</updated>
		<summary>セキュリティ・アップデートはなし。</summary>
		<author>
			<name>Spiegel</name>
			<uri>https://baldanders.info/profile/</uri>
		</author>
		
	<link rel="cc:license" type="application/rdf+xml" href="https://creativecommons.org/licenses/by-sa/4.0/rdf" />


		<content type="html" xml:lang="ja" xml:base="https://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; 1.14.4 がリリースされた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!topic/golang-announce/R0Ops9_eylQ&#34;&gt;Go 1.14.4 and Go 1.13.12 are released - Google group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;セキュリティ・アップデートはなし。&lt;/p&gt;
&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;q&gt;go1.14.4 (released 2020/06/01) includes fixes to the go doc command, the runtime, and the &lt;code&gt;encoding/json&lt;/code&gt; and &lt;code&gt;os&lt;/code&gt; packages. See the &lt;a href=&#34;https://github.com/golang/go/issues?q=milestone%3AGo1.14.4+label%3ACherryPickApproved&#34;&gt;Go 1.14.4 milestone&lt;/a&gt; on our issue tracker for details&lt;/q&gt;.&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/doc/devel/release.html#go1.14.minor&#34;&gt;Release History - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;例によって &lt;a href=&#34;https://www.ubuntu.com/&#34; title=&#34;The leading operating system for PCs, IoT devices, servers and the cloud | Ubuntu&#34;&gt;Ubuntu&lt;/a&gt; の APT で管理している &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go&lt;/a&gt; コンパイラは古いので，&lt;a href=&#34;https://golang.org/dl/&#34; title=&#34;Downloads - The Go Programming Language&#34;&gt;ダウンロードページ&lt;/a&gt;からバイナリ（&lt;a href=&#34;https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz&#34;&gt;&lt;code&gt;go1.14.4.linux-amd64.tar.gz&lt;/code&gt;&lt;/a&gt;）を取ってきて手動でインストールすることを強く推奨する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ cd /usr/local/src
$ sudo curl &amp;#34;https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz&amp;#34; -O
$ cd ..
$ sudo unlink go # 以前の Go が入っている場合
$ sudo tar xvf src/go1.14.4.linux-amd64.tar.gz
$ sudo mv go go1.14.4
$ sudo ln -s go1.14.4 go
$ go version # /usr/local/go/bin にパスが通っている場合
$ go version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;アップデートは計画的に。&lt;/p&gt;
&lt;h2&gt;参考図書&lt;/h2&gt;
&lt;div class=&#34;hreview&#34;&gt;
  &lt;div class=&#34;photo&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/41meaSLNFfL._SL160_.jpg&#34; width=&#34;123&#34; alt=&#34;photo&#34;&gt;&lt;/a&gt;&lt;/div&gt;
  &lt;dl class=&#34;fn&#34;&gt;
    &lt;dt&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4621300253?tag=baldandersinf-22&amp;amp;linkCode=ogi&amp;amp;th=1&amp;amp;psc=1&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;
    &lt;dd&gt;Alan A.A. Donovan (著), Brian W. Kernighan (著), 柴田 芳樹 (翻訳)&lt;/dd&gt;
    &lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;
    &lt;dd&gt;単行本（ソフトカバー）&lt;/dd&gt;
    &lt;dd&gt;4621300253 (ASIN), 9784621300251 (EAN), 4621300253 (ISBN), 9784621300251 (ISBN)&lt;/dd&gt;
    &lt;dd&gt;評価&lt;abbr class=&#34;rating fa-sm&#34; title=&#34;5&#34;&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&amp;nbsp;&lt;i class=&#34;fas fa-star&#34;&gt;&lt;/i&gt;&lt;/abbr&gt;&lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。この本は Go 言語の教科書と言ってもいいだろう。&lt;/p&gt;
  &lt;p class=&#34;powered-by&#34;&gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;https://affiliate.amazon.co.jp/assoc_credentials/home&#34;&gt;PA-APIv5&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; &lt;!-- プログラミング言語Go --&gt;
</content>
	</entry>
</feed>
