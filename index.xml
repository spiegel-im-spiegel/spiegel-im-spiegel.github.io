<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:cc="http://web.resource.org/cc/">
	<title>text.Baldanders.info</title>
	<link rel="alternate" type="text/html" href="http://text.baldanders.info/" />
	<link rel="self" type="application/atom+xml" href="http://text.baldanders.info/index.xml" />
	<id>tag:text.Baldanders.info,2018-03-17:/</id>
	<updated>2018-03-17T15:24:01+09:00</updated>
	<subtitle>帰ってきた「しっぽのさきっちょ」</subtitle>
	<icon>http://text.baldanders.info/images/avatar.jpg</icon>
	<logo>http://text.baldanders.info/images/avatar.jpg</logo>
	<generator uri="https://gohugo.io/">Hugo 0.37.1</generator>

	
	<entry>
		<title>欲しいものリスト2018年3月版 - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/wish-list-201803/" />
		<id>tag:text.Baldanders.info,2018-03-17:/remark/2018/03/wish-list-201803/</id>
		<published>2018-03-17T15:24:01+09:00</published>
		<updated>2018-03-17T15:24:01+09:00</updated>
		<summary> なんとなく恒例になってしまった年度末の「欲しいものリスト」の棚卸し。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今年も年度末になってしまいました。
なんとなく恒例になってしまった「欲しいものリスト」の棚卸し。
どんだけ溜め込んでるのやら。&lt;/p&gt;

&lt;p&gt;まずは&lt;a href=&#34;http://text.baldanders.info/remark/2017/03/wish-list-201703/&#34; title=&#34;欲しいものリスト2017年3月版&#34;&gt;昨年&lt;/a&gt;からまだ買ってない本で，なお読みたい本。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/479804413X/baldandersinf-22/&#34;&gt;クラウドを支えるこれからの暗号技術 | 光成 滋生 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/486641040X/baldandersinf-22/&#34;&gt;RSA暗号を可能にしたEulerの定理 | 田中 隆幸 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4860644980/baldandersinf-22/&#34;&gt;一般相対性理論を一歩一歩数式で理解する | 石井 俊全 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;で，以下は追加の「欲しいもの」。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4326403454/baldandersinf-22/&#34;&gt;ロボット法 | Ugo Pagallo, ウゴ パガロ, 新保 史生, 松尾 剛行, 工藤 郁子, 赤坂 亮太 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AI 関連はもうお腹いっぱいだし，そもそも AI 技術とか FinTech なんてのは若くて柔らかい脳みそのほうが向いてるので私のようなロートル・エンジニアがしゃしゃり出ることはないと思ってるんだけど，それでもこの本は早めに読んだほうがいい気がする。
でも高いんだよねぇ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tatsu-zine.com/books/infoshare2&#34;&gt;もうすぐ絶滅するという開かれたウェブについて  続・情報共有の未来 - 達人出版会&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/yomoyomo/20171226/openweb&#34;&gt;『もうすぐ絶滅するという開かれたウェブについて 続・情報共有の未来』サポートページ公開 - YAMDAS現更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;すんません。
今は一身上の都合で PayPal が使えないので，買えてません。
Google Pay か Amazon ギフトで買えたりしないのだろうか（笑） 年内には何とか手に入れたいとは思ってるんだけど，まず自分自身の立て直しが急務なので後回し。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274217884/baldandersinf-22/&#34;&gt;テスト駆動開発 | Kent Beck, 和田 卓人 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実は読んでない。
恥ずかしいです。
&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;で遊ぶようになってテスト駆動の有り難みが分かるようになった。
これからはテスト駆動やリファクタリングに厚い言語がいいよね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/dp/4532512239/&#34;&gt;地球外生命探査 (別冊日経サイエンス) | 日経サイエンス編集部 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4800313716/baldandersinf-22/&#34;&gt;天文学者が、宇宙人を本気で探してます！～地球外知的生命探査〈ＳＥＴＩ〉の最前線 | 鳴沢 真也 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4022515082/baldandersinf-22/&#34;&gt;母・娘・祖母が共存するために | 信田さよ子 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この辺は純粋に「面白そうなので読んでみたい本」。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.jp/exec/obidos/ASIN/4750515183/baldandersinf-22/&#34;&gt;性表現規制の文化史 | 白田 秀彰 |本 | 通販 | Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こちらは現在積ん読中。
年末年始で読むはずだったのだが，ラノベ三昧で読みそこねてしまった。
こちらも早めに読んでおきたい。&lt;/p&gt;

&lt;p&gt;他にも Kindle に積ん読中の本がそこそこ溜まってるんだよなぁ。
Kindle 端末は一覧性で紙の本棚に劣るので買ってたのを忘れてることもあったり。
既読率が100%未満の本を列挙する機能とかあればいいのに。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.baldanders.info/spiegel/log2/000824.shtml&#34;&gt;「欲しいものリスト」の棚卸し — Baldanders.info&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2017/03/wish-list-201703/&#34;&gt;欲しいものリスト2017年3月版&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://shiomachi.com/5021&#34;&gt;この素晴らしい「積読」の世界 | しおまち書房＜公式サイト＞広島&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.cafeglobe.com/2018/03/library.html&#34;&gt;“積ん読”はムダじゃなかった！ 「アンチライブラリー」という考え方 | cafeglobe&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>2018-03-17 のリリース情報 - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/17-releases/" />
		<id>tag:text.Baldanders.info,2018-03-17:/release/2018/03/17-releases/</id>
		<published>2018-03-17T12:48:39+09:00</published>
		<updated>2018-03-17T12:48:39+09:00</updated>
		<summary>「Python/HTMLサポートを改善した「Atom 1.25」が公開、「Electron」のアップデートも」他</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;最近リリースされたツールやサービスについて挙げておく。
私個人が気になっているものなので全く網羅的ではないが悪しからずご了承の程を。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1111079.html&#34;&gt;「秀丸エディタ」v8.79が正式公開 ～検索機能を強化、“バーチャルストア”警告も導入 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1110915.html&#34;&gt;Windows版「Slack」v3.1.0が公開、日本語フォントの微調整によりデザインがクリアに - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ciadr/vul/20180314-ms.html&#34;&gt;Microsoft 製品の脆弱性対策について(2018年3月)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jpcert.or.jp/at/2018/at180011.html&#34;&gt;2018年 3月マイクロソフトセキュリティ更新プログラムに関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/ciadr/vul/20180314-adobeflashplayer.html&#34;&gt;Adobe Flash Player の脆弱性対策について(APSB18-05)(CVE-2018-4919等)：IPA 独立行政法人 情報処理推進機構&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jpcert.or.jp/at/2018/at180010.html&#34;&gt;Adobe Flash Player の脆弱性 (APSB18-05) に関する注意喚起&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1111408.html&#34;&gt;Mozilla、「Firefox 59」を正式公開 ～新しいキャッシュ技術でパフォーマンス向上 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1111488.html&#34;&gt;「Tor Browser」v7.5.1が公開 ～「Firefox ESR 52.7.0」への更新で7件の脆弱性を修正 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1112116.html&#34;&gt;Python/HTMLサポートを改善した「Atom 1.25」が公開、「Electron」のアップデートも - 窓の杜&lt;/a&gt; : Windows 版は脆弱性の修正あり → &lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1103480.html&#34;&gt;「Electron」アプリに任意コードの実行を許す脆弱性 ～「Slack」や「Skype」に影響 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>go-myjvn パッケージを作ってみた - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/go-myjvn-v0_1_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-17:/release/2018/03/go-myjvn-v0_1_0-released/</id>
		<published>2018-03-17T00:20:43+09:00</published>
		<updated>2018-03-17T00:20:43+09:00</updated>
		<summary>spiegel-im-spiegel/go-myjvn パッケージは JVN が提供する「脆弱性対策情報共有フレームワーク」のひとつである MyJVN API を Go 言語でハンドリングするためのラッパークラスである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;ちょっと思いついて &lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn&#34; title=&#34;spiegel-im-spiegel/go-myjvn: Handling MyJVN RESTful API by Golang&#34;&gt;spiegel-im-spiegel/go-myjvn&lt;/a&gt; パッケージを作ってみた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn&#34;&gt;spiegel-im-spiegel/go-myjvn: Handling MyJVN RESTful API by Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn&#34; title=&#34;spiegel-im-spiegel/go-myjvn: Handling MyJVN RESTful API by Golang&#34;&gt;spiegel-im-spiegel/go-myjvn&lt;/a&gt; パッケージは &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; が提供する「&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/&#34; title=&#34;脆弱性対策情報共有フレームワーク - MyJVN&#34;&gt;脆弱性対策情報共有フレームワーク&lt;/a&gt;」のひとつである &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; を &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;でハンドリングするためのラッパークラスである。
今のところ，以下の API をサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnOverviewList_api_hnd.html&#34; title=&#34;MyJVN - API: getVulnOverviewList&#34;&gt;脆弱性対策概要情報一覧の取得（getVulnOverviewList）&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;期間および深刻度によるフィルタリングをサポート&lt;/li&gt;
&lt;li&gt;日本語のみサポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnDetailInfo_api_hnd.html&#34; title=&#34;MyJVN - API: getVulnDetailInfo&#34;&gt;脆弱性対策詳細情報の取得（getVulnDetailInfo）&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;日本語のみサポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;サンプルコードとして &lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn/blob/master/cli/vulnlist/main.go&#34;&gt;&lt;code&gt;go-myjvn/cli/vulnlist/main.go&lt;/code&gt;&lt;/a&gt; も書いてみた。
中身については実際のコードを見てもらうとして（やっつけコードでゴメンペコン），実際に動かすこともできる。
以下のように2つの年月日を指定して，その期間の脆弱性情報を JSON 形式で吐き出す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 2018-02-16 2018-03-16&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに1ヶ月とかの幅で期間を指定すると100件以上取ってきてワケワカメになるのでご注意を。
&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; コマンドをかませると JSON 出力をいい感じに整形してくれるので多少読みやすくなるだろう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run main.go 2018-02-16 2018-03-16 | jq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/go-myjvn&#34; title=&#34;spiegel-im-spiegel/go-myjvn: Handling MyJVN RESTful API by Golang&#34;&gt;spiegel-im-spiegel/go-myjvn&lt;/a&gt; パッケージは最低限の機能しかないが，最終的にはこれを利用して脆弱性情報を帳票出力するところまで持っていきたい。
まぁ，余暇でやってることなので牛の如き歩みだけど。&lt;/p&gt;

&lt;p&gt;なお，脆弱性情報収集を含めた統合的なソリューションが望みなら &lt;a href=&#34;https://vuls.io/&#34; title=&#34;Vuls · Agentless Vulnerability Scanner for Linux/FreeBSD&#34;&gt;Vuls&lt;/a&gt; がいいらしい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vuls.io/&#34;&gt;Vuls · Agentless Vulnerability Scanner for Linux/FreeBSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linux および FreeBSD 用だが &lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;製で GPLv3 で公開されている。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2018/03/myjvn-api/&#34;&gt;MyJVN API に関する覚え書き&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>XML データの Unmarshalling - golang</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/golang/unmarshalling-xml/" />
		<id>tag:text.Baldanders.info,2018-03-16:/golang/unmarshalling-xml/</id>
		<published>2018-03-16T20:40:27+09:00</published>
		<updated>2018-03-16T20:40:27+09:00</updated>
		<summary>Unmarshalling 自体は encoding/xml パッケージを使って簡単にできるが，問題は XML データを受け入れる構造体をどう定義するかである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="golang" label="golang" scheme="http://text.baldanders.info/golang" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;今回は XML の Unmarshalling について。
つっても Unmarshalling 自体は encoding/&lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;xml&lt;/a&gt; パッケージを使って&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;stdata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StructData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Unmarshal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xmldata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;などとすればよい。
問題は XML データを受け入れる構造体（上述のコードで言うなら &lt;code&gt;StructData&lt;/code&gt;）をどう定義するかだ。&lt;/p&gt;

&lt;p&gt;今回のお題となる XML データとして以下を考える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;rdf:RDF&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;xmlns:rdf=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;xmlns:foaf=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://xmlns.com/foaf/0.1/&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;xmlns:dc=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://purl.org/dc/terms/&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;xmlns:cc=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://web.resource.org/cc/&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;foaf:Document&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rdf:about=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://text.baldanders.info/&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:title&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;text.Baldanders.info&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:title&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:creator&amp;gt;&lt;/span&gt;Spiegel&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:creator&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:date&amp;gt;&lt;/span&gt;2018-03-16T20:40:27+09:00&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:date&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;cc:license&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;rdf:resource=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://creativecommons.org/licenses/by-sa/4.0/&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;nt&#34;&gt;&amp;lt;/foaf:Document&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/rdf:RDF&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この XML データの特徴は以下の通り。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;要素名や属性名が名前空間（namespace）を含んでいる&lt;/li&gt;
&lt;li&gt;要素の値として属性値と要素の内容（要素タグで囲まれているエリア）がある&lt;/li&gt;
&lt;li&gt;時刻情報（&lt;a href=&#34;https://tools.ietf.org/html/rfc3339&#34; title=&#34;RFC 3339 - Date and Time on the Internet: Timestamps&#34;&gt;RFC 3339&lt;/a&gt; 形式）を含んでいる&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これを &lt;a href=&#34;https://golang.org/ref/spec#Struct_types&#34; title=&#34;Struct types&#34;&gt;struct&lt;/a&gt; タグでどのように記述するかを次節から検討する。&lt;/p&gt;

&lt;h2 id=&#34;名前空間について&#34;&gt;名前空間について&lt;/h2&gt;

&lt;p&gt;たとえば名前空間を含まない&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;creator&amp;gt;&lt;/span&gt;Spiegel&lt;span class=&#34;nt&#34;&gt;&amp;lt;/creator&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;であれば &lt;a href=&#34;https://golang.org/ref/spec#Struct_types&#34; title=&#34;Struct types&#34;&gt;struct&lt;/a&gt; タグは単純に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Creator&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;creator&amp;#34;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と記述できる。
しかし実際には&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:creator&amp;gt;&lt;/span&gt;Spiegel&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:creator&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と名前空間を含んでいるため， &lt;a href=&#34;https://golang.org/ref/spec#Struct_types&#34; title=&#34;Struct types&#34;&gt;struct&lt;/a&gt; タグを厳密に記述するなら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Creator&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ creator&amp;#34;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;とする必要がある。
名前空間の指定は短縮名の &lt;code&gt;dc&lt;/code&gt; ではなく URI &lt;code&gt;http://purl.org/dc/terms/&lt;/code&gt; を記述する。
なお（名前空間を除いた）要素名や属性の混濁がないのであれば&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Creator&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;creator&amp;#34;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のままでも問題なく parse できる。
この場合，名前空間は無視されるようだ。&lt;/p&gt;

&lt;h2 id=&#34;値の取得&#34;&gt;値の取得&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;dc:title&amp;gt;&lt;/code&gt; の値には属性値と要素の内容の複数が含まれている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;dc:title&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;text.Baldanders.info&lt;span class=&#34;nt&#34;&gt;&amp;lt;/dc:title&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これらの値を全て取得するなら &lt;a href=&#34;https://golang.org/ref/spec#Struct_types&#34; title=&#34;Struct types&#34;&gt;struct&lt;/a&gt; タグの記述は以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Title&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Language&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;lang,attr&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;,chardata&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ title&amp;#34;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちなみに要素の内容が &lt;code&gt;&amp;lt;![CDATA[ ... ]]&amp;gt;&lt;/code&gt; で囲まれるデータであれば &lt;code&gt;chardata&lt;/code&gt; ではなく &lt;code&gt;cdata&lt;/code&gt; を指定するとよい。&lt;/p&gt;

&lt;h2 id=&#34;時刻情報の処理&#34;&gt;時刻情報の処理&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Unmarshal()&lt;/code&gt; 関数には時刻情報を &lt;a href=&#34;https://golang.org/pkg/time/&#34; title=&#34;time - The Go Programming Language&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Time&lt;/code&gt; 型に変換するロジックは用意されていない（基本型ではないので当然だが）。
したがって文字列から &lt;a href=&#34;https://golang.org/pkg/time/&#34; title=&#34;time - The Go Programming Language&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Time&lt;/code&gt; 型に変換するロジックを自前で組み込む必要がある。&lt;/p&gt;

&lt;p&gt;今回はフォーマットが &lt;a href=&#34;https://tools.ietf.org/html/rfc3339&#34; title=&#34;RFC 3339 - Date and Time on the Internet: Timestamps&#34;&gt;RFC 3339&lt;/a&gt; であることを前提に以下のようにした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;UnmarshalXML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StartElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DecodeElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;tm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RFC3339&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;独自定義の &lt;code&gt;Time&lt;/code&gt; 型が &lt;a href=&#34;https://golang.org/pkg/time/&#34; title=&#34;time - The Go Programming Language&#34;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Time&lt;/code&gt; 型のラッパー・クラスになっている点に注目。
この &lt;code&gt;Time&lt;/code&gt; 型に &lt;code&gt;UnmarshalXML()&lt;/code&gt; 関数を定義している。
これで構造体の要素は以下のように記述できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Date&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ date&amp;#34;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Unmarshal()&lt;/code&gt; 関数は &lt;code&gt;Time&lt;/code&gt; 型を解析するために &lt;code&gt;Time.UnmarshalXML()&lt;/code&gt; 関数を呼び出すわけだ。
encoding/&lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;xml&lt;/a&gt; パッケージでは &lt;code&gt;UnmarshalXML()&lt;/code&gt; 関数は以下のように定義されている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Unmarshaler&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;UnmarshalXML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StartElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Unmarshaler&lt;/code&gt; インタフェースを持つ型であれば XML Unmarshalling 可能である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:marsh1&#34;&gt;&lt;a href=&#34;#fn:marsh1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;h2 id=&#34;サンプルコード&#34;&gt;サンプルコード&lt;/h2&gt;

&lt;p&gt;以上を踏まえてお題の XML データの Unmarshalling コードは以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;encoding/xml&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xmldata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;rdf:RDF
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  xmlns:rdf=&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  xmlns:foaf=&amp;#34;http://xmlns.com/foaf/0.1/&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  xmlns:dc=&amp;#34;http://purl.org/dc/terms/&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  xmlns:cc=&amp;#34;http://web.resource.org/cc/&amp;#34;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  &amp;lt;foaf:Document rdf:about=&amp;#34;http://text.baldanders.info/&amp;#34;&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;dc:title lang=&amp;#34;ja&amp;#34;&amp;gt;text.Baldanders.info&amp;lt;/dc:title&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;dc:creator&amp;gt;Spiegel&amp;lt;/dc:creator&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;dc:date&amp;gt;2018-03-16T20:40:27+09:00&amp;lt;/dc:date&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;    &amp;lt;cc:license rdf:resource=&amp;#34;http://creativecommons.org/licenses/by-sa/4.0/&amp;#34;/&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;  &amp;lt;/foaf:Document&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;/rdf:RDF&amp;gt;
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;UnmarshalXML&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Decoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StartElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DecodeElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;tm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RFC3339&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;RDF&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;XMLName&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns# RDF&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Document&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;URI&lt;/span&gt;   &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns# about,attr&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Title&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;Language&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;lang,attr,omitempty&amp;#34;`&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;Name&lt;/span&gt;     &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;,chardata&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ title&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Creator&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ creator&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Date&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt;   &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://purl.org/dc/terms/ date&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;License&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;URI&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://www.w3.org/1999/02/22-rdf-syntax-ns# resource,attr&amp;#34;`&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://web.resource.org/cc/ license&amp;#34;`&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;http://xmlns.com/foaf/0.1/ Document&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;rdf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;RDF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;xml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Unmarshal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;xmldata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rdf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;自前で解析するより遥かにマシだが，面倒くさいことには変わりない。
XML とか○ねばいいのに（笑）&lt;/p&gt;

&lt;p&gt;たとえば &lt;code&gt;&amp;lt;dc:title&amp;gt;&lt;/code&gt; 要素の内容だけ取れればええんじゃあ！ という場合は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;RDF&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Title&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`xml:&amp;#34;Document&amp;gt;title&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と要素を &lt;code&gt;&amp;gt;&lt;/code&gt; で繋ぐ記述も可能。
ただこの記述では名前空間をうまく指定できなかった。
うーん。&lt;/p&gt;

&lt;p&gt;XML の Marshalling については機会があれば。
つか，構造化されたデータを XML Marshalling するのは不毛な気がする。
フォーマットが決まってるのであればテンプレートを使ったほうが早いんじゃないかなぁ&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;おまけ-xml-unmarshal-関数の中身&#34;&gt;【おまけ】 xml.Unmarshal() 関数の中身&lt;/h2&gt;

&lt;p&gt;余談だが &lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Unmarshal()&lt;/code&gt; 関数の中身は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Unmarshal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NewDecoder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NewReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;となっている。&lt;/p&gt;

&lt;p&gt;したがって入力がバイトデータであれば，わざわざ自前で Reader を作って &lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.NewDecoder()&lt;/code&gt; を呼び出す必要はない。
逆に入力が Reader であるなら &lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.NewDecoder()&lt;/code&gt; で &lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Decoder&lt;/code&gt; を生成するほうがいいかもしれない。
状況で使い分けよう。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/golang/struct-tag/&#34;&gt;Struct タグについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/410V3ulwP5L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Alan A.A. Donovan Brian W. Kernighan 柴田 芳樹 &lt;/dd&gt;&lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798142417/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798142417.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スターティングGo言語 (CodeZine BOOKS)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117526/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117526.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Go言語によるWebアプリケーション開発&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4865940391/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4865940391.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Kotlinスタートブック -新しいAndroidプログラミング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4839959234/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4839959234.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Docker実戦活用ガイド&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274218961/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274218961.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グッド・マス ギークのための数・論理・計算機科学&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483993195X/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51oaN2iq9xL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/483993195X/baldandersinf-22/&#34;&gt;セマンティック HTML/XHTML&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;神崎 正英 &lt;/dd&gt;&lt;dd&gt;毎日コミュニケーションズ 2009-05-28&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;4&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4627829310/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4627829310.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;セマンティック・ウェブのためのRDF/OWL入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873114527/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873114527.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;セマンティックWeb プログラミング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4764904276/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4764904276.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Linked Data: Webをグローバルなデータ空間にする仕組み&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274202925/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274202925.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;オントロジー構築入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4501542101/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4501542101.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;トピックマップ入門 (セマンティック技術シリーズ)&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;残念ながら紙の本は実質的に絶版なんですよねぇ。是非デジタル化を希望します。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2014-08-17&#34;&gt;2014/08/17&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:marsh1&#34;&gt;もちろん Marshalling 用の &lt;a href=&#34;https://golang.org/pkg/encoding/xml/&#34; title=&#34;xml - The Go Programming Language&#34;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Marshaler&lt;/code&gt; インタフェースも存在する。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:marsh1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>MyJVN API に関する覚え書き - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/myjvn-api/" />
		<id>tag:text.Baldanders.info,2018-03-12:/remark/2018/03/myjvn-api/</id>
		<published>2018-03-12T22:47:09+09:00</published>
		<updated>2018-03-17T02:05:27+09:00</updated>
		<summary>MyJVN API は JVN が提供している「脆弱性対策情報共有フレームワーク」のひとつである。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; は &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; が提供している「&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/&#34; title=&#34;脆弱性対策情報共有フレームワーク - MyJVN&#34;&gt;脆弱性対策情報共有フレームワーク&lt;/a&gt;」のひとつである。
&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; ではメインサービスである RESTful API のほか， Twitter での情報配信も行っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/JVNiPedia&#34;&gt;@JVNiPedia&lt;/a&gt; : 脆弱性情報&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/MyJVN&#34;&gt;@MyJVN&lt;/a&gt; : バージョン更新情報&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は RESTful API に絞り，覚え書きとして残しておく（随時加筆予定）。
なお「&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/&#34; title=&#34;脆弱性対策情報共有フレームワーク - MyJVN&#34;&gt;脆弱性対策情報共有フレームワーク&lt;/a&gt;」では &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; と併せて以下のツールも提供している（どれも機能がイマイチなのが&amp;hellip;）。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MyJVN バージョンチェッカ（Windows 専用）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheck.html&#34;&gt;JRE 版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheckdotnet.html&#34;&gt;.NET 版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/vccheckcmd.html&#34;&gt;CLI 版&lt;/a&gt; （要 JRE）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/mjcheck.html&#34;&gt;MyJVN 脆弱性対策情報収集ツール&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/mjcheck3.html&#34;&gt;MyJVN 脆弱性対策情報フィルタリング収集ツール&lt;/a&gt; （要 Adobe AIR）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;myjvn-api-のライセンス&#34;&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; のライセンス&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; 自体の利用については以下に記載がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/termsofuse.html&#34;&gt;MyJVN - API: 利用上の留意事項&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを見れば分かるが， &lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; の利用には制限がありオープンでもフリーでもない点は注意が必要である。&lt;/p&gt;

&lt;p&gt;また &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; が提供しているデータにはデータベースの著作権が発生する筈だが，データの利用許諾範囲が明示されていないため，このままでは（著作権法上は）利用できない&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:c1&#34;&gt;&lt;a href=&#34;#fn:c1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。
データの取り扱いについて一定のリスクがある点も注意すべきだろう。&lt;/p&gt;

&lt;h2 id=&#34;myjvn-api-のバージョンアップ&#34;&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; のバージョンアップ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; は 2018-02-21 にバージョンアップしたが，これに伴い旧バージョンの API のほうは 2018-04-02 から使えなくなる。&lt;/p&gt;

&lt;figure&gt;
&lt;blockquote&gt;
&lt;q&gt;2018年2月20日以前の旧サービス（MyJVN API, MyJVNバージョンチェッカ等）は、2018年4月2日（月）以降は継続したサービス利用ができなくなります。旧サービスを継続して利用する場合には以下の案内を参考にして、MyJVN APIを使用する利用者プログラムを改修する、あるいは新ツールの再ダウンロードによる利用、などの対処を実施してください。&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/myjvn/svc-change.html&#34;&gt;SSL暗号化通信への対応に伴う注意事項（MyJVN API、MyJVNバージョンチェッカ等の仕様変更について）&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;RESTful API についてはスキーマが HTTP から HTTPS へ変更となり，場合によってはバージョン名（HND/ITM）を付加する必要がある。&lt;/p&gt;

&lt;p&gt;深刻度（severity）の評価に注意すること。
旧バージョンでは CVSSv2 ベースだったが，新バージョンでは CVSSv3 ベースになっている。
両者は以下のように異なっている。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;深刻度&lt;/th&gt;
&lt;th&gt;CVSSv2 Base スコア&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;危険&lt;/td&gt;
&lt;td&gt;7.0 - 10.0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;警告&lt;/td&gt;
&lt;td&gt;4.0 - 6.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;注意&lt;/td&gt;
&lt;td&gt;0.0 - 3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;深刻度&lt;/th&gt;
&lt;th&gt;CVSSv3 Base スコア&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;緊急（Critical）&lt;/td&gt;
&lt;td&gt;9.0 - 10.0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;重要（High）&lt;/td&gt;
&lt;td&gt;7.0 - 8.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;警告（Medium）&lt;/td&gt;
&lt;td&gt;4.0 - 6.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;注意（Low）&lt;/td&gt;
&lt;td&gt;0.1 - 3.9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;なし（None）&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;以降から個々の API について概説する。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性対策概要情報一覧の取得&#34;&gt;脆弱性対策概要情報一覧の取得&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnOverviewList_api_hnd.html&#34;&gt;getVulnOverviewList (ver. HND)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;curl-as-dsl&#34;&gt;&lt;a href=&#34;https://shibukawa.github.io/curl_as_dsl/&#34; title=&#34;cURL as DSL — cURL as DSL 1.0 documentation&#34;&gt;cURL as DSL&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;とりあえず必須オプションのみ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:curl1&#34;&gt;&lt;a href=&#34;#fn:curl1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
過去1週間の情報を取得する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -G -d &amp;quot;method=getVulnOverviewList&amp;quot; -d &amp;quot;feed=hnd&amp;quot; -d &amp;quot;lang=ja&amp;quot; https://jvndb.jvn.jp/myjvn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;必須オプションの他に期間やフィルタリング条件などを設定できる。
1回の API 発行で取得できる最大件数は50。&lt;/p&gt;

&lt;p&gt;出力フォーマットは XML で RSS 1.0 形式。
ただし &lt;a href=&#34;https://jvndb.jvn.jp/schema/mod_sec.html&#34; title=&#34;JVNRSS: Qualified Security Advisory Reference (mod_sec)&#34;&gt;mod_sec&lt;/a&gt; と呼ばれる &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; 独自のスキーマを含んでいて，通常のフィード情報の他に脆弱性情報も記述されている。
なお，詳細を取得したいのであれば次の &lt;code&gt;getVulnDetailInfo&lt;/code&gt; を使うほうがよい。&lt;/p&gt;

&lt;h2 id=&#34;脆弱性対策詳細情報の取得&#34;&gt;脆弱性対策詳細情報の取得&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/getVulnDetailInfo_api_hnd.html&#34;&gt;getVulnDetailInfo (ver. HND)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;curl-as-dsl-1&#34;&gt;&lt;a href=&#34;https://shibukawa.github.io/curl_as_dsl/&#34; title=&#34;cURL as DSL — cURL as DSL 1.0 documentation&#34;&gt;cURL as DSL&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;とりあえず必須オプションのみ。
以下は JVNDB-2018-000024 の情報を取得する場合。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -G -d &amp;quot;method=getVulnDetailInfo&amp;quot; -d &amp;quot;feed=hnd&amp;quot; -d &amp;quot;lang=ja&amp;quot; -d &amp;quot;vulnId=JVNDB-2018-000024&amp;quot; https://jvndb.jvn.jp/myjvn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;脆弱性対策情報ID（&lt;code&gt;vulnId&lt;/code&gt;）が複数ある場合は &lt;code&gt;vulnId=JVNDB-2018-000024+JVNDB-2018-000022&lt;/code&gt; という感じに &lt;code&gt;+&lt;/code&gt; で繋いで指定できる。
1回の API 発行で取得できる最大件数は10。&lt;/p&gt;

&lt;p&gt;出力フォーマットは XML で &lt;a href=&#34;http://jvnrss.ise.chuo-u.ac.jp/jtg/vuldef/index.ja.html&#34; title=&#34;VULDEF: The VULnerability Data publication and Exchange Format data model&#34;&gt;VULDEF&lt;/a&gt; と呼ばれる &lt;a href=&#34;https://jvn.jp/&#34; title=&#34;Japan Vulnerability Notes&#34;&gt;JVN&lt;/a&gt; 独自のスキーマを使っている。
HTML ページ（たとえば &lt;a href=&#34;https://jvndb.jvn.jp/ja/contents/2018/JVNDB-2018-000024.html&#34; title=&#34;JVNDB-2018-000024 - JVN iPedia - 脆弱性対策情報データベース&#34;&gt;JVNDB-2018-000024&lt;/a&gt;）に記載されている内容はほぼ網羅されているため HTML ページをわざわざ scraping する必要はない。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/schema/jvnrss.html&#34;&gt;JVNRSS: Specification of Japan Vulnerability Notes RSS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jvndb.jvn.jp/schema/mod_sec.html&#34;&gt;JVNRSS: Qualified Security Advisory Reference (mod_sec)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvnrss.ise.chuo-u.ac.jp/jtg/vuldef/index.ja.html&#34;&gt;VULDEF: The VULnerability Data publication and Exchange Format data model&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://astaxie.gitbooks.io/build-web-application-with-golang/ja/07.1.html&#34;&gt;XMLの処理 · Build web application with Golang&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://vuls.io/&#34;&gt;Vuls · Agentless Vulnerability Scanner for Linux/FreeBSD&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/future-architect/vuls/&#34;&gt;future-architect/vuls: Vulnerability scanner for Linux/FreeBSD, agentless, written in Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1107654.html&#34;&gt;“JVN iPedia”がHTTPS対応などのリニューアル、「MyJVNバージョンチェッカ」は要更新 - 窓の杜&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/cvss-v3-metrics-in-jvn/&#34;&gt;JVN が CVSSv3 による脆弱性評価を開始&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/release/2018/03/go-myjvn-v0_1_0-released/&#34;&gt;go-myjvn パッケージを作ってみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:c1&#34;&gt;&lt;a href=&#34;https://jvndb.jvn.jp/apis/&#34;&gt;MyJVN API&lt;/a&gt; で取得したデータの利用については別途許諾を得る必要がある？
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:c1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:curl1&#34;&gt;&lt;code&gt;-G&lt;/code&gt; オプションは GET プロトコルを指す。明示するなら &lt;code&gt;-X GET&lt;/code&gt; とするのがいいかも。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:curl1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>電子署名を暗号ってゆーな！ - remark</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/remark/2018/03/encrypt-and-sign/" />
		<id>tag:text.Baldanders.info,2018-03-12:/remark/2018/03/encrypt-and-sign/</id>
		<published>2018-03-12T19:48:30+09:00</published>
		<updated>2018-03-12T19:48:30+09:00</updated>
		<summary>言われてみればその通りで，公開鍵暗号アルゴリズムをもとに組み上げられた電子署名アルゴリズムというのは RSA 署名くらいしかない。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="remark" label="remark" scheme="http://text.baldanders.info/remark" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;面白い記事を見つけた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/angel_p_57/items/d7ffb9ec13b4dde3357d&#34;&gt;「電子署名=『秘密鍵で暗号化』」という良くある誤解の話 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;内容を自分の中で咀嚼するのに1時間くらいかかってしまった。
年寄りはこれだから&amp;hellip;&lt;/p&gt;

&lt;p&gt;要するにこれって&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「電子署名を暗号ってゆーな！」&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ってことだよね。&lt;/p&gt;

&lt;p&gt;言われてみればその通りで，公開鍵暗号アルゴリズムをもとに組み上げられた電子署名アルゴリズムというのは RSA 署名くらいしかない。
ElGamal 署名は同じ鍵が使えるというだけでアルゴリズム自体は別物である&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:elg1&#34;&gt;&lt;a href=&#34;#fn:elg1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;まぁ，でも，公開鍵暗号といえば今でも RSA なイメージだし，そうなると「電子署名は公開鍵暗号の一種」という印象に引きずられるんだよなぁ。
今後は気を付けよう。&lt;/p&gt;

&lt;p&gt;というわけで「&lt;a href=&#34;http://text.baldanders.info/openpgp/algorithms-for-openpgp/&#34;&gt;OpenPGP で利用可能なアルゴリズム&lt;/a&gt;」の文言を少し変えてみた。
本家で絶賛放置プレイになっている「&lt;a href=&#34;http://www.baldanders.info/spiegel/archive/pgpdump/openpgp.shtml&#34;&gt;わかる！ OpenPGP 暗号&lt;/a&gt;」も内容が色々アレなのでいい加減書き直さないといけないんだけど，モチベーションが上がらないんだよねぇ&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:openpgp1&#34;&gt;&lt;a href=&#34;#fn:openpgp1&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;。
どうせ &lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-openpgp-rfc4880bis/&#34; title=&#34;draft-ietf-openpgp-rfc4880bis - OpenPGP Message Format&#34;&gt;RFC 4880bis&lt;/a&gt; が正式版になったら書き直さないといけないし，もうしばらく放置でいいか。&lt;/p&gt;

&lt;p&gt;ところで『&lt;a href=&#34;http://herumi.github.io/ango/&#34;&gt;クラウドを支えるこれからの暗号技術&lt;/a&gt;』は修正版がまるっと GitHub に上がってる気がするのだがいいのだろうか。
著者の方がいいなら外野がとやかく言うことではないが，私まだ読んでないぞ。
取り敢えず本は買って PDF 版を読むのがいいのか？&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://text.baldanders.info/openpgp/&#34;&gt;OpenPGP の実装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51t6yHHVwEL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門 第3版　秘密の国のアリス&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;結城 浩 &lt;/dd&gt;&lt;dd&gt;SBクリエイティブ 2015-08-25&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0148FQNVC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0148FQNVC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;自作エミュレータで学ぶx86アーキテクチャ　コンピュータが動く仕組みを徹底理解！&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLJM/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLJM.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/丸い三角関数&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00Y9EYOIW/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00Y9EYOIW.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/微分を追いかけて&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B012BYBTZC/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B012BYBTZC.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;情報セキュリティ白書2015: サイバーセキュリティ新時代：あらゆる変化へ柔軟な対応を&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B00W6NCLL0/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B00W6NCLL0.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;数学ガールの秘密ノート/数列の広場&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;SHA-3 や Bitcoin/Blockchain など新しい知見や技術要素を大幅追加。暗号技術を使うだけならこれ1冊でとりあえず無問題。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2015-09-20&#34;&gt;2015-09-20&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/479804413X/baldandersinf-22/&#34;&gt;&lt;img src=&#34;https://images-fe.ssl-images-amazon.com/images/I/41ZOQaZu0SL._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/479804413X/baldandersinf-22/&#34;&gt;クラウドを支えるこれからの暗号技術&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;光成 滋生 &lt;/dd&gt;&lt;dd&gt;秀和システム 2015-06-24&lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4774196053/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4774196053.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;エンジニアリング組織論への招待 ~不確実性に向き合う思考と組織のリファクタリング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798053775/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798053775.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;アプリケーションエンジニアのためのApache Spark入門&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B0788XWJQX/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/B0788XWJQX.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ソフトウェアデザイン 2018年3月号&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4061538314/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4061538314.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ブロックチェーン・プログラミング 仮想通貨入門 (KS情報科学専門書)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797382228/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797382228.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号技術入門 第3版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4822258424/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4822258424.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ブロックチェーン技術の未解決問題&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4757103670/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4757103670.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;ビットコインとブロックチェーン:暗号通貨を支える技術&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4797395451/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4797395451.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;プログラマの数学第2版&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873118255/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873118255.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;仕事ではじめる機械学習&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4627847513/baldandersinf-22/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4627847513.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;暗号理論と楕円曲線&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;まだ読んでない。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2018-03-12&#34;&gt;2018-03-12&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:elg1&#34;&gt;ちなみに &lt;a href=&#34;http://openpgp.org/&#34;&gt;OpenPGP&lt;/a&gt; では同じ ElGamal 鍵で暗号化と署名を行うことを&lt;a href=&#34;https://lists.gnupg.org/pipermail/gnupg-users/2003-November/020772.html&#34;&gt;禁止した&lt;/a&gt;。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:elg1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:openpgp1&#34;&gt;いや，ほら，最近は『&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/B015643CPE/baldandersinf-22/&#34;&gt;暗号技術入門&lt;/a&gt;』みたいな良書もあるし，暗号技術に対する要件も多様化してるしね。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:openpgp1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>NYAGOS 4.2.4_0 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/nyagos-4_2_4_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-11:/release/2018/03/nyagos-4_2_4_0-released/</id>
		<published>2018-03-11T15:28:00+09:00</published>
		<updated>2018-03-11T15:28:00+09:00</updated>
		<summary>細かい機能の変更や修正がメイン。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/&#34; title=&#34;zetamatta/nyagos: NYAGOS - The hybrid UNIXLike Commandline Shell for Windows&#34;&gt;NYAGOS&lt;/a&gt; 4.2.4_0 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0 · zetamatta/nyagos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;細かい機能の変更や修正がメイン。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; is avaliable instead of &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load &lt;code&gt;nyagos.d/*.ny&lt;/code&gt; as batchlike file&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; forbides overwriting existing file by redirect.&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; and &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; enable to overwrite the file already existing by redirect even if &lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;#270: Console input buffer has been cleaned up when prompt is drawn.&lt;/li&gt;
&lt;li&gt;#228: Completion supports $ENV[TAB]&amp;hellip; by native&lt;/li&gt;
&lt;li&gt;#275: Fix: history substitution like &lt;code&gt;!str:$&lt;/code&gt; , &lt;code&gt;!?str?:$&lt;/code&gt; did not work.&lt;/li&gt;
&lt;li&gt;The error &lt;code&gt;event not found&lt;/code&gt; is caused when the event pointed !y does note exists.&lt;/li&gt;
&lt;li&gt;#285: Not wait GUI-process not using pipeline terminating like CMD.EXE (Call them with ShellExecute() instead of CreateProcess() )&lt;/li&gt;
&lt;li&gt;(Replaced &lt;code&gt;bytes.Buffer&lt;/code&gt; to &lt;code&gt;strings.Builder&lt;/code&gt; and Go 1.10 is required to build)&lt;/li&gt;
&lt;li&gt;When more than one are to be executed with &lt;code&gt;open&lt;/code&gt; at once, display error: &lt;code&gt;open: ambiguous shellexecute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fix that &lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; could not remove the alias.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;lua: ole: &lt;code&gt;variable = OLE.property&lt;/code&gt; が &lt;code&gt;OLE:_get(&#39;property&#39;)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;lua: ole: &lt;code&gt;OLE.property = value&lt;/code&gt; が &lt;code&gt;OLE:_set(&#39;property&#39;,value)&lt;/code&gt; のかわりに使えるようになった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; のコマンドファイルも読み込むようにした&lt;/li&gt;
&lt;li&gt;#266: &lt;code&gt;lua_e &amp;quot;nyagos.option.noclobber = true&amp;quot;&lt;/code&gt; でリダイレクトでのファイル上書きを禁止&lt;/li&gt;
&lt;li&gt;#269: &lt;code&gt;&amp;gt;| FILENAME&lt;/code&gt; もしくは &lt;code&gt;&amp;gt;! FILENAME&lt;/code&gt; で、&lt;code&gt;nyagos.option.noclobber = true&lt;/code&gt; の時も上書きできるようにした&lt;/li&gt;
&lt;li&gt;#270: プロンプト表示時にコンソール入力バッファをクリアするようにした&lt;/li&gt;
&lt;li&gt;#228: $ENV[TAB] という補完をネイティブでサポート&lt;/li&gt;
&lt;li&gt;#275: !str:$ や !str?:$ といったヒストリ置換が機能しない不具合を修正&lt;/li&gt;
&lt;li&gt;! で指定されるヒストリが存在しない時「event not found」エラーを出させるようにした&lt;/li&gt;
&lt;li&gt;#285: パイプラインを使っていない GUIプログラムは CMD.EXE 同様終了を待たないようにした (CreateProcess ではなく ShellExecute を使用する)&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;bytes.Buffer&lt;/code&gt; を &lt;code&gt;strings.Builder&lt;/code&gt; に置き換えた。Go 1.10 が必要になった)&lt;/li&gt;
&lt;li&gt;複数のファイルが「open」で一度に開こうとした時、&lt;code&gt;open: ambiguous shellexecute&lt;/code&gt; とエラーを表示するようにした。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nyagos.alias.NAME = nil&lt;/code&gt; で alias を削除できなかった動作を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/zetamatta/nyagos/releases/tag/4.2.4_0&#34;&gt;Release 4.2.4_0&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;nyagos.d/*.ny&lt;/code&gt; は今回のリリース・パッケージには含まれてなかったのだけど，次回以降で入ってくるってことかなぁ？ それとも自前のスクリプトは &lt;code&gt;*.lua&lt;/code&gt; じゃなくて &lt;code&gt;*.ny&lt;/code&gt; にしろってことなのだろうか。&lt;/p&gt;

&lt;p&gt;（&lt;strong&gt;追記：&lt;/strong&gt; &lt;code&gt;*.ny&lt;/code&gt; は単純にコマンドを列挙したバッチ処理を格納できるファイルだそうだ）&lt;/p&gt;

&lt;p&gt;アップデートは上書きコピーでOK。&lt;/p&gt;

&lt;h2 id=&#34;ブックマーク&#34;&gt;ブックマーク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/zetamatta/items/441ff50da7c8f3338260&#34;&gt;一見、NYAGOSの不具合に見える事例について（随時追記） - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/conemu-and-nyagos/&#34;&gt;ようやく ConEmu と NYAGOS を導入した&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://text.baldanders.info/remark/2015/nyagos-and-lua/&#34;&gt;NYAGOS で Lua&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>2018-03-11 のリリース情報 - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/11-releases/" />
		<id>tag:text.Baldanders.info,2018-03-11:/release/2018/03/11-releases/</id>
		<published>2018-03-11T14:37:32+09:00</published>
		<updated>2018-03-11T14:37:32+09:00</updated>
		<summary>「We have released version 3.0 of OpenPGPjs, an open source OpenPGP library」他</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;最近リリースされたツールやサービスについて挙げておく。
私個人が気になっているものなので全く網羅的ではないが悪しからずご了承の程を。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.publickey1.jp/blog/18/java_eejakarta_ee.html&#34;&gt;Java EEに代わる新名称が「Jakarta EE」に決定 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20180304-592713/&#34;&gt;PostgreSQL、脆弱性修正したバージョン公開 - 確認推奨 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20180304-592704/&#34;&gt;脆弱性修正したPHP 5.6.34、7.0.28、7.2.3公開 | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft 祭り（笑）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109773.html&#34;&gt;「Windows 10 Insider Preview」Build 17112が公開 ～“Mixed Reality”の利用には注意 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109967.html&#34;&gt;Microsoft、2月の月例更新でUSB機器が動かなくなる問題を修正する「KB4090913」を公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109731.html&#34;&gt;“Spectre”脆弱性対策のファームウェアが“Microsoft Update カタログ”で提供開始 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109959.html&#34;&gt;Linuxディストリビューション「Kali Linux」が“ストア”から導入可能に - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1110173.html&#34;&gt;「Debian GNU/Linux」が“ストア”に登場 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1109995.html&#34;&gt;「Visual Studio 2017」v15.6が公開 ～インストールとセットアップが改善 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://forest.watch.impress.co.jp/docs/news/1110483.html&#34;&gt;Microsoft、無償コードエディター「Visual Studio Code」の2月アップデートを公開 - 窓の杜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94160143/&#34;&gt;JVNVU#94160143: ISC BIND 9 にサービス運用妨害 (DoS) の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jvn.jp/vu/JVNVU94629912/&#34;&gt;JVNVU#94629912: ISC DHCP にサービス運用妨害 (DoS) の脆弱性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://protonmail.com/blog/openpgpjs-3-release/&#34;&gt;We have released version 3.0 of OpenPGPjs, an open source OpenPGP library - ProtonMail Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Gocli Package v0.8.0 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/gocli-package-v0_8_0-released/" />
		<id>tag:text.Baldanders.info,2018-03-08:/release/2018/03/gocli-package-v0_8_0-released/</id>
		<published>2018-03-08T22:28:19+09:00</published>
		<updated>2018-03-08T22:28:19+09:00</updated>
		<summary>Ruby の Dir.glob にあるようなディレクトリの再帰検索ができる file.Glob() 関数を作ってみた。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">

&lt;p&gt;この前 &lt;a href=&#34;http://text.baldanders.info/release/2018/03/gocli-package-v0_7_0-released/&#34;&gt;v0.7.0 をリリースした&lt;/a&gt;ばかりだが，舌の根も乾かぬうちに v0.8.0 をリリースしてしまった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli/releases/tag/v0.8.0&#34;&gt;Release v0.8.0 Released · spiegel-im-spiegel/gocli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回はファイル・ディレクトリ操作用の &lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Minimal Packages for Command-Line Interface&#34;&gt;&lt;code&gt;gocli&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/file&lt;/code&gt; サブパッケージを追加した。&lt;/p&gt;

&lt;p&gt;実は &lt;a href=&#34;https://github.com/mattn/jvgrep&#34; title=&#34;mattn/jvgrep: grep for japanese vimmer&#34;&gt;mattn/jvgrep&lt;/a&gt; を使ってみてディレクトリの再帰検索はなかなか便利なことに気づき，自分でも実装してみようと思ったのだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;標準の &lt;a href=&#34;https://golang.org/pkg/path/filepath/&#34; title=&#34;filepath - The Go Programming Language&#34;&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Glob()&lt;/code&gt; 関数はなかなか性能がよくて，パス検索に以下のワイルドカードが使える。&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;pattern:
    { term }
term:
    &#39;*&#39;         matches any sequence of non-Separator characters
    &#39;?&#39;         matches any single non-Separator character
    &#39;[&#39; [ &#39;^&#39; ] { character-range } &#39;]&#39;
                character class (must be non-empty)
    c           matches character c (c != &#39;*&#39;, &#39;?&#39;, &#39;\\&#39;, &#39;[&#39;)
    &#39;\\&#39; c      matches character c

character-range:
    c           matches character c (c != &#39;\\&#39;, &#39;-&#39;, &#39;]&#39;)
    &#39;\\&#39; c      matches character c
    lo &#39;-&#39; hi   matches character c for lo &amp;lt;= c &amp;lt;= hi
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://golang.org/pkg/path/filepath/&#34;&gt;filepath - The Go Programming Language&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;しかし，残念ながら Ruby の &lt;a href=&#34;https://docs.ruby-lang.org/ja/latest/class/Dir.html&#34; title=&#34;Class: Dir (Ruby 2.5.0)&#34;&gt;&lt;code&gt;Dir&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.glob&lt;/code&gt; にあるようなディレクトリの再帰検索（&lt;code&gt;**/&lt;/code&gt;）は用意されていない。
そこで今回  &lt;a href=&#34;https://golang.org/pkg/path/filepath/&#34; title=&#34;filepath - The Go Programming Language&#34;&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Glob()&lt;/code&gt; と &lt;a href=&#34;https://golang.org/pkg/path/filepath/&#34; title=&#34;filepath - The Go Programming Language&#34;&gt;&lt;code&gt;filepath&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.Walk()&lt;/code&gt; を組み合わせる形で &lt;code&gt;file.Glob()&lt;/code&gt; 関数を作ってみた。&lt;/p&gt;

&lt;p&gt;こんなふうに使える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/spiegel-im-spiegel/gocli/file&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ErrInvalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;paths&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NewGlobOption&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;range&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;paths&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これを実行するとこんな感じになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$ go run /path/to/search.go  **/*.lua
nyagos.d\aliasandset.lua
nyagos.d\aliases.lua
nyagos.d\backquote.lua
nyagos.d\box.lua
nyagos.d\brace.lua
nyagos.d\catalog\autocd.lua
nyagos.d\catalog\autols.lua
nyagos.d\catalog\cho.lua
nyagos.d\catalog\dollar.lua
nyagos.d\catalog\ezoe.lua
nyagos.d\catalog\git.lua
nyagos.d\catalog\gogit.lua
nyagos.d\catalog\neco.lua
nyagos.d\catalog\nyagosini.lua
nyagos.d\catalog\peco.lua
nyagos.d\catalog\subcomplete.lua
nyagos.d\cdlnk.lua
nyagos.d\comspec.lua
nyagos.d\lns.lua
nyagos.d\open.lua
nyagos.d\start.lua
nyagos.d\su.lua
nyagos.d\suffix.lua
nyagos.d\swapstdfunc.lua
nyagos.d\trash.lua
nyagos.d\use.lua&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go 言語&lt;/a&gt;製なので，フォルダの区切り文字には &lt;code&gt;&#39;/&#39;&lt;/code&gt; と &lt;code&gt;&#39;\&#39;&lt;/code&gt; の両方が使える。
また出力結果の内，フォルダについては末尾にフォルダ区切り文字（&lt;code&gt;&#39;/&#39;&lt;/code&gt; または &lt;code&gt;&#39;\&#39;&lt;/code&gt;）を付加している。
その他，細かい使い方については &lt;code&gt;glob_test.go&lt;/code&gt; を参照のこと。&lt;/p&gt;

&lt;p&gt;本当はもう少しスマートなコードを書きたかったんだけど，行き当たりばったりで書いてたらエラく汚いコードになってしまった。
まぁ，これが今の私の実力，ということで。
そのうち refactoring できる機会もあるかもしれない。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spiegel-im-spiegel/gocli&#34; title=&#34;spiegel-im-spiegel/gocli: Minimal Packages for Command-Line Interface&#34;&gt;spiegel-im-spiegel/gocli&lt;/a&gt; パッケージは CLI (Command-Line Interface) を組む際に（主に自分が）便利な細々とした機能を収録している。
他の人には使いにくいかもしれないし大した内容でもないため &lt;a href=&#34;https://creativecommons.org/publicdomain/zero/1.0/&#34; title=&#34;Creative Commons — CC0 1.0 Universal&#34;&gt;CC0&lt;/a&gt; で公開している。
一切の権利を放棄しているので自由に持っていって弄っていただいて構わない。&lt;/p&gt;

&lt;h2 id=&#34;参考図書&#34;&gt;参考図書&lt;/h2&gt;

&lt;div class=&#34;hreview&#34; &gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/410V3ulwP5L._SL160_.jpg&#34; alt=&#34;photo&#34; class=&#34;photo&#34;  /&gt;&lt;/a&gt;&lt;dl &gt;&lt;dt class=&#34;fn&#34;&gt;&lt;a class=&#34;item url&#34; href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4621300253/baldandersinf-22/&#34;&gt;プログラミング言語Go (ADDISON-WESLEY PROFESSIONAL COMPUTING SERIES)&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;Alan A.A. Donovan Brian W. Kernighan 柴田 芳樹 &lt;/dd&gt;&lt;dd&gt;丸善出版 2016-06-20&lt;/dd&gt;&lt;dd&gt;評価&lt;abbr class=&#34;rating&#34; title=&#34;5&#34;&gt;&lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/abbr&gt; &lt;/dd&gt;&lt;/dl&gt;&lt;p class=&#34;similar&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798142417/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4798142417.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;スターティングGo言語 (CodeZine BOOKS)&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873117526/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4873117526.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Go言語によるWebアプリケーション開発&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4865940391/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4865940391.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Kotlinスタートブック -新しいAndroidプログラミング&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4839959234/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4839959234.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;Docker実戦活用ガイド&#34;  /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274218961/baldandersinf-22/&#34; target=&#34;_top&#34;&gt;&lt;img src=&#34;http://images.amazon.com/images/P/4274218961.09._SCTHUMBZZZ_.jpg&#34;  alt=&#34;グッド・マス ギークのための数・論理・計算機科学&#34;  /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class=&#34;description&#34;&gt;著者のひとりは（あの「バイブル」とも呼ばれる）通称 “K&amp;amp;R” の K のほうである。&lt;/p&gt;
&lt;p class=&#34;gtools&#34; &gt;reviewed by &lt;a href=&#39;#maker&#39; class=&#39;reviewer&#39;&gt;Spiegel&lt;/a&gt; on &lt;abbr class=&#34;dtreviewed&#34; title=&#34;2016-07-13&#34;&gt;2016-07-13&lt;/abbr&gt; (powered by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34; &gt;G-Tools&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
</content>
	</entry>
	
	<entry>
		<title>Hugo v0.37.1 Released - release</title>
		<link rel="alternate" type="text/html" href="http://text.baldanders.info/release/2018/03/hugo-v0_37_1-released/" />
		<id>tag:text.Baldanders.info,2018-03-08:/release/2018/03/hugo-v0_37_1-released/</id>
		<published>2018-03-08T20:54:03+09:00</published>
		<updated>2018-03-08T20:54:03+09:00</updated>
		<summary>今回は v0.37 で発生した regression の修正。</summary>
		
			<author>
				<name>Spiegel</name>
				<uri>http://www.baldanders.info/spiegel/profile/</uri>
			</author>
			
	<link rel="cc:license" type="application/rdf+xml" href="http://creativecommons.org/licenses/by-sa/4.0/rdf" />


		
		<category term="release" label="release" scheme="http://text.baldanders.info/release" />
		<content type="html" xml:lang="ja" xml:base="http://text.baldanders.info/">&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; title=&#34;The world’s fastest framework for building websites | Hugo&#34;&gt;Hugo&lt;/a&gt; v0.37.1 がリリースされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.37.1&#34;&gt;Release v0.37.1 · gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回は v0.37 で発生した regression の修正で&lt;/p&gt;

&lt;figure lang=&#34;en&#34;&gt;
&lt;blockquote&gt;
&lt;q&gt;Image content such as SVG cannot be scaled with the built-in image processing methods, but it should still be possible to use them as page resources. This was a regression in Hugo 0.37 and is now fixed.&lt;/q&gt;
&lt;/blockquote&gt;
&lt;figcaption&gt;via &lt;q&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.37.1&#34;&gt;Release v0.37.1&lt;/a&gt;&lt;/q&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;とのことなので，該当する方はアップデートを。
私は自前で画像表示の shotcode を書いてるので無問題。&lt;/p&gt;
</content>
	</entry>
	
</feed>
